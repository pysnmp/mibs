#
# PySNMP MIB module LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/iee/LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 16:07:15 2024
# On host fv-az1245-338 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ifGeneralInformationGroup, = mibBuilder.importSymbols("IF-MIB", "ifGeneralInformationGroup")
lldpV2Xdot1MIB, = mibBuilder.importSymbols("LLDP-EXT-DOT1-V2-MIB", "lldpV2Xdot1MIB")
lldpV2RemIndex, lldpV2RemLocalDestMACAddress, lldpV2RemLocalIfIndex, lldpV2PortConfigEntry, lldpV2RemTimeMark, lldpV2LocPortIfIndex = mibBuilder.importSymbols("LLDP-V2-MIB", "lldpV2RemIndex", "lldpV2RemLocalDestMACAddress", "lldpV2RemLocalIfIndex", "lldpV2PortConfigEntry", "lldpV2RemTimeMark", "lldpV2LocPortIfIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, ObjectIdentity, IpAddress, Unsigned32, Counter32, Integer32, TimeTicks, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "ObjectIdentity", "IpAddress", "Unsigned32", "Counter32", "Integer32", "TimeTicks", "Counter64", "MibIdentifier")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
lldpXDot1EvbExtensions = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1))
lldpXDot1EvbExtensions.setRevisions(('2018-06-21 00:00', '2014-12-15 00:00', '2012-02-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: lldpXDot1EvbExtensions.setRevisionsDescriptions(('Published as part of IEEE Std 802.1Q 2017 revision.\n            Cross references updated and corrected.', 'Published as part of IEEE Std 802.1Q 2014 revision.\n            Cross references updated and corrected.', 'Initial version published as part of IEEE Std 802.1Qbg',))
if mibBuilder.loadTexts: lldpXDot1EvbExtensions.setLastUpdated('201806210000Z')
if mibBuilder.loadTexts: lldpXDot1EvbExtensions.setOrganization('IEEE 802.1 Working Group')
if mibBuilder.loadTexts: lldpXDot1EvbExtensions.setContactInfo('WG-URL: http://www.ieee802.org/1/\n            WG-EMail: STDS-802-1-L@IEEE.ORG\n\n          Contact: IEEE 802.1 Working Group Chair\n           Postal: C/O IEEE 802.1 Working Group\n                   IEEE Standards Association\n                   445 Hoes Lane\n                   Piscataway\n                   NJ 08854\n                   USA\n           E-mail: STDS-802-1-L@IEEE.ORG')
if mibBuilder.loadTexts: lldpXDot1EvbExtensions.setDescription('The LLDP Management Information Base extension module for\n            IEEE 802.1 organizationally defined discovery information\n            for the EVB extension objects.\n\n            This MIB module is rooted under the lldpXdot1StandAloneExtensions\n            OID arc, in order to allow it to be defined independently\n            of other 802.1 LLDP extension MIBs.\n\n            Unless otherwise indicated, the references in this\n            MIB module are to IEEE Std 802.1Q.\n\n            Copyright (C) IEEE (2018).  This version of this MIB module\n            is published as D.5.6 of IEEE Std 802.1Q;\n            see the standard itself for full legal notices.')
lldpXdot1StandAloneExtensions = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7))
lldpXdot1EvbMIB = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1))
lldpXdot1EvbObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1))
lldpXdot1EvbConfig = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 1))
lldpXdot1EvbLocalData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 2))
lldpXdot1EvbRemoteData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 3))
lldpXdot1EvbConfigEvbTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 1, 1), )
if mibBuilder.loadTexts: lldpXdot1EvbConfigEvbTable.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1EvbConfigEvbTable.setDescription('A table that controls selection of EVB\n         TLVs to be transmitted on individual ports.')
lldpXdot1EvbConfigEvbEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 1, 1, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", "lldpXdot1EvbConfigEvbEntry"))
lldpXdot1EvbConfigEvbEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpXdot1EvbConfigEvbEntry.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1EvbConfigEvbEntry.setDescription('LLDP configuration information that controls the\n        transmission of IEEE 802.1 organizationally defined \n        EVB TLV on LLDP transmission-capable ports.\n\n        This configuration object augments the lldpV2PortConfigEntry of\n        the LLDP-MIB, therefore it is only present along with the port\n        configuration defined by the associated lldpV2PortConfigEntry\n        entry.\n\n        Each active lldpConfigEntry is restored from non-volatile\n        storage (along with the corresponding lldpV2PortConfigEntry)\n        after a re-initialization of the management system.')
lldpXdot1EvbConfigEvbTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1EvbConfigEvbTxEnable.setReference('D.2.12')
if mibBuilder.loadTexts: lldpXdot1EvbConfigEvbTxEnable.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1EvbConfigEvbTxEnable.setDescription('The lldpXdot1EvbConfigEvbTxEnable, which is\n        defined as a truth value and configured by the network \n        management, determines whether the IEEE 802.1 organizationally\n        defined EVB TLV transmission is allowed \n        on a given LLDP transmission-capable port.\n\n        The value of this object is restored from non-volatile\n        storage after a re-initialization of the management system.')
lldpXdot1EvbConfigCdcpTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 1, 2), )
if mibBuilder.loadTexts: lldpXdot1EvbConfigCdcpTable.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1EvbConfigCdcpTable.setDescription('A table that controls selection of EVB\n         TLVs to be transmitted on individual ports.')
lldpXdot1EvbConfigCdcpEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 1, 2, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", "lldpXdot1EvbConfigCdcpEntry"))
lldpXdot1EvbConfigCdcpEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpXdot1EvbConfigCdcpEntry.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1EvbConfigCdcpEntry.setDescription('LLDP configuration information that controls the\n        transmission of IEEE 802.1 organizationally defined \n        CDCP TLV on LLDP transmission-capable ports.\n\n        This configuration object augments the lldpV2PortConfigEntry of\n        the LLDP-MIB, therefore it is only present along with the port\n        configuration defined by the associated lldpV2PortConfigEntry\n        entry.\n\n        Each active lldpConfigEntry is restored from non-volatile\n        storage (along with the corresponding lldpV2PortConfigEntry)\n        after a re-initialization of the management system.')
lldpXdot1EvbConfigCdcpTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 1, 2, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXdot1EvbConfigCdcpTxEnable.setReference('D.2.13')
if mibBuilder.loadTexts: lldpXdot1EvbConfigCdcpTxEnable.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1EvbConfigCdcpTxEnable.setDescription('The lldpXdot1EvbConfigCdcpTxEnable, which is\n        defined as a truth value and configured by the network \n        management, determines whether the IEEE 802.1 organizationally\n        defined CDCP TLV transmission is allowed \n        on a given LLDP transmission-capable port.\n\n        The value of this object is restored from non-volatile\n        storage after a re-initialization of the management system.')
lldpV2Xdot1LocEvbTlvTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 2, 1), )
if mibBuilder.loadTexts: lldpV2Xdot1LocEvbTlvTable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1LocEvbTlvTable.setDescription('This table contains one row per port of EVB\n            TLV information (as a part of the LLDP \n            802.1 organizational extension) on the local system\n            known to this agent.')
lldpV2Xdot1LocEvbTlvEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 2, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1LocEvbTlvEntry.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1LocEvbTlvEntry.setDescription('EVB TLV information about a \n            particular port component.')
lldpV2Xdot1LocEvbTlvString = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 514))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocEvbTlvString.setReference('D.2.12')
if mibBuilder.loadTexts: lldpV2Xdot1LocEvbTlvString.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1LocEvbTlvString.setDescription('This object contains the EVB TLV information string  \n            for the Port, as defined in D.2.13.\n            As the elements within the string are not individually\n            manipulated via SNMP (they are of concern only to the\n            state machines), the sub-structure of the string\n            is not visible as separate objects within the\n            local database.')
lldpV2Xdot1LocCdcpTlvTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 2, 2), )
if mibBuilder.loadTexts: lldpV2Xdot1LocCdcpTlvTable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1LocCdcpTlvTable.setDescription('This table contains one row per port of CDCP\n            TLV information (as a part of the LLDP \n            802.1 organizational extension) on the local system\n            known to this agent.')
lldpV2Xdot1LocCdcpTlvEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 2, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1LocCdcpTlvEntry.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1LocCdcpTlvEntry.setDescription('CDCP TLV information about a \n            particular port component.')
lldpV2Xdot1LocCdcpTlvString = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 514))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1LocCdcpTlvString.setReference('D.2.13')
if mibBuilder.loadTexts: lldpV2Xdot1LocCdcpTlvString.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1LocCdcpTlvString.setDescription('This object contains the CDCP TLV information string  \n            for the Port, as defined in D.2.14.\n            As the elements within the string are not individually\n            manipulated via SNMP (they are of concern only to the\n            state machines), the sub-structure of the string\n            is not visible as separate objects within the\n            local database.')
lldpV2Xdot1RemEvbTlvTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 3, 1), )
if mibBuilder.loadTexts: lldpV2Xdot1RemEvbTlvTable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1RemEvbTlvTable.setDescription('This table contains one row per port of EVB\n            TLV information (as a part of the LLDP \n            802.1 organizational extension) on the remote system\n            known to this agent.')
lldpV2Xdot1RemEvbTlvEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 3, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1RemEvbTlvEntry.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1RemEvbTlvEntry.setDescription('EVB TLV information about a \n            particular port component.')
lldpV2Xdot1RemEvbTlvString = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 514))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemEvbTlvString.setReference('D.2.12')
if mibBuilder.loadTexts: lldpV2Xdot1RemEvbTlvString.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1RemEvbTlvString.setDescription('This object contains the EVB TLV information string  \n            for the Port, as defined in D.2.13.\n            As the elements within the string are not individually\n            manipulated via SNMP (they are of concern only to the\n            state machines), the sub-structure of the string\n            is not visible as separate objects within the\n            local database.')
lldpV2Xdot1RemCdcpTlvTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 3, 2), )
if mibBuilder.loadTexts: lldpV2Xdot1RemCdcpTlvTable.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1RemCdcpTlvTable.setDescription('This table contains one row per port of CDCP\n            TLV information (as a part of the LLDP \n            802.1 organizational extension) on the remote system\n            known to this agent.')
lldpV2Xdot1RemCdcpTlvEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 3, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot1RemCdcpTlvEntry.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1RemCdcpTlvEntry.setDescription('CDCP TLV information about a \n            particular port component.')
lldpV2Xdot1RemCdcpTlvString = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 1, 1, 3, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 514))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot1RemCdcpTlvString.setReference('D.2.13')
if mibBuilder.loadTexts: lldpV2Xdot1RemCdcpTlvString.setStatus('current')
if mibBuilder.loadTexts: lldpV2Xdot1RemCdcpTlvString.setDescription('This object contains the CDCP TLV information string  \n            for the Port, as defined in D.2.14.\n            As the elements within the string are not individually\n            manipulated via SNMP (they are of concern only to the\n            state machines), the sub-structure of the string\n            is not visible as separate objects within the\n            local database.')
lldpXdot1EvbConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 2))
lldpXdot1EvbCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 2, 1))
lldpXdot1EvbGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 2, 2))
lldpXdot1EvbCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 2, 1, 1)).setObjects(("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", "lldpXdot1EvbGroup"), ("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", "ifGeneralInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXdot1EvbCompliance = lldpXdot1EvbCompliance.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1EvbCompliance.setDescription('A compliance statement for SNMP entities that implement\n         the IEEE 802.1 organizationally defined Congestion\n         Notification LLDP extension MIB.\n\n         This group is mandatory for agents that implement the \n         EVB evbSet TLV set.')
lldpXdot1EvbGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 32962, 7, 1, 2, 2, 1)).setObjects(("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", "lldpXdot1EvbConfigEvbTxEnable"), ("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", "lldpXdot1EvbConfigCdcpTxEnable"), ("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", "lldpV2Xdot1LocEvbTlvString"), ("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", "lldpV2Xdot1LocCdcpTlvString"), ("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", "lldpV2Xdot1RemEvbTlvString"), ("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", "lldpV2Xdot1RemCdcpTlvString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXdot1EvbGroup = lldpXdot1EvbGroup.setStatus('current')
if mibBuilder.loadTexts: lldpXdot1EvbGroup.setDescription('The collection of objects that support the\n        EVB evbSet TLV set.')
mibBuilder.exportSymbols("LLDP-EXT-DOT1-EVB-EXTENSIONS-MIB", lldpV2Xdot1RemEvbTlvString=lldpV2Xdot1RemEvbTlvString, lldpXdot1EvbConfig=lldpXdot1EvbConfig, lldpV2Xdot1LocEvbTlvTable=lldpV2Xdot1LocEvbTlvTable, lldpXdot1EvbConfigCdcpTable=lldpXdot1EvbConfigCdcpTable, lldpXdot1EvbCompliances=lldpXdot1EvbCompliances, lldpXdot1StandAloneExtensions=lldpXdot1StandAloneExtensions, lldpV2Xdot1LocCdcpTlvEntry=lldpV2Xdot1LocCdcpTlvEntry, lldpXdot1EvbConformance=lldpXdot1EvbConformance, lldpXdot1EvbGroups=lldpXdot1EvbGroups, lldpXdot1EvbConfigEvbTable=lldpXdot1EvbConfigEvbTable, lldpXdot1EvbMIB=lldpXdot1EvbMIB, lldpXdot1EvbConfigEvbEntry=lldpXdot1EvbConfigEvbEntry, lldpV2Xdot1LocEvbTlvString=lldpV2Xdot1LocEvbTlvString, lldpXdot1EvbLocalData=lldpXdot1EvbLocalData, lldpV2Xdot1RemCdcpTlvString=lldpV2Xdot1RemCdcpTlvString, lldpV2Xdot1RemEvbTlvEntry=lldpV2Xdot1RemEvbTlvEntry, lldpV2Xdot1LocCdcpTlvTable=lldpV2Xdot1LocCdcpTlvTable, lldpXdot1EvbGroup=lldpXdot1EvbGroup, lldpV2Xdot1LocEvbTlvEntry=lldpV2Xdot1LocEvbTlvEntry, lldpV2Xdot1LocCdcpTlvString=lldpV2Xdot1LocCdcpTlvString, lldpV2Xdot1RemCdcpTlvEntry=lldpV2Xdot1RemCdcpTlvEntry, lldpXDot1EvbExtensions=lldpXDot1EvbExtensions, PYSNMP_MODULE_ID=lldpXDot1EvbExtensions, lldpXdot1EvbConfigCdcpEntry=lldpXdot1EvbConfigCdcpEntry, lldpXdot1EvbObjects=lldpXdot1EvbObjects, lldpXdot1EvbConfigEvbTxEnable=lldpXdot1EvbConfigEvbTxEnable, lldpV2Xdot1RemEvbTlvTable=lldpV2Xdot1RemEvbTlvTable, lldpXdot1EvbRemoteData=lldpXdot1EvbRemoteData, lldpXdot1EvbCompliance=lldpXdot1EvbCompliance, lldpXdot1EvbConfigCdcpTxEnable=lldpXdot1EvbConfigCdcpTxEnable, lldpV2Xdot1RemCdcpTlvTable=lldpV2Xdot1RemCdcpTlvTable)
