#
# PySNMP MIB module RADLAN-UDP (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/radlan/RADLAN-UDP
# Produced by pysmi-1.1.12 at Wed Jul  3 12:07:44 2024
# On host fv-az768-763 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ipCidrRouteTos, ipCidrRouteMask, ipCidrRouteDest, ipCidrRouteNextHop, ipCidrRouteEntry = mibBuilder.importSymbols("IP-FORWARD-MIB", "ipCidrRouteTos", "ipCidrRouteMask", "ipCidrRouteDest", "ipCidrRouteNextHop", "ipCidrRouteEntry")
ipAddrEntry, = mibBuilder.importSymbols("IP-MIB", "ipAddrEntry")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
rip2IfConfEntry, = mibBuilder.importSymbols("RFC1389-MIB", "rip2IfConfEntry")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Unsigned32, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, ModuleIdentity, Integer32, Counter64, MibIdentifier, ObjectIdentity, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Unsigned32", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "ModuleIdentity", "Integer32", "Counter64", "MibIdentifier", "ObjectIdentity", "NotificationType", "IpAddress")
TruthValue, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TextualConvention", "DisplayString")
DisplayString, = mibBuilder.importSymbols("SNMPv2-TC-v1", "DisplayString")
rsUDP = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 42))
rsUDP.setRevisions(('2004-06-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rsUDP.setRevisionsDescriptions(('Initial version of this MIB.',))
if mibBuilder.loadTexts: rsUDP.setLastUpdated('200406010000Z')
if mibBuilder.loadTexts: rsUDP.setOrganization('Radlan Computer Communications Ltd.')
if mibBuilder.loadTexts: rsUDP.setContactInfo('radlan.com')
if mibBuilder.loadTexts: rsUDP.setDescription('The private MIB module definition for RND UDP MIB.')
rsUdpRelayTable = MibTable((1, 3, 6, 1, 4, 1, 89, 42, 1), )
if mibBuilder.loadTexts: rsUdpRelayTable.setStatus('current')
if mibBuilder.loadTexts: rsUdpRelayTable.setDescription('This table contains the udp relay configuration per port.')
rsUdpRelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 42, 1, 1), ).setIndexNames((0, "RADLAN-UDP", "rsUdpRelayDstPort"), (0, "RADLAN-UDP", "rsUdpRelaySrcIpInf"), (0, "RADLAN-UDP", "rsUdpRelayDstIpAddr"))
if mibBuilder.loadTexts: rsUdpRelayEntry.setStatus('current')
if mibBuilder.loadTexts: rsUdpRelayEntry.setDescription(' The row definition for this table.')
rsUdpRelayDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayDstPort.setStatus('current')
if mibBuilder.loadTexts: rsUdpRelayDstPort.setDescription('The UDP port number in the UDP message header.')
rsUdpRelaySrcIpInf = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelaySrcIpInf.setStatus('current')
if mibBuilder.loadTexts: rsUdpRelaySrcIpInf.setDescription('The source interface IP that receives UDP message.\n         255.255.255.255 from all IP interface.\n         0.0.0.0 - 0.255.255.255 and 127.0.0.0 - 127.255.255.255\n         not relevant addresses.')
rsUdpRelayDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayDstIpAddr.setStatus('current')
if mibBuilder.loadTexts: rsUdpRelayDstIpAddr.setDescription('The destination IP address the UDP message will be forward.\n         0.0.0.0 does not forward, 255.255.255.255 broadcasts to all\n         addresses.')
rsUdpRelayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsUdpRelayStatus.setStatus('current')
if mibBuilder.loadTexts: rsUdpRelayStatus.setDescription('The status of a table entry.\n        It is used to delete an entry from this table.')
rsUdpRelayUserInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsUdpRelayUserInfo.setStatus('current')
if mibBuilder.loadTexts: rsUdpRelayUserInfo.setDescription('The information used for implementation purposes')
rsUdpRelayMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 42, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayMibVersion.setStatus('current')
if mibBuilder.loadTexts: rsUdpRelayMibVersion.setDescription('Mib version. The current version is 1.')
mibBuilder.exportSymbols("RADLAN-UDP", rsUdpRelaySrcIpInf=rsUdpRelaySrcIpInf, rsUdpRelayDstIpAddr=rsUdpRelayDstIpAddr, rsUdpRelayStatus=rsUdpRelayStatus, rsUdpRelayEntry=rsUdpRelayEntry, rsUdpRelayDstPort=rsUdpRelayDstPort, rsUdpRelayUserInfo=rsUdpRelayUserInfo, PYSNMP_MODULE_ID=rsUDP, rsUdpRelayMibVersion=rsUdpRelayMibVersion, rsUdpRelayTable=rsUdpRelayTable, rsUDP=rsUDP)
