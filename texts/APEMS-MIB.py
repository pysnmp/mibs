#
# PySNMP MIB module APEMS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/oracle/APEMS-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 13:46:55 2024
# On host fv-az1530-906 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
acmepacketMgmt, = mibBuilder.importSymbols("ACMEPACKET-SMI", "acmepacketMgmt")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Gauge32, Integer32, NotificationType, IpAddress, ModuleIdentity, iso, Bits, Counter32, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "NotificationType", "IpAddress", "ModuleIdentity", "iso", "Bits", "Counter32", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "TimeTicks")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
apEMSModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9148, 3, 8))
apEMSModule.setRevisions(('2012-07-16 00:00', '2014-06-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: apEMSModule.setRevisionsDescriptions(('Updated contact information', 'Updated Organization and Contact info.',))
if mibBuilder.loadTexts: apEMSModule.setLastUpdated('201406260000Z')
if mibBuilder.loadTexts: apEMSModule.setOrganization('Oracle Communications')
if mibBuilder.loadTexts: apEMSModule.setContactInfo('           \tCustomer Service\n\t\t \tPostal:\t\tOracle Communications\n\t\t\t\t\t100 Crosby Drive \n\t\t\t\t\tBedford, MA 01730\n\t\t\t\t\tUS\n\t\t    \tTel:\t\t1-800-633-0738\n\t\t\tUrl:\t\twww.oracle.com\n\t\t \tE-mail:\t\tsupport@oracle.com')
if mibBuilder.loadTexts: apEMSModule.setDescription('The Net-Net EMS MIB for Oracle Communications Acme Packet SBCs')
apEMSMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 8, 1))
apEMSNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 8, 2))
apEMSDiscoveryMode = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 8, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("discovery", 1), ("reDiscovery", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apEMSDiscoveryMode.setStatus('current')
if mibBuilder.loadTexts: apEMSDiscoveryMode.setDescription('The discovery mode')
apEMSNodeID = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 8, 2, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apEMSNodeID.setStatus('current')
if mibBuilder.loadTexts: apEMSNodeID.setDescription('The identifier for a Net-Net EMS node.  This is the\n\t\t\tidentifier that appears on the navigation tree in \n\t\t\tthe Active Configuration area and on the discovery \n\t\t\ttable in the Host Name/IP Address column')
apEMSStartTime = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 8, 2, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apEMSStartTime.setStatus('current')
if mibBuilder.loadTexts: apEMSStartTime.setDescription('Time as configured at the Net-Net EMS server when\n\t\t\tan event occurs.')
apEMSDateTime = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 8, 2, 4), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apEMSDateTime.setStatus('current')
if mibBuilder.loadTexts: apEMSDateTime.setDescription('Time as configured at the Net-Net EMS server when an\n\t\t\tevent completes.')
apEMSUser = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 8, 2, 5), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apEMSUser.setStatus('current')
if mibBuilder.loadTexts: apEMSUser.setDescription('The user initiating the function.\n\t\t       If the function was initiated by the Net-Net EMS\n\t\t       application automatically, the\n\t\t       user will be system.')
apEMSDeviceAddress = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 8, 2, 6), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apEMSDeviceAddress.setStatus('current')
if mibBuilder.loadTexts: apEMSDeviceAddress.setDescription('The address for a device being managed.')
apEMSFunction = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 8, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("discovery", 1), ("reDiscovery", 2), ("save", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apEMSFunction.setStatus('current')
if mibBuilder.loadTexts: apEMSFunction.setDescription('The function being performed when the event occurred.')
apEMSNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3))
apEMSConfigNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3, 1))
apEMSConfigNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3, 1, 0))
apEMSDiscoveryFailure = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3, 1, 0, 1)).setObjects(("APEMS-MIB", "apEMSDiscoveryMode"), ("APEMS-MIB", "apEMSNodeID"), ("APEMS-MIB", "apEMSStartTime"), ("APEMS-MIB", "apEMSDateTime"), ("APEMS-MIB", "apEMSUser"))
if mibBuilder.loadTexts: apEMSDiscoveryFailure.setStatus('current')
if mibBuilder.loadTexts: apEMSDiscoveryFailure.setDescription('The notification will be generated whenever an error\n\t\tis detected during node discovery. ')
apEMSSaveFailure = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3, 1, 0, 2)).setObjects(("APEMS-MIB", "apEMSNodeID"), ("APEMS-MIB", "apEMSStartTime"), ("APEMS-MIB", "apEMSDateTime"), ("APEMS-MIB", "apEMSUser"))
if mibBuilder.loadTexts: apEMSSaveFailure.setStatus('current')
if mibBuilder.loadTexts: apEMSSaveFailure.setDescription('The notification will be generated whenever an save\n\t\tconfiguration request initiated by Net-Net EMS fails. ')
apEMSActivateFailure = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3, 1, 0, 3)).setObjects(("APEMS-MIB", "apEMSNodeID"), ("APEMS-MIB", "apEMSStartTime"), ("APEMS-MIB", "apEMSDateTime"), ("APEMS-MIB", "apEMSUser"))
if mibBuilder.loadTexts: apEMSActivateFailure.setStatus('current')
if mibBuilder.loadTexts: apEMSActivateFailure.setDescription('The notification will be generated whenever an activate\n\t\tconfiguration request initiated by Net-Net EMS fails`. ')
apEMSInvalidConfigDiscovered = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3, 1, 0, 4)).setObjects(("APEMS-MIB", "apEMSNodeID"), ("APEMS-MIB", "apEMSDateTime"))
if mibBuilder.loadTexts: apEMSInvalidConfigDiscovered.setStatus('current')
if mibBuilder.loadTexts: apEMSInvalidConfigDiscovered.setDescription('The notification will be generated whenever an invalid\n\t\tconfiguration is retrieved from a node.  Additional information\n\t\tabout the validity failure is available in the discovery log.')
apEMSInvalidConfigInventory = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3, 1, 0, 5)).setObjects(("APEMS-MIB", "apEMSFunction"), ("APEMS-MIB", "apEMSNodeID"), ("APEMS-MIB", "apEMSStartTime"), ("APEMS-MIB", "apEMSDateTime"), ("APEMS-MIB", "apEMSUser"))
if mibBuilder.loadTexts: apEMSInvalidConfigInventory.setStatus('current')
if mibBuilder.loadTexts: apEMSInvalidConfigInventory.setDescription('The notification will be generated whenever an inventory check\n\t\twas performed and failed.')
apEMSDeviceHealthNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3, 2))
apEMSDeviceHealthNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3, 2, 0))
apEMSNodeUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3, 2, 0, 1)).setObjects(("APEMS-MIB", "apEMSDeviceAddress"), ("APEMS-MIB", "apEMSDateTime"))
if mibBuilder.loadTexts: apEMSNodeUnreachable.setStatus('current')
if mibBuilder.loadTexts: apEMSNodeUnreachable.setDescription('The notification will be generated whenever a managed device is \n\t\tdetermined to be unreachable from the Net-Net EMS server. ')
apEMSNodeUnreachableClear = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 8, 3, 2, 0, 2)).setObjects(("APEMS-MIB", "apEMSDeviceAddress"), ("APEMS-MIB", "apEMSDateTime"))
if mibBuilder.loadTexts: apEMSNodeUnreachableClear.setStatus('current')
if mibBuilder.loadTexts: apEMSNodeUnreachableClear.setDescription('The notification will be generated whenever a previously\n\t\tunreachable managed device is determined to be reachable\n\t\tby the Net-Net EMS server. ')
apEMSModuleConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 8, 4))
apEMSGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 8, 4, 1))
apEMSNotificationsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 8, 4, 2))
apEMSNotificationObjectsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 8, 4, 3))
apEMSConfigNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 8, 4, 2, 1)).setObjects(("APEMS-MIB", "apEMSDiscoveryFailure"), ("APEMS-MIB", "apEMSSaveFailure"), ("APEMS-MIB", "apEMSActivateFailure"), ("APEMS-MIB", "apEMSInvalidConfigDiscovered"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apEMSConfigNotificationsGroup = apEMSConfigNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: apEMSConfigNotificationsGroup.setDescription('Provisioning notifications generated by the Net-Net EMS')
apEMSDeviceHealthNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 8, 4, 2, 2)).setObjects(("APEMS-MIB", "apEMSNodeUnreachable"), ("APEMS-MIB", "apEMSNodeUnreachableClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apEMSDeviceHealthNotificationsGroup = apEMSDeviceHealthNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: apEMSDeviceHealthNotificationsGroup.setDescription('Device reachability notifications generated by\n\t\t\tthe Net-Net EMS')
apEMSNotificationObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 8, 4, 3, 1)).setObjects(("APEMS-MIB", "apEMSDiscoveryMode"), ("APEMS-MIB", "apEMSNodeID"), ("APEMS-MIB", "apEMSStartTime"), ("APEMS-MIB", "apEMSDateTime"), ("APEMS-MIB", "apEMSUser"), ("APEMS-MIB", "apEMSDeviceAddress"), ("APEMS-MIB", "apEMSFunction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apEMSNotificationObjectsGroup = apEMSNotificationObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: apEMSNotificationObjectsGroup.setDescription('Objects for EMS Server reachability notifications.')
mibBuilder.exportSymbols("APEMS-MIB", apEMSConfigNotifications=apEMSConfigNotifications, apEMSFunction=apEMSFunction, apEMSNodeID=apEMSNodeID, apEMSUser=apEMSUser, apEMSNotificationObjectsGroups=apEMSNotificationObjectsGroups, PYSNMP_MODULE_ID=apEMSModule, apEMSConfigNotificationsGroup=apEMSConfigNotificationsGroup, apEMSNotificationObjectsGroup=apEMSNotificationObjectsGroup, apEMSMIBObjects=apEMSMIBObjects, apEMSDeviceHealthNotificationsPrefix=apEMSDeviceHealthNotificationsPrefix, apEMSModuleConformance=apEMSModuleConformance, apEMSNotificationObjects=apEMSNotificationObjects, apEMSConfigNotificationsPrefix=apEMSConfigNotificationsPrefix, apEMSNotifications=apEMSNotifications, apEMSDateTime=apEMSDateTime, apEMSStartTime=apEMSStartTime, apEMSNotificationsGroups=apEMSNotificationsGroups, apEMSModule=apEMSModule, apEMSInvalidConfigDiscovered=apEMSInvalidConfigDiscovered, apEMSGroups=apEMSGroups, apEMSInvalidConfigInventory=apEMSInvalidConfigInventory, apEMSActivateFailure=apEMSActivateFailure, apEMSSaveFailure=apEMSSaveFailure, apEMSNodeUnreachable=apEMSNodeUnreachable, apEMSDiscoveryFailure=apEMSDiscoveryFailure, apEMSDeviceAddress=apEMSDeviceAddress, apEMSNodeUnreachableClear=apEMSNodeUnreachableClear, apEMSDeviceHealthNotificationsGroup=apEMSDeviceHealthNotificationsGroup, apEMSDeviceHealthNotifications=apEMSDeviceHealthNotifications, apEMSDiscoveryMode=apEMSDiscoveryMode)
