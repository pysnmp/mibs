#
# PySNMP MIB module LIEBERT-GP-REGISTRATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/liebert/LIEBERT-GP-REG-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 13:31:35 2024
# On host fv-az883-167 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, Gauge32, ObjectIdentity, Bits, IpAddress, enterprises, Integer32, iso, Counter64, ModuleIdentity, NotificationType, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "Gauge32", "ObjectIdentity", "Bits", "IpAddress", "enterprises", "Integer32", "iso", "Counter64", "ModuleIdentity", "NotificationType", "TimeTicks", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
liebertGlobalProductsRegistrationModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 1, 1))
liebertGlobalProductsRegistrationModule.setRevisions(('2015-02-02 00:00', '2014-09-17 00:00', '2014-06-24 00:00', '2014-03-27 00:00', '2013-07-10 00:00', '2013-05-14 00:00', '2009-04-17 00:00', '2008-07-02 00:00', '2008-01-10 00:00', '2006-02-22 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setRevisionsDescriptions(('Added registration for GXT3 UPS', 'Added registration for new Thermal product variants', 'Added registration for EXM and variants', 'Added registration for NXr variants, EXL, NX variants, Air Handlers and RackPDU2', 'Added registration for GXT4 UPS', 'Added registration for NXL-JD and APS UPS', 'Added registrations for iCOM PA, XD, XP, SC and CR product families', 'Added PDU MIB registrations', 'Modified contact email address and added NXL registration.', 'Added support for Liebert DS Unit.',))
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setLastUpdated('201807120000Z')
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setOrganization('Liebert Corporation')
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setContactInfo('Contact:   Technical Support\n\n      Postal:\n      Liebert Corporation\n      1050 Dearborn Drive\n      P.O. Box 29186\n      Columbus OH, 43229\n      US\n\n      Tel: +1 (800) 222-5877\n\n      E-mail: liebert.monitoring@vertivco.com\n      Web:    www.vertivco.com\n\n      Author:  John Stephen Sark')
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setDescription("The MIB module used to register Liebert SNMP OIDs.\n\n      Copyright 2000-2018 Liebert Corporation. All rights reserved.\n      Reproduction of this document is authorized on the condition\n      that the forgoing copyright notice is included.\n\n      This Specification is supplied 'AS IS' and Liebert Corporation\n      makes no warranty, either express or implied, as to the use,\n      operation, condition, or performance of the Specification.")
vertiv = ObjectIdentity((1, 3, 6, 1, 4, 1, 476))
if mibBuilder.loadTexts: vertiv.setStatus('current')
if mibBuilder.loadTexts: vertiv.setDescription('The enterprise registration for Vertiv.')
liebertCorp = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1))
if mibBuilder.loadTexts: liebertCorp.setStatus('current')
if mibBuilder.loadTexts: liebertCorp.setDescription('Liebert Corporation obtains its branch from Vertiv.')
liebertGlobalProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42))
if mibBuilder.loadTexts: liebertGlobalProducts.setStatus('current')
if mibBuilder.loadTexts: liebertGlobalProducts.setDescription('This branch is used for Liebert Global Products\n               related information.')
if mibBuilder.loadTexts: liebertGlobalProducts.setReference('All objects registered under this branch must be\n               contained in this registration module.')
lgpModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1))
if mibBuilder.loadTexts: lgpModuleReg.setStatus('current')
if mibBuilder.loadTexts: lgpModuleReg.setDescription('The Liebert Global Products MODULE-IDENTITY OIDs are\n               registered via this branch.')
if mibBuilder.loadTexts: lgpModuleReg.setReference('The Liebert MODULE-IDENTITY(s) are registered below in\n               this registration module.')
lgpAgent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2))
if mibBuilder.loadTexts: lgpAgent.setStatus('current')
if mibBuilder.loadTexts: lgpAgent.setDescription('All Liebert agent objects are registered in this branch.')
if mibBuilder.loadTexts: lgpAgent.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled Liebert SNMP\n               Agent - Registrations.')
lgpFoundation = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3))
if mibBuilder.loadTexts: lgpFoundation.setStatus('current')
if mibBuilder.loadTexts: lgpFoundation.setDescription('This branch is used to register Liebert objects that have\n                common use across product families.')
if mibBuilder.loadTexts: lgpFoundation.setReference('The registrations for the objects in this branch\n                are defined below in a sub-section titled Liebert Foundation\n                Parameters - Registrations.')
lgpProductSpecific = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4))
if mibBuilder.loadTexts: lgpProductSpecific.setStatus('current')
if mibBuilder.loadTexts: lgpProductSpecific.setDescription('This branch is used to register Liebert product specific\n                object identifiers.')
if mibBuilder.loadTexts: lgpProductSpecific.setReference('The registrations for the objects in this branch\n                are defined below in a sub-section titled Liebert Product\n                Specific - Registrations.')
liebertModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 1))
if mibBuilder.loadTexts: liebertModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertModuleReg.setDescription('The Liebert Global Products MODULE-IDENTITY OIDs are\n               registered via this branch.')
liebertAgentModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 2))
if mibBuilder.loadTexts: liebertAgentModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertAgentModuleReg.setDescription('The Liebert Global Products AGENT MODULE-IDENTITY OIDs are\n               registered via this branch.')
liebertConditionsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 3))
if mibBuilder.loadTexts: liebertConditionsModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertConditionsModuleReg.setDescription('The Liebert Global Products CONDITIONS MODULE-IDENTITY OIDs are\n               registered via this branch.')
liebertNotificationsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 4))
if mibBuilder.loadTexts: liebertNotificationsModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertNotificationsModuleReg.setDescription('The Liebert Global Products NOTIFICATIONS MODULE-IDENTITY OIDs\n               are registered via this branch.')
liebertEnvironmentalModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 5))
if mibBuilder.loadTexts: liebertEnvironmentalModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertEnvironmentalModuleReg.setDescription('The Liebert Global Products ENVIRONMENTAL MODULE-IDENTITY OIDs\n               are registered via this branch.')
liebertPowerModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 6))
if mibBuilder.loadTexts: liebertPowerModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertPowerModuleReg.setDescription('The Liebert Global Products POWER MODULE-IDENTITY OIDs are\n               registered via this branch.')
liebertControllerModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 7))
if mibBuilder.loadTexts: liebertControllerModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertControllerModuleReg.setDescription('The Liebert Global Products CONTROLLER MODULE-IDENTITY OIDs are\n               registered via this branch.')
liebertSystemModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 8))
if mibBuilder.loadTexts: liebertSystemModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertSystemModuleReg.setDescription('The Liebert Global Products SYSTEM MODULE-IDENTITY OIDs are\n               registered via this branch.')
liebertPduModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 9))
if mibBuilder.loadTexts: liebertPduModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertPduModuleReg.setDescription('The Liebert Global Products Power Distribution (PDU) \n               MODULE-IDENTITY OIDs are registered via this branch.')
liebertFlexibleModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 10))
if mibBuilder.loadTexts: liebertFlexibleModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertFlexibleModuleReg.setDescription('The Liebert Global Products Flexible \n               MODULE-IDENTITY OIDs are registered via this branch.')
liebertFlexibleConditionsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 11))
if mibBuilder.loadTexts: liebertFlexibleConditionsModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertFlexibleConditionsModuleReg.setDescription('The Liebert Global Products FLEXIBLE CONDITIONS MODULE-IDENTITY\n               OIDs are registered via this branch.')
liebertSrcModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 12))
if mibBuilder.loadTexts: liebertSrcModuleReg.setStatus('current')
if mibBuilder.loadTexts: liebertSrcModuleReg.setDescription('The Liebert Src Product MODULE-IDENTITY\n               OIDs are registered via this branch.')
lgpAgentIdent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1))
if mibBuilder.loadTexts: lgpAgentIdent.setStatus('current')
if mibBuilder.loadTexts: lgpAgentIdent.setDescription('Liebert Agent Identification - This branch contains OIDS\n               that are used to identify an agent and its managed device.')
if mibBuilder.loadTexts: lgpAgentIdent.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-AGENT-MIB defined in the file\n               LIEBERT_GP_AGENT.MIB.')
lgpAgentNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3))
if mibBuilder.loadTexts: lgpAgentNotifications.setStatus('current')
if mibBuilder.loadTexts: lgpAgentNotifications.setDescription('This branch is used to register Liebert agent notify object\n               identifiers.')
if mibBuilder.loadTexts: lgpAgentNotifications.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-AGENT-MIB defined in the file\n               LIEBERT_GP_AGENT.MIB.')
lgpAgentDevice = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4))
if mibBuilder.loadTexts: lgpAgentDevice.setStatus('current')
if mibBuilder.loadTexts: lgpAgentDevice.setDescription('This branch contains OIDs that are used to identify a\n               managed device.')
if mibBuilder.loadTexts: lgpAgentDevice.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-AGENT-MIB defined in the file\n               LIEBERT_GP_AGENT.MIB.')
lgpAgentControl = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5))
if mibBuilder.loadTexts: lgpAgentControl.setStatus('current')
if mibBuilder.loadTexts: lgpAgentControl.setDescription('This branch contains objects relating to the control of\n                the agent software.')
if mibBuilder.loadTexts: lgpAgentControl.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-AGENT-MIB defined in the file\n               LIEBERT_GP_AGENT.MIB.')
lgpConditions = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2))
if mibBuilder.loadTexts: lgpConditions.setStatus('current')
if mibBuilder.loadTexts: lgpConditions.setDescription('This branch is used to register Liebert status condition\n               object identifiers.')
if mibBuilder.loadTexts: lgpConditions.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-CONDITIONS-MIB defined by the file\n               LIEBERT_GP_COND.MIB.')
lgpNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3))
if mibBuilder.loadTexts: lgpNotifications.setStatus('current')
if mibBuilder.loadTexts: lgpNotifications.setDescription('This branch is used to register Liebert notification object\n               identifiers.')
if mibBuilder.loadTexts: lgpNotifications.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-NOTIFICATIONS-MIB defined by the file\n               LIEBERT_GP_NOTIFY.MIB.')
lgpEnvironmental = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 4))
if mibBuilder.loadTexts: lgpEnvironmental.setStatus('current')
if mibBuilder.loadTexts: lgpEnvironmental.setDescription('This branch is used to register Liebert environmental object\n               identifiers.')
if mibBuilder.loadTexts: lgpEnvironmental.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-ENVIRONMENTAL-MIB defined by the file\n               LIEBERT_GP_ENV.MIB.')
lgpPower = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 5))
if mibBuilder.loadTexts: lgpPower.setStatus('current')
if mibBuilder.loadTexts: lgpPower.setDescription('This branch is used to register Liebert power object\n               identifiers.')
if mibBuilder.loadTexts: lgpPower.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-POWER-MIB defined by the file\n               LIEBERT_GP_POWER.MIB.')
lgpController = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 6))
if mibBuilder.loadTexts: lgpController.setStatus('current')
if mibBuilder.loadTexts: lgpController.setDescription('This branch is used to register Liebert controller object\n               identifiers.')
if mibBuilder.loadTexts: lgpController.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-CONTROLLER-MIB defined by the file\n               LIEBERT_GP_CONTROLLER.MIB.')
lgpSystem = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 7))
if mibBuilder.loadTexts: lgpSystem.setStatus('current')
if mibBuilder.loadTexts: lgpSystem.setDescription('This branch is used to register Liebert system object\n               identifiers.')
if mibBuilder.loadTexts: lgpSystem.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-SYSTEM-MIB defined by the file\n               LIEBERT_GP_SYSTEM.MIB.')
lgpPdu = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 8))
if mibBuilder.loadTexts: lgpPdu.setStatus('current')
if mibBuilder.loadTexts: lgpPdu.setDescription('This branch is used to register Liebert system object\n               identifiers.')
if mibBuilder.loadTexts: lgpPdu.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-PDU-MIB defined by the file\n               LIEBERT_GP_PDU.MIB.')
lgpFlexible = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 9))
if mibBuilder.loadTexts: lgpFlexible.setStatus('current')
if mibBuilder.loadTexts: lgpFlexible.setDescription('This branch is used to register Liebert system object\n               identifiers.')
if mibBuilder.loadTexts: lgpFlexible.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-FLEXIBLE-MIB defined by the file\n               LIEBERT_GP_FLEXIBLE.MIB.')
lgpSrc = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 10))
if mibBuilder.loadTexts: lgpSrc.setStatus('current')
if mibBuilder.loadTexts: lgpSrc.setDescription('This branch is used to register Liebert system object\n               identifiers.')
if mibBuilder.loadTexts: lgpSrc.setReference('All objects registered under this branch are implemented by\n               the LIEBERT-GP-SRC-MIB defined by the file\n               LIEBERT_GP_SRC.MIB.')
lgpUpsProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2))
if mibBuilder.loadTexts: lgpUpsProducts.setStatus('current')
if mibBuilder.loadTexts: lgpUpsProducts.setDescription('This branch is used to register Liebert UPS object\n               identifiers.')
if mibBuilder.loadTexts: lgpUpsProducts.setReference('The registrations for the objects in this branch are defined\n               below in a sub-section titled Liebert UPS Registrations.')
lgpAcProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3))
if mibBuilder.loadTexts: lgpAcProducts.setStatus('current')
if mibBuilder.loadTexts: lgpAcProducts.setDescription('This branch is used to register Liebert Environmental object\n               identifiers.')
if mibBuilder.loadTexts: lgpAcProducts.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled Liebert Environmental\n               Air Conditioning Registrations.')
lgpPowerConditioningProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4))
if mibBuilder.loadTexts: lgpPowerConditioningProducts.setStatus('current')
if mibBuilder.loadTexts: lgpPowerConditioningProducts.setDescription('This branch is used to register Liebert Power Conditioning\n                object identifiers.')
if mibBuilder.loadTexts: lgpPowerConditioningProducts.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled Liebert Power\n               Conditioning Registrations.')
lgpTransferSwitchProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5))
if mibBuilder.loadTexts: lgpTransferSwitchProducts.setStatus('current')
if mibBuilder.loadTexts: lgpTransferSwitchProducts.setDescription('This branch is used to register Liebert Transfer Switch\n                object identifiers.')
if mibBuilder.loadTexts: lgpTransferSwitchProducts.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled Liebert Transfer\n               Switch Registrations.')
lgpMultiLinkProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 7))
if mibBuilder.loadTexts: lgpMultiLinkProducts.setStatus('current')
if mibBuilder.loadTexts: lgpMultiLinkProducts.setDescription('This branch is used to register Liebert MultiLink object\n               identifiers.')
if mibBuilder.loadTexts: lgpMultiLinkProducts.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled\n               Liebert MultiLink Registrations.')
lgpPowerDistributionProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8))
if mibBuilder.loadTexts: lgpPowerDistributionProducts.setStatus('current')
if mibBuilder.loadTexts: lgpPowerDistributionProducts.setDescription('This branch is used to register stand-alone Liebert Power\n               Distribution object identifiers.')
if mibBuilder.loadTexts: lgpPowerDistributionProducts.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled Liebert Power\n               Distribution Registrations.')
lgpCombinedSystemProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10))
if mibBuilder.loadTexts: lgpCombinedSystemProducts.setStatus('current')
if mibBuilder.loadTexts: lgpCombinedSystemProducts.setDescription('This branch is used to register object identifiers for\n               Combined System devices.')
if mibBuilder.loadTexts: lgpCombinedSystemProducts.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled Combined\n               Power System Product Registrations.')
lgpSeries7200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 1))
if mibBuilder.loadTexts: lgpSeries7200.setStatus('current')
if mibBuilder.loadTexts: lgpSeries7200.setDescription('This branch is used to register Liebert Series 7200\n               UPS product information.')
if mibBuilder.loadTexts: lgpSeries7200.setReference('There are currently no objects registered under this branch.')
lgpUPStationGXT = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 2))
if mibBuilder.loadTexts: lgpUPStationGXT.setStatus('current')
if mibBuilder.loadTexts: lgpUPStationGXT.setDescription('This branch is used to register Liebert UPStationGXT UPS\n                product information.')
if mibBuilder.loadTexts: lgpUPStationGXT.setReference('There are currently no objects registered under this branch.')
lgpPowerSureInteractive = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 3))
if mibBuilder.loadTexts: lgpPowerSureInteractive.setStatus('current')
if mibBuilder.loadTexts: lgpPowerSureInteractive.setDescription('This branch is used to register Liebert PowerSure Interactive\n               UPS product information.')
if mibBuilder.loadTexts: lgpPowerSureInteractive.setReference('There are currently no objects registered under this branch.')
lgpNfinity = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 4))
if mibBuilder.loadTexts: lgpNfinity.setStatus('current')
if mibBuilder.loadTexts: lgpNfinity.setDescription('This branch is used to register Liebert Nfinity UPS\n                product information.')
if mibBuilder.loadTexts: lgpNfinity.setReference('There are currently no objects registered under this branch.')
lgpNpower = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 5))
if mibBuilder.loadTexts: lgpNpower.setStatus('current')
if mibBuilder.loadTexts: lgpNpower.setDescription('This branch is used to register Liebert Npower UPS\n                product information.')
if mibBuilder.loadTexts: lgpNpower.setReference('There are currently no objects registered under this branch.')
lgpGXT2Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 6))
if mibBuilder.loadTexts: lgpGXT2Dual.setStatus('current')
if mibBuilder.loadTexts: lgpGXT2Dual.setDescription('This branch is used to register Liebert GXT2 Dual Inverter\n                product information.')
if mibBuilder.loadTexts: lgpGXT2Dual.setReference('There are currently no objects registered under this branch.')
lgpPowerSureInteractive2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 7))
if mibBuilder.loadTexts: lgpPowerSureInteractive2.setStatus('current')
if mibBuilder.loadTexts: lgpPowerSureInteractive2.setDescription('This branch is used to register Liebert PowerSure Interactive 2\n               UPS product information.')
if mibBuilder.loadTexts: lgpPowerSureInteractive2.setReference('There are currently no objects registered under this branch.')
lgpNX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 8))
if mibBuilder.loadTexts: lgpNX.setStatus('current')
if mibBuilder.loadTexts: lgpNX.setDescription('This branch is used to register ENPC Nx UPS product\n                information.')
if mibBuilder.loadTexts: lgpNX.setReference('There are currently no objects registered under this branch.')
lgpHiNet = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 9))
if mibBuilder.loadTexts: lgpHiNet.setStatus('current')
if mibBuilder.loadTexts: lgpHiNet.setDescription('This branch is used to register Hiross HiNet UPS product\n                information.')
if mibBuilder.loadTexts: lgpHiNet.setReference('There are currently no objects registered under this branch.')
lgpNXL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 10))
if mibBuilder.loadTexts: lgpNXL.setStatus('current')
if mibBuilder.loadTexts: lgpNXL.setDescription('This branch is used to register NXL UPS product\n                information.')
if mibBuilder.loadTexts: lgpNXL.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled NXL Family \n               Liebert NXL UPS product Registrations.')
lgpSuper400 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 11))
if mibBuilder.loadTexts: lgpSuper400.setStatus('current')
if mibBuilder.loadTexts: lgpSuper400.setDescription('This branch is used to register Super 400 UPS product\n                information.')
if mibBuilder.loadTexts: lgpSuper400.setReference('There are currently no objects registered under this branch.')
lgpSeries600or610 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 12))
if mibBuilder.loadTexts: lgpSeries600or610.setStatus('current')
if mibBuilder.loadTexts: lgpSeries600or610.setDescription('This branch is used to register the Liebert Series 600/610 UPS\n                product information.')
if mibBuilder.loadTexts: lgpSeries600or610.setReference('There are currently no objects registered under this branch.')
lgpSeries300 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 13))
if mibBuilder.loadTexts: lgpSeries300.setStatus('current')
if mibBuilder.loadTexts: lgpSeries300.setDescription('This branch is used to register the Liebert Series 300 UPS\n                product information.')
if mibBuilder.loadTexts: lgpSeries300.setReference('There are currently no objects registered under this branch.')
lgpSeries610SMS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 14))
if mibBuilder.loadTexts: lgpSeries610SMS.setStatus('current')
if mibBuilder.loadTexts: lgpSeries610SMS.setDescription('This branch is used to register the Liebert Series 610 Single\n                Module System (SMS) UPS product information.')
if mibBuilder.loadTexts: lgpSeries610SMS.setReference('There are currently no objects registered under this branch.')
lgpSeries610MMU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 15))
if mibBuilder.loadTexts: lgpSeries610MMU.setStatus('current')
if mibBuilder.loadTexts: lgpSeries610MMU.setDescription('This branch is used to register the Liebert Series 610 Multi\n                Module Unit (MMU) UPS product information.')
if mibBuilder.loadTexts: lgpSeries610MMU.setReference('There are currently no objects registered under this branch.')
lgpSeries610SCC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 16))
if mibBuilder.loadTexts: lgpSeries610SCC.setStatus('current')
if mibBuilder.loadTexts: lgpSeries610SCC.setDescription('This branch is used to register the Liebert Series 610 System\n                Control Cabinet (SCC) UPS product information.')
if mibBuilder.loadTexts: lgpSeries610SCC.setReference('There are currently no objects registered under this branch.')
lgpGXT3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 17))
if mibBuilder.loadTexts: lgpGXT3.setStatus('current')
if mibBuilder.loadTexts: lgpGXT3.setDescription('This branch is used to register Liebert GXT3 \n                product information.')
if mibBuilder.loadTexts: lgpGXT3.setReference('There are currently no objects registered under this branch.')
lgpGXT3Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 18))
if mibBuilder.loadTexts: lgpGXT3Dual.setStatus('current')
if mibBuilder.loadTexts: lgpGXT3Dual.setDescription('This branch is used to register Liebert GXT3 Dual Inverter\n                product information.')
if mibBuilder.loadTexts: lgpGXT3Dual.setReference('There are currently no objects registered under this branch.')
lgpNXr = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19))
if mibBuilder.loadTexts: lgpNXr.setStatus('current')
if mibBuilder.loadTexts: lgpNXr.setDescription('This branch is used to register Liebert APM UPS product\n                information.')
lgpITA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 1))
if mibBuilder.loadTexts: lgpITA.setStatus('current')
if mibBuilder.loadTexts: lgpITA.setDescription('This branch is used to register information for ITA UPS product.')
if mibBuilder.loadTexts: lgpITA.setReference('There are currently no objects registered under this branch.')
lgpNXRb = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 2))
if mibBuilder.loadTexts: lgpNXRb.setStatus('current')
if mibBuilder.loadTexts: lgpNXRb.setDescription('This branch is used to register information for NXRb UPS product.')
if mibBuilder.loadTexts: lgpNXRb.setReference('There are currently no objects registered under this branch.')
lgpNXC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 3))
if mibBuilder.loadTexts: lgpNXC.setStatus('current')
if mibBuilder.loadTexts: lgpNXC.setDescription('This branch is used to register information for NXC(ITAb) UPS product.')
if mibBuilder.loadTexts: lgpNXC.setReference('There are currently no objects registered under this branch.')
lgpNXC30to40k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 4))
if mibBuilder.loadTexts: lgpNXC30to40k.setStatus('current')
if mibBuilder.loadTexts: lgpNXC30to40k.setDescription('This branch is used to register information for NXC 30/40k UPS product.')
if mibBuilder.loadTexts: lgpNXC30to40k.setReference('There are currently no objects registered under this branch.')
lgpITA30to40k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 5))
if mibBuilder.loadTexts: lgpITA30to40k.setStatus('current')
if mibBuilder.loadTexts: lgpITA30to40k.setDescription('This branch is used to register information for ITA 30/40k UPS product.')
if mibBuilder.loadTexts: lgpITA30to40k.setReference('There are currently no objects registered under this branch.')
lgpAPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 20))
if mibBuilder.loadTexts: lgpAPS.setStatus('current')
if mibBuilder.loadTexts: lgpAPS.setDescription('This branch is used to register Liebert APS\n                Modular UPS product information.')
if mibBuilder.loadTexts: lgpAPS.setReference('There are currently no objects registered under this branch.')
lgpMUNiMx = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 22))
if mibBuilder.loadTexts: lgpMUNiMx.setStatus('current')
if mibBuilder.loadTexts: lgpMUNiMx.setDescription('This branch is used to register Liebert\n                UPS with MUNiMx product information.')
if mibBuilder.loadTexts: lgpMUNiMx.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled MUNiMx Family \n               Liebert MUNiMx UPS product Registrations.')
lgpGXT4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 23))
if mibBuilder.loadTexts: lgpGXT4.setStatus('current')
if mibBuilder.loadTexts: lgpGXT4.setDescription('This branch is used to register Liebert GXT4 \n                product information.')
if mibBuilder.loadTexts: lgpGXT4.setReference('There are currently no objects registered under this branch.')
lgpGXT4Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 24))
if mibBuilder.loadTexts: lgpGXT4Dual.setStatus('current')
if mibBuilder.loadTexts: lgpGXT4Dual.setDescription('This branch is used to register Liebert GXT4 Dual Inverter\n                product information.')
if mibBuilder.loadTexts: lgpGXT4Dual.setReference('There are currently no objects registered under this branch.')
lgpEXL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 25))
if mibBuilder.loadTexts: lgpEXL.setStatus('current')
if mibBuilder.loadTexts: lgpEXL.setDescription('This branch is used to register Liebert eXL UPS\n                product information.')
if mibBuilder.loadTexts: lgpEXL.setReference('There are currently no objects registered under this branch.')
lgpEXM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26))
if mibBuilder.loadTexts: lgpEXM.setStatus('current')
if mibBuilder.loadTexts: lgpEXM.setDescription('This branch is used to register eXM UPS\n                product information.')
lgpEXM208v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 1))
if mibBuilder.loadTexts: lgpEXM208v.setStatus('current')
if mibBuilder.loadTexts: lgpEXM208v.setDescription('This branch is used to register information for eXM 208v UPS product.')
if mibBuilder.loadTexts: lgpEXM208v.setReference('There are currently no objects registered under this branch.')
lgpEXM400v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 2))
if mibBuilder.loadTexts: lgpEXM400v.setStatus('current')
if mibBuilder.loadTexts: lgpEXM400v.setDescription('This branch is used to register information for eXM 400v UPS product.')
if mibBuilder.loadTexts: lgpEXM400v.setReference('There are currently no objects registered under this branch.')
lgpEXM480v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 3))
if mibBuilder.loadTexts: lgpEXM480v.setStatus('current')
if mibBuilder.loadTexts: lgpEXM480v.setDescription('This branch is used to register information for eXM 480v UPS product.')
if mibBuilder.loadTexts: lgpEXM480v.setReference('There are currently no objects registered under this branch.')
lgpEPM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27))
if mibBuilder.loadTexts: lgpEPM.setStatus('current')
if mibBuilder.loadTexts: lgpEPM.setDescription('This branch is used to register ePM UPS product information.')
lgpEPM300k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 1))
if mibBuilder.loadTexts: lgpEPM300k.setStatus('current')
if mibBuilder.loadTexts: lgpEPM300k.setDescription('This branch is used to register information for ePM 300k UPS product.')
if mibBuilder.loadTexts: lgpEPM300k.setReference('There are currently no objects registered under this branch.')
lgpEPM400k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 2))
if mibBuilder.loadTexts: lgpEPM400k.setStatus('current')
if mibBuilder.loadTexts: lgpEPM400k.setDescription('This branch is used to register information for ePM 400k UPS product.')
if mibBuilder.loadTexts: lgpEPM400k.setReference('There are currently no objects registered under this branch.')
lgpEPM500k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 3))
if mibBuilder.loadTexts: lgpEPM500k.setStatus('current')
if mibBuilder.loadTexts: lgpEPM500k.setDescription('This branch is used to register information for ePM 500k UPS product.')
if mibBuilder.loadTexts: lgpEPM500k.setReference('There are currently no objects registered under this branch.')
lgpEPM600k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 4))
if mibBuilder.loadTexts: lgpEPM600k.setStatus('current')
if mibBuilder.loadTexts: lgpEPM600k.setDescription('This branch is used to register information for ePM 600k UPS product.')
if mibBuilder.loadTexts: lgpEPM600k.setReference('There are currently no objects registered under this branch.')
lgpEPM800k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 5))
if mibBuilder.loadTexts: lgpEPM800k.setStatus('current')
if mibBuilder.loadTexts: lgpEPM800k.setDescription('This branch is used to register information for ePM 800k UPS product.')
if mibBuilder.loadTexts: lgpEPM800k.setReference('There are currently no objects registered under this branch.')
lgpAPM600 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 9))
if mibBuilder.loadTexts: lgpAPM600.setStatus('current')
if mibBuilder.loadTexts: lgpAPM600.setDescription('This branch is used to register information for APM 600 UPS product.')
if mibBuilder.loadTexts: lgpAPM600.setReference('There are currently no objects registered under this branch.')
lgpEXLS1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 28))
if mibBuilder.loadTexts: lgpEXLS1.setStatus('current')
if mibBuilder.loadTexts: lgpEXLS1.setDescription('This branch is used to register Liebert eXL S1 UPS\n                product information.')
lgpEXLS1UPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 28, 1))
if mibBuilder.loadTexts: lgpEXLS1UPS.setStatus('current')
if mibBuilder.loadTexts: lgpEXLS1UPS.setDescription('This branch is used to register information for EXL S1 UPS product.')
if mibBuilder.loadTexts: lgpEXLS1UPS.setReference('There are currently no objects registered under this branch.')
lgpEXMMSR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 29))
if mibBuilder.loadTexts: lgpEXMMSR.setStatus('current')
if mibBuilder.loadTexts: lgpEXMMSR.setDescription('This branch is used to register eXM M/S/R UPS\n                product information.')
lgpITA2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31))
if mibBuilder.loadTexts: lgpITA2.setStatus('current')
if mibBuilder.loadTexts: lgpITA2.setDescription('This branch is used to register ITA2 UPS\n                product information.')
lgpITA2cap20k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31, 1))
if mibBuilder.loadTexts: lgpITA2cap20k.setStatus('current')
if mibBuilder.loadTexts: lgpITA2cap20k.setDescription('This branch is used to register ITA2 20k UPS\n                    product information.')
if mibBuilder.loadTexts: lgpITA2cap20k.setReference('There are currently no objects registered under this branch.')
lgpITA2cap40k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31, 2))
if mibBuilder.loadTexts: lgpITA2cap40k.setStatus('current')
if mibBuilder.loadTexts: lgpITA2cap40k.setDescription('This branch is used to register ITA2 40k UPS\n                    product information.')
if mibBuilder.loadTexts: lgpITA2cap40k.setReference('There are currently no objects registered under this branch.')
lgpEXSRackMountAndFrame1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31, 3))
if mibBuilder.loadTexts: lgpEXSRackMountAndFrame1.setStatus('current')
if mibBuilder.loadTexts: lgpEXSRackMountAndFrame1.setDescription('This branch is used to register EXS Rack Mount and Frame 1\n                    product information.')
if mibBuilder.loadTexts: lgpEXSRackMountAndFrame1.setReference('There are currently no objects registered under this branch.')
lgpGXE = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31, 4))
if mibBuilder.loadTexts: lgpGXE.setStatus('current')
if mibBuilder.loadTexts: lgpGXE.setDescription('This branch is used to register GXE\n                    product information.')
if mibBuilder.loadTexts: lgpGXE.setReference('There are currently no objects registered under this branch.')
lgpITA2cap5k30k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31, 5))
if mibBuilder.loadTexts: lgpITA2cap5k30k.setStatus('current')
if mibBuilder.loadTexts: lgpITA2cap5k30k.setDescription('This branch is used to register ITA2 5k-30k UPS\n                    product information.')
if mibBuilder.loadTexts: lgpITA2cap5k30k.setReference('There are currently no objects registered under this branch.')
lgpEXS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 32))
if mibBuilder.loadTexts: lgpEXS.setStatus('current')
if mibBuilder.loadTexts: lgpEXS.setDescription('This branch is used to register EXS UPS\n                product information.')
if mibBuilder.loadTexts: lgpEXS.setReference('There are currently no objects registered under this branch.')
lgpPowerSureInteractive5 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 33))
if mibBuilder.loadTexts: lgpPowerSureInteractive5.setStatus('current')
if mibBuilder.loadTexts: lgpPowerSureInteractive5.setDescription('This branch is used to register Liebert PowerSure Interactive 5\n               UPS product information.')
if mibBuilder.loadTexts: lgpPowerSureInteractive5.setReference('There are currently no objects registered under this branch.')
lgpGXT5 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 34))
if mibBuilder.loadTexts: lgpGXT5.setStatus('current')
if mibBuilder.loadTexts: lgpGXT5.setDescription('This branch is used to register Liebert GXT5\n               UPS product information.')
if mibBuilder.loadTexts: lgpGXT5.setReference('There are currently no objects registered under this branch.')
lgpNXLJD = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 10, 1))
if mibBuilder.loadTexts: lgpNXLJD.setStatus('current')
if mibBuilder.loadTexts: lgpNXLJD.setDescription('This branch is used to register information for Liebert NXL-JD UPS products.')
if mibBuilder.loadTexts: lgpNXLJD.setReference('There are currently no objects registered under this branch.')
lgpNX225to600k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 22, 1))
if mibBuilder.loadTexts: lgpNX225to600k.setStatus('current')
if mibBuilder.loadTexts: lgpNX225to600k.setDescription('This branch is used to register information for Liebert NX UPS products.')
if mibBuilder.loadTexts: lgpNX225to600k.setReference('There are currently no objects registered under this branch.')
lgpAdvancedMicroprocessor = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 1))
if mibBuilder.loadTexts: lgpAdvancedMicroprocessor.setStatus('current')
if mibBuilder.loadTexts: lgpAdvancedMicroprocessor.setDescription('This branch is used to register Liebert Environmental\n               Advanced Microprocessor control information.')
if mibBuilder.loadTexts: lgpAdvancedMicroprocessor.setReference('There are currently no objects registered under this branch.')
lgpStandardMicroprocessor = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 2))
if mibBuilder.loadTexts: lgpStandardMicroprocessor.setStatus('current')
if mibBuilder.loadTexts: lgpStandardMicroprocessor.setDescription('This branch is used to register Liebert Environmental\n               Standard Microprocessor control information.')
if mibBuilder.loadTexts: lgpStandardMicroprocessor.setReference('There are currently no objects registered under this branch.')
lgpMiniMate2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 3))
if mibBuilder.loadTexts: lgpMiniMate2.setStatus('current')
if mibBuilder.loadTexts: lgpMiniMate2.setDescription('This branch is used to register Liebert Environmental\n               Mini-Mate 2 product information.')
if mibBuilder.loadTexts: lgpMiniMate2.setReference('There are currently no objects registered under this branch.')
lgpHimod = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 4))
if mibBuilder.loadTexts: lgpHimod.setStatus('current')
if mibBuilder.loadTexts: lgpHimod.setDescription('This branch is used to register Liebert Environmental\n               Himod product information.')
if mibBuilder.loadTexts: lgpHimod.setReference('There are currently no objects registered under this branch.')
lgpCEMS100orLECS15 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 5))
if mibBuilder.loadTexts: lgpCEMS100orLECS15.setStatus('current')
if mibBuilder.loadTexts: lgpCEMS100orLECS15.setDescription('This branch is used to register Australia\n               Environmental CEMS100 and LECS15 control information.')
if mibBuilder.loadTexts: lgpCEMS100orLECS15.setReference('There are currently no objects registered under this branch.')
lgpIcom = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 6))
if mibBuilder.loadTexts: lgpIcom.setStatus('current')
if mibBuilder.loadTexts: lgpIcom.setDescription('This branch is used to register the\n               Environmental iCOM control information.')
if mibBuilder.loadTexts: lgpIcom.setReference('There are currently no objects registered under this branch.')
lgpIcomPA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7))
if mibBuilder.loadTexts: lgpIcomPA.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPA.setDescription('This branch is used to register information for the \n               Liebert PA (Floor mount) Environmental product family.')
if mibBuilder.loadTexts: lgpIcomPA.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled iCOM PA Family\n               Environmental Registrations.')
lgpIcomXD = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8))
if mibBuilder.loadTexts: lgpIcomXD.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXD.setDescription('This branch is used to register information for the \n               Liebert XD (Rack cooling with compressor)\n               Environmental product family.')
if mibBuilder.loadTexts: lgpIcomXD.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled\n               iCOM XD Family - Liebert XD Environmental Registrations.')
lgpIcomXP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9))
if mibBuilder.loadTexts: lgpIcomXP.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXP.setDescription('This branch is used to register information for the \n               Liebert XP (Pumped refrigerant) Environmental\n               product family.')
if mibBuilder.loadTexts: lgpIcomXP.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled iCOM XP Family\n               Environmental Registrations.')
lgpIcomSC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10))
if mibBuilder.loadTexts: lgpIcomSC.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSC.setDescription('This branch is used to register information for the \n               Liebert SC (Chiller) Environmental product\n               family.')
if mibBuilder.loadTexts: lgpIcomSC.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled iCOM SC Family\n               Environmental Registrations.')
lgpIcomCR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 11))
if mibBuilder.loadTexts: lgpIcomCR.setStatus('current')
if mibBuilder.loadTexts: lgpIcomCR.setDescription('This branch is used to register information for the \n               Liebert CR (Computer Row) Environmental product\n               family.')
if mibBuilder.loadTexts: lgpIcomCR.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled iCOM CR Family\n               Environmental Registrations.')
lgpIcomAH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 12))
if mibBuilder.loadTexts: lgpIcomAH.setStatus('current')
if mibBuilder.loadTexts: lgpIcomAH.setDescription('This branch is used to register information for the \n               Liebert AH (Air Handler) Environmental product\n               family.')
if mibBuilder.loadTexts: lgpIcomAH.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled iCOM AH Family\n               Environmental Registrations.')
lgpIcomDCL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 13))
if mibBuilder.loadTexts: lgpIcomDCL.setStatus('current')
if mibBuilder.loadTexts: lgpIcomDCL.setDescription('This branch is used to register information for the \n               Liebert DCL Environmental product\n               family.')
if mibBuilder.loadTexts: lgpIcomDCL.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled iCOM DCL Family\n               Environmental Registrations.')
lgpIcomEEV = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 14))
if mibBuilder.loadTexts: lgpIcomEEV.setStatus('current')
if mibBuilder.loadTexts: lgpIcomEEV.setDescription('This branch is used to register information for the \n               Liebert EEV Environmental product\n               family.')
if mibBuilder.loadTexts: lgpIcomEEV.setReference('The registrations for the objects in this branch\n               are defined below in a sub-section titled iCOM EEV Family\n               Environmental Registrations.')
lgpIcomPAtypeDS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 1))
if mibBuilder.loadTexts: lgpIcomPAtypeDS.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeDS.setDescription('This branch is used to register information for \n               DS Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeDS.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeHPM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 2))
if mibBuilder.loadTexts: lgpIcomPAtypeHPM.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeHPM.setDescription('This branch is used to register information for \n               HPM Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeHPM.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeChallenger = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 3))
if mibBuilder.loadTexts: lgpIcomPAtypeChallenger.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeChallenger.setDescription('This branch is used to register information for \n               Liebert Challenger Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeChallenger.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypePeX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 4))
if mibBuilder.loadTexts: lgpIcomPAtypePeX.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePeX.setDescription('This branch is used to register information for \n               Liebert PeX Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypePeX.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeDeluxeSys3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5))
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSys3.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSys3.setDescription('This branch is used to register information for \n               Liebert Deluxe Environmental products.')
lgpIcomPAtypeDeluxeSystem3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5, 1))
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSystem3.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSystem3.setDescription('This branch is used to register information for \n                       Liebert Deluxe System 3 and lower Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSystem3.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5, 2))
if mibBuilder.loadTexts: lgpIcomPAtypeCW.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeCW.setDescription('This branch is used to register information for \n                       Liebert CW146 and lower Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeCW.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeJumboCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 6))
if mibBuilder.loadTexts: lgpIcomPAtypeJumboCW.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeJumboCW.setDescription('This branch is used to register information for \n                Liebert CW181 and larger Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeJumboCW.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeDSE = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 7))
if mibBuilder.loadTexts: lgpIcomPAtypeDSE.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeDSE.setDescription('This branch is used to register information for \n               Liebert DSE Environmental products.')
lgpIcomPAtypeDSE400 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 7, 1))
if mibBuilder.loadTexts: lgpIcomPAtypeDSE400.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeDSE400.setDescription('This branch is used to register information for \n                       Liebert DSE 400 products.')
if mibBuilder.loadTexts: lgpIcomPAtypeDSE400.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypePEXS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8))
if mibBuilder.loadTexts: lgpIcomPAtypePEXS.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePEXS.setDescription('This branch is used to register information for \n               Liebert PDX - PCW Small Environmental products.')
lgpIcomPAtypePDXsmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8, 1))
if mibBuilder.loadTexts: lgpIcomPAtypePDXsmall.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePDXsmall.setDescription('This branch is used to register information for \n                       Liebert PDX Small Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypePDXsmall.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypePCWsmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8, 2))
if mibBuilder.loadTexts: lgpIcomPAtypePCWsmall.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePCWsmall.setDescription('This branch is used to register information for \n                       Liebert PCW Small Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypePCWsmall.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypePDX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9))
if mibBuilder.loadTexts: lgpIcomPAtypePDX.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePDX.setDescription('This branch is used to register information for \n               Liebert PDX - PCW Large Environmental products.')
lgpIcomPAtypePDXlarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9, 1))
if mibBuilder.loadTexts: lgpIcomPAtypePDXlarge.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePDXlarge.setDescription('This branch is used to register information for \n                       Liebert PDX Large Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypePDXlarge.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypePCWlarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9, 2))
if mibBuilder.loadTexts: lgpIcomPAtypePCWlarge.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypePCWlarge.setDescription('This branch is used to register information for \n                       Liebert PCW Large Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypePCWlarge.setReference('There are currently no objects registered under this branch.')
lgpIcomPAtypeHPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 10))
if mibBuilder.loadTexts: lgpIcomPAtypeHPS.setStatus('current')
if mibBuilder.loadTexts: lgpIcomPAtypeHPS.setDescription('This branch is used to register information for \n               Liebert HPS Environmental products.')
if mibBuilder.loadTexts: lgpIcomPAtypeHPS.setReference('There are currently no objects registered under this branch.')
lgpMiniMate3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 11))
if mibBuilder.loadTexts: lgpMiniMate3.setStatus('current')
if mibBuilder.loadTexts: lgpMiniMate3.setDescription('This branch is used to register Liebert Environmental\n               Mini-Mate 3 product information.')
if mibBuilder.loadTexts: lgpMiniMate3.setReference('There are currently no objects registered under this branch.')
lgpIcomXDtypeXDF = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8, 1))
if mibBuilder.loadTexts: lgpIcomXDtypeXDF.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXDtypeXDF.setDescription('This branch is used to register information for \n               Liebert XDF Environmental products.')
if mibBuilder.loadTexts: lgpIcomXDtypeXDF.setReference('There are currently no objects registered under this branch.')
lgpIcomXDtypeXDFN = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8, 2))
if mibBuilder.loadTexts: lgpIcomXDtypeXDFN.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXDtypeXDFN.setDescription('This branch is used to register information for \n               Liebert XDFN Environmental products.')
if mibBuilder.loadTexts: lgpIcomXDtypeXDFN.setReference('There are currently no objects registered under this branch.')
lgpIcomXPtypeXDP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 1))
if mibBuilder.loadTexts: lgpIcomXPtypeXDP.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXPtypeXDP.setDescription('This branch is used to register information for \n               Liebert XDP Environmental products.')
lgpIcomXPtypeXDPCray = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 1, 1))
if mibBuilder.loadTexts: lgpIcomXPtypeXDPCray.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXPtypeXDPCray.setDescription('This branch is used to register information for \n                   Liebert XDP Environmental products for Cray.')
if mibBuilder.loadTexts: lgpIcomXPtypeXDPCray.setReference('There are currently no objects registered under this branch.')
lgpIcomXPtypeXDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 2))
if mibBuilder.loadTexts: lgpIcomXPtypeXDC.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXPtypeXDC.setDescription('This branch is used to register information for \n               Liebert XDC Environmental products.')
if mibBuilder.loadTexts: lgpIcomXPtypeXDC.setReference('There are currently no objects registered under this branch.')
lgpIcomXPtypeXDPW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 3))
if mibBuilder.loadTexts: lgpIcomXPtypeXDPW.setStatus('current')
if mibBuilder.loadTexts: lgpIcomXPtypeXDPW.setDescription('This branch is used to register information for \n               Liebert XDP-W Environmental products.')
if mibBuilder.loadTexts: lgpIcomXPtypeXDPW.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1))
if mibBuilder.loadTexts: lgpIcomSCtypeHPC.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPC.setDescription('This branch is used to register information for \n               Liebert HPC Environmental products.')
lgpIcomSCtypeHPCSSmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 1))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSSmall.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSSmall.setDescription('This branch is used to register information for \n                   Liebert HPC-S Small.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSSmall.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPCSLarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 2))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSLarge.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSLarge.setDescription('This branch is used to register information for \n                   Liebert HPC-S Large.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSLarge.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPCR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 3))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCR.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCR.setDescription('This branch is used to register information for Liebert HPC-R.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCR.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPCM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 4))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCM.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCM.setDescription('This branch is used to register information for Liebert HPC-M.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCM.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPCL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 5))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCL.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCL.setDescription('This branch is used to register information for Liebert HPC-L.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCL.setReference('There are currently no objects registered under this branch.')
lgpIcomSCtypeHPCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 6))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCW.setStatus('current')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCW.setDescription('This branch is used to register information for Liebert HPC-W.')
if mibBuilder.loadTexts: lgpIcomSCtypeHPCW.setReference('There are currently no objects registered under this branch.')
lgpIcomCRtypeCRV = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 11, 1))
if mibBuilder.loadTexts: lgpIcomCRtypeCRV.setStatus('current')
if mibBuilder.loadTexts: lgpIcomCRtypeCRV.setDescription('This branch is used to register information for \n               Liebert CRV Environmental products.')
if mibBuilder.loadTexts: lgpIcomCRtypeCRV.setReference('There are currently no objects registered under this branch.')
lgpIcomAHStandard = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 12, 1))
if mibBuilder.loadTexts: lgpIcomAHStandard.setStatus('current')
if mibBuilder.loadTexts: lgpIcomAHStandard.setDescription('This branch is used to register information for \n               Liebert AH Standard (Air Handler).')
if mibBuilder.loadTexts: lgpIcomAHStandard.setReference('There are currently no objects registered under this branch.')
lgpPMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4, 1))
if mibBuilder.loadTexts: lgpPMP.setStatus('current')
if mibBuilder.loadTexts: lgpPMP.setDescription('This branch is used to register Liebert Power Distribution\n               product information for the PMP (Power Monitoring Panel)\n               product.')
if mibBuilder.loadTexts: lgpPMP.setReference('There are currently no objects registered under this branch.')
lgpEPMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4, 2))
if mibBuilder.loadTexts: lgpEPMP.setStatus('current')
if mibBuilder.loadTexts: lgpEPMP.setDescription('This branch is used to register Liebert Power Distribution\n               product information for the EPMP (Extended Power Monitoring\n               Panel) product.')
if mibBuilder.loadTexts: lgpEPMP.setReference('There are currently no objects registered under this branch.')
lgpStaticTransferSwitchEDS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 1))
if mibBuilder.loadTexts: lgpStaticTransferSwitchEDS.setStatus('current')
if mibBuilder.loadTexts: lgpStaticTransferSwitchEDS.setDescription('This branch is used to register Liebert Transfer Switch\n               product information for the EDS Static Transfer Switch product.')
if mibBuilder.loadTexts: lgpStaticTransferSwitchEDS.setReference('There are currently no objects registered under this branch.')
lgpStaticTransferSwitch1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 2))
if mibBuilder.loadTexts: lgpStaticTransferSwitch1.setStatus('current')
if mibBuilder.loadTexts: lgpStaticTransferSwitch1.setDescription('This branch is used to register Liebert Transfer Switch\n               product information for the Static Transfer Switch 1 product.')
if mibBuilder.loadTexts: lgpStaticTransferSwitch1.setReference('There are currently no objects registered under this branch.')
lgpStaticTransferSwitch2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 3))
if mibBuilder.loadTexts: lgpStaticTransferSwitch2.setStatus('current')
if mibBuilder.loadTexts: lgpStaticTransferSwitch2.setDescription('This branch is used to register Liebert Transfer Switch\n               product information for the Static Transfer Switch 2 product.')
if mibBuilder.loadTexts: lgpStaticTransferSwitch2.setReference('There are currently no objects registered under this branch.')
lgpStaticTransferSwitch2FourPole = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 4))
if mibBuilder.loadTexts: lgpStaticTransferSwitch2FourPole.setStatus('current')
if mibBuilder.loadTexts: lgpStaticTransferSwitch2FourPole.setDescription('This branch is used to register Liebert Transfer Switch\n               product information for the Static Transfer Switch 2 - 4Pole\n               product.')
if mibBuilder.loadTexts: lgpStaticTransferSwitch2FourPole.setReference('There are currently no objects registered under this branch.')
lgpMultiLinkBasicNotification = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 7, 1))
if mibBuilder.loadTexts: lgpMultiLinkBasicNotification.setStatus('current')
if mibBuilder.loadTexts: lgpMultiLinkBasicNotification.setDescription('This branch is used to register Liebert MultiLink\n               MLBN device proxy information.')
if mibBuilder.loadTexts: lgpMultiLinkBasicNotification.setReference('There are currently no objects registered under this branch.')
lgpRackPDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2))
if mibBuilder.loadTexts: lgpRackPDU.setStatus('current')
if mibBuilder.loadTexts: lgpRackPDU.setDescription('This branch is used to register Liebert Power Distribution\n               product information for Rack Power Distribution Products (RPDU).')
lgpMPX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2, 1))
if mibBuilder.loadTexts: lgpMPX.setStatus('current')
if mibBuilder.loadTexts: lgpMPX.setDescription('This branch is used to register Liebert Power Distribution\n               product information for the MPX product distribution\n               (PDU) product family.')
if mibBuilder.loadTexts: lgpMPX.setReference('There are currently no objects registered under this branch.')
lgpMPH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2, 2))
if mibBuilder.loadTexts: lgpMPH.setStatus('current')
if mibBuilder.loadTexts: lgpMPH.setDescription('This branch is used to register Liebert Power Distribution\n               product information for the MPH product distribution\n               (PDU) product family.')
if mibBuilder.loadTexts: lgpMPH.setReference('There are currently no objects registered under this branch.')
lgpRackPDU2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4))
if mibBuilder.loadTexts: lgpRackPDU2.setStatus('current')
if mibBuilder.loadTexts: lgpRackPDU2.setDescription('This branch is used to register Liebert Power Distribution\n               product information for Rack Power Distribution Products (RPDU).')
lgpRPC2kMPX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4, 1))
if mibBuilder.loadTexts: lgpRPC2kMPX.setStatus('current')
if mibBuilder.loadTexts: lgpRPC2kMPX.setDescription('This branch is used to register Liebert Power Distribution\n               product information for the MPX product distribution\n               (PDU) product family.')
if mibBuilder.loadTexts: lgpRPC2kMPX.setReference('There are currently no objects registered under this branch.')
lgpRPC2kMPH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4, 2))
if mibBuilder.loadTexts: lgpRPC2kMPH.setStatus('current')
if mibBuilder.loadTexts: lgpRPC2kMPH.setDescription('This branch is used to register Liebert Power Distribution\n               product information for the MPH product distribution\n               (PDU) product family.')
if mibBuilder.loadTexts: lgpRPC2kMPH.setReference('There are currently no objects registered under this branch.')
lgpPMPandLDMF = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1))
if mibBuilder.loadTexts: lgpPMPandLDMF.setStatus('current')
if mibBuilder.loadTexts: lgpPMPandLDMF.setDescription('This branch is used to register Liebert Combined\n                PMP version 4/LDMF Product information.')
lgpPMPgeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 1))
if mibBuilder.loadTexts: lgpPMPgeneric.setStatus('current')
if mibBuilder.loadTexts: lgpPMPgeneric.setDescription('This branch is used to register information for \n                   Liebert PMP version 4.')
if mibBuilder.loadTexts: lgpPMPgeneric.setReference('There are currently no objects registered under this branch.')
lgpPMPonFPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 2))
if mibBuilder.loadTexts: lgpPMPonFPC.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonFPC.setDescription('This branch is used to register information for \n                   Liebert PMP version 4 for FPC.')
if mibBuilder.loadTexts: lgpPMPonFPC.setReference('There are currently no objects registered under this branch.')
lgpPMPonPPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 3))
if mibBuilder.loadTexts: lgpPMPonPPC.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonPPC.setDescription('This branch is used to register information for \n                   Liebert PMP version 4 for PPC.')
if mibBuilder.loadTexts: lgpPMPonPPC.setReference('There are currently no objects registered under this branch.')
lgpPMPonFDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 4))
if mibBuilder.loadTexts: lgpPMPonFDC.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonFDC.setDescription('This branch is used to register information for \n                   Liebert PMP version 4 for FDC.')
if mibBuilder.loadTexts: lgpPMPonFDC.setReference('There are currently no objects registered under this branch.')
lgpPMPonRDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 5))
if mibBuilder.loadTexts: lgpPMPonRDC.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonRDC.setDescription('This branch is used to register information for \n                   Liebert PMP version 4 for RDC.')
if mibBuilder.loadTexts: lgpPMPonRDC.setReference('There are currently no objects registered under this branch.')
lgpPMPonEXC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 6))
if mibBuilder.loadTexts: lgpPMPonEXC.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonEXC.setDescription('This branch is used to register information for \n                   Liebert PMP version 4 for EXC.')
if mibBuilder.loadTexts: lgpPMPonEXC.setReference('There are currently no objects registered under this branch.')
lgpPMPonSTS2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 7))
if mibBuilder.loadTexts: lgpPMPonSTS2.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonSTS2.setDescription('This branch is used to register information for \n                   Liebert PMP version 4 for STS2.')
if mibBuilder.loadTexts: lgpPMPonSTS2.setReference('There are currently no objects registered under this branch.')
lgpPMPonSTS2PDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 8))
if mibBuilder.loadTexts: lgpPMPonSTS2PDU.setStatus('current')
if mibBuilder.loadTexts: lgpPMPonSTS2PDU.setDescription('This branch is used to register information for \n                   Liebert PMP version 4 for STS2/PDU.')
if mibBuilder.loadTexts: lgpPMPonSTS2PDU.setReference('There are currently no objects registered under this branch.')
mibBuilder.exportSymbols("LIEBERT-GP-REGISTRATION-MIB", lgpEPM400k=lgpEPM400k, lgpConditions=lgpConditions, lgpIcomDCL=lgpIcomDCL, lgpNXLJD=lgpNXLJD, lgpNXRb=lgpNXRb, lgpEPM800k=lgpEPM800k, lgpAdvancedMicroprocessor=lgpAdvancedMicroprocessor, lgpPower=lgpPower, lgpRPC2kMPX=lgpRPC2kMPX, lgpNotifications=lgpNotifications, lgpNfinity=lgpNfinity, lgpStaticTransferSwitch2FourPole=lgpStaticTransferSwitch2FourPole, lgpITA=lgpITA, lgpStaticTransferSwitch1=lgpStaticTransferSwitch1, lgpSeries600or610=lgpSeries600or610, lgpIcomSCtypeHPCSLarge=lgpIcomSCtypeHPCSLarge, lgpPMPonRDC=lgpPMPonRDC, lgpAgentNotifications=lgpAgentNotifications, liebertCorp=liebertCorp, lgpEXLS1UPS=lgpEXLS1UPS, lgpIcomPAtypePEXS=lgpIcomPAtypePEXS, lgpGXT3Dual=lgpGXT3Dual, lgpIcomXPtypeXDPW=lgpIcomXPtypeXDPW, lgpIcomSCtypeHPCM=lgpIcomSCtypeHPCM, lgpSeries7200=lgpSeries7200, lgpGXT4Dual=lgpGXT4Dual, lgpEXLS1=lgpEXLS1, lgpUPStationGXT=lgpUPStationGXT, lgpEPM500k=lgpEPM500k, lgpSuper400=lgpSuper400, lgpEnvironmental=lgpEnvironmental, liebertEnvironmentalModuleReg=liebertEnvironmentalModuleReg, lgpIcomPAtypeDSE400=lgpIcomPAtypeDSE400, liebertSystemModuleReg=liebertSystemModuleReg, lgpEPM=lgpEPM, lgpCombinedSystemProducts=lgpCombinedSystemProducts, lgpITA2cap20k=lgpITA2cap20k, lgpITA2=lgpITA2, lgpSystem=lgpSystem, lgpStaticTransferSwitch2=lgpStaticTransferSwitch2, lgpMiniMate2=lgpMiniMate2, lgpCEMS100orLECS15=lgpCEMS100orLECS15, lgpGXT3=lgpGXT3, lgpMUNiMx=lgpMUNiMx, lgpAPM600=lgpAPM600, lgpPdu=lgpPdu, lgpPMPonSTS2=lgpPMPonSTS2, lgpAgentDevice=lgpAgentDevice, lgpPMPonSTS2PDU=lgpPMPonSTS2PDU, lgpIcomXD=lgpIcomXD, lgpPMPgeneric=lgpPMPgeneric, lgpEXM=lgpEXM, vertiv=vertiv, lgpIcomSCtypeHPCR=lgpIcomSCtypeHPCR, lgpIcomXPtypeXDPCray=lgpIcomXPtypeXDPCray, lgpEPMP=lgpEPMP, liebertAgentModuleReg=liebertAgentModuleReg, lgpIcomCR=lgpIcomCR, lgpIcomPAtypePCWsmall=lgpIcomPAtypePCWsmall, lgpIcomPAtypeDSE=lgpIcomPAtypeDSE, lgpEXL=lgpEXL, lgpIcomPAtypePDXsmall=lgpIcomPAtypePDXsmall, lgpEXM208v=lgpEXM208v, lgpNX225to600k=lgpNX225to600k, lgpIcomSCtypeHPCSSmall=lgpIcomSCtypeHPCSSmall, lgpGXE=lgpGXE, lgpIcomPAtypePDXlarge=lgpIcomPAtypePDXlarge, lgpPMPonFPC=lgpPMPonFPC, lgpIcomPAtypeDeluxeSystem3=lgpIcomPAtypeDeluxeSystem3, lgpSrc=lgpSrc, lgpITA30to40k=lgpITA30to40k, PYSNMP_MODULE_ID=liebertGlobalProductsRegistrationModule, liebertSrcModuleReg=liebertSrcModuleReg, lgpPMPonEXC=lgpPMPonEXC, lgpEXM400v=lgpEXM400v, lgpIcomPAtypeDS=lgpIcomPAtypeDS, lgpAgentControl=lgpAgentControl, lgpIcomPAtypeCW=lgpIcomPAtypeCW, lgpMPX=lgpMPX, lgpNXC=lgpNXC, liebertControllerModuleReg=liebertControllerModuleReg, lgpGXT5=lgpGXT5, lgpRPC2kMPH=lgpRPC2kMPH, lgpAPS=lgpAPS, lgpRackPDU=lgpRackPDU, lgpPowerSureInteractive2=lgpPowerSureInteractive2, lgpPowerSureInteractive5=lgpPowerSureInteractive5, lgpEXMMSR=lgpEXMMSR, lgpIcomPAtypePDX=lgpIcomPAtypePDX, lgpEXSRackMountAndFrame1=lgpEXSRackMountAndFrame1, lgpITA2cap5k30k=lgpITA2cap5k30k, lgpEXM480v=lgpEXM480v, lgpIcomPAtypePeX=lgpIcomPAtypePeX, lgpProductSpecific=lgpProductSpecific, lgpEXS=lgpEXS, lgpEPM600k=lgpEPM600k, lgpNXr=lgpNXr, lgpHiNet=lgpHiNet, lgpAgent=lgpAgent, lgpUpsProducts=lgpUpsProducts, lgpNXC30to40k=lgpNXC30to40k, lgpGXT2Dual=lgpGXT2Dual, lgpSeries610SCC=lgpSeries610SCC, lgpMiniMate3=lgpMiniMate3, lgpRackPDU2=lgpRackPDU2, lgpSeries610MMU=lgpSeries610MMU, lgpStaticTransferSwitchEDS=lgpStaticTransferSwitchEDS, lgpIcomPA=lgpIcomPA, lgpIcomXPtypeXDP=lgpIcomXPtypeXDP, lgpMPH=lgpMPH, lgpIcomPAtypePCWlarge=lgpIcomPAtypePCWlarge, lgpIcomXDtypeXDFN=lgpIcomXDtypeXDFN, lgpEPM300k=lgpEPM300k, lgpHimod=lgpHimod, lgpIcomCRtypeCRV=lgpIcomCRtypeCRV, liebertPduModuleReg=liebertPduModuleReg, lgpIcom=lgpIcom, lgpNX=lgpNX, liebertModuleReg=liebertModuleReg, lgpITA2cap40k=lgpITA2cap40k, lgpMultiLinkBasicNotification=lgpMultiLinkBasicNotification, lgpPowerConditioningProducts=lgpPowerConditioningProducts, liebertGlobalProducts=liebertGlobalProducts, lgpNpower=lgpNpower, lgpAgentIdent=lgpAgentIdent, lgpIcomPAtypeHPM=lgpIcomPAtypeHPM, lgpGXT4=lgpGXT4, liebertPowerModuleReg=liebertPowerModuleReg, lgpIcomPAtypeHPS=lgpIcomPAtypeHPS, lgpModuleReg=lgpModuleReg, lgpPowerSureInteractive=lgpPowerSureInteractive, lgpIcomAHStandard=lgpIcomAHStandard, lgpSeries610SMS=lgpSeries610SMS, lgpAcProducts=lgpAcProducts, lgpPMP=lgpPMP, liebertConditionsModuleReg=liebertConditionsModuleReg, lgpIcomXP=lgpIcomXP, lgpPowerDistributionProducts=lgpPowerDistributionProducts, liebertFlexibleModuleReg=liebertFlexibleModuleReg, lgpFoundation=lgpFoundation, lgpIcomXDtypeXDF=lgpIcomXDtypeXDF, lgpSeries300=lgpSeries300, lgpIcomPAtypeDeluxeSys3=lgpIcomPAtypeDeluxeSys3, lgpIcomAH=lgpIcomAH, liebertNotificationsModuleReg=liebertNotificationsModuleReg, lgpIcomPAtypeJumboCW=lgpIcomPAtypeJumboCW, lgpIcomSCtypeHPCL=lgpIcomSCtypeHPCL, lgpController=lgpController, lgpMultiLinkProducts=lgpMultiLinkProducts, lgpIcomEEV=lgpIcomEEV, lgpIcomPAtypeChallenger=lgpIcomPAtypeChallenger, liebertGlobalProductsRegistrationModule=liebertGlobalProductsRegistrationModule, lgpPMPandLDMF=lgpPMPandLDMF, liebertFlexibleConditionsModuleReg=liebertFlexibleConditionsModuleReg, lgpStandardMicroprocessor=lgpStandardMicroprocessor, lgpFlexible=lgpFlexible, lgpIcomSCtypeHPCW=lgpIcomSCtypeHPCW, lgpIcomSCtypeHPC=lgpIcomSCtypeHPC, lgpPMPonFDC=lgpPMPonFDC, lgpIcomSC=lgpIcomSC, lgpPMPonPPC=lgpPMPonPPC, lgpNXL=lgpNXL, lgpTransferSwitchProducts=lgpTransferSwitchProducts, lgpIcomXPtypeXDC=lgpIcomXPtypeXDC)
