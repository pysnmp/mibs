#
# PySNMP MIB module MIKROTIK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/mikrotik/MIKROTIK-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 13:54:36 2024
# On host fv-az1110-484 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, enterprises, Integer32, NotificationType, iso, MibIdentifier, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, Gauge32, Unsigned32, TimeTicks, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "enterprises", "Integer32", "NotificationType", "iso", "MibIdentifier", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "Gauge32", "Unsigned32", "TimeTicks", "ModuleIdentity")
MacAddress, TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString", "DateAndTime")
mikrotikExperimentalModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 14988, 1))
mikrotikExperimentalModule.setRevisions(('2020-10-08 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: mikrotikExperimentalModule.setRevisionsDescriptions(('',))
if mibBuilder.loadTexts: mikrotikExperimentalModule.setLastUpdated('202010080000Z')
if mibBuilder.loadTexts: mikrotikExperimentalModule.setOrganization('MikroTik')
if mibBuilder.loadTexts: mikrotikExperimentalModule.setContactInfo('support@mikrotik.com')
if mibBuilder.loadTexts: mikrotikExperimentalModule.setDescription('')
mikrotik = MibIdentifier((1, 3, 6, 1, 4, 1, 14988))
mtXMetaInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 2))
mtXRouterOsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1))
mtXRouterOs = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1))
mtxrWireless = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1))
mtxrQueues = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2))
mtxrHealth = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3))
mtxrLicense = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 4))
mtxrHotspot = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5))
mtxrDHCP = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 6))
mtxrSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 7))
mtxrScripts = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 8))
mtxrTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 9))
mtxrNstremeDual = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 10))
mtxrNeighbor = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 11))
mtxrGps = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 12))
mtxrWirelessModem = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 13))
mtxrInterfaceStats = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14))
mtxrPOE = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 15))
mtxrLTEModem = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16))
mtxrPartition = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 17))
mtxrScriptRun = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 18))
mtxrOptical = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19))
mtxrIPSec = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20))
class ObjectIndex(TextualConvention, Integer32):
    description = 'Internal '
    status = 'current'
    displayHint = 'x'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class HexInt(TextualConvention, Integer32):
    description = 'Hex'
    status = 'current'
    displayHint = 'x'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-2147483648, 2147483647)

class Voltage(TextualConvention, Integer32):
    description = ''
    status = 'current'
    displayHint = 'd-1'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-2147483648, 2147483647)

class Temperature(TextualConvention, Integer32):
    description = ''
    status = 'current'
    displayHint = 'd-1'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-2147483648, 2147483647)

class Power(TextualConvention, Integer32):
    description = ''
    status = 'current'
    displayHint = 'd-1'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-2147483648, 2147483647)

class GDiv100(TextualConvention, Gauge32):
    description = '/100'
    status = 'current'
    displayHint = 'd-2'

class GDiv1000(TextualConvention, Gauge32):
    description = '/1000'
    status = 'current'
    displayHint = 'd-3'

class IDiv1000(TextualConvention, Integer32):
    description = '/1000'
    status = 'current'
    displayHint = 'd-3'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-2147483648, 2147483647)

class BoolValue(TextualConvention, Integer32):
    description = 'Boolean value.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("false", 0), ("true", 1))

class IsakmpCookie(TextualConvention, OctetString):
    description = 'ISAKMP cookie string'
    status = 'current'
    displayHint = '16a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

mtxrWlStatTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1), )
if mibBuilder.loadTexts: mtxrWlStatTable.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatTable.setDescription('')
mtxrWlStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrWlStatIndex"))
if mibBuilder.loadTexts: mtxrWlStatEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatEntry.setDescription('Wireless station mode interface')
mtxrWlStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrWlStatIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatIndex.setDescription('')
mtxrWlStatTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlStatTxRate.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatTxRate.setDescription('bits per second')
mtxrWlStatRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlStatRxRate.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatRxRate.setDescription('bits per second')
mtxrWlStatStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlStatStrength.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatStrength.setDescription('dBm')
mtxrWlStatSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlStatSsid.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatSsid.setDescription('')
mtxrWlStatBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlStatBssid.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatBssid.setDescription('')
mtxrWlStatFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlStatFreq.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatFreq.setDescription('megahertz')
mtxrWlStatBand = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlStatBand.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatBand.setDescription('')
mtxrWlStatTxCCQ = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlStatTxCCQ.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatTxCCQ.setDescription('')
mtxrWlStatRxCCQ = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlStatRxCCQ.setStatus('current')
if mibBuilder.loadTexts: mtxrWlStatRxCCQ.setDescription('')
mtxrWlRtabTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2), )
if mibBuilder.loadTexts: mtxrWlRtabTable.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabTable.setDescription('')
mtxrWlRtabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrWlRtabAddr"), (0, "MIKROTIK-MIB", "mtxrWlRtabIface"))
if mibBuilder.loadTexts: mtxrWlRtabEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabEntry.setDescription('Wireless registration table. It is indexed by remote\n        mac-address and local interface index')
mtxrWlRtabAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: mtxrWlRtabAddr.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabAddr.setDescription('')
mtxrWlRtabIface = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 2), ObjectIndex())
if mibBuilder.loadTexts: mtxrWlRtabIface.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabIface.setDescription('')
mtxrWlRtabStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabStrength.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabStrength.setDescription('dBm')
mtxrWlRtabTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabTxBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabTxBytes.setDescription('')
mtxrWlRtabRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabRxBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabRxBytes.setDescription('')
mtxrWlRtabTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabTxPackets.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabTxPackets.setDescription('')
mtxrWlRtabRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabRxPackets.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabRxPackets.setDescription('')
mtxrWlRtabTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabTxRate.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabTxRate.setDescription('bits per second')
mtxrWlRtabRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabRxRate.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabRxRate.setDescription('bits per second')
mtxrWlRtabRouterOSVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabRouterOSVersion.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabRouterOSVersion.setDescription('RouterOS version')
mtxrWlRtabUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabUptime.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabUptime.setDescription('uptime')
mtxrWlRtabSignalToNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabSignalToNoise.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabSignalToNoise.setDescription('Measured in dB, if value does not exist it is indicated with 0')
mtxrWlRtabTxStrengthCh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabTxStrengthCh0.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabTxStrengthCh0.setDescription('')
mtxrWlRtabRxStrengthCh0 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabRxStrengthCh0.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabRxStrengthCh0.setDescription('')
mtxrWlRtabTxStrengthCh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabTxStrengthCh1.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabTxStrengthCh1.setDescription('')
mtxrWlRtabRxStrengthCh1 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabRxStrengthCh1.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabRxStrengthCh1.setDescription('')
mtxrWlRtabTxStrengthCh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabTxStrengthCh2.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabTxStrengthCh2.setDescription('')
mtxrWlRtabRxStrengthCh2 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabRxStrengthCh2.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabRxStrengthCh2.setDescription('')
mtxrWlRtabTxStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabTxStrength.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabTxStrength.setDescription('')
mtxrWlRtabRadioName = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 2, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabRadioName.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabRadioName.setDescription('')
mtxrWlRtabEntryCount = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlRtabEntryCount.setStatus('current')
if mibBuilder.loadTexts: mtxrWlRtabEntryCount.setDescription('Wireless registration table entry count')
mtxrWlApTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3), )
if mibBuilder.loadTexts: mtxrWlApTable.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApTable.setDescription('')
mtxrWlApEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrWlApIndex"))
if mibBuilder.loadTexts: mtxrWlApEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApEntry.setDescription('Wireless access point mode interface')
mtxrWlApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrWlApIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApIndex.setDescription('')
mtxrWlApTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlApTxRate.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApTxRate.setDescription('bits per second')
mtxrWlApRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlApRxRate.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApRxRate.setDescription('bits per second')
mtxrWlApSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlApSsid.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApSsid.setDescription('')
mtxrWlApBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlApBssid.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApBssid.setDescription('')
mtxrWlApClientCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlApClientCount.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApClientCount.setDescription('')
mtxrWlApFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlApFreq.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApFreq.setDescription('megahertz')
mtxrWlApBand = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlApBand.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApBand.setDescription('')
mtxrWlApNoiseFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlApNoiseFloor.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApNoiseFloor.setDescription('')
mtxrWlApOverallTxCCQ = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlApOverallTxCCQ.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApOverallTxCCQ.setDescription('')
mtxrWlApAuthClientCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlApAuthClientCount.setStatus('current')
if mibBuilder.loadTexts: mtxrWlApAuthClientCount.setDescription('')
mtxrWlCMRtabTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5), )
if mibBuilder.loadTexts: mtxrWlCMRtabTable.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabTable.setDescription('')
mtxrWlCMRtabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrWlCMRtabAddr"), (0, "MIKROTIK-MIB", "mtxrWlCMRtabIface"))
if mibBuilder.loadTexts: mtxrWlCMRtabEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabEntry.setDescription('Wireless CAPSMAN registration table. It is indexed by remote\n        mac-address and local interface index')
mtxrWlCMRtabAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabAddr.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabAddr.setDescription('')
mtxrWlCMRtabIface = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 2), ObjectIndex())
if mibBuilder.loadTexts: mtxrWlCMRtabIface.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabIface.setDescription('')
mtxrWlCMRtabUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabUptime.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabUptime.setDescription('uptime')
mtxrWlCMRtabTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabTxBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabTxBytes.setDescription('')
mtxrWlCMRtabRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabRxBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabRxBytes.setDescription('')
mtxrWlCMRtabTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabTxPackets.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabTxPackets.setDescription('')
mtxrWlCMRtabRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabRxPackets.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabRxPackets.setDescription('')
mtxrWlCMRtabTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabTxRate.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabTxRate.setDescription('bits per second')
mtxrWlCMRtabRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabRxRate.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabRxRate.setDescription('bits per second')
mtxrWlCMRtabTxStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabTxStrength.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabTxStrength.setDescription('')
mtxrWlCMRtabRxStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabRxStrength.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabRxStrength.setDescription('')
mtxrWlCMRtabSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabSsid.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabSsid.setDescription('')
mtxrWlCMRtabEapIdent = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 5, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabEapIdent.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabEapIdent.setDescription('')
mtxrWlCMRtabEntryCount = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRtabEntryCount.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRtabEntryCount.setDescription('Wireless CAPSMAN registration table entry count')
mtxrWlCMREntryCount = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMREntryCount.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMREntryCount.setDescription('Wireless CAPSMAN remote-cap entry count')
mtxrWlCMTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 7), )
if mibBuilder.loadTexts: mtxrWlCMTable.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMTable.setDescription('')
mtxrWlCMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 7, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrWlCMIndex"))
if mibBuilder.loadTexts: mtxrWlCMEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMEntry.setDescription('CAPS-MAN mode interface')
mtxrWlCMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 7, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrWlCMIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMIndex.setDescription('')
mtxrWlCMRegClientCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRegClientCount.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRegClientCount.setDescription('')
mtxrWlCMAuthClientCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMAuthClientCount.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMAuthClientCount.setDescription('')
mtxrWlCMState = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 7, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMState.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMState.setDescription('')
mtxrWlCMChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 7, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMChannel.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMChannel.setDescription('for master only')
mtxrWlCMRemoteTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 11), )
if mibBuilder.loadTexts: mtxrWlCMRemoteTable.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRemoteTable.setDescription('')
mtxrWlCMRemoteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 11, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrWlCMRemoteIndex"))
if mibBuilder.loadTexts: mtxrWlCMRemoteEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRemoteEntry.setDescription('CAPSMAN remote-cap list')
mtxrWlCMRemoteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 11, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrWlCMRemoteIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRemoteIndex.setDescription('')
mtxrWlCMRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRemoteName.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRemoteName.setDescription('')
mtxrWlCMRemoteState = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRemoteState.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRemoteState.setDescription('')
mtxrWlCMRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRemoteAddress.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRemoteAddress.setDescription('')
mtxrWlCMRemoteRadios = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWlCMRemoteRadios.setStatus('current')
if mibBuilder.loadTexts: mtxrWlCMRemoteRadios.setDescription('')
mtxrWl60GTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8), )
if mibBuilder.loadTexts: mtxrWl60GTable.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GTable.setDescription('')
mtxrWl60GEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrWl60GIndex"))
if mibBuilder.loadTexts: mtxrWl60GEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GEntry.setDescription('W60G interface')
mtxrWl60GIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrWl60GIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GIndex.setDescription('')
mtxrWl60GMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("apBridge", 0), ("stationBridge", 1), ("sniff", 2), ("bridge", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GMode.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GMode.setDescription('')
mtxrWl60GSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GSsid.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GSsid.setDescription('')
mtxrWl60GConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GConnected.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GConnected.setDescription('')
mtxrWl60GRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GRemote.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GRemote.setDescription('')
mtxrWl60GFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GFreq.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GFreq.setDescription('Mhz')
mtxrWl60GMcs = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GMcs.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GMcs.setDescription('')
mtxrWl60GSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GSignal.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GSignal.setDescription('')
mtxrWl60GTxSector = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GTxSector.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GTxSector.setDescription('')
mtxrWl60GTxSectorInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GTxSectorInfo.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GTxSectorInfo.setDescription('')
mtxrWl60GRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GRssi.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GRssi.setDescription('')
mtxrWl60GPhyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 8, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GPhyRate.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GPhyRate.setDescription('')
mtxrWl60GStaTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 9), )
if mibBuilder.loadTexts: mtxrWl60GStaTable.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GStaTable.setDescription('')
mtxrWl60GStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 9, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrWl60GStaIndex"))
if mibBuilder.loadTexts: mtxrWl60GStaEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GStaEntry.setDescription('W60G stations')
mtxrWl60GStaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 9, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrWl60GStaIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GStaIndex.setDescription('')
mtxrWl60GStaConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 9, 1, 2), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GStaConnected.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GStaConnected.setDescription('')
mtxrWl60GStaRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 9, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GStaRemote.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GStaRemote.setDescription('')
mtxrWl60GStaMcs = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GStaMcs.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GStaMcs.setDescription('')
mtxrWl60GStaSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GStaSignal.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GStaSignal.setDescription('')
mtxrWl60GStaTxSector = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GStaTxSector.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GStaTxSector.setDescription('')
mtxrWl60GStaPhyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 9, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GStaPhyRate.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GStaPhyRate.setDescription('Mbits per second')
mtxrWl60GStaRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 9, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GStaRssi.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GStaRssi.setDescription('')
mtxrWl60GStaDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 1, 9, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWl60GStaDistance.setStatus('current')
if mibBuilder.loadTexts: mtxrWl60GStaDistance.setDescription('meters')
mtxrWirelessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 1)).setObjects(("MIKROTIK-MIB", "mtxrWlStatTxRate"), ("MIKROTIK-MIB", "mtxrWlStatRxRate"), ("MIKROTIK-MIB", "mtxrWlStatStrength"), ("MIKROTIK-MIB", "mtxrWlStatSsid"), ("MIKROTIK-MIB", "mtxrWlStatBssid"), ("MIKROTIK-MIB", "mtxrWlStatFreq"), ("MIKROTIK-MIB", "mtxrWlStatBand"), ("MIKROTIK-MIB", "mtxrWlStatTxCCQ"), ("MIKROTIK-MIB", "mtxrWlStatRxCCQ"), ("MIKROTIK-MIB", "mtxrWlRtabStrength"), ("MIKROTIK-MIB", "mtxrWlRtabTxBytes"), ("MIKROTIK-MIB", "mtxrWlRtabRxBytes"), ("MIKROTIK-MIB", "mtxrWlRtabTxPackets"), ("MIKROTIK-MIB", "mtxrWlRtabRxPackets"), ("MIKROTIK-MIB", "mtxrWlRtabTxRate"), ("MIKROTIK-MIB", "mtxrWlRtabRxRate"), ("MIKROTIK-MIB", "mtxrWlRtabEntryCount"), ("MIKROTIK-MIB", "mtxrWlRtabRouterOSVersion"), ("MIKROTIK-MIB", "mtxrWlRtabUptime"), ("MIKROTIK-MIB", "mtxrWlRtabSignalToNoise"), ("MIKROTIK-MIB", "mtxrWlRtabTxStrengthCh0"), ("MIKROTIK-MIB", "mtxrWlRtabRxStrengthCh0"), ("MIKROTIK-MIB", "mtxrWlRtabTxStrengthCh1"), ("MIKROTIK-MIB", "mtxrWlRtabRxStrengthCh1"), ("MIKROTIK-MIB", "mtxrWlRtabTxStrengthCh2"), ("MIKROTIK-MIB", "mtxrWlRtabRxStrengthCh2"), ("MIKROTIK-MIB", "mtxrWlRtabTxStrength"), ("MIKROTIK-MIB", "mtxrWlRtabRadioName"), ("MIKROTIK-MIB", "mtxrWlApTxRate"), ("MIKROTIK-MIB", "mtxrWlApRxRate"), ("MIKROTIK-MIB", "mtxrWlApSsid"), ("MIKROTIK-MIB", "mtxrWlApBssid"), ("MIKROTIK-MIB", "mtxrWlApClientCount"), ("MIKROTIK-MIB", "mtxrWlApBand"), ("MIKROTIK-MIB", "mtxrWlApFreq"), ("MIKROTIK-MIB", "mtxrWlApNoiseFloor"), ("MIKROTIK-MIB", "mtxrWlApOverallTxCCQ"), ("MIKROTIK-MIB", "mtxrWlApAuthClientCount"), ("MIKROTIK-MIB", "mtxrWlCMRtabAddr"), ("MIKROTIK-MIB", "mtxrWlCMRtabTxBytes"), ("MIKROTIK-MIB", "mtxrWlCMRtabRxBytes"), ("MIKROTIK-MIB", "mtxrWlCMRtabTxPackets"), ("MIKROTIK-MIB", "mtxrWlCMRtabRxPackets"), ("MIKROTIK-MIB", "mtxrWlCMRtabTxRate"), ("MIKROTIK-MIB", "mtxrWlCMRtabRxRate"), ("MIKROTIK-MIB", "mtxrWlCMRtabUptime"), ("MIKROTIK-MIB", "mtxrWlCMRtabTxStrength"), ("MIKROTIK-MIB", "mtxrWlCMRtabRxStrength"), ("MIKROTIK-MIB", "mtxrWlCMRtabSsid"), ("MIKROTIK-MIB", "mtxrWlCMRtabEntryCount"), ("MIKROTIK-MIB", "mtxrWlCMREntryCount"), ("MIKROTIK-MIB", "mtxrWlCMRegClientCount"), ("MIKROTIK-MIB", "mtxrWlCMAuthClientCount"), ("MIKROTIK-MIB", "mtxrWl60GMode"), ("MIKROTIK-MIB", "mtxrWl60GSsid"), ("MIKROTIK-MIB", "mtxrWl60GConnected"), ("MIKROTIK-MIB", "mtxrWl60GRemote"), ("MIKROTIK-MIB", "mtxrWl60GFreq"), ("MIKROTIK-MIB", "mtxrWl60GMcs"), ("MIKROTIK-MIB", "mtxrWl60GSignal"), ("MIKROTIK-MIB", "mtxrWl60GTxSector"), ("MIKROTIK-MIB", "mtxrWl60GTxSectorInfo"), ("MIKROTIK-MIB", "mtxrWl60GRssi"), ("MIKROTIK-MIB", "mtxrWl60GPhyRate"), ("MIKROTIK-MIB", "mtxrWl60GStaConnected"), ("MIKROTIK-MIB", "mtxrWl60GStaRemote"), ("MIKROTIK-MIB", "mtxrWl60GStaMcs"), ("MIKROTIK-MIB", "mtxrWl60GStaSignal"), ("MIKROTIK-MIB", "mtxrWl60GStaTxSector"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrWirelessGroup = mtxrWirelessGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrWirelessGroup.setDescription('')
mtxrQueueSimpleTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1), )
if mibBuilder.loadTexts: mtxrQueueSimpleTable.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleTable.setDescription('')
mtxrQueueSimpleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrQueueSimpleIndex"))
if mibBuilder.loadTexts: mtxrQueueSimpleEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleEntry.setDescription('Simple queue')
mtxrQueueSimpleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrQueueSimpleIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleIndex.setDescription('')
mtxrQueueSimpleName = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimpleName.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleName.setDescription('')
mtxrQueueSimpleSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimpleSrcAddr.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleSrcAddr.setDescription('')
mtxrQueueSimpleSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimpleSrcMask.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleSrcMask.setDescription('')
mtxrQueueSimpleDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimpleDstAddr.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleDstAddr.setDescription('')
mtxrQueueSimpleDstMask = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimpleDstMask.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleDstMask.setDescription('')
mtxrQueueSimpleIface = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 7), ObjectIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimpleIface.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleIface.setDescription('interface index')
mtxrQueueSimpleBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimpleBytesIn.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleBytesIn.setDescription('')
mtxrQueueSimpleBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimpleBytesOut.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleBytesOut.setDescription('')
mtxrQueueSimplePacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimplePacketsIn.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimplePacketsIn.setDescription('')
mtxrQueueSimplePacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimplePacketsOut.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimplePacketsOut.setDescription('')
mtxrQueueSimplePCQQueuesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimplePCQQueuesIn.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimplePCQQueuesIn.setDescription('')
mtxrQueueSimplePCQQueuesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimplePCQQueuesOut.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimplePCQQueuesOut.setDescription('')
mtxrQueueSimpleDroppedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimpleDroppedIn.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleDroppedIn.setDescription('')
mtxrQueueSimpleDroppedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueSimpleDroppedOut.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueSimpleDroppedOut.setDescription('')
mtxrQueueTreeTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 2), )
if mibBuilder.loadTexts: mtxrQueueTreeTable.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueTreeTable.setDescription('')
mtxrQueueTreeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 2, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrQueueTreeIndex"))
if mibBuilder.loadTexts: mtxrQueueTreeEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueTreeEntry.setDescription('Tree queue')
mtxrQueueTreeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 2, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrQueueTreeIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueTreeIndex.setDescription('')
mtxrQueueTreeName = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueTreeName.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueTreeName.setDescription('')
mtxrQueueTreeFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueTreeFlow.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueTreeFlow.setDescription('flowmark')
mtxrQueueTreeParentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 2, 1, 4), ObjectIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueTreeParentIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueTreeParentIndex.setDescription('index of parent tree queue or parent interface')
mtxrQueueTreeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueTreeBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueTreeBytes.setDescription('')
mtxrQueueTreePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueTreePackets.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueTreePackets.setDescription('')
mtxrQueueTreeHCBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueTreeHCBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueTreeHCBytes.setDescription('')
mtxrQueueTreePCQQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueTreePCQQueues.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueTreePCQQueues.setDescription('')
mtxrQueueTreeDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrQueueTreeDropped.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueTreeDropped.setDescription('')
mtxrQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 2)).setObjects(("MIKROTIK-MIB", "mtxrQueueSimpleName"), ("MIKROTIK-MIB", "mtxrQueueSimpleSrcAddr"), ("MIKROTIK-MIB", "mtxrQueueSimpleSrcMask"), ("MIKROTIK-MIB", "mtxrQueueSimpleDstAddr"), ("MIKROTIK-MIB", "mtxrQueueSimpleDstMask"), ("MIKROTIK-MIB", "mtxrQueueSimpleIface"), ("MIKROTIK-MIB", "mtxrQueueSimpleBytesIn"), ("MIKROTIK-MIB", "mtxrQueueSimpleBytesOut"), ("MIKROTIK-MIB", "mtxrQueueSimplePacketsIn"), ("MIKROTIK-MIB", "mtxrQueueSimplePacketsOut"), ("MIKROTIK-MIB", "mtxrQueueTreeName"), ("MIKROTIK-MIB", "mtxrQueueSimplePCQQueuesIn"), ("MIKROTIK-MIB", "mtxrQueueSimplePCQQueuesOut"), ("MIKROTIK-MIB", "mtxrQueueSimpleDroppedIn"), ("MIKROTIK-MIB", "mtxrQueueSimpleDroppedOut"), ("MIKROTIK-MIB", "mtxrQueueTreeFlow"), ("MIKROTIK-MIB", "mtxrQueueTreeParentIndex"), ("MIKROTIK-MIB", "mtxrQueueTreeBytes"), ("MIKROTIK-MIB", "mtxrQueueTreePackets"), ("MIKROTIK-MIB", "mtxrQueueTreeHCBytes"), ("MIKROTIK-MIB", "mtxrQueueTreePCQQueues"), ("MIKROTIK-MIB", "mtxrQueueTreeDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrQueueGroup = mtxrQueueGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrQueueGroup.setDescription('')
mtxrHlCoreVoltage = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 1), Voltage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlCoreVoltage.setStatus('current')
if mibBuilder.loadTexts: mtxrHlCoreVoltage.setDescription('core voltage')
mtxrHlThreeDotThreeVoltage = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 2), Voltage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlThreeDotThreeVoltage.setStatus('current')
if mibBuilder.loadTexts: mtxrHlThreeDotThreeVoltage.setDescription('3.3V voltage')
mtxrHlFiveVoltage = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 3), Voltage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlFiveVoltage.setStatus('current')
if mibBuilder.loadTexts: mtxrHlFiveVoltage.setDescription('5V voltage')
mtxrHlTwelveVoltage = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 4), Voltage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlTwelveVoltage.setStatus('current')
if mibBuilder.loadTexts: mtxrHlTwelveVoltage.setDescription('12V voltage')
mtxrHlSensorTemperature = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 5), Temperature()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlSensorTemperature.setStatus('current')
if mibBuilder.loadTexts: mtxrHlSensorTemperature.setDescription('temperature at sensor chip')
mtxrHlCpuTemperature = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 6), Temperature()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlCpuTemperature.setStatus('current')
if mibBuilder.loadTexts: mtxrHlCpuTemperature.setDescription('temperature near cpu')
mtxrHlBoardTemperature = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 7), Temperature()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlBoardTemperature.setStatus('current')
if mibBuilder.loadTexts: mtxrHlBoardTemperature.setDescription('')
mtxrHlVoltage = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 8), Voltage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlVoltage.setStatus('current')
if mibBuilder.loadTexts: mtxrHlVoltage.setDescription('')
mtxrHlActiveFan = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlActiveFan.setStatus('current')
if mibBuilder.loadTexts: mtxrHlActiveFan.setDescription('')
mtxrHlTemperature = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 10), Temperature()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlTemperature.setStatus('current')
if mibBuilder.loadTexts: mtxrHlTemperature.setDescription('')
mtxrHlProcessorTemperature = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 11), Temperature()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlProcessorTemperature.setStatus('current')
if mibBuilder.loadTexts: mtxrHlProcessorTemperature.setDescription('')
mtxrHlPower = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 12), Power()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlPower.setStatus('current')
if mibBuilder.loadTexts: mtxrHlPower.setDescription('Watts')
mtxrHlCurrent = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlCurrent.setStatus('current')
if mibBuilder.loadTexts: mtxrHlCurrent.setDescription('mA')
mtxrHlProcessorFrequency = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlProcessorFrequency.setStatus('current')
if mibBuilder.loadTexts: mtxrHlProcessorFrequency.setDescription('Mhz')
mtxrHlPowerSupplyState = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 15), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlPowerSupplyState.setStatus('current')
if mibBuilder.loadTexts: mtxrHlPowerSupplyState.setDescription('PSU state ok')
mtxrHlBackupPowerSupplyState = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 16), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlBackupPowerSupplyState.setStatus('current')
if mibBuilder.loadTexts: mtxrHlBackupPowerSupplyState.setDescription('backup PSU state ok')
mtxrHlFanSpeed1 = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlFanSpeed1.setStatus('current')
if mibBuilder.loadTexts: mtxrHlFanSpeed1.setDescription('rpm')
mtxrHlFanSpeed2 = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHlFanSpeed2.setStatus('current')
if mibBuilder.loadTexts: mtxrHlFanSpeed2.setDescription('rpm')
mtxrGaugeTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 100), )
if mibBuilder.loadTexts: mtxrGaugeTable.setStatus('current')
if mibBuilder.loadTexts: mtxrGaugeTable.setDescription('')
mtxrGaugeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 100, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrGaugeIndex"))
if mibBuilder.loadTexts: mtxrGaugeTableEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrGaugeTableEntry.setDescription('')
mtxrGaugeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 100, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrGaugeIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrGaugeIndex.setDescription('')
mtxrGaugeName = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 100, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrGaugeName.setStatus('current')
if mibBuilder.loadTexts: mtxrGaugeName.setDescription('')
mtxrGaugeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 100, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrGaugeValue.setStatus('current')
if mibBuilder.loadTexts: mtxrGaugeValue.setDescription('')
mtxrGaugeUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 3, 100, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("celsius", 1), ("rpm", 2), ("dV", 3), ("dA", 4), ("dW", 5), ("status", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrGaugeUnit.setStatus('current')
if mibBuilder.loadTexts: mtxrGaugeUnit.setDescription('units')
mtxrHealthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 3)).setObjects(("MIKROTIK-MIB", "mtxrHlCoreVoltage"), ("MIKROTIK-MIB", "mtxrHlThreeDotThreeVoltage"), ("MIKROTIK-MIB", "mtxrHlFiveVoltage"), ("MIKROTIK-MIB", "mtxrHlTwelveVoltage"), ("MIKROTIK-MIB", "mtxrHlSensorTemperature"), ("MIKROTIK-MIB", "mtxrHlCpuTemperature"), ("MIKROTIK-MIB", "mtxrHlBoardTemperature"), ("MIKROTIK-MIB", "mtxrHlVoltage"), ("MIKROTIK-MIB", "mtxrHlActiveFan"), ("MIKROTIK-MIB", "mtxrHlTemperature"), ("MIKROTIK-MIB", "mtxrHlProcessorTemperature"), ("MIKROTIK-MIB", "mtxrHlCurrent"), ("MIKROTIK-MIB", "mtxrHlPower"), ("MIKROTIK-MIB", "mtxrHlProcessorFrequency"), ("MIKROTIK-MIB", "mtxrHlPowerSupplyState"), ("MIKROTIK-MIB", "mtxrHlBackupPowerSupplyState"), ("MIKROTIK-MIB", "mtxrHlFanSpeed1"), ("MIKROTIK-MIB", "mtxrHlFanSpeed2"), ("MIKROTIK-MIB", "mtxrGaugeName"), ("MIKROTIK-MIB", "mtxrGaugeValue"), ("MIKROTIK-MIB", "mtxrGaugeUnit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrHealthGroup = mtxrHealthGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrHealthGroup.setDescription('')
mtxrLicSoftwareId = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 4, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLicSoftwareId.setStatus('current')
if mibBuilder.loadTexts: mtxrLicSoftwareId.setDescription('software id')
mtxrLicUpgrUntil = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 4, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLicUpgrUntil.setStatus('current')
if mibBuilder.loadTexts: mtxrLicUpgrUntil.setDescription('current key allows upgrading until this date')
mtxrLicLevel = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLicLevel.setStatus('current')
if mibBuilder.loadTexts: mtxrLicLevel.setDescription('current key level')
mtxrLicVersion = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 4, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLicVersion.setStatus('current')
if mibBuilder.loadTexts: mtxrLicVersion.setDescription('software version')
mtxrLicUpgradableTo = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLicUpgradableTo.setStatus('current')
if mibBuilder.loadTexts: mtxrLicUpgradableTo.setDescription('upgradable to')
mtxrLincenseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 4)).setObjects(("MIKROTIK-MIB", "mtxrLicSoftwareId"), ("MIKROTIK-MIB", "mtxrLicUpgrUntil"), ("MIKROTIK-MIB", "mtxrLicLevel"), ("MIKROTIK-MIB", "mtxrLicVersion"), ("MIKROTIK-MIB", "mtxrLicUpgradableTo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrLincenseGroup = mtxrLincenseGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrLincenseGroup.setDescription('')
mtxrHotspotActiveUsersTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1), )
if mibBuilder.loadTexts: mtxrHotspotActiveUsersTable.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUsersTable.setDescription('')
mtxrHotspotActiveUsersTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrHotspotActiveUserIndex"))
if mibBuilder.loadTexts: mtxrHotspotActiveUsersTableEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUsersTableEntry.setDescription('')
mtxrHotspotActiveUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrHotspotActiveUserIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserIndex.setDescription('')
mtxrHotspotActiveUserServerID = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserServerID.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserServerID.setDescription('')
mtxrHotspotActiveUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserName.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserName.setDescription('')
mtxrHotspotActiveUserDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserDomain.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserDomain.setDescription('')
mtxrHotspotActiveUserIP = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserIP.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserIP.setDescription('')
mtxrHotspotActiveUserMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserMAC.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserMAC.setDescription('')
mtxrHotspotActiveUserConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserConnectTime.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserConnectTime.setDescription('')
mtxrHotspotActiveUserValidTillTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserValidTillTime.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserValidTillTime.setDescription('')
mtxrHotspotActiveUserIdleStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserIdleStartTime.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserIdleStartTime.setDescription('')
mtxrHotspotActiveUserIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserIdleTimeout.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserIdleTimeout.setDescription('')
mtxrHotspotActiveUserPingTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserPingTimeout.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserPingTimeout.setDescription('')
mtxrHotspotActiveUserBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserBytesIn.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserBytesIn.setDescription('')
mtxrHotspotActiveUserBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserBytesOut.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserBytesOut.setDescription('')
mtxrHotspotActiveUserPacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserPacketsIn.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserPacketsIn.setDescription('')
mtxrHotspotActiveUserPacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserPacketsOut.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserPacketsOut.setDescription('')
mtxrHotspotActiveUserLimitBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserLimitBytesIn.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserLimitBytesIn.setDescription('')
mtxrHotspotActiveUserLimitBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserLimitBytesOut.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserLimitBytesOut.setDescription('')
mtxrHotspotActiveUserAdvertStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserAdvertStatus.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserAdvertStatus.setDescription('')
mtxrHotspotActiveUserRadius = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserRadius.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserRadius.setDescription('')
mtxrHotspotActiveUserBlockedByAdvert = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 5, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrHotspotActiveUserBlockedByAdvert.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserBlockedByAdvert.setDescription('')
mtxrHotspotActiveUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 5)).setObjects(("MIKROTIK-MIB", "mtxrHotspotActiveUserServerID"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserName"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserDomain"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserIP"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserMAC"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserConnectTime"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserValidTillTime"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserIdleStartTime"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserIdleTimeout"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserPingTimeout"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserBytesIn"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserBytesOut"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserPacketsIn"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserPacketsOut"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserLimitBytesIn"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserLimitBytesOut"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserAdvertStatus"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserRadius"), ("MIKROTIK-MIB", "mtxrHotspotActiveUserBlockedByAdvert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrHotspotActiveUserGroup = mtxrHotspotActiveUserGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrHotspotActiveUserGroup.setDescription('')
mtxrDHCPLeaseCount = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrDHCPLeaseCount.setStatus('current')
if mibBuilder.loadTexts: mtxrDHCPLeaseCount.setDescription('')
mtxrDHCPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 12)).setObjects(("MIKROTIK-MIB", "mtxrDHCPLeaseCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrDHCPGroup = mtxrDHCPGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrDHCPGroup.setDescription('')
mtxrSystemReboot = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 7, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtxrSystemReboot.setStatus('current')
if mibBuilder.loadTexts: mtxrSystemReboot.setDescription('set non zero to reboot')
mtxrUSBPowerReset = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtxrUSBPowerReset.setStatus('current')
if mibBuilder.loadTexts: mtxrUSBPowerReset.setDescription('switches off usb power for specified amout of seconds')
mtxrSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 7, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrSerialNumber.setStatus('current')
if mibBuilder.loadTexts: mtxrSerialNumber.setDescription('RouterBOARD serial number')
mtxrFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrFirmwareVersion.setStatus('current')
if mibBuilder.loadTexts: mtxrFirmwareVersion.setDescription('Current firmware version')
mtxrNote = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 7, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrNote.setStatus('current')
if mibBuilder.loadTexts: mtxrNote.setDescription('note')
mtxrBuildTime = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 7, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrBuildTime.setStatus('current')
if mibBuilder.loadTexts: mtxrBuildTime.setDescription('build time')
mtxrFirmwareUpgradeVersion = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 7, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrFirmwareUpgradeVersion.setStatus('current')
if mibBuilder.loadTexts: mtxrFirmwareUpgradeVersion.setDescription('Upgrade firmware version')
mtxrBoardName = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 7, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrBoardName.setStatus('current')
if mibBuilder.loadTexts: mtxrBoardName.setDescription('board name')
mtxrSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 13)).setObjects(("MIKROTIK-MIB", "mtxrSystemReboot"), ("MIKROTIK-MIB", "mtxrUSBPowerReset"), ("MIKROTIK-MIB", "mtxrSerialNumber"), ("MIKROTIK-MIB", "mtxrFirmwareVersion"), ("MIKROTIK-MIB", "mtxrNote"), ("MIKROTIK-MIB", "mtxrBuildTime"), ("MIKROTIK-MIB", "mtxrFirmwareUpgradeVersion"), ("MIKROTIK-MIB", "mtxrBoardName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrSystemGroup = mtxrSystemGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrSystemGroup.setDescription('')
mtxrScriptTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 8, 1), )
if mibBuilder.loadTexts: mtxrScriptTable.setStatus('current')
if mibBuilder.loadTexts: mtxrScriptTable.setDescription('')
mtxrScriptTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 8, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrScriptIndex"))
if mibBuilder.loadTexts: mtxrScriptTableEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrScriptTableEntry.setDescription('')
mtxrScriptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 8, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrScriptIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrScriptIndex.setDescription('')
mtxrScriptName = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrScriptName.setStatus('current')
if mibBuilder.loadTexts: mtxrScriptName.setDescription('')
mtxrScriptRunCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 8, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtxrScriptRunCmd.setStatus('current')
if mibBuilder.loadTexts: mtxrScriptRunCmd.setDescription('set non zero to run')
mtxrScriptGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 8)).setObjects(("MIKROTIK-MIB", "mtxrScriptName"), ("MIKROTIK-MIB", "mtxrScriptRunCmd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrScriptGroup = mtxrScriptGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrScriptGroup.setDescription('')
mtxrScriptRunTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 18, 1), )
if mibBuilder.loadTexts: mtxrScriptRunTable.setStatus('current')
if mibBuilder.loadTexts: mtxrScriptRunTable.setDescription('invisible to getnext, accesible only with get request and write premission')
mtxrScriptRunTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 18, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrScriptRunIndex"))
if mibBuilder.loadTexts: mtxrScriptRunTableEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrScriptRunTableEntry.setDescription('')
mtxrScriptRunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 18, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrScriptRunIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrScriptRunIndex.setDescription('')
mtxrScriptRunOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 18, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrScriptRunOutput.setStatus('current')
if mibBuilder.loadTexts: mtxrScriptRunOutput.setDescription("this oid on get request will run script and return it's output")
mtxrScriptRunGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 21)).setObjects(("MIKROTIK-MIB", "mtxrScriptRunOutput"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrScriptRunGroup = mtxrScriptRunGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrScriptRunGroup.setDescription('')
mtxrDnStatTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 10, 1), )
if mibBuilder.loadTexts: mtxrDnStatTable.setStatus('current')
if mibBuilder.loadTexts: mtxrDnStatTable.setDescription('')
mtxrDnStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 10, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrDnStatIndex"))
if mibBuilder.loadTexts: mtxrDnStatEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrDnStatEntry.setDescription('Nstreme Dual interface')
mtxrDnStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 10, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrDnStatIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrDnStatIndex.setDescription('')
mtxrDnStatTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 10, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrDnStatTxRate.setStatus('current')
if mibBuilder.loadTexts: mtxrDnStatTxRate.setDescription('bits per second')
mtxrDnStatRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 10, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrDnStatRxRate.setStatus('current')
if mibBuilder.loadTexts: mtxrDnStatRxRate.setDescription('bits per second')
mtxrDnStatTxStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 10, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrDnStatTxStrength.setStatus('current')
if mibBuilder.loadTexts: mtxrDnStatTxStrength.setDescription('dBm')
mtxrDnStatRxStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 10, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrDnStatRxStrength.setStatus('current')
if mibBuilder.loadTexts: mtxrDnStatRxStrength.setDescription('dBm')
mtxrDnConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 10, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrDnConnected.setStatus('current')
if mibBuilder.loadTexts: mtxrDnConnected.setDescription('0 - not connected, connected otherwise')
mtxrNstremeDualGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 10)).setObjects(("MIKROTIK-MIB", "mtxrDnStatTxRate"), ("MIKROTIK-MIB", "mtxrDnStatRxRate"), ("MIKROTIK-MIB", "mtxrDnStatTxStrength"), ("MIKROTIK-MIB", "mtxrDnStatRxStrength"), ("MIKROTIK-MIB", "mtxrDnConnected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrNstremeDualGroup = mtxrNstremeDualGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrNstremeDualGroup.setDescription('')
mtxrNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 11, 1), )
if mibBuilder.loadTexts: mtxrNeighborTable.setStatus('current')
if mibBuilder.loadTexts: mtxrNeighborTable.setDescription('')
mtxrNeighborTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 11, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrNeighborIndex"))
if mibBuilder.loadTexts: mtxrNeighborTableEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrNeighborTableEntry.setDescription('')
mtxrNeighborIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 11, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrNeighborIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrNeighborIndex.setDescription('')
mtxrNeighborIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 11, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrNeighborIpAddress.setStatus('current')
if mibBuilder.loadTexts: mtxrNeighborIpAddress.setDescription('')
mtxrNeighborMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 11, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrNeighborMacAddress.setStatus('current')
if mibBuilder.loadTexts: mtxrNeighborMacAddress.setDescription('')
mtxrNeighborVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 11, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrNeighborVersion.setStatus('current')
if mibBuilder.loadTexts: mtxrNeighborVersion.setDescription('')
mtxrNeighborPlatform = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 11, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrNeighborPlatform.setStatus('current')
if mibBuilder.loadTexts: mtxrNeighborPlatform.setDescription('')
mtxrNeighborIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 11, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrNeighborIdentity.setStatus('current')
if mibBuilder.loadTexts: mtxrNeighborIdentity.setDescription('')
mtxrNeighborSoftwareID = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 11, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrNeighborSoftwareID.setStatus('current')
if mibBuilder.loadTexts: mtxrNeighborSoftwareID.setDescription('')
mtxrNeighborInterfaceID = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 11, 1, 1, 8), ObjectIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrNeighborInterfaceID.setStatus('current')
if mibBuilder.loadTexts: mtxrNeighborInterfaceID.setDescription('')
mtxrNeighborGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 11)).setObjects(("MIKROTIK-MIB", "mtxrNeighborIpAddress"), ("MIKROTIK-MIB", "mtxrNeighborMacAddress"), ("MIKROTIK-MIB", "mtxrNeighborVersion"), ("MIKROTIK-MIB", "mtxrNeighborPlatform"), ("MIKROTIK-MIB", "mtxrNeighborIdentity"), ("MIKROTIK-MIB", "mtxrNeighborSoftwareID"), ("MIKROTIK-MIB", "mtxrNeighborInterfaceID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrNeighborGroup = mtxrNeighborGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrNeighborGroup.setDescription('')
mtxrDate = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrDate.setStatus('current')
if mibBuilder.loadTexts: mtxrDate.setDescription('UNIX time')
mtxrLongtitude = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 12, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLongtitude.setStatus('current')
if mibBuilder.loadTexts: mtxrLongtitude.setDescription('longtitude')
mtxrLatitude = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 12, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLatitude.setStatus('current')
if mibBuilder.loadTexts: mtxrLatitude.setDescription('latitude')
mtxrAltitude = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 12, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrAltitude.setStatus('current')
if mibBuilder.loadTexts: mtxrAltitude.setDescription('altitude')
mtxrSpeed = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 12, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrSpeed.setStatus('current')
if mibBuilder.loadTexts: mtxrSpeed.setDescription('speed')
mtxrSattelites = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrSattelites.setStatus('current')
if mibBuilder.loadTexts: mtxrSattelites.setDescription('visible sattelite count')
mtxrValid = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrValid.setStatus('current')
if mibBuilder.loadTexts: mtxrValid.setDescription('is the data valid')
mtxrGPSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 15)).setObjects(("MIKROTIK-MIB", "mtxrDate"), ("MIKROTIK-MIB", "mtxrLongtitude"), ("MIKROTIK-MIB", "mtxrLatitude"), ("MIKROTIK-MIB", "mtxrAltitude"), ("MIKROTIK-MIB", "mtxrSpeed"), ("MIKROTIK-MIB", "mtxrSattelites"), ("MIKROTIK-MIB", "mtxrValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrGPSGroup = mtxrGPSGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrGPSGroup.setDescription('')
mtxrWirelessModemSignalStrength = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 13, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWirelessModemSignalStrength.setStatus('current')
if mibBuilder.loadTexts: mtxrWirelessModemSignalStrength.setDescription('signal strength in dBm (if first ppp-client modem supports)')
mtxrWirelessModemSignalECIO = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 13, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrWirelessModemSignalECIO.setStatus('current')
if mibBuilder.loadTexts: mtxrWirelessModemSignalECIO.setDescription('signal EC/IO in dB (if first ppp-client modem supports)')
mtxrWirelessModemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 16)).setObjects(("MIKROTIK-MIB", "mtxrWirelessModemSignalStrength"), ("MIKROTIK-MIB", "mtxrWirelessModemSignalECIO"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrWirelessModemGroup = mtxrWirelessModemGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrWirelessModemGroup.setDescription('')
mtxrInterfaceStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1), )
if mibBuilder.loadTexts: mtxrInterfaceStatsTable.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTable.setDescription('Extended interface statistics.\n    Some interfaces may have only parts of this table\n    with unavailable values set to zero.')
mtxrInterfaceStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrInterfaceStatsIndex"))
if mibBuilder.loadTexts: mtxrInterfaceStatsEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsEntry.setDescription('')
mtxrInterfaceStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrInterfaceStatsIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsIndex.setDescription('')
mtxrInterfaceStatsName = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsName.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsName.setDescription('')
mtxrInterfaceStatsDriverRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsDriverRxBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsDriverRxBytes.setDescription('')
mtxrInterfaceStatsDriverRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsDriverRxPackets.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsDriverRxPackets.setDescription('')
mtxrInterfaceStatsDriverTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsDriverTxBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsDriverTxBytes.setDescription('')
mtxrInterfaceStatsDriverTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsDriverTxPackets.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsDriverTxPackets.setDescription('')
mtxrInterfaceStatsTxRx64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx64.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx64.setDescription('')
mtxrInterfaceStatsTxRx65To127 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx65To127.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx65To127.setDescription('')
mtxrInterfaceStatsTxRx128To255 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx128To255.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx128To255.setDescription('')
mtxrInterfaceStatsTxRx256To511 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx256To511.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx256To511.setDescription('')
mtxrInterfaceStatsTxRx512To1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx512To1023.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx512To1023.setDescription('')
mtxrInterfaceStatsTxRx1024To1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx1024To1518.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx1024To1518.setDescription('')
mtxrInterfaceStatsTxRx1519ToMax = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx1519ToMax.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxRx1519ToMax.setDescription('')
mtxrInterfaceStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxBytes.setDescription('')
mtxrInterfaceStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxPackets.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxPackets.setDescription('')
mtxrInterfaceStatsRxTooShort = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxTooShort.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxTooShort.setDescription('')
mtxrInterfaceStatsRx64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRx64.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRx64.setDescription('')
mtxrInterfaceStatsRx65To127 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRx65To127.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRx65To127.setDescription('')
mtxrInterfaceStatsRx128To255 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRx128To255.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRx128To255.setDescription('')
mtxrInterfaceStatsRx256To511 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRx256To511.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRx256To511.setDescription('')
mtxrInterfaceStatsRx512To1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRx512To1023.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRx512To1023.setDescription('')
mtxrInterfaceStatsRx1024To1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRx1024To1518.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRx1024To1518.setDescription('')
mtxrInterfaceStatsRx1519ToMax = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRx1519ToMax.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRx1519ToMax.setDescription('')
mtxrInterfaceStatsRxTooLong = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxTooLong.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxTooLong.setDescription('')
mtxrInterfaceStatsRxBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxBroadcast.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxBroadcast.setDescription('')
mtxrInterfaceStatsRxPause = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxPause.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxPause.setDescription('')
mtxrInterfaceStatsRxMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxMulticast.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxMulticast.setDescription('')
mtxrInterfaceStatsRxFCSError = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxFCSError.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxFCSError.setDescription('')
mtxrInterfaceStatsRxAlignError = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxAlignError.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxAlignError.setDescription('')
mtxrInterfaceStatsRxFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxFragment.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxFragment.setDescription('')
mtxrInterfaceStatsRxOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxOverflow.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxOverflow.setDescription('')
mtxrInterfaceStatsRxControl = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxControl.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxControl.setDescription('')
mtxrInterfaceStatsRxUnknownOp = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxUnknownOp.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxUnknownOp.setDescription('')
mtxrInterfaceStatsRxLengthError = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxLengthError.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxLengthError.setDescription('')
mtxrInterfaceStatsRxCodeError = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxCodeError.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxCodeError.setDescription('')
mtxrInterfaceStatsRxCarrierError = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxCarrierError.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxCarrierError.setDescription('')
mtxrInterfaceStatsRxJabber = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxJabber.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxJabber.setDescription('')
mtxrInterfaceStatsRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsRxDrop.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsRxDrop.setDescription('')
mtxrInterfaceStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxBytes.setDescription('')
mtxrInterfaceStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxPackets.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxPackets.setDescription('')
mtxrInterfaceStatsTxTooShort = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxTooShort.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxTooShort.setDescription('')
mtxrInterfaceStatsTx64 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTx64.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTx64.setDescription('')
mtxrInterfaceStatsTx65To127 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTx65To127.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTx65To127.setDescription('')
mtxrInterfaceStatsTx128To255 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTx128To255.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTx128To255.setDescription('')
mtxrInterfaceStatsTx256To511 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTx256To511.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTx256To511.setDescription('')
mtxrInterfaceStatsTx512To1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTx512To1023.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTx512To1023.setDescription('')
mtxrInterfaceStatsTx1024To1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTx1024To1518.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTx1024To1518.setDescription('')
mtxrInterfaceStatsTx1519ToMax = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTx1519ToMax.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTx1519ToMax.setDescription('')
mtxrInterfaceStatsTxTooLong = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxTooLong.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxTooLong.setDescription('')
mtxrInterfaceStatsTxBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxBroadcast.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxBroadcast.setDescription('')
mtxrInterfaceStatsTxPause = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxPause.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxPause.setDescription('')
mtxrInterfaceStatsTxMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxMulticast.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxMulticast.setDescription('')
mtxrInterfaceStatsTxUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxUnderrun.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxUnderrun.setDescription('')
mtxrInterfaceStatsTxCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxCollision.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxCollision.setDescription('')
mtxrInterfaceStatsTxExcessiveCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxExcessiveCollision.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxExcessiveCollision.setDescription('')
mtxrInterfaceStatsTxMultipleCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxMultipleCollision.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxMultipleCollision.setDescription('')
mtxrInterfaceStatsTxSingleCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 79), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxSingleCollision.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxSingleCollision.setDescription('')
mtxrInterfaceStatsTxExcessiveDeferred = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxExcessiveDeferred.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxExcessiveDeferred.setDescription('')
mtxrInterfaceStatsTxDeferred = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxDeferred.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxDeferred.setDescription('')
mtxrInterfaceStatsTxLateCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxLateCollision.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxLateCollision.setDescription('')
mtxrInterfaceStatsTxTotalCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxTotalCollision.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxTotalCollision.setDescription('')
mtxrInterfaceStatsTxPauseHonored = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxPauseHonored.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxPauseHonored.setDescription('')
mtxrInterfaceStatsTxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxDrop.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxDrop.setDescription('')
mtxrInterfaceStatsTxJabber = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 86), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxJabber.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxJabber.setDescription('')
mtxrInterfaceStatsTxFCSError = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 87), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxFCSError.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxFCSError.setDescription('')
mtxrInterfaceStatsTxControl = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 88), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxControl.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxControl.setDescription('')
mtxrInterfaceStatsTxFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 89), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsTxFragment.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsTxFragment.setDescription('')
mtxrInterfaceStatsLinkDowns = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 14, 1, 1, 90), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrInterfaceStatsLinkDowns.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsLinkDowns.setDescription('')
mtxrInterfaceStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 17)).setObjects(("MIKROTIK-MIB", "mtxrInterfaceStatsName"), ("MIKROTIK-MIB", "mtxrInterfaceStatsDriverRxBytes"), ("MIKROTIK-MIB", "mtxrInterfaceStatsDriverRxPackets"), ("MIKROTIK-MIB", "mtxrInterfaceStatsDriverTxBytes"), ("MIKROTIK-MIB", "mtxrInterfaceStatsDriverTxPackets"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxRx64"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxRx65To127"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxRx128To255"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxRx256To511"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxRx512To1023"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxRx1024To1518"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxRx1519ToMax"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxBytes"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxPackets"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxTooShort"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRx64"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRx65To127"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRx128To255"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRx256To511"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRx512To1023"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRx1024To1518"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRx1519ToMax"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxTooLong"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxBroadcast"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxPause"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxMulticast"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxFCSError"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxAlignError"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxFragment"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxOverflow"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxControl"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxUnknownOp"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxLengthError"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxCodeError"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxCarrierError"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxJabber"), ("MIKROTIK-MIB", "mtxrInterfaceStatsRxDrop"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxBytes"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxPackets"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxTooShort"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTx64"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTx65To127"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTx128To255"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTx256To511"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTx512To1023"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTx1024To1518"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTx1519ToMax"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxTooLong"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxBroadcast"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxPause"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxMulticast"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxUnderrun"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxCollision"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxExcessiveCollision"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxMultipleCollision"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxSingleCollision"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxExcessiveDeferred"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxDeferred"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxLateCollision"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxTotalCollision"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxPauseHonored"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxDrop"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxJabber"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxFCSError"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxControl"), ("MIKROTIK-MIB", "mtxrInterfaceStatsTxFragment"), ("MIKROTIK-MIB", "mtxrInterfaceStatsLinkDowns"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrInterfaceStatsGroup = mtxrInterfaceStatsGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrInterfaceStatsGroup.setDescription('')
mtxrPOETable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 15, 1), )
if mibBuilder.loadTexts: mtxrPOETable.setStatus('current')
if mibBuilder.loadTexts: mtxrPOETable.setDescription('Power Over Ethernet')
mtxrPOEEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 15, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrPOEInterfaceIndex"))
if mibBuilder.loadTexts: mtxrPOEEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrPOEEntry.setDescription('')
mtxrPOEInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 15, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrPOEInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrPOEInterfaceIndex.setDescription('')
mtxrPOEName = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrPOEName.setStatus('current')
if mibBuilder.loadTexts: mtxrPOEName.setDescription('')
mtxrPOEStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 15, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("waitingForLoad", 2), ("poweredOn", 3), ("overload", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrPOEStatus.setStatus('current')
if mibBuilder.loadTexts: mtxrPOEStatus.setDescription('')
mtxrPOEVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 15, 1, 1, 4), Voltage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrPOEVoltage.setStatus('current')
if mibBuilder.loadTexts: mtxrPOEVoltage.setDescription('V')
mtxrPOECurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 15, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrPOECurrent.setStatus('current')
if mibBuilder.loadTexts: mtxrPOECurrent.setDescription('mA')
mtxrPOEPower = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 15, 1, 1, 6), Power()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrPOEPower.setStatus('current')
if mibBuilder.loadTexts: mtxrPOEPower.setDescription('W')
mtxrPOEGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 18)).setObjects(("MIKROTIK-MIB", "mtxrPOEName"), ("MIKROTIK-MIB", "mtxrPOEStatus"), ("MIKROTIK-MIB", "mtxrPOEVoltage"), ("MIKROTIK-MIB", "mtxrPOECurrent"), ("MIKROTIK-MIB", "mtxrPOEPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrPOEGroup = mtxrPOEGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrPOEGroup.setDescription('')
mtxrLTEModemTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1), )
if mibBuilder.loadTexts: mtxrLTEModemTable.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemTable.setDescription('LTE Modems')
mtxrLTEModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrLTEModemInterfaceIndex"))
if mibBuilder.loadTexts: mtxrLTEModemEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemEntry.setDescription('')
mtxrLTEModemInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrLTEModemInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemInterfaceIndex.setDescription('')
mtxrLTEModemSignalRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemSignalRSSI.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemSignalRSSI.setDescription('dBm')
mtxrLTEModemSignalRSRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemSignalRSRQ.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemSignalRSRQ.setDescription('dB')
mtxrLTEModemSignalRSRP = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemSignalRSRP.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemSignalRSRP.setDescription('dBm')
mtxrLTEModemCellId = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 5), HexInt()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemCellId.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemCellId.setDescription('current cell ID')
mtxrLTEModemAccessTechnology = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", -1), ("gsmcompact", 0), ("gsm", 1), ("utran", 2), ("egprs", 3), ("hsdpa", 4), ("hsupa", 5), ("hsdpahsupa", 6), ("eutran", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemAccessTechnology.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemAccessTechnology.setDescription('as reported by +CREG')
mtxrLTEModemSignalSINR = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemSignalSINR.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemSignalSINR.setDescription('dB')
mtxrLTEModemEnbId = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemEnbId.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemEnbId.setDescription('')
mtxrLTEModemSectorId = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemSectorId.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemSectorId.setDescription('')
mtxrLTEModemLac = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemLac.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemLac.setDescription('')
mtxrLTEModemIMEI = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemIMEI.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemIMEI.setDescription('')
mtxrLTEModemIMSI = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemIMSI.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemIMSI.setDescription('')
mtxrLTEModemUICC = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemUICC.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemUICC.setDescription('')
mtxrLTEModemRAT = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 16, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrLTEModemRAT.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemRAT.setDescription('')
mtxrLTEModemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 19)).setObjects(("MIKROTIK-MIB", "mtxrLTEModemSignalRSSI"), ("MIKROTIK-MIB", "mtxrLTEModemSignalRSRQ"), ("MIKROTIK-MIB", "mtxrLTEModemSignalRSRP"), ("MIKROTIK-MIB", "mtxrLTEModemCellId"), ("MIKROTIK-MIB", "mtxrLTEModemAccessTechnology"), ("MIKROTIK-MIB", "mtxrLTEModemSignalSINR"), ("MIKROTIK-MIB", "mtxrLTEModemEnbId"), ("MIKROTIK-MIB", "mtxrLTEModemSectorId"), ("MIKROTIK-MIB", "mtxrLTEModemLac"), ("MIKROTIK-MIB", "mtxrLTEModemIMEI"), ("MIKROTIK-MIB", "mtxrLTEModemIMSI"), ("MIKROTIK-MIB", "mtxrLTEModemUICC"), ("MIKROTIK-MIB", "mtxrLTEModemRAT"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrLTEModemGroup = mtxrLTEModemGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrLTEModemGroup.setDescription('')
mtxrPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 17, 1), )
if mibBuilder.loadTexts: mtxrPartitionTable.setStatus('current')
if mibBuilder.loadTexts: mtxrPartitionTable.setDescription('system partitions')
mtxrPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 17, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrPartitionIndex"))
if mibBuilder.loadTexts: mtxrPartitionEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrPartitionEntry.setDescription('')
mtxrPartitionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 17, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrPartitionIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrPartitionIndex.setDescription('')
mtxrPartitionName = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 17, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrPartitionName.setStatus('current')
if mibBuilder.loadTexts: mtxrPartitionName.setDescription('')
mtxrPartitionSize = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 17, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrPartitionSize.setStatus('current')
if mibBuilder.loadTexts: mtxrPartitionSize.setDescription('MB')
mtxrPartitionVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 17, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrPartitionVersion.setStatus('current')
if mibBuilder.loadTexts: mtxrPartitionVersion.setDescription('')
mtxrPartitionActive = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 17, 1, 1, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrPartitionActive.setStatus('current')
if mibBuilder.loadTexts: mtxrPartitionActive.setDescription('')
mtxrPartitionRunning = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 17, 1, 1, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrPartitionRunning.setStatus('current')
if mibBuilder.loadTexts: mtxrPartitionRunning.setDescription('')
mtxrPartitionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 20)).setObjects(("MIKROTIK-MIB", "mtxrPartitionName"), ("MIKROTIK-MIB", "mtxrPartitionSize"), ("MIKROTIK-MIB", "mtxrPartitionVersion"), ("MIKROTIK-MIB", "mtxrPartitionActive"), ("MIKROTIK-MIB", "mtxrPartitionRunning"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrPartitionGroup = mtxrPartitionGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrPartitionGroup.setDescription('')
mtxrOpticalTable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1), )
if mibBuilder.loadTexts: mtxrOpticalTable.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalTable.setDescription('SFP and GPON information')
mtxrOpticalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrOpticalIndex"))
if mibBuilder.loadTexts: mtxrOpticalTableEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalTableEntry.setDescription('')
mtxrOpticalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 6)).setObjects(("MIKROTIK-MIB", "mtxrOpticalName"), ("MIKROTIK-MIB", "mtxrOpticalRxLoss"), ("MIKROTIK-MIB", "mtxrOpticalTxFault"), ("MIKROTIK-MIB", "mtxrOpticalWavelength"), ("MIKROTIK-MIB", "mtxrOpticalTemperature"), ("MIKROTIK-MIB", "mtxrOpticalSupplyVoltage"), ("MIKROTIK-MIB", "mtxrOpticalTxBiasCurrent"), ("MIKROTIK-MIB", "mtxrOpticalTxPower"), ("MIKROTIK-MIB", "mtxrOpticalRxPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrOpticalGroup = mtxrOpticalGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalGroup.setDescription('')
mtxrOpticalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrOpticalIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalIndex.setDescription('')
mtxrOpticalName = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrOpticalName.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalName.setDescription('')
mtxrOpticalRxLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1, 1, 3), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrOpticalRxLoss.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalRxLoss.setDescription('')
mtxrOpticalTxFault = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1, 1, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrOpticalTxFault.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalTxFault.setDescription('')
mtxrOpticalWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1, 1, 5), GDiv100()).setUnits('nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrOpticalWavelength.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalWavelength.setDescription('')
mtxrOpticalTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1, 1, 6), Gauge32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrOpticalTemperature.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalTemperature.setDescription('')
mtxrOpticalSupplyVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1, 1, 7), GDiv1000()).setUnits('V').setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrOpticalSupplyVoltage.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalSupplyVoltage.setDescription('')
mtxrOpticalTxBiasCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1, 1, 8), Gauge32()).setUnits('mA').setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrOpticalTxBiasCurrent.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalTxBiasCurrent.setDescription('')
mtxrOpticalTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1, 1, 9), IDiv1000()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrOpticalTxPower.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalTxPower.setDescription('')
mtxrOpticalRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 19, 1, 1, 10), IDiv1000()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrOpticalRxPower.setStatus('current')
if mibBuilder.loadTexts: mtxrOpticalRxPower.setDescription('')
mtxrIkeSACount = MibScalar((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSACount.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSACount.setDescription('IKE SA count')
mtxrIkeSATable = MibTable((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2), )
if mibBuilder.loadTexts: mtxrIkeSATable.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSATable.setDescription('IKE SA table')
mtxrIkeSATableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1), ).setIndexNames((0, "MIKROTIK-MIB", "mtxrIkeSAIndex"))
if mibBuilder.loadTexts: mtxrIkeSATableEntry.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSATableEntry.setDescription('')
mtxrIkeSAGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 7)).setObjects(("MIKROTIK-MIB", "mtxrIkeSACount"), ("MIKROTIK-MIB", "mtxrIkeSAInitiatorCookie"), ("MIKROTIK-MIB", "mtxrIkeSAResponderCookie"), ("MIKROTIK-MIB", "mtxrIkeSAResponder"), ("MIKROTIK-MIB", "mtxrIkeSANatt"), ("MIKROTIK-MIB", "mtxrIkeSAVersion"), ("MIKROTIK-MIB", "mtxrIkeSAState"), ("MIKROTIK-MIB", "mtxrIkeSAUptime"), ("MIKROTIK-MIB", "mtxrIkeSASeen"), ("MIKROTIK-MIB", "mtxrIkeSAIdentity"), ("MIKROTIK-MIB", "mtxrIkeSAPh2Count"), ("MIKROTIK-MIB", "mtxrIkeSALocalAddressType"), ("MIKROTIK-MIB", "mtxrIkeSALocalAddress"), ("MIKROTIK-MIB", "mtxrIkeSALocalPort"), ("MIKROTIK-MIB", "mtxrIkeSAPeerAddressType"), ("MIKROTIK-MIB", "mtxrIkeSAPeerAddress"), ("MIKROTIK-MIB", "mtxrIkeSAPeerPort"), ("MIKROTIK-MIB", "mtxrIkeSADynamicAddressType"), ("MIKROTIK-MIB", "mtxrIkeSADynamicAddress"), ("MIKROTIK-MIB", "mtxrIkeSATxBytes"), ("MIKROTIK-MIB", "mtxrIkeSARxBytes"), ("MIKROTIK-MIB", "mtxrIkeSATxPackets"), ("MIKROTIK-MIB", "mtxrIkeSARxPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrIkeSAGroup = mtxrIkeSAGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAGroup.setDescription('')
mtxrIkeSAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 1), ObjectIndex())
if mibBuilder.loadTexts: mtxrIkeSAIndex.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAIndex.setDescription('')
mtxrIkeSAInitiatorCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 2), IsakmpCookie()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSAInitiatorCookie.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAInitiatorCookie.setDescription('initiator SPI')
mtxrIkeSAResponderCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 3), IsakmpCookie()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSAResponderCookie.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAResponderCookie.setDescription('responder SPI')
mtxrIkeSAResponder = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 4), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSAResponder.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAResponder.setDescription('IKE side')
mtxrIkeSANatt = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 5), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSANatt.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSANatt.setDescription('NAT is detected')
mtxrIkeSAVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSAVersion.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAVersion.setDescription('protocol version')
mtxrIkeSAState = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("exchange", 1), ("established", 2), ("expired", 3), ("eap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSAState.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAState.setDescription('')
mtxrIkeSAUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSAUptime.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAUptime.setDescription('')
mtxrIkeSASeen = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSASeen.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSASeen.setDescription('time elapsed since last valid IKE packet')
mtxrIkeSAIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSAIdentity.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAIdentity.setDescription('peer identity')
mtxrIkeSAPh2Count = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSAPh2Count.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAPh2Count.setDescription('total ph2 SA pairs')
mtxrIkeSALocalAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 12), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSALocalAddressType.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSALocalAddressType.setDescription('')
mtxrIkeSALocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 13), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSALocalAddress.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSALocalAddress.setDescription('')
mtxrIkeSALocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 14), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSALocalPort.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSALocalPort.setDescription('')
mtxrIkeSAPeerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 15), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSAPeerAddressType.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAPeerAddressType.setDescription('')
mtxrIkeSAPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 16), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSAPeerAddress.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAPeerAddress.setDescription('')
mtxrIkeSAPeerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 17), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSAPeerPort.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSAPeerPort.setDescription('')
mtxrIkeSADynamicAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 18), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSADynamicAddressType.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSADynamicAddressType.setDescription('')
mtxrIkeSADynamicAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 19), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSADynamicAddress.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSADynamicAddress.setDescription('dynamic address allocated by mode config')
mtxrIkeSATxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSATxBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSATxBytes.setDescription('ph2 SA tx bytes')
mtxrIkeSARxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSARxBytes.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSARxBytes.setDescription('ph2 SA rx bytes')
mtxrIkeSATxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSATxPackets.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSATxPackets.setDescription('ph2 SA tx packets')
mtxrIkeSARxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 14988, 1, 1, 20, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxrIkeSARxPackets.setStatus('current')
if mibBuilder.loadTexts: mtxrIkeSARxPackets.setDescription('ph2 SA rx packets')
mtxrNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 14988, 1, 1, 9, 0))
mtxrTrap = NotificationType((1, 3, 6, 1, 4, 1, 14988, 1, 1, 9, 0, 1))
if mibBuilder.loadTexts: mtxrTrap.setStatus('current')
if mibBuilder.loadTexts: mtxrTrap.setDescription('Mikrotik trap OID')
mtxrTemperatureException = NotificationType((1, 3, 6, 1, 4, 1, 14988, 1, 1, 9, 0, 2))
if mibBuilder.loadTexts: mtxrTemperatureException.setStatus('current')
if mibBuilder.loadTexts: mtxrTemperatureException.setDescription('Mikrotik CPU temperature exception trap')
mtxrTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 14988, 1, 2, 1, 14)).setObjects(("MIKROTIK-MIB", "mtxrTrap"), ("MIKROTIK-MIB", "mtxrTemperatureException"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxrTrapGroup = mtxrTrapGroup.setStatus('current')
if mibBuilder.loadTexts: mtxrTrapGroup.setDescription('')
mibBuilder.exportSymbols("MIKROTIK-MIB", mtxrNstremeDual=mtxrNstremeDual, mtxrAltitude=mtxrAltitude, mtxrWlStatTxCCQ=mtxrWlStatTxCCQ, mtxrLTEModemInterfaceIndex=mtxrLTEModemInterfaceIndex, mtxrLTEModemCellId=mtxrLTEModemCellId, mtxrGPSGroup=mtxrGPSGroup, mtxrHotspotActiveUserLimitBytesIn=mtxrHotspotActiveUserLimitBytesIn, mtxrQueueSimpleDstAddr=mtxrQueueSimpleDstAddr, mtxrScriptIndex=mtxrScriptIndex, mtxrIkeSATxPackets=mtxrIkeSATxPackets, mtxrHotspotActiveUserIdleStartTime=mtxrHotspotActiveUserIdleStartTime, mtxrNeighborGroup=mtxrNeighborGroup, mtxrWlCMRtabRxStrength=mtxrWlCMRtabRxStrength, mtxrPartitionVersion=mtxrPartitionVersion, mtxrNeighborIpAddress=mtxrNeighborIpAddress, mtxrQueueTreeBytes=mtxrQueueTreeBytes, mtxrGaugeValue=mtxrGaugeValue, mtxrQueueSimpleDstMask=mtxrQueueSimpleDstMask, mtxrGps=mtxrGps, mtxrInterfaceStatsRxBytes=mtxrInterfaceStatsRxBytes, mtxrPOEName=mtxrPOEName, mtxrGaugeTableEntry=mtxrGaugeTableEntry, mtxrInterfaceStatsTxFCSError=mtxrInterfaceStatsTxFCSError, mtxrWlCMRemoteName=mtxrWlCMRemoteName, mtxrDnStatTable=mtxrDnStatTable, mtxrOpticalRxPower=mtxrOpticalRxPower, mtxrScriptRunTable=mtxrScriptRunTable, mtxrWlRtabSignalToNoise=mtxrWlRtabSignalToNoise, mtxrQueueSimpleEntry=mtxrQueueSimpleEntry, mtxrWlApEntry=mtxrWlApEntry, mtxrWlApOverallTxCCQ=mtxrWlApOverallTxCCQ, mtxrInterfaceStatsTxExcessiveCollision=mtxrInterfaceStatsTxExcessiveCollision, mtxrNeighborVersion=mtxrNeighborVersion, mtxrIkeSARxBytes=mtxrIkeSARxBytes, mtxrIkeSAPeerAddress=mtxrIkeSAPeerAddress, mtxrInterfaceStatsTxRx256To511=mtxrInterfaceStatsTxRx256To511, mtxrWl60GStaPhyRate=mtxrWl60GStaPhyRate, mtxrHlBackupPowerSupplyState=mtxrHlBackupPowerSupplyState, mtxrWlStatBssid=mtxrWlStatBssid, mtxrOpticalIndex=mtxrOpticalIndex, mtxrInterfaceStatsTxJabber=mtxrInterfaceStatsTxJabber, mtxrWlApNoiseFloor=mtxrWlApNoiseFloor, mtxrOpticalTemperature=mtxrOpticalTemperature, mtxrInterfaceStatsTxRx1024To1518=mtxrInterfaceStatsTxRx1024To1518, mtxrOpticalName=mtxrOpticalName, mtxrWirelessModem=mtxrWirelessModem, mtxrSystemReboot=mtxrSystemReboot, mtxrWlRtabRxStrengthCh0=mtxrWlRtabRxStrengthCh0, mtxrScriptName=mtxrScriptName, mtxrHotspotActiveUserValidTillTime=mtxrHotspotActiveUserValidTillTime, mtxrWlApIndex=mtxrWlApIndex, mtxrWlStatFreq=mtxrWlStatFreq, mtxrLincenseGroup=mtxrLincenseGroup, mtxrNstremeDualGroup=mtxrNstremeDualGroup, mtxrWlRtabTxRate=mtxrWlRtabTxRate, mtxrHlFiveVoltage=mtxrHlFiveVoltage, mtxrHlActiveFan=mtxrHlActiveFan, mtxrInterfaceStatsTxPackets=mtxrInterfaceStatsTxPackets, mtxrHotspotActiveUserName=mtxrHotspotActiveUserName, mtxrSerialNumber=mtxrSerialNumber, mtxrWlCMRtabEntryCount=mtxrWlCMRtabEntryCount, mtxrQueueTreeParentIndex=mtxrQueueTreeParentIndex, mtxrHotspotActiveUserGroup=mtxrHotspotActiveUserGroup, mikrotikExperimentalModule=mikrotikExperimentalModule, mtxrInterfaceStatsTx128To255=mtxrInterfaceStatsTx128To255, mtxrInterfaceStatsTxUnderrun=mtxrInterfaceStatsTxUnderrun, mtxrHotspotActiveUserConnectTime=mtxrHotspotActiveUserConnectTime, mtxrHotspotActiveUserPacketsIn=mtxrHotspotActiveUserPacketsIn, mtxrDHCPGroup=mtxrDHCPGroup, mtxrIkeSAGroup=mtxrIkeSAGroup, mtxrWlRtabRxBytes=mtxrWlRtabRxBytes, mtxrIkeSATxBytes=mtxrIkeSATxBytes, mtxrNeighborIndex=mtxrNeighborIndex, mtxrFirmwareVersion=mtxrFirmwareVersion, mtxrHlPowerSupplyState=mtxrHlPowerSupplyState, mtxrScriptRun=mtxrScriptRun, PYSNMP_MODULE_ID=mikrotikExperimentalModule, mtxrWlApTxRate=mtxrWlApTxRate, mtxrHotspotActiveUserBlockedByAdvert=mtxrHotspotActiveUserBlockedByAdvert, mtxrWlRtabRxStrengthCh2=mtxrWlRtabRxStrengthCh2, mtxrGaugeTable=mtxrGaugeTable, mtxrWl60GEntry=mtxrWl60GEntry, mtxrQueueSimpleName=mtxrQueueSimpleName, mtxrLicVersion=mtxrLicVersion, mtxrHlCpuTemperature=mtxrHlCpuTemperature, mtxrWlCMRtabRxPackets=mtxrWlCMRtabRxPackets, mtxrIkeSATable=mtxrIkeSATable, mtxrWl60GIndex=mtxrWl60GIndex, mtxrWlCMRtabTxPackets=mtxrWlCMRtabTxPackets, mtxrQueueTreeDropped=mtxrQueueTreeDropped, mtxrHotspotActiveUserServerID=mtxrHotspotActiveUserServerID, mtxrHlSensorTemperature=mtxrHlSensorTemperature, mtxrLTEModem=mtxrLTEModem, mtxrScriptRunTableEntry=mtxrScriptRunTableEntry, mtxrIkeSAInitiatorCookie=mtxrIkeSAInitiatorCookie, mtxrWl60GStaRssi=mtxrWl60GStaRssi, mtxrWlStatRxRate=mtxrWlStatRxRate, Temperature=Temperature, mtxrInterfaceStatsTx256To511=mtxrInterfaceStatsTx256To511, mtxrPOEGroup=mtxrPOEGroup, mtxrInterfaceStatsTxRx128To255=mtxrInterfaceStatsTxRx128To255, mtxrHlTwelveVoltage=mtxrHlTwelveVoltage, mtxrLTEModemIMEI=mtxrLTEModemIMEI, mtxrHlVoltage=mtxrHlVoltage, mtxrFirmwareUpgradeVersion=mtxrFirmwareUpgradeVersion, mtxrHlPower=mtxrHlPower, mtxrIkeSAVersion=mtxrIkeSAVersion, mtxrQueueSimpleSrcAddr=mtxrQueueSimpleSrcAddr, mtxrWl60GStaConnected=mtxrWl60GStaConnected, mtxrWl60GStaEntry=mtxrWl60GStaEntry, mtxrWlStatSsid=mtxrWlStatSsid, mtxrLTEModemGroup=mtxrLTEModemGroup, mtxrWl60GStaMcs=mtxrWl60GStaMcs, mtxrInterfaceStatsRx1024To1518=mtxrInterfaceStatsRx1024To1518, mtxrOpticalTable=mtxrOpticalTable, HexInt=HexInt, mtxrInterfaceStatsRxMulticast=mtxrInterfaceStatsRxMulticast, mtxrNeighborMacAddress=mtxrNeighborMacAddress, mtxrWlRtabAddr=mtxrWlRtabAddr, mtxrInterfaceStatsIndex=mtxrInterfaceStatsIndex, mtxrLTEModemUICC=mtxrLTEModemUICC, mtxrWlRtabRouterOSVersion=mtxrWlRtabRouterOSVersion, mtxrPOE=mtxrPOE, mtxrWl60GRssi=mtxrWl60GRssi, mtxrIkeSALocalAddressType=mtxrIkeSALocalAddressType, mtxrHotspotActiveUserLimitBytesOut=mtxrHotspotActiveUserLimitBytesOut, mtxrWlCMREntryCount=mtxrWlCMREntryCount, mtxrWlApFreq=mtxrWlApFreq, mtxrInterfaceStatsDriverTxPackets=mtxrInterfaceStatsDriverTxPackets, mtxrQueueTreePackets=mtxrQueueTreePackets, mtxrHotspotActiveUserDomain=mtxrHotspotActiveUserDomain, mtxrLatitude=mtxrLatitude, mtxrScriptRunIndex=mtxrScriptRunIndex, mtXRouterOsGroups=mtXRouterOsGroups, mtxrHlCurrent=mtxrHlCurrent, mtxrPartitionSize=mtxrPartitionSize, mtxrWlRtabStrength=mtxrWlRtabStrength, mtxrIkeSATableEntry=mtxrIkeSATableEntry, mtxrLicense=mtxrLicense, mtxrWlCMRemoteEntry=mtxrWlCMRemoteEntry, mtxrPartitionRunning=mtxrPartitionRunning, mtxrWlCMRtabRxRate=mtxrWlCMRtabRxRate, mtxrSpeed=mtxrSpeed, mtxrIkeSASeen=mtxrIkeSASeen, mtxrWlCMRemoteRadios=mtxrWlCMRemoteRadios, mtxrPartitionEntry=mtxrPartitionEntry, mtxrWl60GTxSectorInfo=mtxrWl60GTxSectorInfo, mtxrWlCMTable=mtxrWlCMTable, mtxrWl60GStaRemote=mtxrWl60GStaRemote, mtxrPartition=mtxrPartition, mtxrQueueSimpleDroppedIn=mtxrQueueSimpleDroppedIn, mtxrWlStatTable=mtxrWlStatTable, mtxrOpticalSupplyVoltage=mtxrOpticalSupplyVoltage, mtxrTemperatureException=mtxrTemperatureException, mtxrWl60GTxSector=mtxrWl60GTxSector, mtxrDHCP=mtxrDHCP, mtxrGaugeName=mtxrGaugeName, mtxrQueueTreeName=mtxrQueueTreeName, mtxrIkeSADynamicAddressType=mtxrIkeSADynamicAddressType, mtxrInterfaceStatsRxFragment=mtxrInterfaceStatsRxFragment, mtxrDnStatRxStrength=mtxrDnStatRxStrength, mtxrInterfaceStatsTxRx64=mtxrInterfaceStatsTxRx64, mtxrPartitionTable=mtxrPartitionTable, mtxrInterfaceStatsRxLengthError=mtxrInterfaceStatsRxLengthError, mtxrTrap=mtxrTrap, mtxrHotspotActiveUserMAC=mtxrHotspotActiveUserMAC, mtxrWlRtabEntry=mtxrWlRtabEntry, mtxrWlCMState=mtxrWlCMState, mtxrScriptRunCmd=mtxrScriptRunCmd, mtxrWlRtabTxStrength=mtxrWlRtabTxStrength, mtxrInterfaceStatsRx256To511=mtxrInterfaceStatsRx256To511, GDiv1000=GDiv1000, mtxrInterfaceStatsTx1519ToMax=mtxrInterfaceStatsTx1519ToMax, mtxrHotspotActiveUserIP=mtxrHotspotActiveUserIP, mtxrIkeSAPeerPort=mtxrIkeSAPeerPort, mtxrIkeSADynamicAddress=mtxrIkeSADynamicAddress, mtXMetaInfo=mtXMetaInfo, mtxrPartitionGroup=mtxrPartitionGroup, mtxrLTEModemTable=mtxrLTEModemTable, mtxrPOEEntry=mtxrPOEEntry, mtxrWlApRxRate=mtxrWlApRxRate, mtxrIkeSAResponder=mtxrIkeSAResponder, mtxrWlCMRtabAddr=mtxrWlCMRtabAddr, mtxrWireless=mtxrWireless, mtxrWlStatStrength=mtxrWlStatStrength, mtxrIkeSAResponderCookie=mtxrIkeSAResponderCookie, mtxrWlCMRtabEapIdent=mtxrWlCMRtabEapIdent, mtxrWlCMRtabTxBytes=mtxrWlCMRtabTxBytes, mtxrInterfaceStatsLinkDowns=mtxrInterfaceStatsLinkDowns, mtxrLTEModemRAT=mtxrLTEModemRAT, mtxrIkeSALocalAddress=mtxrIkeSALocalAddress, mtxrQueueSimplePacketsOut=mtxrQueueSimplePacketsOut, mtxrQueueTreePCQQueues=mtxrQueueTreePCQQueues, mtxrHotspotActiveUserPacketsOut=mtxrHotspotActiveUserPacketsOut, mtxrQueueSimpleSrcMask=mtxrQueueSimpleSrcMask, mtxrWlRtabIface=mtxrWlRtabIface, mtxrQueueTreeEntry=mtxrQueueTreeEntry, mtxrQueueTreeHCBytes=mtxrQueueTreeHCBytes, mtxrLTEModemEntry=mtxrLTEModemEntry, mtxrInterfaceStatsTxRx65To127=mtxrInterfaceStatsTxRx65To127, mtxrHlTemperature=mtxrHlTemperature, mtxrHlThreeDotThreeVoltage=mtxrHlThreeDotThreeVoltage, mtxrWl60GPhyRate=mtxrWl60GPhyRate, mtxrInterfaceStatsRx128To255=mtxrInterfaceStatsRx128To255, mtxrIkeSAState=mtxrIkeSAState, mtxrHotspotActiveUserBytesOut=mtxrHotspotActiveUserBytesOut, IsakmpCookie=IsakmpCookie, mtxrWlStatRxCCQ=mtxrWlStatRxCCQ, mtxrWl60GMode=mtxrWl60GMode, ObjectIndex=ObjectIndex, mtxrHlProcessorFrequency=mtxrHlProcessorFrequency, mtxrQueueTreeFlow=mtxrQueueTreeFlow, mtxrBoardName=mtxrBoardName, mtxrInterfaceStatsRxFCSError=mtxrInterfaceStatsRxFCSError, mtxrInterfaceStatsTxTotalCollision=mtxrInterfaceStatsTxTotalCollision, mtxrWlCMRtabTable=mtxrWlCMRtabTable, mtxrWl60GStaTxSector=mtxrWl60GStaTxSector, mtxrInterfaceStatsTxBroadcast=mtxrInterfaceStatsTxBroadcast, mtxrWlCMRtabRxBytes=mtxrWlCMRtabRxBytes, mtxrWl60GStaTable=mtxrWl60GStaTable, mtxrInterfaceStatsRxUnknownOp=mtxrInterfaceStatsRxUnknownOp, mtxrIkeSAPeerAddressType=mtxrIkeSAPeerAddressType, BoolValue=BoolValue, mtxrQueues=mtxrQueues, mtxrLicUpgrUntil=mtxrLicUpgrUntil, mtxrWl60GStaIndex=mtxrWl60GStaIndex, mtxrLicLevel=mtxrLicLevel, mtxrQueueSimpleDroppedOut=mtxrQueueSimpleDroppedOut, mtxrInterfaceStatsTxPauseHonored=mtxrInterfaceStatsTxPauseHonored, mtxrInterfaceStatsTxControl=mtxrInterfaceStatsTxControl, mtxrValid=mtxrValid, mtxrWlRtabTxStrengthCh1=mtxrWlRtabTxStrengthCh1, mtxrOpticalTxPower=mtxrOpticalTxPower, mtxrDHCPLeaseCount=mtxrDHCPLeaseCount, mtxrInterfaceStatsTxCollision=mtxrInterfaceStatsTxCollision, mtxrInterfaceStatsGroup=mtxrInterfaceStatsGroup, mtxrWirelessModemSignalStrength=mtxrWirelessModemSignalStrength, mtxrHotspotActiveUserAdvertStatus=mtxrHotspotActiveUserAdvertStatus, mtxrInterfaceStatsDriverRxPackets=mtxrInterfaceStatsDriverRxPackets, mtxrWl60GMcs=mtxrWl60GMcs, mtxrSystemGroup=mtxrSystemGroup, mtxrInterfaceStatsTxBytes=mtxrInterfaceStatsTxBytes, mtxrWlCMRegClientCount=mtxrWlCMRegClientCount, mtxrQueueGroup=mtxrQueueGroup, mtxrWlCMRtabUptime=mtxrWlCMRtabUptime, mtxrPOEInterfaceIndex=mtxrPOEInterfaceIndex, mtxrPartitionName=mtxrPartitionName, mtxrWl60GRemote=mtxrWl60GRemote, mtxrInterfaceStatsRxCodeError=mtxrInterfaceStatsRxCodeError, mtxrInterfaceStatsRx1519ToMax=mtxrInterfaceStatsRx1519ToMax, mtxrLTEModemSignalSINR=mtxrLTEModemSignalSINR, mtxrWlCMRemoteTable=mtxrWlCMRemoteTable, mtxrQueueSimpleIface=mtxrQueueSimpleIface, mtxrHotspotActiveUsersTableEntry=mtxrHotspotActiveUsersTableEntry)
mibBuilder.exportSymbols("MIKROTIK-MIB", mtxrInterfaceStatsRx512To1023=mtxrInterfaceStatsRx512To1023, mtxrWl60GStaDistance=mtxrWl60GStaDistance, mtxrWl60GFreq=mtxrWl60GFreq, mtxrBuildTime=mtxrBuildTime, mtxrSattelites=mtxrSattelites, mtxrQueueSimpleTable=mtxrQueueSimpleTable, mtxrDnStatTxStrength=mtxrDnStatTxStrength, mtxrDnStatRxRate=mtxrDnStatRxRate, mtxrWlCMChannel=mtxrWlCMChannel, mtxrInterfaceStatsTxPause=mtxrInterfaceStatsTxPause, mtxrLTEModemSignalRSRQ=mtxrLTEModemSignalRSRQ, mtxrInterfaceStatsRxTooShort=mtxrInterfaceStatsRxTooShort, mtxrLTEModemIMSI=mtxrLTEModemIMSI, mtxrWlRtabTxStrengthCh0=mtxrWlRtabTxStrengthCh0, mtxrWlRtabRxPackets=mtxrWlRtabRxPackets, Power=Power, mtxrNeighborSoftwareID=mtxrNeighborSoftwareID, mtxrInterfaceStatsTx512To1023=mtxrInterfaceStatsTx512To1023, mtxrNeighborTable=mtxrNeighborTable, mtxrInterfaceStatsTx1024To1518=mtxrInterfaceStatsTx1024To1518, mtxrGaugeIndex=mtxrGaugeIndex, mtxrInterfaceStatsTxDeferred=mtxrInterfaceStatsTxDeferred, mtxrInterfaceStatsTable=mtxrInterfaceStatsTable, mtxrInterfaceStatsRxPause=mtxrInterfaceStatsRxPause, mtxrIkeSAIdentity=mtxrIkeSAIdentity, mtxrDnConnected=mtxrDnConnected, mtxrInterfaceStatsRxJabber=mtxrInterfaceStatsRxJabber, mtxrLicSoftwareId=mtxrLicSoftwareId, mtxrWirelessGroup=mtxrWirelessGroup, mtxrWlApSsid=mtxrWlApSsid, mtxrHotspot=mtxrHotspot, mtxrHlFanSpeed1=mtxrHlFanSpeed1, mtxrUSBPowerReset=mtxrUSBPowerReset, mtxrHotspotActiveUserIdleTimeout=mtxrHotspotActiveUserIdleTimeout, mtxrOpticalRxLoss=mtxrOpticalRxLoss, mtxrPartitionIndex=mtxrPartitionIndex, mtxrNote=mtxrNote, mtxrInterfaceStatsTxFragment=mtxrInterfaceStatsTxFragment, mtxrHotspotActiveUserPingTimeout=mtxrHotspotActiveUserPingTimeout, mtxrTraps=mtxrTraps, mtxrInterfaceStatsRxBroadcast=mtxrInterfaceStatsRxBroadcast, mtxrQueueSimplePCQQueuesIn=mtxrQueueSimplePCQQueuesIn, mtxrWlStatTxRate=mtxrWlStatTxRate, mtxrInterfaceStatsDriverTxBytes=mtxrInterfaceStatsDriverTxBytes, mtxrWirelessModemSignalECIO=mtxrWirelessModemSignalECIO, mtxrNeighborIdentity=mtxrNeighborIdentity, mtxrOpticalWavelength=mtxrOpticalWavelength, mtXRouterOs=mtXRouterOs, mtxrIkeSAPh2Count=mtxrIkeSAPh2Count, mtxrWlCMRemoteAddress=mtxrWlCMRemoteAddress, Voltage=Voltage, mtxrWl60GStaSignal=mtxrWl60GStaSignal, mtxrInterfaceStatsDriverRxBytes=mtxrInterfaceStatsDriverRxBytes, mtxrHotspotActiveUserRadius=mtxrHotspotActiveUserRadius, mtxrDnStatEntry=mtxrDnStatEntry, mtxrWlStatEntry=mtxrWlStatEntry, mtxrWlRtabRxRate=mtxrWlRtabRxRate, mtxrDate=mtxrDate, mtxrLTEModemSignalRSSI=mtxrLTEModemSignalRSSI, mtxrPartitionActive=mtxrPartitionActive, mtxrWlStatIndex=mtxrWlStatIndex, mtxrWlRtabTable=mtxrWlRtabTable, mtxrSystem=mtxrSystem, mtxrHotspotActiveUsersTable=mtxrHotspotActiveUsersTable, mtxrInterfaceStatsTx64=mtxrInterfaceStatsTx64, IDiv1000=IDiv1000, mtxrInterfaceStatsTxDrop=mtxrInterfaceStatsTxDrop, mtxrHlFanSpeed2=mtxrHlFanSpeed2, mtxrHotspotActiveUserIndex=mtxrHotspotActiveUserIndex, mtxrWlCMRemoteIndex=mtxrWlCMRemoteIndex, mtxrWlCMRtabTxStrength=mtxrWlCMRtabTxStrength, mtxrNeighborPlatform=mtxrNeighborPlatform, mtxrQueueSimpleIndex=mtxrQueueSimpleIndex, mtxrLTEModemSectorId=mtxrLTEModemSectorId, mtxrInterfaceStats=mtxrInterfaceStats, mtxrGaugeUnit=mtxrGaugeUnit, mtxrPOEVoltage=mtxrPOEVoltage, mtxrNeighborTableEntry=mtxrNeighborTableEntry, mtxrIkeSAIndex=mtxrIkeSAIndex, mtxrWlRtabTxPackets=mtxrWlRtabTxPackets, mtxrInterfaceStatsRxDrop=mtxrInterfaceStatsRxDrop, mtxrWlApClientCount=mtxrWlApClientCount, mtxrHealth=mtxrHealth, mtxrWl60GConnected=mtxrWl60GConnected, mtxrOpticalTxBiasCurrent=mtxrOpticalTxBiasCurrent, mtxrInterfaceStatsRxAlignError=mtxrInterfaceStatsRxAlignError, mtxrInterfaceStatsTxMulticast=mtxrInterfaceStatsTxMulticast, mtxrIkeSARxPackets=mtxrIkeSARxPackets, mtxrLTEModemLac=mtxrLTEModemLac, mtxrWlCMRtabEntry=mtxrWlCMRtabEntry, mtxrWlRtabTxStrengthCh2=mtxrWlRtabTxStrengthCh2, mtxrOpticalTableEntry=mtxrOpticalTableEntry, mtxrLicUpgradableTo=mtxrLicUpgradableTo, mtxrScriptRunGroup=mtxrScriptRunGroup, mtxrInterfaceStatsRxCarrierError=mtxrInterfaceStatsRxCarrierError, mtxrWlApTable=mtxrWlApTable, mtxrInterfaceStatsTxTooShort=mtxrInterfaceStatsTxTooShort, mtxrWl60GSsid=mtxrWl60GSsid, mtxrPOEStatus=mtxrPOEStatus, mtxrPOECurrent=mtxrPOECurrent, mtxrOptical=mtxrOptical, mtxrWl60GSignal=mtxrWl60GSignal, mtxrWlCMAuthClientCount=mtxrWlCMAuthClientCount, mtxrTrapGroup=mtxrTrapGroup, mtxrWlApBand=mtxrWlApBand, mtxrWlRtabRadioName=mtxrWlRtabRadioName, mtxrWlApAuthClientCount=mtxrWlApAuthClientCount, mtxrInterfaceStatsTx65To127=mtxrInterfaceStatsTx65To127, mtxrInterfaceStatsRxPackets=mtxrInterfaceStatsRxPackets, mtxrWlCMRemoteState=mtxrWlCMRemoteState, mtxrInterfaceStatsTxSingleCollision=mtxrInterfaceStatsTxSingleCollision, mtxrInterfaceStatsTxMultipleCollision=mtxrInterfaceStatsTxMultipleCollision, mtxrWlCMRtabTxRate=mtxrWlCMRtabTxRate, mtxrInterfaceStatsRxOverflow=mtxrInterfaceStatsRxOverflow, mtxrNotifications=mtxrNotifications, mtxrLTEModemEnbId=mtxrLTEModemEnbId, mtxrWlStatBand=mtxrWlStatBand, mtxrScriptTableEntry=mtxrScriptTableEntry, mtxrQueueTreeTable=mtxrQueueTreeTable, mtxrWlCMEntry=mtxrWlCMEntry, mtxrQueueSimpleBytesIn=mtxrQueueSimpleBytesIn, mtxrInterfaceStatsTxExcessiveDeferred=mtxrInterfaceStatsTxExcessiveDeferred, mtxrInterfaceStatsTxLateCollision=mtxrInterfaceStatsTxLateCollision, mtxrHealthGroup=mtxrHealthGroup, mtxrWlCMIndex=mtxrWlCMIndex, mtxrWlCMRtabIface=mtxrWlCMRtabIface, mtxrQueueSimpleBytesOut=mtxrQueueSimpleBytesOut, mtxrLongtitude=mtxrLongtitude, mtxrLTEModemSignalRSRP=mtxrLTEModemSignalRSRP, mtxrOpticalGroup=mtxrOpticalGroup, mtxrScriptGroup=mtxrScriptGroup, mtxrScripts=mtxrScripts, GDiv100=GDiv100, mtxrInterfaceStatsName=mtxrInterfaceStatsName, mtxrWirelessModemGroup=mtxrWirelessModemGroup, mtxrPOETable=mtxrPOETable, mtxrInterfaceStatsTxTooLong=mtxrInterfaceStatsTxTooLong, mtxrLTEModemAccessTechnology=mtxrLTEModemAccessTechnology, mikrotik=mikrotik, mtxrIkeSALocalPort=mtxrIkeSALocalPort, mtxrWlRtabTxBytes=mtxrWlRtabTxBytes, mtxrHlProcessorTemperature=mtxrHlProcessorTemperature, mtxrWlCMRtabSsid=mtxrWlCMRtabSsid, mtxrInterfaceStatsRxTooLong=mtxrInterfaceStatsRxTooLong, mtxrDnStatTxRate=mtxrDnStatTxRate, mtxrQueueSimplePacketsIn=mtxrQueueSimplePacketsIn, mtxrIkeSANatt=mtxrIkeSANatt, mtxrDnStatIndex=mtxrDnStatIndex, mtxrQueueTreeIndex=mtxrQueueTreeIndex, mtxrNeighborInterfaceID=mtxrNeighborInterfaceID, mtxrOpticalTxFault=mtxrOpticalTxFault, mtxrScriptTable=mtxrScriptTable, mtxrInterfaceStatsRx65To127=mtxrInterfaceStatsRx65To127, mtxrInterfaceStatsRxControl=mtxrInterfaceStatsRxControl, mtxrNeighbor=mtxrNeighbor, mtxrWlRtabEntryCount=mtxrWlRtabEntryCount, mtxrWl60GTable=mtxrWl60GTable, mtxrWlRtabUptime=mtxrWlRtabUptime, mtxrInterfaceStatsTxRx512To1023=mtxrInterfaceStatsTxRx512To1023, mtxrHlBoardTemperature=mtxrHlBoardTemperature, mtxrIkeSACount=mtxrIkeSACount, mtxrIPSec=mtxrIPSec, mtxrInterfaceStatsRx64=mtxrInterfaceStatsRx64, mtxrInterfaceStatsEntry=mtxrInterfaceStatsEntry, mtxrWlRtabRxStrengthCh1=mtxrWlRtabRxStrengthCh1, mtxrIkeSAUptime=mtxrIkeSAUptime, mtxrInterfaceStatsTxRx1519ToMax=mtxrInterfaceStatsTxRx1519ToMax, mtxrWlApBssid=mtxrWlApBssid, mtxrHlCoreVoltage=mtxrHlCoreVoltage, mtxrPOEPower=mtxrPOEPower, mtxrQueueSimplePCQQueuesOut=mtxrQueueSimplePCQQueuesOut, mtxrHotspotActiveUserBytesIn=mtxrHotspotActiveUserBytesIn, mtxrScriptRunOutput=mtxrScriptRunOutput)
