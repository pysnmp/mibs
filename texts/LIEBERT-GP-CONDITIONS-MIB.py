#
# PySNMP MIB module LIEBERT-GP-CONDITIONS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/liebert/LIEBERT-GP-COND-MIB
# Produced by pysmi-1.1.12 at Fri Jul 19 10:04:40 2024
# On host fv-az1251-884 platform Linux version 6.5.0-1023-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
liebertConditionsModuleReg, lgpConditions = mibBuilder.importSymbols("LIEBERT-GP-REGISTRATION-MIB", "liebertConditionsModuleReg", "lgpConditions")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, ModuleIdentity, NotificationType, IpAddress, Integer32, iso, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, MibIdentifier, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "NotificationType", "IpAddress", "Integer32", "iso", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Counter64", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
liebertGlobalProductsConditionsModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 3, 1))
liebertGlobalProductsConditionsModule.setRevisions(('2013-02-12 00:00', '2008-11-17 00:00', '2008-07-02 00:00', '2008-01-10 00:00', '2007-05-29 00:00', '2006-08-15 00:00', '2006-02-22 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: liebertGlobalProductsConditionsModule.setRevisionsDescriptions(('Added Surge Protection Device to lgpConditionCondenserTVSSFailure\n       DESCRIPTION', 'Added support for NXL unit.', 'o Expanded condtions table with new columns with a set of richer\n       alarm/condition properties.\n     o Added additional reference columns to conditions table to allow the\n       same alarm to be active on multiple instances of an item.\n    ', 'Modified contact email address and added lgpNetworkName object.', 'Added support for XDF Unit.', 'Added support for HP release and a condition for firmware corrupt.', 'Added support for Liebert DS Unit.',))
if mibBuilder.loadTexts: liebertGlobalProductsConditionsModule.setLastUpdated('201302120000Z')
if mibBuilder.loadTexts: liebertGlobalProductsConditionsModule.setOrganization('Liebert Corporation')
if mibBuilder.loadTexts: liebertGlobalProductsConditionsModule.setContactInfo('Contact:   Technical Support\n\n      Postal:\n      Liebert Corporation\n      1050 Dearborn Drive\n      P.O. Box 29186\n      Columbus OH, 43229\n      US\n\n      Tel: +1 (800) 222-5877\n\n      E-mail: liebert.monitoring@vertivco.com\n      Web:    www.vertivco.com\n\n      Author:  Gregory M. Hoge')
if mibBuilder.loadTexts: liebertGlobalProductsConditionsModule.setDescription("The MIB module used to register Liebert SNMP OIDs.\n\n      Copyright 2000-2008,2013 Liebert Corporation. All rights reserved.\n      Reproduction of this document is authorized on the condition\n      that the forgoing copyright notice is included.\n\n      This Specification is supplied 'AS IS' and Liebert Corporation\n      makes no warranty, either express or implied, as to the use,\n      operation, condition, or performance of the Specification.")
lgpConditionsWellKnown = MibIdentifier((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1))
lgpConditionsPresent = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionsPresent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionsPresent.setDescription('The present number of conditions (rows) in the lgpConditionsTable.')
lgpConditionsTable = MibTable((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3), )
if mibBuilder.loadTexts: lgpConditionsTable.setStatus('current')
if mibBuilder.loadTexts: lgpConditionsTable.setDescription("A list of condition table entries.  The table contains zero, one,\n         or many rows at any moment, depending upon the number of conditions\n         in effect.  The number of rows in the table is given by\n         (lgpConditionsPresent).  The table is initially empty at agent startup.\n         The agent creates a row in the table each time a condition is detected\n         and deletes that row subject to the following rules:\n\n         Rows are removed from the table based on the following rules:\n         1. If a condition does not require acknowledgement\n            (see 'lgpConditionAckReq') the condition is removed as soon as\n            the issue clears (see 'lgpConditionCurrentState').\n         2. If a condition requires acknowledgement (see 'lgpConditionAckReq')\n            the condition is removed as soon as the issue clears\n            (see 'lgpConditionCurrentState') AND the condition is acknowledged\n            (see 'lgpConditionAcknowledged').\n         3. If the columns 'lgpConditionCurrentState' and\n            'lgpConditionAcknowledged' are not present for the condition\n            then the condition will be removed as soon as the issue causing\n            the condition clears.\n\n         The agent creates the first row with lgpConditionId equal to 1,\n         and increments the value of 'lgpConditionId' each time a new row is\n         created, wrapping to the first free value greater than or equal to 1\n         when the maximum value of lgpConditionId would otherwise be exceeded.\n         The number of rows in the table at any given time is reflected by\n         the value of 'lgpConditionsPresent'.\n        ")
lgpConditionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3, 1), ).setIndexNames((0, "LIEBERT-GP-CONDITIONS-MIB", "lgpConditionId"))
if mibBuilder.loadTexts: lgpConditionEntry.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEntry.setDescription("This entry defines the contents of the rows for the table\n            'lgpConditionsTable'.  A row in this table cannot be created\n            or deleted by SNMP operations on columns of the table.")
lgpConditionId = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionId.setStatus('current')
if mibBuilder.loadTexts: lgpConditionId.setDescription("A unique identifier for a condition. This value must remain\n            constant between agent initializations.  This OID is used as\n            an index to identify a row in the table 'lgpConditionsTable'.")
lgpConditionDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionDescr.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDescr.setDescription('A reference to a condition description object. The object\n            referenced should not be accessible, but rather be used to provide\n            a unique description.')
lgpConditionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionTime.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTime.setDescription('The value of sysUpTime when the condition occurred (became active).')
lgpConditionTableRef = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionTableRef.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTableRef.setDescription("This object will be included as a varbind in some\n             rows of the table.  It is a reference to a table object in\n             the MIB.  The value of this object will be the OID of a table\n             that the object that the condition applies to is defined.\n             The table row corresponding to this object will also contain\n             a varbind 'lgpConditionTableRowRef' that will specify which\n             instance (row) in the referenced table the object is defined in.\n\n             Example:\n               TABLE ROW:\n                lgpConditionId              5\n                lgpConditionDescr           lgpConditionRcpBranchBreakerOpen\n                lgpConditionTime            393884848\n                lgpConditionTableRef        lgpPduRbTable\n                lgpConditionTableRowRef     lgpPduRbEntryId.1.4\n                lgpConditionType            alarm\n                lgpConditionCurrentState    active\n                lgpConditionSeverity        major\n                lgpConditionAcknowledged    acknowledged\n                lgpConditionAckReq          required\n\n             In the above example the breaker opened for a Receptacle branch.\n             The specific receptacle branch is specified by the additional\n             varbind (lgpEventParmTableRowRef).  In this case the notification\n             is for the 4th receptacle branch on the 1st PDU in the cluster.\n            ")
lgpConditionTableRowRef = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionTableRowRef.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTableRowRef.setDescription('This is a reference to the (cell) in the table specified by the\n             companion varbind (lgpConditionTableRef) in this condition.\n             The row in the table where this cell exists represents the object\n             that this condition applies to.\n\n             Example:\n               TABLE ROW:\n                lgpConditionId              5\n                lgpConditionDescr           lgpConditionRcpBranchBreakerOpen\n                lgpConditionTime            393884848\n                lgpConditionTableRef        lgpPduRbTable\n                lgpConditionTableRowRef     lgpPduRbEntryId.1.4\n                lgpConditionType\n                lgpConditionCurrentState    active\n                lgpConditionSeverity        major\n                lgpConditionAcknowledged    acknowledged\n                lgpConditionAckReq          required\n\n             The table containing the definition of the receptacle branch\n             (lgpPduRbTable) is given by the varbind (lgpConditionTableRef)\n\n             The specific receptacle branch (instance) is specified by the\n             varbind (lgpConditionTableRowRef).  In this case the condition\n             is for the 4th receptacle branch on the 1st PDU in the PDU cluster.\n\n             If one wanted to retrieve the serial number for this\n             receptacle branch the OID would be: lgpPduRbEntrySerialNum.1.4.\n            ')
lgpConditionType = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 4, 6, 8))).clone(namedValues=NamedValues(("not-specified", 0), ("message", 2), ("warning", 4), ("alarm", 6), ("fault", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionType.setStatus('current')
if mibBuilder.loadTexts: lgpConditionType.setDescription('The type of condition in this row in the table.')
lgpConditionCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionCurrentState.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCurrentState.setDescription("Indication of the current state of the event.  If the state\n             is 'active' then the condition currently exists.  If the\n             state is 'inactive' then the condition no longer exists (i.e.\n             the situation causing the condition has cleared or been\n             resolved).  The behavior of some devices is to remove\n             the condition from this table when the condition clears.\n             The behavior of other devices is to leave the condition\n             entry in the table until the condition is acknowledged (\n             see lgpConditionAcknowledged and lgpConditionAckReq).")
lgpConditionSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 6, 9))).clone(namedValues=NamedValues(("not-applicable", 0), ("minor", 3), ("major", 6), ("critical", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionSeverity.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSeverity.setDescription('This represents the relative severity of the condition.')
lgpConditionAcknowledged = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notAcknowledged", 1), ("acknowledged", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpConditionAcknowledged.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAcknowledged.setDescription("This indicates if the condition has been acknowledged.\n             If the value is 'notAcknowledged' then the condition has\n             not been acknowledged.  If the value is 'acknowledged'\n             then the condition has been acknowledged.  Writing a value\n             of 'acknowledged' to this object acknowledges the condition\n             and the value will be changed to 'acknowledged'.\n\n             If the current state of the condition is 'active'\n             (see lgpConditionCurrentState) the condition will, for all\n             devices remain in the table regardless of the state of the\n             'lgpConditionAcknowledged' object.\n\n             If the 'lgpConditionAckReq' is 'notRequired' or this column\n             does not exist for the row then this object has no affect on\n             the duration the condition stays in the lgpConditionsTable.\n\n             If the 'lgpConditionAckReq' is 'required' then the condition\n             will remain in the condition table until both the\n             'lgpConditionCurrentState' is 'inactive' AND\n             'lgpConditionAcknowledged' is 'acknowledged'.\n            ")
lgpConditionAckReq = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("required", 1), ("notRequired", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionAckReq.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAckReq.setDescription("This indicates if the corresponding condition does or does not\n             require user acknowledgement.  Conditions that require\n             user acknowledgement will have a value of 'required'.  Those\n             conditions that do not require user acknowledgement will have\n             a value of 'notRequired' or in some devices the column may\n             not be present at all.\n\n             If a condition requires acknowledgement it will remain in the\n             table until both the 'lgpConditionCurrentState' and\n             'lgpConditionAcknowledged' are 'inactive' and 'acknowledged'\n             respectively (see lgpConditionAcknowledged).\n\n             If a condition does not require acknowledgement it will\n             be removed from the table as soon as its\n             'lgpConditionCurrentState' is 'inactive'.\n            ")
lgpConditionControl = MibIdentifier((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 4))
lgpConditionControlEventReset = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("resetAll", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpConditionControlEventReset.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlEventReset.setDescription("Event Reset Command.  This command will reset all of the\n            device's events.  On some units, when an event is activated, a\n            'set' field is also marked and maintained even when the event has\n            become inactive.  The 'set' field is only cleared when the user\n            clears it and the event is no longer active.  This item will clear\n            the 'set' field for all events that are not active.")
lgpConditionControlEventAck = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("ackAll", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpConditionControlEventAck.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlEventAck.setDescription("Event Acknowledge Command.  This command will acknowledge all of the\n            device's events.")
lgpConditionControlTable = MibTable((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 4, 20), )
if mibBuilder.loadTexts: lgpConditionControlTable.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlTable.setDescription('A list of condition control table entries.  The table contains zero, one,\n         or many rows at any moment, depending upon the number of conditions that\n         are controllable by the unit.  This table does not necessarily contain all\n         conditions supported by the unit.  This table only contains conditions that\n         are end-user modifiable.')
lgpConditionControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 4, 20, 1), ).setIndexNames((0, "LIEBERT-GP-CONDITIONS-MIB", "lgpConditionControlIndex"))
if mibBuilder.loadTexts: lgpConditionControlEntry.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlEntry.setDescription("This entry defines the contents of the rows for the table\n            'lgpConditionControlTable'.  A row in this table cannot be created\n            or deleted by user initiated SNMP operations on columns of the table.")
lgpConditionControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 4, 20, 1, 1), Unsigned32())
if mibBuilder.loadTexts: lgpConditionControlIndex.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlIndex.setDescription('This is the index indicating the nth element of the table.')
lgpConditionControlDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 4, 20, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionControlDescr.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlDescr.setDescription('A reference to an Object Identifier (OID) representing a unique\n            condition. The referenced OID is used solely for identification\n            purposes.\n\n            The object identifier referenced here will be the same object\n            identifier referenced in the lgpConditionsTable (column:\n            lgpConditionDescr) when the condition is activated.')
lgpConditionControlEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 4, 20, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("not-specified", 0), ("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpConditionControlEnableStatus.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlEnableStatus.setDescription("The value in this column determines if the device is currently\n            capable of generating this event. If the value is 'enabled' then\n            the event will be generated if the condition indicated by\n            lgpConditionControlDescr becomes active. If the value is\n            'disabled' the device will never generate the event. This value is\n            stored on the managed device.\n            Some devices do not allow write access to some entries in this\n            column. The 'lgpConditionControlEnableCapability' column indicates\n            whether this entry can be written.")
lgpConditionControlType = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 4, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 4, 6, 8))).clone(namedValues=NamedValues(("not-specified", 0), ("message", 2), ("warning", 4), ("alarm", 6), ("fault", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpConditionControlType.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlType.setDescription("The 'type' assigned or configured for this condition. The value\n            assigned to the condition here is displayed in the\n            lgpConditionsTable (column: lgpConditionType). For some units this\n            is user configurable. This value is stored on the managed device.")
lgpConditionControlEnableCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 4, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("not-specified", 0), ("readonly", 1), ("readwrite", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionControlEnableCapability.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlEnableCapability.setDescription("Some devices do not allow write access to some entries in the\n            'lgpConditionControlEnableStatus' column. This column indicates\n            whether the 'lgpConditionControlEnableStatus' entry for this row\n            can be written.")
lgpConditionDescription = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpConditionDescription.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDescription.setDescription('The ASCII text description for the condition.')
lgpNetworkName = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpNetworkName.setStatus('current')
if mibBuilder.loadTexts: lgpNetworkName.setDescription('The network name in a node.domain.com like format.  This object is\n        intended to be used as a varbind object by other notifications that\n        have a context of a network address.  As an example the\n        lgpAgentDnsLookupFailure trap which describes a network name that\n        is failing or has failed to be resolved from a Domain Name Service (DNS)\n        lookup.\n\n        Refer to RFC 952 for further information.')
lgpFlexConditions = MibIdentifier((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 7))
lgpConditionHighTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 1))
if mibBuilder.loadTexts: lgpConditionHighTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperature.setDescription('The temperature has exceeded the high temperature threshold.')
lgpConditionLowTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 2))
if mibBuilder.loadTexts: lgpConditionLowTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowTemperature.setDescription('The temperature is below the low temperature threshold.')
lgpConditionHighHumidity = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 3))
if mibBuilder.loadTexts: lgpConditionHighHumidity.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighHumidity.setDescription('The humidity has exceeded the high humidity threshold.')
lgpConditionLowHumidity = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 4))
if mibBuilder.loadTexts: lgpConditionLowHumidity.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowHumidity.setDescription('The humidity is below the low humidity threshold.')
lgpConditionLossOfAirflow = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 5))
if mibBuilder.loadTexts: lgpConditionLossOfAirflow.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLossOfAirflow.setDescription('The system has detected a loss of air flow.')
lgpConditionLossOfAirflow1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 5, 1))
if mibBuilder.loadTexts: lgpConditionLossOfAirflow1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLossOfAirflow1.setDescription('The system has detected a loss of air flow at sensor 1.')
lgpConditionLossOfAirflow2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 5, 2))
if mibBuilder.loadTexts: lgpConditionLossOfAirflow2.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLossOfAirflow2.setDescription('The system has detected a loss of air flow at sensor 2.')
lgpConditionLossOfAirflowBlower1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 5, 3))
if mibBuilder.loadTexts: lgpConditionLossOfAirflowBlower1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLossOfAirflowBlower1.setDescription('The system has detected a loss of air flow from blower 1.')
lgpConditionLossOfAirflowAllBlowers = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 5, 4))
if mibBuilder.loadTexts: lgpConditionLossOfAirflowAllBlowers.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLossOfAirflowAllBlowers.setDescription('No air flow through the unit due to failure of all blowers.')
lgpConditionChangeFilter = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 6))
if mibBuilder.loadTexts: lgpConditionChangeFilter.setStatus('current')
if mibBuilder.loadTexts: lgpConditionChangeFilter.setDescription('The system has detected a condition indicating the air filter\n        should be changed.')
lgpConditionCompressorHighHeadPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 7))
if mibBuilder.loadTexts: lgpConditionCompressorHighHeadPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressorHighHeadPressure.setDescription('This system has detected an excessive head pressure condition.')
lgpConditionCompressor1HighHeadPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 7, 1))
if mibBuilder.loadTexts: lgpConditionCompressor1HighHeadPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor1HighHeadPressure.setDescription('The system has detected excessive head pressure in compressor 1.')
lgpConditionCompressor1AHighHeadPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 7, 1, 1))
if mibBuilder.loadTexts: lgpConditionCompressor1AHighHeadPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor1AHighHeadPressure.setDescription('The system has detected excessive head pressure in compressor 1A.')
lgpConditionCompressor1BHighHeadPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 7, 1, 2))
if mibBuilder.loadTexts: lgpConditionCompressor1BHighHeadPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor1BHighHeadPressure.setDescription('The system has detected excessive head pressure in compressor 1B.')
lgpConditionCompressor2HighHeadPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 7, 2))
if mibBuilder.loadTexts: lgpConditionCompressor2HighHeadPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor2HighHeadPressure.setDescription('The system has detected excessive head pressure in compressor 2.')
lgpConditionCompressor2AHighHeadPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 7, 2, 1))
if mibBuilder.loadTexts: lgpConditionCompressor2AHighHeadPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor2AHighHeadPressure.setDescription('The system has detected excessive head pressure in compressor 2A.')
lgpConditionCompressor2BHighHeadPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 7, 2, 2))
if mibBuilder.loadTexts: lgpConditionCompressor2BHighHeadPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor2BHighHeadPressure.setDescription('The system has detected excessive head pressure in compressor 2B.')
lgpConditionCompressor3HighHeadPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 7, 3))
if mibBuilder.loadTexts: lgpConditionCompressor3HighHeadPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor3HighHeadPressure.setDescription('The system has detected excessive head pressure in compressor 3.')
lgpConditionCompressor4HighHeadPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 7, 4))
if mibBuilder.loadTexts: lgpConditionCompressor4HighHeadPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor4HighHeadPressure.setDescription('The system has detected excessive head pressure in compressor 4.')
lgpConditionCompressorOverload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 8))
if mibBuilder.loadTexts: lgpConditionCompressorOverload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressorOverload.setDescription('This system has detected a compressor overload condition.')
lgpConditionCompressor1Overload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 8, 1))
if mibBuilder.loadTexts: lgpConditionCompressor1Overload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor1Overload.setDescription('The system has detected an overload condition on compressor 1.')
lgpConditionCompressor2Overload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 8, 2))
if mibBuilder.loadTexts: lgpConditionCompressor2Overload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor2Overload.setDescription('The system has detected an overload condition on compressor 2.')
lgpConditionCompressor3Overload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 8, 3))
if mibBuilder.loadTexts: lgpConditionCompressor3Overload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor3Overload.setDescription('The system has detected an overload condition on compressor 3.')
lgpConditionCompressor4Overload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 8, 4))
if mibBuilder.loadTexts: lgpConditionCompressor4Overload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor4Overload.setDescription('The system has detected an overload condition on compressor 4.')
lgpConditionCompressorShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 9))
if mibBuilder.loadTexts: lgpConditionCompressorShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressorShortCycle.setDescription('A compressor has exceeded the maximum number of starts in a\n        minimum time period.')
lgpConditionCompressor1ShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 9, 1))
if mibBuilder.loadTexts: lgpConditionCompressor1ShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor1ShortCycle.setDescription('The system has detected a short cycle event on compressor 1.\n            The compressor has exceeded the maximum number of starts for\n            specified amount of time.')
lgpConditionCompressor1AShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 9, 1, 1))
if mibBuilder.loadTexts: lgpConditionCompressor1AShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor1AShortCycle.setDescription('The system has detected a short cycle event on compressor 1A.\n              The compressor has exceeded the maximum number of starts for\n              specified amount of time.')
lgpConditionCompressor1BShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 9, 1, 2))
if mibBuilder.loadTexts: lgpConditionCompressor1BShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor1BShortCycle.setDescription('The system has detected a short cycle event on compressor 1B.\n              The compressor has exceeded the maximum number of starts for\n              specified amount of time.')
lgpConditionCompressor2ShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 9, 2))
if mibBuilder.loadTexts: lgpConditionCompressor2ShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor2ShortCycle.setDescription('The system has detected a short cycle event on compressor 2.\n            The compressor has exceeded the maximum number of starts for\n            specified amount of time.')
lgpConditionCompressor2AShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 9, 2, 1))
if mibBuilder.loadTexts: lgpConditionCompressor2AShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor2AShortCycle.setDescription('The system has detected a short cycle event on compressor 2A.\n              The compressor has exceeded the maximum number of starts for\n              specified amount of time.')
lgpConditionCompressor2BShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 9, 2, 2))
if mibBuilder.loadTexts: lgpConditionCompressor2BShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor2BShortCycle.setDescription('The system has detected a short cycle event on compressor 2B.\n              The compressor has exceeded the maximum number of starts for\n              specified amount of time.')
lgpConditionCompressor3ShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 9, 3))
if mibBuilder.loadTexts: lgpConditionCompressor3ShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor3ShortCycle.setDescription('The system has detected a short cycle event on compressor 3.\n            The compressor has exceeded the maximum number of starts for\n            specified amount of time.')
lgpConditionCompressor4ShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 9, 4))
if mibBuilder.loadTexts: lgpConditionCompressor4ShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor4ShortCycle.setDescription('The system has detected a short cycle event on compressor 4.\n            The compressor has exceeded the maximum number of starts for\n            specified amount of time.')
lgpConditionCompressorLowSuctionPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 10))
if mibBuilder.loadTexts: lgpConditionCompressorLowSuctionPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressorLowSuctionPressure.setDescription('The pressure at a compressor inlet has dropped below the\n        minimum setting.')
lgpConditionCompressor1LowSuctionPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 10, 1))
if mibBuilder.loadTexts: lgpConditionCompressor1LowSuctionPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor1LowSuctionPressure.setDescription('The pressure at compressor 1 inlet has dropped below the\n            minimum setting.')
lgpConditionCompressor2LowSuctionPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 10, 2))
if mibBuilder.loadTexts: lgpConditionCompressor2LowSuctionPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor2LowSuctionPressure.setDescription('The pressure at compressor 2 inlet has dropped below the\n            minimum setting.')
lgpConditionCompressor3LowSuctionPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 10, 3))
if mibBuilder.loadTexts: lgpConditionCompressor3LowSuctionPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor3LowSuctionPressure.setDescription('The pressure at compressor 3 inlet has dropped below the\n            minimum setting.')
lgpConditionCompressor4LowSuctionPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 10, 4))
if mibBuilder.loadTexts: lgpConditionCompressor4LowSuctionPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor4LowSuctionPressure.setDescription('The pressure at compressor 4 inlet has dropped below the\n            minimum setting.')
lgpConditionMainFanOverLoad = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 11))
if mibBuilder.loadTexts: lgpConditionMainFanOverLoad.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMainFanOverLoad.setDescription('The system has detected a main fan overload condition.')
lgpConditionManualOverride = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 12))
if mibBuilder.loadTexts: lgpConditionManualOverride.setStatus('current')
if mibBuilder.loadTexts: lgpConditionManualOverride.setDescription('The system has detected a manual override condition.')
lgpConditionStandbyGlycoolPumpOn = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 13))
if mibBuilder.loadTexts: lgpConditionStandbyGlycoolPumpOn.setStatus('current')
if mibBuilder.loadTexts: lgpConditionStandbyGlycoolPumpOn.setDescription('The standby Glycol or Glycool pump is activated.')
lgpConditionWaterUnderFloor = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 14))
if mibBuilder.loadTexts: lgpConditionWaterUnderFloor.setStatus('current')
if mibBuilder.loadTexts: lgpConditionWaterUnderFloor.setDescription('Moisture has been detected under the floor.')
lgpConditionHumidifierProblem = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 15))
if mibBuilder.loadTexts: lgpConditionHumidifierProblem.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHumidifierProblem.setDescription('The system has detected a humidifier problem.')
lgpConditionLowWaterInHumidifier = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 16))
if mibBuilder.loadTexts: lgpConditionLowWaterInHumidifier.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowWaterInHumidifier.setDescription('The system has detected a low water condition in the humidifier\n        reservoir.')
lgpConditionSmokeDetected = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 17))
if mibBuilder.loadTexts: lgpConditionSmokeDetected.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSmokeDetected.setDescription('The system has detected smoke.')
lgpConditionLowWaterFlow = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 18))
if mibBuilder.loadTexts: lgpConditionLowWaterFlow.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowWaterFlow.setDescription('The system has detected a low water flow rate condition.')
lgpConditionLostPower = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 19))
if mibBuilder.loadTexts: lgpConditionLostPower.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLostPower.setDescription('The system has lost power before being switched off using the\n        controls.  This condition is activated when power is restored.')
lgpGeneralFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 20))
if mibBuilder.loadTexts: lgpGeneralFault.setStatus('current')
if mibBuilder.loadTexts: lgpGeneralFault.setDescription('A fault condition has been detected that is not identified\n        in the well known list.')
lgpConditionLocalAlarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 21))
if mibBuilder.loadTexts: lgpConditionLocalAlarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLocalAlarm.setDescription('This system has detected a local, or customer, alarm condition.')
lgpConditionLocalAlarm1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 21, 1))
if mibBuilder.loadTexts: lgpConditionLocalAlarm1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLocalAlarm1.setDescription('The system has detected that customer alarm condition 1 is active.')
lgpConditionLocalAlarm2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 21, 2))
if mibBuilder.loadTexts: lgpConditionLocalAlarm2.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLocalAlarm2.setDescription('The system has detected that customer alarm condition 2 is active.')
lgpConditionLocalAlarm3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 21, 3))
if mibBuilder.loadTexts: lgpConditionLocalAlarm3.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLocalAlarm3.setDescription('The system has detected that customer alarm condition 3 is active.')
lgpConditionLocalAlarm4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 21, 4))
if mibBuilder.loadTexts: lgpConditionLocalAlarm4.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLocalAlarm4.setDescription('The system has detected that customer alarm condition 4 is active.')
lgpConditionLocalAlarm5 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 21, 5))
if mibBuilder.loadTexts: lgpConditionLocalAlarm5.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLocalAlarm5.setDescription('The system has detected that customer alarm condition 5 is active.')
lgpConditionLocalAlarm6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 21, 6))
if mibBuilder.loadTexts: lgpConditionLocalAlarm6.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLocalAlarm6.setDescription('The system has detected that customer alarm condition 6 is active.')
lgpConditionLocalAlarm7 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 21, 7))
if mibBuilder.loadTexts: lgpConditionLocalAlarm7.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLocalAlarm7.setDescription('The system has detected that customer alarm condition 7 is active.')
lgpConditionLocalAlarm8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 21, 8))
if mibBuilder.loadTexts: lgpConditionLocalAlarm8.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLocalAlarm8.setDescription('The system has detected that customer alarm condition 8 is active.')
lgpConditionStandbyUnitOn = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 22))
if mibBuilder.loadTexts: lgpConditionStandbyUnitOn.setStatus('current')
if mibBuilder.loadTexts: lgpConditionStandbyUnitOn.setDescription('The system has detected the standby unit is operating.')
lgpConditionCompressorLowPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 23))
if mibBuilder.loadTexts: lgpConditionCompressorLowPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressorLowPressure.setDescription('This system has detected a low head compressor condition.')
lgpConditionCompressor1LowPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 23, 1))
if mibBuilder.loadTexts: lgpConditionCompressor1LowPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor1LowPressure.setDescription('The system has detected low pressure in compressor 1.')
lgpConditionTandemCompressorCircuit1LowPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 23, 1, 1))
if mibBuilder.loadTexts: lgpConditionTandemCompressorCircuit1LowPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTandemCompressorCircuit1LowPressure.setDescription('The system has detected low pressure in tandem compressor circuit 1.')
lgpConditionCompressor2LowPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 23, 2))
if mibBuilder.loadTexts: lgpConditionCompressor2LowPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor2LowPressure.setDescription('The system has detected low pressure in compressor 2.')
lgpConditionTandemCompressorCircuit2LowPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 23, 2, 1))
if mibBuilder.loadTexts: lgpConditionTandemCompressorCircuit2LowPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTandemCompressorCircuit2LowPressure.setDescription('The system has detected low pressure in tandem compressor circuit 2.')
lgpConditionCompressor3LowPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 23, 3))
if mibBuilder.loadTexts: lgpConditionCompressor3LowPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor3LowPressure.setDescription('The system has detected low pressure in compressor 3.')
lgpConditionCompressor4LowPressure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 23, 4))
if mibBuilder.loadTexts: lgpConditionCompressor4LowPressure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor4LowPressure.setDescription('The system has detected low pressure in compressor 4.')
lgpConditionHighWaterInPan = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 24))
if mibBuilder.loadTexts: lgpConditionHighWaterInPan.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighWaterInPan.setDescription('The system has detected a high water condition in the condenser pan.')
lgpConditionFaultySensor = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 25))
if mibBuilder.loadTexts: lgpConditionFaultySensor.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFaultySensor.setDescription('The system has detected a faulty temperature/humidity sensor.')
lgpConditionServiceCooling = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 26))
if mibBuilder.loadTexts: lgpConditionServiceCooling.setStatus('current')
if mibBuilder.loadTexts: lgpConditionServiceCooling.setDescription('The Cooling system requires scheduled maintenance.')
lgpConditionServiceHumidifier = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 27))
if mibBuilder.loadTexts: lgpConditionServiceHumidifier.setStatus('current')
if mibBuilder.loadTexts: lgpConditionServiceHumidifier.setDescription('The Humidifier requires scheduled maintenance.')
lgpConditionSystemControlBatteryLow = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 28))
if mibBuilder.loadTexts: lgpConditionSystemControlBatteryLow.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSystemControlBatteryLow.setDescription("Charge level of the system control's battery is below the\n        alarm set point.")
lgpConditionGroundSystemFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 29))
if mibBuilder.loadTexts: lgpConditionGroundSystemFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionGroundSystemFault.setDescription('The system has detected a ground system fault.')
lgpConditionGroundFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 30))
if mibBuilder.loadTexts: lgpConditionGroundFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionGroundFailure.setDescription('The system has detected a ground failure.')
lgpConditionSecurityBreach = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 31))
if mibBuilder.loadTexts: lgpConditionSecurityBreach.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSecurityBreach.setDescription('The system has detected a security breach.')
lgpConditionEmergencyShutdown = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 32))
if mibBuilder.loadTexts: lgpConditionEmergencyShutdown.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEmergencyShutdown.setDescription('The system has detected an emergency shutdown condition.  The System\n        is shutting down as a result of this emergency.')
lgpConditionOnBypass = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 33))
if mibBuilder.loadTexts: lgpConditionOnBypass.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOnBypass.setDescription('This system has detected the load is being powered by a bypass\n        source.')
lgpConditionLoadOnBypass = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 33, 1))
if mibBuilder.loadTexts: lgpConditionLoadOnBypass.setStatus('obsolete')
if mibBuilder.loadTexts: lgpConditionLoadOnBypass.setDescription('The load is being powered by a bypass source.')
lgpConditionLoadOnMaintenceBypass = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 33, 2))
if mibBuilder.loadTexts: lgpConditionLoadOnMaintenceBypass.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLoadOnMaintenceBypass.setDescription('The load is being powered by a maintenance bypass source.')
lgpConditionParallelSysLoadOnBypass = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 33, 3))
if mibBuilder.loadTexts: lgpConditionParallelSysLoadOnBypass.setStatus('current')
if mibBuilder.loadTexts: lgpConditionParallelSysLoadOnBypass.setDescription('The parallel system has transferred to bypass.')
lgpConditionLoadOnBypassByImpact = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 33, 4))
if mibBuilder.loadTexts: lgpConditionLoadOnBypassByImpact.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLoadOnBypassByImpact.setDescription('The system has detected a load impact and has transferred the\n            load to the bypass source.')
lgpConditionLoadTransferedToBypass = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 33, 5))
if mibBuilder.loadTexts: lgpConditionLoadTransferedToBypass.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLoadTransferedToBypass.setDescription('The system has transferred to bypass.  The load is being powered by\n            the bypass source.')
lgpConditionEmergencyTransferToBypass = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 33, 6))
if mibBuilder.loadTexts: lgpConditionEmergencyTransferToBypass.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEmergencyTransferToBypass.setDescription('The system has performed an emergency transfer to bypass.')
lgpConditionOutputToLoadVoltTHD = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 34))
if mibBuilder.loadTexts: lgpConditionOutputToLoadVoltTHD.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadVoltTHD.setDescription('The total harmonic distortion (THD) of the output voltage has exceeded a\n        pre-determined threshold for a device, or system, defined amount of\n        time.')
lgpConditionLogicFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 35))
if mibBuilder.loadTexts: lgpConditionLogicFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLogicFailure.setDescription('The system has detected a control logic failure.')
lgpConditionPowerSupplyFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 36))
if mibBuilder.loadTexts: lgpConditionPowerSupplyFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPowerSupplyFault.setDescription('This system had detected a power supply fault condition.')
lgpConditionPowerSupply1Fault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 36, 1))
if mibBuilder.loadTexts: lgpConditionPowerSupply1Fault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPowerSupply1Fault.setDescription('The system has detected power supply 1 is in a fault condition.')
lgpConditionPowerSupply2Fault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 36, 2))
if mibBuilder.loadTexts: lgpConditionPowerSupply2Fault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPowerSupply2Fault.setDescription('The system has detected power supply 2 is in a fault condition.')
lgpConditionPowerSupplyFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 37))
if mibBuilder.loadTexts: lgpConditionPowerSupplyFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPowerSupplyFailure.setDescription('This system has detected a power supply failure condition.')
lgpConditionPowerSupply1Failure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 37, 1))
if mibBuilder.loadTexts: lgpConditionPowerSupply1Failure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPowerSupply1Failure.setDescription('The system has detected power supply 1 has failed.')
lgpConditionPowerSupply2Failure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 37, 2))
if mibBuilder.loadTexts: lgpConditionPowerSupply2Failure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPowerSupply2Failure.setDescription('The system has detected power supply 2 has failed.')
lgpConditionSource1PowerSupplyInputFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 37, 3))
if mibBuilder.loadTexts: lgpConditionSource1PowerSupplyInputFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1PowerSupplyInputFailure.setDescription('The system has detected the source 1 Power supply input has failed.')
lgpConditionSource2PowerSupplyInputFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 37, 4))
if mibBuilder.loadTexts: lgpConditionSource2PowerSupplyInputFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2PowerSupplyInputFailure.setDescription('The system has detected the source 2 Power supply input has failed.')
lgpConditionPowerSupplyLogicFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 37, 5))
if mibBuilder.loadTexts: lgpConditionPowerSupplyLogicFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPowerSupplyLogicFailure.setDescription('The system has detected a power supply logic failure.')
lgpConditionCompressorPowerSupplyFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 37, 6))
if mibBuilder.loadTexts: lgpConditionCompressorPowerSupplyFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressorPowerSupplyFailure.setDescription('The system has detected the power supply to the compressors\n         has failed.')
lgpConditionOverVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38))
if mibBuilder.loadTexts: lgpConditionOverVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOverVoltage.setDescription('This system has detected an over voltage condition.')
lgpConditionSource1OverVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 1))
if mibBuilder.loadTexts: lgpConditionSource1OverVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1OverVoltage.setDescription('The system has detected an over voltage condition on source 1.\n            The voltage measurement has risen above a pre-determined threshold\n            for a device, or system, defined amount of time.')
lgpConditionSource2OverVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 2))
if mibBuilder.loadTexts: lgpConditionSource2OverVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2OverVoltage.setDescription('The system has detected an over voltage condition on source 2.\n            The voltage measurement has risen above a pre-determined threshold\n            for a device, or system, defined amount of time.')
lgpConditionOutputToLoadOverVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 3))
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverVoltage.setDescription('The system has detected the output to load is in an over-voltage\n             condition.  The voltage for the load has risen above a\n             pre-determined threshold for a device, or system, defined amount\n             of time.')
lgpConditionInputOverVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 4))
if mibBuilder.loadTexts: lgpConditionInputOverVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputOverVoltage.setDescription('The system has detected an input over voltage condition.  The\n            voltage measurement has risen above a pre-determined threshold for\n            a specified amount of time.')
lgpConditionBypassOverVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 5))
if mibBuilder.loadTexts: lgpConditionBypassOverVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassOverVoltage.setDescription('The system has detected an over voltage condition on the bypass.\n            The voltage measurement has risen above a pre-determined threshold\n            for a device, or system, defined amount of time.')
lgpConditionBypassOverVoltageFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 6))
if mibBuilder.loadTexts: lgpConditionBypassOverVoltageFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassOverVoltageFailure.setDescription('The system has detected an over voltage failure condition on the\n            bypass.  The voltage measurement has risen above a pre-determined\n            threshold for a device, or system, defined amount of time.')
lgpConditionBatteryOverVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 7))
if mibBuilder.loadTexts: lgpConditionBatteryOverVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryOverVoltage.setDescription('The system has detected a battery over voltage condition.')
lgpConditionDcBusOverVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 8))
if mibBuilder.loadTexts: lgpConditionDcBusOverVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcBusOverVoltage.setDescription('This system has detected a DC Bus over voltage condition.')
lgpConditionDcBus1OverVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 8, 1))
if mibBuilder.loadTexts: lgpConditionDcBus1OverVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcBus1OverVoltage.setDescription('The system has detected an over voltage condition on DC Bus\n                1.')
lgpConditionDcBus2OverVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 8, 2))
if mibBuilder.loadTexts: lgpConditionDcBus2OverVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcBus2OverVoltage.setDescription('The system has detected an over voltage condition on DC Bus\n                2.')
lgpConditionDcBus1OverVoltageFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 8, 3))
if mibBuilder.loadTexts: lgpConditionDcBus1OverVoltageFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcBus1OverVoltageFailure.setDescription('The system has detected an over voltage failure condition\n                on DC Bus 1.')
lgpConditionDcBus2OverVoltageFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 38, 8, 4))
if mibBuilder.loadTexts: lgpConditionDcBus2OverVoltageFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcBus2OverVoltageFailure.setDescription('The system has detected an over voltage failure condition\n                on DC Bus 2.')
lgpConditionUnderVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39))
if mibBuilder.loadTexts: lgpConditionUnderVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnderVoltage.setDescription('This system has detected an under voltage condition.')
lgpConditionSource1UnderVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 1))
if mibBuilder.loadTexts: lgpConditionSource1UnderVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1UnderVoltage.setDescription('The system has detected an under voltage condition on source 1.\n            The voltage measurement has fallen below a pre-determined threshold\n            for a device, or system, defined amount of time.')
lgpConditionSource2UnderVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 2))
if mibBuilder.loadTexts: lgpConditionSource2UnderVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2UnderVoltage.setDescription('The system has detected an under voltage condition on source 2.\n            The voltage measurement has fallen below a pre-determined threshold\n            for a device, or system, defined amount of time.')
lgpConditionOutputToLoadUnderVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 3))
if mibBuilder.loadTexts: lgpConditionOutputToLoadUnderVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadUnderVoltage.setDescription('The system has detected the output to load is in an under-voltage\n             condition.  The voltage for the load has fallen below a\n             pre-determined threshold for a device, or system, defined amount\n             of time.')
lgpConditionSource1UnderVoltageRMS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 4))
if mibBuilder.loadTexts: lgpConditionSource1UnderVoltageRMS.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1UnderVoltageRMS.setDescription('The system has detected an under voltage condition on source 1.\n            The voltage measurement has fallen below a pre-determined threshold\n            for a specified amount of time.')
lgpConditionSource2UnderVoltageRMS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 5))
if mibBuilder.loadTexts: lgpConditionSource2UnderVoltageRMS.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2UnderVoltageRMS.setDescription('The system has detected an under voltage condition on source 2.\n            The voltage measurement has fallen below a pre-determined threshold\n            for a specified amount of time.')
lgpConditionInputUnderVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 6))
if mibBuilder.loadTexts: lgpConditionInputUnderVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputUnderVoltage.setDescription('The system has detected an input under voltage condition.\n            The voltage measurement has fallen below a pre-determined threshold\n            for a device, or system, defined amount of time.')
lgpConditionBypassUnderVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 7))
if mibBuilder.loadTexts: lgpConditionBypassUnderVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassUnderVoltage.setDescription('The system has detected an under voltage condition on the bypass.\n            The voltage measurement has fallen below a pre-determined threshold\n            for a device, or system, defined amount of time.')
lgpConditionBypassUnderVoltageFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 8))
if mibBuilder.loadTexts: lgpConditionBypassUnderVoltageFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassUnderVoltageFailure.setDescription('The system has detected an under voltage failure condition on the\n            bypass.  The voltage measurement has fallen below a pre-determined\n            threshold for a device, or system, defined amount of time.')
lgpConditionBatteryUnderVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 9))
if mibBuilder.loadTexts: lgpConditionBatteryUnderVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryUnderVoltage.setDescription('The system has detected a battery under voltage condition.')
lgpConditionDcBusUnderVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 10))
if mibBuilder.loadTexts: lgpConditionDcBusUnderVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcBusUnderVoltage.setDescription('This system has detected a DC bus under voltage condition')
lgpConditionDcBus1UnderVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 10, 1))
if mibBuilder.loadTexts: lgpConditionDcBus1UnderVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcBus1UnderVoltage.setDescription('The system has detected an under voltage condition on DC Bus\n                1.')
lgpConditionDcBus2UnderVoltage = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 10, 2))
if mibBuilder.loadTexts: lgpConditionDcBus2UnderVoltage.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcBus2UnderVoltage.setDescription('The system has detected an under voltage condition on DC Bus\n                2.')
lgpConditionDcBus1UnderVoltageFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 10, 3))
if mibBuilder.loadTexts: lgpConditionDcBus1UnderVoltageFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcBus1UnderVoltageFailure.setDescription('The system has detected an under voltage failure condition\n                on DC Bus 1.')
lgpConditionDcBus2UnderVoltageFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 39, 10, 4))
if mibBuilder.loadTexts: lgpConditionDcBus2UnderVoltageFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcBus2UnderVoltageFailure.setDescription('The system has detected an under voltage failure condition\n                on DC Bus 2.')
lgpConditionOverload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40))
if mibBuilder.loadTexts: lgpConditionOverload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOverload.setDescription('This system has detected an overload condition.')
lgpConditionSource1Overload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40, 1))
if mibBuilder.loadTexts: lgpConditionSource1Overload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1Overload.setDescription('The system has detected an overload condition on source 1.  The\n         power requirement for this source has risen above a pre-determined\n         threshold for a device, or system, defined amount of time.')
lgpConditionSystemOverload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40, 2))
if mibBuilder.loadTexts: lgpConditionSystemOverload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSystemOverload.setDescription('The system has detected an overload condition.')
lgpConditionSource1PeakCurrentOverLoad = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40, 3))
if mibBuilder.loadTexts: lgpConditionSource1PeakCurrentOverLoad.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1PeakCurrentOverLoad.setDescription('The system has detected source 1 in is experiencing a peak over load\n        condition.  The current has risen above a pre-determined threshold for\n        a specified amount of time.')
lgpConditionSource2PeakCurrentOverLoad = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40, 4))
if mibBuilder.loadTexts: lgpConditionSource2PeakCurrentOverLoad.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2PeakCurrentOverLoad.setDescription('The system has detected source 2 in is experiencing a peak over load\n        condition.  The current has risen above a pre-determined threshold for\n        a specified amount of time.')
lgpConditionOutputToLoadOverLimit = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40, 5))
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverLimit.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverLimit.setDescription('The system had detected that the output to the load has exceeded the\n        lgpPwrOutputToLoadUserOverloadLimit.')
lgpConditionOutputToLoadOverload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40, 6))
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverload.setDescription('The system has detected an output overload condition.')
lgpConditionParallelSysOverload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40, 7))
if mibBuilder.loadTexts: lgpConditionParallelSysOverload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionParallelSysOverload.setDescription('The parallel system has detected an overload condition.')
lgpConditionBypassCurrentOverload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40, 8))
if mibBuilder.loadTexts: lgpConditionBypassCurrentOverload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassCurrentOverload.setDescription('With the load on bypass static switch, the measured output\n            RMS current has exceeded a specified percentage of the nominal\n            RMS current.')
lgpConditionBypassCurrentOverloadPhsA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40, 8, 1))
if mibBuilder.loadTexts: lgpConditionBypassCurrentOverloadPhsA.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassCurrentOverloadPhsA.setDescription('With the load on bypass static switch, the measured phase A output\n            RMS current has exceeded a specified percentage of the nominal\n            per-phase RMS current.')
lgpConditionBypassCurrentOverloadPhsB = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40, 8, 2))
if mibBuilder.loadTexts: lgpConditionBypassCurrentOverloadPhsB.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassCurrentOverloadPhsB.setDescription('With the load on bypass static switch, the measured phase B output\n            RMS current has exceeded a specified percentage of the nominal\n            per-phase RMS current.')
lgpConditionBypassCurrentOverloadPhsC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 40, 8, 3))
if mibBuilder.loadTexts: lgpConditionBypassCurrentOverloadPhsC.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassCurrentOverloadPhsC.setDescription('With the load on bypass static switch, the measured phase C output\n            RMS current has exceeded a specified percentage of the nominal\n            per-phase RMS current.')
lgpConditionScrShort = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 41))
if mibBuilder.loadTexts: lgpConditionScrShort.setStatus('current')
if mibBuilder.loadTexts: lgpConditionScrShort.setDescription('This system has detected a Silicon Controlled Rectifier (SCR)\n        short condition.')
lgpConditionSource1ScrShort = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 41, 1))
if mibBuilder.loadTexts: lgpConditionSource1ScrShort.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1ScrShort.setDescription('The system has detected a source 1 Silicon Controlled Rectifier\n            (SCR) short condition.')
lgpConditionSource2ScrShort = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 41, 2))
if mibBuilder.loadTexts: lgpConditionSource2ScrShort.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2ScrShort.setDescription('The system has detected a source 2 Silicon Controlled Rectifier\n            (SCR) short condition.')
lgpConditionBypassScrShort = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 41, 3))
if mibBuilder.loadTexts: lgpConditionBypassScrShort.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassScrShort.setDescription('The system has detected a Silicon Controlled Rectifier (SCR) short\n            condition on the bypass.')
lgpConditionInvStaticSwScrShort = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 41, 4))
if mibBuilder.loadTexts: lgpConditionInvStaticSwScrShort.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInvStaticSwScrShort.setDescription('The system has detected a short across one or more inverter static\n            switch Silicon Controlled Rectifiers (SCRs).')
lgpConditionSource1NeutralScrShort = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 41, 5))
if mibBuilder.loadTexts: lgpConditionSource1NeutralScrShort.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1NeutralScrShort.setDescription('The system has detected a source 1 Silicon Controlled Rectifier\n            (SCR) short condition on the neutral line.')
lgpConditionSource2NeutralScrShort = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 41, 6))
if mibBuilder.loadTexts: lgpConditionSource2NeutralScrShort.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2NeutralScrShort.setDescription('The system has detected a source 2 Silicon Controlled Rectifier\n            (SCR) short condition on the neutral line.')
lgpConditionScrOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 42))
if mibBuilder.loadTexts: lgpConditionScrOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionScrOpen.setDescription('This system has detected a Silicon Controlled Rectifier (SCR)\n        open condition.')
lgpConditionSource1ScrOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 42, 1))
if mibBuilder.loadTexts: lgpConditionSource1ScrOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1ScrOpen.setDescription('The system has detected a source 1 Silicon Controlled Rectifier\n            (SCR) open condition.')
lgpConditionSource2ScrOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 42, 2))
if mibBuilder.loadTexts: lgpConditionSource2ScrOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2ScrOpen.setDescription('The system has detected a source 2 Silicon Controlled Rectifier\n            (SCR) open condition.')
lgpConditionBypassScrOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 42, 3))
if mibBuilder.loadTexts: lgpConditionBypassScrOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassScrOpen.setDescription('The system has detected a Silicon Controlled Rectifier (SCR) open\n            condition on the bypass.')
lgpConditionSource1NeutralScrOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 42, 4))
if mibBuilder.loadTexts: lgpConditionSource1NeutralScrOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1NeutralScrOpen.setDescription('The system has detected a source 1 Silicon Controlled Rectifier\n            (SCR) open condition on the neutral line.')
lgpConditionSource2NeutralScrOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 42, 5))
if mibBuilder.loadTexts: lgpConditionSource2NeutralScrOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2NeutralScrOpen.setDescription('The system has detected a source 2 Silicon Controlled Rectifier\n            (SCR) open condition on the neutral line.')
lgpConditionFanFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 43))
if mibBuilder.loadTexts: lgpConditionFanFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFanFailure.setDescription('This system has detected a fan failure condition.')
lgpConditionFan1Failure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 43, 1))
if mibBuilder.loadTexts: lgpConditionFan1Failure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFan1Failure.setDescription('The system has detected a fan 1 failure condition.')
lgpConditionRedundantFanFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 43, 2))
if mibBuilder.loadTexts: lgpConditionRedundantFanFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRedundantFanFailure.setDescription("A failure has occurred in a fan that cools the system's internal\n            components and has resulted in a loss of fan redundancy.")
lgpConditionMultipleFanFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 43, 3))
if mibBuilder.loadTexts: lgpConditionMultipleFanFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMultipleFanFailure.setDescription("Multiple fans have failed resulting in a decreased ability to cool\n            the system's internal components.")
lgpConditionBlowerFanFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 43, 4))
if mibBuilder.loadTexts: lgpConditionBlowerFanFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBlowerFanFailure.setDescription('The system has detected a problem with one or more of the blower\n            fans.  These are not the system internal cooling fans.')
lgpConditionBottomBlowerFanFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 43, 4, 1))
if mibBuilder.loadTexts: lgpConditionBottomBlowerFanFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBottomBlowerFanFailure.setDescription('The bottom environmental unit blower fan is not operating\n                within its normal parameters.')
lgpConditionTopBlowerFanFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 43, 4, 2))
if mibBuilder.loadTexts: lgpConditionTopBlowerFanFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTopBlowerFanFailure.setDescription('The top environmental unit blower fan is not operating\n                within its normal parameters.')
lgpConditionCondenserFanVFDFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 43, 5))
if mibBuilder.loadTexts: lgpConditionCondenserFanVFDFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCondenserFanVFDFailure.setDescription('The system has detected a problem with the Variable Frequency\n            Drive system for the condenser fan.')
lgpConditionFanPowerFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 43, 6))
if mibBuilder.loadTexts: lgpConditionFanPowerFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFanPowerFailure.setDescription('The system has detected a power failure on one or more fans.')
lgpConditionTransferInhibited = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 44))
if mibBuilder.loadTexts: lgpConditionTransferInhibited.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTransferInhibited.setDescription('The system is preventing a transfer of the load to the alternate\n        source.')
lgpConditionAutoReTransferPrimed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 45))
if mibBuilder.loadTexts: lgpConditionAutoReTransferPrimed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAutoReTransferPrimed.setDescription('The system is capable to retransfer to the preferred source.')
lgpConditionSourcesOutOfSync = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 46))
if mibBuilder.loadTexts: lgpConditionSourcesOutOfSync.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSourcesOutOfSync.setDescription('The system has detected that the input sources are not within the\n        specified phase difference (synchronization window).')
lgpConditionSourceFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 47))
if mibBuilder.loadTexts: lgpConditionSourceFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSourceFailure.setDescription('This system has detected an input source failure condition.')
lgpConditionSource1Failure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 47, 1))
if mibBuilder.loadTexts: lgpConditionSource1Failure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1Failure.setDescription('The system has detected source 1 has failed.')
lgpConditionSource2Failure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 47, 2))
if mibBuilder.loadTexts: lgpConditionSource2Failure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2Failure.setDescription('The system has detected source 2 has failed.')
lgpConditionAutoReTransferInhibited = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 48))
if mibBuilder.loadTexts: lgpConditionAutoReTransferInhibited.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAutoReTransferInhibited.setDescription('The system is preventing a retransfer of the load back to the\n        preferred source.')
lgpConditionAutoReTransferFailed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 49))
if mibBuilder.loadTexts: lgpConditionAutoReTransferFailed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAutoReTransferFailed.setDescription('The system is failing to automatically retransfer the load back to the\n        preferred source.')
lgpConditionFuseOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 50))
if mibBuilder.loadTexts: lgpConditionFuseOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFuseOpen.setDescription('This system has detected an open fuse condition.')
lgpConditionControlFuse1Open = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 50, 1))
if mibBuilder.loadTexts: lgpConditionControlFuse1Open.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlFuse1Open.setDescription('The system has detected a control power fuse 1 open condition.')
lgpConditionControlFuse2Open = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 50, 2))
if mibBuilder.loadTexts: lgpConditionControlFuse2Open.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlFuse2Open.setDescription('The system has detected a control power fuse 2 open condition.')
lgpConditionRectifierFuseOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 50, 3))
if mibBuilder.loadTexts: lgpConditionRectifierFuseOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRectifierFuseOpen.setDescription('The system has detected a rectifier fuse open condition.')
lgpConditionInverterFuseOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 50, 4))
if mibBuilder.loadTexts: lgpConditionInverterFuseOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterFuseOpen.setDescription('The system has detected an inverter fuse open condition.')
lgpConditionOutputToLoadFuseOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 50, 5))
if mibBuilder.loadTexts: lgpConditionOutputToLoadFuseOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadFuseOpen.setDescription('The system has detected an output to load fuse open condition.')
lgpConditionDcCapacitorFuseOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 50, 6))
if mibBuilder.loadTexts: lgpConditionDcCapacitorFuseOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcCapacitorFuseOpen.setDescription('The system has detected a DC capacitor fuse open condition.')
lgpConditionDisconnect = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51))
if mibBuilder.loadTexts: lgpConditionDisconnect.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDisconnect.setDescription('The system has detected a disconnect condition.')
lgpConditionSource1DisconnectOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 1))
if mibBuilder.loadTexts: lgpConditionSource1DisconnectOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1DisconnectOpen.setDescription('The system has detected the source 1 disconnect is open.\n            A disconnect is a device which disconnects a conductor of a circuit\n            from its supply (ex. circuit breaker, contactor, isolating switch,\n            disconnecting switch, etc.).')
lgpConditionSource2DisconnectOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 2))
if mibBuilder.loadTexts: lgpConditionSource2DisconnectOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2DisconnectOpen.setDescription('The system has detected the source 2 disconnect is open.\n            A disconnect is a device which disconnects a conductor of a circuit\n            from its supply (ex. circuit breaker, contactor, isolating switch,\n            disconnecting switch, etc.).')
lgpConditionSource1PduDisconnectOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 3))
if mibBuilder.loadTexts: lgpConditionSource1PduDisconnectOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1PduDisconnectOpen.setDescription('The system has detected the source 1 PDU (Power Distribution Unit)\n            disconnect is open.\n            A disconnect is a device which disconnects a conductor of a circuit\n            from its supply (ex. circuit breaker, contactor, isolating switch,\n            disconnecting switch, etc.).')
lgpConditionSource2PduDisconnectOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 4))
if mibBuilder.loadTexts: lgpConditionSource2PduDisconnectOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2PduDisconnectOpen.setDescription('The system has detected the source 2 PDU (Power Distribution Unit)\n            disconnect is open.\n            A disconnect is a device which disconnects a conductor of a circuit\n            from its supply (ex. circuit breaker, contactor, isolating switch,\n            disconnecting switch, etc.).')
lgpConditionOutputToLoadDisconnect1Open = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 5))
if mibBuilder.loadTexts: lgpConditionOutputToLoadDisconnect1Open.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadDisconnect1Open.setDescription('The system has detected Output to load disconnect 1 is open.\n            A disconnect is a device which disconnects a conductor of a circuit\n            from its supply (ex. circuit breaker, contactor, isolating switch,\n            disconnecting switch, etc.).')
lgpConditionOutputToLoadDisconnect2Open = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 6))
if mibBuilder.loadTexts: lgpConditionOutputToLoadDisconnect2Open.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadDisconnect2Open.setDescription('The system has detected Output to load disconnect 2 is open.\n            A disconnect is a device which disconnects a conductor of a circuit\n            from its supply (ex. circuit breaker, contactor, isolating switch,\n            disconnecting switch, etc.).')
lgpConditionSource1BypassDisconnectClosed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 7))
if mibBuilder.loadTexts: lgpConditionSource1BypassDisconnectClosed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1BypassDisconnectClosed.setDescription('The system has detected the source 1 bypass disconnect is closed.\n            A disconnect is a device which disconnects a conductor of a circuit\n            from its supply (ex. circuit breaker, contactor, isolating switch,\n            disconnecting switch, etc.).')
lgpConditionSource2BypassDisconnectClosed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 8))
if mibBuilder.loadTexts: lgpConditionSource2BypassDisconnectClosed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2BypassDisconnectClosed.setDescription('The system has detected the source 2 bypass disconnect is closed.\n            A disconnect is a device which disconnects a conductor of a circuit\n            from its supply (ex. circuit breaker, contactor, isolating switch,\n            disconnecting switch, etc.).')
lgpConditionOutputToLoadNeutralDisconnectOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 9))
if mibBuilder.loadTexts: lgpConditionOutputToLoadNeutralDisconnectOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadNeutralDisconnectOpen.setDescription('The system has detected the output to load neutral disconnect is\n            open.  A disconnect is a device which disconnects a conductor of a\n            circuit from its supply (ex. circuit breaker, contactor, isolating\n            switch, disconnecting switch, etc.).')
lgpConditionBatteryDisconnectOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 10))
if mibBuilder.loadTexts: lgpConditionBatteryDisconnectOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryDisconnectOpen.setDescription('The system has detected the battery disconnect is open.\n            A disconnect is a device which disconnects a conductor of a\n            circuit from its supply (ex. circuit breaker, contactor, isolating\n            switch, disconnecting switch, etc.).')
lgpConditionBatteryDiscOpenCab01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 10, 1))
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab01.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab01.setDescription('The system has detected the cabinet 1 battery disconnect is\n                open.')
lgpConditionBatteryDiscOpenCab02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 10, 2))
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab02.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab02.setDescription('The system has detected the cabinet 2 battery disconnect is\n                open.')
lgpConditionBatteryDiscOpenCab03 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 10, 3))
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab03.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab03.setDescription('The system has detected the cabinet 3 battery disconnect is\n                open.')
lgpConditionBatteryDiscOpenCab04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 10, 4))
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab04.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab04.setDescription('The system has detected the cabinet 4 battery disconnect is\n                open.')
lgpConditionBatteryDiscOpenCab05 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 10, 5))
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab05.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab05.setDescription('The system has detected the cabinet 5 battery disconnect is\n                open.')
lgpConditionBatteryDiscOpenCab06 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 10, 6))
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab06.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab06.setDescription('The system has detected the cabinet 6 battery disconnect is\n               open.')
lgpConditionBatteryDiscOpenCab07 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 10, 7))
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab07.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab07.setDescription('The system has detected the cabinet 7 battery disconnect is\n                open.')
lgpConditionBatteryDiscOpenCab08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 10, 8))
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab08.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryDiscOpenCab08.setDescription('The system has detected the cabinet 8 battery disconnect is\n                open.')
lgpConditionInputDisconnectOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 11))
if mibBuilder.loadTexts: lgpConditionInputDisconnectOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputDisconnectOpen.setDescription('The system has detected the input disconnect is open.\n            A disconnect is a device which disconnects a conductor of a\n            circuit from its supply (ex. circuit breaker, contactor, isolating\n            switch, disconnecting switch, etc.).')
lgpConditionOutputToLoadDisconnectOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 12))
if mibBuilder.loadTexts: lgpConditionOutputToLoadDisconnectOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadDisconnectOpen.setDescription('The system has detected the Output to load disconnect is open.\n            A disconnect is a device which disconnects a conductor of a circuit\n            from its supply (ex. circuit breaker, contactor, isolating switch,\n            disconnecting switch, etc.).')
lgpConditionBypassDisconnectOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 13))
if mibBuilder.loadTexts: lgpConditionBypassDisconnectOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassDisconnectOpen.setDescription('The system has detected the bypass disconnect is open.  A\n            disconnect is a device which disconnects a conductor of a circuit\n            from its supply (ex. circuit breaker, contactor, isolating switch,\n            disconnecting switch, etc.).')
lgpConditionStaticSwitchDisconnectOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 14))
if mibBuilder.loadTexts: lgpConditionStaticSwitchDisconnectOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionStaticSwitchDisconnectOpen.setDescription('The system has detected the static switch disconnect is open.\n            A disconnect is a device which disconnects a conductor of a circuit\n            from its supply (ex. circuit breaker, contactor, isolating switch,\n            disconnecting switch, etc.).')
lgpConditionBreakerOpenFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 15))
if mibBuilder.loadTexts: lgpConditionBreakerOpenFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBreakerOpenFailure.setDescription('A breaker in the system has failed to respond to an Open signal.')
lgpConditionBreakerCloseFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 51, 16))
if mibBuilder.loadTexts: lgpConditionBreakerCloseFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBreakerCloseFailure.setDescription('A breaker in the system has failed to respond to a Close signal.')
lgpConditionFrequencyDeviation = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 52))
if mibBuilder.loadTexts: lgpConditionFrequencyDeviation.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFrequencyDeviation.setDescription('This system has detected a frequency deviation condition.\n        The frequency of a source is outside of the pre-determined thresholds\n         for a specified amount of time.')
lgpConditionSource1FrequencyDeviation = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 52, 1))
if mibBuilder.loadTexts: lgpConditionSource1FrequencyDeviation.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1FrequencyDeviation.setDescription('The frequency for source 1 has been outside of the pre-determined\n            thresholds for a specified period of time.')
lgpConditionSource2FrequencyDeviation = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 52, 2))
if mibBuilder.loadTexts: lgpConditionSource2FrequencyDeviation.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2FrequencyDeviation.setDescription('The frequency for source 2 has been outside of the pre-determined\n            thresholds for a specified period of time.')
lgpConditionInputFrequencyDeviation = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 52, 3))
if mibBuilder.loadTexts: lgpConditionInputFrequencyDeviation.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputFrequencyDeviation.setDescription('The frequency for the input has been outside of the pre-determined\n            thresholds for a specified period of time.')
lgpConditionOutputToLoadFrequencyDeviation = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 52, 4))
if mibBuilder.loadTexts: lgpConditionOutputToLoadFrequencyDeviation.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadFrequencyDeviation.setDescription('The frequency for the output has been outside of the pre-determined\n             thresholds for a specified period of time.')
lgpConditionBypassFrequencyDeviation = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 52, 5))
if mibBuilder.loadTexts: lgpConditionBypassFrequencyDeviation.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassFrequencyDeviation.setDescription('The frequency for the bypass input has been outside of the\n            pre-determined thresholds for a specified period of time.')
lgpConditionOverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53))
if mibBuilder.loadTexts: lgpConditionOverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOverCurrent.setDescription('This system has detected an over-current condition.  The current of a\n        source has risen above a pre-determined threshold for a device,\n        or system, defined amount of time.')
lgpConditionSource1OverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 1))
if mibBuilder.loadTexts: lgpConditionSource1OverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1OverCurrent.setDescription('The system has detected an over current condition on source 1.\n            The current of a source has risen above a pre-determined\n            threshold for a device, or system, defined amount of time.')
lgpConditionSource2OverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 2))
if mibBuilder.loadTexts: lgpConditionSource2OverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2OverCurrent.setDescription('The system has detected an over current condition on source 2.\n            The current of a source has risen above a pre-determined\n            threshold for a device, or system, defined amount of time.')
lgpConditionOutputToLoadOverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 3))
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverCurrent.setDescription('The system has detected the output to load is in an over-current\n             condition.  The current for the load has risen above a\n             pre-determined threshold for a device, or system, defined amount\n             of time.')
lgpConditionOutputToLoadOverCurrentPhsA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 3, 1))
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverCurrentPhsA.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverCurrentPhsA.setDescription('The system has detected the output to load on phase A is in an\n                over-current condition.  The current on this phase has risen above\n                a pre-determined threshold for a device, or system, defined amount\n                of time.')
lgpConditionOutputToLoadOverCurrentPhsB = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 3, 2))
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverCurrentPhsB.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverCurrentPhsB.setDescription('The system has detected the output to load on phase B is in an\n                over-current condition.  The current on this phase has risen above\n                a pre-determined threshold for a device, or system, defined amount\n                of time.')
lgpConditionOutputToLoadOverCurrentPhsC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 3, 3))
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverCurrentPhsC.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadOverCurrentPhsC.setDescription('The system has detected the output to load on phase C is in an\n                over-current condition.  The current on this phase has risen above\n                a pre-determined threshold for a device, or system, defined amount\n                of time.')
lgpConditionGroundOverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 4))
if mibBuilder.loadTexts: lgpConditionGroundOverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionGroundOverCurrent.setDescription('A ground source is experiencing an over-current condition.  The\n            current for the ground line has risen above a pre-determined\n            threshold for a device, or system, defined amount of time.')
lgpConditionRectifierOverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 5))
if mibBuilder.loadTexts: lgpConditionRectifierOverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRectifierOverCurrent.setDescription('The system has detected a rectifier over current condition.\n            The current for the rectifier has risen above a pre-determined\n            threshold for a device, or system, defined amount of time.')
lgpConditionInverterOverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 6))
if mibBuilder.loadTexts: lgpConditionInverterOverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterOverCurrent.setDescription('The system has detected an inverter over current condition.\n            The current for the inverter has risen above a pre-determined\n            threshold for a device, or system, defined amount of time.')
lgpConditionInverterOverCurrentPhsA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 6, 1))
if mibBuilder.loadTexts: lgpConditionInverterOverCurrentPhsA.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterOverCurrentPhsA.setDescription('The system has detected an inverter over current condition on\n                phase A.  The current for the this phase in the inverter has risen\n                above a pre-determined threshold for a device, or system, defined\n                amount of time.')
lgpConditionInverterOverCurrentPhsB = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 6, 2))
if mibBuilder.loadTexts: lgpConditionInverterOverCurrentPhsB.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterOverCurrentPhsB.setDescription('The system has detected an inverter over current condition on\n                phase B.  The current for the this phase in the inverter has risen\n                above a pre-determined threshold for a device, or system, defined\n                amount of time.')
lgpConditionInverterOverCurrentPhsC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 6, 3))
if mibBuilder.loadTexts: lgpConditionInverterOverCurrentPhsC.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterOverCurrentPhsC.setDescription('The system has detected an inverter over current condition on\n                phase C.  The current for the this phase in the inverter has risen\n                above a pre-determined threshold for a device, or system, defined\n                amount of time.')
lgpConditionBatteryConverterOverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 7))
if mibBuilder.loadTexts: lgpConditionBatteryConverterOverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryConverterOverCurrent.setDescription('The system has detected an over current condition on the battery\n            converter.  The current of the converter has risen above a\n            pre-determined threshold for a device, or system, defined amount\n            of time.')
lgpConditionBatteryBalancerOverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 8))
if mibBuilder.loadTexts: lgpConditionBatteryBalancerOverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryBalancerOverCurrent.setDescription('The system has detected a battery balancer over current condition.\n            The current at this point has risen above a pre-determined\n            threshold for a device, or system, defined amount of time.')
lgpConditionHumidifierOverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 9))
if mibBuilder.loadTexts: lgpConditionHumidifierOverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHumidifierOverCurrent.setDescription('The system has detected an over current condition on the\n            humidifier. The current of the humidifier has risen above\n            a pre-determined threshold for a defined amount of time.')
lgpConditionInputOverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 10))
if mibBuilder.loadTexts: lgpConditionInputOverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputOverCurrent.setDescription('There is an over current condition on the system input power.\n             The input current has risen above a pre-determined threshold for\n             a pre-defined amount of time.')
lgpConditionSource1NeutralOverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 11))
if mibBuilder.loadTexts: lgpConditionSource1NeutralOverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1NeutralOverCurrent.setDescription('The system has detected an over current condition on the neutral\n            line of source 1. The neutral current at source 1 has risen above\n            a pre-determined threshold for a pre-defined amount of time.')
lgpConditionSource2NeutralOverCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 53, 12))
if mibBuilder.loadTexts: lgpConditionSource2NeutralOverCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2NeutralOverCurrent.setDescription('The system has detected an over current condition on the neutral\n            line of source 2. The neutral current at source 2 has risen above\n            a pre-determined threshold for a pre-defined amount of time.')
lgpConditionSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54))
if mibBuilder.loadTexts: lgpConditionSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSensorFailure.setDescription('This system has detected a sensor failure condition.')
lgpConditionOutputToLoadVoltageSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 1))
if mibBuilder.loadTexts: lgpConditionOutputToLoadVoltageSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadVoltageSensorFailure.setDescription('The system had detected an output to load voltage sensor failure.')
lgpConditionSource1VoltageSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 2))
if mibBuilder.loadTexts: lgpConditionSource1VoltageSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1VoltageSensorFailure.setDescription('The system had detected a source 1 voltage sensor failure.')
lgpConditionSource2VoltageSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 3))
if mibBuilder.loadTexts: lgpConditionSource2VoltageSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2VoltageSensorFailure.setDescription('The system had detected a source 2 voltage sensor failure.')
lgpConditionSource1ScrSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 4))
if mibBuilder.loadTexts: lgpConditionSource1ScrSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1ScrSensorFailure.setDescription('The system had detected a source 1 SCR (Silicon Controlled\n            Rectifier) sensor failure.')
lgpConditionSource2ScrSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 5))
if mibBuilder.loadTexts: lgpConditionSource2ScrSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2ScrSensorFailure.setDescription('The system had detected a source 2 SCR (Silicon Controlled\n            Rectifier) sensor failure.')
lgpConditionSource1CurrentSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 6))
if mibBuilder.loadTexts: lgpConditionSource1CurrentSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1CurrentSensorFailure.setDescription('The system has detected a source 1 current sensor failure.')
lgpConditionSource2CurrentSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 7))
if mibBuilder.loadTexts: lgpConditionSource2CurrentSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2CurrentSensorFailure.setDescription('The system has detected a source 2 current sensor failure.')
lgpConditionRoomTempHumiditySensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 8))
if mibBuilder.loadTexts: lgpConditionRoomTempHumiditySensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRoomTempHumiditySensorFailure.setDescription('The system has detected a device temperature and humidity sensor\n            failure.')
lgpConditionGlycolTempSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 9))
if mibBuilder.loadTexts: lgpConditionGlycolTempSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionGlycolTempSensorFailure.setDescription('The system has detected a glycol temperature sensor failure.')
lgpConditionLocal1SensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 10))
if mibBuilder.loadTexts: lgpConditionLocal1SensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLocal1SensorFailure.setDescription('The system has detected a local 1 sensor failure.')
lgpConditionCompressor1SensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 11))
if mibBuilder.loadTexts: lgpConditionCompressor1SensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor1SensorFailure.setDescription('The system has detected a compressor 1 digital scroll sensor\n            failure condition.')
lgpConditionCompressor2SensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 12))
if mibBuilder.loadTexts: lgpConditionCompressor2SensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor2SensorFailure.setDescription('The system has detected a compressor 2 digital scroll sensor\n            failure condition.')
lgpConditionSupplySensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 13))
if mibBuilder.loadTexts: lgpConditionSupplySensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSupplySensorFailure.setDescription('The system has detected a supply sensor failure.')
lgpConditionCabinetTemperatureSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 14))
if mibBuilder.loadTexts: lgpConditionCabinetTemperatureSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCabinetTemperatureSensorFailure.setDescription('The system has detected a cabinet temperature sensor failure.')
lgpConditionCabinetHumiditySensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 15))
if mibBuilder.loadTexts: lgpConditionCabinetHumiditySensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCabinetHumiditySensorFailure.setDescription('The system has detected a cabinet humidity sensor failure.')
lgpConditionRoomTempSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 16))
if mibBuilder.loadTexts: lgpConditionRoomTempSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRoomTempSensorFailure.setDescription('The system has detected a room temperature sensor failure.')
lgpConditionBatteryTempSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 17))
if mibBuilder.loadTexts: lgpConditionBatteryTempSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryTempSensorFailure.setDescription('The system has detected a battery temperature sensor failure.')
lgpConditionAirSensorAFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 18))
if mibBuilder.loadTexts: lgpConditionAirSensorAFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAirSensorAFailure.setDescription('The system has detected a failure with air sensor A.  The sensor\n            may have been disconnected or the signal is out of range.')
lgpConditionAirSensorBFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 19))
if mibBuilder.loadTexts: lgpConditionAirSensorBFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAirSensorBFailure.setDescription('The system has detected a failure with air sensor B.  The sensor\n            may have been disconnected or the signal is out of range.')
lgpConditionChilledWaterSupplySensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 20))
if mibBuilder.loadTexts: lgpConditionChilledWaterSupplySensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionChilledWaterSupplySensorFailure.setDescription('The system has detected a failure with the chilled water supply\n            sensor.  The sensor may have been disconnected or the signal is out\n            of range.')
lgpConditionRefrigerantSupplySensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 21))
if mibBuilder.loadTexts: lgpConditionRefrigerantSupplySensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRefrigerantSupplySensorFailure.setDescription('The system has detected a failure with the refrigerant supply\n            sensor.  The sensor may have been disconnected or the signal is out\n            of range.')
lgpConditionFluidSupplySensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 22))
if mibBuilder.loadTexts: lgpConditionFluidSupplySensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFluidSupplySensorFailure.setDescription('The system has detected a failure with the fluid supply\n            sensor.  The sensor may have been disconnected or the signal is out\n            of range.')
lgpConditionCompressorLowPressureSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 23))
if mibBuilder.loadTexts: lgpConditionCompressorLowPressureSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressorLowPressureSensorFailure.setDescription('The system has detected that a compressor low pressure\n            transducer is disconnected or the signal is out of range.')
lgpConditionCompressor1LowPressureSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 23, 1))
if mibBuilder.loadTexts: lgpConditionCompressor1LowPressureSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor1LowPressureSensorFailure.setDescription('The system has detected that compressor 1 low pressure\n                transducer is disconnected or the signal is out of range.')
lgpConditionRemoteSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 24))
if mibBuilder.loadTexts: lgpConditionRemoteSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRemoteSensorFailure.setDescription('The system has detected that a remote sensor is disconnected\n            or the signal is out of range.')
lgpConditionAirSupplyTempSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 25))
if mibBuilder.loadTexts: lgpConditionAirSupplyTempSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAirSupplyTempSensorFailure.setDescription('The system has detected that the supply air temperature sensor is\n            disconnected or the signal is out of range.')
lgpConditionAirReturnTempSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 26))
if mibBuilder.loadTexts: lgpConditionAirReturnTempSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAirReturnTempSensorFailure.setDescription('The system has detected that the return air temperature sensor is\n            disconnected or the signal is out of range.')
lgpConditionCompressorHighPressureSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 27))
if mibBuilder.loadTexts: lgpConditionCompressorHighPressureSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressorHighPressureSensorFailure.setDescription('The system has detected that a compressor high pressure\n            transducer is disconnected or the signal is out of range.')
lgpConditionCompressor2HighPressureSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 27, 2))
if mibBuilder.loadTexts: lgpConditionCompressor2HighPressureSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor2HighPressureSensorFailure.setDescription('The system has detected that compressor 2 high pressure\n                transducer is disconnected or the signal is out of range.')
lgpConditionCompressor3HighPressureSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 27, 3))
if mibBuilder.loadTexts: lgpConditionCompressor3HighPressureSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor3HighPressureSensorFailure.setDescription('The system has detected that compressor 3 high pressure\n                transducer is disconnected or the signal is out of range.')
lgpConditionCompressor4HighPressureSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 54, 27, 4))
if mibBuilder.loadTexts: lgpConditionCompressor4HighPressureSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressor4HighPressureSensorFailure.setDescription('The system has detected that compressor 4 high pressure\n                transducer is disconnected or the signal is out of range.')
lgpConditionInternalCommunicationFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 55))
if mibBuilder.loadTexts: lgpConditionInternalCommunicationFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInternalCommunicationFailure.setDescription('This system has detected an internal communication failure condition.')
lgpConditionExternalCommunicationFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 56))
if mibBuilder.loadTexts: lgpConditionExternalCommunicationFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionExternalCommunicationFailure.setDescription('This system has detected an external communication failure condition.')
lgpConditionSourceGateDriveFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 57))
if mibBuilder.loadTexts: lgpConditionSourceGateDriveFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSourceGateDriveFailure.setDescription('This system has detected a source gate drive failure condition.')
lgpConditionSource1GateDriveFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 57, 1))
if mibBuilder.loadTexts: lgpConditionSource1GateDriveFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1GateDriveFailure.setDescription('The system has detected a source 1 gate drive failure.')
lgpConditionSource2GateDriveFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 57, 2))
if mibBuilder.loadTexts: lgpConditionSource2GateDriveFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2GateDriveFailure.setDescription('The system has detected a source 2 gate drive failure.')
lgpConditionDisconnectFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 58))
if mibBuilder.loadTexts: lgpConditionDisconnectFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDisconnectFailure.setDescription('This system has detected a disconnect failure condition.\n        A disconnect is a device which disconnects a conductor of a circuit\n        from its supply (ex. circuit breaker, contactor, isolating switch,\n        disconnecting switch, etc.).')
lgpConditionOutputToLoadNeutralDisconnectFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 58, 1))
if mibBuilder.loadTexts: lgpConditionOutputToLoadNeutralDisconnectFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadNeutralDisconnectFailure.setDescription('The system has detected the output to load neutral disconnect has\n        failed.\n        A disconnect is a device which disconnects a conductor of a circuit\n        from its supply (ex. circuit breaker, contactor, isolating switch,\n        disconnecting switch, etc.).')
lgpConditionSource1DisconnectShuntTripFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 58, 2))
if mibBuilder.loadTexts: lgpConditionSource1DisconnectShuntTripFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1DisconnectShuntTripFailure.setDescription('The system has detected a shunt trip failure of a disconnecting device\n        on source 1.\n        A disconnect is a device which disconnects a conductor of a circuit\n        from its supply (ex. circuit breaker, contactor, isolating switch,\n        disconnecting switch, etc.).')
lgpConditionSource2DisconnectShuntTripFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 58, 3))
if mibBuilder.loadTexts: lgpConditionSource2DisconnectShuntTripFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2DisconnectShuntTripFailure.setDescription('The system has detected a shunt trip failure of a disconnecting device\n        on source 2.\n        A disconnect is a device which disconnects a conductor of a circuit\n        from its supply (ex. circuit breaker, contactor, isolating switch,\n        disconnecting switch, etc.).')
lgpConditionInverterDisconnectFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 58, 4))
if mibBuilder.loadTexts: lgpConditionInverterDisconnectFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterDisconnectFailure.setDescription('The system has detected an inverter disconnect failure.  A disconnect\n        is a device which disconnects a conductor of a circuit from its\n        supply (ex. circuit breaker, contactor, isolating switch,\n        disconnecting switch, etc.).')
lgpConditionBatteryDisconnectFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 58, 5))
if mibBuilder.loadTexts: lgpConditionBatteryDisconnectFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryDisconnectFailure.setDescription('The system has detected a battery disconnect failure.  A disconnect\n        is a device which disconnects a conductor of a circuit from its\n        supply (ex. circuit breaker, contactor, isolating switch,\n        disconnecting switch, etc.).')
lgpConditionRectifierDisconnectFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 58, 6))
if mibBuilder.loadTexts: lgpConditionRectifierDisconnectFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRectifierDisconnectFailure.setDescription('The system has detected a rectifier disconnect failure.  A disconnect\n        is a device which disconnects a conductor of a circuit from its\n        supply (ex. circuit breaker, contactor, isolating switch,\n        disconnecting switch, etc.).')
lgpConditionOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59))
if mibBuilder.loadTexts: lgpConditionOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOverTemperature.setDescription('This system has detected an over temperature condition.')
lgpConditionHeatSink1OverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 1))
if mibBuilder.loadTexts: lgpConditionHeatSink1OverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHeatSink1OverTemperature.setDescription('The system has detected a heat sink 1 over temperature condition.')
lgpConditionAmbient1OverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 2))
if mibBuilder.loadTexts: lgpConditionAmbient1OverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAmbient1OverTemperature.setDescription('The system has detected an ambient over temperature condition at\n        location 1.')
lgpConditionSystemOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 3))
if mibBuilder.loadTexts: lgpConditionSystemOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSystemOverTemperature.setDescription('The system or a component of the system has detected an over\n            temperature condition.  The temperature measurement has risen\n            above a pre-determined threshold for a device, or system, defined\n            amount of time.')
lgpConditionTransformerOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 4))
if mibBuilder.loadTexts: lgpConditionTransformerOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTransformerOverTemperature.setDescription("The transformer is experiencing an over temperature condition.\n            The transformer's temperature has exceeded a pre-determined\n            threshold for a device, or system, defined amount of time.")
lgpConditionBatteryOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 5))
if mibBuilder.loadTexts: lgpConditionBatteryOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryOverTemperature.setDescription("The battery is experiencing an over temperature condition.\n            The battery's temperature has exceeded a pre-determined threshold\n            for a device, or system, defined amount of time.")
lgpConditionRectifierOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 6))
if mibBuilder.loadTexts: lgpConditionRectifierOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRectifierOverTemperature.setDescription("The system has detected a rectifier over temperature condition.\n            The rectifier's temperature has exceeded a pre-determined threshold\n            for a device, or system, defined amount of time.")
lgpConditionInverterOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 7))
if mibBuilder.loadTexts: lgpConditionInverterOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterOverTemperature.setDescription("The system has detected an inverter over temperature condition.\n            The inverter's temperature has exceeded a pre-determined\n            threshold for a device, or system, defined amount of time.")
lgpConditionRectifierInductorOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 8))
if mibBuilder.loadTexts: lgpConditionRectifierInductorOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRectifierInductorOverTemperature.setDescription("The system has detected a rectifier inductor over temperature\n            condition.  The rectifier's inductor temperature has exceeded a\n            pre-determined threshold for a device, or system, defined amount\n            of time.")
lgpConditionInverterInductorOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 9))
if mibBuilder.loadTexts: lgpConditionInverterInductorOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterInductorOverTemperature.setDescription("The system has detected an inverter inductor over temperature\n            condition.  The inverter's inductor temperature has exceeded a\n            pre-determined threshold for a device, or system, defined amount\n            of time.")
lgpConditionBatteryConverterOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 10))
if mibBuilder.loadTexts: lgpConditionBatteryConverterOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryConverterOverTemperature.setDescription("The system has detected a battery converter over temperature\n            condition.  The battery converter's temperature has exceeded a\n            pre-determined threshold for a device, or system, defined amount\n            of time.")
lgpConditionBatteryBalancerInductorOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 11))
if mibBuilder.loadTexts: lgpConditionBatteryBalancerInductorOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryBalancerInductorOverTemperature.setDescription("The system has detected a battery balancer Inductor over\n            temperature condition.  The battery balancer Inductor's temperature\n            has exceeded a pre-determined threshold for a specified amount of\n            time.")
lgpConditionChilledWaterOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 12))
if mibBuilder.loadTexts: lgpConditionChilledWaterOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionChilledWaterOverTemperature.setDescription('The system has detected a chilled water over temperature\n            condition.')
lgpConditionElectricHeatersOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 13))
if mibBuilder.loadTexts: lgpConditionElectricHeatersOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionElectricHeatersOverTemperature.setDescription('The system has detected an electric heater over temperature\n            condition.')
lgpConditionInletAirOverTemperature = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 14))
if mibBuilder.loadTexts: lgpConditionInletAirOverTemperature.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInletAirOverTemperature.setDescription('The system has detected an inlet air over temperature condition.')
lgpConditionSystemOverTempWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 15))
if mibBuilder.loadTexts: lgpConditionSystemOverTempWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSystemOverTempWarning.setDescription('The system or a component of the system has detected an over\n            temperature condition.  The temperature measurement has risen\n            above a normal operating range for a device, or system, defined\n            amount of time. The system is still operational but a threshold has\n            been exceeded.')
lgpConditionHighTemperatureBattString = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 59, 16))
if mibBuilder.loadTexts: lgpConditionHighTemperatureBattString.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureBattString.setDescription('The system has detected a high temperature on a battery string.\n         The temperature has exceeded a specified temperature threshold.')
lgpConditionLoadOnAlternateSource = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 60))
if mibBuilder.loadTexts: lgpConditionLoadOnAlternateSource.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLoadOnAlternateSource.setDescription('The system has detected that the load is being supplied by the\n        alternate source.')
lgpConditionPhaseRotationError = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 61))
if mibBuilder.loadTexts: lgpConditionPhaseRotationError.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPhaseRotationError.setDescription('This system has detected a phase rotation error condition.')
lgpConditionSource1PhaseRotationError = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 61, 1))
if mibBuilder.loadTexts: lgpConditionSource1PhaseRotationError.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource1PhaseRotationError.setDescription('The system has detected a phase rotation error on source 1.')
lgpConditionSource2PhaseRotationError = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 61, 2))
if mibBuilder.loadTexts: lgpConditionSource2PhaseRotationError.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSource2PhaseRotationError.setDescription('The system has detected a phase rotation error on source 2.')
lgpConditionBypassPhaseRotationError = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 61, 3))
if mibBuilder.loadTexts: lgpConditionBypassPhaseRotationError.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassPhaseRotationError.setDescription('The system has detected a phase rotation error on the bypass.')
lgpConditionInputPhaseRotationError = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 61, 4))
if mibBuilder.loadTexts: lgpConditionInputPhaseRotationError.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputPhaseRotationError.setDescription('The system has detected a phase rotation error on the input.')
lgpConditionControlModuleFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 62))
if mibBuilder.loadTexts: lgpConditionControlModuleFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlModuleFailure.setDescription('This system has detected a control module failure condition.')
lgpConditionControlModule1Failure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 62, 1))
if mibBuilder.loadTexts: lgpConditionControlModule1Failure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlModule1Failure.setDescription('The system has detected a control module 1 failure.')
lgpConditionHistoryLogFull = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 63))
if mibBuilder.loadTexts: lgpConditionHistoryLogFull.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHistoryLogFull.setDescription('The system has detected the history log is full.')
lgpConditionConfigurationModified = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 64))
if mibBuilder.loadTexts: lgpConditionConfigurationModified.setStatus('current')
if mibBuilder.loadTexts: lgpConditionConfigurationModified.setDescription('The system has detected the configuration has been modified.')
lgpConditionPasswordModified = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 65))
if mibBuilder.loadTexts: lgpConditionPasswordModified.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPasswordModified.setDescription('The system has detected the password has been modified.')
lgpConditionTimeModified = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 66))
if mibBuilder.loadTexts: lgpConditionTimeModified.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTimeModified.setDescription('The system has detected the time has been modified.')
lgpConditionDateModified = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 67))
if mibBuilder.loadTexts: lgpConditionDateModified.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDateModified.setDescription('The system has detected the date has been modified.')
lgpConditionEventLogCleared = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 68))
if mibBuilder.loadTexts: lgpConditionEventLogCleared.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEventLogCleared.setDescription('The system has detected the event log has been cleared.')
lgpConditionHistoryLogCleared = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 69))
if mibBuilder.loadTexts: lgpConditionHistoryLogCleared.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHistoryLogCleared.setDescription('The system has detected the history log has been cleared.')
lgpConditionUtilityFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 70))
if mibBuilder.loadTexts: lgpConditionUtilityFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUtilityFailure.setDescription('The system has detected a utility failure.')
lgpConditionBatteryTestInProgress = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 71))
if mibBuilder.loadTexts: lgpConditionBatteryTestInProgress.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryTestInProgress.setDescription('The system is performing a battery test at this time.')
lgpConditionLoadOnBattery = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 72))
if mibBuilder.loadTexts: lgpConditionLoadOnBattery.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLoadOnBattery.setDescription('The system load is being supported by the battery.')
lgpConditionReplaceBattery = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 74))
if mibBuilder.loadTexts: lgpConditionReplaceBattery.setStatus('current')
if mibBuilder.loadTexts: lgpConditionReplaceBattery.setDescription('The system has detected the batteries are due to be replaced.')
lgpConditionUpsShutdownPending = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 75))
if mibBuilder.loadTexts: lgpConditionUpsShutdownPending.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUpsShutdownPending.setDescription('The system is in a shutdown pending condition.')
lgpConditionBatteryChargerFailed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 76))
if mibBuilder.loadTexts: lgpConditionBatteryChargerFailed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryChargerFailed.setDescription('The system has detected the battery charger has failed.')
lgpConditionBypassVoltageUnqualified = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 77))
if mibBuilder.loadTexts: lgpConditionBypassVoltageUnqualified.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassVoltageUnqualified.setDescription('The system has detected the bypass voltage is unqualified.\n        The voltage measurement is outside a pre-determined threshold range for\n        a specified amount of time.')
lgpConditionCheckAirFilter = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 78))
if mibBuilder.loadTexts: lgpConditionCheckAirFilter.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCheckAirFilter.setDescription('The system has detected it is time to check the air filter.')
lgpConditionBrownOut = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 79))
if mibBuilder.loadTexts: lgpConditionBrownOut.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBrownOut.setDescription('The system has detected a brown out condition.')
lgpConditionMultipleTransferLockout = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 80))
if mibBuilder.loadTexts: lgpConditionMultipleTransferLockout.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMultipleTransferLockout.setDescription('The system has locked out transfers to bypass.  Too many transfers\n        have occurred over a specified amount of time.')
lgpConditionBypassPhaseLost = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 81))
if mibBuilder.loadTexts: lgpConditionBypassPhaseLost.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassPhaseLost.setDescription('The system has detected one or more bypass phases are missing.')
lgpConditionMaintenceBypassInhibited = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 82))
if mibBuilder.loadTexts: lgpConditionMaintenceBypassInhibited.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMaintenceBypassInhibited.setDescription('The system is preventing a transfer of the load to maintenance bypass.')
lgpConditionLoadLockedOnBypass = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 83))
if mibBuilder.loadTexts: lgpConditionLoadLockedOnBypass.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLoadLockedOnBypass.setDescription("An error has been detected requiring the system to be put into a\n        'locked on bypass' state.")
lgpConditionOutputToLoadShort = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 84))
if mibBuilder.loadTexts: lgpConditionOutputToLoadShort.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadShort.setDescription('The system has detected an output to load short circuit condition.')
lgpConditionEmergencyTransferToInverter = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 85))
if mibBuilder.loadTexts: lgpConditionEmergencyTransferToInverter.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEmergencyTransferToInverter.setDescription('The system has detected an emergency transfer of the load to\n        inverter.')
lgpConditonEmergencyPowerOff = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 86))
if mibBuilder.loadTexts: lgpConditonEmergencyPowerOff.setStatus('current')
if mibBuilder.loadTexts: lgpConditonEmergencyPowerOff.setDescription('The system has detected an Emergency Power Off (EPO) condition.\n        An external EPO switch has cut off the power source to the system.')
lgpConditionInverterBackFeed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 87))
if mibBuilder.loadTexts: lgpConditionInverterBackFeed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterBackFeed.setDescription('The system has detected an inverter back-feed condition.  The inverter\n        is feeding power through the bypass back to the input.')
lgpConditionDcGroundFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 88))
if mibBuilder.loadTexts: lgpConditionDcGroundFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcGroundFault.setDescription('The system has detected a DC ground fault.')
lgpConditionDcGroundFaultPos = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 88, 1))
if mibBuilder.loadTexts: lgpConditionDcGroundFaultPos.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcGroundFaultPos.setDescription('Ground fault current has been detected in the positive DC link to\n            ground.')
lgpConditionDcGroundFaultNeg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 88, 2))
if mibBuilder.loadTexts: lgpConditionDcGroundFaultNeg.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDcGroundFaultNeg.setDescription('Ground fault current has been detected in the negative DC link to\n            ground.')
lgpConditionStaticTransferSwitchInhibited = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 89))
if mibBuilder.loadTexts: lgpConditionStaticTransferSwitchInhibited.setStatus('current')
if mibBuilder.loadTexts: lgpConditionStaticTransferSwitchInhibited.setDescription('The system is preventing the use of the static transfer switch.')
lgpConditionBatteryLogFullWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 90))
if mibBuilder.loadTexts: lgpConditionBatteryLogFullWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryLogFullWarning.setDescription('The system has detected the battery log is approaching the maximum\n        record limit.')
lgpConditionInputCurrentUnbalanced = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 91))
if mibBuilder.loadTexts: lgpConditionInputCurrentUnbalanced.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputCurrentUnbalanced.setDescription('The system has detected an unbalanced input current condition.\n        The currents of input phases are out of tolerance.')
lgpConditionSelfTestFailed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 92))
if mibBuilder.loadTexts: lgpConditionSelfTestFailed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSelfTestFailed.setDescription('The system has detected a self-test failure.')
lgpConditionInverterOutOfSynchronization = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 93))
if mibBuilder.loadTexts: lgpConditionInverterOutOfSynchronization.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterOutOfSynchronization.setDescription('The system has detected an Inverter out of sync condition.')
lgpConditionModuleAlarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 94))
if mibBuilder.loadTexts: lgpConditionModuleAlarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditionModuleAlarm.setDescription('This system has detected an alarm within the multi-module system.')
lgpConditioniModuleUnit1Alarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 94, 1))
if mibBuilder.loadTexts: lgpConditioniModuleUnit1Alarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditioniModuleUnit1Alarm.setDescription('The multi-module system has detected an alarm condition on\n            unit 1.')
lgpConditioniModuleUnit2Alarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 94, 2))
if mibBuilder.loadTexts: lgpConditioniModuleUnit2Alarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditioniModuleUnit2Alarm.setDescription('The multi-module system has detected an alarm condition on\n            unit 2.')
lgpConditioniModuleUnit3Alarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 94, 3))
if mibBuilder.loadTexts: lgpConditioniModuleUnit3Alarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditioniModuleUnit3Alarm.setDescription('The multi-module system has detected an alarm condition on\n            unit 3.')
lgpConditioniModuleUnit4Alarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 94, 4))
if mibBuilder.loadTexts: lgpConditioniModuleUnit4Alarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditioniModuleUnit4Alarm.setDescription('The multi-module system has detected an alarm condition on\n            unit 4.')
lgpConditioniModuleUnit5Alarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 94, 5))
if mibBuilder.loadTexts: lgpConditioniModuleUnit5Alarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditioniModuleUnit5Alarm.setDescription('The multi-module system has detected an alarm condition on\n            unit 5.')
lgpConditioniModuleUnit6Alarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 94, 6))
if mibBuilder.loadTexts: lgpConditioniModuleUnit6Alarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditioniModuleUnit6Alarm.setDescription('The multi-module system has detected an alarm condition on\n            unit 6.')
lgpConditioniModuleUnit7Alarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 94, 7))
if mibBuilder.loadTexts: lgpConditioniModuleUnit7Alarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditioniModuleUnit7Alarm.setDescription('The multi-module system has detected an alarm condition on\n            unit 7.')
lgpConditioniModuleUnit8Alarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 94, 8))
if mibBuilder.loadTexts: lgpConditioniModuleUnit8Alarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditioniModuleUnit8Alarm.setDescription('The multi-module system has detected an alarm condition on\n            unit 8.')
lgpConditionActiveModuleAlarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 95))
if mibBuilder.loadTexts: lgpConditionActiveModuleAlarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditionActiveModuleAlarm.setDescription('The system has detected an active alarm in one, or more, of the\n        sub-modules of the multi-module system.')
lgpConditionControlFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 96))
if mibBuilder.loadTexts: lgpConditionControlFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlFailure.setDescription('This system has detected a control failure condition.')
lgpConditionMainControlFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 96, 1))
if mibBuilder.loadTexts: lgpConditionMainControlFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMainControlFailure.setDescription('The system has detected a main control failure condition.')
lgpConditionRedundantControlFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 96, 2))
if mibBuilder.loadTexts: lgpConditionRedundantControlFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRedundantControlFailure.setDescription('The system has detected a redundant control failure condition.')
lgpConditionParallelSysControlFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 96, 3))
if mibBuilder.loadTexts: lgpConditionParallelSysControlFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionParallelSysControlFailure.setDescription('The parallel system has detected a control failure condition with\n            one of the controls.')
lgpConditionMainControlCommFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 96, 4))
if mibBuilder.loadTexts: lgpConditionMainControlCommFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMainControlCommFailure.setDescription('One or more communications failures have occurred in the main\n            control.')
lgpConditionControlBoardFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 96, 5))
if mibBuilder.loadTexts: lgpConditionControlBoardFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlBoardFailure.setDescription('The system has detected a control board failure.')
lgpConditionHumidifierControlBdFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 96, 5, 1))
if mibBuilder.loadTexts: lgpConditionHumidifierControlBdFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHumidifierControlBdFailure.setDescription('Humidifier control board is required to be connected,\n                but no signal is detected.')
lgpConditionControlWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 97))
if mibBuilder.loadTexts: lgpConditionControlWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlWarning.setDescription('This system has detected a control warning conditions.')
lgpConditionMainControlWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 97, 1))
if mibBuilder.loadTexts: lgpConditionMainControlWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMainControlWarning.setDescription('The system has detected a main control warning condition.')
lgpConditionRedundantControlWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 97, 2))
if mibBuilder.loadTexts: lgpConditionRedundantControlWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRedundantControlWarning.setDescription('The system has detected a redundant control warning condition.')
lgpConditionUserInterfaceFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 98))
if mibBuilder.loadTexts: lgpConditionUserInterfaceFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUserInterfaceFailure.setDescription('The system has detected a user interface control failure condition.')
lgpConditionLostPowerRedundancy = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 99))
if mibBuilder.loadTexts: lgpConditionLostPowerRedundancy.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLostPowerRedundancy.setDescription('The system has detected the number of redundant power modules has\n        fallen below the minimum redundant power module setting.')
lgpConditionPowerModuleFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 100))
if mibBuilder.loadTexts: lgpConditionPowerModuleFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPowerModuleFailure.setDescription('The system has detected a power module failure condition in the\n        system.')
lgpConditionBatteryModuleFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 101))
if mibBuilder.loadTexts: lgpConditionBatteryModuleFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryModuleFailure.setDescription('The system has detected a battery module failure condition in the\n        system.')
lgpConditionOutputToLoadOff = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 102))
if mibBuilder.loadTexts: lgpConditionOutputToLoadOff.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadOff.setDescription('The system has detected that there is no power being supplied to the\n        load.')
lgpConditionSystemOff = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 103))
if mibBuilder.loadTexts: lgpConditionSystemOff.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSystemOff.setDescription('The system is off.')
lgpConditionRectifierStartupFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 104))
if mibBuilder.loadTexts: lgpConditionRectifierStartupFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRectifierStartupFailure.setDescription('The system has detected a rectifier under voltage start-up failure\n        condition.')
lgpConditionRectifierFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 105))
if mibBuilder.loadTexts: lgpConditionRectifierFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRectifierFault.setDescription('The system has detected a rectifier fault condition.')
lgpConditionInverterShutdownLowDc = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 106))
if mibBuilder.loadTexts: lgpConditionInverterShutdownLowDc.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterShutdownLowDc.setDescription('The system has shutdown the inverter due to a DC bus under voltage.')
lgpConditionInverterFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 107))
if mibBuilder.loadTexts: lgpConditionInverterFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterFault.setDescription('The system has detected an inverter fault condition.')
lgpConditionInverterDcOffsetOverrun = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 108))
if mibBuilder.loadTexts: lgpConditionInverterDcOffsetOverrun.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterDcOffsetOverrun.setDescription('The system has detected an over run of the inverter DC offset\n        voltage.')
lgpConditionParallelSysLowBatteryWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 109))
if mibBuilder.loadTexts: lgpConditionParallelSysLowBatteryWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionParallelSysLowBatteryWarning.setDescription('The parallel system has detected a low battery warning condition.')
lgpConditionParallelSysLoadShareFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 110))
if mibBuilder.loadTexts: lgpConditionParallelSysLoadShareFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionParallelSysLoadShareFault.setDescription('The parallel system has detected a load share fault condition.')
lgpConditionBatteryFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 111))
if mibBuilder.loadTexts: lgpConditionBatteryFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryFault.setDescription('The system has detected a battery fault condition.  The battery\n        conductors are either reversed or disconnected.')
lgpConditionBatteryConverterFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 112))
if mibBuilder.loadTexts: lgpConditionBatteryConverterFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryConverterFailure.setDescription('The system has detected a battery converter failure condition.')
lgpConditionBatteryBalancerFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 113))
if mibBuilder.loadTexts: lgpConditionBatteryBalancerFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryBalancerFault.setDescription('The system has detected a battery balancer fault condition.')
lgpConditionpsUpsOperationFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 114))
if mibBuilder.loadTexts: lgpConditionpsUpsOperationFault.setStatus('deprecated')
if mibBuilder.loadTexts: lgpConditionpsUpsOperationFault.setDescription('The system has detected an operation fault.  The UPS attempted to\n        transfer to maintenance bypass without following the proper sequence.')
lgpConditionOutputToLoadOnJointMode = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 115))
if mibBuilder.loadTexts: lgpConditionOutputToLoadOnJointMode.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadOnJointMode.setDescription('The system load is being supported by both the battery and rectifier.')
lgpConditionInputNeutralLost = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 116))
if mibBuilder.loadTexts: lgpConditionInputNeutralLost.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputNeutralLost.setDescription('The system had detected the main input neutral is disconnected.')
lgpConditionLowBatteryWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 117))
if mibBuilder.loadTexts: lgpConditionLowBatteryWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowBatteryWarning.setDescription("The battery's remaining charge is less than or equal to the\n        configured low threshold.")
lgpConditionInternalFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 118))
if mibBuilder.loadTexts: lgpConditionInternalFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInternalFault.setDescription('The system has detected an internal fault.')
lgpConditionBatteryTestFailed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 119))
if mibBuilder.loadTexts: lgpConditionBatteryTestFailed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryTestFailed.setDescription('The system has detected a battery self-test failure.')
lgpConditionPowerModuleWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 120))
if mibBuilder.loadTexts: lgpConditionPowerModuleWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPowerModuleWarning.setDescription('The system has detected an alarm condition on one, or more,\n        power modules.')
lgpConditionBatteryModuleWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 121))
if mibBuilder.loadTexts: lgpConditionBatteryModuleWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryModuleWarning.setDescription('The system has detected an alarm condition on one, or more,\n        battery modules.')
lgpConditionControlModuleWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 122))
if mibBuilder.loadTexts: lgpConditionControlModuleWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlModuleWarning.setDescription('The system has detected a control module warning.')
lgpConditionUpsOperationFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 123))
if mibBuilder.loadTexts: lgpConditionUpsOperationFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUpsOperationFault.setDescription('The system has detected an operation fault.  The UPS attempted to\n        transfer to maintenance bypass without following the proper sequence.')
lgpConditionActiveAlarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 124))
if mibBuilder.loadTexts: lgpConditionActiveAlarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditionActiveAlarm.setDescription('The system has detected an alarm condition.')
lgpConditionRectifierCommunicationFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 125))
if mibBuilder.loadTexts: lgpConditionRectifierCommunicationFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRectifierCommunicationFailure.setDescription('The system has detected an internal communication failure\n        condition with the rectifier.')
lgpConditionInverterCommunicationFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 126))
if mibBuilder.loadTexts: lgpConditionInverterCommunicationFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterCommunicationFailure.setDescription('The system has detected an internal communication failure\n        condition with the inverter.')
lgpConditionParallelSysConnectionFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 127))
if mibBuilder.loadTexts: lgpConditionParallelSysConnectionFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionParallelSysConnectionFault.setDescription('The parallel system has detected a connection fault.\n        One or more of the devices are not properly connected.')
lgpConditionParallelSysCommunicationFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 128))
if mibBuilder.loadTexts: lgpConditionParallelSysCommunicationFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionParallelSysCommunicationFailure.setDescription('The parallel system has detected a communication failure.')
lgpConditionLostBatteryRedundancy = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 129))
if mibBuilder.loadTexts: lgpConditionLostBatteryRedundancy.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLostBatteryRedundancy.setDescription('The system has detected the number of redundant battery modules has\n        fallen below the configured redundant battery module threshold.')
lgpConditionCompPumpDownFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 130))
if mibBuilder.loadTexts: lgpConditionCompPumpDownFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompPumpDownFailure.setDescription('The system has detected that a compressor has failed to pump down.')
lgpConditionComp1PumpDownFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 130, 1))
if mibBuilder.loadTexts: lgpConditionComp1PumpDownFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionComp1PumpDownFailure.setDescription('The system has detected that compressor 1 has failed to pump\n            down.')
lgpConditionComp2PumpDownFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 130, 2))
if mibBuilder.loadTexts: lgpConditionComp2PumpDownFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionComp2PumpDownFailure.setDescription('The system has detected that compressor 2 has failed to pump\n            down.')
lgpConditionComp3PumpDownFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 130, 3))
if mibBuilder.loadTexts: lgpConditionComp3PumpDownFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionComp3PumpDownFailure.setDescription('The system has detected that compressor 3 has failed to pump\n            down.')
lgpConditionComp4PumpDownFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 130, 4))
if mibBuilder.loadTexts: lgpConditionComp4PumpDownFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionComp4PumpDownFailure.setDescription('The system has detected that compressor 4 has failed to pump\n            down.')
lgpConditionChilledWaterLowWaterFlow = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 131))
if mibBuilder.loadTexts: lgpConditionChilledWaterLowWaterFlow.setStatus('current')
if mibBuilder.loadTexts: lgpConditionChilledWaterLowWaterFlow.setDescription('The system has detected a chilled water low water flow condition.')
lgpConditionChilledWaterLowWaterFlowCircuit2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 131, 2))
if mibBuilder.loadTexts: lgpConditionChilledWaterLowWaterFlowCircuit2.setStatus('current')
if mibBuilder.loadTexts: lgpConditionChilledWaterLowWaterFlowCircuit2.setDescription('The system has detected a chilled water low water flow condition for circuit 2.')
lgpConditionAirFilterClogged = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 132))
if mibBuilder.loadTexts: lgpConditionAirFilterClogged.setStatus('deprecated')
if mibBuilder.loadTexts: lgpConditionAirFilterClogged.setDescription('The system has detected a air filter clogged condition.')
lgpConditionHumidifierFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 133))
if mibBuilder.loadTexts: lgpConditionHumidifierFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHumidifierFailure.setDescription('The system has detected a humidifier failure condition.')
lgpConditionRunHoursExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134))
if mibBuilder.loadTexts: lgpConditionRunHoursExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRunHoursExceeded.setDescription('The system has detected a pre-determined run hours threshold has been\n        exceeded.')
lgpConditionUnitRunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 1))
if mibBuilder.loadTexts: lgpConditionUnitRunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitRunHrsExceeded.setDescription('The system has detected the system run hours has exceeded the\n            pre-determined threshold.')
lgpConditionComp1RunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 2))
if mibBuilder.loadTexts: lgpConditionComp1RunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionComp1RunHrsExceeded.setDescription('The system has detected the compressor 1 run hours has exceeded\n            the pre-determined threshold.')
lgpConditionComp2RunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 3))
if mibBuilder.loadTexts: lgpConditionComp2RunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionComp2RunHrsExceeded.setDescription('The system has detected the compressor 2 run hours has exceeded\n            the pre-determined threshold.')
lgpConditionFreeCoolRunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 4))
if mibBuilder.loadTexts: lgpConditionFreeCoolRunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFreeCoolRunHrsExceeded.setDescription('The system has detected the free cooling run hours has exceeded\n            the pre-determined threshold.')
lgpConditionElectricalHeater1RunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 5))
if mibBuilder.loadTexts: lgpConditionElectricalHeater1RunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionElectricalHeater1RunHrsExceeded.setDescription("The system has detected the electrical heater's run hours have\n            exceeded the pre-determined threshold.")
lgpConditionElectricalHeater2RunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 6))
if mibBuilder.loadTexts: lgpConditionElectricalHeater2RunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionElectricalHeater2RunHrsExceeded.setDescription("The system has detected the electrical heater's run hours have\n            exceeded the pre-determined limit.")
lgpConditionElectricalHeater3RunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 7))
if mibBuilder.loadTexts: lgpConditionElectricalHeater3RunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionElectricalHeater3RunHrsExceeded.setDescription("The system has detected the electrical heater's run hours have\n            exceeded the pre-determined limit.")
lgpConditionHotWaterRunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 8))
if mibBuilder.loadTexts: lgpConditionHotWaterRunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHotWaterRunHrsExceeded.setDescription('The system has detected the hot water run hours have exceeded\n            the pre-determined threshold.')
lgpConditionHotGasRunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 9))
if mibBuilder.loadTexts: lgpConditionHotGasRunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHotGasRunHrsExceeded.setDescription('The system has detected the hot gas run hours have exceeded the\n            pre-determined threshold.')
lgpConditionHumidifierRunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 10))
if mibBuilder.loadTexts: lgpConditionHumidifierRunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHumidifierRunHrsExceeded.setDescription('The system has detected the humidifier run hours have exceeded\n            the pre-determined threshold.')
lgpConditionDehumidiferRunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 11))
if mibBuilder.loadTexts: lgpConditionDehumidiferRunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDehumidiferRunHrsExceeded.setDescription('The system has detected the dehumidifier run hours have exceeded\n            the pre-determined threshold.')
lgpConditionFanRunHrsExceeded = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 134, 12))
if mibBuilder.loadTexts: lgpConditionFanRunHrsExceeded.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFanRunHrsExceeded.setDescription('The system has detected the unit blower fan run hours have\n            exceeded the pre-determined threshold.')
lgpConditionCommWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135))
if mibBuilder.loadTexts: lgpConditionCommWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarning.setDescription('The system has detected a loss of communications with another\n        module.')
lgpConditionCommWarningUnit1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 1))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit1.setDescription('The system has detected a loss of communications with unit 1.')
lgpConditionCommWarningUnit2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 2))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit2.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit2.setDescription('The system has detected a loss of communications with unit 2.')
lgpConditionCommWarningUnit3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 3))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit3.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit3.setDescription('The system has detected a loss of communications with unit 3.')
lgpConditionCommWarningUnit4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 4))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit4.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit4.setDescription('The system has detected a loss of communications with unit 4.')
lgpConditionCommWarningUnit5 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 5))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit5.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit5.setDescription('The system has detected a loss of communications with unit 5.')
lgpConditionCommWarningUnit6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 6))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit6.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit6.setDescription('The system has detected a loss of communications with unit 6.')
lgpConditionCommWarningUnit7 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 7))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit7.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit7.setDescription('The system has detected a loss of communications with unit 7.')
lgpConditionCommWarningUnit8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 8))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit8.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit8.setDescription('The system has detected a loss of communications with unit 8.')
lgpConditionCommWarningUnit9 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 9))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit9.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit9.setDescription('The system has detected a loss of communications with unit 9.')
lgpConditionCommWarningUnit10 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 10))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit10.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit10.setDescription('The system has detected a loss of communications with unit 10.')
lgpConditionCommWarningUnit11 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 11))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit11.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit11.setDescription('The system has detected a loss of communications with unit 11.')
lgpConditionCommWarningUnit12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 12))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit12.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit12.setDescription('The system has detected a loss of communications with unit 12.')
lgpConditionCommWarningUnit13 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 13))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit13.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit13.setDescription('The system has detected a loss of communications with unit 13.')
lgpConditionCommWarningUnit14 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 14))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit14.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit14.setDescription('The system has detected a loss of communications with unit 14.')
lgpConditionCommWarningUnit15 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 15))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit15.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit15.setDescription('The system has detected a loss of communications with unit 15.')
lgpConditionCommWarningUnit16 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 135, 16))
if mibBuilder.loadTexts: lgpConditionCommWarningUnit16.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCommWarningUnit16.setDescription('The system has detected a loss of communications with unit 16.')
lgpConditionUnitOn = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 136))
if mibBuilder.loadTexts: lgpConditionUnitOn.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitOn.setDescription('The unit is on.')
lgpConditionUnitOff = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 137))
if mibBuilder.loadTexts: lgpConditionUnitOff.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitOff.setDescription('The unit is off.')
lgpConditionSleepModeOff = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 138))
if mibBuilder.loadTexts: lgpConditionSleepModeOff.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSleepModeOff.setDescription('The system sleep mode operation has been turned off.')
lgpConditionPowerOn = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 139))
if mibBuilder.loadTexts: lgpConditionPowerOn.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPowerOn.setDescription('The system power is on.')
lgpConditionSystemOnStanby = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 140))
if mibBuilder.loadTexts: lgpConditionSystemOnStanby.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSystemOnStanby.setDescription('The system is on standby.')
lgpConditionPowerOff = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 141))
if mibBuilder.loadTexts: lgpConditionPowerOff.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPowerOff.setDescription('The system power is off.')
lgpConditionHighTemperatureGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142))
if mibBuilder.loadTexts: lgpConditionHighTemperatureGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureGroup.setDescription('The system has detected a high temperature condition.  This group\n        contains various high temperature conditions.')
lgpConditionHighTemperatureSensor1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142, 1))
if mibBuilder.loadTexts: lgpConditionHighTemperatureSensor1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureSensor1.setDescription('The temperature has exceeded the high temperature threshold\n            for sensor 1.')
lgpConditionHighTemperatureDigitalScroll1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142, 2))
if mibBuilder.loadTexts: lgpConditionHighTemperatureDigitalScroll1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureDigitalScroll1.setDescription('The system has detected a high temperature event on Digital\n            Scroll Compressor 1.  The temperature has exceeded a specified\n            temperature threshold.')
lgpConditionHighTemperatureDigitalScroll2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142, 3))
if mibBuilder.loadTexts: lgpConditionHighTemperatureDigitalScroll2.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureDigitalScroll2.setDescription('The system has detected a high temperature event on Digital\n            Scroll Compressor 2.  The temperature has exceeded a specified\n            temperature threshold.')
lgpConditionHighTemperatureUser1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142, 4))
if mibBuilder.loadTexts: lgpConditionHighTemperatureUser1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureUser1.setDescription('The temperature has exceeded the high temperature threshold\n         for user configured temperature sensor 1.')
lgpConditionHighTemperatureInternal = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142, 5))
if mibBuilder.loadTexts: lgpConditionHighTemperatureInternal.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureInternal.setDescription('The system has detected a high internal temperature condition.\n         The temperature has exceeded a specified temperature threshold.')
lgpConditionHighTemperatureExternalAirSensorA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142, 6))
if mibBuilder.loadTexts: lgpConditionHighTemperatureExternalAirSensorA.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureExternalAirSensorA.setDescription('The temperature has exceeded the high temperature threshold\n            for external air sensor A.')
lgpConditionHighTemperatureExternalAirSensorB = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142, 7))
if mibBuilder.loadTexts: lgpConditionHighTemperatureExternalAirSensorB.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureExternalAirSensorB.setDescription('The temperature has exceeded the high temperature threshold\n            for external air sensor B.')
lgpConditionHighTemperatureRefrigerantSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142, 8))
if mibBuilder.loadTexts: lgpConditionHighTemperatureRefrigerantSupply.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureRefrigerantSupply.setDescription('The temperature has exceeded the high temperature threshold\n            for the refrigerant supply.')
lgpConditionHighTemperatureFluidSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142, 9))
if mibBuilder.loadTexts: lgpConditionHighTemperatureFluidSupply.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureFluidSupply.setDescription('The temperature has exceeded the high temperature threshold\n            for the fluid supply.')
lgpConditionHighTemperatureSupplyAir = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142, 10))
if mibBuilder.loadTexts: lgpConditionHighTemperatureSupplyAir.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureSupplyAir.setDescription('The temperature has exceeded the high temperature threshold\n            for the supply air.')
lgpConditionHighTemperatureReturnAir = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 142, 11))
if mibBuilder.loadTexts: lgpConditionHighTemperatureReturnAir.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighTemperatureReturnAir.setDescription('The temperature has exceeded the high temperature threshold\n            for the return air.')
lgpConditionLowTemperatureGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 143))
if mibBuilder.loadTexts: lgpConditionLowTemperatureGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowTemperatureGroup.setDescription('The system has detected a low temperature condition.  This group\n        contains various low temperature conditions.')
lgpConditionLowTemperatureSensor1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 143, 1))
if mibBuilder.loadTexts: lgpConditionLowTemperatureSensor1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowTemperatureSensor1.setDescription('The temperature is below the low temperature threshold for\n            sensor 1.')
lgpConditionLowTemperatureInternal = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 143, 2))
if mibBuilder.loadTexts: lgpConditionLowTemperatureInternal.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowTemperatureInternal.setDescription('The system has detected a low internal temperature condition.\n         The temperature is below a specified temperature threshold.')
lgpConditionLowTemperatureExternalAirSensorA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 143, 3))
if mibBuilder.loadTexts: lgpConditionLowTemperatureExternalAirSensorA.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowTemperatureExternalAirSensorA.setDescription('The temperature is below the low temperature threshold for\n            external air sensor A.')
lgpConditionLowTemperatureExternalAirSensorB = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 143, 4))
if mibBuilder.loadTexts: lgpConditionLowTemperatureExternalAirSensorB.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowTemperatureExternalAirSensorB.setDescription('The temperature is below the low temperature threshold for\n            external air sensor B.')
lgpConditionLowTemperatureRefrigerantSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 143, 5))
if mibBuilder.loadTexts: lgpConditionLowTemperatureRefrigerantSupply.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowTemperatureRefrigerantSupply.setDescription('The temperature is below the low temperature threshold for\n            the refrigerant supply.')
lgpConditionLowTemperatureFluidSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 143, 6))
if mibBuilder.loadTexts: lgpConditionLowTemperatureFluidSupply.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowTemperatureFluidSupply.setDescription('The temperature is below the low temperature threshold for\n            the fluid supply.')
lgpConditionLowTemperatureSupplyAir = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 143, 7))
if mibBuilder.loadTexts: lgpConditionLowTemperatureSupplyAir.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowTemperatureSupplyAir.setDescription('The temperature is below the low temperature threshold for\n            the supply air.')
lgpConditionHighHumidityGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 144))
if mibBuilder.loadTexts: lgpConditionHighHumidityGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighHumidityGroup.setDescription('The system has detected a high humidity condition.  This group\n        contains various high humidity conditions.')
lgpConditionHighHumiditySensor1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 144, 1))
if mibBuilder.loadTexts: lgpConditionHighHumiditySensor1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighHumiditySensor1.setDescription('The humidity has exceeded the high humidity threshold for\n            sensor 1.')
lgpConditionHighHumidityReturnAir = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 144, 2))
if mibBuilder.loadTexts: lgpConditionHighHumidityReturnAir.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighHumidityReturnAir.setDescription('The humidity has exceeded the high humidity threshold for\n            the return air.')
lgpConditionLowHumidityGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 145))
if mibBuilder.loadTexts: lgpConditionLowHumidityGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowHumidityGroup.setDescription('The system has detected a low humidity condition.  This group\n        contains various high humidity conditions.')
lgpConditionLowHumiditySensor1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 145, 1))
if mibBuilder.loadTexts: lgpConditionLowHumiditySensor1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowHumiditySensor1.setDescription('The humidity is below the low humidity threshold for sensor 1.')
lgpConditionLowHumidityReturnAir = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 145, 2))
if mibBuilder.loadTexts: lgpConditionLowHumidityReturnAir.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowHumidityReturnAir.setDescription('The humidity is below the low humidity threshold for the return\n            air.')
lgpConditionPeerNetworkNoMaster = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 146))
if mibBuilder.loadTexts: lgpConditionPeerNetworkNoMaster.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPeerNetworkNoMaster.setDescription('The system is unable to communicate with the master on the peer to\n        peer network.')
lgpConditionNoOnOffPermissions = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 147))
if mibBuilder.loadTexts: lgpConditionNoOnOffPermissions.setStatus('current')
if mibBuilder.loadTexts: lgpConditionNoOnOffPermissions.setDescription('The system lacks the permissions to execute the on/off operation.')
lgpConditionPeerNetworkFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 148))
if mibBuilder.loadTexts: lgpConditionPeerNetworkFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPeerNetworkFailure.setDescription('The system has detected a communication failure on the peer to\n        peer network.')
lgpConditionUnitDisabled = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 149))
if mibBuilder.loadTexts: lgpConditionUnitDisabled.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitDisabled.setDescription('The unit is disabled.')
lgpConditionUnitShutdown = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 150))
if mibBuilder.loadTexts: lgpConditionUnitShutdown.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitShutdown.setDescription('The system has shutdown.')
lgpConditionPeerNetworkDiscovered = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 151))
if mibBuilder.loadTexts: lgpConditionPeerNetworkDiscovered.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPeerNetworkDiscovered.setDescription('The system has established communications on the peer to peer\n        network.')
lgpConditionLossOfWaterFlow = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 152))
if mibBuilder.loadTexts: lgpConditionLossOfWaterFlow.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLossOfWaterFlow.setDescription('The system has detected a loss of water flow condition.')
lgpConditionCondensatePumpHighWater = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 153))
if mibBuilder.loadTexts: lgpConditionCondensatePumpHighWater.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCondensatePumpHighWater.setDescription('The system has detected high water in the condensate pump.')
lgpConditionGeneralAlarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 154))
if mibBuilder.loadTexts: lgpConditionGeneralAlarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditionGeneralAlarm.setDescription('The system has detected a general alarm condition.')
lgpConditionProductSpecific = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 155))
if mibBuilder.loadTexts: lgpConditionProductSpecific.setStatus('current')
if mibBuilder.loadTexts: lgpConditionProductSpecific.setDescription('The system has detected a product specific condition.  This condition\n        is not currently available via the agent card.')
lgpConditionReheatLockout = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 156))
if mibBuilder.loadTexts: lgpConditionReheatLockout.setStatus('current')
if mibBuilder.loadTexts: lgpConditionReheatLockout.setDescription('The system has locked out the electrical reheat operation for a\n     specified amount of time.')
lgpConditionHumidifierLockout = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 157))
if mibBuilder.loadTexts: lgpConditionHumidifierLockout.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHumidifierLockout.setDescription('The system has locked out the humidifier operation for a\n     specified amount of time.')
lgpConditionCompressorsLockout = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 158))
if mibBuilder.loadTexts: lgpConditionCompressorsLockout.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCompressorsLockout.setDescription('The system has locked out compressor operation for a specified amount\n     of time.')
lgpConditionCallService = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 159))
if mibBuilder.loadTexts: lgpConditionCallService.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCallService.setDescription('The system has detected a condition that requires a service\n     representative be contacted.')
lgpConditionLowMemoryGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 160))
if mibBuilder.loadTexts: lgpConditionLowMemoryGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowMemoryGroup.setDescription('This group contains various low memory conditions.')
lgpConditionLowMemory1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 160, 1))
if mibBuilder.loadTexts: lgpConditionLowMemory1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLowMemory1.setDescription('The system has detected a low memory condition.  The control\n         board is low in memory resources.')
lgpConditionMemoryFailureGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 161))
if mibBuilder.loadTexts: lgpConditionMemoryFailureGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMemoryFailureGroup.setDescription('This group contains various memory device failure conditions.')
lgpConditionMemory1Failure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 161, 1))
if mibBuilder.loadTexts: lgpConditionMemory1Failure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMemory1Failure.setDescription('The system has detected a memory 1 module failure.')
lgpConditionMemory2Failure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 161, 2))
if mibBuilder.loadTexts: lgpConditionMemory2Failure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMemory2Failure.setDescription('The system has detected a memory 2 module failure.')
lgpConditionUnitCodeErrorGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162))
if mibBuilder.loadTexts: lgpConditionUnitCodeErrorGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCodeErrorGroup.setDescription('This group contains various memory device failure conditions.')
lgpConditionUnitCodeNotConfigured = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 1))
if mibBuilder.loadTexts: lgpConditionUnitCodeNotConfigured.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCodeNotConfigured.setDescription('The system has detected the unit code is not configured.  The unit\n            code must be configured before system start-up.')
lgpConditionUnitCode01OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 2))
if mibBuilder.loadTexts: lgpConditionUnitCode01OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode01OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode02OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 3))
if mibBuilder.loadTexts: lgpConditionUnitCode02OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode02OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode03OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 4))
if mibBuilder.loadTexts: lgpConditionUnitCode03OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode03OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode04OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 5))
if mibBuilder.loadTexts: lgpConditionUnitCode04OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode04OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode05OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 6))
if mibBuilder.loadTexts: lgpConditionUnitCode05OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode05OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode06OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 7))
if mibBuilder.loadTexts: lgpConditionUnitCode06OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode06OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode07OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 8))
if mibBuilder.loadTexts: lgpConditionUnitCode07OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode07OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode08OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 9))
if mibBuilder.loadTexts: lgpConditionUnitCode08OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode08OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode09OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 10))
if mibBuilder.loadTexts: lgpConditionUnitCode09OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode09OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode10OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 11))
if mibBuilder.loadTexts: lgpConditionUnitCode10OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode10OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode11OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 12))
if mibBuilder.loadTexts: lgpConditionUnitCode11OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode11OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode12OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 13))
if mibBuilder.loadTexts: lgpConditionUnitCode12OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode12OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode13OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 14))
if mibBuilder.loadTexts: lgpConditionUnitCode13OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode13OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode14OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 15))
if mibBuilder.loadTexts: lgpConditionUnitCode14OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode14OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode15OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 16))
if mibBuilder.loadTexts: lgpConditionUnitCode15OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode15OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode16OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 17))
if mibBuilder.loadTexts: lgpConditionUnitCode16OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode16OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode17OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 18))
if mibBuilder.loadTexts: lgpConditionUnitCode17OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode17OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionUnitCode18OutOfRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 162, 19))
if mibBuilder.loadTexts: lgpConditionUnitCode18OutOfRange.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnitCode18OutOfRange.setDescription('The system has detected a unit code error.  This digit of the unit\n            code value is out of range.')
lgpConditionHighExternalDewPoint = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 163))
if mibBuilder.loadTexts: lgpConditionHighExternalDewPoint.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHighExternalDewPoint.setDescription('The system has detected a high external dew point condition.\n        The room dew point has exceeded the specified threshold.')
lgpConditionHcbDisconnected = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 164))
if mibBuilder.loadTexts: lgpConditionHcbDisconnected.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHcbDisconnected.setDescription('The system has detected the humidifier control board is disconnected\n     or not installed.')
lgpConditionBmsResetTimerExpired = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 165))
if mibBuilder.loadTexts: lgpConditionBmsResetTimerExpired.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBmsResetTimerExpired.setDescription('The BMS fan speed control reset counter has timed out.')
lgpConditionAgentFirmwareCorrupt = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 166))
if mibBuilder.loadTexts: lgpConditionAgentFirmwareCorrupt.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAgentFirmwareCorrupt.setDescription('The firmware update to the agent card has failed and the firmware is now\n        corrupt.')
lgpConditionSystemAccessGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 175))
if mibBuilder.loadTexts: lgpConditionSystemAccessGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSystemAccessGroup.setDescription('This group contains various system access conditions.  An examples is\n        an open access panel.')
lgpConditionFrontAccessOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 175, 1))
if mibBuilder.loadTexts: lgpConditionFrontAccessOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFrontAccessOpen.setDescription('The system has detected the front access panel/door is open.')
lgpConditionRearAccessOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 175, 2))
if mibBuilder.loadTexts: lgpConditionRearAccessOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRearAccessOpen.setDescription('The system has detected the rear access panel/door is open.')
lgpConditionsDamperFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 176))
if mibBuilder.loadTexts: lgpConditionsDamperFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionsDamperFailure.setDescription('This group contains various damper failure conditions.')
lgpConditionEmergencyDamperFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 176, 1))
if mibBuilder.loadTexts: lgpConditionEmergencyDamperFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEmergencyDamperFailure.setDescription('The system has detected an emergency damper failure.  The damper is\n        in the wrong position.')
lgpConditionRemoteShutdown = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 177))
if mibBuilder.loadTexts: lgpConditionRemoteShutdown.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRemoteShutdown.setDescription('A remote shutdown occurred.')
lgpConditionFireAlarm = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 178))
if mibBuilder.loadTexts: lgpConditionFireAlarm.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFireAlarm.setDescription('Fire Alarm.')
lgpConditionHeatersOverheated = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 179))
if mibBuilder.loadTexts: lgpConditionHeatersOverheated.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHeatersOverheated.setDescription('Heaters Overheated.')
lgpConditionCondenserFailureGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 180))
if mibBuilder.loadTexts: lgpConditionCondenserFailureGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCondenserFailureGroup.setDescription('This group contains condenser failure conditions.')
lgpConditionCondenser1Failure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 180, 1))
if mibBuilder.loadTexts: lgpConditionCondenser1Failure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCondenser1Failure.setDescription('Condenser 1 Failure.')
lgpConditionCondenser2Failure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 180, 2))
if mibBuilder.loadTexts: lgpConditionCondenser2Failure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCondenser2Failure.setDescription('Condenser 2 Failure.')
lgpConditionCondenserTVSSFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 180, 3))
if mibBuilder.loadTexts: lgpConditionCondenserTVSSFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCondenserTVSSFailure.setDescription('The condenser Transient Voltage Surge Suppressor or Surge\n            Protection Device has failed.')
lgpConditionHumidifierCyclinderWorn = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 181))
if mibBuilder.loadTexts: lgpConditionHumidifierCyclinderWorn.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHumidifierCyclinderWorn.setDescription('The system has detected the humidifier cylinder is worn.')
lgpConditionUnderCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 182))
if mibBuilder.loadTexts: lgpConditionUnderCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionUnderCurrent.setDescription('The system has detected a low current condition.  The current of\n        one or more sources in the system has fallen below a threshold for\n        a specified amount of time.  The threshold and time that triggered\n        this condition is system dependent.')
lgpConditionHumidifierUnderCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 182, 1))
if mibBuilder.loadTexts: lgpConditionHumidifierUnderCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHumidifierUnderCurrent.setDescription('The system has detected a low current condition on the\n            humidifier. The current of the humidifier has fallen below\n            a pre-determined threshold for a defined amount of time.')
lgpConditionInputUnderCurrent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 182, 2))
if mibBuilder.loadTexts: lgpConditionInputUnderCurrent.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputUnderCurrent.setDescription('There is a low current condition on the input power source. The\n             current of the input power source has fallen below a\n             pre-determined threshold for a defined amount of time.')
lgpConditionHeatRejectorGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 183))
if mibBuilder.loadTexts: lgpConditionHeatRejectorGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHeatRejectorGroup.setDescription('This group contains failure conditions for the heat rejection unit.')
lgpConditionHeatRejectorFanFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 183, 1))
if mibBuilder.loadTexts: lgpConditionHeatRejectorFanFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHeatRejectorFanFailure.setDescription('The heat rejecter fan has failed.')
lgpConditionHeatRejectorVoltageSuppressionFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 183, 2))
if mibBuilder.loadTexts: lgpConditionHeatRejectorVoltageSuppressionFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHeatRejectorVoltageSuppressionFailure.setDescription('The heat rejecter voltage suppression has failed and is no longer\n             able to protect the unit from power fluctuations.')
lgpConditionFreeCoolLockout = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 184))
if mibBuilder.loadTexts: lgpConditionFreeCoolLockout.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFreeCoolLockout.setDescription('The free cooling capability has been disabled.')
lgpConditionWaterLeakSensorFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 185))
if mibBuilder.loadTexts: lgpConditionWaterLeakSensorFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionWaterLeakSensorFailure.setDescription('The sensor used to detect water leaks is not connected or has failed.')
lgpConditionNoLoadDetectedWarning = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 186))
if mibBuilder.loadTexts: lgpConditionNoLoadDetectedWarning.setStatus('current')
if mibBuilder.loadTexts: lgpConditionNoLoadDetectedWarning.setDescription("There is no load detected on the output.  This can be an indication\n         that the output is being powered by an external bypass source and has\n         inadvertently been left on external bypass.  This warning is triggered\n         after a delay.  The delay is specified by the object\n         'lgpPwrNoLoadWarningDelay'.  The alarm is triggered when the output\n         current falls below a certain threshold specified by the object\n         'lgpPwrNoLoadWarningLimit'")
lgpConditionFirmwareGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 187))
if mibBuilder.loadTexts: lgpConditionFirmwareGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFirmwareGroup.setDescription('Grouping level for firmware related conditions.')
lgpConditionFirmwareUpdateRequired = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 187, 3))
if mibBuilder.loadTexts: lgpConditionFirmwareUpdateRequired.setStatus('current')
if mibBuilder.loadTexts: lgpConditionFirmwareUpdateRequired.setDescription('The firmware on the system or one or more components of the\n            system must be updated.  This typically indicates that one or more\n            components of the system contain corrupted firmware or the\n            firmware on one or more components are incompatible with one\n            another.  When this condition is active the system may not be able\n            to function to its full capacity or may not be able to function at\n            all.')
lgpConditionTestGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 188))
if mibBuilder.loadTexts: lgpConditionTestGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTestGroup.setDescription('Objects in this group of conditions are related to testing or test\n         events.  This object is never active.')
lgpConditionTest01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 188, 5))
if mibBuilder.loadTexts: lgpConditionTest01.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTest01.setDescription("This is a 'test' condition.  It is a generic test event that can\n            be utilized to evaluate system handling of events.  Some products\n            will support the activation of this event upon user request so that\n            user management stations can execute end-to-end event handling\n            tests.")
lgpConditionReceptacleBranchGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 190))
if mibBuilder.loadTexts: lgpConditionReceptacleBranchGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionReceptacleBranchGroup.setDescription('Grouping level for receptacle branch conditions.')
lgpConditionRcpBranchFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 190, 5))
if mibBuilder.loadTexts: lgpConditionRcpBranchFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRcpBranchFailure.setDescription('The receptacle branch module or control system has failed.\n             Service is required.')
lgpConditionRcpBranchBreakerOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 190, 10))
if mibBuilder.loadTexts: lgpConditionRcpBranchBreakerOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRcpBranchBreakerOpen.setDescription('The receptacle branch breaker is open.')
lgpConditionInputUnqualified = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 192))
if mibBuilder.loadTexts: lgpConditionInputUnqualified.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputUnqualified.setDescription('The input is not qualified to provide power to the system.  This may\n        be due to system input over-voltage, system input under-voltage,\n        system input frequency out of range, or other similar issues.')
lgpConditionBypassUnavailable = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 193))
if mibBuilder.loadTexts: lgpConditionBypassUnavailable.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassUnavailable.setDescription('This summary event is asserted when the bypass is not available.\n        Possible causes include: Bypass Sync Error, Bypass Line Fail, Bypass\n        Overvoltage, Bypass Undervoltage, Bypass Phase Rotation Error, or\n        other similar causes.')
lgpConditionAutoTransferFailed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 194))
if mibBuilder.loadTexts: lgpConditionAutoTransferFailed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAutoTransferFailed.setDescription('The system is failing to automatically transfer the load to the\n        alternate source.')
lgpConditionSBSUnavailable = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 195))
if mibBuilder.loadTexts: lgpConditionSBSUnavailable.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSBSUnavailable.setDescription('A Static Bypass Switch (SBS) Failure has been detected. Possible\n        causes include: SBS Phase Open, SBS SCR (Silicon Controlled Rectifier)\n        Shorted, SBS Overload Exceeded, Bypass Power Supply\n        Fail, Static Bypass Switch Fuse Failure, or other similar causes.')
lgpConditionSBSOverload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 196))
if mibBuilder.loadTexts: lgpConditionSBSOverload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSBSOverload.setDescription('On at least one phase of the static bypass switch (SBS), the power\n        dissipation limit has been exceeded.')
lgpConditionExcessPulseParallel = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 197))
if mibBuilder.loadTexts: lgpConditionExcessPulseParallel.setStatus('current')
if mibBuilder.loadTexts: lgpConditionExcessPulseParallel.setDescription('The system has performed too many pulse parallel operations within\n        the specified time interval.  A pulse parallel operation is a\n        momentary operation of the static bypass switch (SBS) in parallel with\n        the inverter.')
lgpConditionRemoteBypassSwitchOffExt = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 198))
if mibBuilder.loadTexts: lgpConditionRemoteBypassSwitchOffExt.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRemoteBypassSwitchOffExt.setDescription('The static bypass switch is off due to the state of an external\n        signal.')
lgpConditionManTransferInhibited = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 199))
if mibBuilder.loadTexts: lgpConditionManTransferInhibited.setStatus('current')
if mibBuilder.loadTexts: lgpConditionManTransferInhibited.setDescription('Manual transfer from inverter to bypass is inhibited.  Bypass is not\n        qualified.')
lgpConditionManReTransferInhibited = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 200))
if mibBuilder.loadTexts: lgpConditionManReTransferInhibited.setStatus('current')
if mibBuilder.loadTexts: lgpConditionManReTransferInhibited.setDescription('Manual retransfer from bypass to inverter is inhibited.')
lgpConditionBatteryChargeError = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 201))
if mibBuilder.loadTexts: lgpConditionBatteryChargeError.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryChargeError.setDescription('The battery is not charging properly. Some reasons for this condition\n        include, but are not limited to: battery charger failure,\n        battery failure, etc.')
lgpConditionBatteryAutoTestInhibited = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 202))
if mibBuilder.loadTexts: lgpConditionBatteryAutoTestInhibited.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryAutoTestInhibited.setDescription('Automatic (scheduled) battery tests are inhibited.')
lgpConditionBatteryChargeReducedExt = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 203))
if mibBuilder.loadTexts: lgpConditionBatteryChargeReducedExt.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryChargeReducedExt.setDescription('A reduced battery charging algorithm is being used due to an external\n        signal.')
lgpConditionBatteryCapacityLow = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 204))
if mibBuilder.loadTexts: lgpConditionBatteryCapacityLow.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryCapacityLow.setDescription('The battery capacity is low. Some reasons for this condition include,\n        but are not limited to: a battery is offline, the battery age has\n        reduced its capabilities, etc.')
lgpConditionBatteryTempImbalance = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 205))
if mibBuilder.loadTexts: lgpConditionBatteryTempImbalance.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryTempImbalance.setDescription('The temperature difference between two batteries in the system\n        exceeds the predefined threshold.')
lgpConditionBatteryEqualize = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 206))
if mibBuilder.loadTexts: lgpConditionBatteryEqualize.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryEqualize.setDescription('The rectifier output voltage has been increased to equalize the battery\n        voltage level.')
lgpConditionBatteryChargeInhibitedExt = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 207))
if mibBuilder.loadTexts: lgpConditionBatteryChargeInhibitedExt.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryChargeInhibitedExt.setDescription('Battery charging is inhibited due to an external inhibit signal.')
lgpConditionServiceExtBatteryMonitorGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 208))
if mibBuilder.loadTexts: lgpConditionServiceExtBatteryMonitorGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionServiceExtBatteryMonitorGroup.setDescription('This group contains battery monitor service conditions.')
lgpConditionServiceExtBatteryMonitor1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 208, 1))
if mibBuilder.loadTexts: lgpConditionServiceExtBatteryMonitor1.setStatus('current')
if mibBuilder.loadTexts: lgpConditionServiceExtBatteryMonitor1.setDescription('External battery monitor 1 indicates battery maintenance is\n            required.')
lgpConditionServiceExtBatteryMonitor2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 208, 2))
if mibBuilder.loadTexts: lgpConditionServiceExtBatteryMonitor2.setStatus('current')
if mibBuilder.loadTexts: lgpConditionServiceExtBatteryMonitor2.setDescription('External battery monitor 2 indicates battery maintenance is\n            required.')
lgpConditionBatteryGroundFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 209))
if mibBuilder.loadTexts: lgpConditionBatteryGroundFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryGroundFault.setDescription('Battery system ground fault amperage exceeds the threshold.')
lgpConditionBatteryLowShutdown = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 210))
if mibBuilder.loadTexts: lgpConditionBatteryLowShutdown.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBatteryLowShutdown.setDescription('With the battery breaker closed, the battery voltage has dropped\n        below the calculated End-Of-Discharge (EOD) limit.')
lgpConditionEmergencyPowerOffLocal = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 211))
if mibBuilder.loadTexts: lgpConditionEmergencyPowerOffLocal.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEmergencyPowerOffLocal.setDescription('The system has detected an Emergency Power Off (EPO) condition.\n        The local EPO switch has cut off the power source to the system.')
lgpConditionOutputLowPFLagging = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 212))
if mibBuilder.loadTexts: lgpConditionOutputLowPFLagging.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputLowPFLagging.setDescription('The system has detected a lagging output power factor below the\n        threshold, resulting in reduced load capacity.')
lgpConditionOutputLowPFLeading = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 213))
if mibBuilder.loadTexts: lgpConditionOutputLowPFLeading.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputLowPFLeading.setDescription('The system has detected a leading output power factor below the\n        threshold, resulting in reduced load capacity.')
lgpConditionOutputToLoadFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 214))
if mibBuilder.loadTexts: lgpConditionOutputToLoadFault.setStatus('current')
if mibBuilder.loadTexts: lgpConditionOutputToLoadFault.setDescription('The system has detected an output to load fault.  This could be\n        caused by over or under voltage, or by over or under frequency.')
lgpConditionInvRestartInhibitedExt = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 215))
if mibBuilder.loadTexts: lgpConditionInvRestartInhibitedExt.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInvRestartInhibitedExt.setDescription('Restart of the inverter is inhibited by an external signal.')
lgpConditionInverterShutdownOverload = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 216))
if mibBuilder.loadTexts: lgpConditionInverterShutdownOverload.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterShutdownOverload.setDescription('The system has shutdown the inverter due to a sustained overload.\n        This event does not indicate if the load has been dropped or\n        transferred to bypass.  At least one phase of the inverter power\n        dissipation limit has been exceeded.')
lgpConditionInverterOffExt = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 217))
if mibBuilder.loadTexts: lgpConditionInverterOffExt.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInverterOffExt.setDescription('The inverter is off due to the state of an external signal.')
lgpConditionInputContactGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218))
if mibBuilder.loadTexts: lgpConditionInputContactGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContactGroup.setDescription('The system has detected an active input contact.')
lgpConditionInputContact01 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 1))
if mibBuilder.loadTexts: lgpConditionInputContact01.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact01.setDescription('The system has detected that input contact 1 is active.')
lgpConditionInputContact02 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 2))
if mibBuilder.loadTexts: lgpConditionInputContact02.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact02.setDescription('The system has detected that input contact 2 is active.')
lgpConditionInputContact03 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 3))
if mibBuilder.loadTexts: lgpConditionInputContact03.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact03.setDescription('The system has detected that input contact 3 is active.')
lgpConditionInputContact04 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 4))
if mibBuilder.loadTexts: lgpConditionInputContact04.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact04.setDescription('The system has detected that input contact 4 is active.')
lgpConditionInputContact05 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 5))
if mibBuilder.loadTexts: lgpConditionInputContact05.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact05.setDescription('The system has detected that input contact 5 is active.')
lgpConditionInputContact06 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 6))
if mibBuilder.loadTexts: lgpConditionInputContact06.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact06.setDescription('The system has detected that input contact 6 is active.')
lgpConditionInputContact07 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 7))
if mibBuilder.loadTexts: lgpConditionInputContact07.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact07.setDescription('The system has detected that input contact 7 is active.')
lgpConditionInputContact08 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 8))
if mibBuilder.loadTexts: lgpConditionInputContact08.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact08.setDescription('The system has detected that input contact 8 is active.')
lgpConditionInputContact09 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 9))
if mibBuilder.loadTexts: lgpConditionInputContact09.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact09.setDescription('The system has detected that input contact 9 is active.')
lgpConditionInputContact10 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 10))
if mibBuilder.loadTexts: lgpConditionInputContact10.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact10.setDescription('The system has detected that input contact 10 is active.')
lgpConditionInputContact11 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 11))
if mibBuilder.loadTexts: lgpConditionInputContact11.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact11.setDescription('The system has detected that input contact 11 is active.')
lgpConditionInputContact12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 12))
if mibBuilder.loadTexts: lgpConditionInputContact12.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact12.setDescription('The system has detected that input contact 12 is active.')
lgpConditionInputContact13 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 13))
if mibBuilder.loadTexts: lgpConditionInputContact13.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact13.setDescription('The system has detected that input contact 13 is active.')
lgpConditionInputContact14 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 14))
if mibBuilder.loadTexts: lgpConditionInputContact14.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact14.setDescription('The system has detected that input contact 14 is active.')
lgpConditionInputContact15 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 15))
if mibBuilder.loadTexts: lgpConditionInputContact15.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact15.setDescription('The system has detected that input contact 15 is active.')
lgpConditionInputContact16 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 218, 16))
if mibBuilder.loadTexts: lgpConditionInputContact16.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputContact16.setDescription('The system has detected that input contact 16 is active.')
lgpConditionRectifierOperInhibited = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 219))
if mibBuilder.loadTexts: lgpConditionRectifierOperInhibited.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRectifierOperInhibited.setDescription('The operation of the rectifier is inhibited by an external signal.')
lgpConditionBypassBackFeedBrkrOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 220))
if mibBuilder.loadTexts: lgpConditionBypassBackFeedBrkrOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBypassBackFeedBrkrOpen.setDescription('The bypass backfeed breaker is in the open position.')
lgpConditionAutoRestartInProgress = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 221))
if mibBuilder.loadTexts: lgpConditionAutoRestartInProgress.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAutoRestartInProgress.setDescription('Auto restart is in progress.  Becomes inactive when auto restart\n        completes or fails.')
lgpConditionAutoRestartInhibitedExt = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 222))
if mibBuilder.loadTexts: lgpConditionAutoRestartInhibitedExt.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAutoRestartInhibitedExt.setDescription('Auto restart is inhibited due to an external signal.')
lgpConditionAutoRestartFailed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 223))
if mibBuilder.loadTexts: lgpConditionAutoRestartFailed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionAutoRestartFailed.setDescription('Auto restart has failed.')
lgpConditionInputOnGenerator = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 224))
if mibBuilder.loadTexts: lgpConditionInputOnGenerator.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputOnGenerator.setDescription('A generator is supplying the power to the system.')
lgpConditionInputFilterCycleLock = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 225))
if mibBuilder.loadTexts: lgpConditionInputFilterCycleLock.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputFilterCycleLock.setDescription('The input filter disconnect has opened too many times within a given\n        period of time.')
lgpConditionServiceCodeActive = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 226))
if mibBuilder.loadTexts: lgpConditionServiceCodeActive.setStatus('current')
if mibBuilder.loadTexts: lgpConditionServiceCodeActive.setDescription('The system is in an operational mode intended for testing.  In normal\n        operating conditions, the system should not be in this state.')
lgpConditionLoadBusSyncActive = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 227))
if mibBuilder.loadTexts: lgpConditionLoadBusSyncActive.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLoadBusSyncActive.setDescription('Load Bus Sync Operation is active.  This synchronizes the UPS output\n        with the output of another UPS.')
lgpConditionLoadBusSyncInhibited = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 228))
if mibBuilder.loadTexts: lgpConditionLoadBusSyncInhibited.setStatus('current')
if mibBuilder.loadTexts: lgpConditionLoadBusSyncInhibited.setDescription('The system has detected that conditions to perform Load Bus Sync\n        Operation are not satisfied.')
lgpConditionControlsResetRequired = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 229))
if mibBuilder.loadTexts: lgpConditionControlsResetRequired.setStatus('current')
if mibBuilder.loadTexts: lgpConditionControlsResetRequired.setDescription('A controls reset is required because one or more critical settings\n        have changed.')
lgpConditionEquipTempSensorFailed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 230))
if mibBuilder.loadTexts: lgpConditionEquipTempSensorFailed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEquipTempSensorFailed.setDescription('A temperature sensor is reporting a value outside the bounds of a\n        properly operating sensor.')
lgpConditionInputCurrentImbalance = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 231))
if mibBuilder.loadTexts: lgpConditionInputCurrentImbalance.setStatus('current')
if mibBuilder.loadTexts: lgpConditionInputCurrentImbalance.setDescription('The current on one input phase is much greater or lower than the\n         average current of all the phases. This may indicate improper operation\n         of the rectifier or input filter.')
lgpConditionPumpGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 232))
if mibBuilder.loadTexts: lgpConditionPumpGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPumpGroup.setDescription('The system has detected an alarm with one of the pumps.')
lgpConditionPumpFlowLoss = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 232, 1))
if mibBuilder.loadTexts: lgpConditionPumpFlowLoss.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPumpFlowLoss.setDescription('The system has detected a loss of flow with one or more pumps.')
lgpConditionPump1FlowLoss = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 232, 1, 1))
if mibBuilder.loadTexts: lgpConditionPump1FlowLoss.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPump1FlowLoss.setDescription('The system has detected a loss of flow with pump 1.')
lgpConditionPump2FlowLoss = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 232, 1, 2))
if mibBuilder.loadTexts: lgpConditionPump2FlowLoss.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPump2FlowLoss.setDescription('The system has detected a loss of flow with pump 2.')
lgpConditionPumpShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 232, 2))
if mibBuilder.loadTexts: lgpConditionPumpShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPumpShortCycle.setDescription('The system has detected a short cycling of the pumps.  One or more\n            of the pumps has been turned on and off a number of times within a\n            specified time period.')
lgpConditionPumpInverterShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 232, 3))
if mibBuilder.loadTexts: lgpConditionPumpInverterShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPumpInverterShortCycle.setDescription('The system has detected a short cycling of one or more pump\n            inverters and has temporarily locked out further pump operation\n            to protect from thermal overload.  A short cycle is defined as\n            powering on and off a number of times over a set time period.')
lgpConditionPump1InverterShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 232, 3, 1))
if mibBuilder.loadTexts: lgpConditionPump1InverterShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPump1InverterShortCycle.setDescription('The system has detected a short cycling of the inverter for\n                pump 1 and has temporarily locked out further pump operation\n                to protect from thermal overload.  A short cycle is defined as\n                powering on and off a number of times over a set time period.')
lgpConditionPump2InverterShortCycle = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 232, 3, 2))
if mibBuilder.loadTexts: lgpConditionPump2InverterShortCycle.setStatus('current')
if mibBuilder.loadTexts: lgpConditionPump2InverterShortCycle.setDescription('The system has detected a short cycling of the inverter for\n                pump 2 and has temporarily locked out further pump operation\n                to protect from thermal overload.  A short cycle is defined as\n                powering on and off a number of times over a set time period.')
lgpConditionValveGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 233))
if mibBuilder.loadTexts: lgpConditionValveGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionValveGroup.setDescription('The system has detected an alarm with one of the valves.')
lgpConditionChilledWaterValvePosition = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 233, 1))
if mibBuilder.loadTexts: lgpConditionChilledWaterValvePosition.setStatus('current')
if mibBuilder.loadTexts: lgpConditionChilledWaterValvePosition.setDescription('The system has detected a problem with the chilled water valve\n            position.  The position of the chilled water control valve does not\n            match an expected value.')
lgpConditionCondensationDetected = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 234))
if mibBuilder.loadTexts: lgpConditionCondensationDetected.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCondensationDetected.setDescription('The system has detected condensation.')
lgpConditionMaintenanceGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 235))
if mibBuilder.loadTexts: lgpConditionMaintenanceGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMaintenanceGroup.setDescription('The system has detected a maintenance condition.  This group\n        contains various maintenance conditions.')
lgpConditionMaintenanceDue = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 235, 1))
if mibBuilder.loadTexts: lgpConditionMaintenanceDue.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMaintenanceDue.setDescription('System is due for maintenance.')
lgpConditionMaintenanceComplete = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 235, 2))
if mibBuilder.loadTexts: lgpConditionMaintenanceComplete.setStatus('current')
if mibBuilder.loadTexts: lgpConditionMaintenanceComplete.setDescription('The system maintenance has been completed.')
lgpConditionExternalEventSignalGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 236))
if mibBuilder.loadTexts: lgpConditionExternalEventSignalGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionExternalEventSignalGroup.setDescription('This group contains various conditions signalled by external inputs.\n        Each event is deactivated when the signal is inactive.')
lgpConditionExternalFireDetect = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 236, 1))
if mibBuilder.loadTexts: lgpConditionExternalFireDetect.setStatus('current')
if mibBuilder.loadTexts: lgpConditionExternalFireDetect.setDescription('Fire detected, as indicated by an external input signal.')
lgpConditionExternalFlowLoss = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 236, 2))
if mibBuilder.loadTexts: lgpConditionExternalFlowLoss.setStatus('current')
if mibBuilder.loadTexts: lgpConditionExternalFlowLoss.setDescription('Loss of flow is detected, as indicated by an external input signal.')
lgpConditionExternalReheatLockout = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 236, 3))
if mibBuilder.loadTexts: lgpConditionExternalReheatLockout.setStatus('current')
if mibBuilder.loadTexts: lgpConditionExternalReheatLockout.setDescription('The reheater is shut down and disabled by an external input signal.')
lgpConditionExternalOverTemp = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 236, 4))
if mibBuilder.loadTexts: lgpConditionExternalOverTemp.setStatus('current')
if mibBuilder.loadTexts: lgpConditionExternalOverTemp.setDescription('A temperature has exceeded its threshold, as indicated by an\n            external input signal.')
lgpConditionExternalCompLockout = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 236, 5))
if mibBuilder.loadTexts: lgpConditionExternalCompLockout.setStatus('current')
if mibBuilder.loadTexts: lgpConditionExternalCompLockout.setDescription('The compressor is shut down and disabled by an external input signal.')
lgpConditionExternalHumidifierLockout = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 236, 6))
if mibBuilder.loadTexts: lgpConditionExternalHumidifierLockout.setStatus('current')
if mibBuilder.loadTexts: lgpConditionExternalHumidifierLockout.setDescription('The humidifier is shut down and disabled by an external input signal.')
lgpConditionComponentShutdownGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 237))
if mibBuilder.loadTexts: lgpConditionComponentShutdownGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionComponentShutdownGroup.setDescription('This group contains conditions signaling shutdown of various system\n        components.')
lgpConditionComponentShutdownPartial = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 237, 1))
if mibBuilder.loadTexts: lgpConditionComponentShutdownPartial.setStatus('current')
if mibBuilder.loadTexts: lgpConditionComponentShutdownPartial.setDescription('An event has occurred requiring some system components to be\n            shutdown and disabled.')
lgpConditionComponentShutdownHighPower = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 237, 2))
if mibBuilder.loadTexts: lgpConditionComponentShutdownHighPower.setStatus('current')
if mibBuilder.loadTexts: lgpConditionComponentShutdownHighPower.setDescription('Supply to high power components has been shutdown.')
lgpConditionCondenserProblemGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 238))
if mibBuilder.loadTexts: lgpConditionCondenserProblemGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCondenserProblemGroup.setDescription('This group contains condenser conditions.')
lgpConditionCondenser1Problem = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 238, 1))
if mibBuilder.loadTexts: lgpConditionCondenser1Problem.setStatus('current')
if mibBuilder.loadTexts: lgpConditionCondenser1Problem.setDescription('Condenser 1 is not operating within its normal parameters.')
lgpConditionHumidityOutOfPropBand = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 239))
if mibBuilder.loadTexts: lgpConditionHumidityOutOfPropBand.setStatus('current')
if mibBuilder.loadTexts: lgpConditionHumidityOutOfPropBand.setDescription('The system has detected a humidity reading that remained outside of\n        the proportional control band for an extended period of time.')
lgpConditionEnvRemoteSensorGroup = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 240))
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensorGroup.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensorGroup.setDescription('This group contains remote sensors.')
lgpConditionEnvRemoteSensor1Issue = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 240, 1))
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor1Issue.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor1Issue.setDescription('Remote sensor is disconnected or the signal is out of range.  The\n             event is deactivated when sensor signal is re-established.')
lgpConditionEnvRemoteSensor2Issue = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 240, 2))
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor2Issue.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor2Issue.setDescription('Remote sensor is disconnected or the signal is out of range.  The\n             event is deactivated when sensor signal is re-established.')
lgpConditionEnvRemoteSensor3Issue = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 240, 3))
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor3Issue.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor3Issue.setDescription('Remote sensor is disconnected or the signal is out of range.  The\n             event is deactivated when sensor signal is re-established.')
lgpConditionEnvRemoteSensor4Issue = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 240, 4))
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor4Issue.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor4Issue.setDescription('Remote sensor is disconnected or the signal is out of range.  The\n             event is deactivated when sensor signal is re-established.')
lgpConditionEnvRemoteSensor5Issue = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 240, 5))
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor5Issue.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor5Issue.setDescription('Remote sensor is disconnected or the signal is out of range.  The\n             event is deactivated when sensor signal is re-established.')
lgpConditionEnvRemoteSensor6Issue = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 240, 6))
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor6Issue.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor6Issue.setDescription('Remote sensor is disconnected or the signal is out of range.  The\n             event is deactivated when sensor signal is re-established.')
lgpConditionEnvRemoteSensor7Issue = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 240, 7))
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor7Issue.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor7Issue.setDescription('Remote sensor is disconnected or the signal is out of range.  The\n             event is deactivated when sensor signal is re-established.')
lgpConditionEnvRemoteSensor8Issue = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 240, 8))
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor8Issue.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor8Issue.setDescription('Remote sensor is disconnected or the signal is out of range.  The\n             event is deactivated when sensor signal is re-established.')
lgpConditionEnvRemoteSensor9Issue = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 240, 9))
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor9Issue.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor9Issue.setDescription('Remote sensor is disconnected or the signal is out of range.  The\n             event is deactivated when sensor signal is re-established.')
lgpConditionEnvRemoteSensor10Issue = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 240, 10))
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor10Issue.setStatus('current')
if mibBuilder.loadTexts: lgpConditionEnvRemoteSensor10Issue.setDescription('Remote sensor is disconnected or the signal is out of range.  The\n             event is deactivated when sensor signal is re-established.')
lgpConditionNeutralSnubberBoardCommFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 241))
if mibBuilder.loadTexts: lgpConditionNeutralSnubberBoardCommFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionNeutralSnubberBoardCommFailure.setDescription('The Neutral Snubber board has stopped communicating.')
lgpConditionRedundantChargerFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 242))
if mibBuilder.loadTexts: lgpConditionRedundantChargerFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionRedundantChargerFailure.setDescription('The redundant charger has failed.')
lgpConditionBoardInputContactorPowerFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 243))
if mibBuilder.loadTexts: lgpConditionBoardInputContactorPowerFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBoardInputContactorPowerFailure.setDescription('Board input contactor power failure.')
lgpConditionBoard1InputContactorPowerFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 243, 1))
if mibBuilder.loadTexts: lgpConditionBoard1InputContactorPowerFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBoard1InputContactorPowerFailure.setDescription('Board1 input contactor power failure.')
lgpConditionBoard2InputContactorPowerFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 243, 2))
if mibBuilder.loadTexts: lgpConditionBoard2InputContactorPowerFailure.setStatus('current')
if mibBuilder.loadTexts: lgpConditionBoard2InputContactorPowerFailure.setDescription('Board2 input contactor power failure.')
lgpConditionTooManySensors = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 5423))
if mibBuilder.loadTexts: lgpConditionTooManySensors.setStatus('current')
if mibBuilder.loadTexts: lgpConditionTooManySensors.setDescription('The number of sensors installed on the device has exceeded the\n\t     pre-determined limit.')
lgpConditionDoorSwitchOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 5471))
if mibBuilder.loadTexts: lgpConditionDoorSwitchOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionDoorSwitchOpen.setDescription('An open door has been detected.')
lgpConditionContactClosureOpen = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 5479))
if mibBuilder.loadTexts: lgpConditionContactClosureOpen.setStatus('current')
if mibBuilder.loadTexts: lgpConditionContactClosureOpen.setDescription('An open circuit has been detected.')
lgpConditionContactClosureClosed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 5480))
if mibBuilder.loadTexts: lgpConditionContactClosureClosed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionContactClosureClosed.setDescription('A closed circuit has been detected.')
lgpConditionSensorsNotDisplayed = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2, 1, 6119))
if mibBuilder.loadTexts: lgpConditionSensorsNotDisplayed.setStatus('current')
if mibBuilder.loadTexts: lgpConditionSensorsNotDisplayed.setDescription('The number of sensors that can be displayed (monitored) on the\n        device has exceeded the pre-determined limit.  Note this condition\n        differs from the lgpConditionTooManySensors in that the system may\n        currently have less than the maximum of installed sensors present but\n        one or more of those sensors can not be displayed because the display\n        order table (lgpPduAuxMeasOrderTable) contains entries for sensors\n        that are not currently installed.  This condition effectively\n        prevents one or more installed sensors from being presented in the\n        lgpPduAuxMeasTable.  It is possible for both this condition and the\n        lgpConditionTooManySensors condition to be active at the same time.')
mibBuilder.exportSymbols("LIEBERT-GP-CONDITIONS-MIB", lgpConditionInputOverCurrent=lgpConditionInputOverCurrent, lgpConditionLostBatteryRedundancy=lgpConditionLostBatteryRedundancy, lgpConditioniModuleUnit7Alarm=lgpConditioniModuleUnit7Alarm, lgpConditionSource1NeutralScrShort=lgpConditionSource1NeutralScrShort, lgpConditionSource2NeutralScrShort=lgpConditionSource2NeutralScrShort, lgpConditionSupplySensorFailure=lgpConditionSupplySensorFailure, lgpConditionSystemOverTemperature=lgpConditionSystemOverTemperature, lgpConditionCompressor2BShortCycle=lgpConditionCompressor2BShortCycle, lgpConditionManTransferInhibited=lgpConditionManTransferInhibited, lgpConditionSBSOverload=lgpConditionSBSOverload, lgpConditioniModuleUnit8Alarm=lgpConditioniModuleUnit8Alarm, lgpConditionSource1DisconnectShuntTripFailure=lgpConditionSource1DisconnectShuntTripFailure, lgpConditionBatteryModuleWarning=lgpConditionBatteryModuleWarning, lgpConditionUnitCodeErrorGroup=lgpConditionUnitCodeErrorGroup, lgpConditionInverterShutdownLowDc=lgpConditionInverterShutdownLowDc, lgpConditionModuleAlarm=lgpConditionModuleAlarm, lgpConditionCommWarningUnit16=lgpConditionCommWarningUnit16, lgpConditionBypassCurrentOverloadPhsB=lgpConditionBypassCurrentOverloadPhsB, lgpConditionOutputToLoadDisconnect2Open=lgpConditionOutputToLoadDisconnect2Open, lgpConditionUnitDisabled=lgpConditionUnitDisabled, lgpConditionBatteryChargeError=lgpConditionBatteryChargeError, lgpConditionFrequencyDeviation=lgpConditionFrequencyDeviation, lgpConditionServiceExtBatteryMonitor2=lgpConditionServiceExtBatteryMonitor2, lgpConditionHeatRejectorVoltageSuppressionFailure=lgpConditionHeatRejectorVoltageSuppressionFailure, lgpConditionNeutralSnubberBoardCommFailure=lgpConditionNeutralSnubberBoardCommFailure, lgpConditionBypassUnderVoltageFailure=lgpConditionBypassUnderVoltageFailure, lgpConditionBoard1InputContactorPowerFailure=lgpConditionBoard1InputContactorPowerFailure, lgpConditionAirFilterClogged=lgpConditionAirFilterClogged, lgpConditionInvRestartInhibitedExt=lgpConditionInvRestartInhibitedExt, lgpConditionDoorSwitchOpen=lgpConditionDoorSwitchOpen, lgpConditionOutputToLoadDisconnectOpen=lgpConditionOutputToLoadDisconnectOpen, lgpConditionOutputLowPFLeading=lgpConditionOutputLowPFLeading, lgpConditionCommWarningUnit10=lgpConditionCommWarningUnit10, lgpConditionSource1PduDisconnectOpen=lgpConditionSource1PduDisconnectOpen, lgpConditionHumidifierUnderCurrent=lgpConditionHumidifierUnderCurrent, lgpConditionAutoReTransferInhibited=lgpConditionAutoReTransferInhibited, lgpConditionCompressorsLockout=lgpConditionCompressorsLockout, lgpConditionCompressor2HighHeadPressure=lgpConditionCompressor2HighHeadPressure, lgpConditionFuseOpen=lgpConditionFuseOpen, lgpConditionParallelSysConnectionFault=lgpConditionParallelSysConnectionFault, lgpConditionInputContact03=lgpConditionInputContact03, lgpGeneralFault=lgpGeneralFault, lgpConditionInputUnqualified=lgpConditionInputUnqualified, lgpConditionMainControlFailure=lgpConditionMainControlFailure, lgpConditionMemoryFailureGroup=lgpConditionMemoryFailureGroup, lgpConditionCompressor4HighPressureSensorFailure=lgpConditionCompressor4HighPressureSensorFailure, lgpConditionDcCapacitorFuseOpen=lgpConditionDcCapacitorFuseOpen, lgpConditionRcpBranchFailure=lgpConditionRcpBranchFailure, lgpConditionLocalAlarm2=lgpConditionLocalAlarm2, lgpConditionCommWarningUnit5=lgpConditionCommWarningUnit5, lgpConditionRemoteBypassSwitchOffExt=lgpConditionRemoteBypassSwitchOffExt, lgpConditionComp1RunHrsExceeded=lgpConditionComp1RunHrsExceeded, lgpConditionSource1DisconnectOpen=lgpConditionSource1DisconnectOpen, PYSNMP_MODULE_ID=liebertGlobalProductsConditionsModule, lgpConditionBatteryBalancerFault=lgpConditionBatteryBalancerFault, lgpConditionControlDescr=lgpConditionControlDescr, lgpConditionComponentShutdownPartial=lgpConditionComponentShutdownPartial, lgpConditionLocalAlarm1=lgpConditionLocalAlarm1, lgpConditionSource2FrequencyDeviation=lgpConditionSource2FrequencyDeviation, lgpConditionLoadTransferedToBypass=lgpConditionLoadTransferedToBypass, lgpConditionUpsShutdownPending=lgpConditionUpsShutdownPending, lgpConditionRectifierInductorOverTemperature=lgpConditionRectifierInductorOverTemperature, lgpConditionUnitCode09OutOfRange=lgpConditionUnitCode09OutOfRange, lgpConditionCompressor3LowSuctionPressure=lgpConditionCompressor3LowSuctionPressure, lgpConditionInputContact14=lgpConditionInputContact14, lgpConditionAirSupplyTempSensorFailure=lgpConditionAirSupplyTempSensorFailure, lgpConditionUnitCode11OutOfRange=lgpConditionUnitCode11OutOfRange, lgpConditionRectifierDisconnectFailure=lgpConditionRectifierDisconnectFailure, lgpConditionHumidifierLockout=lgpConditionHumidifierLockout, lgpConditionUnitCode04OutOfRange=lgpConditionUnitCode04OutOfRange, lgpConditionParallelSysLoadShareFault=lgpConditionParallelSysLoadShareFault, lgpConditionHighTemperatureDigitalScroll1=lgpConditionHighTemperatureDigitalScroll1, lgpConditionEmergencyTransferToBypass=lgpConditionEmergencyTransferToBypass, lgpConditionInverterOverCurrentPhsC=lgpConditionInverterOverCurrentPhsC, lgpConditionInputOnGenerator=lgpConditionInputOnGenerator, lgpConditionOutputToLoadOverLimit=lgpConditionOutputToLoadOverLimit, lgpConditionHighTemperatureSupplyAir=lgpConditionHighTemperatureSupplyAir, lgpConditionSource1NeutralScrOpen=lgpConditionSource1NeutralScrOpen, lgpConditionLocalAlarm7=lgpConditionLocalAlarm7, lgpConditionAckReq=lgpConditionAckReq, lgpConditionParallelSysOverload=lgpConditionParallelSysOverload, lgpConditionChangeFilter=lgpConditionChangeFilter, lgpConditionBypassVoltageUnqualified=lgpConditionBypassVoltageUnqualified, lgpConditionOutputToLoadNeutralDisconnectOpen=lgpConditionOutputToLoadNeutralDisconnectOpen, lgpConditionLowTemperatureRefrigerantSupply=lgpConditionLowTemperatureRefrigerantSupply, lgpConditionHotGasRunHrsExceeded=lgpConditionHotGasRunHrsExceeded, lgpConditionLoadOnBattery=lgpConditionLoadOnBattery, lgpConditioniModuleUnit5Alarm=lgpConditioniModuleUnit5Alarm, lgpConditionUnitCode14OutOfRange=lgpConditionUnitCode14OutOfRange, lgpConditionSource1ScrShort=lgpConditionSource1ScrShort, lgpConditionBatteryUnderVoltage=lgpConditionBatteryUnderVoltage, lgpConditionInputCurrentImbalance=lgpConditionInputCurrentImbalance, lgpConditionSource1Failure=lgpConditionSource1Failure, lgpConditionInverterOverCurrentPhsB=lgpConditionInverterOverCurrentPhsB, lgpConditionsDamperFailure=lgpConditionsDamperFailure, lgpConditionSource1NeutralOverCurrent=lgpConditionSource1NeutralOverCurrent, lgpConditionLocalAlarm8=lgpConditionLocalAlarm8, lgpConditionSmokeDetected=lgpConditionSmokeDetected, lgpConditionOutputToLoadFuseOpen=lgpConditionOutputToLoadFuseOpen, lgpConditionLowTemperatureExternalAirSensorA=lgpConditionLowTemperatureExternalAirSensorA, lgpConditionUnitCode12OutOfRange=lgpConditionUnitCode12OutOfRange, lgpConditionEntry=lgpConditionEntry, lgpConditionPowerOn=lgpConditionPowerOn, lgpConditionCompressor1ShortCycle=lgpConditionCompressor1ShortCycle, lgpConditionServiceExtBatteryMonitor1=lgpConditionServiceExtBatteryMonitor1, lgpConditionCommWarningUnit11=lgpConditionCommWarningUnit11, lgpConditionInputFilterCycleLock=lgpConditionInputFilterCycleLock, lgpConditionUnitCode10OutOfRange=lgpConditionUnitCode10OutOfRange, lgpConditionInternalCommunicationFailure=lgpConditionInternalCommunicationFailure, lgpConditionBatteryModuleFailure=lgpConditionBatteryModuleFailure, lgpConditionUnitCode02OutOfRange=lgpConditionUnitCode02OutOfRange, lgpConditionHighWaterInPan=lgpConditionHighWaterInPan, lgpConditionInputNeutralLost=lgpConditionInputNeutralLost, lgpConditionOutputToLoadOverCurrentPhsA=lgpConditionOutputToLoadOverCurrentPhsA, lgpConditionMultipleFanFailure=lgpConditionMultipleFanFailure, lgpConditionPowerSupply1Failure=lgpConditionPowerSupply1Failure, lgpConditionCurrentState=lgpConditionCurrentState, lgpConditionLoadOnBypass=lgpConditionLoadOnBypass, lgpConditionOutputToLoadDisconnect1Open=lgpConditionOutputToLoadDisconnect1Open, lgpConditionBypassCurrentOverloadPhsC=lgpConditionBypassCurrentOverloadPhsC, lgpConditionSource1CurrentSensorFailure=lgpConditionSource1CurrentSensorFailure, lgpFlexConditions=lgpFlexConditions, lgpConditionCommWarningUnit12=lgpConditionCommWarningUnit12, lgpConditionBatteryDiscOpenCab01=lgpConditionBatteryDiscOpenCab01, lgpConditionHeatRejectorFanFailure=lgpConditionHeatRejectorFanFailure, lgpConditionControlEventAck=lgpConditionControlEventAck, lgpConditionBypassPhaseRotationError=lgpConditionBypassPhaseRotationError, lgpConditionServiceCooling=lgpConditionServiceCooling, lgpConditionBatteryTestInProgress=lgpConditionBatteryTestInProgress, lgpConditionCompPumpDownFailure=lgpConditionCompPumpDownFailure, lgpConditionFreeCoolLockout=lgpConditionFreeCoolLockout, lgpConditionControl=lgpConditionControl, lgpConditionCompressor2AShortCycle=lgpConditionCompressor2AShortCycle, lgpConditionTandemCompressorCircuit2LowPressure=lgpConditionTandemCompressorCircuit2LowPressure, lgpConditionHighHumiditySensor1=lgpConditionHighHumiditySensor1, lgpConditionOutputToLoadShort=lgpConditionOutputToLoadShort, lgpConditionDehumidiferRunHrsExceeded=lgpConditionDehumidiferRunHrsExceeded, lgpConditionUnitCode13OutOfRange=lgpConditionUnitCode13OutOfRange, lgpConditionInputContact07=lgpConditionInputContact07, lgpConditionUserInterfaceFailure=lgpConditionUserInterfaceFailure, lgpConditionAcknowledged=lgpConditionAcknowledged, lgpConditionLowMemory1=lgpConditionLowMemory1, lgpConditionInverterOffExt=lgpConditionInverterOffExt, lgpConditionCompressor3LowPressure=lgpConditionCompressor3LowPressure, lgpConditionSource1ScrOpen=lgpConditionSource1ScrOpen, lgpConditionTest01=lgpConditionTest01, lgpConditionHeatSink1OverTemperature=lgpConditionHeatSink1OverTemperature, lgpConditionBatteryTestFailed=lgpConditionBatteryTestFailed, lgpConditionLocalAlarm3=lgpConditionLocalAlarm3, lgpConditionUnitCode15OutOfRange=lgpConditionUnitCode15OutOfRange, lgpConditionInputContact16=lgpConditionInputContact16, lgpConditionCompressor4Overload=lgpConditionCompressor4Overload, lgpConditionAirReturnTempSensorFailure=lgpConditionAirReturnTempSensorFailure, lgpConditionsWellKnown=lgpConditionsWellKnown, lgpConditionLowTemperature=lgpConditionLowTemperature, lgpConditionLostPower=lgpConditionLostPower, lgpConditionHumidityOutOfPropBand=lgpConditionHumidityOutOfPropBand, lgpConditionPumpInverterShortCycle=lgpConditionPumpInverterShortCycle, lgpConditionSourceGateDriveFailure=lgpConditionSourceGateDriveFailure, lgpConditionCompressor1AHighHeadPressure=lgpConditionCompressor1AHighHeadPressure, lgpConditionPowerSupply2Failure=lgpConditionPowerSupply2Failure, lgpConditionInputContact01=lgpConditionInputContact01, lgpConditionFanRunHrsExceeded=lgpConditionFanRunHrsExceeded, lgpConditionGlycolTempSensorFailure=lgpConditionGlycolTempSensorFailure, lgpConditionHighTemperatureBattString=lgpConditionHighTemperatureBattString, lgpConditionStandbyGlycoolPumpOn=lgpConditionStandbyGlycoolPumpOn, lgpConditionServiceExtBatteryMonitorGroup=lgpConditionServiceExtBatteryMonitorGroup, lgpConditionCommWarningUnit3=lgpConditionCommWarningUnit3, lgpConditionTooManySensors=lgpConditionTooManySensors, lgpConditionChilledWaterOverTemperature=lgpConditionChilledWaterOverTemperature, lgpConditionHistoryLogFull=lgpConditionHistoryLogFull, lgpConditionFirmwareGroup=lgpConditionFirmwareGroup, lgpConditonEmergencyPowerOff=lgpConditonEmergencyPowerOff, lgpConditionCompressor1BShortCycle=lgpConditionCompressor1BShortCycle, lgpConditionEnvRemoteSensorGroup=lgpConditionEnvRemoteSensorGroup, lgpConditionLoadBusSyncInhibited=lgpConditionLoadBusSyncInhibited, lgpConditionLossOfAirflowBlower1=lgpConditionLossOfAirflowBlower1, lgpConditionBatteryTempSensorFailure=lgpConditionBatteryTempSensorFailure, lgpConditionInputDisconnectOpen=lgpConditionInputDisconnectOpen, lgpConditionBypassOverVoltage=lgpConditionBypassOverVoltage, lgpConditionUpsOperationFault=lgpConditionUpsOperationFault, lgpConditionInverterFault=lgpConditionInverterFault, lgpConditionControlModuleWarning=lgpConditionControlModuleWarning, lgpConditionCondenserTVSSFailure=lgpConditionCondenserTVSSFailure, lgpConditionsPresent=lgpConditionsPresent, lgpConditionAutoRestartInProgress=lgpConditionAutoRestartInProgress, lgpConditionHumidifierControlBdFailure=lgpConditionHumidifierControlBdFailure, lgpConditionCommWarningUnit2=lgpConditionCommWarningUnit2, lgpConditionInverterOverCurrent=lgpConditionInverterOverCurrent, lgpConditionLocal1SensorFailure=lgpConditionLocal1SensorFailure, lgpConditionBreakerCloseFailure=lgpConditionBreakerCloseFailure, lgpConditionCallService=lgpConditionCallService, lgpConditionMainControlCommFailure=lgpConditionMainControlCommFailure, lgpConditionUnitCode01OutOfRange=lgpConditionUnitCode01OutOfRange, lgpConditionTransformerOverTemperature=lgpConditionTransformerOverTemperature, lgpConditionBypassUnderVoltage=lgpConditionBypassUnderVoltage, lgpConditionRedundantControlFailure=lgpConditionRedundantControlFailure, lgpConditionCommWarningUnit15=lgpConditionCommWarningUnit15, lgpConditionPowerModuleFailure=lgpConditionPowerModuleFailure, lgpConditionDescription=lgpConditionDescription, lgpConditionRefrigerantSupplySensorFailure=lgpConditionRefrigerantSupplySensorFailure, lgpConditionBatteryLogFullWarning=lgpConditionBatteryLogFullWarning, lgpConditionAutoRestartInhibitedExt=lgpConditionAutoRestartInhibitedExt, lgpConditionUtilityFailure=lgpConditionUtilityFailure, lgpConditionInputContact13=lgpConditionInputContact13, lgpConditionOutputToLoadUnderVoltage=lgpConditionOutputToLoadUnderVoltage, lgpConditionOverCurrent=lgpConditionOverCurrent, lgpConditionSource1VoltageSensorFailure=lgpConditionSource1VoltageSensorFailure, lgpConditionPhaseRotationError=lgpConditionPhaseRotationError, lgpConditionRectifierFault=lgpConditionRectifierFault, lgpConditionOutputToLoadVoltTHD=lgpConditionOutputToLoadVoltTHD, lgpConditionGroundFailure=lgpConditionGroundFailure, lgpConditionControlModuleFailure=lgpConditionControlModuleFailure, lgpConditionpsUpsOperationFault=lgpConditionpsUpsOperationFault, lgpConditionPeerNetworkNoMaster=lgpConditionPeerNetworkNoMaster, lgpConditionBypassCurrentOverloadPhsA=lgpConditionBypassCurrentOverloadPhsA, lgpConditionSource2NeutralOverCurrent=lgpConditionSource2NeutralOverCurrent, lgpConditionOutputToLoadOverCurrentPhsC=lgpConditionOutputToLoadOverCurrentPhsC, lgpConditionLossOfAirflow1=lgpConditionLossOfAirflow1, lgpConditionUnitCode03OutOfRange=lgpConditionUnitCode03OutOfRange, lgpConditionRectifierStartupFailure=lgpConditionRectifierStartupFailure, lgpConditionCondenserFailureGroup=lgpConditionCondenserFailureGroup, lgpConditionGeneralAlarm=lgpConditionGeneralAlarm, lgpConditionSensorsNotDisplayed=lgpConditionSensorsNotDisplayed, lgpConditionBatteryChargerFailed=lgpConditionBatteryChargerFailed, lgpConditionInverterOverCurrentPhsA=lgpConditionInverterOverCurrentPhsA, lgpConditionComp4PumpDownFailure=lgpConditionComp4PumpDownFailure, lgpConditionEnvRemoteSensor3Issue=lgpConditionEnvRemoteSensor3Issue, lgpConditionAutoRestartFailed=lgpConditionAutoRestartFailed, lgpConditionDisconnectFailure=lgpConditionDisconnectFailure, lgpConditionEmergencyShutdown=lgpConditionEmergencyShutdown, lgpConditionExternalReheatLockout=lgpConditionExternalReheatLockout, lgpConditionHumidifierProblem=lgpConditionHumidifierProblem, lgpConditionContactClosureClosed=lgpConditionContactClosureClosed, lgpConditionLossOfAirflowAllBlowers=lgpConditionLossOfAirflowAllBlowers, lgpConditionBatteryDiscOpenCab05=lgpConditionBatteryDiscOpenCab05, lgpConditionRoomTempSensorFailure=lgpConditionRoomTempSensorFailure, lgpConditionCompressorLowPressureSensorFailure=lgpConditionCompressorLowPressureSensorFailure, lgpConditionCompressorLowPressure=lgpConditionCompressorLowPressure, lgpConditionUnitOn=lgpConditionUnitOn, lgpConditionOutputToLoadFault=lgpConditionOutputToLoadFault, lgpConditionDcGroundFaultPos=lgpConditionDcGroundFaultPos, lgpConditionControlEnableStatus=lgpConditionControlEnableStatus, lgpConditionInputContact04=lgpConditionInputContact04, lgpConditionHumidifierFailure=lgpConditionHumidifierFailure, lgpConditionUnitCode18OutOfRange=lgpConditionUnitCode18OutOfRange, lgpConditionHumidifierCyclinderWorn=lgpConditionHumidifierCyclinderWorn, lgpConditionBypassBackFeedBrkrOpen=lgpConditionBypassBackFeedBrkrOpen, lgpConditionLowWaterFlow=lgpConditionLowWaterFlow, lgpConditionCommWarningUnit4=lgpConditionCommWarningUnit4, lgpConditionWaterUnderFloor=lgpConditionWaterUnderFloor, lgpNetworkName=lgpNetworkName, lgpConditionCompressorPowerSupplyFailure=lgpConditionCompressorPowerSupplyFailure, lgpConditionSensorFailure=lgpConditionSensorFailure)
mibBuilder.exportSymbols("LIEBERT-GP-CONDITIONS-MIB", lgpConditionSelfTestFailed=lgpConditionSelfTestFailed, lgpConditionAutoReTransferPrimed=lgpConditionAutoReTransferPrimed, lgpConditionUnitCode05OutOfRange=lgpConditionUnitCode05OutOfRange, lgpConditionSource2Failure=lgpConditionSource2Failure, lgpConditionControlEventReset=lgpConditionControlEventReset, lgpConditionSource2UnderVoltageRMS=lgpConditionSource2UnderVoltageRMS, lgpConditionHighExternalDewPoint=lgpConditionHighExternalDewPoint, lgpConditionHotWaterRunHrsExceeded=lgpConditionHotWaterRunHrsExceeded, lgpConditionHighTemperatureExternalAirSensorB=lgpConditionHighTemperatureExternalAirSensorB, lgpConditionCompressor2BHighHeadPressure=lgpConditionCompressor2BHighHeadPressure, lgpConditionInputFrequencyDeviation=lgpConditionInputFrequencyDeviation, lgpConditionSBSUnavailable=lgpConditionSBSUnavailable, lgpConditionHighTemperature=lgpConditionHighTemperature, lgpConditionUnderCurrent=lgpConditionUnderCurrent, lgpConditionLocalAlarm4=lgpConditionLocalAlarm4, lgpConditionComp2RunHrsExceeded=lgpConditionComp2RunHrsExceeded, lgpConditionEnvRemoteSensor9Issue=lgpConditionEnvRemoteSensor9Issue, lgpConditionHighHumidityReturnAir=lgpConditionHighHumidityReturnAir, lgpConditionPowerModuleWarning=lgpConditionPowerModuleWarning, lgpConditionChilledWaterValvePosition=lgpConditionChilledWaterValvePosition, lgpConditionRcpBranchBreakerOpen=lgpConditionRcpBranchBreakerOpen, lgpConditionOutputToLoadNeutralDisconnectFailure=lgpConditionOutputToLoadNeutralDisconnectFailure, lgpConditionStaticTransferSwitchInhibited=lgpConditionStaticTransferSwitchInhibited, lgpConditionScrOpen=lgpConditionScrOpen, lgpConditionUnitCode07OutOfRange=lgpConditionUnitCode07OutOfRange, liebertGlobalProductsConditionsModule=liebertGlobalProductsConditionsModule, lgpConditionInputContact05=lgpConditionInputContact05, lgpConditionInputContact12=lgpConditionInputContact12, lgpConditionBatteryDiscOpenCab03=lgpConditionBatteryDiscOpenCab03, lgpConditionStaticSwitchDisconnectOpen=lgpConditionStaticSwitchDisconnectOpen, lgpConditionFanPowerFailure=lgpConditionFanPowerFailure, lgpConditionSource2UnderVoltage=lgpConditionSource2UnderVoltage, lgpConditionCondenser1Problem=lgpConditionCondenser1Problem, lgpConditionPump1FlowLoss=lgpConditionPump1FlowLoss, lgpConditionBatteryFault=lgpConditionBatteryFault, lgpConditionSystemOff=lgpConditionSystemOff, lgpConditionInternalFault=lgpConditionInternalFault, lgpConditionBatteryDisconnectOpen=lgpConditionBatteryDisconnectOpen, lgpConditionInverterDcOffsetOverrun=lgpConditionInverterDcOffsetOverrun, lgpConditionCondenserProblemGroup=lgpConditionCondenserProblemGroup, lgpConditionCompressor1BHighHeadPressure=lgpConditionCompressor1BHighHeadPressure, lgpConditionPowerOff=lgpConditionPowerOff, lgpConditionInputUnderCurrent=lgpConditionInputUnderCurrent, lgpConditionHighTemperatureRefrigerantSupply=lgpConditionHighTemperatureRefrigerantSupply, lgpConditionInverterOutOfSynchronization=lgpConditionInverterOutOfSynchronization, lgpConditionBatteryConverterOverCurrent=lgpConditionBatteryConverterOverCurrent, lgpConditioniModuleUnit2Alarm=lgpConditioniModuleUnit2Alarm, lgpConditionBatteryDiscOpenCab02=lgpConditionBatteryDiscOpenCab02, lgpConditionOutputToLoadOverCurrentPhsB=lgpConditionOutputToLoadOverCurrentPhsB, lgpConditionManReTransferInhibited=lgpConditionManReTransferInhibited, lgpConditionBatteryDiscOpenCab04=lgpConditionBatteryDiscOpenCab04, lgpConditionOnBypass=lgpConditionOnBypass, lgpConditionSystemOnStanby=lgpConditionSystemOnStanby, lgpConditionDcBus1UnderVoltage=lgpConditionDcBus1UnderVoltage, lgpConditionSource2NeutralScrOpen=lgpConditionSource2NeutralScrOpen, lgpConditionLostPowerRedundancy=lgpConditionLostPowerRedundancy, lgpConditionSource1ScrSensorFailure=lgpConditionSource1ScrSensorFailure, lgpConditionHighTemperatureDigitalScroll2=lgpConditionHighTemperatureDigitalScroll2, lgpConditionSource1BypassDisconnectClosed=lgpConditionSource1BypassDisconnectClosed, lgpConditionDcBus2UnderVoltage=lgpConditionDcBus2UnderVoltage, lgpConditionLowTemperatureInternal=lgpConditionLowTemperatureInternal, lgpConditionCondensationDetected=lgpConditionCondensationDetected, lgpConditionRedundantControlWarning=lgpConditionRedundantControlWarning, lgpConditionPeerNetworkFailure=lgpConditionPeerNetworkFailure, lgpConditionControlIndex=lgpConditionControlIndex, lgpConditionCompressor4ShortCycle=lgpConditionCompressor4ShortCycle, lgpConditionLowTemperatureSensor1=lgpConditionLowTemperatureSensor1, lgpConditionHcbDisconnected=lgpConditionHcbDisconnected, lgpConditionSourcesOutOfSync=lgpConditionSourcesOutOfSync, lgpConditionChilledWaterSupplySensorFailure=lgpConditionChilledWaterSupplySensorFailure, lgpConditionChilledWaterLowWaterFlowCircuit2=lgpConditionChilledWaterLowWaterFlowCircuit2, lgpConditionHighHumidity=lgpConditionHighHumidity, lgpConditioniModuleUnit3Alarm=lgpConditioniModuleUnit3Alarm, lgpConditionCommWarningUnit9=lgpConditionCommWarningUnit9, lgpConditionSource2ScrSensorFailure=lgpConditionSource2ScrSensorFailure, lgpConditionElectricalHeater2RunHrsExceeded=lgpConditionElectricalHeater2RunHrsExceeded, lgpConditionInputContact02=lgpConditionInputContact02, lgpConditionSource2BypassDisconnectClosed=lgpConditionSource2BypassDisconnectClosed, lgpConditionControlEnableCapability=lgpConditionControlEnableCapability, lgpConditionSource1FrequencyDeviation=lgpConditionSource1FrequencyDeviation, lgpConditionCompressorHighHeadPressure=lgpConditionCompressorHighHeadPressure, lgpConditionMaintenceBypassInhibited=lgpConditionMaintenceBypassInhibited, lgpConditionAmbient1OverTemperature=lgpConditionAmbient1OverTemperature, lgpConditionContactClosureOpen=lgpConditionContactClosureOpen, lgpConditionCabinetTemperatureSensorFailure=lgpConditionCabinetTemperatureSensorFailure, lgpConditionPowerSupplyFault=lgpConditionPowerSupplyFault, lgpConditionBatteryAutoTestInhibited=lgpConditionBatteryAutoTestInhibited, lgpConditionExternalOverTemp=lgpConditionExternalOverTemp, lgpConditionHighTemperatureUser1=lgpConditionHighTemperatureUser1, lgpConditionExternalCompLockout=lgpConditionExternalCompLockout, lgpConditionBatteryChargeInhibitedExt=lgpConditionBatteryChargeInhibitedExt, lgpConditionCompressor2LowPressure=lgpConditionCompressor2LowPressure, lgpConditionMaintenanceDue=lgpConditionMaintenanceDue, lgpConditionBatteryBalancerOverCurrent=lgpConditionBatteryBalancerOverCurrent, lgpConditionSource1OverCurrent=lgpConditionSource1OverCurrent, lgpConditionCommWarningUnit1=lgpConditionCommWarningUnit1, lgpConditionCompressorShortCycle=lgpConditionCompressorShortCycle, lgpConditionNoLoadDetectedWarning=lgpConditionNoLoadDetectedWarning, lgpConditionDcGroundFaultNeg=lgpConditionDcGroundFaultNeg, lgpConditionDcBusUnderVoltage=lgpConditionDcBusUnderVoltage, lgpConditionComponentShutdownHighPower=lgpConditionComponentShutdownHighPower, lgpConditionSource1PhaseRotationError=lgpConditionSource1PhaseRotationError, lgpConditionOverload=lgpConditionOverload, lgpConditionFireAlarm=lgpConditionFireAlarm, lgpConditionComp2PumpDownFailure=lgpConditionComp2PumpDownFailure, lgpConditionRemoteSensorFailure=lgpConditionRemoteSensorFailure, lgpConditionRectifierCommunicationFailure=lgpConditionRectifierCommunicationFailure, lgpConditionUnitCode06OutOfRange=lgpConditionUnitCode06OutOfRange, lgpConditionParallelSysCommunicationFailure=lgpConditionParallelSysCommunicationFailure, lgpConditionRearAccessOpen=lgpConditionRearAccessOpen, lgpConditionSource1UnderVoltageRMS=lgpConditionSource1UnderVoltageRMS, lgpConditionSource2ScrOpen=lgpConditionSource2ScrOpen, lgpConditionComp1PumpDownFailure=lgpConditionComp1PumpDownFailure, lgpConditionCommWarningUnit7=lgpConditionCommWarningUnit7, lgpConditionHighTemperatureReturnAir=lgpConditionHighTemperatureReturnAir, lgpConditionBatteryChargeReducedExt=lgpConditionBatteryChargeReducedExt, lgpConditionPump2InverterShortCycle=lgpConditionPump2InverterShortCycle, lgpConditionCompressor2ShortCycle=lgpConditionCompressor2ShortCycle, lgpConditionTopBlowerFanFailure=lgpConditionTopBlowerFanFailure, lgpConditionDcBus2UnderVoltageFailure=lgpConditionDcBus2UnderVoltageFailure, lgpConditionCompressor2LowSuctionPressure=lgpConditionCompressor2LowSuctionPressure, lgpConditionTime=lgpConditionTime, lgpConditionSource1PowerSupplyInputFailure=lgpConditionSource1PowerSupplyInputFailure, lgpConditionLogicFailure=lgpConditionLogicFailure, lgpConditionControlFuse1Open=lgpConditionControlFuse1Open, lgpConditionLoadBusSyncActive=lgpConditionLoadBusSyncActive, lgpConditionUnitShutdown=lgpConditionUnitShutdown, lgpConditionFirmwareUpdateRequired=lgpConditionFirmwareUpdateRequired, lgpConditionLowTemperatureExternalAirSensorB=lgpConditionLowTemperatureExternalAirSensorB, lgpConditionTableRef=lgpConditionTableRef, lgpConditionBypassScrOpen=lgpConditionBypassScrOpen, lgpConditionFluidSupplySensorFailure=lgpConditionFluidSupplySensorFailure, lgpConditionCommWarningUnit13=lgpConditionCommWarningUnit13, lgpConditionAutoReTransferFailed=lgpConditionAutoReTransferFailed, lgpConditionBatteryCapacityLow=lgpConditionBatteryCapacityLow, lgpConditionCompressor3Overload=lgpConditionCompressor3Overload, lgpConditionExternalEventSignalGroup=lgpConditionExternalEventSignalGroup, lgpConditionWaterLeakSensorFailure=lgpConditionWaterLeakSensorFailure, lgpConditionElectricalHeater1RunHrsExceeded=lgpConditionElectricalHeater1RunHrsExceeded, lgpConditionRectifierFuseOpen=lgpConditionRectifierFuseOpen, lgpConditionDescr=lgpConditionDescr, lgpConditionLowTemperatureSupplyAir=lgpConditionLowTemperatureSupplyAir, lgpConditionInverterFuseOpen=lgpConditionInverterFuseOpen, lgpConditionLocalAlarm6=lgpConditionLocalAlarm6, lgpConditionControlTable=lgpConditionControlTable, lgpConditionHighTemperatureExternalAirSensorA=lgpConditionHighTemperatureExternalAirSensorA, lgpConditionHighTemperatureGroup=lgpConditionHighTemperatureGroup, lgpConditionLowHumidity=lgpConditionLowHumidity, lgpConditionCompressor4LowSuctionPressure=lgpConditionCompressor4LowSuctionPressure, lgpConditionBatteryTempImbalance=lgpConditionBatteryTempImbalance, lgpConditionEnvRemoteSensor8Issue=lgpConditionEnvRemoteSensor8Issue, lgpConditionCompressor1SensorFailure=lgpConditionCompressor1SensorFailure, lgpConditionCommWarningUnit8=lgpConditionCommWarningUnit8, lgpConditionDisconnect=lgpConditionDisconnect, lgpConditionExternalCommunicationFailure=lgpConditionExternalCommunicationFailure, lgpConditionRemoteShutdown=lgpConditionRemoteShutdown, lgpConditionInputContact15=lgpConditionInputContact15, lgpConditionSource2PowerSupplyInputFailure=lgpConditionSource2PowerSupplyInputFailure, lgpConditionOverVoltage=lgpConditionOverVoltage, lgpConditionBatteryDiscOpenCab06=lgpConditionBatteryDiscOpenCab06, lgpConditionId=lgpConditionId, lgpConditionExcessPulseParallel=lgpConditionExcessPulseParallel, lgpConditionHumidifierRunHrsExceeded=lgpConditionHumidifierRunHrsExceeded, lgpConditionFan1Failure=lgpConditionFan1Failure, lgpConditionControlBoardFailure=lgpConditionControlBoardFailure, lgpConditionReplaceBattery=lgpConditionReplaceBattery, lgpConditionUnitCode08OutOfRange=lgpConditionUnitCode08OutOfRange, lgpConditionControlModule1Failure=lgpConditionControlModule1Failure, lgpConditionActiveAlarm=lgpConditionActiveAlarm, lgpConditionEmergencyPowerOffLocal=lgpConditionEmergencyPowerOffLocal, lgpConditionHighTemperatureFluidSupply=lgpConditionHighTemperatureFluidSupply, lgpConditionTimeModified=lgpConditionTimeModified, lgpConditionLocalAlarm5=lgpConditionLocalAlarm5, lgpConditionOverTemperature=lgpConditionOverTemperature, lgpConditionBoard2InputContactorPowerFailure=lgpConditionBoard2InputContactorPowerFailure, lgpConditionInverterDisconnectFailure=lgpConditionInverterDisconnectFailure, lgpConditionLoadOnAlternateSource=lgpConditionLoadOnAlternateSource, lgpConditionInputContact06=lgpConditionInputContact06, lgpConditionSource2CurrentSensorFailure=lgpConditionSource2CurrentSensorFailure, lgpConditionCompressor1Overload=lgpConditionCompressor1Overload, lgpConditionBlowerFanFailure=lgpConditionBlowerFanFailure, lgpConditionRoomTempHumiditySensorFailure=lgpConditionRoomTempHumiditySensorFailure, lgpConditionSource1UnderVoltage=lgpConditionSource1UnderVoltage, lgpConditionInverterInductorOverTemperature=lgpConditionInverterInductorOverTemperature, lgpConditionConfigurationModified=lgpConditionConfigurationModified, lgpConditionPowerSupplyLogicFailure=lgpConditionPowerSupplyLogicFailure, lgpConditionPumpFlowLoss=lgpConditionPumpFlowLoss, lgpConditionManualOverride=lgpConditionManualOverride, lgpConditionLowTemperatureGroup=lgpConditionLowTemperatureGroup, lgpConditionPeerNetworkDiscovered=lgpConditionPeerNetworkDiscovered, lgpConditionEnvRemoteSensor6Issue=lgpConditionEnvRemoteSensor6Issue, lgpConditionSecurityBreach=lgpConditionSecurityBreach, lgpConditionBoardInputContactorPowerFailure=lgpConditionBoardInputContactorPowerFailure, lgpConditionProductSpecific=lgpConditionProductSpecific, lgpConditioniModuleUnit1Alarm=lgpConditioniModuleUnit1Alarm, lgpConditionSource2VoltageSensorFailure=lgpConditionSource2VoltageSensorFailure, lgpConditionSource2ScrShort=lgpConditionSource2ScrShort, lgpConditionControlFuse2Open=lgpConditionControlFuse2Open, lgpConditionCommWarning=lgpConditionCommWarning, lgpConditionLowTemperatureFluidSupply=lgpConditionLowTemperatureFluidSupply, lgpConditionSystemAccessGroup=lgpConditionSystemAccessGroup, lgpConditionMaintenanceComplete=lgpConditionMaintenanceComplete, lgpConditionBypassPhaseLost=lgpConditionBypassPhaseLost, lgpConditionCompressorLowSuctionPressure=lgpConditionCompressorLowSuctionPressure, lgpConditionInputCurrentUnbalanced=lgpConditionInputCurrentUnbalanced, lgpConditionBypassFrequencyDeviation=lgpConditionBypassFrequencyDeviation, lgpConditionSource1GateDriveFailure=lgpConditionSource1GateDriveFailure, lgpConditionComp3PumpDownFailure=lgpConditionComp3PumpDownFailure, lgpConditionMainControlWarning=lgpConditionMainControlWarning, lgpConditionParallelSysLoadOnBypass=lgpConditionParallelSysLoadOnBypass, lgpConditionCabinetHumiditySensorFailure=lgpConditionCabinetHumiditySensorFailure, lgpConditionAirSensorAFailure=lgpConditionAirSensorAFailure, lgpConditionDateModified=lgpConditionDateModified, lgpConditionControlType=lgpConditionControlType, lgpConditionInputUnderVoltage=lgpConditionInputUnderVoltage, lgpConditionInvStaticSwScrShort=lgpConditionInvStaticSwScrShort, lgpConditionSource2OverCurrent=lgpConditionSource2OverCurrent, lgpConditionBypassScrShort=lgpConditionBypassScrShort, lgpConditionEmergencyTransferToInverter=lgpConditionEmergencyTransferToInverter, lgpConditionHighHumidityGroup=lgpConditionHighHumidityGroup, lgpConditionHighTemperatureInternal=lgpConditionHighTemperatureInternal, lgpConditionBreakerOpenFailure=lgpConditionBreakerOpenFailure, lgpConditionSource2DisconnectOpen=lgpConditionSource2DisconnectOpen, lgpConditionPumpGroup=lgpConditionPumpGroup, lgpConditionsTable=lgpConditionsTable, lgpConditionEventLogCleared=lgpConditionEventLogCleared, lgpConditionDcBus1OverVoltage=lgpConditionDcBus1OverVoltage, lgpConditionActiveModuleAlarm=lgpConditionActiveModuleAlarm, lgpConditionEnvRemoteSensor1Issue=lgpConditionEnvRemoteSensor1Issue, lgpConditionDcBus2OverVoltageFailure=lgpConditionDcBus2OverVoltageFailure, lgpConditionAutoTransferFailed=lgpConditionAutoTransferFailed, lgpConditionLocalAlarm=lgpConditionLocalAlarm, lgpConditionEnvRemoteSensor7Issue=lgpConditionEnvRemoteSensor7Issue, lgpConditionSource1Overload=lgpConditionSource1Overload, lgpConditionBatteryDisconnectFailure=lgpConditionBatteryDisconnectFailure, lgpConditionSleepModeOff=lgpConditionSleepModeOff, lgpConditionReheatLockout=lgpConditionReheatLockout, lgpConditionAirSensorBFailure=lgpConditionAirSensorBFailure, lgpConditionCompressor3HighPressureSensorFailure=lgpConditionCompressor3HighPressureSensorFailure, lgpConditionLoadOnBypassByImpact=lgpConditionLoadOnBypassByImpact, lgpConditionControlsResetRequired=lgpConditionControlsResetRequired, lgpConditionEquipTempSensorFailed=lgpConditionEquipTempSensorFailed, lgpConditionCompressor1LowSuctionPressure=lgpConditionCompressor1LowSuctionPressure, lgpConditionPowerSupply2Fault=lgpConditionPowerSupply2Fault, lgpConditionOutputToLoadFrequencyDeviation=lgpConditionOutputToLoadFrequencyDeviation, lgpConditionMultipleTransferLockout=lgpConditionMultipleTransferLockout, lgpConditionLoadLockedOnBypass=lgpConditionLoadLockedOnBypass, lgpConditionSource2DisconnectShuntTripFailure=lgpConditionSource2DisconnectShuntTripFailure, lgpConditionEnvRemoteSensor2Issue=lgpConditionEnvRemoteSensor2Issue, lgpConditionOutputToLoadOff=lgpConditionOutputToLoadOff, lgpConditionChilledWaterLowWaterFlow=lgpConditionChilledWaterLowWaterFlow, lgpConditionLossOfAirflow=lgpConditionLossOfAirflow, lgpConditionEnvRemoteSensor10Issue=lgpConditionEnvRemoteSensor10Issue, lgpConditionBatteryOverVoltage=lgpConditionBatteryOverVoltage)
mibBuilder.exportSymbols("LIEBERT-GP-CONDITIONS-MIB", lgpConditionServiceCodeActive=lgpConditionServiceCodeActive, lgpConditionSource1PeakCurrentOverLoad=lgpConditionSource1PeakCurrentOverLoad, lgpConditionDcBus1OverVoltageFailure=lgpConditionDcBus1OverVoltageFailure, lgpConditionBatteryEqualize=lgpConditionBatteryEqualize, lgpConditionLossOfWaterFlow=lgpConditionLossOfWaterFlow, lgpConditionMemory2Failure=lgpConditionMemory2Failure, lgpConditionTransferInhibited=lgpConditionTransferInhibited, lgpConditionLossOfAirflow2=lgpConditionLossOfAirflow2, lgpConditionMemory1Failure=lgpConditionMemory1Failure, lgpConditionLowHumiditySensor1=lgpConditionLowHumiditySensor1, lgpConditionHeatersOverheated=lgpConditionHeatersOverheated, lgpConditionControlFailure=lgpConditionControlFailure, lgpConditionCommWarningUnit6=lgpConditionCommWarningUnit6, lgpConditionServiceHumidifier=lgpConditionServiceHumidifier, lgpConditionInletAirOverTemperature=lgpConditionInletAirOverTemperature, lgpConditionStandbyUnitOn=lgpConditionStandbyUnitOn, lgpConditionCompressor1HighHeadPressure=lgpConditionCompressor1HighHeadPressure, lgpConditionOutputToLoadOverload=lgpConditionOutputToLoadOverload, lgpConditionLoadOnMaintenceBypass=lgpConditionLoadOnMaintenceBypass, lgpConditionReceptacleBranchGroup=lgpConditionReceptacleBranchGroup, lgpConditionElectricalHeater3RunHrsExceeded=lgpConditionElectricalHeater3RunHrsExceeded, lgpConditionCompressor1AShortCycle=lgpConditionCompressor1AShortCycle, lgpConditionBatteryLowShutdown=lgpConditionBatteryLowShutdown, lgpConditionElectricHeatersOverTemperature=lgpConditionElectricHeatersOverTemperature, lgpConditionCompressor1LowPressureSensorFailure=lgpConditionCompressor1LowPressureSensorFailure, lgpConditionBatteryConverterFailure=lgpConditionBatteryConverterFailure, lgpConditionPump1InverterShortCycle=lgpConditionPump1InverterShortCycle, lgpConditionLowMemoryGroup=lgpConditionLowMemoryGroup, lgpConditionDcBusOverVoltage=lgpConditionDcBusOverVoltage, lgpConditionRedundantFanFailure=lgpConditionRedundantFanFailure, lgpConditionLowHumidityGroup=lgpConditionLowHumidityGroup, lgpConditionCondensatePumpHighWater=lgpConditionCondensatePumpHighWater, lgpConditionParallelSysControlFailure=lgpConditionParallelSysControlFailure, lgpConditionPasswordModified=lgpConditionPasswordModified, lgpConditionOutputToLoadVoltageSensorFailure=lgpConditionOutputToLoadVoltageSensorFailure, lgpConditionParallelSysLowBatteryWarning=lgpConditionParallelSysLowBatteryWarning, lgpConditionInputContact08=lgpConditionInputContact08, lgpConditionInputContact09=lgpConditionInputContact09, lgpConditionBypassCurrentOverload=lgpConditionBypassCurrentOverload, lgpConditionCompressor2SensorFailure=lgpConditionCompressor2SensorFailure, lgpConditionSource2OverVoltage=lgpConditionSource2OverVoltage, lgpConditionInputContact10=lgpConditionInputContact10, lgpConditionNoOnOffPermissions=lgpConditionNoOnOffPermissions, lgpConditionInputContact11=lgpConditionInputContact11, lgpConditionBatteryBalancerInductorOverTemperature=lgpConditionBatteryBalancerInductorOverTemperature, lgpConditionEmergencyDamperFailure=lgpConditionEmergencyDamperFailure, lgpConditionBatteryOverTemperature=lgpConditionBatteryOverTemperature, lgpConditionFanFailure=lgpConditionFanFailure, lgpConditionUnitOff=lgpConditionUnitOff, lgpConditionBypassDisconnectOpen=lgpConditionBypassDisconnectOpen, lgpConditionDcBus1UnderVoltageFailure=lgpConditionDcBus1UnderVoltageFailure, lgpConditionFaultySensor=lgpConditionFaultySensor, lgpConditionInverterCommunicationFailure=lgpConditionInverterCommunicationFailure, lgpConditionUnitCodeNotConfigured=lgpConditionUnitCodeNotConfigured, lgpConditionCommWarningUnit14=lgpConditionCommWarningUnit14, lgpConditionUnitCode16OutOfRange=lgpConditionUnitCode16OutOfRange, lgpConditionScrShort=lgpConditionScrShort, lgpConditionExternalFlowLoss=lgpConditionExternalFlowLoss, lgpConditionEnvRemoteSensor5Issue=lgpConditionEnvRemoteSensor5Issue, lgpConditionSource2GateDriveFailure=lgpConditionSource2GateDriveFailure, lgpConditionCompressor3HighHeadPressure=lgpConditionCompressor3HighHeadPressure, lgpConditionBypassOverVoltageFailure=lgpConditionBypassOverVoltageFailure, lgpConditionControlWarning=lgpConditionControlWarning, lgpConditionPumpShortCycle=lgpConditionPumpShortCycle, lgpConditioniModuleUnit6Alarm=lgpConditioniModuleUnit6Alarm, lgpConditionCompressor2AHighHeadPressure=lgpConditionCompressor2AHighHeadPressure, lgpConditionLowHumidityReturnAir=lgpConditionLowHumidityReturnAir, lgpConditionCheckAirFilter=lgpConditionCheckAirFilter, lgpConditionGroundOverCurrent=lgpConditionGroundOverCurrent, lgpConditionInputOverVoltage=lgpConditionInputOverVoltage, lgpConditionTestGroup=lgpConditionTestGroup, lgpConditionBmsResetTimerExpired=lgpConditionBmsResetTimerExpired, lgpConditionBrownOut=lgpConditionBrownOut, lgpConditionRectifierOverCurrent=lgpConditionRectifierOverCurrent, lgpConditioniModuleUnit4Alarm=lgpConditioniModuleUnit4Alarm, lgpConditionHighTemperatureSensor1=lgpConditionHighTemperatureSensor1, lgpConditionCondenser2Failure=lgpConditionCondenser2Failure, lgpConditionRectifierOperInhibited=lgpConditionRectifierOperInhibited, lgpConditionBatteryConverterOverTemperature=lgpConditionBatteryConverterOverTemperature, lgpConditionValveGroup=lgpConditionValveGroup, lgpConditionLowBatteryWarning=lgpConditionLowBatteryWarning, lgpConditionRedundantChargerFailure=lgpConditionRedundantChargerFailure, lgpConditionHumidifierOverCurrent=lgpConditionHumidifierOverCurrent, lgpConditionFreeCoolRunHrsExceeded=lgpConditionFreeCoolRunHrsExceeded, lgpConditionBatteryDiscOpenCab07=lgpConditionBatteryDiscOpenCab07, lgpConditionInputContactGroup=lgpConditionInputContactGroup, lgpConditionSystemOverTempWarning=lgpConditionSystemOverTempWarning, lgpConditionInverterShutdownOverload=lgpConditionInverterShutdownOverload, lgpConditionPowerSupply1Fault=lgpConditionPowerSupply1Fault, lgpConditionDcBus2OverVoltage=lgpConditionDcBus2OverVoltage, lgpConditionRectifierOverTemperature=lgpConditionRectifierOverTemperature, lgpConditionUnitCode17OutOfRange=lgpConditionUnitCode17OutOfRange, lgpConditionHeatRejectorGroup=lgpConditionHeatRejectorGroup, lgpConditionOutputToLoadOverVoltage=lgpConditionOutputToLoadOverVoltage, lgpConditionDcGroundFault=lgpConditionDcGroundFault, lgpConditionExternalFireDetect=lgpConditionExternalFireDetect, lgpConditionInverterBackFeed=lgpConditionInverterBackFeed, lgpConditionCompressor3ShortCycle=lgpConditionCompressor3ShortCycle, lgpConditionSource1OverVoltage=lgpConditionSource1OverVoltage, lgpConditionCompressor4LowPressure=lgpConditionCompressor4LowPressure, lgpConditionMainFanOverLoad=lgpConditionMainFanOverLoad, lgpConditionCompressor4HighHeadPressure=lgpConditionCompressor4HighHeadPressure, lgpConditionSource2PhaseRotationError=lgpConditionSource2PhaseRotationError, lgpConditionInverterOverTemperature=lgpConditionInverterOverTemperature, lgpConditionGroundSystemFault=lgpConditionGroundSystemFault, lgpConditionCompressor2Overload=lgpConditionCompressor2Overload, lgpConditionSourceFailure=lgpConditionSourceFailure, lgpConditionMaintenanceGroup=lgpConditionMaintenanceGroup, lgpConditionOutputToLoadOnJointMode=lgpConditionOutputToLoadOnJointMode, lgpConditionSystemOverload=lgpConditionSystemOverload, lgpConditionCompressorHighPressureSensorFailure=lgpConditionCompressorHighPressureSensorFailure, lgpConditionOutputLowPFLagging=lgpConditionOutputLowPFLagging, lgpConditionType=lgpConditionType, lgpConditionCompressorOverload=lgpConditionCompressorOverload, lgpConditionOutputToLoadOverCurrent=lgpConditionOutputToLoadOverCurrent, lgpConditionControlEntry=lgpConditionControlEntry, lgpConditionEnvRemoteSensor4Issue=lgpConditionEnvRemoteSensor4Issue, lgpConditionLowWaterInHumidifier=lgpConditionLowWaterInHumidifier, lgpConditionPowerSupplyFailure=lgpConditionPowerSupplyFailure, lgpConditionComponentShutdownGroup=lgpConditionComponentShutdownGroup, lgpConditionPump2FlowLoss=lgpConditionPump2FlowLoss, lgpConditionUnderVoltage=lgpConditionUnderVoltage, lgpConditionHistoryLogCleared=lgpConditionHistoryLogCleared, lgpConditionCondenser1Failure=lgpConditionCondenser1Failure, lgpConditionTandemCompressorCircuit1LowPressure=lgpConditionTandemCompressorCircuit1LowPressure, lgpConditionExternalHumidifierLockout=lgpConditionExternalHumidifierLockout, lgpConditionBypassUnavailable=lgpConditionBypassUnavailable, lgpConditionBottomBlowerFanFailure=lgpConditionBottomBlowerFanFailure, lgpConditionFrontAccessOpen=lgpConditionFrontAccessOpen, lgpConditionSource2PduDisconnectOpen=lgpConditionSource2PduDisconnectOpen, lgpConditionBatteryDiscOpenCab08=lgpConditionBatteryDiscOpenCab08, lgpConditionCondenserFanVFDFailure=lgpConditionCondenserFanVFDFailure, lgpConditionSeverity=lgpConditionSeverity, lgpConditionTableRowRef=lgpConditionTableRowRef, lgpConditionCompressor2HighPressureSensorFailure=lgpConditionCompressor2HighPressureSensorFailure, lgpConditionAgentFirmwareCorrupt=lgpConditionAgentFirmwareCorrupt, lgpConditionRunHoursExceeded=lgpConditionRunHoursExceeded, lgpConditionBatteryGroundFault=lgpConditionBatteryGroundFault, lgpConditionSource2PeakCurrentOverLoad=lgpConditionSource2PeakCurrentOverLoad, lgpConditionUnitRunHrsExceeded=lgpConditionUnitRunHrsExceeded, lgpConditionSystemControlBatteryLow=lgpConditionSystemControlBatteryLow, lgpConditionCompressor1LowPressure=lgpConditionCompressor1LowPressure, lgpConditionInputPhaseRotationError=lgpConditionInputPhaseRotationError)
