#
# PySNMP MIB module F5-BIGIP-APM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/f5/F5-BIGIP-APM-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 10:57:01 2024
# On host fv-az1986-135 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
bigipTrafficMgmt, bigipGroups, bigipCompliances, LongDisplayString = mibBuilder.importSymbols("F5-BIGIP-COMMON-MIB", "bigipTrafficMgmt", "bigipGroups", "bigipCompliances", "LongDisplayString")
InetAddress, InetAddressType, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetPortNumber")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, iso, Integer32, enterprises, ModuleIdentity, Counter64, Counter32, Unsigned32, NotificationType, Opaque, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "Integer32", "enterprises", "ModuleIdentity", "Counter64", "Counter32", "Unsigned32", "NotificationType", "Opaque", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "TimeTicks")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
bigipApm = ModuleIdentity((1, 3, 6, 1, 4, 1, 3375, 2, 6))
if mibBuilder.loadTexts: bigipApm.setLastUpdated('202004092221Z')
if mibBuilder.loadTexts: bigipApm.setOrganization('F5 Networks, Inc.')
if mibBuilder.loadTexts: bigipApm.setContactInfo('postal: F5 Networks, Inc. \n\t \t  801 Fifth Avenue\n                  Seattle, WA 98104\n          phone:  (206) 272-6500\n          email:  support@f5.com')
if mibBuilder.loadTexts: bigipApm.setDescription('Top-level infrastructure of the F5 enterprise MIB tree.')
apmProfiles = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1))
apmProfileAccessStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1))
apmProfileConnectivityStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2))
apmProfileRewriteStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3))
apmAccessStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4))
apmGlobalConnectivityStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 5))
apmGlobalRewriteStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 6))
apmProfileAccessAgentStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7))
apmProfileAccessMiscStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8))
apmLeasepool = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2))
apmLeasepoolStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1))
apmAcl = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 3))
apmAclStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 3, 1))
apmGlobalLicenseStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 9))
apmIpv6Leasepool = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4))
apmIpv6LeasepoolStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1))
apmPaStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmPaStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmPaStatResetStats.setDescription('The action to reset resettable statistics data in apmProfileAccessStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmPaStatNumber = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatNumber.setStatus('current')
if mibBuilder.loadTexts: apmPaStatNumber.setDescription('The number of apmProfileAccessStat entries in the table.')
apmPaStatTable = MibTable((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3), )
if mibBuilder.loadTexts: apmPaStatTable.setStatus('current')
if mibBuilder.loadTexts: apmPaStatTable.setDescription('A table containing statistic information of access profiles.')
apmPaStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1), ).setIndexNames((0, "F5-BIGIP-APM-MIB", "apmPaStatName"), (0, "F5-BIGIP-APM-MIB", "apmPaStatVsName"))
if mibBuilder.loadTexts: apmPaStatEntry.setStatus('current')
if mibBuilder.loadTexts: apmPaStatEntry.setDescription('Columns in the apmPaStat Table')
apmPaStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 1), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatName.setStatus('current')
if mibBuilder.loadTexts: apmPaStatName.setDescription('The name of an access profile')
apmPaStatConfigSyncState = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatConfigSyncState.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatConfigSyncState.setDescription('Deprecated!\n\t    The state of config sync operation')
apmPaStatTotalSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatTotalSessions.setStatus('current')
if mibBuilder.loadTexts: apmPaStatTotalSessions.setDescription('The total user sessions in the specified access profile')
apmPaStatTotalEstablishedStateSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatTotalEstablishedStateSessions.setStatus('current')
if mibBuilder.loadTexts: apmPaStatTotalEstablishedStateSessions.setDescription('The total user sessions in the specified access profile')
apmPaStatCurrentActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatCurrentActiveSessions.setStatus('current')
if mibBuilder.loadTexts: apmPaStatCurrentActiveSessions.setDescription('The total active user sessions in the specified access profile')
apmPaStatCurrentPendingSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatCurrentPendingSessions.setStatus('current')
if mibBuilder.loadTexts: apmPaStatCurrentPendingSessions.setDescription('The total user sessions going through access policy evaluation in the specified access profile')
apmPaStatCurrentCompletedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatCurrentCompletedSessions.setStatus('current')
if mibBuilder.loadTexts: apmPaStatCurrentCompletedSessions.setDescription('The total user sessions completed access policy evaluation in the specified access profile')
apmPaStatUserLoggedoutSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatUserLoggedoutSessions.setStatus('current')
if mibBuilder.loadTexts: apmPaStatUserLoggedoutSessions.setDescription('The total sessions logged out by user in the specified access profile')
apmPaStatAdminTerminatedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAdminTerminatedSessions.setStatus('current')
if mibBuilder.loadTexts: apmPaStatAdminTerminatedSessions.setDescription('The total sessions terminated by admin in the specified access profile')
apmPaStatMiscTerminatedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatMiscTerminatedSessions.setStatus('current')
if mibBuilder.loadTexts: apmPaStatMiscTerminatedSessions.setDescription('The total sessions terminated by internal errors/conditions in the specified access profile')
apmPaStatAccessPolicyResultAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAccessPolicyResultAllow.setStatus('current')
if mibBuilder.loadTexts: apmPaStatAccessPolicyResultAllow.setDescription('The total sessions resulted allow ending in the specified access profile')
apmPaStatAccessPolicyResultDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAccessPolicyResultDeny.setStatus('current')
if mibBuilder.loadTexts: apmPaStatAccessPolicyResultDeny.setDescription('The total sessions resulted deny ending in the specified access profile')
apmPaStatAccessPolicyResultRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAccessPolicyResultRedirect.setStatus('current')
if mibBuilder.loadTexts: apmPaStatAccessPolicyResultRedirect.setDescription('The total sessions redirected to the configured URI after closing the session in the specified access profile')
apmPaStatAccessPolicyResultRedirectWithSession = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAccessPolicyResultRedirectWithSession.setStatus('current')
if mibBuilder.loadTexts: apmPaStatAccessPolicyResultRedirectWithSession.setDescription('The total sessions redirected to the configured URI without closing the session in the specified access profile')
apmPaStatEndingDenyAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the ending deny agent in the specified access profile')
apmPaStatEndingDenyAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of ending deny agent in the specified access profile')
apmPaStatEndingDenyAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the ending deny agent in the specified access profile')
apmPaStatEndingDenyAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the ending deny agent in the specified access profile')
apmPaStatEndingDenyAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the ending deny agent in the specified access profile')
apmPaStatEndingDenyAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingDenyAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the ending deny agent in the specified access profile')
apmPaStatEndingRedirectAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the ending redirect agent in the specified access profile')
apmPaStatEndingRedirectAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of ending redirect agent in the specified access profile')
apmPaStatEndingRedirectAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the ending redirect agent in the specified access profile')
apmPaStatEndingRedirectAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the ending redirect agent in the specified access profile')
apmPaStatEndingRedirectAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the ending redirect agent in the specified access profile')
apmPaStatEndingRedirectAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingRedirectAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the ending redirect agent in the specified access profile')
apmPaStatEndingAllowAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the ending allow agent in the specified access profile')
apmPaStatEndingAllowAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of ending allow agent in the specified access profile')
apmPaStatEndingAllowAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the ending allow agent in the specified access profile')
apmPaStatEndingAllowAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the ending allow agent in the specified access profile')
apmPaStatEndingAllowAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the ending allow agent in the specified access profile')
apmPaStatEndingAllowAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEndingAllowAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the ending allow agent in the specified access profile')
apmPaStatAdAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAdAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatAdAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the active directory agent in the specified access profile')
apmPaStatAdAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAdAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatAdAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of active directory agent in the specified access profile')
apmPaStatAdAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAdAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatAdAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the active directory agent in the specified access profile')
apmPaStatAdAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAdAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatAdAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the active directory agent in the specified access profile')
apmPaStatAdAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAdAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatAdAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the active directory agent in the specified access profile')
apmPaStatAdAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAdAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatAdAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the active directory agent in the specified access profile')
apmPaStatClientCertAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the client cert agent in the specified access profile')
apmPaStatClientCertAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of client cert agent in the specified access profile')
apmPaStatClientCertAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the client cert agent in the specified access profile')
apmPaStatClientCertAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the client cert agent in the specified access profile')
apmPaStatClientCertAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the client cert agent in the specified access profile')
apmPaStatClientCertAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatClientCertAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the client cert agent in the specified access profile')
apmPaStatHttpAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the HTTP agent in the specified access profile')
apmPaStatHttpAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of HTTP agent in the specified access profile')
apmPaStatHttpAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the HTTP agent in the specified access profile')
apmPaStatHttpAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the HTTP agent in the specified access profile')
apmPaStatHttpAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the HTTP agent in the specified access profile')
apmPaStatHttpAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatHttpAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the HTTP agent in the specified access profile')
apmPaStatLdapAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the LDAP agent in the specified access profile')
apmPaStatLdapAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of LDAP agent in the specified access profile')
apmPaStatLdapAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the LDAP agent in the specified access profile')
apmPaStatLdapAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the LDAP agent in the specified access profile')
apmPaStatLdapAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the LDAP agent in the specified access profile')
apmPaStatLdapAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLdapAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the LDAP agent in the specified access profile')
apmPaStatRadiusAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the Radius agent in the specified access profile')
apmPaStatRadiusAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of Radius agent in the specified access profile')
apmPaStatRadiusAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the Radius agent in the specified access profile')
apmPaStatRadiusAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the Radius agent in the specified access profile')
apmPaStatRadiusAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the Radius agent in the specified access profile')
apmPaStatRadiusAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the Radius agent in the specified access profile')
apmPaStatSecuridAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the SecurID agent in the specified access profile')
apmPaStatSecuridAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of SecurID agent in the specified access profile')
apmPaStatSecuridAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the SecurID agent in the specified access profile')
apmPaStatSecuridAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the SecurID agent in the specified access profile')
apmPaStatSecuridAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the SecurID agent in the specified access profile')
apmPaStatSecuridAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatSecuridAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the SecurID agent in the specified access profile')
apmPaStatRadiusAcctAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the Radius Acct agent in the specified access profile')
apmPaStatRadiusAcctAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of Radius Acct agent in the specified access profile')
apmPaStatRadiusAcctAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the Radius Acct agent in the specified access profile')
apmPaStatRadiusAcctAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the Radius Acct agent in the specified access profile')
apmPaStatRadiusAcctAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the Radius Acct agent in the specified access profile')
apmPaStatRadiusAcctAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRadiusAcctAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the Radius Acct agent in the specified access profile')
apmPaStatEpsLinuxFcAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the Linux File Check agent in the specified access profile')
apmPaStatEpsLinuxFcAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of Linux File Check agent in the specified access profile')
apmPaStatEpsLinuxFcAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the Linux File Check agent in the specified access profile')
apmPaStatEpsLinuxFcAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the Linux File Check agent in the specified access profile')
apmPaStatEpsLinuxFcAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 79), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the Linux File Check agent in the specified access profile')
apmPaStatEpsLinuxFcAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxFcAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the Linux File Check agent in the specified access profile')
apmPaStatEpsLinuxPcAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the Linux Process Check agent in the specified access profile')
apmPaStatEpsLinuxPcAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of Linux Process Check agent in the specified access profile')
apmPaStatEpsLinuxPcAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the Linux Process Check agent in the specified access profile')
apmPaStatEpsLinuxPcAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the Linux Process Check agent in the specified access profile')
apmPaStatEpsLinuxPcAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the Linux Process Check agent in the specified access profile')
apmPaStatEpsLinuxPcAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 86), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsLinuxPcAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the Linux Process Check agent in the specified access profile')
apmPaStatEpsMacFcAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 87), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalInstances.setDescription('Deprecated!\n\t     The total instances of the Mac File Check agent in the specified access profile')
apmPaStatEpsMacFcAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 88), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalUsages.setDescription('Deprecated!\n\t     The total usages of Mac File Check agent in the specified access profile')
apmPaStatEpsMacFcAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 89), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalSuccesses.setDescription('Deprecated!\n\t     The total success conditions created/reached by the Mac File Check agent in the specified access profile')
apmPaStatEpsMacFcAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalFailures.setDescription('Deprecated!\n\t     The total failure conditions created/reached by the Mac File Check agent in the specified access profile')
apmPaStatEpsMacFcAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 91), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalErrors.setDescription('Deprecated!\n\t     The total error conditions created/reached by the Mac File Check agent in the specified access profile')
apmPaStatEpsMacFcAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 92), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacFcAgentTotalSessVars.setDescription('Deprecated!\n\t     The total session variables created by the Mac File Check agent in the specified access profile')
apmPaStatEpsMacPcAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 93), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Mac Process Check agent in the specified access profile')
apmPaStatEpsMacPcAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 94), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Mac Process Check agent in the specified access profile')
apmPaStatEpsMacPcAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 95), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Mac Process Check agent in the specified access profile')
apmPaStatEpsMacPcAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 96), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Mac Process Check agent in the specified access profile')
apmPaStatEpsMacPcAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 97), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Mac Process Check agent in the specified access profile')
apmPaStatEpsMacPcAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 98), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsMacPcAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Mac Process Check agent in the specified access profile')
apmPaStatEpsWinCcAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 99), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Windows Browser Cache Cleaner agent in the specified access profile')
apmPaStatEpsWinCcAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 100), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Windows Browser Cache Cleaner agent in the specified access profile')
apmPaStatEpsWinCcAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 101), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Windows Browser Cache Cleaner agent in the specified access profile')
apmPaStatEpsWinCcAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 102), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Windows Browser Cache Cleaner agent in the specified access profile')
apmPaStatEpsWinCcAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 103), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Windows Browser Cache Cleaner agent in the specified access profile')
apmPaStatEpsWinCcAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 104), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinCcAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Windows Browser Cache Cleaner agent in the specified access profile')
apmPaStatEpsAvAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 105), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Windows Antivirus Check agent in the specified access profile')
apmPaStatEpsAvAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 106), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Windows Antivirus Check agent in the specified access profile')
apmPaStatEpsAvAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 107), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Windows Antivirus Check agent in the specified access profile')
apmPaStatEpsAvAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 108), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Windows Antivirus Check agent in the specified access profile')
apmPaStatEpsAvAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 109), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Windows Antivirus Check agent in the specified access profile')
apmPaStatEpsAvAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 110), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsAvAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Windows Antivirus Check agent in the specified access profile')
apmPaStatEpsWinOsInfoAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 111), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Windows OS Info Check agent in the specified access profile')
apmPaStatEpsWinOsInfoAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 112), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Windows OS Info Check agent in the specified access profile')
apmPaStatEpsWinOsInfoAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 113), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Windows OS Info Check agent in the specified access profile')
apmPaStatEpsWinOsInfoAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 114), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Windows OS Info Check agent in the specified access profile')
apmPaStatEpsWinOsInfoAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 115), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Windows OS Info Check agent in the specified access profile')
apmPaStatEpsWinOsInfoAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 116), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinOsInfoAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Windows OS Info Check agent in the specified access profile')
apmPaStatEpsWinFcAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 117), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Windows File Check agent in the specified access profile')
apmPaStatEpsWinFcAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 118), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Windows File Check agent in the specified access profile')
apmPaStatEpsWinFcAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 119), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Windows File Check agent in the specified access profile')
apmPaStatEpsWinFcAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 120), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Windows File Check agent in the specified access profile')
apmPaStatEpsWinFcAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 121), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Windows File Check agent in the specified access profile')
apmPaStatEpsWinFcAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 122), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinFcAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Windows File Check agent in the specified access profile')
apmPaStatEpsWinMcAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 123), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Windows MachineCert Check agent in the specified access profile')
apmPaStatEpsWinMcAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 124), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Windows MachineCert Check agent in the specified access profile')
apmPaStatEpsWinMcAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 125), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Windows MachineCert Check agent in the specified access profile')
apmPaStatEpsWinMcAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 126), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Windows MachineCert Check agent in the specified access profile')
apmPaStatEpsWinMcAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 127), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Windows MachineCert Check agent in the specified access profile')
apmPaStatEpsWinMcAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 128), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinMcAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Windows MachineCert Check agent in the specified access profile')
apmPaStatEpsFwcAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 129), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the  Firewall Check agent in the specified access profile')
apmPaStatEpsFwcAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 130), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of  Firewall Check agent in the specified access profile')
apmPaStatEpsFwcAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 131), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the  Firewall Check agent in the specified access profile')
apmPaStatEpsFwcAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 132), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the  Firewall Check agent in the specified access profile')
apmPaStatEpsFwcAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 133), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the  Firewall Check agent in the specified access profile')
apmPaStatEpsFwcAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 134), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsFwcAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the  Firewall Check agent in the specified access profile')
apmPaStatEpsWinPcTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 135), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Windows Process Check agent in the specified access profile')
apmPaStatEpsWinPcTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 136), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalUsages.setDescription('Deprecated!\n\t    The total usages of Windows Process Check agent in the specified access profile')
apmPaStatEpsWinPcTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 137), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Windows Process Check agent in the specified access profile')
apmPaStatEpsWinPcTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 138), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Windows Process Check agent in the specified access profile')
apmPaStatEpsWinPcTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 139), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Windows Process Check agent in the specified access profile')
apmPaStatEpsWinPcTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 140), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPcTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Windows Process Check agent in the specified access profile')
apmPaStatEpsWinPwTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 141), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Windows Protected Workspace agent in the specified access profile')
apmPaStatEpsWinPwTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 142), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalUsages.setDescription('Deprecated!\n\t    The total usages of Windows Protected Workspace agent in the specified access profile')
apmPaStatEpsWinPwTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 143), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Windows Protected Workspace agent in the specified access profile')
apmPaStatEpsWinPwTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 144), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Windows Protected Workspace agent in the specified access profile')
apmPaStatEpsWinPwTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 145), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Windows Protected Workspace agent in the specified access profile')
apmPaStatEpsWinPwTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 146), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinPwTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Windows Protected Workspace agent in the specified access profile')
apmPaStatEpsWinRcAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 147), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Windows Process Check agent in the specified access profile')
apmPaStatEpsWinRcAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 148), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Windows Process Check agent in the specified access profile')
apmPaStatEpsWinRcAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 149), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Windows Process Check agent in the specified access profile')
apmPaStatEpsWinRcAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 150), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Windows Process Check agent in the specified access profile')
apmPaStatEpsWinRcAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 151), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Windows Process Check agent in the specified access profile')
apmPaStatEpsWinRcAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 152), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinRcAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Windows Process Check agent in the specified access profile')
apmPaStatEpsWinGpAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 153), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Windows Group Policy agent in the specified access profile')
apmPaStatEpsWinGpAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 154), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Windows Group Policy agent in the specified access profile')
apmPaStatEpsWinGpAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 155), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Windows Group Policy agent in the specified access profile')
apmPaStatEpsWinGpAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 156), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Windows Group Policy agent in the specified access profile')
apmPaStatEpsWinGpAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 157), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Windows Group Policy agent in the specified access profile')
apmPaStatEpsWinGpAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 158), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatEpsWinGpAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Windows Group Policy agent in the specified access profile')
apmPaStatExternalLogonAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 159), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the External Logon page agent in the specified access profile')
apmPaStatExternalLogonAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 160), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of External Logon page agent in the specified access profile')
apmPaStatExternalLogonAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 161), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the External Logon page agent in the specified access profile')
apmPaStatExternalLogonAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 162), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the External Logon page agent in the specified access profile')
apmPaStatExternalLogonAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 163), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the External Logon page agent in the specified access profile')
apmPaStatExternalLogonAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 164), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatExternalLogonAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the External Logon page agent in the specified access profile')
apmPaStatLogonAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 165), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Logon page agent in the specified access profile')
apmPaStatLogonAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 166), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Logon page agent in the specified access profile')
apmPaStatLogonAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 167), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Logon page agent in the specified access profile')
apmPaStatLogonAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 168), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Logon page agent in the specified access profile')
apmPaStatLogonAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 169), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Logon page agent in the specified access profile')
apmPaStatLogonAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 170), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLogonAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Logon page agent in the specified access profile')
apmPaStatRaAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 171), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRaAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRaAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Resource Assignment agent in the specified access profile')
apmPaStatRaAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 172), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRaAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRaAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Resource Assignment agent in the specified access profile')
apmPaStatRaAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 173), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRaAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRaAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Resource Assignment agent in the specified access profile')
apmPaStatRaAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 174), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRaAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRaAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Resource Assignment agent in the specified access profile')
apmPaStatRaAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 175), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRaAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRaAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Resource Assignment agent in the specified access profile')
apmPaStatRaAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 176), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRaAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRaAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Resource Assignment agent in the specified access profile')
apmPaStatRdsAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 177), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Route Domain Selection agent in the specified access profile')
apmPaStatRdsAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 178), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Route Domain Selection agent in the specified access profile')
apmPaStatRdsAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 179), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Route Domain Selection agent in the specified access profile')
apmPaStatRdsAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 180), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Route Domain Selection agent in the specified access profile')
apmPaStatRdsAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 181), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Route Domain Selection agent in the specified access profile')
apmPaStatRdsAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 182), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatRdsAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Route Domain Selection agent in the specified access profile')
apmPaStatVaAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 183), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatVaAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatVaAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Variable Assignment agent in the specified access profile')
apmPaStatVaAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 184), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatVaAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatVaAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Variable Assignment agent in the specified access profile')
apmPaStatVaAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 185), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatVaAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatVaAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Variable Assignment agent in the specified access profile')
apmPaStatVaAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 186), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatVaAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatVaAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Variable Assignment agent in the specified access profile')
apmPaStatVaAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 187), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatVaAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatVaAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Variable Assignment agent in the specified access profile')
apmPaStatVaAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 188), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatVaAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatVaAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Variable Assignment agent in the specified access profile')
apmPaStatIeAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 189), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatIeAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatIeAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the iRule Event agent in the specified access profile')
apmPaStatIeAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 190), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatIeAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatIeAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of iRule Event agent in the specified access profile')
apmPaStatIeAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 191), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatIeAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatIeAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the iRule Event agent in the specified access profile')
apmPaStatIeAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 192), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatIeAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatIeAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the iRule Event agent in the specified access profile')
apmPaStatIeAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 193), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatIeAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatIeAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the iRule Event agent in the specified access profile')
apmPaStatIeAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 194), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatIeAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatIeAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the iRule Event agent in the specified access profile')
apmPaStatLoggingAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 195), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Logging Agent in the specified access profile')
apmPaStatLoggingAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 196), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Logging Agent in the specified access profile')
apmPaStatLoggingAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 197), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Logging Agent in the specified access profile')
apmPaStatLoggingAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 198), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Logging Agent in the specified access profile')
apmPaStatLoggingAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 199), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Logging Agent in the specified access profile')
apmPaStatLoggingAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 200), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatLoggingAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Logging Agent in the specified access profile')
apmPaStatDecnBoxAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 201), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Decision Box Agent in the specified access profile')
apmPaStatDecnBoxAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 202), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Decision Box Agent in the specified access profile')
apmPaStatDecnBoxAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 203), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Decision Box Agent in the specified access profile')
apmPaStatDecnBoxAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 204), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Decision Box Agent in the specified access profile')
apmPaStatDecnBoxAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 205), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Decision Box Agent in the specified access profile')
apmPaStatDecnBoxAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 206), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatDecnBoxAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Decision Box Agent in the specified access profile')
apmPaStatMesgBoxAgentTotalInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 207), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalInstances.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalInstances.setDescription('Deprecated!\n\t    The total instances of the Message Box Agent in the specified access profile')
apmPaStatMesgBoxAgentTotalUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 208), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalUsages.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalUsages.setDescription('Deprecated!\n\t    The total usages of Message Box Agent in the specified access profile')
apmPaStatMesgBoxAgentTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 209), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalSuccesses.setDescription('Deprecated!\n\t    The total success conditions created/reached by the Message Box Agent in the specified access profile')
apmPaStatMesgBoxAgentTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 210), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalFailures.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalFailures.setDescription('Deprecated!\n\t    The total failure conditions created/reached by the Message Box Agent in the specified access profile')
apmPaStatMesgBoxAgentTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 211), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalErrors.setDescription('Deprecated!\n\t    The total error conditions created/reached by the Message Box Agent in the specified access profile')
apmPaStatMesgBoxAgentTotalSessVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 212), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalSessVars.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatMesgBoxAgentTotalSessVars.setDescription('Deprecated!\n\t    The total session variables created by the Message Box Agent in the specified access profile')
apmPaStatApdNoResultErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 213), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdNoResultErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdNoResultErrors.setDescription('Deprecated!\n\t    The total responses received without a result by APD from the client in the specified access profile')
apmPaStatApdNoSessionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 214), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdNoSessionErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdNoSessionErrors.setDescription('Deprecated!\n\t    The total responses received without a valid session by APD from the client in the specified access profile')
apmPaStatApdNoDeviceInfoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 215), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdNoDeviceInfoErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdNoDeviceInfoErrors.setDescription('Deprecated!\n\t    The total responses received without device info by APD from the client in the specified access profile')
apmPaStatApdNoTokenErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 216), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdNoTokenErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdNoTokenErrors.setDescription('Deprecated!\n\t    The total responses received without a token by APD from the client in the specified access profile')
apmPaStatApdNoSigErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 217), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdNoSigErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdNoSigErrors.setDescription('Deprecated!\n\t    The total responses received without a signature by APD from the client in the specified access profile')
apmPaStatApdTotalMismatchErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 218), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdTotalMismatchErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdTotalMismatchErrors.setDescription('Deprecated!\n\t    The total responses received with client data mismatch by APD from the client in the specified access profile')
apmPaStatApdInvalidSigErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 219), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdInvalidSigErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdInvalidSigErrors.setDescription('Deprecated!\n\t    The total responses received with invalid client data signature by APD from the client in the specified access profile')
apmPaStatApdMcPipelineInitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 220), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdMcPipelineInitErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdMcPipelineInitErrors.setDescription('Deprecated!\n\t    The total pipeline initialization errors caused by memcached in APD')
apmPaStatApdMcSetSessVarErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 221), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdMcSetSessVarErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdMcSetSessVarErrors.setDescription('Deprecated!\n\t    The total session var set errors caused by memcached in APD')
apmPaStatApdMcPipelineCloseErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 222), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdMcPipelineCloseErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdMcPipelineCloseErrors.setDescription('Deprecated!\n\t    The total pipeline close errors caused by memcached in APD')
apmPaStatApdApResultErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 223), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdApResultErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdApResultErrors.setDescription('Deprecated!\n\t    The total access policy result errors in APD')
apmPaStatApdApInternalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 224), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatApdApInternalErrors.setStatus('deprecated')
if mibBuilder.loadTexts: apmPaStatApdApInternalErrors.setDescription('Deprecated!\n\t    The total access policy internal errors in APD')
apmPaStatAllowedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 225), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatAllowedRequests.setStatus('current')
if mibBuilder.loadTexts: apmPaStatAllowedRequests.setDescription('The total allowed requests in the specified access profile')
apmPaStatDeniedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 226), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatDeniedRequests.setStatus('current')
if mibBuilder.loadTexts: apmPaStatDeniedRequests.setDescription('The total denied requests in the specified access profile')
apmPaStatVsName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 227), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatVsName.setStatus('current')
if mibBuilder.loadTexts: apmPaStatVsName.setDescription('The name virtual server in the specified access profile')
apmPaStatSessionsEvalTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 228), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatSessionsEvalTimedOut.setStatus('current')
if mibBuilder.loadTexts: apmPaStatSessionsEvalTimedOut.setDescription('The total sessions terminated due to inactivity while going through\n\t    access policy evaluation in the specified profile')
apmPaStatSessionsEstabTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 1, 3, 1, 229), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPaStatSessionsEstabTimedOut.setStatus('current')
if mibBuilder.loadTexts: apmPaStatSessionsEstabTimedOut.setDescription('The total sessions terminated due to inactivity after completed\n\t    access policy evaluation in the specified profile')
apmPcStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmPcStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmPcStatResetStats.setDescription('The action to reset resettable statistics data in apmProfileConnectivityStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmPcStatNumber = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPcStatNumber.setStatus('current')
if mibBuilder.loadTexts: apmPcStatNumber.setDescription('The number of apmProfileConnectivityStat entries in the table.')
apmPcStatTable = MibTable((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 3), )
if mibBuilder.loadTexts: apmPcStatTable.setStatus('current')
if mibBuilder.loadTexts: apmPcStatTable.setDescription('A table containing statistic information of connectivity profiles.')
apmPcStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 3, 1), ).setIndexNames((0, "F5-BIGIP-APM-MIB", "apmPcStatName"))
if mibBuilder.loadTexts: apmPcStatEntry.setStatus('current')
if mibBuilder.loadTexts: apmPcStatEntry.setDescription('Columns in the apmPcStat Table')
apmPcStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 3, 1, 1), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPcStatName.setStatus('current')
if mibBuilder.loadTexts: apmPcStatName.setDescription('The name of a connectivity profile')
apmPcStatTotConns = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPcStatTotConns.setStatus('current')
if mibBuilder.loadTexts: apmPcStatTotConns.setDescription('The total SSL/VPN connections in the system')
apmPcStatCurConns = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPcStatCurConns.setStatus('current')
if mibBuilder.loadTexts: apmPcStatCurConns.setDescription('The total current SSL/VPN connections in the system')
apmPcStatMaxConns = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPcStatMaxConns.setStatus('current')
if mibBuilder.loadTexts: apmPcStatMaxConns.setDescription('The max SSL/VPN connections in the system')
apmPcStatIngressRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPcStatIngressRaw.setStatus('current')
if mibBuilder.loadTexts: apmPcStatIngressRaw.setDescription('The total raw bytes received by SSL/VPN connections in the system when compression is enabled.')
apmPcStatEgressRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPcStatEgressRaw.setStatus('current')
if mibBuilder.loadTexts: apmPcStatEgressRaw.setDescription('The total raw bytes transmitted by SSL/VPN connections in the system when compression is enabled.')
apmPcStatIngressCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPcStatIngressCompressed.setStatus('current')
if mibBuilder.loadTexts: apmPcStatIngressCompressed.setDescription('The total compressed bytes received by SSL/VPN connections in the system when compression is enabled.')
apmPcStatEgressCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 2, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPcStatEgressCompressed.setStatus('current')
if mibBuilder.loadTexts: apmPcStatEgressCompressed.setDescription('The total compressed bytes transmitted by SSL/VPN connections in the system when compression is enabled.')
apmPrStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmPrStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmPrStatResetStats.setDescription('The action to reset resettable statistics data in apmProfileRewriteStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmPrStatNumber = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPrStatNumber.setStatus('current')
if mibBuilder.loadTexts: apmPrStatNumber.setDescription('The number of apmProfileRewriteStat entries in the table.')
apmPrStatTable = MibTable((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 3), )
if mibBuilder.loadTexts: apmPrStatTable.setStatus('current')
if mibBuilder.loadTexts: apmPrStatTable.setDescription('A table containing statistic information of rewrite profiles.')
apmPrStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 3, 1), ).setIndexNames((0, "F5-BIGIP-APM-MIB", "apmPrStatName"))
if mibBuilder.loadTexts: apmPrStatEntry.setStatus('current')
if mibBuilder.loadTexts: apmPrStatEntry.setDescription('Columns in the apmPrStat Table')
apmPrStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 3, 1, 1), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPrStatName.setStatus('current')
if mibBuilder.loadTexts: apmPrStatName.setDescription('The name of a rewrite profile')
apmPrStatClientReqBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPrStatClientReqBytes.setStatus('current')
if mibBuilder.loadTexts: apmPrStatClientReqBytes.setDescription('The total number of bytes received from the client requests')
apmPrStatClientRespBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPrStatClientRespBytes.setStatus('current')
if mibBuilder.loadTexts: apmPrStatClientRespBytes.setDescription('The total number of bytes sent in the client responses')
apmPrStatServerReqBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPrStatServerReqBytes.setStatus('current')
if mibBuilder.loadTexts: apmPrStatServerReqBytes.setDescription('The total number of bytes sent in the server requests')
apmPrStatServerRespBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPrStatServerRespBytes.setStatus('current')
if mibBuilder.loadTexts: apmPrStatServerRespBytes.setDescription('The total number of bytes received from the server responses')
apmPrStatClientReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPrStatClientReqs.setStatus('current')
if mibBuilder.loadTexts: apmPrStatClientReqs.setDescription('The total number of the client requests received')
apmPrStatClientResps = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPrStatClientResps.setStatus('current')
if mibBuilder.loadTexts: apmPrStatClientResps.setDescription('The total number of the client responses sent')
apmPrStatServerReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPrStatServerReqs.setStatus('current')
if mibBuilder.loadTexts: apmPrStatServerReqs.setDescription('The total number requests sent to the server')
apmPrStatServerResps = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 3, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPrStatServerResps.setStatus('current')
if mibBuilder.loadTexts: apmPrStatServerResps.setDescription('The total number responses received from the server')
apmPgStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmPgStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmPgStatResetStats.setDescription('The action to reset resettable statistics data in apmProfileAccessAgentStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmPgStatNumber = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPgStatNumber.setStatus('current')
if mibBuilder.loadTexts: apmPgStatNumber.setDescription('The number of apmProfileAccessAgentStat entries in the table.')
apmPgStatTable = MibTable((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 3), )
if mibBuilder.loadTexts: apmPgStatTable.setStatus('current')
if mibBuilder.loadTexts: apmPgStatTable.setDescription('A table containing statistic information of agents per access profiles.')
apmPgStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 3, 1), ).setIndexNames((0, "F5-BIGIP-APM-MIB", "apmPgStatName"), (0, "F5-BIGIP-APM-MIB", "apmPgStatAgentName"))
if mibBuilder.loadTexts: apmPgStatEntry.setStatus('current')
if mibBuilder.loadTexts: apmPgStatEntry.setDescription('Columns in the apmPgStat Table')
apmPgStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 3, 1, 1), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPgStatName.setStatus('current')
if mibBuilder.loadTexts: apmPgStatName.setDescription('The name of an access profile')
apmPgStatAgentName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 3, 1, 2), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPgStatAgentName.setStatus('current')
if mibBuilder.loadTexts: apmPgStatAgentName.setDescription('The agent name in the specified access profile')
apmPgStatInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPgStatInstances.setStatus('current')
if mibBuilder.loadTexts: apmPgStatInstances.setDescription('The total instances of agent in the specified access profile')
apmPgStatUsages = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPgStatUsages.setStatus('current')
if mibBuilder.loadTexts: apmPgStatUsages.setDescription('The total usages of agent in the specified access profile')
apmPgStatSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPgStatSuccesses.setStatus('current')
if mibBuilder.loadTexts: apmPgStatSuccesses.setDescription('The total number of successes for agent in the specified access profile')
apmPgStatFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPgStatFailures.setStatus('current')
if mibBuilder.loadTexts: apmPgStatFailures.setDescription('The total number of failures for agent in the specified access profile')
apmPgStatErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPgStatErrors.setStatus('current')
if mibBuilder.loadTexts: apmPgStatErrors.setDescription('The total number of errors for agent in the specified access profile')
apmPgStatSessionVars = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 7, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPgStatSessionVars.setStatus('current')
if mibBuilder.loadTexts: apmPgStatSessionVars.setDescription('The total number of session variables for agent in the specified access profile')
apmPmStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmPmStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmPmStatResetStats.setDescription('The action to reset resettable statistics data in apmProfileAccessMiscStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmPmStatNumber = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatNumber.setStatus('current')
if mibBuilder.loadTexts: apmPmStatNumber.setDescription('The number of apmProfileAccessMiscStat entries in the table.')
apmPmStatTable = MibTable((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3), )
if mibBuilder.loadTexts: apmPmStatTable.setStatus('current')
if mibBuilder.loadTexts: apmPmStatTable.setDescription('A table containing miscellaneous statistic information for access profiles.')
apmPmStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1), ).setIndexNames((0, "F5-BIGIP-APM-MIB", "apmPmStatName"))
if mibBuilder.loadTexts: apmPmStatEntry.setStatus('current')
if mibBuilder.loadTexts: apmPmStatEntry.setDescription('Columns in the apmPmStat Table')
apmPmStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 1), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatName.setStatus('current')
if mibBuilder.loadTexts: apmPmStatName.setDescription('The name of an access profile')
apmPmStatConfigSyncState = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatConfigSyncState.setStatus('current')
if mibBuilder.loadTexts: apmPmStatConfigSyncState.setDescription('The state of config sync operation')
apmPmStatInspResultError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatInspResultError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatInspResultError.setDescription('The total number of errors inspection host no result in the specified access profile')
apmPmStatInspSessionError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatInspSessionError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatInspSessionError.setDescription('The total number of errors inspection host no session in the specified access profile')
apmPmStatInspDeviceInfoError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatInspDeviceInfoError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatInspDeviceInfoError.setDescription('The total number of errors inspection host no device info in the specified access profile')
apmPmStatInspTokenError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatInspTokenError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatInspTokenError.setDescription('The total number of errors inspection host no token in the specified access profile')
apmPmStatInspSignatureError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatInspSignatureError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatInspSignatureError.setDescription('The total number of errors inspection host no signature in the specified access profile')
apmPmStatInspDataMsmtchError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatInspDataMsmtchError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatInspDataMsmtchError.setDescription('The total number of errors inspection host client data mismatch in the specified access profile')
apmPmStatInspClientSignError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatInspClientSignError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatInspClientSignError.setDescription('The total number of errors invalid client data signature in the specified access profile')
apmPmStatMemInitError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatMemInitError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatMemInitError.setDescription('The total number of errors memory cached pipeline in the specified access profile')
apmPmStatMemSessionVarError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatMemSessionVarError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatMemSessionVarError.setDescription('The total number of errors memory set session variable in the specified access profile')
apmPmStatMemCloseError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatMemCloseError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatMemCloseError.setDescription('The total number of errors memory finish pipeline failed in the specified access profile')
apmPmStatResultError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatResultError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatResultError.setDescription('The total number of result errors in the specified access profile')
apmPmStatInternalError = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 8, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmPmStatInternalError.setStatus('current')
if mibBuilder.loadTexts: apmPmStatInternalError.setDescription('The total number of internal errors in the specified access profile')
apmAccessStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmAccessStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatResetStats.setDescription('The action to reset resettable statistics data in apmAccessStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmAccessStatTotalSessions = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatTotalSessions.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatTotalSessions.setDescription('The total sessions created in the system')
apmAccessStatCurrentActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatCurrentActiveSessions.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatCurrentActiveSessions.setDescription('The total active user sessions in the system')
apmAccessStatCurrentPendingSessions = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatCurrentPendingSessions.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatCurrentPendingSessions.setDescription('The total user sessions going through access policy evaluation in the system')
apmAccessStatCurrentEndedSessions = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatCurrentEndedSessions.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatCurrentEndedSessions.setDescription('The total user sessions completed access policy evaluation in the system')
apmAccessStatUserLoggedoutSessions = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatUserLoggedoutSessions.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatUserLoggedoutSessions.setDescription('The total sessions logged out by user in the system')
apmAccessStatAdminTerminatedSessions = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatAdminTerminatedSessions.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatAdminTerminatedSessions.setDescription('The total sessions terminated by admin in the system')
apmAccessStatMiscTerminatedSessions = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatMiscTerminatedSessions.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatMiscTerminatedSessions.setDescription('The total sessions terminated by internal errors/conditions in the system')
apmAccessStatResultAllow = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatResultAllow.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatResultAllow.setDescription('The total sessions resulted allow ending in the system')
apmAccessStatResultDeny = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatResultDeny.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatResultDeny.setDescription('The total sessions resulted deny ending in the system')
apmAccessStatResultRedirect = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatResultRedirect.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatResultRedirect.setDescription('The total sessions redirected to the configured URI after closing the session in the system')
apmAccessStatResultRedirectWithSession = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatResultRedirectWithSession.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatResultRedirectWithSession.setDescription('The total sessions redirected to the configured URI without closing the session in the system')
apmAccessStatSessionsEvalTimedOut = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatSessionsEvalTimedOut.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatSessionsEvalTimedOut.setDescription('The total sessions terminated due to inactivity while going through access\n\t    policy evaluation in the system')
apmAccessStatSessionsEstabTimedOut = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 4, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAccessStatSessionsEstabTimedOut.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatSessionsEstabTimedOut.setDescription('The total sessions terminated due to inactivity after completed access\n\t    policy evaluation in the system')
apmGlobalConnectivityStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmGlobalConnectivityStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmGlobalConnectivityStatResetStats.setDescription('The action to reset resettable statistics data in apmGlobalConnectivityStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmGlobalConnectivityStatTotConns = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 5, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalConnectivityStatTotConns.setStatus('current')
if mibBuilder.loadTexts: apmGlobalConnectivityStatTotConns.setDescription('The total connectivity sessions in the system')
apmGlobalConnectivityStatCurConns = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 5, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalConnectivityStatCurConns.setStatus('current')
if mibBuilder.loadTexts: apmGlobalConnectivityStatCurConns.setDescription('The current connectivity sessions in the system')
apmGlobalConnectivityStatMaxConns = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 5, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalConnectivityStatMaxConns.setStatus('current')
if mibBuilder.loadTexts: apmGlobalConnectivityStatMaxConns.setDescription('The max connectivity sessions in the system')
apmGlobalConnectivityStatIngressRaw = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 5, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalConnectivityStatIngressRaw.setStatus('current')
if mibBuilder.loadTexts: apmGlobalConnectivityStatIngressRaw.setDescription('The total raw bytes received by connectivity sessions in the system')
apmGlobalConnectivityStatEgressRaw = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 5, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalConnectivityStatEgressRaw.setStatus('current')
if mibBuilder.loadTexts: apmGlobalConnectivityStatEgressRaw.setDescription('The total raw bytes transmitted by connectivity sessions in the system')
apmGlobalConnectivityStatIngressCompressed = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 5, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalConnectivityStatIngressCompressed.setStatus('current')
if mibBuilder.loadTexts: apmGlobalConnectivityStatIngressCompressed.setDescription('The total compressed bytes received by connectivity sessions in the system')
apmGlobalConnectivityStatEgressCompressed = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 5, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalConnectivityStatEgressCompressed.setStatus('current')
if mibBuilder.loadTexts: apmGlobalConnectivityStatEgressCompressed.setDescription('The total compressed bytes transmitted by connectivity sessions in the system')
apmGlobalRewriteStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmGlobalRewriteStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmGlobalRewriteStatResetStats.setDescription('The action to reset resettable statistics data in apmGlobalRewriteStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmGlobalRewriteStatClientReqBytes = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 6, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalRewriteStatClientReqBytes.setStatus('current')
if mibBuilder.loadTexts: apmGlobalRewriteStatClientReqBytes.setDescription('The total number of bytes received from the client requests')
apmGlobalRewriteStatClientRespBytes = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 6, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalRewriteStatClientRespBytes.setStatus('current')
if mibBuilder.loadTexts: apmGlobalRewriteStatClientRespBytes.setDescription('The total number of bytes sent in the client responses')
apmGlobalRewriteStatServerReqBytes = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 6, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalRewriteStatServerReqBytes.setStatus('current')
if mibBuilder.loadTexts: apmGlobalRewriteStatServerReqBytes.setDescription('The total number of bytes sent in the server requests')
apmGlobalRewriteStatServerRespBytes = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 6, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalRewriteStatServerRespBytes.setStatus('current')
if mibBuilder.loadTexts: apmGlobalRewriteStatServerRespBytes.setDescription('The total number of bytes received from the server responses')
apmGlobalRewriteStatClientReqs = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 6, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalRewriteStatClientReqs.setStatus('current')
if mibBuilder.loadTexts: apmGlobalRewriteStatClientReqs.setDescription('The total number of the client requests received')
apmGlobalRewriteStatClientResps = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 6, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalRewriteStatClientResps.setStatus('current')
if mibBuilder.loadTexts: apmGlobalRewriteStatClientResps.setDescription('The total number of the client responses sent')
apmGlobalRewriteStatServerReqs = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 6, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalRewriteStatServerReqs.setStatus('current')
if mibBuilder.loadTexts: apmGlobalRewriteStatServerReqs.setDescription('The total number requests sent to the server')
apmGlobalRewriteStatServerResps = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 6, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalRewriteStatServerResps.setStatus('current')
if mibBuilder.loadTexts: apmGlobalRewriteStatServerResps.setDescription('The total number responses received from the server')
apmLeasepoolStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmLeasepoolStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatResetStats.setDescription('The action to reset resettable statistics data in apmLeasepoolStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmLeasepoolStatNumber = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatNumber.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatNumber.setDescription('The number of apmLeasepoolStat entries in the table.')
apmLeasepoolStatTable = MibTable((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3), )
if mibBuilder.loadTexts: apmLeasepoolStatTable.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatTable.setDescription('A table containing statistic information of ipv4 leasepools.')
apmLeasepoolStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1), ).setIndexNames((0, "F5-BIGIP-APM-MIB", "apmLeasepoolStatName"))
if mibBuilder.loadTexts: apmLeasepoolStatEntry.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatEntry.setDescription('Columns in the apmLeasepoolStat Table')
apmLeasepoolStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1, 1), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatName.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatName.setDescription('The name of a leasepool')
apmLeasepoolStatCurMembers = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatCurMembers.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatCurMembers.setDescription('The current number of IPv4 addresses in the leasepool')
apmLeasepoolStatCurAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatCurAssigned.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatCurAssigned.setDescription('The number of IPv4 addresses currently assigned to user sessions')
apmLeasepoolStatCurFree = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatCurFree.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatCurFree.setDescription('The number of available/free IPv4 addresses in the leasepool')
apmLeasepoolStatMaxAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatMaxAssigned.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatMaxAssigned.setDescription('The max number of IPv4 addresses assigned at any single time in the leasepool since last stats reset')
apmLeasepoolStatTotPickRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatTotPickRequests.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatTotPickRequests.setDescription('The total number of requests for IPv4 addresses from active unit in HA pair')
apmLeasepoolStatTotPickFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatTotPickFailure.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatTotPickFailure.setDescription('The total number of failures to assign an IPv4 address')
apmLeasepoolStatTotReserveRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatTotReserveRequests.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatTotReserveRequests.setDescription('The total number of requests for specific IPv4 address from standby unit in HA pair')
apmLeasepoolStatTotReserveFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatTotReserveFailure.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatTotReserveFailure.setDescription('The total number of failures to reserve a specific IPv4 address')
apmLeasepoolStatTotReleaseRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatTotReleaseRequests.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatTotReleaseRequests.setDescription('The total number of requests to release IPv4 address for either active or standby')
apmLeasepoolStatTotReleaseFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 2, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmLeasepoolStatTotReleaseFailure.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatTotReleaseFailure.setDescription('The total number of failures to release IP address')
apmAclStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmAclStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmAclStatResetStats.setDescription('The action to reset resettable statistics data in apmAclStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmAclStatNumber = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAclStatNumber.setStatus('current')
if mibBuilder.loadTexts: apmAclStatNumber.setDescription('The number of apmAclStat entries in the table.')
apmAclStatTable = MibTable((1, 3, 6, 1, 4, 1, 3375, 2, 6, 3, 1, 3), )
if mibBuilder.loadTexts: apmAclStatTable.setStatus('current')
if mibBuilder.loadTexts: apmAclStatTable.setDescription('A table containing statistic information of Acls.')
apmAclStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3375, 2, 6, 3, 1, 3, 1), ).setIndexNames((0, "F5-BIGIP-APM-MIB", "apmAclStatName"))
if mibBuilder.loadTexts: apmAclStatEntry.setStatus('current')
if mibBuilder.loadTexts: apmAclStatEntry.setDescription('Columns in the apmAclStat Table')
apmAclStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 3, 1, 3, 1, 1), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAclStatName.setStatus('current')
if mibBuilder.loadTexts: apmAclStatName.setDescription('The name of a acl')
apmAclStatActionAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 3, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAclStatActionAllow.setStatus('current')
if mibBuilder.loadTexts: apmAclStatActionAllow.setDescription('The number of times allow action executed')
apmAclStatActionContinue = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 3, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAclStatActionContinue.setStatus('current')
if mibBuilder.loadTexts: apmAclStatActionContinue.setDescription('The number of times continue action executed')
apmAclStatActionDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 3, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAclStatActionDiscard.setStatus('current')
if mibBuilder.loadTexts: apmAclStatActionDiscard.setDescription('The number of times discard action executed')
apmAclStatActionReject = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 3, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmAclStatActionReject.setStatus('current')
if mibBuilder.loadTexts: apmAclStatActionReject.setDescription('The number of times reject action executed')
apmGlobalLicenseStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 9, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmGlobalLicenseStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmGlobalLicenseStatResetStats.setDescription('The action to reset resettable statistics data in apmGlobalLicenseStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmGlobalLicenseStatTotalAccessSessions = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 9, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalLicenseStatTotalAccessSessions.setStatus('current')
if mibBuilder.loadTexts: apmGlobalLicenseStatTotalAccessSessions.setDescription('The total access session licenses in the system')
apmGlobalLicenseStatTotalConnectivitySessions = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 9, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalLicenseStatTotalConnectivitySessions.setStatus('current')
if mibBuilder.loadTexts: apmGlobalLicenseStatTotalConnectivitySessions.setDescription('The total connectivity session licenses in the system')
apmGlobalLicenseStatTotalSwgSessions = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 9, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalLicenseStatTotalSwgSessions.setStatus('current')
if mibBuilder.loadTexts: apmGlobalLicenseStatTotalSwgSessions.setDescription('The total secure web gateway session licenses in the system')
apmGlobalLicenseStatTotalSwgLimitedSessions = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 1, 9, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmGlobalLicenseStatTotalSwgLimitedSessions.setStatus('current')
if mibBuilder.loadTexts: apmGlobalLicenseStatTotalSwgLimitedSessions.setDescription('The total secure web gateway limited session licenses in the system')
apmIpv6LeasepoolStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatResetStats.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatResetStats.setDescription('The action to reset resettable statistics data in apmIpv6LeasepoolStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
apmIpv6LeasepoolStatNumber = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatNumber.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatNumber.setDescription('The number of apmIpv6LeasepoolStat entries in the table.')
apmIpv6LeasepoolStatTable = MibTable((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3), )
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTable.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTable.setDescription('A table containing statistic information of ipv6 leasepools.')
apmIpv6LeasepoolStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1), ).setIndexNames((0, "F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatName"))
if mibBuilder.loadTexts: apmIpv6LeasepoolStatEntry.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatEntry.setDescription('Columns in the apmIpv6LeasepoolStat Table')
apmIpv6LeasepoolStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1, 1), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatName.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatName.setDescription('The name of a leasepool')
apmIpv6LeasepoolStatCurMembers = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatCurMembers.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatCurMembers.setDescription('The current number of IPv6 addresses in the leasepool')
apmIpv6LeasepoolStatCurAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatCurAssigned.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatCurAssigned.setDescription('The number of IPv6 addresses currently assigned to user sessions')
apmIpv6LeasepoolStatCurFree = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatCurFree.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatCurFree.setDescription('The number of available/free IPv6 addresses in the leasepool')
apmIpv6LeasepoolStatMaxAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatMaxAssigned.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatMaxAssigned.setDescription('The max number of IPv6 addresses assigned at any single time in the leasepool since last stats reset')
apmIpv6LeasepoolStatTotPickRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotPickRequests.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotPickRequests.setDescription('The total number of requests for IPv6 addresses from active unit in HA pair')
apmIpv6LeasepoolStatTotPickFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotPickFailure.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotPickFailure.setDescription('The total number of failures to assign an IPv6 address')
apmIpv6LeasepoolStatTotReserveRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotReserveRequests.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotReserveRequests.setDescription('The total number of requests for specific IPv6 address from standby unit in HA pair')
apmIpv6LeasepoolStatTotReserveFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotReserveFailure.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotReserveFailure.setDescription('The total number of failures to reserve a specific IPv6 address')
apmIpv6LeasepoolStatTotReleaseRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotReleaseRequests.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotReleaseRequests.setDescription('The total number of requests to release IPv6 address for either active or standby')
apmIpv6LeasepoolStatTotReleaseFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 6, 4, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotReleaseFailure.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatTotReleaseFailure.setDescription('The total number of failures to release IPv6 address')
bigipApmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3375, 2, 5, 1, 6)).setObjects(("F5-BIGIP-APM-MIB", "bigipApmGroups"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bigipApmCompliance = bigipApmCompliance.setStatus('current')
if mibBuilder.loadTexts: bigipApmCompliance.setDescription('This specifies the objects that are required to claim \n                 compliance to F5 Traffic Management System.')
bigipApmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6))
apmPaStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 1)).setObjects(("F5-BIGIP-APM-MIB", "apmPaStatResetStats"), ("F5-BIGIP-APM-MIB", "apmPaStatNumber"), ("F5-BIGIP-APM-MIB", "apmPaStatName"), ("F5-BIGIP-APM-MIB", "apmPaStatConfigSyncState"), ("F5-BIGIP-APM-MIB", "apmPaStatTotalSessions"), ("F5-BIGIP-APM-MIB", "apmPaStatTotalEstablishedStateSessions"), ("F5-BIGIP-APM-MIB", "apmPaStatCurrentActiveSessions"), ("F5-BIGIP-APM-MIB", "apmPaStatCurrentPendingSessions"), ("F5-BIGIP-APM-MIB", "apmPaStatCurrentCompletedSessions"), ("F5-BIGIP-APM-MIB", "apmPaStatUserLoggedoutSessions"), ("F5-BIGIP-APM-MIB", "apmPaStatAdminTerminatedSessions"), ("F5-BIGIP-APM-MIB", "apmPaStatMiscTerminatedSessions"), ("F5-BIGIP-APM-MIB", "apmPaStatAccessPolicyResultAllow"), ("F5-BIGIP-APM-MIB", "apmPaStatAccessPolicyResultDeny"), ("F5-BIGIP-APM-MIB", "apmPaStatAccessPolicyResultRedirect"), ("F5-BIGIP-APM-MIB", "apmPaStatAccessPolicyResultRedirectWithSession"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingDenyAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingDenyAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingDenyAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingDenyAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingDenyAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingDenyAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingRedirectAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingRedirectAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingRedirectAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingRedirectAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingRedirectAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingRedirectAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingAllowAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingAllowAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingAllowAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingAllowAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingAllowAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEndingAllowAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatAdAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatAdAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatAdAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatAdAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatAdAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatAdAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatClientCertAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatClientCertAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatClientCertAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatClientCertAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatClientCertAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatClientCertAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatHttpAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatHttpAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatHttpAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatHttpAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatHttpAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatHttpAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatLdapAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatLdapAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatLdapAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatLdapAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatLdapAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatLdapAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatSecuridAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatSecuridAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatSecuridAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatSecuridAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatSecuridAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatSecuridAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAcctAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAcctAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAcctAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAcctAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAcctAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatRadiusAcctAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxFcAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxFcAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxFcAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxFcAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxFcAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxFcAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxPcAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxPcAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxPcAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxPcAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxPcAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsLinuxPcAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacFcAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacFcAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacFcAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacFcAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacFcAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacFcAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacPcAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacPcAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacPcAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacPcAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacPcAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsMacPcAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinCcAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinCcAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinCcAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinCcAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinCcAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinCcAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsAvAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsAvAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsAvAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsAvAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsAvAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsAvAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinOsInfoAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinOsInfoAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinOsInfoAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinOsInfoAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinOsInfoAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinOsInfoAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinFcAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinFcAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinFcAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinFcAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinFcAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinFcAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinMcAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinMcAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinMcAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinMcAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinMcAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinMcAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsFwcAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsFwcAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsFwcAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsFwcAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsFwcAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsFwcAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPcTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPcTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPcTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPcTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPcTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPcTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPwTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPwTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPwTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPwTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPwTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinPwTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinRcAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinRcAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinRcAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinRcAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinRcAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinRcAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinGpAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinGpAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinGpAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinGpAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinGpAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatEpsWinGpAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatExternalLogonAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatExternalLogonAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatExternalLogonAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatExternalLogonAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatExternalLogonAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatExternalLogonAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatLogonAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatLogonAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatLogonAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatLogonAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatLogonAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatLogonAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatRaAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatRaAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatRaAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatRaAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatRaAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatRaAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatRdsAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatRdsAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatRdsAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatRdsAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatRdsAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatRdsAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatVaAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatVaAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatVaAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatVaAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatVaAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatVaAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatIeAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatIeAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatIeAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatIeAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatIeAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatIeAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatLoggingAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatLoggingAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatLoggingAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatLoggingAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatLoggingAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatLoggingAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatDecnBoxAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatDecnBoxAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatDecnBoxAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatDecnBoxAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatDecnBoxAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatDecnBoxAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatMesgBoxAgentTotalInstances"), ("F5-BIGIP-APM-MIB", "apmPaStatMesgBoxAgentTotalUsages"), ("F5-BIGIP-APM-MIB", "apmPaStatMesgBoxAgentTotalSuccesses"), ("F5-BIGIP-APM-MIB", "apmPaStatMesgBoxAgentTotalFailures"), ("F5-BIGIP-APM-MIB", "apmPaStatMesgBoxAgentTotalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatMesgBoxAgentTotalSessVars"), ("F5-BIGIP-APM-MIB", "apmPaStatApdNoResultErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatApdNoSessionErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatApdNoDeviceInfoErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatApdNoTokenErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatApdNoSigErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatApdTotalMismatchErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatApdInvalidSigErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatApdMcPipelineInitErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatApdMcSetSessVarErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatApdMcPipelineCloseErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatApdApResultErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatApdApInternalErrors"), ("F5-BIGIP-APM-MIB", "apmPaStatAllowedRequests"), ("F5-BIGIP-APM-MIB", "apmPaStatDeniedRequests"), ("F5-BIGIP-APM-MIB", "apmPaStatVsName"), ("F5-BIGIP-APM-MIB", "apmPaStatSessionsEvalTimedOut"), ("F5-BIGIP-APM-MIB", "apmPaStatSessionsEstabTimedOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmPaStatGroup = apmPaStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmPaStatGroup.setDescription('A collection of objects of apmProfileAccessStat MIB.')
apmPcStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 2)).setObjects(("F5-BIGIP-APM-MIB", "apmPcStatResetStats"), ("F5-BIGIP-APM-MIB", "apmPcStatNumber"), ("F5-BIGIP-APM-MIB", "apmPcStatName"), ("F5-BIGIP-APM-MIB", "apmPcStatTotConns"), ("F5-BIGIP-APM-MIB", "apmPcStatCurConns"), ("F5-BIGIP-APM-MIB", "apmPcStatMaxConns"), ("F5-BIGIP-APM-MIB", "apmPcStatIngressRaw"), ("F5-BIGIP-APM-MIB", "apmPcStatEgressRaw"), ("F5-BIGIP-APM-MIB", "apmPcStatIngressCompressed"), ("F5-BIGIP-APM-MIB", "apmPcStatEgressCompressed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmPcStatGroup = apmPcStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmPcStatGroup.setDescription('A collection of objects of apmProfileConnectivityStat MIB.')
apmPrStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 3)).setObjects(("F5-BIGIP-APM-MIB", "apmPrStatResetStats"), ("F5-BIGIP-APM-MIB", "apmPrStatNumber"), ("F5-BIGIP-APM-MIB", "apmPrStatName"), ("F5-BIGIP-APM-MIB", "apmPrStatClientReqBytes"), ("F5-BIGIP-APM-MIB", "apmPrStatClientRespBytes"), ("F5-BIGIP-APM-MIB", "apmPrStatServerReqBytes"), ("F5-BIGIP-APM-MIB", "apmPrStatServerRespBytes"), ("F5-BIGIP-APM-MIB", "apmPrStatClientReqs"), ("F5-BIGIP-APM-MIB", "apmPrStatClientResps"), ("F5-BIGIP-APM-MIB", "apmPrStatServerReqs"), ("F5-BIGIP-APM-MIB", "apmPrStatServerResps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmPrStatGroup = apmPrStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmPrStatGroup.setDescription('A collection of objects of apmProfileRewriteStat MIB.')
apmPgStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 4)).setObjects(("F5-BIGIP-APM-MIB", "apmPgStatResetStats"), ("F5-BIGIP-APM-MIB", "apmPgStatNumber"), ("F5-BIGIP-APM-MIB", "apmPgStatName"), ("F5-BIGIP-APM-MIB", "apmPgStatAgentName"), ("F5-BIGIP-APM-MIB", "apmPgStatInstances"), ("F5-BIGIP-APM-MIB", "apmPgStatUsages"), ("F5-BIGIP-APM-MIB", "apmPgStatSuccesses"), ("F5-BIGIP-APM-MIB", "apmPgStatFailures"), ("F5-BIGIP-APM-MIB", "apmPgStatErrors"), ("F5-BIGIP-APM-MIB", "apmPgStatSessionVars"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmPgStatGroup = apmPgStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmPgStatGroup.setDescription('A collection of objects of apmProfileAccessAgentStat MIB.')
apmPmStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 5)).setObjects(("F5-BIGIP-APM-MIB", "apmPmStatResetStats"), ("F5-BIGIP-APM-MIB", "apmPmStatNumber"), ("F5-BIGIP-APM-MIB", "apmPmStatName"), ("F5-BIGIP-APM-MIB", "apmPmStatConfigSyncState"), ("F5-BIGIP-APM-MIB", "apmPmStatInspResultError"), ("F5-BIGIP-APM-MIB", "apmPmStatInspSessionError"), ("F5-BIGIP-APM-MIB", "apmPmStatInspDeviceInfoError"), ("F5-BIGIP-APM-MIB", "apmPmStatInspTokenError"), ("F5-BIGIP-APM-MIB", "apmPmStatInspSignatureError"), ("F5-BIGIP-APM-MIB", "apmPmStatInspDataMsmtchError"), ("F5-BIGIP-APM-MIB", "apmPmStatInspClientSignError"), ("F5-BIGIP-APM-MIB", "apmPmStatMemInitError"), ("F5-BIGIP-APM-MIB", "apmPmStatMemSessionVarError"), ("F5-BIGIP-APM-MIB", "apmPmStatMemCloseError"), ("F5-BIGIP-APM-MIB", "apmPmStatResultError"), ("F5-BIGIP-APM-MIB", "apmPmStatInternalError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmPmStatGroup = apmPmStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmPmStatGroup.setDescription('A collection of objects of apmProfileAccessMiscStat MIB.')
apmAccessStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 6)).setObjects(("F5-BIGIP-APM-MIB", "apmAccessStatResetStats"), ("F5-BIGIP-APM-MIB", "apmAccessStatTotalSessions"), ("F5-BIGIP-APM-MIB", "apmAccessStatCurrentActiveSessions"), ("F5-BIGIP-APM-MIB", "apmAccessStatCurrentPendingSessions"), ("F5-BIGIP-APM-MIB", "apmAccessStatCurrentEndedSessions"), ("F5-BIGIP-APM-MIB", "apmAccessStatUserLoggedoutSessions"), ("F5-BIGIP-APM-MIB", "apmAccessStatAdminTerminatedSessions"), ("F5-BIGIP-APM-MIB", "apmAccessStatMiscTerminatedSessions"), ("F5-BIGIP-APM-MIB", "apmAccessStatResultAllow"), ("F5-BIGIP-APM-MIB", "apmAccessStatResultDeny"), ("F5-BIGIP-APM-MIB", "apmAccessStatResultRedirect"), ("F5-BIGIP-APM-MIB", "apmAccessStatResultRedirectWithSession"), ("F5-BIGIP-APM-MIB", "apmAccessStatSessionsEvalTimedOut"), ("F5-BIGIP-APM-MIB", "apmAccessStatSessionsEstabTimedOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmAccessStatGroup = apmAccessStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmAccessStatGroup.setDescription('A collection of objects of apmAccessStat MIB.')
apmGlobalConnectivityStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 7)).setObjects(("F5-BIGIP-APM-MIB", "apmGlobalConnectivityStatResetStats"), ("F5-BIGIP-APM-MIB", "apmGlobalConnectivityStatTotConns"), ("F5-BIGIP-APM-MIB", "apmGlobalConnectivityStatCurConns"), ("F5-BIGIP-APM-MIB", "apmGlobalConnectivityStatMaxConns"), ("F5-BIGIP-APM-MIB", "apmGlobalConnectivityStatIngressRaw"), ("F5-BIGIP-APM-MIB", "apmGlobalConnectivityStatEgressRaw"), ("F5-BIGIP-APM-MIB", "apmGlobalConnectivityStatIngressCompressed"), ("F5-BIGIP-APM-MIB", "apmGlobalConnectivityStatEgressCompressed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmGlobalConnectivityStatGroup = apmGlobalConnectivityStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmGlobalConnectivityStatGroup.setDescription('A collection of objects of apmGlobalConnectivityStat MIB.')
apmGlobalRewriteStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 8)).setObjects(("F5-BIGIP-APM-MIB", "apmGlobalRewriteStatResetStats"), ("F5-BIGIP-APM-MIB", "apmGlobalRewriteStatClientReqBytes"), ("F5-BIGIP-APM-MIB", "apmGlobalRewriteStatClientRespBytes"), ("F5-BIGIP-APM-MIB", "apmGlobalRewriteStatServerReqBytes"), ("F5-BIGIP-APM-MIB", "apmGlobalRewriteStatServerRespBytes"), ("F5-BIGIP-APM-MIB", "apmGlobalRewriteStatClientReqs"), ("F5-BIGIP-APM-MIB", "apmGlobalRewriteStatClientResps"), ("F5-BIGIP-APM-MIB", "apmGlobalRewriteStatServerReqs"), ("F5-BIGIP-APM-MIB", "apmGlobalRewriteStatServerResps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmGlobalRewriteStatGroup = apmGlobalRewriteStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmGlobalRewriteStatGroup.setDescription('A collection of objects of apmGlobalRewriteStat MIB.')
apmLeasepoolStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 9)).setObjects(("F5-BIGIP-APM-MIB", "apmLeasepoolStatResetStats"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatNumber"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatName"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatCurMembers"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatCurAssigned"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatCurFree"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatMaxAssigned"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatTotPickRequests"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatTotPickFailure"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatTotReserveRequests"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatTotReserveFailure"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatTotReleaseRequests"), ("F5-BIGIP-APM-MIB", "apmLeasepoolStatTotReleaseFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmLeasepoolStatGroup = apmLeasepoolStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmLeasepoolStatGroup.setDescription('A collection of objects of apmLeasepoolStat MIB.')
apmAclStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 10)).setObjects(("F5-BIGIP-APM-MIB", "apmAclStatResetStats"), ("F5-BIGIP-APM-MIB", "apmAclStatNumber"), ("F5-BIGIP-APM-MIB", "apmAclStatName"), ("F5-BIGIP-APM-MIB", "apmAclStatActionAllow"), ("F5-BIGIP-APM-MIB", "apmAclStatActionContinue"), ("F5-BIGIP-APM-MIB", "apmAclStatActionDiscard"), ("F5-BIGIP-APM-MIB", "apmAclStatActionReject"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmAclStatGroup = apmAclStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmAclStatGroup.setDescription('A collection of objects of apmAclStat MIB.')
apmGlobalLicenseStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 11)).setObjects(("F5-BIGIP-APM-MIB", "apmGlobalLicenseStatResetStats"), ("F5-BIGIP-APM-MIB", "apmGlobalLicenseStatTotalAccessSessions"), ("F5-BIGIP-APM-MIB", "apmGlobalLicenseStatTotalConnectivitySessions"), ("F5-BIGIP-APM-MIB", "apmGlobalLicenseStatTotalSwgSessions"), ("F5-BIGIP-APM-MIB", "apmGlobalLicenseStatTotalSwgLimitedSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmGlobalLicenseStatGroup = apmGlobalLicenseStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmGlobalLicenseStatGroup.setDescription('A collection of objects of apmGlobalLicenseStat MIB.')
apmIpv6LeasepoolStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 6, 12)).setObjects(("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatResetStats"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatNumber"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatName"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatCurMembers"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatCurAssigned"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatCurFree"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatMaxAssigned"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatTotPickRequests"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatTotPickFailure"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatTotReserveRequests"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatTotReserveFailure"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatTotReleaseRequests"), ("F5-BIGIP-APM-MIB", "apmIpv6LeasepoolStatTotReleaseFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apmIpv6LeasepoolStatGroup = apmIpv6LeasepoolStatGroup.setStatus('current')
if mibBuilder.loadTexts: apmIpv6LeasepoolStatGroup.setDescription('A collection of objects of apmIpv6LeasepoolStat MIB.')
mibBuilder.exportSymbols("F5-BIGIP-APM-MIB", apmPaStatRdsAgentTotalSuccesses=apmPaStatRdsAgentTotalSuccesses, apmPaStatEpsWinPwTotalErrors=apmPaStatEpsWinPwTotalErrors, apmPaStatEpsMacPcAgentTotalSuccesses=apmPaStatEpsMacPcAgentTotalSuccesses, apmPaStatRdsAgentTotalFailures=apmPaStatRdsAgentTotalFailures, apmPaStatSecuridAgentTotalFailures=apmPaStatSecuridAgentTotalFailures, apmGlobalLicenseStatTotalConnectivitySessions=apmGlobalLicenseStatTotalConnectivitySessions, apmPaStatRdsAgentTotalErrors=apmPaStatRdsAgentTotalErrors, apmIpv6LeasepoolStatName=apmIpv6LeasepoolStatName, apmPaStatDecnBoxAgentTotalInstances=apmPaStatDecnBoxAgentTotalInstances, apmPmStatMemInitError=apmPmStatMemInitError, apmPaStatEpsAvAgentTotalErrors=apmPaStatEpsAvAgentTotalErrors, apmPmStatInspSignatureError=apmPmStatInspSignatureError, apmPaStatClientCertAgentTotalSessVars=apmPaStatClientCertAgentTotalSessVars, bigipApm=bigipApm, apmPaStatCurrentPendingSessions=apmPaStatCurrentPendingSessions, apmPmStatInspTokenError=apmPmStatInspTokenError, apmPaStatEpsWinGpAgentTotalSuccesses=apmPaStatEpsWinGpAgentTotalSuccesses, apmPaStatEpsLinuxFcAgentTotalUsages=apmPaStatEpsLinuxFcAgentTotalUsages, apmPrStatClientReqBytes=apmPrStatClientReqBytes, apmPaStatClientCertAgentTotalUsages=apmPaStatClientCertAgentTotalUsages, apmPmStatMemCloseError=apmPmStatMemCloseError, apmIpv6Leasepool=apmIpv6Leasepool, apmPaStatEpsFwcAgentTotalErrors=apmPaStatEpsFwcAgentTotalErrors, apmPaStatRaAgentTotalErrors=apmPaStatRaAgentTotalErrors, apmPgStatResetStats=apmPgStatResetStats, apmPaStatRaAgentTotalInstances=apmPaStatRaAgentTotalInstances, apmPaStatEpsLinuxFcAgentTotalErrors=apmPaStatEpsLinuxFcAgentTotalErrors, apmPaStatEpsMacPcAgentTotalUsages=apmPaStatEpsMacPcAgentTotalUsages, apmPaStatEpsMacFcAgentTotalInstances=apmPaStatEpsMacFcAgentTotalInstances, apmGlobalLicenseStatTotalSwgLimitedSessions=apmGlobalLicenseStatTotalSwgLimitedSessions, apmAccessStatAdminTerminatedSessions=apmAccessStatAdminTerminatedSessions, apmIpv6LeasepoolStatGroup=apmIpv6LeasepoolStatGroup, bigipApmGroups=bigipApmGroups, apmPcStatTable=apmPcStatTable, apmPcStatNumber=apmPcStatNumber, apmPgStatSessionVars=apmPgStatSessionVars, apmLeasepoolStatCurAssigned=apmLeasepoolStatCurAssigned, apmPaStatDecnBoxAgentTotalFailures=apmPaStatDecnBoxAgentTotalFailures, apmAccessStatSessionsEvalTimedOut=apmAccessStatSessionsEvalTimedOut, apmPaStatEpsFwcAgentTotalSuccesses=apmPaStatEpsFwcAgentTotalSuccesses, apmPcStatGroup=apmPcStatGroup, apmPaStatEpsWinCcAgentTotalSessVars=apmPaStatEpsWinCcAgentTotalSessVars, apmPaStatExternalLogonAgentTotalSuccesses=apmPaStatExternalLogonAgentTotalSuccesses, apmProfileAccessStat=apmProfileAccessStat, apmAclStatNumber=apmAclStatNumber, apmPaStatMiscTerminatedSessions=apmPaStatMiscTerminatedSessions, apmLeasepoolStatName=apmLeasepoolStatName, apmPaStatEpsWinFcAgentTotalErrors=apmPaStatEpsWinFcAgentTotalErrors, apmPaStatEpsWinRcAgentTotalInstances=apmPaStatEpsWinRcAgentTotalInstances, apmPaStatEpsMacFcAgentTotalErrors=apmPaStatEpsMacFcAgentTotalErrors, apmPaStatEpsWinCcAgentTotalInstances=apmPaStatEpsWinCcAgentTotalInstances, apmPaStatTotalSessions=apmPaStatTotalSessions, apmPaStatRaAgentTotalSuccesses=apmPaStatRaAgentTotalSuccesses, apmPaStatSessionsEvalTimedOut=apmPaStatSessionsEvalTimedOut, apmPaStatSecuridAgentTotalUsages=apmPaStatSecuridAgentTotalUsages, apmAccessStatResultRedirectWithSession=apmAccessStatResultRedirectWithSession, apmPaStatEpsWinPcTotalSessVars=apmPaStatEpsWinPcTotalSessVars, apmAccessStatCurrentActiveSessions=apmAccessStatCurrentActiveSessions, apmPaStatEpsWinCcAgentTotalFailures=apmPaStatEpsWinCcAgentTotalFailures, apmLeasepoolStatTotReserveFailure=apmLeasepoolStatTotReserveFailure, apmPaStatEpsWinFcAgentTotalFailures=apmPaStatEpsWinFcAgentTotalFailures, apmPaStatAllowedRequests=apmPaStatAllowedRequests, apmIpv6LeasepoolStatTotReleaseRequests=apmIpv6LeasepoolStatTotReleaseRequests, apmPaStatLogonAgentTotalSuccesses=apmPaStatLogonAgentTotalSuccesses, apmAccessStatResultDeny=apmAccessStatResultDeny, apmPaStatEndingDenyAgentTotalUsages=apmPaStatEndingDenyAgentTotalUsages, apmLeasepoolStatTotPickRequests=apmLeasepoolStatTotPickRequests, apmPaStatRadiusAgentTotalUsages=apmPaStatRadiusAgentTotalUsages, apmGlobalRewriteStatGroup=apmGlobalRewriteStatGroup, apmPaStatCurrentActiveSessions=apmPaStatCurrentActiveSessions, apmPrStatGroup=apmPrStatGroup, apmPaStatRaAgentTotalSessVars=apmPaStatRaAgentTotalSessVars, apmAccessStatResultAllow=apmAccessStatResultAllow, apmPaStatEpsLinuxPcAgentTotalFailures=apmPaStatEpsLinuxPcAgentTotalFailures, apmPaStatVaAgentTotalSuccesses=apmPaStatVaAgentTotalSuccesses, apmPaStatEpsWinMcAgentTotalSuccesses=apmPaStatEpsWinMcAgentTotalSuccesses, apmPaStatExternalLogonAgentTotalFailures=apmPaStatExternalLogonAgentTotalFailures, apmAccessStatCurrentPendingSessions=apmAccessStatCurrentPendingSessions, apmPaStatEndingRedirectAgentTotalSessVars=apmPaStatEndingRedirectAgentTotalSessVars, apmAclStatActionDiscard=apmAclStatActionDiscard, apmPrStatClientReqs=apmPrStatClientReqs, apmPcStatEgressCompressed=apmPcStatEgressCompressed, apmPaStatEpsFwcAgentTotalInstances=apmPaStatEpsFwcAgentTotalInstances, apmAccessStatSessionsEstabTimedOut=apmAccessStatSessionsEstabTimedOut, apmPaStatEpsWinFcAgentTotalInstances=apmPaStatEpsWinFcAgentTotalInstances, apmPaStatRadiusAcctAgentTotalFailures=apmPaStatRadiusAcctAgentTotalFailures, apmPaStatEndingDenyAgentTotalErrors=apmPaStatEndingDenyAgentTotalErrors, bigipApmCompliance=bigipApmCompliance, apmPaStatEpsWinFcAgentTotalUsages=apmPaStatEpsWinFcAgentTotalUsages, apmPaStatEpsWinRcAgentTotalFailures=apmPaStatEpsWinRcAgentTotalFailures, apmLeasepoolStatTotReleaseRequests=apmLeasepoolStatTotReleaseRequests, apmPaStatClientCertAgentTotalFailures=apmPaStatClientCertAgentTotalFailures, apmPaStatEpsMacFcAgentTotalSessVars=apmPaStatEpsMacFcAgentTotalSessVars, apmPaStatHttpAgentTotalFailures=apmPaStatHttpAgentTotalFailures, apmPaStatEpsWinPwTotalInstances=apmPaStatEpsWinPwTotalInstances, apmPgStatErrors=apmPgStatErrors, apmPaStatDecnBoxAgentTotalErrors=apmPaStatDecnBoxAgentTotalErrors, apmPaStatEpsFwcAgentTotalUsages=apmPaStatEpsFwcAgentTotalUsages, apmPaStatRdsAgentTotalSessVars=apmPaStatRdsAgentTotalSessVars, apmPaStatLogonAgentTotalSessVars=apmPaStatLogonAgentTotalSessVars, apmPcStatTotConns=apmPcStatTotConns, apmAccessStatCurrentEndedSessions=apmAccessStatCurrentEndedSessions, apmPaStatEpsWinOsInfoAgentTotalErrors=apmPaStatEpsWinOsInfoAgentTotalErrors, apmPaStatRdsAgentTotalUsages=apmPaStatRdsAgentTotalUsages, apmPaStatLdapAgentTotalFailures=apmPaStatLdapAgentTotalFailures, apmPaStatEpsWinPwTotalSuccesses=apmPaStatEpsWinPwTotalSuccesses, apmPrStatClientRespBytes=apmPrStatClientRespBytes, apmPaStatEpsWinMcAgentTotalFailures=apmPaStatEpsWinMcAgentTotalFailures, apmPcStatCurConns=apmPcStatCurConns, apmPaStatLoggingAgentTotalSessVars=apmPaStatLoggingAgentTotalSessVars, apmPrStatName=apmPrStatName, apmIpv6LeasepoolStatTotPickFailure=apmIpv6LeasepoolStatTotPickFailure, apmPaStatEpsLinuxPcAgentTotalSessVars=apmPaStatEpsLinuxPcAgentTotalSessVars, apmPaStatEpsWinGpAgentTotalErrors=apmPaStatEpsWinGpAgentTotalErrors, apmPaStatIeAgentTotalUsages=apmPaStatIeAgentTotalUsages, apmPaStatLdapAgentTotalErrors=apmPaStatLdapAgentTotalErrors, apmPaStatEpsWinPcTotalFailures=apmPaStatEpsWinPcTotalFailures, apmPaStatEpsWinMcAgentTotalUsages=apmPaStatEpsWinMcAgentTotalUsages, apmPaStatApdNoDeviceInfoErrors=apmPaStatApdNoDeviceInfoErrors, apmPaStatHttpAgentTotalSessVars=apmPaStatHttpAgentTotalSessVars, apmPrStatResetStats=apmPrStatResetStats, apmPaStatEpsWinCcAgentTotalUsages=apmPaStatEpsWinCcAgentTotalUsages, PYSNMP_MODULE_ID=bigipApm, apmPaStatDecnBoxAgentTotalSessVars=apmPaStatDecnBoxAgentTotalSessVars, apmPaStatHttpAgentTotalUsages=apmPaStatHttpAgentTotalUsages, apmPaStatLoggingAgentTotalFailures=apmPaStatLoggingAgentTotalFailures, apmPaStatRadiusAgentTotalErrors=apmPaStatRadiusAgentTotalErrors, apmPaStatAccessPolicyResultDeny=apmPaStatAccessPolicyResultDeny, apmGlobalConnectivityStatIngressRaw=apmGlobalConnectivityStatIngressRaw, apmPaStatLogonAgentTotalUsages=apmPaStatLogonAgentTotalUsages, apmGlobalRewriteStatClientReqBytes=apmGlobalRewriteStatClientReqBytes, apmPaStatRadiusAcctAgentTotalSessVars=apmPaStatRadiusAcctAgentTotalSessVars, apmGlobalRewriteStatResetStats=apmGlobalRewriteStatResetStats, apmPrStatServerReqBytes=apmPrStatServerReqBytes, apmPaStatApdMcPipelineCloseErrors=apmPaStatApdMcPipelineCloseErrors, apmPaStatEpsAvAgentTotalSuccesses=apmPaStatEpsAvAgentTotalSuccesses, apmPmStatInspSessionError=apmPmStatInspSessionError, apmGlobalRewriteStatClientReqs=apmGlobalRewriteStatClientReqs, apmPaStatApdNoSigErrors=apmPaStatApdNoSigErrors, apmGlobalConnectivityStatMaxConns=apmGlobalConnectivityStatMaxConns, apmPaStatEpsAvAgentTotalSessVars=apmPaStatEpsAvAgentTotalSessVars, apmGlobalRewriteStatServerReqBytes=apmGlobalRewriteStatServerReqBytes, apmPaStatEpsLinuxFcAgentTotalInstances=apmPaStatEpsLinuxFcAgentTotalInstances, apmPaStatLoggingAgentTotalInstances=apmPaStatLoggingAgentTotalInstances, apmPaStatTable=apmPaStatTable, apmPaStatAdAgentTotalSessVars=apmPaStatAdAgentTotalSessVars, apmPaStatApdApInternalErrors=apmPaStatApdApInternalErrors, apmPaStatEpsWinOsInfoAgentTotalUsages=apmPaStatEpsWinOsInfoAgentTotalUsages, apmPaStatVaAgentTotalUsages=apmPaStatVaAgentTotalUsages, apmPaStatRdsAgentTotalInstances=apmPaStatRdsAgentTotalInstances, apmPaStatSecuridAgentTotalErrors=apmPaStatSecuridAgentTotalErrors, apmPcStatResetStats=apmPcStatResetStats, apmPaStatEpsWinRcAgentTotalSessVars=apmPaStatEpsWinRcAgentTotalSessVars, apmPaStatEntry=apmPaStatEntry, apmIpv6LeasepoolStatTotReserveFailure=apmIpv6LeasepoolStatTotReserveFailure, apmAclStatResetStats=apmAclStatResetStats, apmPaStatEpsWinMcAgentTotalInstances=apmPaStatEpsWinMcAgentTotalInstances, apmGlobalConnectivityStatIngressCompressed=apmGlobalConnectivityStatIngressCompressed, apmPaStatApdNoResultErrors=apmPaStatApdNoResultErrors, apmProfileRewriteStat=apmProfileRewriteStat, apmGlobalConnectivityStatGroup=apmGlobalConnectivityStatGroup, apmPcStatIngressRaw=apmPcStatIngressRaw, apmPaStatEpsWinFcAgentTotalSessVars=apmPaStatEpsWinFcAgentTotalSessVars, apmPaStatMesgBoxAgentTotalUsages=apmPaStatMesgBoxAgentTotalUsages, apmPgStatAgentName=apmPgStatAgentName, apmPcStatEntry=apmPcStatEntry, apmPaStatEpsMacPcAgentTotalSessVars=apmPaStatEpsMacPcAgentTotalSessVars, apmPaStatEpsLinuxPcAgentTotalUsages=apmPaStatEpsLinuxPcAgentTotalUsages, apmPaStatIeAgentTotalSuccesses=apmPaStatIeAgentTotalSuccesses, apmAclStatActionReject=apmAclStatActionReject, apmPaStatEpsMacPcAgentTotalErrors=apmPaStatEpsMacPcAgentTotalErrors, apmPaStatClientCertAgentTotalInstances=apmPaStatClientCertAgentTotalInstances, apmPaStatEpsWinOsInfoAgentTotalSessVars=apmPaStatEpsWinOsInfoAgentTotalSessVars, apmPaStatEpsWinGpAgentTotalUsages=apmPaStatEpsWinGpAgentTotalUsages, apmLeasepoolStatTotReserveRequests=apmLeasepoolStatTotReserveRequests, apmPaStatEpsWinOsInfoAgentTotalSuccesses=apmPaStatEpsWinOsInfoAgentTotalSuccesses, apmPgStatGroup=apmPgStatGroup, apmPaStatMesgBoxAgentTotalSuccesses=apmPaStatMesgBoxAgentTotalSuccesses, apmPaStatEpsWinOsInfoAgentTotalFailures=apmPaStatEpsWinOsInfoAgentTotalFailures, apmPaStatAdAgentTotalSuccesses=apmPaStatAdAgentTotalSuccesses, apmPaStatEndingRedirectAgentTotalSuccesses=apmPaStatEndingRedirectAgentTotalSuccesses, apmPgStatInstances=apmPgStatInstances, apmGlobalConnectivityStatEgressCompressed=apmGlobalConnectivityStatEgressCompressed, apmPaStatRadiusAgentTotalFailures=apmPaStatRadiusAgentTotalFailures, apmPaStatEpsWinGpAgentTotalInstances=apmPaStatEpsWinGpAgentTotalInstances, apmIpv6LeasepoolStatCurMembers=apmIpv6LeasepoolStatCurMembers, apmPaStatEndingAllowAgentTotalSuccesses=apmPaStatEndingAllowAgentTotalSuccesses, apmPaStatEpsWinRcAgentTotalSuccesses=apmPaStatEpsWinRcAgentTotalSuccesses, apmPaStatEndingDenyAgentTotalSessVars=apmPaStatEndingDenyAgentTotalSessVars, apmPaStatAdAgentTotalErrors=apmPaStatAdAgentTotalErrors, apmGlobalRewriteStatClientRespBytes=apmGlobalRewriteStatClientRespBytes, apmPaStatAdminTerminatedSessions=apmPaStatAdminTerminatedSessions, apmPaStatVaAgentTotalInstances=apmPaStatVaAgentTotalInstances, apmPrStatTable=apmPrStatTable, apmPaStatEpsLinuxPcAgentTotalErrors=apmPaStatEpsLinuxPcAgentTotalErrors, apmPaStatIeAgentTotalErrors=apmPaStatIeAgentTotalErrors, apmPaStatEpsWinOsInfoAgentTotalInstances=apmPaStatEpsWinOsInfoAgentTotalInstances, apmPgStatEntry=apmPgStatEntry, apmAclStat=apmAclStat, apmIpv6LeasepoolStatCurFree=apmIpv6LeasepoolStatCurFree, apmPaStatEpsWinPwTotalFailures=apmPaStatEpsWinPwTotalFailures, apmPaStatEpsWinCcAgentTotalErrors=apmPaStatEpsWinCcAgentTotalErrors, apmPrStatEntry=apmPrStatEntry, apmPaStatRadiusAcctAgentTotalSuccesses=apmPaStatRadiusAcctAgentTotalSuccesses, apmPaStatEpsWinGpAgentTotalSessVars=apmPaStatEpsWinGpAgentTotalSessVars, apmPmStatInspClientSignError=apmPmStatInspClientSignError, apmLeasepoolStatTotReleaseFailure=apmLeasepoolStatTotReleaseFailure, apmPaStatEpsLinuxPcAgentTotalSuccesses=apmPaStatEpsLinuxPcAgentTotalSuccesses, apmPaStatIeAgentTotalInstances=apmPaStatIeAgentTotalInstances, apmPgStatSuccesses=apmPgStatSuccesses, apmPaStatApdApResultErrors=apmPaStatApdApResultErrors, apmPaStatVaAgentTotalFailures=apmPaStatVaAgentTotalFailures, apmLeasepoolStatTotPickFailure=apmLeasepoolStatTotPickFailure, apmPaStatVsName=apmPaStatVsName, apmPaStatAdAgentTotalInstances=apmPaStatAdAgentTotalInstances, apmPaStatApdNoTokenErrors=apmPaStatApdNoTokenErrors, apmPaStatRadiusAcctAgentTotalInstances=apmPaStatRadiusAcctAgentTotalInstances, apmPmStatEntry=apmPmStatEntry, apmProfileAccessAgentStat=apmProfileAccessAgentStat, apmPaStatRadiusAgentTotalSessVars=apmPaStatRadiusAgentTotalSessVars, apmPaStatEpsWinPcTotalUsages=apmPaStatEpsWinPcTotalUsages, apmPaStatEndingAllowAgentTotalUsages=apmPaStatEndingAllowAgentTotalUsages, apmPaStatTotalEstablishedStateSessions=apmPaStatTotalEstablishedStateSessions, apmPaStatSessionsEstabTimedOut=apmPaStatSessionsEstabTimedOut, apmPaStatLoggingAgentTotalUsages=apmPaStatLoggingAgentTotalUsages, apmPaStatEpsMacFcAgentTotalFailures=apmPaStatEpsMacFcAgentTotalFailures, apmPaStatEpsWinMcAgentTotalErrors=apmPaStatEpsWinMcAgentTotalErrors, apmPaStatEpsMacFcAgentTotalSuccesses=apmPaStatEpsMacFcAgentTotalSuccesses, apmPaStatIeAgentTotalFailures=apmPaStatIeAgentTotalFailures, apmGlobalLicenseStatResetStats=apmGlobalLicenseStatResetStats, apmPaStatGroup=apmPaStatGroup, apmPaStatConfigSyncState=apmPaStatConfigSyncState, apmPaStatAccessPolicyResultRedirectWithSession=apmPaStatAccessPolicyResultRedirectWithSession, apmPaStatEpsLinuxFcAgentTotalFailures=apmPaStatEpsLinuxFcAgentTotalFailures, apmPaStatEpsWinCcAgentTotalSuccesses=apmPaStatEpsWinCcAgentTotalSuccesses, apmPaStatEpsAvAgentTotalFailures=apmPaStatEpsAvAgentTotalFailures, apmAccessStatResultRedirect=apmAccessStatResultRedirect, apmGlobalLicenseStatGroup=apmGlobalLicenseStatGroup, apmPaStatClientCertAgentTotalErrors=apmPaStatClientCertAgentTotalErrors, apmPaStatLogonAgentTotalFailures=apmPaStatLogonAgentTotalFailures, apmPmStatInspDataMsmtchError=apmPmStatInspDataMsmtchError, apmPaStatEpsLinuxFcAgentTotalSuccesses=apmPaStatEpsLinuxFcAgentTotalSuccesses, apmPaStatEpsLinuxPcAgentTotalInstances=apmPaStatEpsLinuxPcAgentTotalInstances, apmPmStatInspResultError=apmPmStatInspResultError, apmPgStatName=apmPgStatName, apmPaStatDeniedRequests=apmPaStatDeniedRequests, apmPaStatEpsAvAgentTotalUsages=apmPaStatEpsAvAgentTotalUsages, apmPaStatLogonAgentTotalErrors=apmPaStatLogonAgentTotalErrors, apmPrStatClientResps=apmPrStatClientResps, apmAclStatName=apmAclStatName, apmPaStatExternalLogonAgentTotalUsages=apmPaStatExternalLogonAgentTotalUsages, apmPaStatDecnBoxAgentTotalSuccesses=apmPaStatDecnBoxAgentTotalSuccesses, apmAclStatActionContinue=apmAclStatActionContinue, apmLeasepoolStatResetStats=apmLeasepoolStatResetStats)
mibBuilder.exportSymbols("F5-BIGIP-APM-MIB", apmPaStatMesgBoxAgentTotalErrors=apmPaStatMesgBoxAgentTotalErrors, apmPaStatLdapAgentTotalSessVars=apmPaStatLdapAgentTotalSessVars, apmPaStatNumber=apmPaStatNumber, apmGlobalConnectivityStatEgressRaw=apmGlobalConnectivityStatEgressRaw, apmPcStatEgressRaw=apmPcStatEgressRaw, apmLeasepoolStatGroup=apmLeasepoolStatGroup, apmPgStatFailures=apmPgStatFailures, apmPaStatEpsFwcAgentTotalFailures=apmPaStatEpsFwcAgentTotalFailures, apmPaStatRaAgentTotalFailures=apmPaStatRaAgentTotalFailures, apmPaStatEpsWinFcAgentTotalSuccesses=apmPaStatEpsWinFcAgentTotalSuccesses, apmAccessStatTotalSessions=apmAccessStatTotalSessions, apmLeasepoolStatEntry=apmLeasepoolStatEntry, apmPaStatSecuridAgentTotalSessVars=apmPaStatSecuridAgentTotalSessVars, apmPaStatEpsMacPcAgentTotalFailures=apmPaStatEpsMacPcAgentTotalFailures, apmPmStatTable=apmPmStatTable, apmPaStatEpsWinRcAgentTotalUsages=apmPaStatEpsWinRcAgentTotalUsages, apmIpv6LeasepoolStatResetStats=apmIpv6LeasepoolStatResetStats, apmPcStatName=apmPcStatName, apmPmStatResetStats=apmPmStatResetStats, apmPaStatEpsWinPcTotalSuccesses=apmPaStatEpsWinPcTotalSuccesses, apmPaStatCurrentCompletedSessions=apmPaStatCurrentCompletedSessions, apmPaStatRadiusAcctAgentTotalErrors=apmPaStatRadiusAcctAgentTotalErrors, apmPmStatName=apmPmStatName, apmPaStatHttpAgentTotalInstances=apmPaStatHttpAgentTotalInstances, apmAclStatGroup=apmAclStatGroup, apmPaStatVaAgentTotalErrors=apmPaStatVaAgentTotalErrors, apmPaStatResetStats=apmPaStatResetStats, apmPaStatDecnBoxAgentTotalUsages=apmPaStatDecnBoxAgentTotalUsages, apmPaStatEpsMacFcAgentTotalUsages=apmPaStatEpsMacFcAgentTotalUsages, apmPaStatEpsWinPwTotalSessVars=apmPaStatEpsWinPwTotalSessVars, apmGlobalLicenseStatTotalSwgSessions=apmGlobalLicenseStatTotalSwgSessions, apmPaStatEndingAllowAgentTotalErrors=apmPaStatEndingAllowAgentTotalErrors, apmPaStatEpsWinMcAgentTotalSessVars=apmPaStatEpsWinMcAgentTotalSessVars, apmPaStatAccessPolicyResultAllow=apmPaStatAccessPolicyResultAllow, apmPaStatEndingAllowAgentTotalInstances=apmPaStatEndingAllowAgentTotalInstances, apmLeasepoolStatTable=apmLeasepoolStatTable, apmPaStatMesgBoxAgentTotalSessVars=apmPaStatMesgBoxAgentTotalSessVars, apmPaStatLoggingAgentTotalErrors=apmPaStatLoggingAgentTotalErrors, apmPaStatEpsWinPcTotalInstances=apmPaStatEpsWinPcTotalInstances, apmPaStatIeAgentTotalSessVars=apmPaStatIeAgentTotalSessVars, apmPaStatEpsAvAgentTotalInstances=apmPaStatEpsAvAgentTotalInstances, apmGlobalRewriteStat=apmGlobalRewriteStat, apmPaStatAccessPolicyResultRedirect=apmPaStatAccessPolicyResultRedirect, apmPaStatClientCertAgentTotalSuccesses=apmPaStatClientCertAgentTotalSuccesses, apmIpv6LeasepoolStatTotReleaseFailure=apmIpv6LeasepoolStatTotReleaseFailure, apmPaStatEpsWinGpAgentTotalFailures=apmPaStatEpsWinGpAgentTotalFailures, apmLeasepoolStatCurFree=apmLeasepoolStatCurFree, apmAccessStatUserLoggedoutSessions=apmAccessStatUserLoggedoutSessions, apmIpv6LeasepoolStatNumber=apmIpv6LeasepoolStatNumber, apmPaStatApdNoSessionErrors=apmPaStatApdNoSessionErrors, apmLeasepool=apmLeasepool, apmPmStatConfigSyncState=apmPmStatConfigSyncState, apmPaStatLdapAgentTotalUsages=apmPaStatLdapAgentTotalUsages, apmPgStatTable=apmPgStatTable, apmPrStatNumber=apmPrStatNumber, apmPaStatEndingDenyAgentTotalInstances=apmPaStatEndingDenyAgentTotalInstances, apmAcl=apmAcl, apmPaStatSecuridAgentTotalSuccesses=apmPaStatSecuridAgentTotalSuccesses, apmPaStatEndingDenyAgentTotalSuccesses=apmPaStatEndingDenyAgentTotalSuccesses, apmPaStatMesgBoxAgentTotalFailures=apmPaStatMesgBoxAgentTotalFailures, apmPmStatInternalError=apmPmStatInternalError, apmPaStatExternalLogonAgentTotalErrors=apmPaStatExternalLogonAgentTotalErrors, apmPaStatLogonAgentTotalInstances=apmPaStatLogonAgentTotalInstances, apmPmStatGroup=apmPmStatGroup, apmPrStatServerRespBytes=apmPrStatServerRespBytes, apmPaStatEpsLinuxFcAgentTotalSessVars=apmPaStatEpsLinuxFcAgentTotalSessVars, apmGlobalConnectivityStatTotConns=apmGlobalConnectivityStatTotConns, apmPaStatLoggingAgentTotalSuccesses=apmPaStatLoggingAgentTotalSuccesses, apmPaStatEndingRedirectAgentTotalInstances=apmPaStatEndingRedirectAgentTotalInstances, apmGlobalRewriteStatServerRespBytes=apmGlobalRewriteStatServerRespBytes, apmLeasepoolStatMaxAssigned=apmLeasepoolStatMaxAssigned, apmAccessStatMiscTerminatedSessions=apmAccessStatMiscTerminatedSessions, apmIpv6LeasepoolStatTotReserveRequests=apmIpv6LeasepoolStatTotReserveRequests, apmPcStatIngressCompressed=apmPcStatIngressCompressed, apmProfileConnectivityStat=apmProfileConnectivityStat, apmPaStatLdapAgentTotalSuccesses=apmPaStatLdapAgentTotalSuccesses, apmAclStatActionAllow=apmAclStatActionAllow, apmPaStatVaAgentTotalSessVars=apmPaStatVaAgentTotalSessVars, apmProfileAccessMiscStat=apmProfileAccessMiscStat, apmPaStatRadiusAcctAgentTotalUsages=apmPaStatRadiusAcctAgentTotalUsages, apmPaStatMesgBoxAgentTotalInstances=apmPaStatMesgBoxAgentTotalInstances, apmPaStatEpsWinPwTotalUsages=apmPaStatEpsWinPwTotalUsages, apmPaStatHttpAgentTotalSuccesses=apmPaStatHttpAgentTotalSuccesses, apmPaStatApdMcSetSessVarErrors=apmPaStatApdMcSetSessVarErrors, apmPaStatName=apmPaStatName, apmGlobalRewriteStatServerResps=apmGlobalRewriteStatServerResps, apmPaStatEndingRedirectAgentTotalFailures=apmPaStatEndingRedirectAgentTotalFailures, apmPaStatApdInvalidSigErrors=apmPaStatApdInvalidSigErrors, apmAclStatEntry=apmAclStatEntry, apmGlobalConnectivityStatCurConns=apmGlobalConnectivityStatCurConns, apmIpv6LeasepoolStat=apmIpv6LeasepoolStat, apmPaStatEndingAllowAgentTotalSessVars=apmPaStatEndingAllowAgentTotalSessVars, apmPaStatAdAgentTotalUsages=apmPaStatAdAgentTotalUsages, apmPrStatServerResps=apmPrStatServerResps, apmPcStatMaxConns=apmPcStatMaxConns, apmPaStatExternalLogonAgentTotalInstances=apmPaStatExternalLogonAgentTotalInstances, apmPgStatUsages=apmPgStatUsages, apmPaStatLdapAgentTotalInstances=apmPaStatLdapAgentTotalInstances, apmGlobalConnectivityStat=apmGlobalConnectivityStat, apmAccessStatGroup=apmAccessStatGroup, apmPaStatUserLoggedoutSessions=apmPaStatUserLoggedoutSessions, apmPaStatRaAgentTotalUsages=apmPaStatRaAgentTotalUsages, apmProfiles=apmProfiles, apmGlobalRewriteStatServerReqs=apmGlobalRewriteStatServerReqs, apmPaStatRadiusAgentTotalSuccesses=apmPaStatRadiusAgentTotalSuccesses, apmLeasepoolStatNumber=apmLeasepoolStatNumber, apmGlobalLicenseStatTotalAccessSessions=apmGlobalLicenseStatTotalAccessSessions, apmPaStatEndingDenyAgentTotalFailures=apmPaStatEndingDenyAgentTotalFailures, apmPaStatEpsMacPcAgentTotalInstances=apmPaStatEpsMacPcAgentTotalInstances, apmPaStatHttpAgentTotalErrors=apmPaStatHttpAgentTotalErrors, apmPaStatEndingRedirectAgentTotalErrors=apmPaStatEndingRedirectAgentTotalErrors, apmIpv6LeasepoolStatTotPickRequests=apmIpv6LeasepoolStatTotPickRequests, apmLeasepoolStatCurMembers=apmLeasepoolStatCurMembers, apmPaStatEpsFwcAgentTotalSessVars=apmPaStatEpsFwcAgentTotalSessVars, apmIpv6LeasepoolStatEntry=apmIpv6LeasepoolStatEntry, apmGlobalLicenseStat=apmGlobalLicenseStat, apmPgStatNumber=apmPgStatNumber, apmIpv6LeasepoolStatMaxAssigned=apmIpv6LeasepoolStatMaxAssigned, apmPmStatNumber=apmPmStatNumber, apmGlobalConnectivityStatResetStats=apmGlobalConnectivityStatResetStats, apmAclStatTable=apmAclStatTable, apmPaStatAdAgentTotalFailures=apmPaStatAdAgentTotalFailures, apmPaStatApdMcPipelineInitErrors=apmPaStatApdMcPipelineInitErrors, apmPaStatEpsWinRcAgentTotalErrors=apmPaStatEpsWinRcAgentTotalErrors, apmIpv6LeasepoolStatCurAssigned=apmIpv6LeasepoolStatCurAssigned, apmPaStatRadiusAgentTotalInstances=apmPaStatRadiusAgentTotalInstances, apmAccessStat=apmAccessStat, apmPaStatApdTotalMismatchErrors=apmPaStatApdTotalMismatchErrors, apmPaStatEndingAllowAgentTotalFailures=apmPaStatEndingAllowAgentTotalFailures, apmPaStatSecuridAgentTotalInstances=apmPaStatSecuridAgentTotalInstances, apmAccessStatResetStats=apmAccessStatResetStats, apmIpv6LeasepoolStatTable=apmIpv6LeasepoolStatTable, apmPaStatEpsWinPcTotalErrors=apmPaStatEpsWinPcTotalErrors, apmPaStatExternalLogonAgentTotalSessVars=apmPaStatExternalLogonAgentTotalSessVars, apmGlobalRewriteStatClientResps=apmGlobalRewriteStatClientResps, apmPaStatEndingRedirectAgentTotalUsages=apmPaStatEndingRedirectAgentTotalUsages, apmPmStatInspDeviceInfoError=apmPmStatInspDeviceInfoError, apmPrStatServerReqs=apmPrStatServerReqs, apmLeasepoolStat=apmLeasepoolStat, apmPmStatResultError=apmPmStatResultError, apmPmStatMemSessionVarError=apmPmStatMemSessionVarError)
