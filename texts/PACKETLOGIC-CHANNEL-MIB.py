#
# PySNMP MIB module PACKETLOGIC-CHANNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/procera/PACKETLOGIC-CHANNEL-MIB
# Produced by pysmi-1.1.12 at Wed May 29 06:49:56 2024
# On host fv-az1019-850 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
packetlogic2, = mibBuilder.importSymbols("PACKETLOGIC-MIB", "packetlogic2")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter64, TimeTicks, Integer32, Unsigned32, iso, Counter32, MibIdentifier, Bits, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "TimeTicks", "Integer32", "Unsigned32", "iso", "Counter32", "MibIdentifier", "Bits", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress")
DisplayString, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "DateAndTime")
channelstats = ModuleIdentity((1, 3, 6, 1, 4, 1, 15397, 2, 2))
channelstats.setRevisions(('2019-09-12 15:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: channelstats.setRevisionsDescriptions((' Latest version at the revision date for version GET VERSION HERE',))
if mibBuilder.loadTexts: channelstats.setLastUpdated('201909121500Z')
if mibBuilder.loadTexts: channelstats.setOrganization('Procera Networks, Inc.')
if mibBuilder.loadTexts: channelstats.setContactInfo('support@proceranetworks.com')
if mibBuilder.loadTexts: channelstats.setDescription('MIB for PacketLogic2 channels')
channelCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 2, 8))
channelInfoTable = MibTable((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17), )
if mibBuilder.loadTexts: channelInfoTable.setStatus('current')
if mibBuilder.loadTexts: channelInfoTable.setDescription('Conceptual Table')
channelInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1), ).setIndexNames((0, "PACKETLOGIC-CHANNEL-MIB", "channelInfoEntryIndex"))
if mibBuilder.loadTexts: channelInfoEntry.setStatus('current')
if mibBuilder.loadTexts: channelInfoEntry.setDescription('Conceptual Table')
channelInfoEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: channelInfoEntryIndex.setStatus('current')
if mibBuilder.loadTexts: channelInfoEntryIndex.setDescription('Unique Row Index for Conceptual Table')
netDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25), )
if mibBuilder.loadTexts: netDeviceTable.setStatus('current')
if mibBuilder.loadTexts: netDeviceTable.setDescription('Conceptual Table')
netDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1), ).setIndexNames((0, "PACKETLOGIC-CHANNEL-MIB", "netDeviceEntryIndex"))
if mibBuilder.loadTexts: netDeviceEntry.setStatus('current')
if mibBuilder.loadTexts: netDeviceEntry.setDescription('Conceptual Table')
netDeviceEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 999), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: netDeviceEntryIndex.setStatus('current')
if mibBuilder.loadTexts: netDeviceEntryIndex.setDescription('Unique Row Index for Conceptual Table')
channelRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 1), ObjectIdentifier())
if mibBuilder.loadTexts: channelRxPackets.setStatus('current')
if mibBuilder.loadTexts: channelRxPackets.setDescription('')
channelTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 2), ObjectIdentifier())
if mibBuilder.loadTexts: channelTxPackets.setStatus('current')
if mibBuilder.loadTexts: channelTxPackets.setDescription('')
channelRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 3), ObjectIdentifier())
if mibBuilder.loadTexts: channelRxBytes.setStatus('current')
if mibBuilder.loadTexts: channelRxBytes.setDescription('')
channelTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 4), ObjectIdentifier())
if mibBuilder.loadTexts: channelTxBytes.setStatus('current')
if mibBuilder.loadTexts: channelTxBytes.setDescription('')
channelRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 5), ObjectIdentifier())
if mibBuilder.loadTexts: channelRxErrors.setStatus('current')
if mibBuilder.loadTexts: channelRxErrors.setDescription('')
channelTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 6), ObjectIdentifier())
if mibBuilder.loadTexts: channelTxErrors.setStatus('current')
if mibBuilder.loadTexts: channelTxErrors.setDescription('')
channelRxDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 7), ObjectIdentifier())
if mibBuilder.loadTexts: channelRxDrops.setStatus('current')
if mibBuilder.loadTexts: channelRxDrops.setDescription('')
channelTxDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 8), ObjectIdentifier())
if mibBuilder.loadTexts: channelTxDrops.setStatus('current')
if mibBuilder.loadTexts: channelTxDrops.setDescription('')
channelCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 9), ObjectIdentifier())
if mibBuilder.loadTexts: channelCollisions.setStatus('current')
if mibBuilder.loadTexts: channelCollisions.setDescription('')
channelMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 10), ObjectIdentifier())
if mibBuilder.loadTexts: channelMulticast.setStatus('current')
if mibBuilder.loadTexts: channelMulticast.setDescription('')
channelRxLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 11), ObjectIdentifier())
if mibBuilder.loadTexts: channelRxLengthErrors.setStatus('current')
if mibBuilder.loadTexts: channelRxLengthErrors.setDescription('')
channelRxCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 12), ObjectIdentifier())
if mibBuilder.loadTexts: channelRxCrcErrors.setStatus('current')
if mibBuilder.loadTexts: channelRxCrcErrors.setDescription('')
channelRxFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 13), ObjectIdentifier())
if mibBuilder.loadTexts: channelRxFrameErrors.setStatus('current')
if mibBuilder.loadTexts: channelRxFrameErrors.setDescription('')
channelRxFifoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 14), ObjectIdentifier())
if mibBuilder.loadTexts: channelRxFifoErrors.setStatus('current')
if mibBuilder.loadTexts: channelRxFifoErrors.setDescription('')
channelRxMissedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 15), ObjectIdentifier())
if mibBuilder.loadTexts: channelRxMissedErrors.setStatus('current')
if mibBuilder.loadTexts: channelRxMissedErrors.setDescription('')
channelTxAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 16), ObjectIdentifier())
if mibBuilder.loadTexts: channelTxAborted.setStatus('current')
if mibBuilder.loadTexts: channelTxAborted.setDescription('')
channelTxWindowErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 17), ObjectIdentifier())
if mibBuilder.loadTexts: channelTxWindowErrors.setStatus('current')
if mibBuilder.loadTexts: channelTxWindowErrors.setDescription('')
channelTxCarrierErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 18), ObjectIdentifier())
if mibBuilder.loadTexts: channelTxCarrierErrors.setStatus('current')
if mibBuilder.loadTexts: channelTxCarrierErrors.setDescription('')
channelNumber = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 8, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelNumber.setStatus('current')
if mibBuilder.loadTexts: channelNumber.setDescription('Number of available channels in system')
channelInternalMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("auto", 0), ("hd-10", 1), ("fd-10", 2), ("hd-100", 3), ("fd-100", 4), ("fd-1000", 5), ("fd-10000", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalMedia.setStatus('current')
if mibBuilder.loadTexts: channelInternalMedia.setDescription('internal_media')
channelExternalMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("auto", 0), ("hd-10", 1), ("fd-10", 2), ("hd-100", 3), ("fd-100", 4), ("fd-1000", 5), ("fd-10000", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalMedia.setStatus('current')
if mibBuilder.loadTexts: channelExternalMedia.setDescription('external_media')
channelInternalNegotiatedMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("linkdown", 0), ("hd10", 1), ("fd10", 2), ("hd100", 3), ("fd100", 4), ("fd1000", 5), ("fd10000", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalNegotiatedMedia.setStatus('current')
if mibBuilder.loadTexts: channelInternalNegotiatedMedia.setDescription('internal_negotiated_media')
channelExternalNegotiatedMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("linkdown", 0), ("hd10", 1), ("fd10", 2), ("hd100", 3), ("fd100", 4), ("fd1000", 5), ("fd10000", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalNegotiatedMedia.setStatus('current')
if mibBuilder.loadTexts: channelExternalNegotiatedMedia.setDescription('external_negotiated_media')
channelActive = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelActive.setStatus('current')
if mibBuilder.loadTexts: channelActive.setDescription('active')
channelName = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelName.setStatus('current')
if mibBuilder.loadTexts: channelName.setDescription('active')
channelInternalNegotiatedMediaTime = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalNegotiatedMediaTime.setStatus('current')
if mibBuilder.loadTexts: channelInternalNegotiatedMediaTime.setDescription('internal_negotiated_media_time')
channelExternalNegotiatedMediaTime = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalNegotiatedMediaTime.setStatus('current')
if mibBuilder.loadTexts: channelExternalNegotiatedMediaTime.setDescription('external_negotiated_media_time')
channelInternalTransceiverVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTransceiverVendor.setStatus('current')
if mibBuilder.loadTexts: channelInternalTransceiverVendor.setDescription('internal_transcevier_vendor')
channelInternalTransceiverPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTransceiverPartNumber.setStatus('current')
if mibBuilder.loadTexts: channelInternalTransceiverPartNumber.setDescription('internal_transcevier_part_nbr')
channelInternalTransceiverSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTransceiverSerial.setStatus('current')
if mibBuilder.loadTexts: channelInternalTransceiverSerial.setDescription('internal_transcevier_serial')
channelInternalTransceiverType = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTransceiverType.setStatus('current')
if mibBuilder.loadTexts: channelInternalTransceiverType.setDescription('internal_transcevier_type')
channelInternalTransceiverWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTransceiverWavelength.setStatus('current')
if mibBuilder.loadTexts: channelInternalTransceiverWavelength.setDescription('internal_transcevier_wavelength')
channelExternalTransceiverVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTransceiverVendor.setStatus('current')
if mibBuilder.loadTexts: channelExternalTransceiverVendor.setDescription('external_transcevier_vendor')
channelExternalTransceiverPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTransceiverPartNumber.setStatus('current')
if mibBuilder.loadTexts: channelExternalTransceiverPartNumber.setDescription('external_transcevier_part_nbr')
channelExternalTransceiverSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTransceiverSerial.setStatus('current')
if mibBuilder.loadTexts: channelExternalTransceiverSerial.setDescription('external_transcevier_serial')
channelExternalTransceiverType = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTransceiverType.setStatus('current')
if mibBuilder.loadTexts: channelExternalTransceiverType.setDescription('external_transcevier_type')
channelExternalTransceiverWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 15397, 2, 2, 17, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTransceiverWavelength.setStatus('current')
if mibBuilder.loadTexts: channelExternalTransceiverWavelength.setDescription('external_transcevier_wavelength')
channelInternalRxPackets = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalRxPackets.setStatus('current')
if mibBuilder.loadTexts: channelInternalRxPackets.setDescription('RX packets')
channelExternalRxPackets = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalRxPackets.setStatus('current')
if mibBuilder.loadTexts: channelExternalRxPackets.setDescription('RX packets')
channelInternalTxPackets = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTxPackets.setStatus('current')
if mibBuilder.loadTexts: channelInternalTxPackets.setDescription('TX packets')
channelExternalTxPackets = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTxPackets.setStatus('current')
if mibBuilder.loadTexts: channelExternalTxPackets.setDescription('TX packets')
channelInternalRxBytes = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalRxBytes.setStatus('current')
if mibBuilder.loadTexts: channelInternalRxBytes.setDescription('RX speed')
channelExternalRxBytes = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 3, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalRxBytes.setStatus('current')
if mibBuilder.loadTexts: channelExternalRxBytes.setDescription('RX speed')
channelInternalTxBytes = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTxBytes.setStatus('current')
if mibBuilder.loadTexts: channelInternalTxBytes.setDescription('TX speed')
channelExternalTxBytes = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 4, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTxBytes.setStatus('current')
if mibBuilder.loadTexts: channelExternalTxBytes.setDescription('TX speed')
channelInternalRxErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalRxErrors.setStatus('current')
if mibBuilder.loadTexts: channelInternalRxErrors.setDescription('RX errors')
channelExternalRxErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 5, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalRxErrors.setStatus('current')
if mibBuilder.loadTexts: channelExternalRxErrors.setDescription('RX errors')
channelInternalTxErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTxErrors.setStatus('current')
if mibBuilder.loadTexts: channelInternalTxErrors.setDescription('TX errors')
channelExternalTxErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 6, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTxErrors.setStatus('current')
if mibBuilder.loadTexts: channelExternalTxErrors.setDescription('TX errors')
channelInternalRxDrops = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalRxDrops.setStatus('current')
if mibBuilder.loadTexts: channelInternalRxDrops.setDescription('RX drops')
channelExternalRxDrops = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 7, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalRxDrops.setStatus('current')
if mibBuilder.loadTexts: channelExternalRxDrops.setDescription('RX drops')
channelInternalTxDrops = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTxDrops.setStatus('current')
if mibBuilder.loadTexts: channelInternalTxDrops.setDescription('TX drops')
channelExternalTxDrops = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 8, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTxDrops.setStatus('current')
if mibBuilder.loadTexts: channelExternalTxDrops.setDescription('TX drops')
channelInternalCollisions = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalCollisions.setStatus('current')
if mibBuilder.loadTexts: channelInternalCollisions.setDescription('Collisions')
channelExternalCollisions = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 9, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalCollisions.setStatus('current')
if mibBuilder.loadTexts: channelExternalCollisions.setDescription('Collisions')
channelInternalMulticast = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalMulticast.setStatus('current')
if mibBuilder.loadTexts: channelInternalMulticast.setDescription('Multicast packets')
channelExternalMulticast = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 10, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalMulticast.setStatus('current')
if mibBuilder.loadTexts: channelExternalMulticast.setDescription('Multicast packets')
channelInternalRxLengthErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalRxLengthErrors.setStatus('current')
if mibBuilder.loadTexts: channelInternalRxLengthErrors.setDescription('RX length errors')
channelExternalRxLengthErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 11, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalRxLengthErrors.setStatus('current')
if mibBuilder.loadTexts: channelExternalRxLengthErrors.setDescription('RX length errors')
channelInternalRxCrcErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalRxCrcErrors.setStatus('current')
if mibBuilder.loadTexts: channelInternalRxCrcErrors.setDescription('RX CRC errors')
channelExternalRxCrcErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 12, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalRxCrcErrors.setStatus('current')
if mibBuilder.loadTexts: channelExternalRxCrcErrors.setDescription('RX CRC errors')
channelInternalRxFrameErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalRxFrameErrors.setStatus('current')
if mibBuilder.loadTexts: channelInternalRxFrameErrors.setDescription('RX frame errors')
channelExternalRxFrameErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 13, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalRxFrameErrors.setStatus('current')
if mibBuilder.loadTexts: channelExternalRxFrameErrors.setDescription('RX frame errors')
channelINternalRxFifoErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelINternalRxFifoErrors.setStatus('current')
if mibBuilder.loadTexts: channelINternalRxFifoErrors.setDescription('RX fifo errors')
channelExternalRxFifoErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 14, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalRxFifoErrors.setStatus('current')
if mibBuilder.loadTexts: channelExternalRxFifoErrors.setDescription('RX fifo errors')
channelInternalRxMissedErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalRxMissedErrors.setStatus('current')
if mibBuilder.loadTexts: channelInternalRxMissedErrors.setDescription('RX missed errors')
channelExternalRxMissedErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 15, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalRxMissedErrors.setStatus('current')
if mibBuilder.loadTexts: channelExternalRxMissedErrors.setDescription('RX missed errors')
channelInternalTxAborted = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 16, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTxAborted.setStatus('current')
if mibBuilder.loadTexts: channelInternalTxAborted.setDescription('TX aborted')
channelExternalTxAborted = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 16, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTxAborted.setStatus('current')
if mibBuilder.loadTexts: channelExternalTxAborted.setDescription('TX aborted')
channelInternalTxWindowErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 17, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTxWindowErrors.setStatus('current')
if mibBuilder.loadTexts: channelInternalTxWindowErrors.setDescription('TX window errors')
channelExternalTxWindowErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 17, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTxWindowErrors.setStatus('current')
if mibBuilder.loadTexts: channelExternalTxWindowErrors.setDescription('TX window errors')
channelInternalTxCarrierErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 18, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelInternalTxCarrierErrors.setStatus('current')
if mibBuilder.loadTexts: channelInternalTxCarrierErrors.setDescription('TX carrier errors')
channelExternalTxCarrierErrors = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 2, 25, 1, 18, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelExternalTxCarrierErrors.setStatus('current')
if mibBuilder.loadTexts: channelExternalTxCarrierErrors.setDescription('TX carrier errors')
mibBuilder.exportSymbols("PACKETLOGIC-CHANNEL-MIB", channelExternalMulticast=channelExternalMulticast, channelExternalTransceiverSerial=channelExternalTransceiverSerial, channelExternalRxDrops=channelExternalRxDrops, channelExternalTransceiverVendor=channelExternalTransceiverVendor, channelExternalTxAborted=channelExternalTxAborted, channelExternalTxDrops=channelExternalTxDrops, channelExternalRxFrameErrors=channelExternalRxFrameErrors, channelInternalTxPackets=channelInternalTxPackets, channelInfoEntryIndex=channelInfoEntryIndex, channelInternalRxMissedErrors=channelInternalRxMissedErrors, channelCollisions=channelCollisions, channelRxBytes=channelRxBytes, channelTxErrors=channelTxErrors, channelExternalTransceiverPartNumber=channelExternalTransceiverPartNumber, channelInternalTxWindowErrors=channelInternalTxWindowErrors, channelInternalTxAborted=channelInternalTxAborted, channelInfoEntry=channelInfoEntry, channelName=channelName, channelInternalRxLengthErrors=channelInternalRxLengthErrors, channelExternalCollisions=channelExternalCollisions, channelInternalTransceiverSerial=channelInternalTransceiverSerial, channelRxMissedErrors=channelRxMissedErrors, channelInternalRxCrcErrors=channelInternalRxCrcErrors, channelExternalMedia=channelExternalMedia, channelExternalTxCarrierErrors=channelExternalTxCarrierErrors, channelInternalTxErrors=channelInternalTxErrors, channelRxLengthErrors=channelRxLengthErrors, channelExternalRxLengthErrors=channelExternalRxLengthErrors, channelExternalRxMissedErrors=channelExternalRxMissedErrors, channelMulticast=channelMulticast, channelRxFrameErrors=channelRxFrameErrors, netDeviceEntry=netDeviceEntry, channelRxFifoErrors=channelRxFifoErrors, channelActive=channelActive, channelInternalCollisions=channelInternalCollisions, channelInternalTxCarrierErrors=channelInternalTxCarrierErrors, channelInternalRxBytes=channelInternalRxBytes, channelTxBytes=channelTxBytes, channelExternalTxWindowErrors=channelExternalTxWindowErrors, channelInternalRxPackets=channelInternalRxPackets, channelInternalTransceiverVendor=channelInternalTransceiverVendor, channelTxWindowErrors=channelTxWindowErrors, channelInternalRxErrors=channelInternalRxErrors, channelInternalTxDrops=channelInternalTxDrops, channelCfg=channelCfg, channelExternalRxPackets=channelExternalRxPackets, channelRxErrors=channelRxErrors, netDeviceTable=netDeviceTable, channelExternalRxErrors=channelExternalRxErrors, channelInternalMedia=channelInternalMedia, channelExternalTxBytes=channelExternalTxBytes, channelINternalRxFifoErrors=channelINternalRxFifoErrors, channelTxDrops=channelTxDrops, channelTxCarrierErrors=channelTxCarrierErrors, netDeviceEntryIndex=netDeviceEntryIndex, channelInternalMulticast=channelInternalMulticast, channelRxDrops=channelRxDrops, channelExternalNegotiatedMediaTime=channelExternalNegotiatedMediaTime, channelInternalRxDrops=channelInternalRxDrops, channelExternalTransceiverWavelength=channelExternalTransceiverWavelength, channelTxAborted=channelTxAborted, channelInternalNegotiatedMediaTime=channelInternalNegotiatedMediaTime, channelExternalTransceiverType=channelExternalTransceiverType, channelNumber=channelNumber, channelInternalTransceiverPartNumber=channelInternalTransceiverPartNumber, channelInternalTransceiverWavelength=channelInternalTransceiverWavelength, channelInternalTxBytes=channelInternalTxBytes, channelExternalNegotiatedMedia=channelExternalNegotiatedMedia, channelInternalTransceiverType=channelInternalTransceiverType, channelInternalNegotiatedMedia=channelInternalNegotiatedMedia, PYSNMP_MODULE_ID=channelstats, channelRxCrcErrors=channelRxCrcErrors, channelTxPackets=channelTxPackets, channelstats=channelstats, channelExternalRxFifoErrors=channelExternalRxFifoErrors, channelInfoTable=channelInfoTable, channelExternalRxBytes=channelExternalRxBytes, channelExternalTxPackets=channelExternalTxPackets, channelRxPackets=channelRxPackets, channelExternalTxErrors=channelExternalTxErrors, channelInternalRxFrameErrors=channelInternalRxFrameErrors, channelExternalRxCrcErrors=channelExternalRxCrcErrors)
