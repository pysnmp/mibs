#
# PySNMP MIB module EQLREPLPARTNER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/equallogic/EQLREPLPARTNER-MIB
# Produced by pysmi-1.1.12 at Wed May 29 10:54:33 2024
# On host fv-az1206-254 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
SiteIndex, eqliscsiVolumeReplSiteIndex = mibBuilder.importSymbols("EQLVOLUME-MIB", "SiteIndex", "eqliscsiVolumeReplSiteIndex")
equalLogic, = mibBuilder.importSymbols("EQUALLOGIC-SMI", "equalLogic")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, Integer32, Unsigned32, NotificationType, TimeTicks, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter32, iso, IpAddress, Bits, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Integer32", "Unsigned32", "NotificationType", "TimeTicks", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter32", "iso", "IpAddress", "Bits", "MibIdentifier", "Gauge32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
eqlReplPartnerModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 12740, 26))
eqlReplPartnerModule.setRevisions(('2013-03-28 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: eqlReplPartnerModule.setRevisionsDescriptions(('Initial revision',))
if mibBuilder.loadTexts: eqlReplPartnerModule.setLastUpdated('201503171528Z')
if mibBuilder.loadTexts: eqlReplPartnerModule.setOrganization('EqualLogic Inc.')
if mibBuilder.loadTexts: eqlReplPartnerModule.setContactInfo('Contact: Customer Support\n         Postal:  Dell Inc\n                  300 Innovative Way, Suite 301, Nashua, NH 03062\n         Tel:     +1 603-579-9762\n         E-mail:  US-NH-CS-TechnicalSupport@dell.com\n         WEB:     www.equallogic.com')
if mibBuilder.loadTexts: eqlReplPartnerModule.setDescription('Replication Partner information \n\n        Copyright (c) 2013 by Dell Inc. \n        \n        All rights reserved.  This software may not be copied, disclosed, \n        transferred, or used except in accordance with a license granted \n        by Dell Inc.  This software embodies proprietary information \n        and trade secrets of Dell Inc. \n        ')
eqlReplPartnerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12740, 26, 1))
eqlReplPartnerTestTable = MibTable((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1), )
if mibBuilder.loadTexts: eqlReplPartnerTestTable.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestTable.setDescription('EqualLogic-Persistent ReplPartnerTestTable.\n                     This table contains replication partner test information.\n                     TimeoutCreate:60 TimeoutDelete:60')
eqlReplPartnerTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1), ).setIndexNames((0, "EQLVOLUME-MIB", "eqliscsiVolumeReplSiteIndex"))
if mibBuilder.loadTexts: eqlReplPartnerTestEntry.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestEntry.setDescription('An entry (row) containing replication partner test info.')
class EqlReplPartnerTestStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unknown", 0), ("valid", 1), ("invalid", 2), ("remote-partner-not-configured", 3))

eqlReplPartnerTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlReplPartnerTestRowStatus.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestRowStatus.setDescription('The row status.')
eqlReplPartnerTestIPAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 2), EqlReplPartnerTestStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlReplPartnerTestIPAddrStatus.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestIPAddrStatus.setDescription('The replication partner IP address test status.')
eqlReplPartnerTestAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 3), EqlReplPartnerTestStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlReplPartnerTestAuthStatus.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestAuthStatus.setDescription('The replication partner authentication test status.')
eqlReplPartnerTestAction = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("start", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlReplPartnerTestAction.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestAction.setDescription('The replication partner test action.')
eqlReplPartnerTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("in-progress", 1), ("complete", 2), ("error", 3), ("restarted", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlReplPartnerTestState.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestState.setDescription('The replication partner test state.')
eqlReplPartnerTestMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestMajorVersion.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestMajorVersion.setDescription('This field specifies the Major part of \n                     the lowest member software version of the \n                     remote replication site group.')
eqlReplPartnerTestMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestMinorVersion.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestMinorVersion.setDescription('This field specifies the Minor part of \n                     the lowest member software version of the \n                     remote replication site group.')
eqlReplPartnerTestMaintVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestMaintVersion.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestMaintVersion.setDescription('This field specifies the Maintenance part of \n                     the lowest member software version of the \n                     remote replication site group.')
eqlReplPartnerTestDelegatedSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestDelegatedSpace.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestDelegatedSpace.setDescription('This field indicates the total delegated space for the partners.\n                     This is a dynamic value, it is not Administrator setable.')
eqlReplPartnerTestDelegatedSpaceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestDelegatedSpaceUsed.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestDelegatedSpaceUsed.setDescription('This field indicates the total delegated space used by partners.\n                     This is a dynamic value, it is not Administrator setable.')
eqlReplPartnerTestTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestTimestamp.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestTimestamp.setDescription('This field specifies the date/time when replication partner test was started.\n                     Time is represented as the time in seconds since 00:00:00 UTC, 1970-01-01.')
mibBuilder.exportSymbols("EQLREPLPARTNER-MIB", eqlReplPartnerTestAction=eqlReplPartnerTestAction, eqlReplPartnerTestTimestamp=eqlReplPartnerTestTimestamp, eqlReplPartnerTestMajorVersion=eqlReplPartnerTestMajorVersion, eqlReplPartnerModule=eqlReplPartnerModule, eqlReplPartnerTestIPAddrStatus=eqlReplPartnerTestIPAddrStatus, eqlReplPartnerTestMaintVersion=eqlReplPartnerTestMaintVersion, eqlReplPartnerTestDelegatedSpaceUsed=eqlReplPartnerTestDelegatedSpaceUsed, eqlReplPartnerTestState=eqlReplPartnerTestState, eqlReplPartnerTestRowStatus=eqlReplPartnerTestRowStatus, eqlReplPartnerObjects=eqlReplPartnerObjects, eqlReplPartnerTestEntry=eqlReplPartnerTestEntry, eqlReplPartnerTestDelegatedSpace=eqlReplPartnerTestDelegatedSpace, EqlReplPartnerTestStatus=EqlReplPartnerTestStatus, eqlReplPartnerTestAuthStatus=eqlReplPartnerTestAuthStatus, PYSNMP_MODULE_ID=eqlReplPartnerModule, eqlReplPartnerTestTable=eqlReplPartnerTestTable, eqlReplPartnerTestMinorVersion=eqlReplPartnerTestMinorVersion)
