#
# PySNMP MIB module MIMOSA-NETWORKS-PTMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/mimosa/MIMOSA-NETWORKS-PTMP-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 08:21:32 2024
# On host fv-az530-683 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
DecimalOne, DecimalTwo, Mimosa5GHzChannelNumber, Mimosa5GHzFrequency = mibBuilder.importSymbols("MIMOSA-MIB-TC", "DecimalOne", "DecimalTwo", "Mimosa5GHzChannelNumber", "Mimosa5GHzFrequency")
mimosaWireless, mimosaConformanceGroup = mibBuilder.importSymbols("MIMOSA-NETWORKS-BASE-MIB", "mimosaWireless", "mimosaConformanceGroup")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, Integer32, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, NotificationType, ModuleIdentity, TimeTicks, Gauge32, Counter32, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "NotificationType", "ModuleIdentity", "TimeTicks", "Gauge32", "Counter32", "MibIdentifier", "Counter64")
TimeStamp, DisplayString, TruthValue, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "DisplayString", "TruthValue", "TextualConvention", "MacAddress")
mimosaPtmp = ModuleIdentity((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9))
mimosaPtmp.setRevisions(('2017-04-05 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: mimosaPtmp.setRevisionsDescriptions(('The first version of this MIB',))
if mibBuilder.loadTexts: mimosaPtmp.setLastUpdated('201704050000Z')
if mibBuilder.loadTexts: mimosaPtmp.setOrganization('Mimosa Networks')
if mibBuilder.loadTexts: mimosaPtmp.setContactInfo('\n            Postal: Mimosa Networks, Inc.\n                    469 El Camino Real, Suite 100\n                    Santa Clara, CA 95050\n                    US\n\n               Tel: +1-408-628-1277\n\n            E-mail: inquiry@mimosa.co\n        ')
if mibBuilder.loadTexts: mimosaPtmp.setDescription('The MIB module for Mimosa PTMP products')
mimosaPtmpSsid = MibIdentifier((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 1))
mimosaPtmpLinkInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 2))
mimosaPtmpChannelPower = MibIdentifier((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3))
mimosaPtmpApStats = MibIdentifier((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 4))
mimosaPtmpClientInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5))
mimosaPtmpClientStats = MibIdentifier((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6))
mimosaPtmpMgmtInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 7))
mimosaPtmpSsidTable = MibTable((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 1, 1), )
if mibBuilder.loadTexts: mimosaPtmpSsidTable.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpSsidTable.setDescription('A list of A5 SSID entries')
mimosaPtmpSsidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 1, 1, 1), ).setIndexNames((0, "MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpSsidIndex"))
if mibBuilder.loadTexts: mimosaPtmpSsidEntry.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpSsidEntry.setDescription('Entry that describes each SSID and all its related configuration')
mimosaPtmpSsidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: mimosaPtmpSsidIndex.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpSsidIndex.setDescription('Describes the index used to access a particular entry in the SSID\n        table.')
mimosaPtmpSsidName = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpSsidName.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpSsidName.setDescription('Describes the name of the SSID')
mimosaPtmpSsidType = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("hotspot", 0), ("cpe", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpSsidType.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpSsidType.setDescription('Describes the type of clients that will connect to this SSID. CPE\n         represents fixed, or Hotspot represents mobile devices')
mimosaPtmpSsidEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 1, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpSsidEnabled.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpSsidEnabled.setDescription('Describes if the SSID is enabled (True) or disabled (False)')
mimosaPtmpSsidBroadcastEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 1, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpSsidBroadcastEnabled.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpSsidBroadcastEnabled.setDescription('Describes if the Broadcast feature for this SSID is enabled or \n        disabled')
mimosaPtmpSsidIsolationEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 1, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpSsidIsolationEnabled.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpSsidIsolationEnabled.setDescription('Describes if the client isolation is enabled or disabled')
mimosaPtmpWirelessMode = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("srs", 1), ("wifiinterop", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpWirelessMode.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpWirelessMode.setDescription('Describes the wireless protocol configured on the Mimosa Device')
mimosaPtmpWirelessGender = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("a", 1), ("b", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpWirelessGender.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpWirelessGender.setDescription('Describes the wireless protocol gender that defines the transmit\n         and receive timing')
mimosaPtmpWirelessTrafficSplit = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpWirelessTrafficSplit.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpWirelessTrafficSplit.setDescription('Describes how the bandwidth is split between the AP and Station')
mimosaPtmpWirelessWindowLength = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpWirelessWindowLength.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpWirelessWindowLength.setDescription('Describes the length of the transmit time slot in milliseconds')
mimosaPtmpAutoChannelEnabled = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpAutoChannelEnabled.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpAutoChannelEnabled.setDescription('Describes if the Auto Channel feature is Enabled or Disabled. This\n         function selects the channel that results in the best RF\n         performance.')
mimosaPtmpAntennaGain = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpAntennaGain.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpAntennaGain.setDescription('Describes the antenna gain for connectorized version of the device.\n        Measured in dBi.')
mimosaPtmpChannelPowerTable = MibTable((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3), )
if mibBuilder.loadTexts: mimosaPtmpChannelPowerTable.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChannelPowerTable.setDescription('A list of Channel and Power related information per radio.')
mimosaPtmpChannelPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1), ).setIndexNames((0, "MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrRadioIndex"))
if mibBuilder.loadTexts: mimosaPtmpChannelPowerEntry.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChannelPowerEntry.setDescription('An entry containing channel and power information')
mimosaPtmpChPwrRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mimosaPtmpChPwrRadioIndex.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrRadioIndex.setDescription('Describes the index of the radio.')
mimosaPtmpChPwrRadioName = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChPwrRadioName.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrRadioName.setDescription('Describes the name of the radio.')
mimosaPtmpChPwrCntrFreqCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 3), Mimosa5GHzFrequency()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChPwrCntrFreqCfg.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrCntrFreqCfg.setDescription('Describes the configured center frequency of the channel used on the\n         access point. The center frequency represents the absolute center\n         of the selected channel width without any offset. Measured in MHz')
mimosaPtmpChPwrPrimChannelCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 4), Mimosa5GHzChannelNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChPwrPrimChannelCfg.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrPrimChannelCfg.setDescription('Describes the primary channel number that corresponds with the\n         operating frequency.')
mimosaPtmpChPwrChWidthCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChPwrChWidthCfg.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrChWidthCfg.setDescription('Describes the channel width for access point operation: 20 MHz,\n         40 MHz or 80 MHz')
mimosaPtmpChPwrTxPowerCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChPwrTxPowerCfg.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrTxPowerCfg.setDescription('Describes the desired transmit power level. The allowed options\n         are determined by a combination of country and chosen frequency.\n         Measured in dBm')
mimosaPtmpChPwrCntrFreqCur = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 7), Mimosa5GHzFrequency()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChPwrCntrFreqCur.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrCntrFreqCur.setDescription('Describes the current center frequency of the channel used on the\n         access point. The center frequency represents the absolute center\n         of the selected channel width without any offset. Measured in MHz')
mimosaPtmpChPwrPrimChannelCur = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 8), Mimosa5GHzChannelNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChPwrPrimChannelCur.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrPrimChannelCur.setDescription('Describes the current primary channel number that corresponds with the\n         operating frequency.')
mimosaPtmpChPwrChWidthCur = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChPwrChWidthCur.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrChWidthCur.setDescription('Describes the current channel width for access point operation: 20 MHz,\n         40 MHz or 80 MHz')
mimosaPtmpChPwrTxPowerCur = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChPwrTxPowerCur.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrTxPowerCur.setDescription('Describes the current transmit power level. The allowed options\n         are determined by a combination of country and chosen frequency.\n         Measured in dBm')
mimosaPtmpChPwrAgcMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("manual", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChPwrAgcMode.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrAgcMode.setDescription('Describes the setting for Automatic Gain Control (AGC) feature,\n        which is used to set the signal level below which the radio\n        ignores incoming RF interference. The choices are Off or Manual')
mimosaPtmpChPwrMinRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, -10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChPwrMinRxPower.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChPwrMinRxPower.setDescription('Describes the Rx power level (in manual AGC Mode) below your\n        expected signal, but above other interference, measured in dBm')
mimosaPtmpChannelExclusionTable = MibTable((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 4), )
if mibBuilder.loadTexts: mimosaPtmpChannelExclusionTable.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChannelExclusionTable.setDescription('A list of Exclusions and Restrictions')
mimosaPtmpChannelExclusionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 4, 1), ).setIndexNames((0, "MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChannelExclusionIndex"))
if mibBuilder.loadTexts: mimosaPtmpChannelExclusionEntry.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChannelExclusionEntry.setDescription('Entry that describes each SSID and all its related configuration')
mimosaPtmpChannelExclusionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: mimosaPtmpChannelExclusionIndex.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChannelExclusionIndex.setDescription('Describes the index used to access a particular entry in the\n        Exclusion list table.')
mimosaPtmpChannelExclusionStart = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChannelExclusionStart.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChannelExclusionStart.setDescription('Describes the lower limit for the exclusion range, not including\n        this frequency')
mimosaPtmpChannelExclusionEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 3, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpChannelExclusionEnd.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChannelExclusionEnd.setDescription('Describes the upper limit for the exclusion range, not including\n         this frequency.')
mimosaPtmpApStatsRxBytes = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpApStatsRxBytes.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpApStatsRxBytes.setDescription('Describes the number of bytes received by the AP in single-User mode')
mimosaPtmpApStatsTxBytes = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 4, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpApStatsTxBytes.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpApStatsTxBytes.setDescription('Describes the number of bytes transmitted by the AP in single-user\n        mode')
mimosaPtmpApStatsRxPkts = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 4, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpApStatsRxPkts.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpApStatsRxPkts.setDescription('Describes the number of packets received by the AP in single-user mode')
mimosaPtmpApStatsTxPkts = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 4, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpApStatsTxPkts.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpApStatsTxPkts.setDescription('Describes the number of packets transmitted by the AP in\n        single-user mode')
mimosaPtmpApStatsTxPer = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpApStatsTxPer.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpApStatsTxPer.setDescription('Describes the packet error rate on the transmit path of the\n        AP, in single-user mode')
mimosaPtmpApStatsLastUpdated = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 4, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpApStatsLastUpdated.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpApStatsLastUpdated.setDescription('Describes the last updated time for these statistics')
mimosaPtmpClientInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1), )
if mibBuilder.loadTexts: mimosaPtmpClientInfoTable.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientInfoTable.setDescription('A list of all the associated clients and related information of\n        each of them.')
mimosaPtmpClientInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1), ).setIndexNames((0, "MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientInfoIndex"))
if mibBuilder.loadTexts: mimosaPtmpClientInfoEntry.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientInfoEntry.setDescription('Entry that describes each client and related configuration and\n        statistics.')
mimosaPtmpClientInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mimosaPtmpClientInfoIndex.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientInfoIndex.setDescription('Describes the index used to access a particular entry in the\n        Client Traffic Shaping Information table.')
mimosaPtmpClientInfoMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientInfoMacAddress.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientInfoMacAddress.setDescription('Describes the MAC address of the client associated to this access-\n        point.')
mimosaPtmpClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientName.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientName.setDescription('Describes the name associated with this client.')
mimosaPtmpClientFWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientFWVersion.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientFWVersion.setDescription('Describes the firmware version of this client.\n\n        This is supported only if the client is a Mimosa device.')
mimosaPtmpClientIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientIPAddress.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientIPAddress.setDescription('Describes the IP Address associated with this client.')
mimosaPtmpClientAssociatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientAssociatedTime.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientAssociatedTime.setDescription('Describes how long the client is associated with this access-point.')
mimosaPtmpClientPlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientPlanName.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientPlanName.setDescription('Describes the Traffic Shaping plan associated with this client.')
mimosaPtmpClientUlCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientUlCommitted.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientUlCommitted.setDescription('Describes the Uplink Committed Rate configured for the client.')
mimosaPtmpClientUlPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientUlPeak.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientUlPeak.setDescription('Describes the Uplink Peak Rate configured for the client.')
mimosaPtmpClientDlCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientDlCommitted.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientDlCommitted.setDescription('Describes the Downlink Committed Rate configured for the client.')
mimosaPtmpClientDlPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientDlPeak.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientDlPeak.setDescription('Describes the Downlink Peak Rate configured for the client.')
mimosaPtmpClientInfoLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 5, 1, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientInfoLastUpdated.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientInfoLastUpdated.setDescription('Describes the last updated time of this information for the Client.')
mimosaPtmpClientStatsTable = MibTable((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1), )
if mibBuilder.loadTexts: mimosaPtmpClientStatsTable.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientStatsTable.setDescription('A list of all the associated clients and related information of each\n         of them.')
mimosaPtmpClientStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1), ).setIndexNames((0, "MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientStatsIndex"))
if mibBuilder.loadTexts: mimosaPtmpClientStatsEntry.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientStatsEntry.setDescription('Entry that describes each client all its related configuration and\n        statistics.')
mimosaPtmpClientStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mimosaPtmpClientStatsIndex.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientStatsIndex.setDescription('Describes the index used to access a particular entry in the\n        Client Information table.')
mimosaPtmpClientStatsMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientStatsMacAddress.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientStatsMacAddress.setDescription('Describes the MAC address of the client associated to this access-\n        point.')
mimosaPtmpClientAssocBW = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientAssocBW.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientAssocBW.setDescription('Describes the associated bandwidth of the client.')
mimosaPtmpClientRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientRxBytes.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientRxBytes.setDescription('Describes the number of bytes received from this client.')
mimosaPtmpClientTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientTxBytes.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientTxBytes.setDescription('Describes the number of bytes transmitted to this client.')
mimosaPtmpClientRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientRxPkts.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientRxPkts.setDescription('Describes the number of packets received from this client.')
mimosaPtmpClientTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientTxPkts.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientTxPkts.setDescription('Describes the number of packets transmitted to this client.')
mimosaPtmpClientRxPhyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientRxPhyRate.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientRxPhyRate.setDescription('Describes the receive rate of this client.')
mimosaPtmpClientTxPhyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientTxPhyRate.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientTxPhyRate.setDescription('Describes the transmit rate of this client.')
mimosaPtmpClientTxAvgPer = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 10), DecimalTwo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientTxAvgPer.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientTxAvgPer.setDescription('Describes the average packet error rate on the transmit side for\n        this client.')
mimosaPtmpClientRssiAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 11), DecimalOne()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientRssiAvg.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientRssiAvg.setDescription('Describes the average RSSI for this Client.')
mimosaPtmpClientStatsLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 6, 1, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpClientStatsLastUpdated.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientStatsLastUpdated.setDescription('Describes the last updated time of this information for the Client.')
mimosaPtmpMgmtIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 7, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpMgmtIpAddress.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpMgmtIpAddress.setDescription('Describes the IP Address configured on the Mimosa Device')
mimosaPtmpMgmtIpNetmask = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 7, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpMgmtIpNetmask.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpMgmtIpNetmask.setDescription('Describes the IP netmask configured on the Mimosa Device')
mimosaPtmpMgmtIpGateway = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 7, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpMgmtIpGateway.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpMgmtIpGateway.setDescription('Describes the IP Address of the Gateway configured on the Mimosa\n        Device')
mimosaPtmpMgmtIpMode = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 7, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpMgmtIpMode.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpMgmtIpMode.setDescription('Describes the IP Address assignment mode configured on the Mimosa\n        Device')
mimosaPtmpMgmtPrimaryDNS = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 7, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpMgmtPrimaryDNS.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpMgmtPrimaryDNS.setDescription('Describes the IP Address of the Primary DNS server configured on the\n        Mimosa Device')
mimosaPtmpMgmtSecondaryDNS = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 7, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpMgmtSecondaryDNS.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpMgmtSecondaryDNS.setDescription('Describes the IP Address of the Secondary DNS server configured on the\n        Mimosa Device')
mimosaPtmpMgmtVlanStatus = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpMgmtVlanStatus.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpMgmtVlanStatus.setDescription('Describes the status of management vlan configured on the Mimosa Device')
mimosaPtmpMgmtVlanId = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 7, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpMgmtVlanId.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpMgmtVlanId.setDescription('Describes the management vlan-id configured on the Mimosa Device')
mimosaPtmpMgmtVlanPassthrough = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 7, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpMgmtVlanPassthrough.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpMgmtVlanPassthrough.setDescription('Describes the status of the vlan passthrough configured on the Mimosa Device')
mimosaPtmpMgmtEthernetMac = MibScalar((1, 3, 6, 1, 4, 1, 43356, 2, 1, 2, 9, 7, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimosaPtmpMgmtEthernetMac.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpMgmtEthernetMac.setDescription('Describes the Ethernet MAC address configured on the Mimosa Device')
mimosaPtmpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 43356, 2, 4, 2))
mimosaPtmpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 43356, 2, 4, 2, 1))
mimosaPtmpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 43356, 2, 4, 2, 2))
mimosaPtmpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 43356, 2, 4, 2, 1, 1)).setObjects(("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpSsidGroup"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpLinkInfoGroup"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChannelPowerGroup"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpApStatsGroup"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientStatsGroup"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientInfoGroup"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpMgmtInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mimosaPtmpCompliance = mimosaPtmpCompliance.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpCompliance.setDescription('The compliance statement for PTMP supported Access Points that\n        implement this MIB.')
mimosaPtmpSsidGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43356, 2, 4, 2, 2, 1)).setObjects(("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpSsidName"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpSsidType"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpSsidEnabled"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpSsidBroadcastEnabled"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpSsidIsolationEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mimosaPtmpSsidGroup = mimosaPtmpSsidGroup.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpSsidGroup.setDescription('A collection of objects for the SSID Table.')
mimosaPtmpLinkInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43356, 2, 4, 2, 2, 2)).setObjects(("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpWirelessMode"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpWirelessGender"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpWirelessTrafficSplit"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpWirelessWindowLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mimosaPtmpLinkInfoGroup = mimosaPtmpLinkInfoGroup.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpLinkInfoGroup.setDescription('A collection of objects for the wireless link objects.')
mimosaPtmpChannelPowerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43356, 2, 4, 2, 2, 3)).setObjects(("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpAutoChannelEnabled"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpAntennaGain"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrRadioName"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrCntrFreqCfg"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrPrimChannelCfg"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrChWidthCfg"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrTxPowerCfg"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrCntrFreqCur"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrPrimChannelCur"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrChWidthCur"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrTxPowerCur"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrAgcMode"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChPwrMinRxPower"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChannelExclusionStart"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpChannelExclusionEnd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mimosaPtmpChannelPowerGroup = mimosaPtmpChannelPowerGroup.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpChannelPowerGroup.setDescription('A collection of objects for the wireless channel and power settings.')
mimosaPtmpApStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43356, 2, 4, 2, 2, 4)).setObjects(("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpApStatsRxBytes"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpApStatsTxBytes"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpApStatsRxPkts"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpApStatsTxPkts"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpApStatsTxPer"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpApStatsLastUpdated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mimosaPtmpApStatsGroup = mimosaPtmpApStatsGroup.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpApStatsGroup.setDescription('A collection of objects describing the AP related statistics.')
mimosaPtmpClientInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43356, 2, 4, 2, 2, 5)).setObjects(("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientName"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientFWVersion"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientIPAddress"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientAssociatedTime"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientPlanName"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientUlCommitted"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientUlPeak"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientDlCommitted"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientDlPeak"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientInfoLastUpdated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mimosaPtmpClientInfoGroup = mimosaPtmpClientInfoGroup.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientInfoGroup.setDescription('A collection of objects describing the client details.')
mimosaPtmpClientStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43356, 2, 4, 2, 2, 6)).setObjects(("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientStatsMacAddress"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientAssocBW"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientRxBytes"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientRxPkts"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientTxPkts"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientRssiAvg"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientRxPhyRate"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientTxAvgPer"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientTxPhyRate"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientTxBytes"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpClientStatsLastUpdated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mimosaPtmpClientStatsGroup = mimosaPtmpClientStatsGroup.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpClientStatsGroup.setDescription('A collection of objects describing the client statistics.')
mimosaPtmpMgmtInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43356, 2, 4, 2, 2, 7)).setObjects(("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpMgmtIpAddress"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpMgmtIpNetmask"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpMgmtIpGateway"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpMgmtIpMode"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpMgmtPrimaryDNS"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpMgmtSecondaryDNS"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpMgmtVlanStatus"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpMgmtVlanId"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpMgmtVlanPassthrough"), ("MIMOSA-NETWORKS-PTMP-MIB", "mimosaPtmpMgmtEthernetMac"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mimosaPtmpMgmtInfoGroup = mimosaPtmpMgmtInfoGroup.setStatus('current')
if mibBuilder.loadTexts: mimosaPtmpMgmtInfoGroup.setDescription('A collection of objects describing the client details.')
mibBuilder.exportSymbols("MIMOSA-NETWORKS-PTMP-MIB", mimosaPtmpClientInfo=mimosaPtmpClientInfo, mimosaPtmpClientTxBytes=mimosaPtmpClientTxBytes, mimosaPtmpSsidIndex=mimosaPtmpSsidIndex, mimosaPtmpSsidEnabled=mimosaPtmpSsidEnabled, mimosaPtmpClientInfoIndex=mimosaPtmpClientInfoIndex, mimosaPtmpChannelExclusionStart=mimosaPtmpChannelExclusionStart, mimosaPtmpMgmtVlanStatus=mimosaPtmpMgmtVlanStatus, mimosaPtmpChPwrCntrFreqCfg=mimosaPtmpChPwrCntrFreqCfg, mimosaPtmpMgmtSecondaryDNS=mimosaPtmpMgmtSecondaryDNS, mimosaPtmpChPwrPrimChannelCur=mimosaPtmpChPwrPrimChannelCur, mimosaPtmpClientPlanName=mimosaPtmpClientPlanName, mimosaPtmpApStatsRxBytes=mimosaPtmpApStatsRxBytes, mimosaPtmpClientIPAddress=mimosaPtmpClientIPAddress, mimosaPtmpApStatsLastUpdated=mimosaPtmpApStatsLastUpdated, mimosaPtmpClientRxPkts=mimosaPtmpClientRxPkts, mimosaPtmpClientInfoEntry=mimosaPtmpClientInfoEntry, mimosaPtmpApStatsTxPkts=mimosaPtmpApStatsTxPkts, mimosaPtmpClientFWVersion=mimosaPtmpClientFWVersion, mimosaPtmpSsidBroadcastEnabled=mimosaPtmpSsidBroadcastEnabled, mimosaPtmpClientStatsTable=mimosaPtmpClientStatsTable, mimosaPtmpApStatsTxPer=mimosaPtmpApStatsTxPer, mimosaPtmpChPwrChWidthCfg=mimosaPtmpChPwrChWidthCfg, mimosaPtmpMgmtInfoGroup=mimosaPtmpMgmtInfoGroup, mimosaPtmpClientRxBytes=mimosaPtmpClientRxBytes, PYSNMP_MODULE_ID=mimosaPtmp, mimosaPtmpChannelPower=mimosaPtmpChannelPower, mimosaPtmpSsidEntry=mimosaPtmpSsidEntry, mimosaPtmpClientStatsLastUpdated=mimosaPtmpClientStatsLastUpdated, mimosaPtmpClientName=mimosaPtmpClientName, mimosaPtmpClientTxPkts=mimosaPtmpClientTxPkts, mimosaPtmpChPwrAgcMode=mimosaPtmpChPwrAgcMode, mimosaPtmp=mimosaPtmp, mimosaPtmpClientStats=mimosaPtmpClientStats, mimosaPtmpClientTxPhyRate=mimosaPtmpClientTxPhyRate, mimosaPtmpChPwrChWidthCur=mimosaPtmpChPwrChWidthCur, mimosaPtmpSsidGroup=mimosaPtmpSsidGroup, mimosaPtmpWirelessGender=mimosaPtmpWirelessGender, mimosaPtmpClientTxAvgPer=mimosaPtmpClientTxAvgPer, mimosaPtmpChannelExclusionTable=mimosaPtmpChannelExclusionTable, mimosaPtmpGroups=mimosaPtmpGroups, mimosaPtmpAutoChannelEnabled=mimosaPtmpAutoChannelEnabled, mimosaPtmpClientRssiAvg=mimosaPtmpClientRssiAvg, mimosaPtmpClientAssociatedTime=mimosaPtmpClientAssociatedTime, mimosaPtmpChannelPowerGroup=mimosaPtmpChannelPowerGroup, mimosaPtmpChannelPowerTable=mimosaPtmpChannelPowerTable, mimosaPtmpChPwrMinRxPower=mimosaPtmpChPwrMinRxPower, mimosaPtmpChannelExclusionIndex=mimosaPtmpChannelExclusionIndex, mimosaPtmpClientRxPhyRate=mimosaPtmpClientRxPhyRate, mimosaPtmpLinkInfo=mimosaPtmpLinkInfo, mimosaPtmpCompliances=mimosaPtmpCompliances, mimosaPtmpLinkInfoGroup=mimosaPtmpLinkInfoGroup, mimosaPtmpClientInfoMacAddress=mimosaPtmpClientInfoMacAddress, mimosaPtmpApStatsTxBytes=mimosaPtmpApStatsTxBytes, mimosaPtmpClientStatsMacAddress=mimosaPtmpClientStatsMacAddress, mimosaPtmpSsidIsolationEnabled=mimosaPtmpSsidIsolationEnabled, mimosaPtmpMgmtIpAddress=mimosaPtmpMgmtIpAddress, mimosaPtmpChPwrTxPowerCur=mimosaPtmpChPwrTxPowerCur, mimosaPtmpMgmtIpGateway=mimosaPtmpMgmtIpGateway, mimosaPtmpMgmtIpNetmask=mimosaPtmpMgmtIpNetmask, mimosaPtmpSsidTable=mimosaPtmpSsidTable, mimosaPtmpConformance=mimosaPtmpConformance, mimosaPtmpClientDlCommitted=mimosaPtmpClientDlCommitted, mimosaPtmpApStatsRxPkts=mimosaPtmpApStatsRxPkts, mimosaPtmpWirelessWindowLength=mimosaPtmpWirelessWindowLength, mimosaPtmpChannelExclusionEnd=mimosaPtmpChannelExclusionEnd, mimosaPtmpClientStatsGroup=mimosaPtmpClientStatsGroup, mimosaPtmpChPwrCntrFreqCur=mimosaPtmpChPwrCntrFreqCur, mimosaPtmpClientUlCommitted=mimosaPtmpClientUlCommitted, mimosaPtmpMgmtInfo=mimosaPtmpMgmtInfo, mimosaPtmpSsidType=mimosaPtmpSsidType, mimosaPtmpClientStatsIndex=mimosaPtmpClientStatsIndex, mimosaPtmpChannelPowerEntry=mimosaPtmpChannelPowerEntry, mimosaPtmpApStats=mimosaPtmpApStats, mimosaPtmpMgmtVlanId=mimosaPtmpMgmtVlanId, mimosaPtmpAntennaGain=mimosaPtmpAntennaGain, mimosaPtmpClientInfoLastUpdated=mimosaPtmpClientInfoLastUpdated, mimosaPtmpClientStatsEntry=mimosaPtmpClientStatsEntry, mimosaPtmpSsidName=mimosaPtmpSsidName, mimosaPtmpMgmtEthernetMac=mimosaPtmpMgmtEthernetMac, mimosaPtmpCompliance=mimosaPtmpCompliance, mimosaPtmpChannelExclusionEntry=mimosaPtmpChannelExclusionEntry, mimosaPtmpClientInfoGroup=mimosaPtmpClientInfoGroup, mimosaPtmpClientInfoTable=mimosaPtmpClientInfoTable, mimosaPtmpChPwrRadioName=mimosaPtmpChPwrRadioName, mimosaPtmpClientAssocBW=mimosaPtmpClientAssocBW, mimosaPtmpClientDlPeak=mimosaPtmpClientDlPeak, mimosaPtmpMgmtPrimaryDNS=mimosaPtmpMgmtPrimaryDNS, mimosaPtmpChPwrTxPowerCfg=mimosaPtmpChPwrTxPowerCfg, mimosaPtmpWirelessTrafficSplit=mimosaPtmpWirelessTrafficSplit, mimosaPtmpMgmtIpMode=mimosaPtmpMgmtIpMode, mimosaPtmpApStatsGroup=mimosaPtmpApStatsGroup, mimosaPtmpWirelessMode=mimosaPtmpWirelessMode, mimosaPtmpChPwrPrimChannelCfg=mimosaPtmpChPwrPrimChannelCfg, mimosaPtmpSsid=mimosaPtmpSsid, mimosaPtmpMgmtVlanPassthrough=mimosaPtmpMgmtVlanPassthrough, mimosaPtmpClientUlPeak=mimosaPtmpClientUlPeak, mimosaPtmpChPwrRadioIndex=mimosaPtmpChPwrRadioIndex)
