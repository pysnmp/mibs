#
# PySNMP MIB module AVIAT-RXPERFORMANCE-EX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/aviat-wtm/AVIAT-RXPERFORMANCE-EX-MIB
# Produced by pysmi-1.1.12 at Wed May 29 07:58:45 2024
# On host fv-az1024-251 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
aviatRxPerformQHourIndex, aviatRxPerformDayIndex, aviatRxPerformDayPeriod, aviatRxPerformQHourPeriod = mibBuilder.importSymbols("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourIndex", "aviatRxPerformDayIndex", "aviatRxPerformDayPeriod", "aviatRxPerformQHourPeriod")
AviatPowerLevel, = mibBuilder.importSymbols("AVIAT-TEXTCONVENTION-MIB", "AviatPowerLevel")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, TimeTicks, ModuleIdentity, IpAddress, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, MibIdentifier, Bits, iso, Gauge32, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "ModuleIdentity", "IpAddress", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "MibIdentifier", "Bits", "iso", "Gauge32", "Integer32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aviatModules, = mibBuilder.importSymbols("STXN-GLOBALREGISTER-MIB", "aviatModules")
aviatRxPerformanceExModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 33))
aviatRxPerformanceExModule.setRevisions(('2014-01-21 01:57',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: aviatRxPerformanceExModule.setRevisionsDescriptions(('Initial Version.',))
if mibBuilder.loadTexts: aviatRxPerformanceExModule.setLastUpdated('201401210157Z')
if mibBuilder.loadTexts: aviatRxPerformanceExModule.setOrganization('Aviat Networks')
if mibBuilder.loadTexts: aviatRxPerformanceExModule.setContactInfo('Aviat Networks\n                         Customer Service\n\n                         Postal: 5200 Great America Parkway\n                                 Santa Clara\n                                 California 95054\n                                 United States of America\n\n                         Tel: 408 567 7000\n\n                         E-mail: mibsupport@aviatnet.com')
if mibBuilder.loadTexts: aviatRxPerformanceExModule.setDescription('This MIB module extends existing performance monitoring of the\n                 receiver on the radio for some parameters.')
aviatRxPerformanceExConf = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1))
aviatRxPerformanceExGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 1))
aviatRxPerformanceExCompl = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 2))
aviatRxPerformanceExMIBObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2))
aviatRxPerformExTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2), )
if mibBuilder.loadTexts: aviatRxPerformExTable.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformExTable.setDescription('This is the table containing extended information\n                         about the radio receive path performance of each\n                         terminal in the domain. This performance data is\n                         updated every 1 second.')
aviatRxPerformExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: aviatRxPerformExEntry.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformExEntry.setDescription('This is an entry in the table containing the receiver\n                         performance data of an entity in the system.')
aviatRxPerformCinrReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 2), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMean.setDescription('This is the mean reading of the Carrier to\n                         Interference + Noise ratio of the radio over the\n                         period since the start of monitoring.')
aviatRxPerformCinrReadingCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 3), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingCurrent.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformCinrReadingCurrent.setDescription('This is the current reading of the Carrier to\n                         Interference + Noise ratio of the radio.')
aviatRxPerformCinrReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 4), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMax.setDescription('This is the highest recorded reading of the Carrier to\n                         Interference + Noise ratio of the radio since the\n                         start of monitoring.')
aviatRxPerformCinrReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMin.setDescription('This is the lowest recorded reading of the Carrier to\n                         Interference + Noise ratio of the radio since the\n                         start of monitoring.')
aviatRxPerformTxpowReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMean.setDescription('This is the mean reading of the Carrier to\n                         Interference + Noise ratio of the radio over the\n                         period since the start of monitoring.')
aviatRxPerformTxpowReadingCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 7), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingCurrent.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingCurrent.setDescription('This is the current reading of the Carrier to\n                         Interference + Noise ratio of the radio.')
aviatRxPerformTxpowReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 8), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMax.setDescription('This is the highest recorded reading of the Carrier to\n                         Interference + Noise ratio of the radio since the\n                         start of monitoring.')
aviatRxPerformTxpowReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 9), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMin.setDescription('This is the lowest recorded reading of the Carrier to\n                         Interference + Noise ratio of the radio since the\n                         start of monitoring.')
aviatRxPerformQuarterHourExTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3), )
if mibBuilder.loadTexts: aviatRxPerformQuarterHourExTable.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQuarterHourExTable.setDescription('This is the table containing extended information\n                         about the radio receive path performance of each\n                         terminal in the domain.\n\n                         The performance data recording is started at the next\n                         15 minute boundry in the hour of the time when\n                         monitoring was initiated eg: 12:00, 12:15, 12:30 or\n                         12:45.\n\n                         This performance data is recorded for 15 minute\n                         periods and the object is updated at the end of the\n                         period.')
aviatRxPerformQuarterHourExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourPeriod"))
if mibBuilder.loadTexts: aviatRxPerformQuarterHourExEntry.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQuarterHourExEntry.setDescription('This is an entry in the table containing the receiver\n                         performance data of an entity in the system for a 15\n                         minute period.')
aviatRxPerformQHourCinrReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 4), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMean.setDescription('This is the mean reading of the Carrier to\n                         Interference + Noise ratio of the radio for the 15\n                         minute period during which this block of performance\n                         data was collected.')
aviatRxPerformQHourCinrReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMax.setDescription('This is the highest recorded reading of the Carrier to\n                         Interference + Noise ratio of the radio for the 15\n                         minute period during which this block of performance\n                         data was collected.')
aviatRxPerformQHourCinrReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMin.setDescription('This is the lowest recorded reading of the Carrier to\n                         Interference + Noise ratio of the radio for the 15\n                         minute period during which this block of performance\n                         data was collected.')
aviatRxPerformQHourTxpowReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 7), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMean.setDescription('This is the mean value of the Transmit power of the\n                         radio for the 15 minute period during which this block\n                         of performance data was collected.')
aviatRxPerformQHourTxpowReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 8), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMax.setDescription('This is the highest recorded value of the Transmit\n                         power of the radio for the 15 minute period during\n                         which this block of performance data was collected.')
aviatRxPerformQHourTxpowReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 9), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMin.setDescription('This is the lowest recorded value of the Transmit\n                         power of the radio for the 15 minute period during\n                         which this block of performance data was collected.')
aviatRxPerformDayExTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4), )
if mibBuilder.loadTexts: aviatRxPerformDayExTable.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayExTable.setDescription('This is a table containing a collection of information\n                         about the radio receive path performance of each\n                         terminal in the domain. Performance data in this table\n                         is recorded for 1 day periods.')
aviatRxPerformDayExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayPeriod"))
if mibBuilder.loadTexts: aviatRxPerformDayExEntry.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayExEntry.setDescription('This is an entry in the table containing performance\n                         data of a particular entity within the agent during a\n                         1 day period.')
aviatRxPerformDayCinrReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 4), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMean.setDescription('This is the mean reading of the Carrier to\n                         Interference + Noise ratio of the radio for the 1 day\n                         period during which this block of performance data was\n                         collected.')
aviatRxPerformDayCinrReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMax.setDescription('This is the highest recorded reading of the Carrier to\n                         Interference + Noise ratio of the radio for the 1 day\n                         period during which this block of performance data was\n                         collected.')
aviatRxPerformDayCinrReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMin.setDescription('This is the lowest recorded reading of the Carrier to\n                         Interference + Noise ratio of the radio for the 1 day\n                         period during which this block of performance data was\n                         collected.')
aviatRxPerformDayTxpowReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 7), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMean.setDescription('This is the mean reading of the Transmit Power of the\n                         radio for the 1 day period during which this block of\n                         performance data was collected.')
aviatRxPerformDayTxpowReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 8), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMax.setDescription('This is the highest recorded reading of the transmit\n                         Power of the radio for the 1 day period during which\n                         this block of performance data was collected.')
aviatRxPerformDayTxpowReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 9), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMin.setDescription('This is the lowest recorded reading of the Transmit\n                         Power of the radio for the 1 day period during which\n                         this block of performance data was collected.')
aviatRxPerformExObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 1, 1)).setObjects(("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingCurrent"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingCurrent"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourCinrReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourCinrReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourCinrReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourTxpowReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourTxpowReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourTxpowReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayCinrReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayCinrReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayCinrReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayTxpowReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayTxpowReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayTxpowReadingMin"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviatRxPerformExObjectGroup = aviatRxPerformExObjectGroup.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformExObjectGroup.setDescription('These are the objects in the Receiver Performance\n                         Extended MIB.')
aviatRxPerformanceExComplV1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 2, 1)).setObjects(("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformExObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviatRxPerformanceExComplV1 = aviatRxPerformanceExComplV1.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformanceExComplV1.setDescription('The implementation requirements for this MIB.')
mibBuilder.exportSymbols("AVIAT-RXPERFORMANCE-EX-MIB", aviatRxPerformQHourCinrReadingMean=aviatRxPerformQHourCinrReadingMean, aviatRxPerformTxpowReadingMean=aviatRxPerformTxpowReadingMean, aviatRxPerformanceExCompl=aviatRxPerformanceExCompl, aviatRxPerformExEntry=aviatRxPerformExEntry, aviatRxPerformDayTxpowReadingMin=aviatRxPerformDayTxpowReadingMin, aviatRxPerformTxpowReadingCurrent=aviatRxPerformTxpowReadingCurrent, aviatRxPerformanceExGroups=aviatRxPerformanceExGroups, aviatRxPerformDayCinrReadingMean=aviatRxPerformDayCinrReadingMean, aviatRxPerformCinrReadingMean=aviatRxPerformCinrReadingMean, aviatRxPerformTxpowReadingMax=aviatRxPerformTxpowReadingMax, aviatRxPerformQHourTxpowReadingMin=aviatRxPerformQHourTxpowReadingMin, aviatRxPerformQHourTxpowReadingMean=aviatRxPerformQHourTxpowReadingMean, aviatRxPerformDayTxpowReadingMean=aviatRxPerformDayTxpowReadingMean, aviatRxPerformExObjectGroup=aviatRxPerformExObjectGroup, PYSNMP_MODULE_ID=aviatRxPerformanceExModule, aviatRxPerformanceExMIBObjs=aviatRxPerformanceExMIBObjs, aviatRxPerformDayCinrReadingMax=aviatRxPerformDayCinrReadingMax, aviatRxPerformDayTxpowReadingMax=aviatRxPerformDayTxpowReadingMax, aviatRxPerformanceExComplV1=aviatRxPerformanceExComplV1, aviatRxPerformDayExTable=aviatRxPerformDayExTable, aviatRxPerformDayExEntry=aviatRxPerformDayExEntry, aviatRxPerformCinrReadingCurrent=aviatRxPerformCinrReadingCurrent, aviatRxPerformQHourCinrReadingMin=aviatRxPerformQHourCinrReadingMin, aviatRxPerformQHourCinrReadingMax=aviatRxPerformQHourCinrReadingMax, aviatRxPerformCinrReadingMax=aviatRxPerformCinrReadingMax, aviatRxPerformanceExConf=aviatRxPerformanceExConf, aviatRxPerformTxpowReadingMin=aviatRxPerformTxpowReadingMin, aviatRxPerformExTable=aviatRxPerformExTable, aviatRxPerformCinrReadingMin=aviatRxPerformCinrReadingMin, aviatRxPerformanceExModule=aviatRxPerformanceExModule, aviatRxPerformDayCinrReadingMin=aviatRxPerformDayCinrReadingMin, aviatRxPerformQuarterHourExTable=aviatRxPerformQuarterHourExTable, aviatRxPerformQuarterHourExEntry=aviatRxPerformQuarterHourExEntry, aviatRxPerformQHourTxpowReadingMax=aviatRxPerformQHourTxpowReadingMax)
