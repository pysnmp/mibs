#
# PySNMP MIB module AT-FIBER-MONITORING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/allied/AT-FIBER-MONITORING-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 11:42:35 2024
# On host fv-az1427-842 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
sysinfo, = mibBuilder.importSymbols("AT-SYSINFO-MIB", "sysinfo")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter32, Gauge32, iso, Integer32, Counter64, ObjectIdentity, Bits, Unsigned32, IpAddress, ModuleIdentity, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "Gauge32", "iso", "Integer32", "Counter64", "ObjectIdentity", "Bits", "Unsigned32", "IpAddress", "ModuleIdentity", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atFiberMon = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27))
atFiberMon.setRevisions(('2015-09-08 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: atFiberMon.setRevisionsDescriptions(('Initial revision',))
if mibBuilder.loadTexts: atFiberMon.setLastUpdated('201509080000Z')
if mibBuilder.loadTexts: atFiberMon.setOrganization('Allied Telesis, Inc')
if mibBuilder.loadTexts: atFiberMon.setContactInfo('http://www.alliedtelesis.com')
if mibBuilder.loadTexts: atFiberMon.setDescription('This MIB contains managed objects definition and notification\n                definitions for AT Fiber Monitoring feature.')
atFiberMonNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 0))
atFiberMonAlarmSetNotify = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 0, 1)).setObjects(("AT-FIBER-MONITORING-MIB", "atFiberMonIfindex"), ("AT-FIBER-MONITORING-MIB", "atFiberMonChannel"), ("AT-FIBER-MONITORING-MIB", "atFiberMonIfname"), ("AT-FIBER-MONITORING-MIB", "atFiberMonReading"), ("AT-FIBER-MONITORING-MIB", "atFiberMonThreshold"))
if mibBuilder.loadTexts: atFiberMonAlarmSetNotify.setStatus('current')
if mibBuilder.loadTexts: atFiberMonAlarmSetNotify.setDescription('A notification generated when the monitored received optical power of an SFP\n                goes outside its alarm threshold.')
atFiberMonAlarmClearedNotify = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 0, 2)).setObjects(("AT-FIBER-MONITORING-MIB", "atFiberMonIfindex"), ("AT-FIBER-MONITORING-MIB", "atFiberMonChannel"), ("AT-FIBER-MONITORING-MIB", "atFiberMonIfname"), ("AT-FIBER-MONITORING-MIB", "atFiberMonReading"), ("AT-FIBER-MONITORING-MIB", "atFiberMonThreshold"))
if mibBuilder.loadTexts: atFiberMonAlarmClearedNotify.setStatus('current')
if mibBuilder.loadTexts: atFiberMonAlarmClearedNotify.setDescription('A notification generated when the monitored received optical power of an SFP\n                returns to an acceptable value.  This can occur because the power has returned\n                to its previous level or the comparison baseline has adjusted to the new level.')
atFiberMonTrapVariable = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 1))
atFiberMonReading = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: atFiberMonReading.setStatus('current')
if mibBuilder.loadTexts: atFiberMonReading.setDescription('The current received optical power reading for the port specified\n                in the trap (x0.0001mW)')
atFiberMonConfigTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 2), )
if mibBuilder.loadTexts: atFiberMonConfigTable.setStatus('current')
if mibBuilder.loadTexts: atFiberMonConfigTable.setDescription('It contains the objects used to configure the operation of fiber monitoring.')
atFiberMonConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 2, 1), ).setIndexNames((0, "AT-FIBER-MONITORING-MIB", "atFiberMonIfname"))
if mibBuilder.loadTexts: atFiberMonConfigEntry.setStatus('current')
if mibBuilder.loadTexts: atFiberMonConfigEntry.setDescription('Entry for the table. It contains the configurables of fiber monitering for an interface.')
atFiberMonIfname = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atFiberMonIfname.setStatus('current')
if mibBuilder.loadTexts: atFiberMonIfname.setDescription('The name of the interface where the pluggable is in.')
atFiberMonEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atFiberMonEnable.setStatus('current')
if mibBuilder.loadTexts: atFiberMonEnable.setDescription('Enable or disable fiber monitoring.')
atFiberMonInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atFiberMonInterval.setStatus('current')
if mibBuilder.loadTexts: atFiberMonInterval.setDescription('Fiber monitoring polling interval in seconds.')
atFiberMonSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 2, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atFiberMonSensitivity.setStatus('current')
if mibBuilder.loadTexts: atFiberMonSensitivity.setDescription('The sensitivity for fiber monitoring.\n\n                Acceptable mode strings and value ranges are as below:\n\n                low                      - 2dB\n                medium                   - 1dB\n                high                     - 0.5dB\n                highest                  - 0.0025mW\n                fixed <25 - 65535>       - units of 0.0001mW\n                relative <0.00 - 10.00>  - units of dB\n\n                For example, if you want to set the sensitivity to medium level, then you enter word\n\n                medium\n\n                Or if you want to set it to a fixed value, then you enter string\n\n                fixed 1000\n\n                Or if you want to set to a relative value, then you enter string\n\n                relative 1.20\n                ')
atFiberMonBaseline = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 2, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atFiberMonBaseline.setStatus('current')
if mibBuilder.loadTexts: atFiberMonBaseline.setDescription('The baseline value for firber mornitoring.\n\n                Acceptable mode string and value ranges are as below:\n\n                average <12-150> - number of readings used to calculate moving average.\n                fixed <1-65535>  - fixed baseline value in units of 0.0001mW.\n\n                For example, if you want to use a moving average of 12 readings as the baseline,\n                you enter\n\n                average 12\n\n                Or if you want to use a fixed value, though it is not recommended, you enter\n\n                fixed 500\n                ')
atFiberMonAlarmAction = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("logOnly", 1), ("sendTrap", 2), ("shutdown", 3), ("sendtrapAndShutdown", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atFiberMonAlarmAction.setStatus('current')
if mibBuilder.loadTexts: atFiberMonAlarmAction.setDescription('Actions to take when an alarm occurs.\n                Acceptable values are:\n                1. Log a message only.\n                2. Send snmp trap and log.\n                3. Shut down the interface and log.\n                4. Send trap, shutdown and log.\n                ')
atFiberMonStateTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 3), )
if mibBuilder.loadTexts: atFiberMonStateTable.setStatus('current')
if mibBuilder.loadTexts: atFiberMonStateTable.setDescription('This table contains the information of fiber monitoring state for SFPs.')
atFiberMonStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 3, 1), ).setIndexNames((0, "AT-FIBER-MONITORING-MIB", "atFiberMonIfindex"), (0, "AT-FIBER-MONITORING-MIB", "atFiberMonChannel"))
if mibBuilder.loadTexts: atFiberMonStateEntry.setStatus('current')
if mibBuilder.loadTexts: atFiberMonStateEntry.setDescription('Entry for fiber monitoring state table. It contains state values for a fiber channel.')
atFiberMonIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atFiberMonIfindex.setStatus('current')
if mibBuilder.loadTexts: atFiberMonIfindex.setDescription('The index of the interface where the pluggable is in.')
atFiberMonChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atFiberMonChannel.setStatus('current')
if mibBuilder.loadTexts: atFiberMonChannel.setDescription('The channel number of the pluggable.')
atFiberMonlIfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atFiberMonlIfDescription.setStatus('current')
if mibBuilder.loadTexts: atFiberMonlIfDescription.setDescription('Interface description. Normally it would be the name of the interface.')
atFiberMonActualBaseline = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atFiberMonActualBaseline.setStatus('current')
if mibBuilder.loadTexts: atFiberMonActualBaseline.setDescription('The calculated baseline value for the link, in units of 0.0001mW.')
atFiberMonThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atFiberMonThreshold.setStatus('current')
if mibBuilder.loadTexts: atFiberMonThreshold.setDescription('Threshold value for alarm to occur, in units of 0.0001mW.')
atFiberMonReadingHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atFiberMonReadingHistory.setStatus('current')
if mibBuilder.loadTexts: atFiberMonReadingHistory.setDescription('The reading history. It is a string containing last 12 readings.')
atFiberMonMinReading = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atFiberMonMinReading.setStatus('current')
if mibBuilder.loadTexts: atFiberMonMinReading.setDescription('The minimum reading of rx power, in units of 0.0001mW.')
atFiberMonMaxReading = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 27, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atFiberMonMaxReading.setStatus('current')
if mibBuilder.loadTexts: atFiberMonMaxReading.setDescription('The maximum reading of rx power, in units of 0.0001mW.')
mibBuilder.exportSymbols("AT-FIBER-MONITORING-MIB", atFiberMonIfname=atFiberMonIfname, atFiberMonMaxReading=atFiberMonMaxReading, atFiberMonIfindex=atFiberMonIfindex, atFiberMonReadingHistory=atFiberMonReadingHistory, atFiberMonAlarmSetNotify=atFiberMonAlarmSetNotify, atFiberMonConfigTable=atFiberMonConfigTable, atFiberMonBaseline=atFiberMonBaseline, atFiberMonMinReading=atFiberMonMinReading, atFiberMon=atFiberMon, atFiberMonAlarmClearedNotify=atFiberMonAlarmClearedNotify, atFiberMonInterval=atFiberMonInterval, atFiberMonEnable=atFiberMonEnable, atFiberMonlIfDescription=atFiberMonlIfDescription, atFiberMonStateEntry=atFiberMonStateEntry, atFiberMonReading=atFiberMonReading, atFiberMonActualBaseline=atFiberMonActualBaseline, atFiberMonAlarmAction=atFiberMonAlarmAction, atFiberMonConfigEntry=atFiberMonConfigEntry, atFiberMonChannel=atFiberMonChannel, atFiberMonStateTable=atFiberMonStateTable, atFiberMonThreshold=atFiberMonThreshold, PYSNMP_MODULE_ID=atFiberMon, atFiberMonSensitivity=atFiberMonSensitivity, atFiberMonTrapVariable=atFiberMonTrapVariable, atFiberMonNotifications=atFiberMonNotifications)
