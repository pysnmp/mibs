#
# PySNMP MIB module S5-ROOT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nortel/S5-ROOT-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 13:32:40 2024
# On host fv-az883-167 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, MibIdentifier, Counter32, Bits, NotificationType, TimeTicks, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Gauge32, ObjectIdentity, IpAddress, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "Counter32", "Bits", "NotificationType", "TimeTicks", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Gauge32", "ObjectIdentity", "IpAddress", "Integer32", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
series5000, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "series5000")
s5RootMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 1, 6, 0))
s5RootMib.setRevisions(('2004-07-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: s5RootMib.setRevisionsDescriptions(('Version 118:  Conversion to SMIv2',))
if mibBuilder.loadTexts: s5RootMib.setLastUpdated('200407200000Z')
if mibBuilder.loadTexts: s5RootMib.setOrganization('Nortel Networks')
if mibBuilder.loadTexts: s5RootMib.setContactInfo('Nortel Networks')
if mibBuilder.loadTexts: s5RootMib.setDescription("5000 Root MIB\n\n            Copyright 1993-2004 Nortel Networks, Inc.\n            All rights reserved.\n            This Nortel Networks SNMP Management Information Base Specification\n            (Specification) embodies Nortel Networks' confidential and\n            proprietary intellectual property. Nortel Networks retains all\n            title and ownership in the Specification, including any\n            revisions.\n\n            This Specification is supplied 'AS IS,' and Nortel Networks makes\n            no warranty, either express or implied, as to the use,\n            operation, condition, or performance of the Specification.")
s5reg = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 1))
s5Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2))
s5EthTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 1))
s5TokTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 2))
s5FddTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 3))
s5ChaTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 4))
s5ComTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 5))
s5EcellTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 6))
atmTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 7))
remoteLoginTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 8))
stpChangeTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 9))
s5Chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 3))
s5Agent = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4))
s5Com = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 5))
s5Eth = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 6))
s5Tok = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 7))
s5Fddi = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 8))
s5EnTop = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 9))
s5TrTop = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 10))
s5FdTop = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 11))
s5EnMsTop = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 13))
s5AtmTop = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 14))
s5IfExt = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 15))
bnLogMsg = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 16))
s5Tcs = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 17))
mibBuilder.exportSymbols("S5-ROOT-MIB", s5ComTrap=s5ComTrap, s5EnMsTop=s5EnMsTop, s5EnTop=s5EnTop, s5Fddi=s5Fddi, remoteLoginTrap=remoteLoginTrap, s5Tcs=s5Tcs, stpChangeTrap=stpChangeTrap, atmTraps=atmTraps, s5TrTop=s5TrTop, s5IfExt=s5IfExt, s5Eth=s5Eth, s5Tok=s5Tok, s5EcellTrap=s5EcellTrap, s5FddTrap=s5FddTrap, PYSNMP_MODULE_ID=s5RootMib, s5reg=s5reg, bnLogMsg=bnLogMsg, s5Agent=s5Agent, s5Traps=s5Traps, s5TokTrap=s5TokTrap, s5EthTrap=s5EthTrap, s5RootMib=s5RootMib, s5Chassis=s5Chassis, s5FdTop=s5FdTop, s5AtmTop=s5AtmTop, s5Com=s5Com, s5ChaTrap=s5ChaTrap)
