#
# PySNMP MIB module IRT-DVBT-DUALDRIVE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/irt/IRT-DVBT-DUALDRIVE-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 16:00:12 2024
# On host fv-az1205-935 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
eventTimeStamp, eventPriority, eventCounter, mibRelease = mibBuilder.importSymbols("IRT-COMMONVARBINDS-MIB", "eventTimeStamp", "eventPriority", "eventCounter", "mibRelease")
FaultOK, LocalRemote, SelectManualAuto, SelectOnOff, SFNMFN, OkNotOk, dvbT, Input1Input2, ReadyNotReady, MuteOk, ExecutedNotExecuted, WarningOK, PresentNotPresent = mibBuilder.importSymbols("IRT-TRANSMITTER-SMI-MIB", "FaultOK", "LocalRemote", "SelectManualAuto", "SelectOnOff", "SFNMFN", "OkNotOk", "dvbT", "Input1Input2", "ReadyNotReady", "MuteOk", "ExecutedNotExecuted", "WarningOK", "PresentNotPresent")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
sysName, sysLocation, sysDescr = mibBuilder.importSymbols("SNMPv2-MIB", "sysName", "sysLocation", "sysDescr")
Integer32, ObjectIdentity, TimeTicks, iso, Gauge32, Unsigned32, ModuleIdentity, IpAddress, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "TimeTicks", "iso", "Gauge32", "Unsigned32", "ModuleIdentity", "IpAddress", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "Bits", "Counter32")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
dvbDualDrive = ModuleIdentity((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4))
dvbDualDrive.setRevisions(('2007-05-04 14:00', '2006-12-20 14:00', '2006-09-21 14:00', '2006-09-19 14:00', '2006-09-07 14:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: dvbDualDrive.setRevisionsDescriptions(('change SFNMode, LocalMode (description only) and Module-COMPLIANCE', 'Corrections\n\t\t\t\t', 'Adding Compliance Statement', 'Correcting Imports', 'Relocation of the TC-MIB from the standard OID area at IEC into the private OID area of the IRT',))
if mibBuilder.loadTexts: dvbDualDrive.setLastUpdated('200705041400Z')
if mibBuilder.loadTexts: dvbDualDrive.setOrganization('IRT for WORKING-GROUP-TC-MIB')
if mibBuilder.loadTexts: dvbDualDrive.setContactInfo('Contact-info:\n\t\t\t\t\n\t\t\t\tAndreas Metz\n\t\t\t\t\n\t\t\t\tInstitut fuer Rundfunktechnik GmbH\n\t\t\t\tBroadcast Networks and Servers (SN)\n\t\t\t\t\n\t\t\t\tFloriansmuehlstr.60\n\t\t\t\t80939 Munich\n\t\t\t\tGermany\n\t\t\t\t\n\t\t\t\tPhone: +49 89 32399 325\n\t\t\t\tFax: +49 89 32399 354 ')
if mibBuilder.loadTexts: dvbDualDrive.setDescription('Dual Drive\n\t\t\t\t\n\t\t\t\tbranch definition\n\t\t\t\t\n\t\t\t\t1st level\n\t\t\t\t\n\t\t\t\tevents               OBJECT IDENTIFIER ::= { dvbDualDrive 0 }\n\t\t\t\tdvbDDGeneral         OBJECT IDENTIFIER ::= { dvbDualDrive 1 }\n\t\t\t\tdvbDDExciterA        OBJECT IDENTIFIER ::= { dvbDualDrive 2 }\n\t\t\t\tdvbDDExciterB        OBJECT IDENTIFIER ::= { dvbDualDrive 3 }\n\t\t\t\tdvbDDEventEnable     OBJECT IDENTIFIER ::= { dvbDualDrive 4 }\n\t\t\t\tdvbDDEventPriority   OBJECT IDENTIFIER ::= { dvbDualDrive 5 }\n\t\t\t\tgroups               OBJECT IDENTIFIER ::= { dvbDualDrive 6 }\n\t\t\t\t\n\t\t\t\t2nd level\n\t\t\t\t\n\t\t\t\tdvbDDEventEnableGeneral   OBJECT IDENTIFIER ::= { dvbDDEventEnable 1 }\n\t\t\t\tdvbDDEventEnableExciterA  OBJECT IDENTIFIER ::= { dvbDDEventEnable 2 }\n\t\t\t\tdvbDDEventEnableExciterB  OBJECT IDENTIFIER ::= { dvbDDEventEnable 3 }\n\t\t\t\t\n\t\t\t\tdvbDDEventPriorityGeneral   OBJECT IDENTIFIER ::= { dvbDDEventPriority 1 }\n\t\t\t\tdvbDDEventPriorityExciterA  OBJECT IDENTIFIER ::= { dvbDDEventPriority 2 }\n\t\t\t\tdvbDDEventPriorityExciterB  OBJECT IDENTIFIER ::= { dvbDDEventPriority 3 }\n\t\t\t\t\n\t\t\t\tend branch ')
dvbEventsDD = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0))
dvbDDInputPreselectionEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 1)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDInputPreselection"))
if mibBuilder.loadTexts: dvbDDInputPreselectionEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDInputPreselectionEvent.setDescription('Description. dvbDDInputPreselection notification')
dvbDDInputAutomaticEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 2)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDInputAutomatic"))
if mibBuilder.loadTexts: dvbDDInputAutomaticEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDInputAutomaticEvent.setDescription('Description. dvbDDInputAutomatic notification')
dvbDDPreselectionExciterEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 3)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDPreselectionExciter"))
if mibBuilder.loadTexts: dvbDDPreselectionExciterEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDPreselectionExciterEvent.setDescription('Description. dvbDDPreselectionExciterEvent notification')
dvbDDTransmitterOpModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 4)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDTransmitterOpMode"))
if mibBuilder.loadTexts: dvbDDTransmitterOpModeEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDTransmitterOpModeEvent.setDescription('Description. dvbDDTransmitterOpMode notification')
dvbDDReserveControlEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 5)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDReserveControl"))
if mibBuilder.loadTexts: dvbDDReserveControlEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDReserveControlEvent.setDescription('Description. dvbDDReserveControl nitification')
dvbDDRFPresentEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 6)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDRFPresent"))
if mibBuilder.loadTexts: dvbDDRFPresentEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDRFPresentEvent.setDescription('Description. dvbDDRFPresent notification')
dvbDDResetFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 7)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDResetFault"))
if mibBuilder.loadTexts: dvbDDResetFaultEvent.setStatus('obsolete')
if mibBuilder.loadTexts: dvbDDResetFaultEvent.setDescription('Notification is inactive!\n\t\t\t\t\n\t\t\t\tDescription. dvbDDResetFault notification')
dvbDDAmplifierFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 8)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDAmplifierFault"))
if mibBuilder.loadTexts: dvbDDAmplifierFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDAmplifierFaultEvent.setDescription('Description. dvbDDAmplifierFault notification')
dvbDDAmplifierWarningEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 9)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDAmplifierWarning"))
if mibBuilder.loadTexts: dvbDDAmplifierWarningEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDAmplifierWarningEvent.setDescription('Description. dvbDDAmplifierWarning notification')
dvbDDActiveExciterEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 10)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDActiveExciter"))
if mibBuilder.loadTexts: dvbDDActiveExciterEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDActiveExciterEvent.setDescription('Description. dvbDDActiveExciter notification')
dvbDDLocalModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 11)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDLocalMode"))
if mibBuilder.loadTexts: dvbDDLocalModeEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDLocalModeEvent.setDescription('Description. dvbDDLocalMode notification')
dvbDDControlUnitFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 12)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDControlUnitFault"))
if mibBuilder.loadTexts: dvbDDControlUnitFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDControlUnitFaultEvent.setDescription('Description. dvbDDControlUnitFault notification')
dvbDDSwitchOverModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 13)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverMode"))
if mibBuilder.loadTexts: dvbDDSwitchOverModeEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverModeEvent.setDescription('Description. dvbDDSwitchOverMode notification')
dvbDDSwitchOverReadyEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 14)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverReady"))
if mibBuilder.loadTexts: dvbDDSwitchOverReadyEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverReadyEvent.setDescription('Description. dvbDDSwitchOverReady notification')
dvbDDSwitchOverExecutedEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 15)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverExecuted"))
if mibBuilder.loadTexts: dvbDDSwitchOverExecutedEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverExecutedEvent.setDescription('Description. dvbDDSwitchOverExecuted notification')
dvbDDSwitchOverFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 16)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverFault"))
if mibBuilder.loadTexts: dvbDDSwitchOverFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverFaultEvent.setDescription('Description. dvbDDSwitchOverFault notification')
dvbDDExciterAInput1OKEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 17)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAInput1OK"))
if mibBuilder.loadTexts: dvbDDExciterAInput1OKEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAInput1OKEvent.setDescription('Description. dvbDDExciterAInput1OK notification')
dvbDDExciterAInput2OKEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 18)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAInput2OK"))
if mibBuilder.loadTexts: dvbDDExciterAInput2OKEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAInput2OKEvent.setDescription('Description. dvbDDExciterAInput2OK notification')
dvbDDExciterALocalModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 19)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterALocalMode"))
if mibBuilder.loadTexts: dvbDDExciterALocalModeEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterALocalModeEvent.setDescription('Description. dvbDDExciterALocalMode notification')
dvbDDExciterAFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 20)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAFault"))
if mibBuilder.loadTexts: dvbDDExciterAFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAFaultEvent.setDescription('Description. dvbDDExciterAFault notification')
dvbDDExciterAWarningEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 21)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAWarning"))
if mibBuilder.loadTexts: dvbDDExciterAWarningEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAWarningEvent.setDescription('Description. dvbDDExciterAWarning notification')
dvbDDExciterAActiveInputEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 22)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAActiveInput"))
if mibBuilder.loadTexts: dvbDDExciterAActiveInputEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAActiveInputEvent.setDescription('Description. dvbDDExciterAActiveInput notification')
dvbDDExciterASFNModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 23)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterASFNMode"))
if mibBuilder.loadTexts: dvbDDExciterASFNModeEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterASFNModeEvent.setDescription('Description. dvbDDExciterASFNMode notification')
dvbDDExciterARefFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 24)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterARefFault"))
if mibBuilder.loadTexts: dvbDDExciterARefFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterARefFaultEvent.setDescription('Description. dvbDDExciterARefFault notification')
dvbDDExciterAMuteEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 25)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAMute"))
if mibBuilder.loadTexts: dvbDDExciterAMuteEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAMuteEvent.setDescription('Description. dvbDDExciterAMute notification')
dvbDDExciterAFaultMIPEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 26)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAFaultMIP"))
if mibBuilder.loadTexts: dvbDDExciterAFaultMIPEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAFaultMIPEvent.setDescription('Description. dvbDDExciterAFaultMIP notification')
dvbDDExciterAStuffingModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 27)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAStuffingMode"))
if mibBuilder.loadTexts: dvbDDExciterAStuffingModeEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAStuffingModeEvent.setDescription('Description. dvbDDExciterAStuffingMode notification')
dvbDDExciterBInput1OKEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 28)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBInput1OK"))
if mibBuilder.loadTexts: dvbDDExciterBInput1OKEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBInput1OKEvent.setDescription('Description. dvbDDExciterBInput1OK notification')
dvbDDExciterBInput2OKEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 29)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBInput2OK"))
if mibBuilder.loadTexts: dvbDDExciterBInput2OKEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBInput2OKEvent.setDescription('Description. dvbDDExciterBInput2OK notification')
dvbDDExciterBLocalModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 30)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBLocalMode"))
if mibBuilder.loadTexts: dvbDDExciterBLocalModeEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBLocalModeEvent.setDescription('Description. dvbDDExciterBLocalMode notification')
dvbDDExciterBFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 31)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBFault"))
if mibBuilder.loadTexts: dvbDDExciterBFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBFaultEvent.setDescription('Description. dvbDDExciterBFault notification')
dvbDDExciterBWarningEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 32)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBWarning"))
if mibBuilder.loadTexts: dvbDDExciterBWarningEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBWarningEvent.setDescription('Description. dvbDDExciterBWarning notification')
dvbDDExciterBActiveInputEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 33)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBActiveInput"))
if mibBuilder.loadTexts: dvbDDExciterBActiveInputEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBActiveInputEvent.setDescription('Description. dvbDDExciterBActiveInput notification')
dvbDDExciterBSFNModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 34)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBSFNMode"))
if mibBuilder.loadTexts: dvbDDExciterBSFNModeEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBSFNModeEvent.setDescription('Description. dvbDDExciterBSFNMode notification')
dvbDDExciterBRefFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 35)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBRefFault"))
if mibBuilder.loadTexts: dvbDDExciterBRefFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBRefFaultEvent.setDescription('Description. dvbDDExciterBRefFault notification')
dvbDDExciterBMuteEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 36)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBMute"))
if mibBuilder.loadTexts: dvbDDExciterBMuteEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBMuteEvent.setDescription('Description. dvbDDExciterBMute notification')
dvbDDExciterBFaultMIPEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 37)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBFaultMIP"))
if mibBuilder.loadTexts: dvbDDExciterBFaultMIPEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBFaultMIPEvent.setDescription('Description. dvbDDExciterBFaultMIP notification')
dvbDDExciterBStuffingModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 0, 38)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBStuffingMode"))
if mibBuilder.loadTexts: dvbDDExciterBStuffingModeEvent.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBStuffingModeEvent.setDescription('Description. dvbDDExciterBStuffingMode notification')
dvbDDGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1))
dvbDDInputPreselection = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 1), Input1Input2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDInputPreselection.setStatus('current')
if mibBuilder.loadTexts: dvbDDInputPreselection.setDescription('Dual drive. Preselection input \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) Input 1\n\t\t\t\t(2) Input 2')
dvbDDInputAutomatic = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 2), SelectManualAuto()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDInputAutomatic.setStatus('current')
if mibBuilder.loadTexts: dvbDDInputAutomatic.setDescription('Dual drive. Input selection mode: manual or automatic\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) manual \n\t\t\t\t(2) automatic')
dvbDDPreselectionExciter = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("exciterA", 1), ("exciterB", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDPreselectionExciter.setStatus('current')
if mibBuilder.loadTexts: dvbDDPreselectionExciter.setDescription('Dual drive. Preselection of the exciter \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t')
dvbDDTransmitterOpMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 4), SelectOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDTransmitterOpMode.setStatus('current')
if mibBuilder.loadTexts: dvbDDTransmitterOpMode.setDescription('Dual drive. Operation mode of main exciter \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ON\n\t\t\t\t(2) OFF')
dvbDDReserveControl = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 5), SelectOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDReserveControl.setStatus('current')
if mibBuilder.loadTexts: dvbDDReserveControl.setDescription('Dual drive. Operation mode of reserve exciter\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ON \n\t\t\t\t(2) OFF ')
dvbDDRFPresent = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 6), PresentNotPresent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDRFPresent.setStatus('current')
if mibBuilder.loadTexts: dvbDDRFPresent.setDescription('Dual drive. Output power is present\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) present\n\t\t\t\t(2) not present')
dvbDDResetFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDResetFault.setStatus('obsolete')
if mibBuilder.loadTexts: dvbDDResetFault.setDescription('Massage is inactive!\n\t\t\t\t\n\t\t\t\tDescription.Trigger for reset the sum fault\n\t\t\t\t\n\t\t\t\t<1>\n\t\t\t\t1: reset sum fault')
dvbDDAmplifierFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 8), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDAmplifierFault.setStatus('current')
if mibBuilder.loadTexts: dvbDDAmplifierFault.setDescription('Dual drive. Fault state of amplifier \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dvbDDAmplifierWarning = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 9), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDAmplifierWarning.setStatus('current')
if mibBuilder.loadTexts: dvbDDAmplifierWarning.setDescription('Dual drive. Warning state of amplifier \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
dvbDDActiveExciter = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("exciterA", 1), ("exciterB", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDActiveExciter.setStatus('current')
if mibBuilder.loadTexts: dvbDDActiveExciter.setDescription('Dual drive. Active exciter \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t')
dvbDDLocalMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 11), LocalRemote()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDLocalMode.setStatus('current')
if mibBuilder.loadTexts: dvbDDLocalMode.setDescription('Dual drive. Local mode\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) local\n\t\t\t\t(2) remote')
dvbDDControlUnitFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 12), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDControlUnitFault.setStatus('current')
if mibBuilder.loadTexts: dvbDDControlUnitFault.setDescription('Dual drive. State of the control unit\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dvbDDSwitchOverMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 13), SelectManualAuto()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDSwitchOverMode.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverMode.setDescription('Dual drive. Switch over mode: manual or automatic\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) manual \n\t\t\t\t(2) automatic')
dvbDDSwitchOverReady = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 14), ReadyNotReady()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDSwitchOverReady.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverReady.setDescription('Dual drive. State of the dual drive switch over unit\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ready\n\t\t\t\t(2) not ready')
dvbDDSwitchOverExecuted = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 15), ExecutedNotExecuted()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDSwitchOverExecuted.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverExecuted.setDescription('Dual drive. Showsif the reserve switch over unit it has executed\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) excecuted\n\t\t\t\t(2) not excecuted')
dvbDDSwitchOverFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 1, 16), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDSwitchOverFault.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverFault.setDescription('Dual drive. fault state of the switsch over unit\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) faulty\n\t\t\t\t(2) ok')
dvbDDExciterA = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2))
dvbDDExciterAInput1OK = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2, 1), OkNotOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterAInput1OK.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAInput1OK.setDescription('Dual drive. Describes if the input signal at the input 1 of exciter A is ok\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) signal ok\n\t\t\t\t(2) signal is not ok')
dvbDDExciterAInput2OK = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2, 2), OkNotOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterAInput2OK.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAInput2OK.setDescription('Dual drive. Describes if the input signal at the input 2 of exciter A is ok\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) signal ok\n\t\t\t\t(2) signal is not ok')
dvbDDExciterALocalMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2, 3), LocalRemote()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterALocalMode.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterALocalMode.setDescription('Dual drive. Local mode of exciter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) local\n\t\t\t\t(2) remote')
dvbDDExciterAFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2, 4), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterAFault.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAFault.setDescription('Dual drive. Fault state of exciter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dvbDDExciterAWarning = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2, 5), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterAWarning.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAWarning.setDescription('Dual drive.Warning state of exciter A \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
dvbDDExciterAActiveInput = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("input1", 1), ("input2", 2), ("seamless", 3), ("hmHierarchicalModulation", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterAActiveInput.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAActiveInput.setDescription('Dual drive. Active input of the exciter A \n\t\t\t\t\n\t\t\t\t')
dvbDDExciterASFNMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2, 7), SFNMFN()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterASFNMode.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterASFNMode.setDescription('Dual drive. SFN mode of exciter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) SFN\n\t\t\t\t(2) MFN\n\t\t\t\t\n\t\t\t\t')
dvbDDExciterARefFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2, 8), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterARefFault.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterARefFault.setDescription('Dual drive. Fault state of the GPS input or the reference frequency of exciter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dvbDDExciterAMute = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2, 9), MuteOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterAMute.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAMute.setDescription('Dual drive. Mute state of exciter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) mute\n\t\t\t\t(2) ok')
dvbDDExciterAFaultMIP = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2, 10), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterAFaultMIP.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAFaultMIP.setDescription('Dual drive. MIP fault state of exciter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dvbDDExciterAStuffingMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 2, 11), SelectOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterAStuffingMode.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAStuffingMode.setDescription('Dual drive. Stuffing state of exciter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ON \n\t\t\t\t(2) OFF ')
dvbDDExciterB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3))
dvbDDExciterBInput1OK = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3, 1), OkNotOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterBInput1OK.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBInput1OK.setDescription('Dual drive. Describes if the input signal at the input 1 of exciter B is ok\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) signal ok\n\t\t\t\t(2) signal is not ok')
dvbDDExciterBInput2OK = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3, 2), OkNotOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterBInput2OK.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBInput2OK.setDescription('Dual drive. Describes if the input signal at the input 2 of exciter B is ok\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) signal ok\n\t\t\t\t(2) signal is not ok ')
dvbDDExciterBLocalMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3, 3), LocalRemote()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterBLocalMode.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBLocalMode.setDescription('Dual drive. Local mode of exciter B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) local\n\t\t\t\t(2) remote')
dvbDDExciterBFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3, 4), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterBFault.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBFault.setDescription('Dual drive. Fault state of exciter B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dvbDDExciterBWarning = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3, 5), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterBWarning.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBWarning.setDescription('Dual drive. Warning state of exciter B \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
dvbDDExciterBActiveInput = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("input1", 1), ("input2", 2), ("seamless", 3), ("hmHierarchicalModulation", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterBActiveInput.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBActiveInput.setDescription('Dual drive. Active input of the exciter B \n\t\t\t\t\n\t\t\t\t')
dvbDDExciterBSFNMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3, 7), SFNMFN()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterBSFNMode.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBSFNMode.setDescription('Dual drive. SFN mode of exciter B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) SFN\n\t\t\t\t(2) MFN')
dvbDDExciterBRefFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3, 8), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterBRefFault.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBRefFault.setDescription('Dual drive. Fault state of the GPS input or the reference frequency of exciter B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dvbDDExciterBMute = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3, 9), MuteOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterBMute.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBMute.setDescription('Dual drive. Mute state of exciter B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) mute\n\t\t\t\t(2) ok')
dvbDDExciterBFaultMIP = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3, 10), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterBFaultMIP.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBFaultMIP.setDescription('Dual drive. MIP fault state of exciter B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dvbDDExciterBStuffingMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 3, 11), SelectOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbDDExciterBStuffingMode.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBStuffingMode.setDescription('Dual drive. Stuffing state of exciter B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ON \n\t\t\t\t(2) OFF ')
dvbDDEventEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4))
dvbDDEventEnableGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1))
dvbDDInputPreselectionEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDInputPreselectionEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDInputPreselectionEnable.setDescription('Description. Enable/Disable switch for dvbDDInputPreselection event')
dvbDDInputAutomaticEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDInputAutomaticEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDInputAutomaticEnable.setDescription('Description. Enable/Disable switch for dvbDDInputAutomatic event')
dvbDDPreselectionExciterEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDPreselectionExciterEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDPreselectionExciterEnable.setDescription('Description. Enable/Disable switch for dvbDDPreselectionExciter event')
dvbDDTransmitterOpModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDTransmitterOpModeEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDTransmitterOpModeEnable.setDescription('Description. Enable/Disable switch for dvbDDTransmitterOpMode event')
dvbDDReserveControlEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDReserveControlEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDReserveControlEnable.setDescription('Description. Enable/Disable switch for dvbDDIReserveControl event')
dvbDDRFPresentEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDRFPresentEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDRFPresentEnable.setDescription('Description. Enable/Disable switch for dvbDDRFPresent event\n\t\t\t\t')
dvbDDResetFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDResetFaultEnable.setStatus('obsolete')
if mibBuilder.loadTexts: dvbDDResetFaultEnable.setDescription('Massage ist inactive!\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tDescription. Enable/Disable switch for dvbDDResetFault event\n\t\t\t\t')
dvbDDAmplifierFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDAmplifierFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDAmplifierFaultEnable.setDescription('Description. Enable/Disable switch for dvbDDAmplifierFault event')
dvbDDAmplifierWarningEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDAmplifierWarningEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDAmplifierWarningEnable.setDescription('Description. Enable/Disable switch for dvbDDAmplifierWarning event')
dvbDDActiveExciterEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDActiveExciterEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDActiveExciterEnable.setDescription('Description. Enable/Disable switch for dvbDDActiveExciter event\n\t\t\t\t')
dvbDDLocalModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDLocalModeEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDLocalModeEnable.setDescription('Description. Enable/Disable switch for dvbDDLocalMode event')
dvbDDControlUnitFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDControlUnitFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDControlUnitFaultEnable.setDescription('Description. Enable/Disable switch for dvbDDControlUnitFault event')
dvbDDSwitchOverModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDSwitchOverModeEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverModeEnable.setDescription('Description. Enable/Disable switch for dvbDDSwitchOverMode event')
dvbDDSwitchOverReadyEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDSwitchOverReadyEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverReadyEnable.setDescription('Description. Enable/Disable switch for dvbDDSwitchOverReady event')
dvbDDSwitchOverExecutedEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDSwitchOverExecutedEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverExecutedEnable.setDescription('Description. Enable/Disable switch for dvbDDSwitchOverExecuted event')
dvbDDSwitchOverFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDSwitchOverFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverFaultEnable.setDescription('Description. Enable/Disable switch for dvbDDSwitchOverFault event')
dvbDDEventEnableExciterA = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2))
dvbDDExciterAInput1OKEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAInput1OKEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAInput1OKEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterAInput1OK event')
dvbDDExciterAInput2OKEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAInput2OKEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAInput2OKEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterAInput2OK event')
dvbDDExciterALocalModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterALocalModeEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterALocalModeEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterALocalMode event')
dvbDDExciterAFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAFaultEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterAFault  event')
dvbDDExciterAWarningEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAWarningEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAWarningEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterAWarning event')
dvbDDExciterAActiveInputEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAActiveInputEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAActiveInputEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterAActiveInput event')
dvbDDExciterASFNModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterASFNModeEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterASFNModeEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterASFNMode event')
dvbDDExciterARefFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterARefFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterARefFaultEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterARefFault event')
dvbDDExciterAMuteEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAMuteEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAMuteEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterAMute event')
dvbDDExciterAFaultMIPEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAFaultMIPEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAFaultMIPEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterAFaultMIP event')
dvbDDExciterAStuffingModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 2, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAStuffingModeEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAStuffingModeEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterAStuffingMode event')
dvbDDEventEnableExciterB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3))
dvbDDExciterBInput1OKEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBInput1OKEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBInput1OKEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterBInput1OK event')
dvbDDExciterBInput2OKEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBInput2OKEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBInput2OKEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterBInput2OK event')
dvbDDExciterBLocalModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBLocalModeEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBLocalModeEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterBLocalMode event')
dvbDDExciterBFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBFaultEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterBFault event')
dvbDDExciterBWarningEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBWarningEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBWarningEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterBWarning event')
dvbDDExciterBActiveInputEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBActiveInputEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBActiveInputEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterBActiveInput event')
dvbDDExciterBSFNModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBSFNModeEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBSFNModeEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterBSFNMode event')
dvbDDExciterBRefFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBRefFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBRefFaultEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterBRefFault event')
dvbDDExciterBMuteEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBMuteEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBMuteEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterBMute event')
dvbDDExciterBFaultMIPEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBFaultMIPEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBFaultMIPEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterBFaultMIP event')
dvbDDExciterBStuffingModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 4, 3, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBStuffingModeEnable.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBStuffingModeEnable.setDescription('Description. Enable/Disable switch for dvbDDExciterBStuffingMode event')
dvbDDEventPriority = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5))
dvbDDEventPriorityGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1))
dvbDDInputPreselectionPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDInputPreselectionPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDInputPreselectionPriority.setDescription('Description. Priority for dvbDDInputPreselection event')
dvbDDInputAutomaticPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDInputAutomaticPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDInputAutomaticPriority.setDescription('Description. Priority for dvbDDInputAutomatic event')
dvbDDPreselectionExciterPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDPreselectionExciterPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDPreselectionExciterPriority.setDescription('Description. Priority for dvbDDInputExciter event')
dvbDDTransmitterOpModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDTransmitterOpModePriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDTransmitterOpModePriority.setDescription('Description. Priority for dvbDDTransmitterOpMode event')
dvbDDReserveControlPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDReserveControlPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDReserveControlPriority.setDescription('Description. Priority for dvbDDReserveControl event')
dvbDDRFPresentPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDRFPresentPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDRFPresentPriority.setDescription('Description. Priority for dvbDDRFPresent event')
dvbDDResetFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDResetFaultPriority.setStatus('obsolete')
if mibBuilder.loadTexts: dvbDDResetFaultPriority.setDescription('Massage ist inactive!\n\t\t\t\t\n\t\t\t\tDescription. Priority for dvbDDAmplifierResetFaultFault event')
dvbDDAmplifierFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDAmplifierFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDAmplifierFaultPriority.setDescription('Description. Priority for dvbDDAmplifierFault event')
dvbDDAmplifierWarningPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDAmplifierWarningPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDAmplifierWarningPriority.setDescription('Description. Priority for dvbDDAmplifierWarning event')
dvbDDActiveExciterPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDActiveExciterPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDActiveExciterPriority.setDescription('Description. Priority for dvbDDActiveExciter event')
dvbDDLocalModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDLocalModePriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDLocalModePriority.setDescription('Description. Priority for dvbDDLocalMode event')
dvbDDControlUnitFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDControlUnitFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDControlUnitFaultPriority.setDescription('Description. Priority for dvbDDControlUnitFault event')
dvbDDSwitchOverModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDSwitchOverModePriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverModePriority.setDescription('Description. Priority for dvbDDSwitchOverMode event')
dvbDDSwitchOverReadyPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDSwitchOverReadyPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverReadyPriority.setDescription('Description. Priority for dvbDDSwitchOverReady event')
dvbDDSwitchOverExecutedPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDSwitchOverExecutedPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverExecutedPriority.setDescription('Description. Priority for dvbDDSwitchOverExecuted event')
dvbDDSwitchOverFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDSwitchOverFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDSwitchOverFaultPriority.setDescription('Description. Priority for dvbDDSwitchOverFault event')
dvbDDEventPriorityExciterA = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2))
dvbDDExciterAInput1OKPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAInput1OKPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAInput1OKPriority.setDescription('Description. Priority for dvbDDExciterAInput1OK event')
dvbDDExciterAInput2OKPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAInput2OKPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAInput2OKPriority.setDescription('Description. Priority for dvbDDExciterAInput2OK event')
dvbDDExciterALocalModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterALocalModePriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterALocalModePriority.setDescription('Description. Priority for dvbDDExciterALocalMode event')
dvbDDExciterAFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAFaultPriority.setDescription('Description. Priority for dvbDDExciterAFault event')
dvbDDExciterAWarningPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAWarningPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAWarningPriority.setDescription('Description. Priority for dvbDDExciterAWarning event')
dvbDDExciterAActiveInputPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAActiveInputPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAActiveInputPriority.setDescription('Description. Priority for dvbDDExciterAActiveInput event')
dvbDDExciterASFNModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterASFNModePriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterASFNModePriority.setDescription('Description. Priority for dvbDDExciterASFNMode event')
dvbDDExciterARefFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterARefFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterARefFaultPriority.setDescription('Description. Priority for dvbDDExciterARefFault event')
dvbDDExciterAMutePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAMutePriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAMutePriority.setDescription('Description. Priority for dvbDDExciterAMute event')
dvbDDExciterAFaultMIPPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAFaultMIPPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAFaultMIPPriority.setDescription('Description. Priority for dvbDDExciterAFaultMIP event')
dvbDDExciterAStuffingModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 2, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterAStuffingModePriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterAStuffingModePriority.setDescription('Description. Priority for dvbDDExciterAStuffingMode event')
dvbDDEventPriorityExciterB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3))
dvbDDExciterBInput1OKPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBInput1OKPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBInput1OKPriority.setDescription('Description. Priority for dvbDDExciterBInput1OK event')
dvbDDExciterBInput2OKPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBInput2OKPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBInput2OKPriority.setDescription('Description. Priority for dvbDDExciterBInput2OK event')
dvbDDExciterBLocalModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBLocalModePriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBLocalModePriority.setDescription('Description. Priority for dvbDDExciterBLocalMode event')
dvbDDExciterBFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBFaultPriority.setDescription('Description. Priority for dvbDDExciterBFault event')
dvbDDExciterBWarningPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBWarningPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBWarningPriority.setDescription('Description. Priority for dvbDDExciterBWarning event')
dvbDDExciterBActiveInputPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBActiveInputPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBActiveInputPriority.setDescription('Description. Priority for dvbDDExciterBActiveInput event')
dvbDDExciterBSFNModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBSFNModePriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBSFNModePriority.setDescription('Description. Priority for dvbDDExciterBSFNMode event')
dvbDDExciterBRefFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBRefFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBRefFaultPriority.setDescription('Description. Priority for dvbDDExciterBRefFault event')
dvbDDExciterBMutePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBMutePriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBMutePriority.setDescription('Description. Priority for dvbDDExciterBMute event')
dvbDDExciterBFaultMIPPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBFaultMIPPriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBFaultMIPPriority.setDescription('Description. Priority for dvbDDExciterBFaultMIP event')
dvbDDExciterBStuffingModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 5, 3, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbDDExciterBStuffingModePriority.setStatus('current')
if mibBuilder.loadTexts: dvbDDExciterBStuffingModePriority.setDescription('Description. Priority for dvbDDExciterBStuffingMode event')
groupsDD = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 6))
eventGroupDD = NotificationGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 6, 1)).setObjects(("IRT-DVBT-DUALDRIVE-MIB", "dvbDDInputPreselectionEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDInputAutomaticEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDPreselectionExciterEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDTransmitterOpModeEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDReserveControlEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDRFPresentEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDAmplifierFaultEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDActiveExciterEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDLocalModeEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDControlUnitFaultEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverModeEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverReadyEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverExecutedEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverFaultEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAInput1OKEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAInput2OKEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterALocalModeEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAFaultEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAWarningEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAActiveInputEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterASFNModeEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterARefFaultEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAMuteEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAFaultMIPEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAStuffingModeEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBInput1OKEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBInput2OKEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBLocalModeEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBFaultEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBWarningEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBActiveInputEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBSFNModeEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBRefFaultEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBMuteEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBFaultMIPEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBStuffingModeEvent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDAmplifierWarningEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eventGroupDD = eventGroupDD.setStatus('current')
if mibBuilder.loadTexts: eventGroupDD.setDescription('Description.')
objectGroupDD = ObjectGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 6, 2)).setObjects(("IRT-DVBT-DUALDRIVE-MIB", "dvbDDInputPreselection"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDInputAutomatic"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDPreselectionExciter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDTransmitterOpMode"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDReserveControl"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDRFPresent"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDAmplifierFault"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDActiveExciter"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDLocalMode"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDControlUnitFault"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverMode"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverReady"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverExecuted"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverFault"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAInput1OK"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAInput2OK"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterALocalMode"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAFault"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAWarning"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAActiveInput"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterASFNMode"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterARefFault"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAMute"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAFaultMIP"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAStuffingMode"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBInput1OK"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBInput2OK"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBLocalMode"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBFault"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBWarning"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBActiveInput"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBSFNMode"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBRefFault"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBMute"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBFaultMIP"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBStuffingMode"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDInputPreselectionEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDInputAutomaticEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDPreselectionExciterEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDTransmitterOpModeEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDReserveControlEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDAmplifierFaultEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDActiveExciterEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDLocalModeEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDControlUnitFaultEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverModeEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverReadyEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverExecutedEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverFaultEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAInput1OKEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAInput2OKEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterALocalModeEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAFaultEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAWarningEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAActiveInputEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterASFNModeEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterARefFaultEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAMuteEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAFaultMIPEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAStuffingModeEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBInput1OKEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBInput2OKEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBLocalModeEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBFaultEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBWarningEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBActiveInputEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBSFNModeEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBRefFaultEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBMuteEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBFaultMIPEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBStuffingModeEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDInputAutomaticPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDPreselectionExciterPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDTransmitterOpModePriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDReserveControlPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDRFPresentPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDAmplifierFaultPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDActiveExciterPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDLocalModePriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDControlUnitFaultPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverModePriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverReadyPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverExecutedPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDSwitchOverFaultPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAInput1OKPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAInput2OKPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterALocalModePriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAFaultPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAWarningPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAActiveInputPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterASFNModePriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterARefFaultPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAMutePriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAFaultMIPPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterAStuffingModePriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBInput1OKPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBInput2OKPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBLocalModePriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBFaultPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBWarningPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBActiveInputPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBSFNModePriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBRefFaultPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBMutePriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBFaultMIPPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDExciterBStuffingModePriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDInputPreselectionPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDAmplifierWarning"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDRFPresentEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDAmplifierWarningPriority"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDAmplifierWarningEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    objectGroupDD = objectGroupDD.setStatus('current')
if mibBuilder.loadTexts: objectGroupDD.setDescription('Description.dual drive: object group')
eventGroupDDobsolete = NotificationGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 6, 3)).setObjects(("IRT-DVBT-DUALDRIVE-MIB", "dvbDDResetFaultEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eventGroupDDobsolete = eventGroupDDobsolete.setStatus('obsolete')
if mibBuilder.loadTexts: eventGroupDDobsolete.setDescription('Description.')
objectGroupDDobsolete = ObjectGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 6, 4)).setObjects(("IRT-DVBT-DUALDRIVE-MIB", "dvbDDResetFault"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDResetFaultEnable"), ("IRT-DVBT-DUALDRIVE-MIB", "dvbDDResetFaultPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    objectGroupDDobsolete = objectGroupDDobsolete.setStatus('obsolete')
if mibBuilder.loadTexts: objectGroupDDobsolete.setDescription('Description.Inactive objects')
complianceDD = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 7))
dvbDualDriveCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 19831, 1, 1, 1, 4, 7, 1)).setObjects(("IRT-DVBT-DUALDRIVE-MIB", "eventGroupDD"), ("IRT-DVBT-DUALDRIVE-MIB", "objectGroupDD"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbDualDriveCompliance = dvbDualDriveCompliance.setStatus('current')
if mibBuilder.loadTexts: dvbDualDriveCompliance.setDescription('Compliance Statement')
mibBuilder.exportSymbols("IRT-DVBT-DUALDRIVE-MIB", objectGroupDDobsolete=objectGroupDDobsolete, dvbDDSwitchOverFault=dvbDDSwitchOverFault, dvbEventsDD=dvbEventsDD, dvbDDControlUnitFaultEnable=dvbDDControlUnitFaultEnable, dvbDDExciterAWarningEvent=dvbDDExciterAWarningEvent, dvbDDExciterBInput1OKPriority=dvbDDExciterBInput1OKPriority, dvbDDExciterBFaultPriority=dvbDDExciterBFaultPriority, dvbDDAmplifierWarningEnable=dvbDDAmplifierWarningEnable, dvbDDActiveExciterEvent=dvbDDActiveExciterEvent, dvbDDExciterAStuffingModePriority=dvbDDExciterAStuffingModePriority, dvbDDPreselectionExciter=dvbDDPreselectionExciter, dvbDDResetFaultEnable=dvbDDResetFaultEnable, dvbDualDriveCompliance=dvbDualDriveCompliance, dvbDDRFPresent=dvbDDRFPresent, dvbDDExciterAActiveInputEnable=dvbDDExciterAActiveInputEnable, dvbDDExciterBFaultMIPEvent=dvbDDExciterBFaultMIPEvent, dvbDDExciterAFaultMIP=dvbDDExciterAFaultMIP, dvbDDReserveControlEvent=dvbDDReserveControlEvent, dvbDDSwitchOverReadyPriority=dvbDDSwitchOverReadyPriority, dvbDDExciterBStuffingModePriority=dvbDDExciterBStuffingModePriority, dvbDDAmplifierFaultPriority=dvbDDAmplifierFaultPriority, dvbDDInputAutomaticEnable=dvbDDInputAutomaticEnable, dvbDDExciterAFaultMIPPriority=dvbDDExciterAFaultMIPPriority, dvbDDSwitchOverFaultEvent=dvbDDSwitchOverFaultEvent, dvbDDExciterAWarningPriority=dvbDDExciterAWarningPriority, dvbDDAmplifierWarningEvent=dvbDDAmplifierWarningEvent, dvbDDActiveExciterPriority=dvbDDActiveExciterPriority, dvbDDSwitchOverReady=dvbDDSwitchOverReady, PYSNMP_MODULE_ID=dvbDualDrive, dvbDDExciterAStuffingModeEnable=dvbDDExciterAStuffingModeEnable, dvbDDExciterASFNMode=dvbDDExciterASFNMode, dvbDDEventPriorityGeneral=dvbDDEventPriorityGeneral, dvbDDExciterAMutePriority=dvbDDExciterAMutePriority, dvbDDExciterALocalModeEvent=dvbDDExciterALocalModeEvent, dvbDDExciterARefFaultEvent=dvbDDExciterARefFaultEvent, dvbDDExciterBLocalMode=dvbDDExciterBLocalMode, dvbDDInputPreselectionPriority=dvbDDInputPreselectionPriority, dvbDDExciterBInput2OKPriority=dvbDDExciterBInput2OKPriority, dvbDDInputPreselectionEnable=dvbDDInputPreselectionEnable, dvbDDRFPresentPriority=dvbDDRFPresentPriority, dvbDDExciterAInput1OKEnable=dvbDDExciterAInput1OKEnable, dvbDDExciterBInput2OK=dvbDDExciterBInput2OK, dvbDDExciterBMuteEvent=dvbDDExciterBMuteEvent, dvbDDGeneral=dvbDDGeneral, dvbDDExciterBActiveInputEvent=dvbDDExciterBActiveInputEvent, dvbDDExciterAFaultEvent=dvbDDExciterAFaultEvent, dvbDDExciterALocalModePriority=dvbDDExciterALocalModePriority, dvbDDExciterBWarningEnable=dvbDDExciterBWarningEnable, dvbDDExciterBStuffingMode=dvbDDExciterBStuffingMode, dvbDDExciterAWarning=dvbDDExciterAWarning, dvbDDExciterBStuffingModeEvent=dvbDDExciterBStuffingModeEvent, dvbDDSwitchOverModeEnable=dvbDDSwitchOverModeEnable, dvbDDExciterAActiveInputEvent=dvbDDExciterAActiveInputEvent, dvbDDExciterAInput1OKPriority=dvbDDExciterAInput1OKPriority, dvbDDExciterARefFault=dvbDDExciterARefFault, dvbDDExciterAWarningEnable=dvbDDExciterAWarningEnable, dvbDDExciterBInput2OKEnable=dvbDDExciterBInput2OKEnable, dvbDDSwitchOverReadyEnable=dvbDDSwitchOverReadyEnable, dvbDDSwitchOverFaultPriority=dvbDDSwitchOverFaultPriority, dvbDDTransmitterOpModeEnable=dvbDDTransmitterOpModeEnable, dvbDualDrive=dvbDualDrive, dvbDDExciterAInput2OKEvent=dvbDDExciterAInput2OKEvent, dvbDDExciterAActiveInputPriority=dvbDDExciterAActiveInputPriority, dvbDDExciterBWarningPriority=dvbDDExciterBWarningPriority, dvbDDSwitchOverExecutedEnable=dvbDDSwitchOverExecutedEnable, dvbDDExciterBLocalModeEnable=dvbDDExciterBLocalModeEnable, dvbDDInputPreselectionEvent=dvbDDInputPreselectionEvent, dvbDDExciterARefFaultPriority=dvbDDExciterARefFaultPriority, dvbDDExciterAFaultMIPEnable=dvbDDExciterAFaultMIPEnable, dvbDDLocalModeEvent=dvbDDLocalModeEvent, dvbDDAmplifierFaultEvent=dvbDDAmplifierFaultEvent, dvbDDAmplifierWarningPriority=dvbDDAmplifierWarningPriority, dvbDDExciterAMuteEvent=dvbDDExciterAMuteEvent, dvbDDPreselectionExciterEvent=dvbDDPreselectionExciterEvent, dvbDDExciterAMuteEnable=dvbDDExciterAMuteEnable, dvbDDLocalModePriority=dvbDDLocalModePriority, dvbDDExciterBRefFaultEnable=dvbDDExciterBRefFaultEnable, dvbDDAmplifierFault=dvbDDAmplifierFault, dvbDDExciterA=dvbDDExciterA, dvbDDExciterAInput2OK=dvbDDExciterAInput2OK, dvbDDExciterALocalMode=dvbDDExciterALocalMode, dvbDDExciterAInput2OKPriority=dvbDDExciterAInput2OKPriority, dvbDDSwitchOverMode=dvbDDSwitchOverMode, dvbDDExciterBSFNModePriority=dvbDDExciterBSFNModePriority, dvbDDControlUnitFaultPriority=dvbDDControlUnitFaultPriority, dvbDDEventEnableExciterB=dvbDDEventEnableExciterB, dvbDDExciterBFault=dvbDDExciterBFault, dvbDDExciterAInput1OK=dvbDDExciterAInput1OK, dvbDDInputAutomaticPriority=dvbDDInputAutomaticPriority, dvbDDExciterASFNModePriority=dvbDDExciterASFNModePriority, eventGroupDD=eventGroupDD, dvbDDExciterAFaultMIPEvent=dvbDDExciterAFaultMIPEvent, dvbDDLocalModeEnable=dvbDDLocalModeEnable, dvbDDSwitchOverExecutedEvent=dvbDDSwitchOverExecutedEvent, dvbDDExciterBMutePriority=dvbDDExciterBMutePriority, dvbDDExciterAMute=dvbDDExciterAMute, dvbDDActiveExciterEnable=dvbDDActiveExciterEnable, dvbDDExciterBInput1OKEnable=dvbDDExciterBInput1OKEnable, dvbDDActiveExciter=dvbDDActiveExciter, dvbDDSwitchOverFaultEnable=dvbDDSwitchOverFaultEnable, eventGroupDDobsolete=eventGroupDDobsolete, dvbDDExciterBRefFault=dvbDDExciterBRefFault, dvbDDExciterBWarning=dvbDDExciterBWarning, dvbDDExciterBInput2OKEvent=dvbDDExciterBInput2OKEvent, dvbDDEventPriorityExciterA=dvbDDEventPriorityExciterA, dvbDDExciterAInput2OKEnable=dvbDDExciterAInput2OKEnable, dvbDDInputAutomaticEvent=dvbDDInputAutomaticEvent, dvbDDExciterAInput1OKEvent=dvbDDExciterAInput1OKEvent, groupsDD=groupsDD, dvbDDExciterBSFNModeEvent=dvbDDExciterBSFNModeEvent, dvbDDTransmitterOpModeEvent=dvbDDTransmitterOpModeEvent, dvbDDSwitchOverReadyEvent=dvbDDSwitchOverReadyEvent, dvbDDExciterBWarningEvent=dvbDDExciterBWarningEvent, dvbDDExciterBMuteEnable=dvbDDExciterBMuteEnable, dvbDDEventEnable=dvbDDEventEnable, dvbDDReserveControlEnable=dvbDDReserveControlEnable, dvbDDExciterASFNModeEvent=dvbDDExciterASFNModeEvent, dvbDDSwitchOverExecuted=dvbDDSwitchOverExecuted, dvbDDExciterBSFNModeEnable=dvbDDExciterBSFNModeEnable, dvbDDControlUnitFault=dvbDDControlUnitFault, dvbDDExciterBFaultMIPPriority=dvbDDExciterBFaultMIPPriority, dvbDDExciterBRefFaultPriority=dvbDDExciterBRefFaultPriority, dvbDDExciterBMute=dvbDDExciterBMute, dvbDDRFPresentEnable=dvbDDRFPresentEnable, dvbDDAmplifierFaultEnable=dvbDDAmplifierFaultEnable, dvbDDRFPresentEvent=dvbDDRFPresentEvent, dvbDDExciterARefFaultEnable=dvbDDExciterARefFaultEnable, dvbDDExciterBActiveInputPriority=dvbDDExciterBActiveInputPriority, dvbDDPreselectionExciterEnable=dvbDDPreselectionExciterEnable, dvbDDSwitchOverModePriority=dvbDDSwitchOverModePriority, dvbDDSwitchOverExecutedPriority=dvbDDSwitchOverExecutedPriority, dvbDDReserveControl=dvbDDReserveControl, dvbDDExciterBSFNMode=dvbDDExciterBSFNMode, dvbDDAmplifierWarning=dvbDDAmplifierWarning, dvbDDResetFaultEvent=dvbDDResetFaultEvent, dvbDDExciterBLocalModeEvent=dvbDDExciterBLocalModeEvent, dvbDDExciterBFaultEvent=dvbDDExciterBFaultEvent, objectGroupDD=objectGroupDD, dvbDDExciterASFNModeEnable=dvbDDExciterASFNModeEnable, dvbDDExciterBFaultEnable=dvbDDExciterBFaultEnable, dvbDDExciterBRefFaultEvent=dvbDDExciterBRefFaultEvent, dvbDDExciterAStuffingMode=dvbDDExciterAStuffingMode, dvbDDExciterAFault=dvbDDExciterAFault, dvbDDEventPriority=dvbDDEventPriority, dvbDDLocalMode=dvbDDLocalMode, dvbDDExciterB=dvbDDExciterB, dvbDDEventPriorityExciterB=dvbDDEventPriorityExciterB, dvbDDTransmitterOpMode=dvbDDTransmitterOpMode, dvbDDEventEnableExciterA=dvbDDEventEnableExciterA, dvbDDControlUnitFaultEvent=dvbDDControlUnitFaultEvent, dvbDDTransmitterOpModePriority=dvbDDTransmitterOpModePriority, dvbDDExciterBLocalModePriority=dvbDDExciterBLocalModePriority, dvbDDExciterAFaultEnable=dvbDDExciterAFaultEnable, dvbDDExciterBInput1OKEvent=dvbDDExciterBInput1OKEvent, dvbDDInputAutomatic=dvbDDInputAutomatic, dvbDDExciterBActiveInput=dvbDDExciterBActiveInput, dvbDDEventEnableGeneral=dvbDDEventEnableGeneral, dvbDDExciterAActiveInput=dvbDDExciterAActiveInput, dvbDDExciterBFaultMIPEnable=dvbDDExciterBFaultMIPEnable, dvbDDReserveControlPriority=dvbDDReserveControlPriority, dvbDDPreselectionExciterPriority=dvbDDPreselectionExciterPriority, dvbDDExciterBFaultMIP=dvbDDExciterBFaultMIP, dvbDDSwitchOverModeEvent=dvbDDSwitchOverModeEvent, dvbDDExciterBInput1OK=dvbDDExciterBInput1OK, dvbDDResetFaultPriority=dvbDDResetFaultPriority, dvbDDInputPreselection=dvbDDInputPreselection, dvbDDExciterALocalModeEnable=dvbDDExciterALocalModeEnable, dvbDDExciterAStuffingModeEvent=dvbDDExciterAStuffingModeEvent, dvbDDExciterBActiveInputEnable=dvbDDExciterBActiveInputEnable, dvbDDExciterBStuffingModeEnable=dvbDDExciterBStuffingModeEnable, dvbDDExciterAFaultPriority=dvbDDExciterAFaultPriority, dvbDDResetFault=dvbDDResetFault, complianceDD=complianceDD)
