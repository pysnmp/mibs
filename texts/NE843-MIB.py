#
# PySNMP MIB module NE843-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/gepower/NE843-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 13:29:29 2024
# On host fv-az883-167 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, ObjectIdentity, Counter64, Gauge32, MibIdentifier, IpAddress, NotificationType, ModuleIdentity, iso, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "Counter64", "Gauge32", "MibIdentifier", "IpAddress", "NotificationType", "ModuleIdentity", "iso", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
teps = MibIdentifier((1, 3, 6, 1, 4, 1, 10520))
controllermibs = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2))
release = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1))
prototypes = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 2))
ne843 = ModuleIdentity((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3))
ne843.setRevisions(('2016-01-12 16:48', '2015-10-30 19:50', '2015-03-27 21:38', '2014-12-15 23:01', '2014-10-22 20:33', '2014-06-10 14:41', '2014-05-21 18:44', '2014-03-18 19:52', '2012-10-03 21:43', '2010-06-28 14:08', '2009-06-18 18:32', '2009-05-14 16:24', '2007-04-03 16:35',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ne843.setRevisionsDescriptions(('Added DPN, and DBY', 'Added PIC, PCM, PVM, PTM and PCS. Add integer representation for some variables', 'Added 3-Phase rectifier voltages and currents', 'Added Bulk Data Report', 'Added IPV6 Parameters', 'Added Trap/Alarm, change name of inverter plant', 'Added High Temperature Load Disconnect', 'Added Inverters, ECO Priority, and ORing Fet Parameters', 'Add more objects and updates from CP841 and Millennium 2', 'Add more objects to traps', 'Switch to unique object names', 'Add updates from CP841 and IEPSO', 'Initial release',))
if mibBuilder.loadTexts: ne843.setLastUpdated('201601121648Z')
if mibBuilder.loadTexts: ne843.setOrganization('GE Power Electronics, Inc.')
if mibBuilder.loadTexts: ne843.setContactInfo('Chris Brooke - Power Systems\n\n                 Phone: +1 972 244 9288\n\n                 Postal: Power Systems\n                         601 Shiloh Road\n                         Plano, TX 75074\n                         USA')
if mibBuilder.loadTexts: ne843.setDescription('MIB for NE843 Power System.')
ne843Dc1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1))
ne843Dc1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Ide.setDescription('Identifier')
ne843Dc1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Des.setDescription('Description')
ne843Dc1Typ = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Typ.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Typ.setDescription('Type')
ne843Dc1Vdc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 4), Integer32()).setUnits('mV').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Vdc.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Vdc.setDescription('Voltage (mV)')
ne843Dc1Adc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 5), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Adc.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Adc.setDescription('Current (Amps)')
ne843Dc1Cap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 6), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Cap.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Cap.setDescription('Total Installed Rectifier Capacity (Amps)')
ne843Dc1Olcap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Olcap.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Olcap.setDescription('Total On-line Rectifier Capacity (Amps)')
ne843Dc1Trd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 8), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Trd.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Trd.setDescription('Total Rectifier Drain (Amps)')
ne843Dc1Sht = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Sht.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Sht.setDescription('Centralized Plant Shunt Type\nValues:\nNONE,\nBATTERY,\nLOAD\n')
ne843Dc1Sha = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 10), Integer32()).setUnits('Amps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Sha.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Sha.setDescription('Centralized Plant Shunt Size (Amps)')
ne843Dc1Stt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Stt.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Stt.setDescription('State\nValues:\nFLOAT,\nBOOST\n')
ne843Dc1Bod = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Bod.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Bod.setDescription('Battery On Discharge')
ne843Dc1Rss = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Rss.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Rss.setDescription('Rectifier Restart\nValues:\noff(0),\non(1)\n')
ne843Dc1Rsq = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Rsq.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Rsq.setDescription('Rectifier Sequencing\nValues:\ndisable(0),\nenable(1)\n')
ne843Dc1Ron = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Ron.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Ron.setDescription('External Standby')
ne843Dc1Rot = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(20000, 25000), ValueRangeConstraint(40000, 50000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Rot.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Rot.setDescription('All Rectifier On Threshold (mV)')
ne843Dc1Nst = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Nst.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Nst.setDescription('Number of Strings')
ne843Dc1Cps = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Cps.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Cps.setDescription('Cells per String')
ne843Dc1Bty = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Bty.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Bty.setDescription('Battery Type')
ne843Dc1Isd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Isd.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Isd.setDescription('Imminent Shutdown Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Dc1Rtm = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Rtm.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Rtm.setDescription('Reserve Time')
ne843Dc1Scap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 22), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Scap.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Scap.setDescription('String Capacity (Amps)')
ne843Dc1Mls = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Mls.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Mls.setDescription('All Shunts Monitored\nValues:\ndisable(0),\nenable(1)\n')
ne843Dc1Amj = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Amj.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Amj.setDescription('Auxiliary Fuse Major\nValue:\nAlarm report from AMJ1\n')
ne843Dc1Vsf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Vsf.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Vsf.setDescription('Sense/Control Fuse\nValue:\nAlarm report from VSF1\n')
ne843Dc1Osa = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Osa.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Osa.setDescription('Open String\nValue:\nAlarm report from OSA1\n')
ne843Dc1Zid = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Zid.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Zid.setDescription('ID Not Configured\nValue:\nAlarm report from ZID1\n')
ne843Dc1Tpa = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Tpa.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Tpa.setDescription('Thermal Probe Alarm\nValue:\nAlarm report from TPA1\n')
ne843Dc1Vmf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Vmf.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Vmf.setDescription('Voltage Module Fail\nValue:\nAlarm report from VMF1\n')
ne843Dc1Cma = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Cma.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Cma.setDescription('Minor Communication Failure\nValue:\nAlarm report from CMA1\n')
ne843Dc1Mcm = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Mcm.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Mcm.setDescription('Major Communication Failure\nValue:\nAlarm report from MCM1\n')
ne843Dc1Epo = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Epo.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Epo.setDescription('Emergency Power Off\nValue:\nAlarm report from EPO1\n')
ne843Dc1Icr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Icr.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Icr.setDescription('Incompatible Rectifier\nValue:\nAlarm report from ICR1\n')
ne843Dc1Rfa = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Rfa.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Rfa.setDescription('Rectifier Fail\nValue:\nAlarm report from RFA1\n')
ne843Dc1Acf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Acf.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Acf.setDescription('AC Fail\nValue:\nAlarm report from ACF1\n')
ne843Dc1Man = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Man.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Man.setDescription('Manual Off\nValue:\nAlarm report from MAN1\n')
ne843Dc1Did = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 37), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Did.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Did.setDescription('ID Conflict\nValue:\nAlarm report from DID1\n')
ne843Dc1Clm = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 38), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Clm.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Clm.setDescription('Rectifier Current Limit\nValue:\nAlarm report from CLM1\n')
ne843Dc1Rfn = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Rfn.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Rfn.setDescription('Rectifier Fan Failure\nValue:\nAlarm report from RFN1\n')
ne843Dc1Vla = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Vla.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Vla.setDescription('Very Low Voltage\nValue:\nAlarm report from VLA1\n')
ne843Dc1Mfa = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Mfa.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Mfa.setDescription('Multiple Rectifier Fail\nValue:\nAlarm report from MFA1\n')
ne843Dc1Rtl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 42), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Rtl.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Rtl.setDescription('Reserve Time Low\nValue:\nAlarm report from RTL1\n')
ne843Dc1Rrtl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 43), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Rrtl.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Rrtl.setDescription('Real-time Reserve Time Low\nValue:\nAlarm report from RRTL1\n')
ne843Dc1Rls = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Rls.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Rls.setDescription('Redundancy Loss\nValue:\nAlarm report from RLS1\n')
ne843Dc1Mman = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 45), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Mman.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Mman.setDescription('Multiple Manual Off\nValue:\nAlarm report from MMAN1\n')
ne843Dc1Macf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 46), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Macf.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Macf.setDescription('Multiple AC Failure\nValue:\nAlarm report from MACF1\n')
ne843Dc1Bda = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 47), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Bda.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Bda.setDescription('Battery On Discharge\nValue:\nAlarm report from BDA1\n')
ne843Dc1Hva = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 48), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Hva.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Hva.setDescription('High Voltage\nValue:\nAlarm report from HVA1\n')
ne843Dc1Hfv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Hfv.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Hfv.setDescription('High Float Voltage\nValue:\nAlarm report from HFV1\n')
ne843Dc1Bdt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 50), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Bdt.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Bdt.setDescription('BD Duration')
ne843Dc1Ems = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 51), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Ems.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Ems.setDescription('Energy Management State')
ne843Dc1Eme = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Eme.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Eme.setDescription('Energy Management Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Dc1Emt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 95))).setUnits('%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Emt.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Emt.setDescription('Efficiency Target (%)')
ne843Dc1Emo = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(25, 100))).setUnits('%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Emo.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Emo.setDescription('Efficiency Rectifier Turn On Threshold (%)')
ne843Dc1Poc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 55), DisplayString()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Poc.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Poc.setDescription('Percent of Charge (%)')
ne843Dc1Emd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Emd.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Emd.setDescription('Energy Management Disabled\nValue:\nAlarm report from EMD1\n')
ne843Dc1Pfs = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Pfs.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Pfs.setDescription('Thermal Probe Fail Safe\nValue:\nAlarm report from PFS1\n')
ne843Dc1Rif = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 58), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Rif.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Rif.setDescription('Rectifier Internal Fault\nValue:\nAlarm report from RIF1\n')
ne843Dc1Lsf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 59), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Lsf.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Lsf.setDescription('Load Share Fail\nValue:\nAlarm report from LSF1\n')
ne843Dc1Emi = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setUnits('Minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Emi.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Emi.setDescription('Efficiency Initial Delay (Minutes)')
ne843Dc1Emw = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setUnits('Minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Emw.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Emw.setDescription('Efficiency Turn Off Delay (Minutes)')
ne843Dc1Aseq = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Aseq.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Aseq.setDescription('Automatic Sequencing\nValues:\ndisable(0),\nenable(1)\n')
ne843Dc1Isy = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Isy.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Isy.setDescription('Imminent Shutdown Delay')
ne843Dc1Bofe = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Dc1Bofe.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Bofe.setDescription('Backup ORing FET Test Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Dc1Bof = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 65), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Bof.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Bof.setDescription('Rectifier ORing FET Fault\nValue:\nAlarm report from BOF1\n')
ne843Dc1Sof = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 66), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Sof.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Sof.setDescription('Rectifier Shorted ORing FET\nValue:\nAlarm report from SOF1\n')
ne843Dc1Der = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 67), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Der.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Der.setDescription('Rectifier Under Voltage\nValue:\nAlarm report from DER1\n')
ne843Dc1Pmf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 68), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Pmf.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Pmf.setDescription('Probe Minimum Fail\nValue:\nAlarm report from PMF1\n')
ne843Dc1Faja = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 69), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Faja.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Faja.setDescription('Distribution Fuse A\nValue:\nAlarm report from FAJA1\n')
ne843Dc1Buht = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 70), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Buht.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Buht.setDescription('Bus Hi Temp\nValue:\nAlarm report from BUHT1\n')
ne843Dc1Buvht = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 71), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Buvht.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Buvht.setDescription('Bus Very Hi Temp\nValue:\nAlarm report from BUVHT1\n')
ne843Dc1Btha = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 72), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Btha.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Btha.setDescription('Batt Hi Temp\nValue:\nAlarm report from BTHA1\n')
ne843Dc1Btvh = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 73), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Btvh.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Btvh.setDescription('Batt Very Hi Temp\nValue:\nAlarm report from BTVH1\n')
ne843Dc1Btla = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 74), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Btla.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Btla.setDescription('Batt Low Temp\nValue:\nAlarm report from BTLA1\n')
ne843Dc1Btvl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 75), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Btvl.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Btvl.setDescription('Batt Very Low Temp\nValue:\nAlarm report from BTVL1\n')
ne843Dc1Laht = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 76), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Laht.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Laht.setDescription('Local Amb. Hi Temp\nValue:\nAlarm report from LAHT1\n')
ne843Dc1Lalt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 77), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Lalt.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Lalt.setDescription('Local Amb. Low Temp\nValue:\nAlarm report from LALT1\n')
ne843Dc1Raht = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 78), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Raht.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Raht.setDescription('Remote Amb. Hi Temp\nValue:\nAlarm report from RAHT\n')
ne843Dc1Ravht = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 79), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Ravht.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Ravht.setDescription('Remote Amb. Very Hi Temp\nValue:\nAlarm report from RAVHT1\n')
ne843Dc1Ralt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 80), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Ralt.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Ralt.setDescription('Remote Amb. Low Temp\nValue:\nAlarm report from RALT1\n')
ne843Dc1Vlva = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 81), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Vlva.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Vlva.setDescription('VA Power Loss\nValue:\nAlarm report from VLVA1\n')
ne843Dc1Vlvb = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 82), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Vlvb.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Vlvb.setDescription('VB Power Loss\nValue:\nAlarm report from VLBB1\n')
ne843Dc1Ovla = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 83), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Ovla.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Ovla.setDescription('IA Overload\nValue:\nAlarm report from OVLA1\n')
ne843Dc1Ovlb = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 84), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Ovlb.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Ovlb.setDescription('IB Overload\nValue:\nAlarm report from OVLB1\n')
ne843Dc1Pcaux = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 85), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Pcaux.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Pcaux.setDescription('PIC Auxiliary\nValue:\nAlarm report from PCAUX1\n')
ne843Dc1Slot = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 86), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Slot.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Slot.setDescription('PIC Slot\nValue:\nAlarm report from SLOT1\n')
ne843Dc1Bod1 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 87), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Bod1.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Bod1.setDescription('Battery On Discharge\nValues:\ninactive(0),\nactive(1)\n')
ne843Dc1Bdt1 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 88), Integer32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Bdt1.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Bdt1.setDescription('BD Duration (Seconds)')
ne843Dc1Poc1 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 89), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Poc1.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Poc1.setDescription('Percent of Charge (%)')
ne843Dc1Fajb = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 90), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Fajb.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Fajb.setDescription('Distribution Fuse B\nValue:\nAlarm report from FAJB1\n')
ne843Dc1Smw = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 91), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Smw.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Smw.setDescription('Shunt Mis-wired\nValue:\nAlarm report from SMW1\n')
ne843Dc1Cca = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 1, 92), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Dc1Cca.setStatus('current')
if mibBuilder.loadTexts: ne843Dc1Cca.setDescription('Circuit Assignment\nValue:\nAlarm report from CCA1\n')
ne843Ps1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2))
ne843Ps1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ide.setDescription('Identifier')
ne843Ps1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Des.setDescription('Description')
ne843Ps1Sid = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Sid.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Sid.setDescription('Site ID')
ne843Ps1Sde = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Sde.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Sde.setDescription('Site Description')
ne843Ps1Sys = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Sys.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Sys.setDescription('System Description')
ne843Ps1Swv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Swv.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Swv.setDescription('Software Version')
ne843Ps1Verw = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Verw.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Verw.setDescription('Web Page Version')
ne843Ps1Verb = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Verb.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Verb.setDescription('Boot Block Version')
ne843Ps1Verd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Verd.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Verd.setDescription('Display Version')
ne843Ps1Dflt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Dflt.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Dflt.setDescription('Defaults Version')
ne843Ps1Brc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Brc.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Brc.setDescription('Board Code')
ne843Ps1Sn = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Sn.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Sn.setDescription('Serial Number')
ne843Ps1Dat = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Dat.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Dat.setDescription('System Date')
ne843Ps1Dtf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Dtf.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Dtf.setDescription('Date Format\nValues:\nmm/dd/yyyy,\ndd/mm/yyyy,\nyyyy/mm/dd\n')
ne843Ps1Tim = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Tim.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Tim.setDescription('System Time')
ne843Ps1Tmf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(12, 24))).clone(namedValues=NamedValues(("h12", 12), ("h24", 24)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Tmf.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Tmf.setDescription('System Time Format\nValues:\nh12(12),\nh24(24)\n')
ne843Ps1Dls = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Dls.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Dls.setDescription('Daylight Saving\nValues:\noff(0),\non(1)\n')
ne843Ps1Lng = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Lng.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Lng.setDescription('Front Panel Language\nValues:\nENGLISH,\nOTHER\n')
ne843Ps1Tun = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Tun.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Tun.setDescription('Temperature Units\nValues:\nC,\nF\n')
ne843Ps1Cem = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Cem.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Cem.setDescription('Critical Equals Major\nValues:\noff(0),\non(1)\n')
ne843Ps1Fpc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Fpc.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Fpc.setDescription('Front Panel Configuration\nValues:\ndisable(0),\nenable(1)\n')
ne843Ps1Rrf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Rrf.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Rrf.setDescription('Remote Rectifier Off\nValues:\ndisable(0),\nenable(1)\n')
ne843Ps1Poe = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Poe.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Poe.setDescription('Power Off Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Ps1Usl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("uninstall", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Usl.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Usl.setDescription('Uninstall Missing Equipment\nValues:\nuninstall(1)\n')
ne843Ps1Usr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Usr.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Usr.setDescription('Enable User Accounts\nValues:\ndisable(0),\nenable(1)\n')
ne843Ps1Ptt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ptt.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ptt.setDescription('Communication Port Type\nValues:\nLOCAL,\nMODEM\n')
ne843Ps1Amt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 27), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Amt.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Amt.setDescription('Ambient Temperature (C)')
ne843Ps1Fst = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Fst.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Fst.setDescription('Factory Defaults')
ne843Ps1Fstl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Fstl.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Fstl.setDescription('Factory Defaults List')
ne843Ps1Fpe = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Fpe.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Fpe.setDescription('Front Panel Pin Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Ps1Fpt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 31), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Fpt.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Fpt.setDescription('Front Panel Pin Timeout')
ne843Ps1Rss = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("restart", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Rss.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Rss.setDescription('Restart Devices\nValues:\nrestart(1)\n')
ne843Ps1Ast = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ast.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ast.setDescription('System Alarm State')
ne843Ps1Dss = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Dss.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Dss.setDescription('Daylight Saving Start mon:wk:dow:min or, mon:-1:dom:min')
ne843Ps1Dse = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 35), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Dse.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Dse.setDescription('Daylight Saving End mon:wk:dow:min or, mon:-1:dom:min')
ne843Ps1Epr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Epr.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Epr.setDescription('External Password Reset\nValue:\nAlarm report from EPR1\n')
ne843Ps1Pfd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 37), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Pfd.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Pfd.setDescription('Passwords At Default\nValue:\nAlarm report from PFD1\n')
ne843Ps1Exl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 38), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Exl.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Exl.setDescription('Excessive Login Attempts\nValue:\nAlarm report from EXL1\n')
ne843Ps1Bbl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Bbl.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Bbl.setDescription('Memory Backup Battery Low\nValue:\nAlarm report from BBL1\n')
ne843Ps1Clc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Clc.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Clc.setDescription('Clock Changed\nValue:\nAlarm report from CLC1\n')
ne843Ps1Stf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Stf.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Stf.setDescription('Self Test Failed\nValue:\nAlarm report from STF1\n')
ne843Ps1Pgi = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 42), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Pgi.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Pgi.setDescription('Program Line Invalid\nValue:\nAlarm report from PGI1\n')
ne843Ps1Cch = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 43), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Cch.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Cch.setDescription('Configuration Changed\nValue:\nAlarm report from CCH1\n')
ne843Ps1Hcl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Hcl.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Hcl.setDescription('History Cleared\nValue:\nAlarm report from HCL1\n')
ne843Ps1Ax1 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 45), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax1.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax1.setDescription('Auxiliary Event 1\nValue:\nAlarm report from AUX1\n')
ne843Ps1Ax2 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 46), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax2.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax2.setDescription('Auxiliary Event 2\nValue:\nAlarm report from AUX2\n')
ne843Ps1Ax3 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 47), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax3.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax3.setDescription('Auxiliary Event 3\nValue:\nAlarm report from AUX3\n')
ne843Ps1Ax4 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 48), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax4.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax4.setDescription('Auxiliary Event 4\nValue:\nAlarm report from AUX4\n')
ne843Ps1Ax5 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax5.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax5.setDescription('Auxiliary Event 5\nValue:\nAlarm report from AUX5\n')
ne843Ps1Ax6 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 50), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax6.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax6.setDescription('Auxiliary Event 6\nValue:\nAlarm report from AUX6\n')
ne843Ps1Fan24 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 51), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Fan24.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Fan24.setDescription('24 V Fuse Minor\nValue:\nAlarm report from FAN1\n')
ne843Ps1Fan48 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 52), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Fan48.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Fan48.setDescription('48 V Fuse Minor\nValue:\nAlarm report from FAN2\n')
ne843Ps1Faj24 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 53), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Faj24.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Faj24.setDescription('24 V Fuse Major\nValue:\nAlarm report from FAJ1\n')
ne843Ps1Faj48 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 54), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Faj48.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Faj48.setDescription('48 V Fuse Major\nValue:\nAlarm report from FAJ2\n')
ne843Ps1Accl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 55), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Accl.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Accl.setDescription('Relay List')
ne843Ps1Ledl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ledl.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ledl.setDescription('LED List')
ne843Ps1Ax7 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax7.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax7.setDescription('Auxiliary Event 7\nValue:\nAlarm report from AUX7\n')
ne843Ps1Ax8 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 58), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax8.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax8.setDescription('Auxiliary Event 8\nValue:\nAlarm report from AUX8\n')
ne843Ps1Ax9 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 59), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax9.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax9.setDescription('Auxiliary Event 9\nValue:\nAlarm report from AUX9\n')
ne843Ps1Ax10 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 60), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax10.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax10.setDescription('Auxiliary Event 10\nValue:\nAlarm report from AUX10\n')
ne843Ps1Ax11 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 61), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax11.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax11.setDescription('Auxiliary Event 11\nValue:\nAlarm report from AUX11\n')
ne843Ps1Ax12 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 62), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ax12.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ax12.setDescription('Auxiliary Event 12\nValue:\nAlarm report from AUX12\n')
ne843Ps1Cid = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Cid.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Cid.setDescription('Controller Assignes IDs\nValues:\ndisable(0),\nenable(1)\n')
ne843Ps1Lngl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 64), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Lngl.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Lngl.setDescription('Available Languages')
ne843Ps1Amtl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 65), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Amtl.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Amtl.setDescription('Low Ambient Temperature\nValue:\nAlarm report from AMTL1\n')
ne843Ps1Amth = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 66), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Amth.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Amth.setDescription('High Ambient Temperature\nValue:\nAlarm report from AMTH1\n')
ne843Ps1Cc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 67), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Cc.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Cc.setDescription('Comcode')
ne843Ps1Clei = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 68), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Clei.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Clei.setDescription('CLEI Code')
ne843Ps1Ser = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 69), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ser.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ser.setDescription('Series')
ne843Ps1Lamt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 70), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Lamt.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Lamt.setDescription('Lowest Ambient Temperature (C)')
ne843Ps1Nat = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Nat.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Nat.setDescription('Number of Ambient Temperature Probes Present')
ne843Ps1Blr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 72), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Blr.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Blr.setDescription('Bay Lamp Relay\nValues:\n,\nR1,\nR2,\nR3,\nR4,\nR5,\nR6,\nR7\n')
ne843Ps1Tzo = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 73), Integer32()).setUnits('Minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Tzo.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Tzo.setDescription('Timezone Offset (Minutes)')
ne843Ps1Crt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 74), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Crt.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Crt.setDescription('Configuration Changed Reboot Required\nValue:\nAlarm report from CRT1\n')
ne843Ps1Nhat = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 75), Integer32()).setUnits('C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Nhat.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Nhat.setDescription('Next Highest Ambient Temperature (C)')
ne843Ps1Nal = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Nal.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Nal.setDescription('Number of Total Alarms Active')
ne843Ps1Ncr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Ncr.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ncr.setDescription('Number of Total Critical Alarms Active')
ne843Ps1Nmj = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Nmj.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Nmj.setDescription('Number of Total Major Alarms Active')
ne843Ps1Nmn = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Nmn.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Nmn.setDescription('Number of Total Minor Alarms Active')
ne843Ps1Nwa = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Nwa.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Nwa.setDescription('Number of Total Warnings Active')
ne843Ps1Nre = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ps1Nre.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Nre.setDescription('Number of Total Record Only Events Active')
ne843Ps1Ere = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 2, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ps1Ere.setStatus('current')
if mibBuilder.loadTexts: ne843Ps1Ere.setDescription('PCR/PMJ/PMN Enahnced Relays Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843At1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3))
ne843At1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843At1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843At1Ide.setDescription('Identifier')
ne843At1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Des.setStatus('current')
if mibBuilder.loadTexts: ne843At1Des.setDescription('Description')
ne843At1Stt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Stt.setStatus('current')
if mibBuilder.loadTexts: ne843At1Stt.setDescription('Alarm Test Active\nValues:\ninactive(0),\nactive(1)\n')
ne843At1Stg = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843At1Stg.setStatus('current')
if mibBuilder.loadTexts: ne843At1Stg.setDescription('Stage')
ne843At1Lte = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Lte.setStatus('current')
if mibBuilder.loadTexts: ne843At1Lte.setDescription('Alarm Test Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843At1Dur = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Dur.setStatus('current')
if mibBuilder.loadTexts: ne843At1Dur.setDescription('Alarm Contact Duration (Seconds)')
ne843At1Pcr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Pcr.setStatus('current')
if mibBuilder.loadTexts: ne843At1Pcr.setDescription('Power Critical\nValues:\nno(0),\nyes(1)\n')
ne843At1Pmj = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Pmj.setStatus('current')
if mibBuilder.loadTexts: ne843At1Pmj.setDescription('Power Major\nValues:\nno(0),\nyes(1)\n')
ne843At1Pmn = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Pmn.setStatus('current')
if mibBuilder.loadTexts: ne843At1Pmn.setDescription('Power Minor\nValues:\nno(0),\nyes(1)\n')
ne843At1R1 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1R1.setStatus('current')
if mibBuilder.loadTexts: ne843At1R1.setDescription('Test Relay 1\nValues:\nno(0),\nyes(1)\n')
ne843At1R2 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1R2.setStatus('current')
if mibBuilder.loadTexts: ne843At1R2.setDescription('Test Relay 2\nValues:\nno(0),\nyes(1)\n')
ne843At1R3 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1R3.setStatus('current')
if mibBuilder.loadTexts: ne843At1R3.setDescription('Test Relay 3\nValues:\nno(0),\nyes(1)\n')
ne843At1R4 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1R4.setStatus('current')
if mibBuilder.loadTexts: ne843At1R4.setDescription('Test Relay 4\nValues:\nno(0),\nyes(1)\n')
ne843At1R5 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1R5.setStatus('current')
if mibBuilder.loadTexts: ne843At1R5.setDescription('Test Relay 5\nValues:\nno(0),\nyes(1)\n')
ne843At1R6 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1R6.setStatus('current')
if mibBuilder.loadTexts: ne843At1R6.setDescription('Test Relay 6\nValues:\nno(0),\nyes(1)\n')
ne843At1R7 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1R7.setStatus('current')
if mibBuilder.loadTexts: ne843At1R7.setDescription('Test Relay 7\nValues:\nno(0),\nyes(1)\n')
ne843At1Ets = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Ets.setStatus('current')
if mibBuilder.loadTexts: ne843At1Ets.setDescription('Do Email Test\nValues:\ninactive(0),\nactive(1)\n')
ne843At1Ems = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843At1Ems.setStatus('current')
if mibBuilder.loadTexts: ne843At1Ems.setDescription('Email Test Results')
ne843At1Bzi = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Bzi.setStatus('current')
if mibBuilder.loadTexts: ne843At1Bzi.setDescription('Audio Test Duration (Seconds)')
ne843At1Bzt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Bzt.setStatus('current')
if mibBuilder.loadTexts: ne843At1Bzt.setDescription('Audio Test Active\nValues:\n,\nLOCAL\n')
ne843At1Irt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Irt.setStatus('current')
if mibBuilder.loadTexts: ne843At1Irt.setDescription('Individual Relay Test State\nValues:\n,\nPCR,\nPMJ,\nPMN,\nR1,\nR2,\nR3,\nR4,\nR5,\nR6,\nR7\n')
ne843At1Ata = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843At1Ata.setStatus('current')
if mibBuilder.loadTexts: ne843At1Ata.setDescription('Alarm Test Active\nValue:\nAlarm report from ATA1\n')
ne843At1Atb = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843At1Atb.setStatus('current')
if mibBuilder.loadTexts: ne843At1Atb.setDescription('Alarm Test Aborted\nValue:\nAlarm report from ATB1\n')
ne843At1Snt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 3, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("start", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843At1Snt.setStatus('current')
if mibBuilder.loadTexts: ne843At1Snt.setDescription('Email Test\nValues:\nstart(1)\n')
ne843TrsTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 4), )
if mibBuilder.loadTexts: ne843TrsTable.setStatus('current')
if mibBuilder.loadTexts: ne843TrsTable.setDescription('Table of all Trend data')
ne843TrsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 4, 1), ).setIndexNames((0, "NE843-MIB", "ne843TrsEntryIndex"))
if mibBuilder.loadTexts: ne843TrsEntry.setStatus('current')
if mibBuilder.loadTexts: ne843TrsEntry.setDescription('Entry of information for one Trend')
ne843TrsEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843TrsEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843TrsEntryIndex.setDescription('Table Index')
ne843TrsEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843TrsEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843TrsEntryIde.setDescription('Identifier')
ne843TrsEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843TrsEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843TrsEntryDes.setDescription('Description')
ne843TrsEntrySrc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843TrsEntrySrc.setStatus('current')
if mibBuilder.loadTexts: ne843TrsEntrySrc.setDescription('Source')
ne843Aco1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5))
ne843Aco1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Aco1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Ide.setDescription('Identifier')
ne843Aco1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Aco1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Des.setDescription('Description')
ne843Aco1Stt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Aco1Stt.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Stt.setDescription('Alarm Cut-off State\nValues:\ninactive(0),\nactive(1)\n')
ne843Aco1Cst = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Aco1Cst.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Cst.setDescription('Critical Alarm Cut-off State\nValues:\ninactive(0),\nactive(1)\n')
ne843Aco1Cae = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Aco1Cae.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Cae.setDescription('Critical Alarm Cut-off Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Aco1Cto = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setUnits('Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Aco1Cto.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Cto.setDescription('Critical Alarm Cut-off Timeout (Hours)')
ne843Aco1Jst = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Aco1Jst.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Jst.setDescription('Major Alarm Cut-off State\nValues:\ninactive(0),\nactive(1)\n')
ne843Aco1Jae = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Aco1Jae.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Jae.setDescription('Major Alarm Cut-off Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Aco1Jto = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setUnits('Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Aco1Jto.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Jto.setDescription('Major Alarm Cut-off Timeout (Hours)')
ne843Aco1Nst = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Aco1Nst.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Nst.setDescription('Minor Alarm Cut-off State\nValues:\ninactive(0),\nactive(1)\n')
ne843Aco1Nae = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Aco1Nae.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Nae.setDescription('Minor Alarm Cut-off Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Aco1Nto = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 72))).setUnits('Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Aco1Nto.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Nto.setDescription('Minor Alarm Cut-off Timeout (Hours)')
ne843Aco1Lbe = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Aco1Lbe.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Lbe.setDescription('Local Buzzer Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Aco1Aac = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 5, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Aco1Aac.setStatus('current')
if mibBuilder.loadTexts: ne843Aco1Aac.setDescription('ACO Active\nValue:\nAlarm report from AAC1\n')
ne843Gm1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6))
ne843Gm1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gm1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Ide.setDescription('Identifier')
ne843Gm1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Des.setDescription('Description')
ne843Gm1Lse = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Lse.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Lse.setDescription('Load Share Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gm1Rme = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Rme.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Rme.setDescription('Redundancy Monitor\nValues:\ndisable(0),\nenable(1)\n')
ne843Gm1Fsd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(25000, 30000), ValueRangeConstraint(50000, 60000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Fsd.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Fsd.setDescription('Float High Voltage Shutdown (mV)')
ne843Gm1Bsd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(26000, 30000), ValueRangeConstraint(52000, 60000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Bsd.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Bsd.setDescription('Boost High Voltage Shutdown (mV)')
ne843Gm1Fsp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(22000, 28000), ValueRangeConstraint(44000, 56500), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Fsp.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Fsp.setDescription('Float Set Point (mV)')
ne843Gm1Bsp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(22000, 30000), ValueRangeConstraint(48000, 60000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Bsp.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Bsp.setDescription('Boost Set Point (mV)')
ne843Gm1Fcl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 110))).setUnits('%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Fcl.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Fcl.setDescription('Float Current Limit (%)')
ne843Gm1Bcl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 110))).setUnits('%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Bcl.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Bcl.setDescription('Boost Current Limit (%)')
ne843Gm1Oft = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("start", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Oft.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Oft.setDescription('Or-ing FET Test\nValues:\nstart(1)\n')
ne843Gm1Wie = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Wie.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Wie.setDescription('Walk-in Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gm1Sof = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Sof.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Sof.setDescription('Shorted ORing FET Test Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gm1Lsfe = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gm1Lsfe.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Lsfe.setDescription('Load Share Fail Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gm1Nro = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gm1Nro.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Nro.setDescription('Number of Rectifiers On')
ne843Gm1Lst = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gm1Lst.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Lst.setDescription('Load Share Target')
ne843Gm1Nro1 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 6, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gm1Nro1.setStatus('current')
if mibBuilder.loadTexts: ne843Gm1Nro1.setDescription('Number of Rectifiers On')
ne843RecTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7), )
if mibBuilder.loadTexts: ne843RecTable.setStatus('current')
if mibBuilder.loadTexts: ne843RecTable.setDescription('Table of all Rectifier data')
ne843RecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1), ).setIndexNames((0, "NE843-MIB", "ne843RecEntryIndex"))
if mibBuilder.loadTexts: ne843RecEntry.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntry.setDescription('Entry of information for one Rectifier')
ne843RecEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryIndex.setDescription('Table Index')
ne843RecEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryIde.setDescription('Identifier')
ne843RecEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843RecEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryDes.setDescription('Description')
ne843RecEntryTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843RecEntryTyp.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryTyp.setDescription('Type')
ne843RecEntrySn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntrySn.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntrySn.setDescription('Serial Number')
ne843RecEntryAdc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 6), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryAdc.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryAdc.setDescription('DC Current (Amps)')
ne843RecEntryVdc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 7), Integer32()).setUnits('mV').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryVdc.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryVdc.setDescription('DC Voltage (mV)')
ne843RecEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843RecEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryStt.setDescription('State\nValues:\nON,\nOFF,\nSTANDBY,\nVACANT\n')
ne843RecEntryCap = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 9), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryCap.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryCap.setDescription('Capacity (Amps)')
ne843RecEntryVac = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 10), Integer32()).setUnits('Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryVac.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryVac.setDescription('AC Voltage (Volts)')
ne843RecEntryAac = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 11), Integer32()).setUnits('mA').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryAac.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryAac.setDescription('AC Current (mA)')
ne843RecEntryTmp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 12), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryTmp.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryTmp.setDescription('Temperature (C)')
ne843RecEntrySeq = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843RecEntrySeq.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntrySeq.setDescription('Use in Sequence Enable\nValues:\nno(0),\nyes(1)\n')
ne843RecEntryRfa = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryRfa.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryRfa.setDescription('Rectifier Fail')
ne843RecEntryAcf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryAcf.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryAcf.setDescription('AC Fail')
ne843RecEntryMan = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryMan.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryMan.setDescription('Standby or Manual Off')
ne843RecEntryDid = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryDid.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryDid.setDescription('ID Conflict')
ne843RecEntryClm = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryClm.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryClm.setDescription('Current Limit')
ne843RecEntryRcf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryRcf.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryRcf.setDescription('Communication Failure')
ne843RecEntryRfn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryRfn.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryRfn.setDescription('Fan Failure')
ne843RecEntryRif = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryRif.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryRif.setDescription('Internal Fault')
ne843RecEntryLsf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryLsf.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryLsf.setDescription('Loadshare Failure')
ne843RecEntryCc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryCc.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryCc.setDescription('Comcode')
ne843RecEntryClei = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryClei.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryClei.setDescription('CLEI Code')
ne843RecEntrySer = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntrySer.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntrySer.setDescription('Series')
ne843RecEntryVerp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryVerp.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryVerp.setDescription('Primary Software Version')
ne843RecEntryVers = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryVers.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryVers.setDescription('Secondary Software Version')
ne843RecEntryLin = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryLin.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryLin.setDescription('Low Input')
ne843RecEntryHin = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryHin.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryHin.setDescription('High Input')
ne843RecEntryBof = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryBof.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryBof.setDescription('ORing FET Fault')
ne843RecEntrySof = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntrySof.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntrySof.setDescription('Shorted ORing FET')
ne843RecEntryDer = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryDer.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryDer.setDescription('Under Voltage')
ne843RecEntryEcap = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 33), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryEcap.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryEcap.setDescription('ECO Capacity (Amps)')
ne843RecEntryEmod = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryEmod.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryEmod.setDescription('ECO Mode')
ne843RecEntryMppt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryMppt.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryMppt.setDescription('ECO MPPT')
ne843RecEntryRtm = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryRtm.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryRtm.setDescription('Run Time')
ne843RecEntryVan = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryVan.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryVan.setDescription('Anode Voltage')
ne843RecEntryVac1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 38), Integer32()).setUnits('Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryVac1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryVac1.setDescription('AC Voltage (Volts) Phase 1')
ne843RecEntryAac1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 39), Integer32()).setUnits('mA').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryAac1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryAac1.setDescription('AC Current (mA) Phase 1')
ne843RecEntryVac2 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 40), Integer32()).setUnits('Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryVac2.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryVac2.setDescription('AC Voltage (Volts) Phase 2')
ne843RecEntryAac2 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 41), Integer32()).setUnits('mA').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryAac2.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryAac2.setDescription('AC Current (mA) Phase 2')
ne843RecEntryVac3 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 42), Integer32()).setUnits('Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryVac3.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryVac3.setDescription('AC Voltage (Volts) Phase 3')
ne843RecEntryAac3 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 43), Integer32()).setUnits('mA').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryAac3.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryAac3.setDescription('AC Current (mA) Phase 3')
ne843RecEntryRfa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryRfa1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryRfa1.setDescription('Rectifier Fail\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryAcf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryAcf1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryAcf1.setDescription('AC Fail\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryMan1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryMan1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryMan1.setDescription('Standby or Manual Off\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryDid1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryDid1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryDid1.setDescription('ID Conflict\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryClm1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryClm1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryClm1.setDescription('Current Limit\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryRcf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryRcf1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryRcf1.setDescription('Communication Failure\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryRfn1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryRfn1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryRfn1.setDescription('Fan Failure\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryRif1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryRif1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryRif1.setDescription('Internal Fault\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryLsf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryLsf1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryLsf1.setDescription('Loadshare Failure\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryLin1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryLin1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryLin1.setDescription('Low Input\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryHin1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryHin1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryHin1.setDescription('High Input\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryBof1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryBof1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryBof1.setDescription('ORing FET Fault\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntrySof1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntrySof1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntrySof1.setDescription('Shorted ORing FET\nValues:\ninactive(0),\nactive(1)\n')
ne843RecEntryDer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 7, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RecEntryDer1.setStatus('current')
if mibBuilder.loadTexts: ne843RecEntryDer1.setDescription('Under Voltage\nValues:\ninactive(0),\nactive(1)\n')
ne843Cp1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8))
ne843Cp1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Ide.setDescription('Identifier')
ne843Cp1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cp1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Des.setDescription('Description')
ne843Cp1Typ = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Typ.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Typ.setDescription('Type')
ne843Cp1Vdc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 4), Integer32()).setUnits('mV').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Vdc.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Vdc.setDescription('DC Voltage (mV)')
ne843Cp1Adc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 5), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Adc.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Adc.setDescription('DC Current (Amps)')
ne843Cp1Cap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 6), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Cap.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Cap.setDescription('Capacity (Amps)')
ne843Cp1Olcap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Olcap.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Olcap.setDescription('On Line Capacity (Amps)')
ne843Cp1Vsp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(23000, 28000), ValueRangeConstraint(46000, 57000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cp1Vsp.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Vsp.setDescription('Voltage Set Point (mV)')
ne843Cp1Vsd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(25000, 30000), ValueRangeConstraint(50000, 60000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cp1Vsd.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Vsd.setDescription('Internal High Voltage Shutdown (mV)')
ne843Cp1Clm = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 100))).setUnits('%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cp1Clm.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Clm.setDescription('Current Limit (%)')
ne843Cp1Dth = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(20000, 25000), ValueRangeConstraint(40000, 50000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cp1Dth.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Dth.setDescription('Low Voltage Disconnect (mV)')
ne843Cp1Rth = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(22000, 27000), ValueRangeConstraint(44000, 54000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cp1Rth.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Rth.setDescription('Low Voltage Reconnect (mV)')
ne843Cp1Lvd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cp1Lvd.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Lvd.setDescription('Low Voltage Disconnect Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Cp1Rss = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cp1Rss.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Rss.setDescription('Converter Restart\nValues:\noff(0),\non(1)\n')
ne843Cp1Rme = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cp1Rme.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Rme.setDescription('Redundancy Monitor Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Cp1Rof = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cp1Rof.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Rof.setDescription('Remote Standby Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Cp1Cfa = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Cfa.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Cfa.setDescription('Converter Fail\nValue:\nAlarm report from CFA1\n')
ne843Cp1Cfn = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Cfn.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Cfn.setDescription('Converter Fan Minor\nValue:\nAlarm report from CFN1\n')
ne843Cp1Cfj = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Cfj.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Cfj.setDescription('Converter Fan Major\nValue:\nAlarm report from CFJ1\n')
ne843Cp1Dfa = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Dfa.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Dfa.setDescription('Distribution Fail\nValue:\nAlarm report from CDFA1\n')
ne843Cp1Did = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Did.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Did.setDescription('ID Conflict\nValue:\nAlarm report from CDID1\n')
ne843Cp1Icc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Icc.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Icc.setDescription('Incompatible Converter Alarm\nValue:\nAlarm report from ICC1\n')
ne843Cp1Mfa = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Mfa.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Mfa.setDescription('Multiple Converter Fail\nValue:\nAlarm report from CMFA1\n')
ne843Cp1Hva = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Hva.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Hva.setDescription('Converter High Voltage Major\nValue:\nAlarm report from CHVA1\n')
ne843Cp1Hfv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Hfv.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Hfv.setDescription('Converter High Voltage Minor\nValue:\nAlarm report from CHFV1\n')
ne843Cp1Vla = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Vla.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Vla.setDescription('Converter Very Low Voltage\nValue:\nAlarm report from CVLA\n')
ne843Cp1Rl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Rl.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Rl.setDescription('Converter Redundancy Loss\nValue:\nAlarm report from CRL\n')
ne843Cp1Cin = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 8, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cp1Cin.setStatus('current')
if mibBuilder.loadTexts: ne843Cp1Cin.setDescription('Converter Input Fail\nValue:\nAlarm report from CIN1\n')
ne843DccTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9), )
if mibBuilder.loadTexts: ne843DccTable.setStatus('current')
if mibBuilder.loadTexts: ne843DccTable.setDescription('Table of all Converter data')
ne843DccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1), ).setIndexNames((0, "NE843-MIB", "ne843DccEntryIndex"))
if mibBuilder.loadTexts: ne843DccEntry.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntry.setDescription('Entry of information for one Converter')
ne843DccEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryIndex.setDescription('Table Index')
ne843DccEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryIde.setDescription('Identifier')
ne843DccEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DccEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryDes.setDescription('Description')
ne843DccEntryTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryTyp.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryTyp.setDescription('Type')
ne843DccEntrySn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntrySn.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntrySn.setDescription('Serial Number')
ne843DccEntryAdc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 6), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryAdc.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryAdc.setDescription('DC Current (Amps)')
ne843DccEntryCap = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryCap.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryCap.setDescription('Capacity (Amps)')
ne843DccEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DccEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryStt.setDescription('State\nValues:\nON,\nOFF,\nSTANDBY,\nVACANT\n')
ne843DccEntryCfa = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryCfa.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryCfa.setDescription('Converter Fail')
ne843DccEntryDfa = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryDfa.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryDfa.setDescription('Distribution Fuse Fail')
ne843DccEntryDid = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryDid.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryDid.setDescription('ID Conflict')
ne843DccEntryCcf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryCcf.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryCcf.setDescription('Communication Failure')
ne843DccEntryCfn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryCfn.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryCfn.setDescription('Fan Failure')
ne843DccEntryCfa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryCfa1.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryCfa1.setDescription('Converter Fail\nValues:\ninactive(0),\nactive(1)\n')
ne843DccEntryDfa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryDfa1.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryDfa1.setDescription('Distribution Fuse Fail\nValues:\ninactive(0),\nactive(1)\n')
ne843DccEntryDid1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryDid1.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryDid1.setDescription('ID Conflict\nValues:\ninactive(0),\nactive(1)\n')
ne843DccEntryCcf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryCcf1.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryCcf1.setDescription('Communication Failure\nValues:\ninactive(0),\nactive(1)\n')
ne843DccEntryCfn1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 9, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DccEntryCfn1.setStatus('current')
if mibBuilder.loadTexts: ne843DccEntryCfn1.setDescription('Fan Failure Rev\nValues:\ninactive(0),\nactive(1)\n')
ne843Bs1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 10))
ne843Bs1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 10, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Bs1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Bs1Ide.setDescription('Identifier')
ne843Bs1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 10, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Bs1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Bs1Des.setDescription('Description')
ne843Bs1Stt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 10, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Bs1Stt.setStatus('current')
if mibBuilder.loadTexts: ne843Bs1Stt.setDescription('State\nValues:\nQRCT,\nMANUAL,\nBTP,\nTIMED AUTO,\nOFF\n')
ne843Bs1Atm = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 10, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Bs1Atm.setStatus('current')
if mibBuilder.loadTexts: ne843Bs1Atm.setDescription('Auto Mode\nValues:\nOFF,\nQRCT,\nTIMED\n')
ne843Bs1Tmd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 10, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 80))).setUnits('Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Bs1Tmd.setStatus('current')
if mibBuilder.loadTexts: ne843Bs1Tmd.setDescription('Timed Manual Duration (Hours)')
ne843Bs1Amf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 10, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Bs1Amf.setStatus('current')
if mibBuilder.loadTexts: ne843Bs1Amf.setDescription('Auto Multiplication Factor')
ne843Bs1Cta = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 10, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Bs1Cta.setStatus('current')
if mibBuilder.loadTexts: ne843Bs1Cta.setDescription('Current Terminated Current Threshold')
ne843Sc1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11))
ne843Sc1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Sc1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Sc1Ide.setDescription('Identifier')
ne843Sc1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Sc1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Sc1Des.setDescription('Description')
ne843Sc1Stt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Sc1Stt.setStatus('current')
if mibBuilder.loadTexts: ne843Sc1Stt.setDescription('State\nValues:\ndisable(0),\nenable(1)\n')
ne843Sc1Rve = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Sc1Rve.setStatus('current')
if mibBuilder.loadTexts: ne843Sc1Rve.setDescription('Raise Voltage Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Sc1Ltt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11, 5), Integer32()).setUnits('C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Sc1Ltt.setStatus('current')
if mibBuilder.loadTexts: ne843Sc1Ltt.setDescription('Lower Temperature Threshold (C)')
ne843Sc1Ntt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11, 6), Integer32()).setUnits('C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Sc1Ntt.setStatus('current')
if mibBuilder.loadTexts: ne843Sc1Ntt.setDescription('Nominal Temperature Threshold (C)')
ne843Sc1Utt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11, 7), Integer32()).setUnits('C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Sc1Utt.setStatus('current')
if mibBuilder.loadTexts: ne843Sc1Utt.setDescription('Upper Temperature Threshold (C)')
ne843Sc1Spt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11, 8), Integer32()).setUnits('C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Sc1Spt.setStatus('current')
if mibBuilder.loadTexts: ne843Sc1Spt.setDescription('Step Temperature (C)')
ne843Sc1Lsp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('mV/C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Sc1Lsp.setStatus('current')
if mibBuilder.loadTexts: ne843Sc1Lsp.setDescription('Lower Temperature Slope/Cell (mV/C)')
ne843Sc1Usp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('mV/C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Sc1Usp.setStatus('current')
if mibBuilder.loadTexts: ne843Sc1Usp.setDescription('Upper Temperature Slope/Cell (mV/C)')
ne843Sc1Fse = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 11, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Sc1Fse.setStatus('current')
if mibBuilder.loadTexts: ne843Sc1Fse.setDescription('Probe Fail-Safe Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843BtdTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 12), )
if mibBuilder.loadTexts: ne843BtdTable.setStatus('current')
if mibBuilder.loadTexts: ne843BtdTable.setDescription('Table of all Battery Type Definition data')
ne843BtdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 12, 1), ).setIndexNames((0, "NE843-MIB", "ne843BtdEntryIndex"))
if mibBuilder.loadTexts: ne843BtdEntry.setStatus('current')
if mibBuilder.loadTexts: ne843BtdEntry.setDescription('Entry of information for one Battery Type Definition')
ne843BtdEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843BtdEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843BtdEntryIndex.setDescription('Table Index')
ne843BtdEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843BtdEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843BtdEntryIde.setDescription('Identifier')
ne843BtdEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 12, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843BtdEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843BtdEntryDes.setDescription('Description')
ne843BtdEntryBty = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 12, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843BtdEntryBty.setStatus('current')
if mibBuilder.loadTexts: ne843BtdEntryBty.setDescription('Battery Type')
ne843BtdEntryBtc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 12, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843BtdEntryBtc.setStatus('current')
if mibBuilder.loadTexts: ne843BtdEntryBtc.setDescription('Battery Class\nValues:\nFLOODED,\nSEALED,\nNICD,\nLI_LMP,\nSODIUM\n')
ne843BtdEntryCap = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 12, 1, 6), Integer32()).setUnits('Amps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843BtdEntryCap.setStatus('current')
if mibBuilder.loadTexts: ne843BtdEntryCap.setDescription('Capacity (Amps)')
ne843Br1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13))
ne843Br1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Ide.setDescription('Identifier')
ne843Br1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Des.setDescription('Description')
ne843Br1Adc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 3), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Adc.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Adc.setDescription('Total Battery Current (Amps)')
ne843Br1Hbt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 4), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Hbt.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Hbt.setDescription('Highest Battery Temperature (C)')
ne843Br1Cap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 5), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Cap.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Cap.setDescription('Installed Battery Capacity (Amps)')
ne843Br1Olcap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 6), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Olcap.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Olcap.setDescription('On-line Battery Capacity (Amps)')
ne843Br1Btr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Btr.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Btr.setDescription('Battery Test Results')
ne843Br1Tth = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 194))).setUnits('C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Tth.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Tth.setDescription('High Temperature Threshold (C)')
ne843Br1Cle = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Cle.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Cle.setDescription('Current Limit Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Br1Clt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000))).setUnits('Amps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Clt.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Clt.setDescription('Current Limit Threshold (Amps)')
ne843Br1Cev = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(19250, 22750), ValueRangeConstraint(40250, 43750), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Cev.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Cev.setDescription('End Volts per Cell (mV)')
ne843Br1Bts = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Bts.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Bts.setDescription('Battery Test State\nValues:\ninactive(0),\nactive(1)\n')
ne843Br1Mtt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Mtt.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Mtt.setDescription('Manual Test Type\nValues:\nDISABLE,\n20%,\nTIMED\n')
ne843Br1Tev = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(21000, 27000), ValueRangeConstraint(36000, 48000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Tev.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Tev.setDescription('Manual Test Alarm Voltage (mV)')
ne843Br1Tmd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 99900))).setUnits('Hours x 1000').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Tmd.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Tmd.setDescription('Manual Test Duration (Hours x 1000)')
ne843Br1Bte = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Bte.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Bte.setDescription('Automatic Test Type\nValues:\nDISABLE,\n20%,\nTIMED\n')
ne843Br1Btv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(21000, 26000), ValueRangeConstraint(42000, 52000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Btv.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Btv.setDescription('Battery Test Rectifier Voltage (mV)')
ne843Br1Ath = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Ath.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Ath.setDescription('Auto Test Hour')
ne843Br1Tin = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setUnits('Months').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Tin.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Tin.setDescription('Auto Test Interval (Months)')
ne843Br1Atw = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240))).setUnits('Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Atw.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Atw.setDescription('Auto Test Minimum wait after BD (Hours)')
ne843Br1Atd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Atd.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Atd.setDescription('Auto Test Date')
ne843Br1Nvm = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Nvm.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Nvm.setDescription('Number of Mid-cell V Present')
ne843Br1Ntm = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Ntm.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Ntm.setDescription('Number of Temperature Probes Present')
ne843Br1Scd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Scd.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Scd.setDescription('Battery Voltage Imbalance Detection\nValues:\ndisable(0),\nenable(1)\n')
ne843Br1Scv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500, 3000))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Br1Scv.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Scv.setDescription('Battery Imbalance Threshold (mV)')
ne843Br1Bta = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Bta.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Bta.setDescription('Battery Test Active\nValue:\nAlarm report from BTA1\n')
ne843Br1Bfa = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Bfa.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Bfa.setDescription('Battery Test Failed\nValue:\nAlarm report from BFA1\n')
ne843Br1Scda = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Scda.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Scda.setDescription('Shorted Cell Detected\nValue:\nAlarm report from SCD1\n')
ne843Br1Isda = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Isda.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Isda.setDescription('Imminent Shutdown\nValue:\nAlarm report from ISD1\n')
ne843Br1Mdp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Mdp.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Mdp.setDescription('Voltage Duplicate ID\nValue:\nAlarm report from MDP1\n')
ne843Br1Mzd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Mzd.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Mzd.setDescription('Voltage ID Not Configured\nValue:\nAlarm report from MZD1\n')
ne843Br1Btha = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Btha.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Btha.setDescription('High Battery Temperature\nValue:\nAlarm report from BTHA1\n')
ne843Br1Lbt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 33), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Lbt.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Lbt.setDescription('Lowest Battery Temperature (C)')
ne843Br1Btla = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Btla.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Btla.setDescription('Low Battery Temperature\nValue:\nAlarm report from BTLA1\n')
ne843Br1Btvh = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Btvh.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Btvh.setDescription('Very High Battery Temperature\nValue:\nAlarm report from BTVH1\n')
ne843Br1Btvl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Btvl.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Btvl.setDescription('Very Low Battery Temperature\nValue:\nAlarm report from BTVL1\n')
ne843Br1Rba = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 13, 37), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Br1Rba.setStatus('current')
if mibBuilder.loadTexts: ne843Br1Rba.setDescription('Reverse Battery\nValue:\nAlarm report from RBA1\n')
ne843CntTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14), )
if mibBuilder.loadTexts: ne843CntTable.setStatus('current')
if mibBuilder.loadTexts: ne843CntTable.setDescription('Table of all Contactor data')
ne843CntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1), ).setIndexNames((0, "NE843-MIB", "ne843CntEntryIndex"))
if mibBuilder.loadTexts: ne843CntEntry.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntry.setDescription('Entry of information for one Contactor')
ne843CntEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843CntEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryIndex.setDescription('Table Index')
ne843CntEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843CntEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryIde.setDescription('Identifier')
ne843CntEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryDes.setDescription('Description')
ne843CntEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryStt.setDescription('Status\nValues:\nNONE,\nDISCON,\nCONNECT,\nFAILED\n')
ne843CntEntryEna = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryEna.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryEna.setDescription('Control\nValues:\ndisable(0),\nenable(1)\n')
ne843CntEntryDth = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(19000, 25000), ValueRangeConstraint(39000, 50000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryDth.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryDth.setDescription('Disconnect Threshold (mV)')
ne843CntEntryDdy = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryDdy.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryDdy.setDescription('Disconnect Delay')
ne843CntEntryDam = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 0), ("voltage", 1), ("voltageAndTime", 2), ("adaptive", 3), ("temperature", 4), ("voltageandtemperature", 5), ("voltageandtimeandtemperature", 6), ("adaptiveandtemperature", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryDam.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryDam.setDescription('Disconnect Automode\nValues:\nnone(0),\nvoltage(1),\nvoltageAndTime(2),\nadaptive(3),\ntemperature(4),\nvoltageandtemperature(5),\nvoltageandtimeandtemperature(6),\nadaptiveandtemperature(7)\n')
ne843CntEntryDtm = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843CntEntryDtm.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryDtm.setDescription('Disconnect Time Remaining')
ne843CntEntryRth = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(19500, 27000), ValueRangeConstraint(39000, 55000), ))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryRth.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryRth.setDescription('Reconnect Threshold (mV)')
ne843CntEntryRdy = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryRdy.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryRdy.setDescription('Reconnect Delay')
ne843CntEntryRam = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 0), ("voltage", 1), ("voltageAndTime", 2), ("adaptive", 3), ("temperature", 4), ("voltageandtemperature", 5), ("voltageandtimeandtemperature", 6), ("adaptiveandtemperature", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryRam.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryRam.setDescription('Reconnect Automode\nValues:\nnone(0),\nvoltage(1),\nvoltageAndTime(2),\nadaptive(3),\ntemperature(4),\nvoltageandtemperature(5),\nvoltageandtimeandtemperature(6),\nadaptiveandtemperature(7)\n')
ne843CntEntryRtm = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843CntEntryRtm.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryRtm.setDescription('Reconnect Time Remaining')
ne843CntEntryCno = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843CntEntryCno.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryCno.setDescription('Contactor Open')
ne843CntEntryCnf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843CntEntryCnf.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryCnf.setDescription('Contactor Failed')
ne843CntEntryDvx = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(39000, 50000))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryDvx.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryDvx.setDescription('VMax in Adaptive Mode (mV)')
ne843CntEntryDin = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999000))).setUnits('mA').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryDin.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryDin.setDescription('IMin in Adaptive Mode (mA)')
ne843CntEntryDix = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999000))).setUnits('mA').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryDix.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryDix.setDescription('IMax in Adaptive Mode (mA)')
ne843CntEntryDvt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 19), Integer32()).setUnits('mV').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843CntEntryDvt.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryDvt.setDescription('Calculated Disconnect Voltage (mV)')
ne843CntEntryDtd = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryDtd.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryDtd.setDescription('Disconnect Temperature Delay')
ne843CntEntryDtp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1125, 5625))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryDtp.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryDtp.setDescription('Disconnect Temperature')
ne843CntEntryRtd = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryRtd.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryRtd.setDescription('Reconnect Temperature Delay')
ne843CntEntryRtp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 14, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1080, 5400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CntEntryRtp.setStatus('current')
if mibBuilder.loadTexts: ne843CntEntryRtp.setDescription('Reconnect Temperature')
ne843DcnTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 15), )
if mibBuilder.loadTexts: ne843DcnTable.setStatus('current')
if mibBuilder.loadTexts: ne843DcnTable.setDescription('Table of all Distribution Contactor Interface data')
ne843DcnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 15, 1), ).setIndexNames((0, "NE843-MIB", "ne843DcnEntryIndex"))
if mibBuilder.loadTexts: ne843DcnEntry.setStatus('current')
if mibBuilder.loadTexts: ne843DcnEntry.setDescription('Entry of information for one Distribution Contactor Interface')
ne843DcnEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DcnEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843DcnEntryIndex.setDescription('Table Index')
ne843DcnEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 15, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DcnEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843DcnEntryIde.setDescription('Identifier')
ne843DcnEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 15, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DcnEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843DcnEntryDes.setDescription('Description')
ne843DcnEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 15, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DcnEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843DcnEntryStt.setDescription('State\nValues:\nNONE,\nMISSING,\nPRESENT,\nOPEN,\nCLOSED\n')
ne843DcnEntryTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 15, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DcnEntryTyp.setStatus('current')
if mibBuilder.loadTexts: ne843DcnEntryTyp.setDescription('Contactor Interface Type\nValues:\nNONE,\nCN1,\nCN2,\nCN3,\nCN4\n')
ne843DcnEntrySn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 15, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DcnEntrySn.setStatus('current')
if mibBuilder.loadTexts: ne843DcnEntrySn.setDescription('Serial Number')
ne843DcnEntryBrc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 15, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DcnEntryBrc.setStatus('current')
if mibBuilder.loadTexts: ne843DcnEntryBrc.setDescription('Board Code')
ne843DcmTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16), )
if mibBuilder.loadTexts: ne843DcmTable.setStatus('current')
if mibBuilder.loadTexts: ne843DcmTable.setDescription('Table of all Distribution Current Monitor data')
ne843DcmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16, 1), ).setIndexNames((0, "NE843-MIB", "ne843DcmEntryIndex"))
if mibBuilder.loadTexts: ne843DcmEntry.setStatus('current')
if mibBuilder.loadTexts: ne843DcmEntry.setDescription('Entry of information for one Distribution Current Monitor')
ne843DcmEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DcmEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843DcmEntryIndex.setDescription('Table Index')
ne843DcmEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DcmEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843DcmEntryIde.setDescription('Identifier')
ne843DcmEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DcmEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843DcmEntryDes.setDescription('Description')
ne843DcmEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DcmEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843DcmEntryStt.setDescription('State\nValues:\nNONE,\nMISSING,\nPRESENT\n')
ne843DcmEntryTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DcmEntryTyp.setStatus('current')
if mibBuilder.loadTexts: ne843DcmEntryTyp.setDescription('Shunt Type\nValues:\nNONE,\nLOAD,\nBATTERY\n')
ne843DcmEntryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16, 1, 6), Integer32()).setUnits('mA').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DcmEntryVal.setStatus('current')
if mibBuilder.loadTexts: ne843DcmEntryVal.setDescription('Reading (mA)')
ne843DcmEntrySha = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DcmEntrySha.setStatus('current')
if mibBuilder.loadTexts: ne843DcmEntrySha.setDescription('Shunt Rating (Amps)')
ne843DcmEntrySn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DcmEntrySn.setStatus('current')
if mibBuilder.loadTexts: ne843DcmEntrySn.setDescription('Serial Number')
ne843DcmEntryBrc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DcmEntryBrc.setStatus('current')
if mibBuilder.loadTexts: ne843DcmEntryBrc.setDescription('Board Code')
ne843DcmEntryKwh = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 16, 1, 10), DisplayString()).setUnits('kWh').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DcmEntryKwh.setStatus('current')
if mibBuilder.loadTexts: ne843DcmEntryKwh.setDescription('Kilo Watt Hours (kWh)')
ne843UdeTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17), )
if mibBuilder.loadTexts: ne843UdeTable.setStatus('current')
if mibBuilder.loadTexts: ne843UdeTable.setDescription('Table of all User Defined Event data')
ne843UdeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1), ).setIndexNames((0, "NE843-MIB", "ne843UdeEntryIndex"))
if mibBuilder.loadTexts: ne843UdeEntry.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntry.setDescription('Entry of information for one User Defined Event')
ne843UdeEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843UdeEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryIndex.setDescription('Table Index')
ne843UdeEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843UdeEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryIde.setDescription('Identifier')
ne843UdeEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryDes.setDescription('Description')
ne843UdeEntryFds = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryFds.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryFds.setDescription('Front Panel Description')
ne843UdeEntryAst = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843UdeEntryAst.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryAst.setDescription('Alarm State')
ne843UdeEntrySev = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntrySev.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntrySev.setDescription('Severity\nValues:\nCRIT,\nMAJ,\nMIN,\nWRN,\nRO\n')
ne843UdeEntryPrg = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryPrg.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryPrg.setDescription('Program Line')
ne843UdeEntryDur = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryDur.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryDur.setDescription('Minimum Duration')
ne843UdeEntryLed = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryLed.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryLed.setDescription('LED\nValues:\nBD,\nAC,\nDC,\n\n')
ne843UdeEntryLat = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryLat.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryLat.setDescription('Latched\nValues:\nno(0),\nyes(1)\n')
ne843UdeEntryAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryAcc.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryAcc.setDescription('Contact Closure\nValues:\n,\nR1,\nR2,\nR3,\nR4,\nR5,\nR6,\nR7\n')
ne843UdeEntryDly = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 540))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryDly.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryDly.setDescription('Notify Delay (Seconds)')
ne843UdeEntryNoo = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryNoo.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryNoo.setDescription('Notify on Occur\nValues:\nno(0),\nyes(1)\n')
ne843UdeEntryNor = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryNor.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryNor.setDescription('Notify on Retire\nValues:\nno(0),\nyes(1)\n')
ne843UdeEntryNag = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryNag.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryNag.setDescription('NAG on Occur\nValues:\nno(0),\nyes(1)\n')
ne843UdeEntryDst = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843UdeEntryDst.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryDst.setDescription('Notify Destination')
ne843UdeEntryAst1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 17, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843UdeEntryAst1.setStatus('current')
if mibBuilder.loadTexts: ne843UdeEntryAst1.setDescription('Alarm State\nValues:\ninactive(0),\nactive(1)\n')
ne843Cm1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 18))
ne843Cm1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 18, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cm1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Cm1Ide.setDescription('Identifier')
ne843Cm1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 18, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cm1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Cm1Des.setDescription('Description')
ne843Cm1Ngi = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 18, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cm1Ngi.setStatus('current')
if mibBuilder.loadTexts: ne843Cm1Ngi.setDescription('Nag Interval')
ne843Cm1Cof = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 18, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cm1Cof.setStatus('current')
if mibBuilder.loadTexts: ne843Cm1Cof.setDescription('Queue Overflow\nValue:\nAlarm report from COF1\n')
ne843Cm1Cor = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 18, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cm1Cor.setStatus('current')
if mibBuilder.loadTexts: ne843Cm1Cor.setDescription('Number Did Not Respond\nValue:\nAlarm report from COR1\n')
ne843Cm1Nnc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 18, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cm1Nnc.setStatus('current')
if mibBuilder.loadTexts: ne843Cm1Nnc.setDescription('Number Not Configured\nValue:\nAlarm report from NNC1\n')
ne843CopTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19), )
if mibBuilder.loadTexts: ne843CopTable.setStatus('current')
if mibBuilder.loadTexts: ne843CopTable.setDescription('Table of all Call Out Phone Number data')
ne843CopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1), ).setIndexNames((0, "NE843-MIB", "ne843CopEntryIndex"))
if mibBuilder.loadTexts: ne843CopEntry.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntry.setDescription('Entry of information for one Call Out Phone Number')
ne843CopEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843CopEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntryIndex.setDescription('Table Index')
ne843CopEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843CopEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntryIde.setDescription('Identifier')
ne843CopEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CopEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntryDes.setDescription('Description')
ne843CopEntryTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CopEntryTyp.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntryTyp.setDescription('Type\nValues:\nDATA,\nPAGER\n')
ne843CopEntryPhn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CopEntryPhn.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntryPhn.setDescription('Phone Number')
ne843CopEntryBdr = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(300, 1200, 2400, 4800, 9600, 19200))).clone(namedValues=NamedValues(("b300", 300), ("b1200", 1200), ("b2400", 2400), ("b4800", 4800), ("b9600", 9600), ("b19200", 19200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CopEntryBdr.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntryBdr.setDescription('Connect Baudrate\nValues:\nb300(300),\nb1200(1200),\nb2400(2400),\nb4800(4800),\nb9600(9600),\nb19200(19200)\n')
ne843CopEntryDbt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8))).clone(namedValues=NamedValues(("d7", 7), ("d8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CopEntryDbt.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntryDbt.setDescription('Data Bits\nValues:\nd7(7),\nd8(8)\n')
ne843CopEntryPry = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CopEntryPry.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntryPry.setDescription('Parity\nValues:\nO,\nE,\nN\n')
ne843CopEntrySbt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("s1", 1), ("s2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CopEntrySbt.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntrySbt.setDescription('Stop Bits\nValues:\ns1(1),\ns2(2)\n')
ne843CopEntryDly = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CopEntryDly.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntryDly.setDescription('Pager ID Delay')
ne843CopEntryPgr = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CopEntryPgr.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntryPgr.setDescription('Pager ID')
ne843CopEntryMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 19, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CopEntryMsg.setStatus('current')
if mibBuilder.loadTexts: ne843CopEntryMsg.setDescription('Pager Message')
ne843CoeTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 20), )
if mibBuilder.loadTexts: ne843CoeTable.setStatus('current')
if mibBuilder.loadTexts: ne843CoeTable.setDescription('Table of all Email Address data')
ne843CoeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 20, 1), ).setIndexNames((0, "NE843-MIB", "ne843CoeEntryIndex"))
if mibBuilder.loadTexts: ne843CoeEntry.setStatus('current')
if mibBuilder.loadTexts: ne843CoeEntry.setDescription('Entry of information for one Email Address')
ne843CoeEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843CoeEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843CoeEntryIndex.setDescription('Table Index')
ne843CoeEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 20, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843CoeEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843CoeEntryIde.setDescription('Identifier')
ne843CoeEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 20, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CoeEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843CoeEntryDes.setDescription('Description')
ne843CoeEntryAdr = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 20, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CoeEntryAdr.setStatus('current')
if mibBuilder.loadTexts: ne843CoeEntryAdr.setDescription('Email Address')
ne843CoeEntryTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 20, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843CoeEntryTyp.setStatus('current')
if mibBuilder.loadTexts: ne843CoeEntryTyp.setDescription('Address Type\nValues:\nNORMAL,\nPAGER\n')
ne843SndTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 21), )
if mibBuilder.loadTexts: ne843SndTable.setStatus('current')
if mibBuilder.loadTexts: ne843SndTable.setDescription('Table of all SNMP Trap Destination data')
ne843SndEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 21, 1), ).setIndexNames((0, "NE843-MIB", "ne843SndEntryIndex"))
if mibBuilder.loadTexts: ne843SndEntry.setStatus('current')
if mibBuilder.loadTexts: ne843SndEntry.setDescription('Entry of information for one SNMP Trap Destination')
ne843SndEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843SndEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843SndEntryIndex.setDescription('Table Index')
ne843SndEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 21, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843SndEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843SndEntryIde.setDescription('Identifier')
ne843SndEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 21, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843SndEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843SndEntryDes.setDescription('Description')
ne843SndEntryIp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 21, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843SndEntryIp.setStatus('current')
if mibBuilder.loadTexts: ne843SndEntryIp.setDescription('IP Address')
ne843SndEntryCs = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 21, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843SndEntryCs.setStatus('current')
if mibBuilder.loadTexts: ne843SndEntryCs.setDescription('Community String')
ne843Po1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22))
ne843Po1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Po1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Ide.setDescription('Identifier')
ne843Po1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Des.setDescription('Description')
ne843Po1Phn = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Phn.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Phn.setDescription('Phone Number')
ne843Po1Bdr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(300, 1200, 2400, 4800, 9600, 19200))).clone(namedValues=NamedValues(("b300", 300), ("b1200", 1200), ("b2400", 2400), ("b4800", 4800), ("b9600", 9600), ("b19200", 19200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Bdr.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Bdr.setDescription('Connect Baudrate\nValues:\nb300(300),\nb1200(1200),\nb2400(2400),\nb4800(4800),\nb9600(9600),\nb19200(19200)\n')
ne843Po1Dbt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8))).clone(namedValues=NamedValues(("d7", 7), ("d8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Dbt.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Dbt.setDescription('Data Bits\nValues:\nd7(7),\nd8(8)\n')
ne843Po1Pry = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Pry.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Pry.setDescription('Parity\nValues:\nO,\nE,\nN\n')
ne843Po1Sbt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("s1", 1), ("s2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Sbt.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Sbt.setDescription('Stop Bits\nValues:\ns1(1),\ns2(2)\n')
ne843Po1Int = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Int.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Int.setDescription('Interval\nValues:\nSunday,\nMonday,\nTuesday,\nWednesday,\nThursday,\nFriday,\nSaturday,\nDaily,\nMonthly,\nQuarterly,\nNever\n')
ne843Po1Tim = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Tim.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Tim.setDescription('Time')
ne843Po1Cl01 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Cl01.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Cl01.setDescription('Command Line 1')
ne843Po1Cl02 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Cl02.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Cl02.setDescription('Command Line 2')
ne843Po1Cl03 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Cl03.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Cl03.setDescription('Command Line 3')
ne843Po1Cl04 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Cl04.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Cl04.setDescription('Command Line 4')
ne843Po1Cl05 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Cl05.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Cl05.setDescription('Command Line 5')
ne843Po1Cl06 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Cl06.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Cl06.setDescription('Command Line 6')
ne843Po1Cl07 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Cl07.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Cl07.setDescription('Command Line 7')
ne843Po1Cl08 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Cl08.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Cl08.setDescription('Command Line 8')
ne843Po1Cl09 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Cl09.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Cl09.setDescription('Command Line 9')
ne843Po1Cl10 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Po1Cl10.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Cl10.setDescription('Command Line 10')
ne843Po1Por = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 22, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Po1Por.setStatus('current')
if mibBuilder.loadTexts: ne843Po1Por.setDescription('Number Did Not Respond\nValue:\nAlarm report from POR1\n')
ne843Cb1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23))
ne843Cb1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Cb1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Ide.setDescription('Identifier')
ne843Cb1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Des.setDescription('Description')
ne843Cb1Stt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Stt.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Stt.setDescription('State\nValues:\noff(0),\non(1)\n')
ne843Cb1Ph1 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Ph1.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Ph1.setDescription('Call-Back Phone Number 1')
ne843Cb1Br1 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(300, 1200, 2400, 4800, 9600, 19200))).clone(namedValues=NamedValues(("b300", 300), ("b1200", 1200), ("b2400", 2400), ("b4800", 4800), ("b9600", 9600), ("b19200", 19200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Br1.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Br1.setDescription('Connect Baudrate 1\nValues:\nb300(300),\nb1200(1200),\nb2400(2400),\nb4800(4800),\nb9600(9600),\nb19200(19200)\n')
ne843Cb1Ph2 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Ph2.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Ph2.setDescription('Call-Back Phone Number 2')
ne843Cb1Br2 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(300, 1200, 2400, 4800, 9600, 19200))).clone(namedValues=NamedValues(("b300", 300), ("b1200", 1200), ("b2400", 2400), ("b4800", 4800), ("b9600", 9600), ("b19200", 19200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Br2.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Br2.setDescription('Connect Baudrate 2\nValues:\nb300(300),\nb1200(1200),\nb2400(2400),\nb4800(4800),\nb9600(9600),\nb19200(19200)\n')
ne843Cb1Ph3 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Ph3.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Ph3.setDescription('Call-Back Phone Number 3')
ne843Cb1Br3 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(300, 1200, 2400, 4800, 9600, 19200))).clone(namedValues=NamedValues(("b300", 300), ("b1200", 1200), ("b2400", 2400), ("b4800", 4800), ("b9600", 9600), ("b19200", 19200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Br3.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Br3.setDescription('Connect Baudrate 3\nValues:\nb300(300),\nb1200(1200),\nb2400(2400),\nb4800(4800),\nb9600(9600),\nb19200(19200)\n')
ne843Cb1Ph4 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Ph4.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Ph4.setDescription('Call-Back Phone Number 4')
ne843Cb1Br4 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(300, 1200, 2400, 4800, 9600, 19200))).clone(namedValues=NamedValues(("b300", 300), ("b1200", 1200), ("b2400", 2400), ("b4800", 4800), ("b9600", 9600), ("b19200", 19200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Br4.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Br4.setDescription('Connect Baudrate 4\nValues:\nb300(300),\nb1200(1200),\nb2400(2400),\nb4800(4800),\nb9600(9600),\nb19200(19200)\n')
ne843Cb1Ph5 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Ph5.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Ph5.setDescription('Call-Back Phone Number 5')
ne843Cb1Br5 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 23, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(300, 1200, 2400, 4800, 9600, 19200))).clone(namedValues=NamedValues(("b300", 300), ("b1200", 1200), ("b2400", 2400), ("b4800", 4800), ("b9600", 9600), ("b19200", 19200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Cb1Br5.setStatus('current')
if mibBuilder.loadTexts: ne843Cb1Br5.setDescription('Connect Baudrate 5\nValues:\nb300(300),\nb1200(1200),\nb2400(2400),\nb4800(4800),\nb9600(9600),\nb19200(19200)\n')
ne843Mp1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24))
ne843Mp1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Mp1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Ide.setDescription('Identifier')
ne843Mp1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Mp1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Des.setDescription('Description')
ne843Mp1Stt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Mp1Stt.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Stt.setDescription('State')
ne843Mp1Bdr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(300, 1200, 2400, 4800, 9600, 19200))).clone(namedValues=NamedValues(("b300", 300), ("b1200", 1200), ("b2400", 2400), ("b4800", 4800), ("b9600", 9600), ("b19200", 19200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Mp1Bdr.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Bdr.setDescription('Baudrate\nValues:\nb300(300),\nb1200(1200),\nb2400(2400),\nb4800(4800),\nb9600(9600),\nb19200(19200)\n')
ne843Mp1Dbt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8))).clone(namedValues=NamedValues(("d7", 7), ("d8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Mp1Dbt.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Dbt.setDescription('Data Bits\nValues:\nd7(7),\nd8(8)\n')
ne843Mp1Pry = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Mp1Pry.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Pry.setDescription('Parity\nValues:\nO,\nE,\nN\n')
ne843Mp1Sbt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("s1", 1), ("s2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Mp1Sbt.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Sbt.setDescription('Stop Bits\nValues:\ns1(1),\ns2(2)\n')
ne843Mp1Tmo = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 45))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Mp1Tmo.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Tmo.setDescription('Time-Out')
ne843Mp1Hsh = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Mp1Hsh.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Hsh.setDescription('Handshaking\nValues:\nNO,\nSW\n')
ne843Mp1Nrg = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Mp1Nrg.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Nrg.setDescription('Number of Rings Before Answer')
ne843Mp1Wre = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Mp1Wre.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Wre.setDescription('Write Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Mp1Ins = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 24, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Mp1Ins.setStatus('current')
if mibBuilder.loadTexts: ne843Mp1Ins.setDescription('Modem Init String')
ne843Lp1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25))
ne843Lp1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Lp1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Lp1Ide.setDescription('Identifier')
ne843Lp1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Lp1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Lp1Des.setDescription('Description')
ne843Lp1Stt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Lp1Stt.setStatus('current')
if mibBuilder.loadTexts: ne843Lp1Stt.setDescription('State')
ne843Lp1Bdr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(300, 1200, 2400, 4800, 9600, 19200))).clone(namedValues=NamedValues(("b300", 300), ("b1200", 1200), ("b2400", 2400), ("b4800", 4800), ("b9600", 9600), ("b19200", 19200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Lp1Bdr.setStatus('current')
if mibBuilder.loadTexts: ne843Lp1Bdr.setDescription('Baudrate\nValues:\nb300(300),\nb1200(1200),\nb2400(2400),\nb4800(4800),\nb9600(9600),\nb19200(19200)\n')
ne843Lp1Dbt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8))).clone(namedValues=NamedValues(("d7", 7), ("d8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Lp1Dbt.setStatus('current')
if mibBuilder.loadTexts: ne843Lp1Dbt.setDescription('Data Bits\nValues:\nd7(7),\nd8(8)\n')
ne843Lp1Pry = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Lp1Pry.setStatus('current')
if mibBuilder.loadTexts: ne843Lp1Pry.setDescription('Parity\nValues:\nO,\nE,\nN\n')
ne843Lp1Sbt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("s1", 1), ("s2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Lp1Sbt.setStatus('current')
if mibBuilder.loadTexts: ne843Lp1Sbt.setDescription('Stop Bits\nValues:\ns1(1),\ns2(2)\n')
ne843Lp1Tmo = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 45))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Lp1Tmo.setStatus('current')
if mibBuilder.loadTexts: ne843Lp1Tmo.setDescription('Time-Out')
ne843Lp1Hsh = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Lp1Hsh.setStatus('current')
if mibBuilder.loadTexts: ne843Lp1Hsh.setDescription('Handshaking\nValues:\nNO,\nHW,\nSW\n')
ne843Lp1App = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Lp1App.setStatus('current')
if mibBuilder.loadTexts: ne843Lp1App.setDescription('Application\nValues:\nTERMINAL,\nEVENT LOG\n')
ne843Lp1Wre = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 25, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Lp1Wre.setStatus('current')
if mibBuilder.loadTexts: ne843Lp1Wre.setDescription('Write Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Tlm1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 26))
ne843Tlm1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 26, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Tlm1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Tlm1Ide.setDescription('Identifier')
ne843Tlm1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 26, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Tlm1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Tlm1Des.setDescription('Description')
ne843Tlm1Aue = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 26, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Tlm1Aue.setStatus('current')
if mibBuilder.loadTexts: ne843Tlm1Aue.setDescription('Activate-User Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Tlm1Prt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 26, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Tlm1Prt.setStatus('current')
if mibBuilder.loadTexts: ne843Tlm1Prt.setDescription('TCP/IP Port')
ne843Tlm1Tmo = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 26, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setUnits('Minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Tlm1Tmo.setStatus('current')
if mibBuilder.loadTexts: ne843Tlm1Tmo.setDescription('Timeout (Minutes)')
ne843Tl1Table = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 27), )
if mibBuilder.loadTexts: ne843Tl1Table.setStatus('current')
if mibBuilder.loadTexts: ne843Tl1Table.setDescription('Table of all TL1 Object data')
ne843Tl1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 27, 1), ).setIndexNames((0, "NE843-MIB", "ne843Tl1EntryIndex"))
if mibBuilder.loadTexts: ne843Tl1Entry.setStatus('current')
if mibBuilder.loadTexts: ne843Tl1Entry.setDescription('Entry of information for one TL1 Object')
ne843Tl1EntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Tl1EntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843Tl1EntryIndex.setDescription('Table Index')
ne843Tl1EntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 27, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Tl1EntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843Tl1EntryIde.setDescription('Identifier')
ne843Tl1EntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 27, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Tl1EntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843Tl1EntryDes.setDescription('Description')
ne843Tl1EntryCds = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 27, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Tl1EntryCds.setStatus('current')
if mibBuilder.loadTexts: ne843Tl1EntryCds.setDescription('Condition Description')
ne843Tl1EntryAid = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 27, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Tl1EntryAid.setStatus('current')
if mibBuilder.loadTexts: ne843Tl1EntryAid.setDescription('Aid')
ne843Tl1EntryCnd = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 27, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Tl1EntryCnd.setStatus('current')
if mibBuilder.loadTexts: ne843Tl1EntryCnd.setDescription('Condition Type')
ne843Tl1EntrySaf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 27, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Tl1EntrySaf.setStatus('current')
if mibBuilder.loadTexts: ne843Tl1EntrySaf.setDescription('Service Affecting\nValues:\nno(0),\nyes(1)\n')
ne843Tl1EntryRpt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 27, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Tl1EntryRpt.setStatus('current')
if mibBuilder.loadTexts: ne843Tl1EntryRpt.setDescription('Reporting\nValues:\nEQUIPMENT,\nENVIRONMENT,\nPRESENCE\n')
ne843Net1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28))
ne843Net1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Net1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Ide.setDescription('Identifier')
ne843Net1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Des.setDescription('Description')
ne843Net1Ead = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Net1Ead.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Ead.setDescription('Ethernet Address')
ne843Net1Dhcp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("static", 0), ("dhcpClient", 1), ("dhcpServer", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Dhcp.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Dhcp.setDescription('IP Addressing Mode\nValues:\nstatic(0),\ndhcpClient(1),\ndhcpServer(2)\n')
ne843Net1Ip = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Ip.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Ip.setDescription('Static IPv4 Address')
ne843Net1Wip = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Net1Wip.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Wip.setDescription('Working IPv4 Address')
ne843Net1Sub = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Sub.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Sub.setDescription('Subnet Mask')
ne843Net1Gtwy = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Gtwy.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Gtwy.setDescription('Default Gateway')
ne843Net1Host = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Host.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Host.setDescription('Host Name')
ne843Net1Dom = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Dom.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Dom.setDescription('Domain Name')
ne843Net1Dns = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Dns.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Dns.setDescription('DNS Server Address')
ne843Net1Wre = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Wre.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Wre.setDescription('Write Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Net1Tmo = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setUnits('Minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Tmo.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Tmo.setDescription('Timeout (Minutes)')
ne843Net1Msrv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Msrv.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Msrv.setDescription('Mail Server Address')
ne843Net1Ntp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Ntp.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Ntp.setDescription('Time Server Address')
ne843Net1Sma = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Sma.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Sma.setDescription('Send Email As')
ne843Net1Sid = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Net1Sid.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Sid.setDescription('SNMP Engine ID')
ne843Net1Fpe = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Fpe.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Fpe.setDescription('FTP Access Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Net1Hpe = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Hpe.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Hpe.setDescription('HTTP Web Access Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Net1Hse = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Hse.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Hse.setDescription('HTTPS Web Access Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Net1She = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1She.setStatus('current')
if mibBuilder.loadTexts: ne843Net1She.setDescription('SSH Access Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Net1Sne = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Sne.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Sne.setDescription('SNMP Access Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Net1Tle = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Tle.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Tle.setDescription('Telnet Access Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Net1Ip6 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Ip6.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Ip6.setDescription('Static IPv6 Address')
ne843Net1Gtwy6 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Gtwy6.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Gtwy6.setDescription('Static IPv6 Gateway/Router')
ne843Net1Wip6 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Net1Wip6.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Wip6.setDescription('Working IPv6 Address')
ne843Net1Ll6 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Net1Ll6.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Ll6.setDescription('Working IPv6 Link Local Address')
ne843Net1Pl6 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Net1Pl6.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Pl6.setDescription('IPv6 Prefix Length')
ne843Net1Wgtwy6 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 28, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Net1Wgtwy6.setStatus('current')
if mibBuilder.loadTexts: ne843Net1Wgtwy6.setDescription('Working IPv6 Gateway/Router Address')
ne843DrcTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 29), )
if mibBuilder.loadTexts: ne843DrcTable.setStatus('current')
if mibBuilder.loadTexts: ne843DrcTable.setDescription('Table of all Derived Channel data')
ne843DrcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 29, 1), ).setIndexNames((0, "NE843-MIB", "ne843DrcEntryIndex"))
if mibBuilder.loadTexts: ne843DrcEntry.setStatus('current')
if mibBuilder.loadTexts: ne843DrcEntry.setDescription('Entry of information for one Derived Channel')
ne843DrcEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DrcEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843DrcEntryIndex.setDescription('Table Index')
ne843DrcEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 29, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DrcEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843DrcEntryIde.setDescription('Identifier')
ne843DrcEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 29, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DrcEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843DrcEntryDes.setDescription('Description')
ne843DrcEntryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 29, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DrcEntryVal.setStatus('current')
if mibBuilder.loadTexts: ne843DrcEntryVal.setDescription('Value')
ne843DrcEntryPrg = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 29, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DrcEntryPrg.setStatus('current')
if mibBuilder.loadTexts: ne843DrcEntryPrg.setDescription('Program Line')
ne843DrcEntryUni = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 29, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DrcEntryUni.setStatus('current')
if mibBuilder.loadTexts: ne843DrcEntryUni.setDescription('Unit')
ne843InpTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 30), )
if mibBuilder.loadTexts: ne843InpTable.setStatus('current')
if mibBuilder.loadTexts: ne843InpTable.setDescription('Table of all Input Management data')
ne843InpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 30, 1), ).setIndexNames((0, "NE843-MIB", "ne843InpEntryIndex"))
if mibBuilder.loadTexts: ne843InpEntry.setStatus('current')
if mibBuilder.loadTexts: ne843InpEntry.setDescription('Entry of information for one Input Management')
ne843InpEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InpEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843InpEntryIndex.setDescription('Table Index')
ne843InpEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 30, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InpEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843InpEntryIde.setDescription('Identifier')
ne843InpEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 30, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843InpEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843InpEntryDes.setDescription('Description')
ne843InpEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 30, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("alarming", 1), ("nonAlarming", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InpEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843InpEntryStt.setDescription('Input State\nValues:\nalarming(1),\nnonAlarming(0)\n')
ne843InpEntryTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 30, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843InpEntryTyp.setStatus('current')
if mibBuilder.loadTexts: ne843InpEntryTyp.setDescription('Type Alarm Object ID or, REMLVD for Remote LVD')
ne843InpEntryPol = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 30, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843InpEntryPol.setStatus('current')
if mibBuilder.loadTexts: ne843InpEntryPol.setDescription('Input Alarming Polarity\nValues:\nOPEN,\nCLOSED\n')
ne843InpEntrySn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 30, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InpEntrySn.setStatus('current')
if mibBuilder.loadTexts: ne843InpEntrySn.setDescription('Serial Number')
ne843InpEntryBrc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 30, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InpEntryBrc.setStatus('current')
if mibBuilder.loadTexts: ne843InpEntryBrc.setDescription('Board Code')
ne843MsvTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 31), )
if mibBuilder.loadTexts: ne843MsvTable.setStatus('current')
if mibBuilder.loadTexts: ne843MsvTable.setDescription('Table of all Midstring Voltage Monitor data')
ne843MsvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 31, 1), ).setIndexNames((0, "NE843-MIB", "ne843MsvEntryIndex"))
if mibBuilder.loadTexts: ne843MsvEntry.setStatus('current')
if mibBuilder.loadTexts: ne843MsvEntry.setDescription('Entry of information for one Midstring Voltage Monitor')
ne843MsvEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843MsvEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843MsvEntryIndex.setDescription('Table Index')
ne843MsvEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 31, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843MsvEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843MsvEntryIde.setDescription('Identifier')
ne843MsvEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 31, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843MsvEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843MsvEntryDes.setDescription('Description')
ne843MsvEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 31, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843MsvEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843MsvEntryStt.setDescription('State')
ne843MsvEntryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 31, 1, 5), Integer32()).setUnits('mV').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843MsvEntryVal.setStatus('current')
if mibBuilder.loadTexts: ne843MsvEntryVal.setDescription('Value (mV)')
ne843MsvEntryDid = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 31, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843MsvEntryDid.setStatus('current')
if mibBuilder.loadTexts: ne843MsvEntryDid.setDescription('Duplicate ID')
ne843MsvEntryDid1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 31, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843MsvEntryDid1.setStatus('current')
if mibBuilder.loadTexts: ne843MsvEntryDid1.setDescription('Duplicate ID\nValues:\ninactive(0),\nactive(1)\n')
ne843Rp1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32))
ne843Rp1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rp1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Ide.setDescription('Identifier')
ne843Rp1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rp1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Des.setDescription('Description')
ne843Rp1Frq = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 50))).setUnits('Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rp1Frq.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Frq.setDescription('Frequency (Hz)')
ne843Rp1Vsp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(65, 100))).setUnits('Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rp1Vsp.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Vsp.setDescription('Voltage Set-point (Volts)')
ne843Rp1Ofe = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rp1Ofe.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Ofe.setDescription('Offset\nValues:\ndisable(0),\nenable(1)\n')
ne843Rp1Rme = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rp1Rme.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Rme.setDescription('Redundancy Monitor\nValues:\ndisable(0),\nenable(1)\n')
ne843Rp1Rss = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("restart", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rp1Rss.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Rss.setDescription('Restart\nValues:\nrestart(1)\n')
ne843Rp1Rf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rp1Rf.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Rf.setDescription('Ringer Minor Fail\nValue:\nAlarm report from RFN1\n')
ne843Rp1Rpff = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rp1Rpff.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Rpff.setDescription('Ringer Fan Fail\nValue:\nAlarm report from RPFF1\n')
ne843Rp1Rprl = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rp1Rprl.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Rprl.setDescription('Ringer Redundancy Loss\nValue:\nAlarm report from RPRL1\n')
ne843Rp1Rpfj = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rp1Rpfj.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Rpfj.setDescription('Ringer Major Fail\nValue:\nAlarm report from RPFJ1\n')
ne843Rp1Rpxj = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rp1Rpxj.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Rpxj.setDescription('Ringer Major External Fault\nValue:\nAlarm report from RPXJ1\n')
ne843Rp1Rpxn = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rp1Rpxn.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Rpxn.setDescription('Ringer Minor External Fault\nValue:\nAlarm report from RPXN1\n')
ne843Rp1Rcdp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rp1Rcdp.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Rcdp.setDescription('Ringer ID Conflict\nValue:\nAlarm report from RCDP1\n')
ne843Rp1Cap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 15), Integer32()).setUnits('VA').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rp1Cap.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Cap.setDescription('Capacity (VA)')
ne843Rp1Olcap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 16), Integer32()).setUnits('VA').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rp1Olcap.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Olcap.setDescription('On Line Capacity (VA)')
ne843Rp1Va = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 17), Integer32()).setUnits('VA').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rp1Va.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Va.setDescription('Total (VA)')
ne843Rp1Rrf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 32, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rp1Rrf.setStatus('current')
if mibBuilder.loadTexts: ne843Rp1Rrf.setDescription('Standby Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843RchTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33), )
if mibBuilder.loadTexts: ne843RchTable.setStatus('current')
if mibBuilder.loadTexts: ne843RchTable.setDescription('Table of all Ringer Chassis data')
ne843RchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1), ).setIndexNames((0, "NE843-MIB", "ne843RchEntryIndex"))
if mibBuilder.loadTexts: ne843RchEntry.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntry.setDescription('Entry of information for one Ringer Chassis')
ne843RchEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryIndex.setDescription('Table Index')
ne843RchEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryIde.setDescription('Identifier')
ne843RchEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843RchEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryDes.setDescription('Description')
ne843RchEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843RchEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryStt.setDescription('Ringer Group State')
ne843RchEntryVa = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 5), Integer32()).setUnits('mVA').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryVa.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryVa.setDescription('Ringer Output (mVA)')
ne843RchEntryPri = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryPri.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryPri.setDescription('Primary Ringer')
ne843RchEntrySec = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntrySec.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntrySec.setDescription('Secondary Ringer')
ne843RchEntryRf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryRf.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryRf.setDescription('Ringer Minor Fail\nValues:\ninactive(0),\nactive(1)\n')
ne843RchEntryRpff = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryRpff.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryRpff.setDescription('Ringer Fan Fail\nValues:\ninactive(0),\nactive(1)\n')
ne843RchEntryRpxj = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryRpxj.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryRpxj.setDescription('Ringer Major External Fault\nValues:\ninactive(0),\nactive(1)\n')
ne843RchEntryRpxn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryRpxn.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryRpxn.setDescription('Ringer Minor External Fault\nValues:\ninactive(0),\nactive(1)\n')
ne843RchEntryRprl = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryRprl.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryRprl.setDescription('Ringer Redundancy Loss\nValues:\ninactive(0),\nactive(1)\n')
ne843RchEntryRpfj = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryRpfj.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryRpfj.setDescription('Ringer Major Fail\nValues:\ninactive(0),\nactive(1)\n')
ne843RchEntryRcdp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryRcdp.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryRcdp.setDescription('Ringer ID Conflict\nValues:\ninactive(0),\nactive(1)\n')
ne843RchEntryPsn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryPsn.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryPsn.setDescription('Primary Serial Number')
ne843RchEntryPtyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryPtyp.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryPtyp.setDescription('Primary Type')
ne843RchEntryPstt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryPstt.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryPstt.setDescription('Primary Ringer State')
ne843RchEntrySsn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntrySsn.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntrySsn.setDescription('Secondary Serial Number')
ne843RchEntryStyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryStyp.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryStyp.setDescription('Secondary Type')
ne843RchEntrySstt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntrySstt.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntrySstt.setDescription('Secondary Ringer State')
ne843RchEntryCap = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 33, 1, 21), Integer32()).setUnits('VA').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843RchEntryCap.setStatus('current')
if mibBuilder.loadTexts: ne843RchEntryCap.setDescription('Capacity (VA)')
ne843AlarmTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34), )
if mibBuilder.loadTexts: ne843AlarmTable.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmTable.setDescription('Table of all Alarm data')
ne843AlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1), ).setIndexNames((0, "NE843-MIB", "ne843AlarmEntryIndex"))
if mibBuilder.loadTexts: ne843AlarmEntry.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntry.setDescription('Entry of information for one Alarm')
ne843AlarmEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843AlarmEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryIndex.setDescription('Table Index')
ne843AlarmEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843AlarmEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryDes.setDescription('Description')
ne843AlarmEntryAst = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843AlarmEntryAst.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryAst.setDescription('State\nValues:\ninactive(0),\nactive(1)\n')
ne843AlarmEntrySev = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843AlarmEntrySev.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntrySev.setDescription('Severity')
ne843AlarmEntryAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843AlarmEntryAcc.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryAcc.setDescription('Contact Closure\nValues:\n,\nR1,\nR2,\nR3,\nR4,\nR5,\nR6,\nR7\n')
ne843AlarmEntryThr = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843AlarmEntryThr.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryThr.setDescription('Threshold')
ne843AlarmEntryFth = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 7), Integer32()).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843AlarmEntryFth.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryFth.setDescription('Float Threshold (mV)')
ne843AlarmEntryBth = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 8), Integer32()).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843AlarmEntryBth.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryBth.setDescription('Boost Threshold (mV)')
ne843AlarmEntryDly = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 540))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843AlarmEntryDly.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryDly.setDescription('Notify Delay (Seconds)')
ne843AlarmEntryNoo = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843AlarmEntryNoo.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryNoo.setDescription('Notify On Occur\nValues:\nno(0),\nyes(1)\n')
ne843AlarmEntryNor = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843AlarmEntryNor.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryNor.setDescription('Notify On Retire\nValues:\nno(0),\nyes(1)\n')
ne843AlarmEntryNag = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843AlarmEntryNag.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryNag.setDescription('Nag on Occur\nValues:\nno(0),\nyes(1)\n')
ne843AlarmEntryDst = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 34, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843AlarmEntryDst.setStatus('current')
if mibBuilder.loadTexts: ne843AlarmEntryDst.setDescription('Notify Destination')
ne843Trap = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35))
ne843TrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 36))
ne843TrapDesc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 36, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ne843TrapDesc.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDesc.setDescription('Event Description')
ne843TrapSev = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 36, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("retire", 0), ("record", 1), ("warning", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ne843TrapSev.setStatus('current')
if mibBuilder.loadTexts: ne843TrapSev.setDescription('Event Severity')
ne843TrapTime = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 36, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ne843TrapTime.setStatus('current')
if mibBuilder.loadTexts: ne843TrapTime.setDescription('Time of Event')
ne843TrapDate = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 36, 4), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ne843TrapDate.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDate.setDescription('Date of Event')
ne843TrapPath = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 36, 5), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ne843TrapPath.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPath.setDescription('T1.317 Path of Event')
ne843TrapDc1Amj = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 1)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Amj.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Amj.setDescription('Auxiliary Fuse Major')
ne843TrapDc1Vsf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 2)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Vsf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Vsf.setDescription('Sense/Control Fuse')
ne843TrapDc1Osa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 3)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Osa.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Osa.setDescription('Open String')
ne843TrapDc1Zid = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 4)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Zid.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Zid.setDescription('ID Not Configured')
ne843TrapDc1Tpa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 5)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Tpa.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Tpa.setDescription('Thermal Probe Alarm')
ne843TrapDc1Vmf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 6)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Vmf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Vmf.setDescription('Voltage Module Fail')
ne843TrapDc1Cma = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 7)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Cma.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Cma.setDescription('Minor Communication Failure')
ne843TrapDc1Mcm = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 8)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Mcm.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Mcm.setDescription('Major Communication Failure')
ne843TrapDc1Epo = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 9)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Epo.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Epo.setDescription('Emergency Power Off')
ne843TrapDc1Icr = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 10)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Icr.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Icr.setDescription('Incompatible Rectifier')
ne843TrapDc1Rfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 11)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Rfa.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Rfa.setDescription('Rectifier Fail')
ne843TrapDc1Acf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 12)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Acf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Acf.setDescription('AC Fail')
ne843TrapDc1Man = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 13)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Man.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Man.setDescription('Manual Off')
ne843TrapDc1Did = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 14)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Did.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Did.setDescription('ID Conflict')
ne843TrapDc1Clm = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 15)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Clm.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Clm.setDescription('Rectifier Current Limit')
ne843TrapDc1Rfn = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 16)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Rfn.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Rfn.setDescription('Rectifier Fan Failure')
ne843TrapDc1Vla = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 17)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Vla.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Vla.setDescription('Very Low Voltage')
ne843TrapDc1Mfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 18)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Mfa.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Mfa.setDescription('Multiple Rectifier Fail')
ne843TrapDc1Rtl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 19)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Rtl.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Rtl.setDescription('Reserve Time Low')
ne843TrapDc1Rrtl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 20)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Rrtl.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Rrtl.setDescription('Real-time Reserve Time Low')
ne843TrapDc1Rls = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 21)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Rls.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Rls.setDescription('Redundancy Loss')
ne843TrapDc1Mman = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 22)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Mman.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Mman.setDescription('Multiple Manual Off')
ne843TrapDc1Macf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 23)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Macf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Macf.setDescription('Multiple AC Failure')
ne843TrapDc1Bda = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 24)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Bda.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Bda.setDescription('Battery On Discharge')
ne843TrapDc1Hva = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 25)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Hva.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Hva.setDescription('High Voltage')
ne843TrapDc1Hfv = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 26)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Hfv.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Hfv.setDescription('High Float Voltage')
ne843TrapPs1Epr = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 27)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Epr.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Epr.setDescription('External Password Reset')
ne843TrapPs1Pfd = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 28)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Pfd.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Pfd.setDescription('Passwords At Default')
ne843TrapPs1Exl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 29)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Exl.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Exl.setDescription('Excessive Login Attempts')
ne843TrapPs1Bbl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 30)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Bbl.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Bbl.setDescription('Memory Backup Battery Low')
ne843TrapPs1Clc = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 31)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Clc.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Clc.setDescription('Clock Changed')
ne843TrapPs1Stf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 32)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Stf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Stf.setDescription('Self Test Failed')
ne843TrapPs1Pgi = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 33)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Pgi.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Pgi.setDescription('Program Line Invalid')
ne843TrapPs1Cch = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 34)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Cch.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Cch.setDescription('Configuration Changed')
ne843TrapPs1Hcl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 35)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Hcl.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Hcl.setDescription('History Cleared')
ne843TrapPs1Ax1 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 36)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax1.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax1.setDescription('Auxiliary Event 1')
ne843TrapPs1Ax2 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 37)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax2.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax2.setDescription('Auxiliary Event 2')
ne843TrapPs1Ax3 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 38)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax3.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax3.setDescription('Auxiliary Event 3')
ne843TrapPs1Ax4 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 39)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax4.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax4.setDescription('Auxiliary Event 4')
ne843TrapPs1Ax5 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 40)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax5.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax5.setDescription('Auxiliary Event 5')
ne843TrapPs1Ax6 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 41)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax6.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax6.setDescription('Auxiliary Event 6')
ne843TrapPs1Fan24 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 42)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Fan24.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Fan24.setDescription('24 V Fuse Minor')
ne843TrapPs1Fan48 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 43)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Fan48.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Fan48.setDescription('48 V Fuse Minor')
ne843TrapPs1Faj24 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 44)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Faj24.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Faj24.setDescription('24 V Fuse Major')
ne843TrapPs1Faj48 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 45)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Faj48.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Faj48.setDescription('48 V Fuse Major')
ne843TrapAt1Ata = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 46)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapAt1Ata.setStatus('current')
if mibBuilder.loadTexts: ne843TrapAt1Ata.setDescription('Alarm Test Active')
ne843TrapAt1Atb = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 47)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapAt1Atb.setStatus('current')
if mibBuilder.loadTexts: ne843TrapAt1Atb.setDescription('Alarm Test Aborted')
ne843TrapCp1Cfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 48)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Cfa.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Cfa.setDescription('Converter Fail')
ne843TrapCp1Cfn = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 49)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Cfn.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Cfn.setDescription('Converter Fan Minor')
ne843TrapCp1Cfj = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 50)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Cfj.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Cfj.setDescription('Converter Fan Major')
ne843TrapCp1Dfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 51)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Dfa.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Dfa.setDescription('Distribution Fail')
ne843TrapCp1Did = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 52)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Did.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Did.setDescription('ID Conflict')
ne843TrapCp1Icc = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 53)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Icc.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Icc.setDescription('Incompatible Converter Alarm')
ne843TrapCp1Mfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 54)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Mfa.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Mfa.setDescription('Multiple Converter Fail')
ne843TrapCp1Hva = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 55)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Hva.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Hva.setDescription('Converter High Voltage Major')
ne843TrapCp1Hfv = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 56)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Hfv.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Hfv.setDescription('Converter High Voltage Minor')
ne843TrapCp1Vla = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 57)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Vla.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Vla.setDescription('Converter Very Low Voltage')
ne843TrapCp1Rl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 58)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Rl.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Rl.setDescription('Converter Redundancy Loss')
ne843TrapBr1Bta = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 59)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapBr1Bta.setStatus('current')
if mibBuilder.loadTexts: ne843TrapBr1Bta.setDescription('Battery Test Active')
ne843TrapBr1Bfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 60)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapBr1Bfa.setStatus('current')
if mibBuilder.loadTexts: ne843TrapBr1Bfa.setDescription('Battery Test Failed')
ne843TrapBr1Scda = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 61)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapBr1Scda.setStatus('current')
if mibBuilder.loadTexts: ne843TrapBr1Scda.setDescription('Shorted Cell Detected')
ne843TrapBr1Isda = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 62)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapBr1Isda.setStatus('current')
if mibBuilder.loadTexts: ne843TrapBr1Isda.setDescription('Imminent Shutdown')
ne843TrapBr1Mdp = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 63)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapBr1Mdp.setStatus('current')
if mibBuilder.loadTexts: ne843TrapBr1Mdp.setDescription('Voltage Duplicate ID')
ne843TrapBr1Mzd = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 64)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapBr1Mzd.setStatus('current')
if mibBuilder.loadTexts: ne843TrapBr1Mzd.setDescription('Voltage ID Not Configured')
ne843TrapBr1Btha = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 65)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapBr1Btha.setStatus('current')
if mibBuilder.loadTexts: ne843TrapBr1Btha.setDescription('High Battery Temperature')
ne843TrapCn1Cno = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 66)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCn1Cno.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCn1Cno.setDescription('Contactor Open')
ne843TrapCn1Cnf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 67)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCn1Cnf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCn1Cnf.setDescription('Contactor Failed')
ne843TrapCn2Cno = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 68)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCn2Cno.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCn2Cno.setDescription('Contactor Open')
ne843TrapCn2Cnf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 69)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCn2Cnf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCn2Cnf.setDescription('Contactor Failed')
ne843TrapCn3Cno = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 70)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCn3Cno.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCn3Cno.setDescription('Contactor Open')
ne843TrapCn3Cnf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 71)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCn3Cnf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCn3Cnf.setDescription('Contactor Failed')
ne843TrapCn4Cno = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 72)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCn4Cno.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCn4Cno.setDescription('Contactor Open')
ne843TrapCn4Cnf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 73)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCn4Cnf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCn4Cnf.setDescription('Contactor Failed')
ne843TrapCm1Cof = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 74)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCm1Cof.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCm1Cof.setDescription('Queue Overflow')
ne843TrapCm1Cor = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 75)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCm1Cor.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCm1Cor.setDescription('Number Did Not Respond')
ne843TrapCm1Nnc = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 76)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCm1Nnc.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCm1Nnc.setDescription('Number Not Configured')
ne843TrapPo1Por = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 77)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPo1Por.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPo1Por.setDescription('Number Did Not Respond')
ne843TrapRp1Rf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 78)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapRp1Rf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapRp1Rf.setDescription('Ringer Minor Fail')
ne843TrapRp1Rpff = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 79)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapRp1Rpff.setStatus('current')
if mibBuilder.loadTexts: ne843TrapRp1Rpff.setDescription('Ringer Fan Fail')
ne843TrapRp1Rprl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 80)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapRp1Rprl.setStatus('current')
if mibBuilder.loadTexts: ne843TrapRp1Rprl.setDescription('Ringer Redundancy Loss')
ne843TrapRp1Rpfj = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 81)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapRp1Rpfj.setStatus('current')
if mibBuilder.loadTexts: ne843TrapRp1Rpfj.setDescription('Ringer Major Fail')
ne843TrapRp1Rpxj = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 82)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapRp1Rpxj.setStatus('current')
if mibBuilder.loadTexts: ne843TrapRp1Rpxj.setDescription('Ringer Major External Fault')
ne843TrapRp1Rpxn = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 83)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapRp1Rpxn.setStatus('current')
if mibBuilder.loadTexts: ne843TrapRp1Rpxn.setDescription('Ringer Minor External Fault')
ne843TrapRp1Rcdp = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 84)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapRp1Rcdp.setStatus('current')
if mibBuilder.loadTexts: ne843TrapRp1Rcdp.setDescription('Ringer ID Conflict')
ne843TrapUserDefined = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 85)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapUserDefined.setStatus('current')
if mibBuilder.loadTexts: ne843TrapUserDefined.setDescription('This may be a user defined event, or a new controller event.')
ne843TrapDc1Emd = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 86)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Emd.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Emd.setDescription('Energy Management Disabled')
ne843TrapDc1Pfs = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 87)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Pfs.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Pfs.setDescription('Thermal Probe Fail Safe')
ne843TrapDc1Rif = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 88)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Rif.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Rif.setDescription('Rectifier Internal Fault')
ne843TrapDc1Lsf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 89)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Lsf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Lsf.setDescription('Load Share Fail')
ne843TrapPs1Ax7 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 90)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax7.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax7.setDescription('Auxiliary Event 7')
ne843TrapPs1Ax8 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 91)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax8.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax8.setDescription('Auxiliary Event 8')
ne843TrapPs1Ax9 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 92)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax9.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax9.setDescription('Auxiliary Event 9')
ne843TrapPs1Ax10 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 93)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax10.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax10.setDescription('Auxiliary Event 10')
ne843TrapPs1Ax11 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 94)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax11.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax11.setDescription('Auxiliary Event 11')
ne843TrapPs1Ax12 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 95)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Ax12.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Ax12.setDescription('Auxiliary Event 12')
ne843TrapBr1Btla = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 96)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapBr1Btla.setStatus('current')
if mibBuilder.loadTexts: ne843TrapBr1Btla.setDescription('Low Battery Temperature')
ne843TrapBr1Btvh = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 97)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapBr1Btvh.setStatus('current')
if mibBuilder.loadTexts: ne843TrapBr1Btvh.setDescription('Very High Battery Temperature')
ne843TrapBr1Btvl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 98)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapBr1Btvl.setStatus('current')
if mibBuilder.loadTexts: ne843TrapBr1Btvl.setDescription('Very Low Battery Temperature')
ne843TrapGn1Gnr = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 99)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapGn1Gnr.setStatus('current')
if mibBuilder.loadTexts: ne843TrapGn1Gnr.setDescription('Generator Running')
ne843TrapGn1Gnm = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 100)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapGn1Gnm.setStatus('current')
if mibBuilder.loadTexts: ne843TrapGn1Gnm.setDescription('Generator Maintenance Required')
ne843TrapGn1Gnf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 101)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapGn1Gnf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapGn1Gnf.setDescription('Generator Fail')
ne843TrapPs1Amtl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 102)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Amtl.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Amtl.setDescription('Low Ambient Temperature')
ne843TrapPs1Amth = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 103)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Amth.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Amth.setDescription('High Ambient Temperature')
ne843TrapAco1Aac = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 104)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapAco1Aac.setStatus('current')
if mibBuilder.loadTexts: ne843TrapAco1Aac.setDescription('ACO Active')
ne843TrapBr1Rba = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 105)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapBr1Rba.setStatus('current')
if mibBuilder.loadTexts: ne843TrapBr1Rba.setDescription('Reverse Battery')
ne843TrapCp1Cin = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 106)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapCp1Cin.setStatus('current')
if mibBuilder.loadTexts: ne843TrapCp1Cin.setDescription('Converter Input Fail')
ne843TrapDc1Bof = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 107)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Bof.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Bof.setDescription('Rectifier ORing FET Fault')
ne843TrapDc1Sof = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 108)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Sof.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Sof.setDescription('Rectifier Shorted ORing FET')
ne843TrapDc1Der = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 109)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Der.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Der.setDescription('Rectifier Under Voltage')
ne843TrapGn1Gns = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 110)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapGn1Gns.setStatus('current')
if mibBuilder.loadTexts: ne843TrapGn1Gns.setDescription('Generator Start')
ne843TrapIvp1Ilvi = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 111)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Ilvi.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Ilvi.setDescription('Inverter Low Input')
ne843TrapIvp1Ihvi = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 112)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Ihvi.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Ihvi.setDescription('Inverter High Input')
ne843TrapIvp1Ita = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 113)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Ita.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Ita.setDescription('Inverter High Temperature')
ne843TrapIvp1If = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 114)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1If.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1If.setDescription('Inverter Fail')
ne843TrapIvp1Ilv = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 115)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Ilv.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Ilv.setDescription('Inverter Low Output')
ne843TrapIvp1Ifa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 116)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Ifa.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Ifa.setDescription('Inverter Frequency Lock')
ne843TrapIvp1Ihv = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 117)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Ihv.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Ihv.setDescription('Inverter High Output')
ne843TrapIvp1Ida = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 118)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Ida.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Ida.setDescription('Inverter Distribution Alarm')
ne843TrapIvp1Iof = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 119)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Iof.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Iof.setDescription('Inverter Output Fuse')
ne843TrapIvp1Idid = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 120)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Idid.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Idid.setDescription('Inverter ID Conflict')
ne843TrapIvp1Iirm = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 121)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Iirm.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Iirm.setDescription('Inverter High RMS Current')
ne843TrapIvp1Iipk = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 122)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Iipk.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Iipk.setDescription('Inverter High Peak Current')
ne843TrapIvp1Icf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 123)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Icf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Icf.setDescription('Inverter High Crest Factor')
ne843TrapIvp1Mif = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 124)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Mif.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Mif.setDescription('Multiple Inverter Fail')
ne843TrapIvp1Irls = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 125)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Irls.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Irls.setDescription('Inverter Redundancy Loss')
ne843TrapDc1Pmf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 126)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Pmf.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Pmf.setDescription('Probe Minimum Fail')
ne843TrapPs1Crt = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 127)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapPs1Crt.setStatus('current')
if mibBuilder.loadTexts: ne843TrapPs1Crt.setDescription('Configuration Changed Reboot Required')
ne843TrapIvp1Milv = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 128)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapIvp1Milv.setStatus('current')
if mibBuilder.loadTexts: ne843TrapIvp1Milv.setDescription('Multiple Inverter Low Input Voltage')
ne843TrapDc1Faja = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 129)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Faja.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Faja.setDescription('Distribution Fuse A')
ne843TrapDc1Buht = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 130)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Buht.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Buht.setDescription('Bus Hi Temp')
ne843TrapDc1Buvht = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 131)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Buvht.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Buvht.setDescription('Bus Very Hi Temp')
ne843TrapDc1Btha = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 132)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Btha.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Btha.setDescription('Batt Hi Temp')
ne843TrapDc1Btvh = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 133)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Btvh.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Btvh.setDescription('Batt Very Hi Temp')
ne843TrapDc1Btla = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 134)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Btla.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Btla.setDescription('Batt Low Temp')
ne843TrapDc1Btvl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 135)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Btvl.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Btvl.setDescription('Batt Very Low Temp')
ne843TrapDc1Laht = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 136)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Laht.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Laht.setDescription('Local Amb. Hi Temp')
ne843TrapDc1Lalt = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 137)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Lalt.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Lalt.setDescription('Local Amb. Low Temp')
ne843TrapDc1Raht = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 138)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Raht.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Raht.setDescription('Remote Amb. Hi Temp')
ne843TrapDc1Ravht = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 139)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Ravht.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Ravht.setDescription('Remote Amb. Very Hi Temp')
ne843TrapDc1Ralt = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 140)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Ralt.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Ralt.setDescription('Remote Amb. Low Temp')
ne843TrapDc1Vlva = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 141)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Vlva.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Vlva.setDescription('VA Power Loss')
ne843TrapDc1Vlvb = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 142)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Vlvb.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Vlvb.setDescription('VB Power Loss')
ne843TrapDc1Ovla = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 143)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Ovla.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Ovla.setDescription('IA Overload')
ne843TrapDc1Ovlb = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 144)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Ovlb.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Ovlb.setDescription('IB Overload')
ne843TrapDc1Pcaux = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 145)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Pcaux.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Pcaux.setDescription('PIC Auxiliary')
ne843TrapDc1Slot = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 146)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Slot.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Slot.setDescription('PIC Slot')
ne843TrapDc1Fajb = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 147)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Fajb.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Fajb.setDescription('Distribution Fuse B')
ne843TrapDc1Smw = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 148)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Smw.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Smw.setDescription('Shunt Mis-wired')
ne843TrapDc1Cca = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 35, 149)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843TrapDc1Cca.setStatus('current')
if mibBuilder.loadTexts: ne843TrapDc1Cca.setDescription('Circuit Assignment')
ne843Retire = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37))
ne843RetireDc1Amj = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 1)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Amj.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Amj.setDescription('Auxiliary Fuse Major')
ne843RetireDc1Vsf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 2)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Vsf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Vsf.setDescription('Sense/Control Fuse')
ne843RetireDc1Osa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 3)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Osa.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Osa.setDescription('Open String')
ne843RetireDc1Zid = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 4)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Zid.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Zid.setDescription('ID Not Configured')
ne843RetireDc1Tpa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 5)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Tpa.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Tpa.setDescription('Thermal Probe Alarm')
ne843RetireDc1Vmf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 6)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Vmf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Vmf.setDescription('Voltage Module Fail')
ne843RetireDc1Cma = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 7)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Cma.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Cma.setDescription('Minor Communication Failure')
ne843RetireDc1Mcm = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 8)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Mcm.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Mcm.setDescription('Major Communication Failure')
ne843RetireDc1Epo = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 9)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Epo.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Epo.setDescription('Emergency Power Off')
ne843RetireDc1Icr = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 10)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Icr.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Icr.setDescription('Incompatible Rectifier')
ne843RetireDc1Rfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 11)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Rfa.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Rfa.setDescription('Rectifier Fail')
ne843RetireDc1Acf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 12)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Acf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Acf.setDescription('AC Fail')
ne843RetireDc1Man = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 13)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Man.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Man.setDescription('Manual Off')
ne843RetireDc1Did = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 14)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Did.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Did.setDescription('ID Conflict')
ne843RetireDc1Clm = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 15)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Clm.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Clm.setDescription('Rectifier Current Limit')
ne843RetireDc1Rfn = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 16)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Rfn.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Rfn.setDescription('Rectifier Fan Failure')
ne843RetireDc1Vla = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 17)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Vla.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Vla.setDescription('Very Low Voltage')
ne843RetireDc1Mfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 18)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Mfa.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Mfa.setDescription('Multiple Rectifier Fail')
ne843RetireDc1Rtl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 19)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Rtl.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Rtl.setDescription('Reserve Time Low')
ne843RetireDc1Rrtl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 20)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Rrtl.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Rrtl.setDescription('Real-time Reserve Time Low')
ne843RetireDc1Rls = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 21)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Rls.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Rls.setDescription('Redundancy Loss')
ne843RetireDc1Mman = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 22)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Mman.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Mman.setDescription('Multiple Manual Off')
ne843RetireDc1Macf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 23)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Macf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Macf.setDescription('Multiple AC Failure')
ne843RetireDc1Bda = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 24)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Bda.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Bda.setDescription('Battery On Discharge')
ne843RetireDc1Hva = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 25)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Hva.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Hva.setDescription('High Voltage')
ne843RetireDc1Hfv = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 26)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Hfv.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Hfv.setDescription('High Float Voltage')
ne843RetirePs1Epr = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 27)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Epr.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Epr.setDescription('External Password Reset')
ne843RetirePs1Pfd = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 28)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Pfd.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Pfd.setDescription('Passwords At Default')
ne843RetirePs1Exl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 29)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Exl.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Exl.setDescription('Excessive Login Attempts')
ne843RetirePs1Bbl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 30)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Bbl.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Bbl.setDescription('Memory Backup Battery Low')
ne843RetirePs1Clc = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 31)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Clc.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Clc.setDescription('Clock Changed')
ne843RetirePs1Stf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 32)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Stf.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Stf.setDescription('Self Test Failed')
ne843RetirePs1Pgi = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 33)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Pgi.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Pgi.setDescription('Program Line Invalid')
ne843RetirePs1Cch = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 34)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Cch.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Cch.setDescription('Configuration Changed')
ne843RetirePs1Hcl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 35)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Hcl.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Hcl.setDescription('History Cleared')
ne843RetirePs1Ax1 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 36)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax1.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax1.setDescription('Auxiliary Event 1')
ne843RetirePs1Ax2 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 37)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax2.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax2.setDescription('Auxiliary Event 2')
ne843RetirePs1Ax3 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 38)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax3.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax3.setDescription('Auxiliary Event 3')
ne843RetirePs1Ax4 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 39)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax4.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax4.setDescription('Auxiliary Event 4')
ne843RetirePs1Ax5 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 40)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax5.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax5.setDescription('Auxiliary Event 5')
ne843RetirePs1Ax6 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 41)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax6.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax6.setDescription('Auxiliary Event 6')
ne843RetirePs1Fan24 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 42)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Fan24.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Fan24.setDescription('24 V Fuse Minor')
ne843RetirePs1Fan48 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 43)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Fan48.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Fan48.setDescription('48 V Fuse Minor')
ne843RetirePs1Faj24 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 44)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Faj24.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Faj24.setDescription('24 V Fuse Major')
ne843RetirePs1Faj48 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 45)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Faj48.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Faj48.setDescription('48 V Fuse Major')
ne843RetireAt1Ata = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 46)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireAt1Ata.setStatus('current')
if mibBuilder.loadTexts: ne843RetireAt1Ata.setDescription('Alarm Test Active')
ne843RetireAt1Atb = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 47)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireAt1Atb.setStatus('current')
if mibBuilder.loadTexts: ne843RetireAt1Atb.setDescription('Alarm Test Aborted')
ne843RetireCp1Cfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 48)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Cfa.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Cfa.setDescription('Converter Fail')
ne843RetireCp1Cfn = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 49)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Cfn.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Cfn.setDescription('Converter Fan Minor')
ne843RetireCp1Cfj = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 50)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Cfj.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Cfj.setDescription('Converter Fan Major')
ne843RetireCp1Dfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 51)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Dfa.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Dfa.setDescription('Distribution Fail')
ne843RetireCp1Did = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 52)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Did.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Did.setDescription('ID Conflict')
ne843RetireCp1Icc = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 53)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Icc.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Icc.setDescription('Incompatible Converter Alarm')
ne843RetireCp1Mfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 54)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Mfa.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Mfa.setDescription('Multiple Converter Fail')
ne843RetireCp1Hva = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 55)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Hva.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Hva.setDescription('Converter High Voltage Major')
ne843RetireCp1Hfv = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 56)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Hfv.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Hfv.setDescription('Converter High Voltage Minor')
ne843RetireCp1Vla = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 57)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Vla.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Vla.setDescription('Converter Very Low Voltage')
ne843RetireCp1Rl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 58)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Rl.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Rl.setDescription('Converter Redundancy Loss')
ne843RetireBr1Bta = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 59)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireBr1Bta.setStatus('current')
if mibBuilder.loadTexts: ne843RetireBr1Bta.setDescription('Battery Test Active')
ne843RetireBr1Bfa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 60)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireBr1Bfa.setStatus('current')
if mibBuilder.loadTexts: ne843RetireBr1Bfa.setDescription('Battery Test Failed')
ne843RetireBr1Scda = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 61)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireBr1Scda.setStatus('current')
if mibBuilder.loadTexts: ne843RetireBr1Scda.setDescription('Shorted Cell Detected')
ne843RetireBr1Isda = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 62)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireBr1Isda.setStatus('current')
if mibBuilder.loadTexts: ne843RetireBr1Isda.setDescription('Imminent Shutdown')
ne843RetireBr1Mdp = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 63)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireBr1Mdp.setStatus('current')
if mibBuilder.loadTexts: ne843RetireBr1Mdp.setDescription('Voltage Duplicate ID')
ne843RetireBr1Mzd = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 64)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireBr1Mzd.setStatus('current')
if mibBuilder.loadTexts: ne843RetireBr1Mzd.setDescription('Voltage ID Not Configured')
ne843RetireBr1Btha = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 65)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireBr1Btha.setStatus('current')
if mibBuilder.loadTexts: ne843RetireBr1Btha.setDescription('High Battery Temperature')
ne843RetireCn1Cno = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 66)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCn1Cno.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCn1Cno.setDescription('Contactor Open')
ne843RetireCn1Cnf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 67)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCn1Cnf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCn1Cnf.setDescription('Contactor Failed')
ne843RetireCn2Cno = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 68)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCn2Cno.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCn2Cno.setDescription('Contactor Open')
ne843RetireCn2Cnf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 69)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCn2Cnf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCn2Cnf.setDescription('Contactor Failed')
ne843RetireCn3Cno = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 70)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCn3Cno.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCn3Cno.setDescription('Contactor Open')
ne843RetireCn3Cnf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 71)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCn3Cnf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCn3Cnf.setDescription('Contactor Failed')
ne843RetireCn4Cno = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 72)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCn4Cno.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCn4Cno.setDescription('Contactor Open')
ne843RetireCn4Cnf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 73)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCn4Cnf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCn4Cnf.setDescription('Contactor Failed')
ne843RetireCm1Cof = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 74)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCm1Cof.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCm1Cof.setDescription('Queue Overflow')
ne843RetireCm1Cor = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 75)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCm1Cor.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCm1Cor.setDescription('Number Did Not Respond')
ne843RetireCm1Nnc = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 76)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCm1Nnc.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCm1Nnc.setDescription('Number Not Configured')
ne843RetirePo1Por = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 77)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePo1Por.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePo1Por.setDescription('Number Did Not Respond')
ne843RetireRp1Rf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 78)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireRp1Rf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireRp1Rf.setDescription('Ringer Minor Fail')
ne843RetireRp1Rpff = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 79)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireRp1Rpff.setStatus('current')
if mibBuilder.loadTexts: ne843RetireRp1Rpff.setDescription('Ringer Fan Fail')
ne843RetireRp1Rprl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 80)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireRp1Rprl.setStatus('current')
if mibBuilder.loadTexts: ne843RetireRp1Rprl.setDescription('Ringer Redundancy Loss')
ne843RetireRp1Rpfj = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 81)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireRp1Rpfj.setStatus('current')
if mibBuilder.loadTexts: ne843RetireRp1Rpfj.setDescription('Ringer Major Fail')
ne843RetireRp1Rpxj = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 82)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireRp1Rpxj.setStatus('current')
if mibBuilder.loadTexts: ne843RetireRp1Rpxj.setDescription('Ringer Major External Fault')
ne843RetireRp1Rpxn = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 83)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireRp1Rpxn.setStatus('current')
if mibBuilder.loadTexts: ne843RetireRp1Rpxn.setDescription('Ringer Minor External Fault')
ne843RetireRp1Rcdp = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 84)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireRp1Rcdp.setStatus('current')
if mibBuilder.loadTexts: ne843RetireRp1Rcdp.setDescription('Ringer ID Conflict')
ne843RetireUserDefined = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 85)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireUserDefined.setStatus('current')
if mibBuilder.loadTexts: ne843RetireUserDefined.setDescription('This may be a user defined event, or a new controller event.')
ne843RetireDc1Emd = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 86)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Emd.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Emd.setDescription('Energy Management Disabled')
ne843RetireDc1Pfs = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 87)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Pfs.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Pfs.setDescription('Thermal Probe Fail Safe')
ne843RetireDc1Rif = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 88)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Rif.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Rif.setDescription('Rectifier Internal Fault')
ne843RetireDc1Lsf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 89)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Lsf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Lsf.setDescription('Load Share Fail')
ne843RetirePs1Ax7 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 90)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax7.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax7.setDescription('Auxiliary Event 7')
ne843RetirePs1Ax8 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 91)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax8.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax8.setDescription('Auxiliary Event 8')
ne843RetirePs1Ax9 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 92)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax9.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax9.setDescription('Auxiliary Event 9')
ne843RetirePs1Ax10 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 93)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax10.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax10.setDescription('Auxiliary Event 10')
ne843RetirePs1Ax11 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 94)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax11.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax11.setDescription('Auxiliary Event 11')
ne843RetirePs1Ax12 = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 95)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Ax12.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Ax12.setDescription('Auxiliary Event 12')
ne843RetireBr1Btla = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 96)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireBr1Btla.setStatus('current')
if mibBuilder.loadTexts: ne843RetireBr1Btla.setDescription('Low Battery Temperature')
ne843RetireBr1Btvh = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 97)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireBr1Btvh.setStatus('current')
if mibBuilder.loadTexts: ne843RetireBr1Btvh.setDescription('Very High Battery Temperature')
ne843RetireBr1Btvl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 98)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireBr1Btvl.setStatus('current')
if mibBuilder.loadTexts: ne843RetireBr1Btvl.setDescription('Very Low Battery Temperature')
ne843RetireGn1Gnr = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 99)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireGn1Gnr.setStatus('current')
if mibBuilder.loadTexts: ne843RetireGn1Gnr.setDescription('Generator Running')
ne843RetireGn1Gnm = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 100)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireGn1Gnm.setStatus('current')
if mibBuilder.loadTexts: ne843RetireGn1Gnm.setDescription('Generator Maintenance Required')
ne843RetireGn1Gnf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 101)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireGn1Gnf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireGn1Gnf.setDescription('Generator Fail')
ne843RetirePs1Amtl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 102)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Amtl.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Amtl.setDescription('Low Ambient Temperature')
ne843RetirePs1Amth = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 103)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Amth.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Amth.setDescription('High Ambient Temperature')
ne843RetireAco1Aac = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 104)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireAco1Aac.setStatus('current')
if mibBuilder.loadTexts: ne843RetireAco1Aac.setDescription('ACO Active')
ne843RetireBr1Rba = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 105)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireBr1Rba.setStatus('current')
if mibBuilder.loadTexts: ne843RetireBr1Rba.setDescription('Reverse Battery')
ne843RetireCp1Cin = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 106)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireCp1Cin.setStatus('current')
if mibBuilder.loadTexts: ne843RetireCp1Cin.setDescription('Converter Input Fail')
ne843RetireDc1Bof = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 107)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Bof.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Bof.setDescription('Rectifier ORing FET Fault')
ne843RetireDc1Sof = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 108)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Sof.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Sof.setDescription('Rectifier Shorted ORing FET')
ne843RetireDc1Der = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 109)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Der.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Der.setDescription('Rectifier Under Voltage')
ne843RetireGn1Gns = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 110)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireGn1Gns.setStatus('current')
if mibBuilder.loadTexts: ne843RetireGn1Gns.setDescription('Generator Start')
ne843RetireIvp1Ilvi = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 111)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Ilvi.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Ilvi.setDescription('Inverter Low Input')
ne843RetireIvp1Ihvi = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 112)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Ihvi.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Ihvi.setDescription('Inverter High Input')
ne843RetireIvp1Ita = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 113)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Ita.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Ita.setDescription('Inverter High Temperature')
ne843RetireIvp1If = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 114)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1If.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1If.setDescription('Inverter Fail')
ne843RetireIvp1Ilv = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 115)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Ilv.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Ilv.setDescription('Inverter Low Output')
ne843RetireIvp1Ifa = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 116)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Ifa.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Ifa.setDescription('Inverter Frequency Lock')
ne843RetireIvp1Ihv = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 117)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Ihv.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Ihv.setDescription('Inverter High Output')
ne843RetireIvp1Ida = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 118)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Ida.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Ida.setDescription('Inverter Distribution Alarm')
ne843RetireIvp1Iof = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 119)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Iof.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Iof.setDescription('Inverter Output Fuse')
ne843RetireIvp1Idid = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 120)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Idid.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Idid.setDescription('Inverter ID Conflict')
ne843RetireIvp1Iirm = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 121)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Iirm.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Iirm.setDescription('Inverter High RMS Current')
ne843RetireIvp1Iipk = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 122)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Iipk.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Iipk.setDescription('Inverter High Peak Current')
ne843RetireIvp1Icf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 123)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Icf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Icf.setDescription('Inverter High Crest Factor')
ne843RetireIvp1Mif = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 124)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Mif.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Mif.setDescription('Multiple Inverter Fail')
ne843RetireIvp1Irls = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 125)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Irls.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Irls.setDescription('Inverter Redundancy Loss')
ne843RetireDc1Pmf = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 126)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Pmf.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Pmf.setDescription('Probe Minimum Fail')
ne843RetirePs1Crt = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 127)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetirePs1Crt.setStatus('current')
if mibBuilder.loadTexts: ne843RetirePs1Crt.setDescription('Configuration Changed Reboot Required')
ne843RetireIvp1Milv = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 128)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireIvp1Milv.setStatus('current')
if mibBuilder.loadTexts: ne843RetireIvp1Milv.setDescription('Multiple Inverter Low Input Voltage')
ne843RetireDc1Faja = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 129)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Faja.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Faja.setDescription('Distribution Fuse A')
ne843RetireDc1Buht = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 130)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Buht.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Buht.setDescription('Bus Hi Temp')
ne843RetireDc1Buvht = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 131)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Buvht.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Buvht.setDescription('Bus Very Hi Temp')
ne843RetireDc1Btha = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 132)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Btha.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Btha.setDescription('Batt Hi Temp')
ne843RetireDc1Btvh = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 133)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Btvh.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Btvh.setDescription('Batt Very Hi Temp')
ne843RetireDc1Btla = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 134)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Btla.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Btla.setDescription('Batt Low Temp')
ne843RetireDc1Btvl = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 135)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Btvl.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Btvl.setDescription('Batt Very Low Temp')
ne843RetireDc1Laht = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 136)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Laht.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Laht.setDescription('Local Amb. Hi Temp')
ne843RetireDc1Lalt = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 137)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Lalt.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Lalt.setDescription('Local Amb. Low Temp')
ne843RetireDc1Raht = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 138)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Raht.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Raht.setDescription('Remote Amb. Hi Temp')
ne843RetireDc1Ravht = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 139)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Ravht.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Ravht.setDescription('Remote Amb. Very Hi Temp')
ne843RetireDc1Ralt = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 140)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Ralt.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Ralt.setDescription('Remote Amb. Low Temp')
ne843RetireDc1Vlva = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 141)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Vlva.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Vlva.setDescription('VA Power Loss')
ne843RetireDc1Vlvb = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 142)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Vlvb.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Vlvb.setDescription('VB Power Loss')
ne843RetireDc1Ovla = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 143)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Ovla.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Ovla.setDescription('IA Overload')
ne843RetireDc1Ovlb = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 144)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Ovlb.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Ovlb.setDescription('IB Overload')
ne843RetireDc1Pcaux = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 145)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Pcaux.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Pcaux.setDescription('PIC Auxiliary')
ne843RetireDc1Slot = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 146)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Slot.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Slot.setDescription('PIC Slot')
ne843RetireDc1Fajb = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 147)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Fajb.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Fajb.setDescription('Distribution Fuse B')
ne843RetireDc1Smw = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 148)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Smw.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Smw.setDescription('Shunt Mis-wired')
ne843RetireDc1Cca = NotificationType((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 37, 149)).setObjects(("NE843-MIB", "ne843TrapDesc"), ("NE843-MIB", "ne843TrapSev"), ("NE843-MIB", "ne843TrapTime"), ("NE843-MIB", "ne843TrapDate"), ("NE843-MIB", "ne843TrapPath"))
if mibBuilder.loadTexts: ne843RetireDc1Cca.setStatus('current')
if mibBuilder.loadTexts: ne843RetireDc1Cca.setDescription('Circuit Assignment')
ne843Acd1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38))
ne843Acd1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Ide.setDescription('Identifier')
ne843Acd1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Acd1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Des.setDescription('Description')
ne843Acd1Brc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Brc.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Brc.setDescription('Board Code')
ne843Acd1Sn = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Sn.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Sn.setDescription('Serial Number')
ne843Acd1Prd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Acd1Prd.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Prd.setDescription('Phase 1 Description')
ne843Acd1Psd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Acd1Psd.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Psd.setDescription('Phase 2 Description')
ne843Acd1Ptd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Acd1Ptd.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Ptd.setDescription('Phase 3 Description')
ne843Acd1Prv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 8), DisplayString()).setUnits('Vrms').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Prv.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Prv.setDescription('Phase 1 Voltage (Vrms)')
ne843Acd1Psv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 9), DisplayString()).setUnits('Vrms').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Psv.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Psv.setDescription('Phase 2 Voltage (Vrms)')
ne843Acd1Ptv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 10), DisplayString()).setUnits('Vrms').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Ptv.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Ptv.setDescription('Phase 3 Voltage (Vrms)')
ne843Acd1Pra = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 11), DisplayString()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Pra.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Pra.setDescription('Phase 1 Current (Amps)')
ne843Acd1Psa = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 12), DisplayString()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Psa.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Psa.setDescription('Phase 2 Current (Amps)')
ne843Acd1Pta = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 13), DisplayString()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Pta.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Pta.setDescription('Phase 3 Current (Amps)')
ne843Acd1Prf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 14), DisplayString()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Prf.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Prf.setDescription('Phase 1 Frequency (Hz)')
ne843Acd1Psf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 15), DisplayString()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Psf.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Psf.setDescription('Phase 2 Frequency (Hz)')
ne843Acd1Ptf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 16), DisplayString()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Ptf.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Ptf.setDescription('Phase 3 Frequency (Hz)')
ne843Acd1Prk = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 17), DisplayString()).setUnits('kW').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Prk.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Prk.setDescription('Phase 1 Power (kW)')
ne843Acd1Psk = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 18), DisplayString()).setUnits('kW').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Psk.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Psk.setDescription('Phase 2 Power (kW)')
ne843Acd1Ptk = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 19), DisplayString()).setUnits('kW').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Ptk.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Ptk.setDescription('Phase 3 Power (kW)')
ne843Acd1Syk = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 20), DisplayString()).setUnits('kW').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Acd1Syk.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Syk.setDescription('Total Power (kW)')
ne843Acd1Prx = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Acd1Prx.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Prx.setDescription('Phase 1 CTR')
ne843Acd1Psx = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Acd1Psx.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Psx.setDescription('Phase 2 CTR')
ne843Acd1Ptx = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 38, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Acd1Ptx.setStatus('current')
if mibBuilder.loadTexts: ne843Acd1Ptx.setDescription('Phase 3 CTR')
ne843Gn1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39))
ne843Gn1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gn1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Ide.setDescription('Identifier')
ne843Gn1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Des.setDescription('Description')
ne843Gn1Rt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Rt.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Rt.setDescription('Cumulative Runtime')
ne843Gn1Trt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gn1Trt.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Trt.setDescription('Current Runtime')
ne843Gn1Gnr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gn1Gnr.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Gnr.setDescription('Generator Running\nValue:\nAlarm report from GNR1\n')
ne843Gn1Gnm = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gn1Gnm.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Gnm.setDescription('Generator Maintenance Required\nValue:\nAlarm report from GNM1\n')
ne843Gn1Gnf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gn1Gnf.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Gnf.setDescription('Generator Fail\nValue:\nAlarm report from GNF1\n')
ne843Gn1Clt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 1000))).setUnits('Amps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Clt.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Clt.setDescription('Current Limit Threshold (Amps)')
ne843Gn1Tv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(19, 28), ValueRangeConstraint(40, 56), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Tv.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Tv.setDescription('Start Voltage')
ne843Gn1Tvd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Tvd.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Tvd.setDescription('Start Voltage Delay')
ne843Gn1Tp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Tp.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Tp.setDescription('Start Percent of Charge')
ne843Gn1Tpd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Tpd.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Tpd.setDescription('Start POC Delay')
ne843Gn1Tct = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 13), Integer32()).setUnits('ambient').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Tct.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Tct.setDescription('Start Cooling (ambient) Temperature (C)')
ne843Gn1Tctd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Tctd.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Tctd.setDescription('Start Cooling Temperature Delay')
ne843Gn1Tht = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 15), Integer32()).setUnits('ambient').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Tht.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Tht.setDescription('Start Heating (ambient) Temperature (C)')
ne843Gn1Thtd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Thtd.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Thtd.setDescription('Start Heating Temperature Delay')
ne843Gn1Pv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(21, 30), ValueRangeConstraint(46, 60), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Pv.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Pv.setDescription('Stop Voltage')
ne843Gn1Pvd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Pvd.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Pvd.setDescription('Stop Voltage Delay')
ne843Gn1Pi = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Pi.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Pi.setDescription('Stop Current')
ne843Gn1Pid = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Pid.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Pid.setDescription('Stop Current Delay')
ne843Gn1Pp = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Pp.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Pp.setDescription('Stop Percent of Charge')
ne843Gn1Ppd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Ppd.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Ppd.setDescription('Stop POC Delay')
ne843Gn1Pct = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 23), Integer32()).setUnits('ambient').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Pct.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Pct.setDescription('Stop Cooling (ambient) Temperature (C)')
ne843Gn1Pctd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Pctd.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Pctd.setDescription('Stop Cooling Temperature Delay')
ne843Gn1Pht = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 25), Integer32()).setUnits('ambient').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Pht.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Pht.setDescription('Stop Heating (ambient) Temperature (C)')
ne843Gn1Phtd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Phtd.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Phtd.setDescription('Stop Heating Temperature Delay')
ne843Gn1Mrt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Mrt.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Mrt.setDescription('Mininum Run Time')
ne843Gn1Tve = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Tve.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Tve.setDescription('Start Voltage Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gn1Tpe = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Tpe.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Tpe.setDescription('Start Percent of Charge Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gn1Cte = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Cte.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Cte.setDescription('Start Cooling Temperatuer Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gn1Hte = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Hte.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Hte.setDescription('Start Heating Temperatuer Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gn1Pve = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Pve.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Pve.setDescription('Stop Voltage Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gn1Pie = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Pie.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Pie.setDescription('Stop Current Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gn1Ppe = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Ppe.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Ppe.setDescription('Stop Percent of Charge Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gn1Nv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Nv.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Nv.setDescription('Nominal Output Voltage')
ne843Gn1Nva = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Nva.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Nva.setDescription('Nominal Output Power')
ne843Gn1Ode = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Ode.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Ode.setDescription('Manual on Duration Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gn1Odr = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 38), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Odr.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Odr.setDescription('Manual on Duration')
ne843Gn1Ocd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gn1Ocd.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Ocd.setDescription('Manual on Duration countdown')
ne843Gn1Gns = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gn1Gns.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Gns.setDescription('Generator Start\nValue:\nAlarm report from GNS1\n')
ne843Gn1Aue = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Aue.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Aue.setDescription('Auto Mode Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Gn1Mod = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 42), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Gn1Mod.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Mod.setDescription('Auto Mode\nValues:\nOFF,\nON,\nAUTO\n')
ne843Gn1Stt = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 39, 43), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Gn1Stt.setStatus('current')
if mibBuilder.loadTexts: ne843Gn1Stt.setDescription('State')
ne843BatTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40), )
if mibBuilder.loadTexts: ne843BatTable.setStatus('current')
if mibBuilder.loadTexts: ne843BatTable.setDescription('Table of all Battery Section data')
ne843BatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1), ).setIndexNames((0, "NE843-MIB", "ne843BatEntryIndex"))
if mibBuilder.loadTexts: ne843BatEntry.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntry.setDescription('Entry of information for one Battery Section')
ne843BatEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843BatEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntryIndex.setDescription('Table Index')
ne843BatEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843BatEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntryIde.setDescription('Identifier')
ne843BatEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843BatEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntryDes.setDescription('Description')
ne843BatEntryCon = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843BatEntryCon.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntryCon.setDescription('Contactor')
ne843BatEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843BatEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntryStt.setDescription('State')
ne843BatEntryNst = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843BatEntryNst.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntryNst.setDescription('Number of Strings')
ne843BatEntryBty = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843BatEntryBty.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntryBty.setDescription('Battery Type')
ne843BatEntryCap = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843BatEntryCap.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntryCap.setDescription('Capacity')
ne843BatEntryDat = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843BatEntryDat.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntryDat.setDescription('Install Date')
ne843BatEntryMpv = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1, 10), DisplayString()).setUnits('Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843BatEntryMpv.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntryMpv.setDescription('Midtstring Voltage (Volts)')
ne843BatEntryAdc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 40, 1, 11), DisplayString()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843BatEntryAdc.setStatus('current')
if mibBuilder.loadTexts: ne843BatEntryAdc.setDescription('Current (Amps)')
ne843Eco1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 41))
ne843Eco1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 41, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Eco1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Eco1Ide.setDescription('Identifier')
ne843Eco1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 41, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Eco1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Eco1Des.setDescription('Description')
ne843Eco1Sofs = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 41, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Eco1Sofs.setStatus('current')
if mibBuilder.loadTexts: ne843Eco1Sofs.setDescription('Solar Rectifier Offset')
ne843Eco1Ntrd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 41, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Eco1Ntrd.setStatus('current')
if mibBuilder.loadTexts: ne843Eco1Ntrd.setDescription('Normal Rectifier Drain')
ne843Eco1Strd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 41, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Eco1Strd.setStatus('current')
if mibBuilder.loadTexts: ne843Eco1Strd.setDescription('Solar Rectifier Drain')
ne843Eco1Nkwh = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 41, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Eco1Nkwh.setStatus('current')
if mibBuilder.loadTexts: ne843Eco1Nkwh.setDescription('Normal kWh')
ne843Eco1Skwh = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 41, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Eco1Skwh.setStatus('current')
if mibBuilder.loadTexts: ne843Eco1Skwh.setDescription('Solar kWh')
ne843Eco1Ncap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 41, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Eco1Ncap.setStatus('current')
if mibBuilder.loadTexts: ne843Eco1Ncap.setDescription('Normal Capacity')
ne843Eco1Nocap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 41, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Eco1Nocap.setStatus('current')
if mibBuilder.loadTexts: ne843Eco1Nocap.setDescription('Normal Online Capacity')
ne843Ivp1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42))
ne843Ivp1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Ide.setDescription('Identifier')
ne843Ivp1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ivp1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Des.setDescription('Description')
ne843Ivp1Cap = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 3), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Cap.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Cap.setDescription('Total Installed Inverter Capacity (Amps)')
ne843Ivp1Irm = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Irm.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Irm.setDescription('RMS Current')
ne843Ivp1Vac = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Vac.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Vac.setDescription('AC Output voltage')
ne843Ivp1Adc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Adc.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Adc.setDescription('DC Current')
ne843Ivp1Vdc = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Vdc.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Vdc.setDescription('DC Voltage')
ne843Ivp1Frq = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Frq.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Frq.setDescription('Frequency')
ne843Ivp1Lst = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Lst.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Lst.setDescription('Load Share Target Percentage')
ne843Ivp1Ste = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ivp1Ste.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Ste.setDescription('Standby Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843Ivp1Rlse = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ivp1Rlse.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Rlse.setDescription('Redundancy Loss Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843Ivp1Dth = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(20, 25), ValueRangeConstraint(40, 50), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ivp1Dth.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Dth.setDescription('Low Voltage Disconnect Threshold')
ne843Ivp1Rth = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(22, 27), ValueRangeConstraint(44, 54), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ivp1Rth.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Rth.setDescription('Low Voltage Reconnect Threshold')
ne843Ivp1Lvd = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ivp1Lvd.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Lvd.setDescription('Low Voltage Disconnect Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843Ivp1Hce = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ivp1Hce.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Hce.setDescription('Hi Crest Factor Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843Ivp1Hipe = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ivp1Hipe.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Hipe.setDescription('Hi IPeak Current Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843Ivp1Hrme = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Ivp1Hrme.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Hrme.setDescription('Hi IRMS Currrent Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843Ivp1Ilvi = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Ilvi.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Ilvi.setDescription('Inverter Low Input\nValue:\nAlarm report from ILVI1\n')
ne843Ivp1Ihvi = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Ihvi.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Ihvi.setDescription('Inverter High Input\nValue:\nAlarm report from IHVI1\n')
ne843Ivp1Ita = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Ita.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Ita.setDescription('Inverter High Temperature\nValue:\nAlarm report from ITA1\n')
ne843Ivp1If = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1If.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1If.setDescription('Inverter Fail\nValue:\nAlarm report from IF1\n')
ne843Ivp1Ilv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Ilv.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Ilv.setDescription('Inverter Low Output\nValue:\nAlarm report from ILV1\n')
ne843Ivp1Ifa = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Ifa.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Ifa.setDescription('Inverter Frequency Lock\nValue:\nAlarm report from IFA1\n')
ne843Ivp1Ihv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Ihv.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Ihv.setDescription('Inverter High Output\nValue:\nAlarm report from IHV1\n')
ne843Ivp1Ida = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Ida.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Ida.setDescription('Inverter Distribution Alarm\nValue:\nAlarm report from IDA1\n')
ne843Ivp1Iof = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Iof.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Iof.setDescription('Inverter Output Fuse\nValue:\nAlarm report from IOF1\n')
ne843Ivp1Idid = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Idid.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Idid.setDescription('Inverter ID Conflict\nValue:\nAlarm report from IDID1\n')
ne843Ivp1Iirm = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Iirm.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Iirm.setDescription('Inverter High RMS Current\nValue:\nAlarm report from IIRM1\n')
ne843Ivp1Iipk = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Iipk.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Iipk.setDescription('Inverter High Peak Current\nValue:\nAlarm report from IIPK1\n')
ne843Ivp1Icf = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Icf.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Icf.setDescription('Inverter High Crest Factor\nValue:\nAlarm report from ICF1\n')
ne843Ivp1Mif = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Mif.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Mif.setDescription('Multiple Inverter Fail\nValue:\nAlarm report from MIF1\n')
ne843Ivp1Irls = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Irls.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Irls.setDescription('Inverter Redundancy Loss\nValue:\nAlarm report from IRLS1\n')
ne843Ivp1Milv = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 42, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Ivp1Milv.setStatus('current')
if mibBuilder.loadTexts: ne843Ivp1Milv.setDescription('Multiple Inverter Low Input Voltage\nValue:\nAlarm report from MILV1\n')
ne843InvTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43), )
if mibBuilder.loadTexts: ne843InvTable.setStatus('current')
if mibBuilder.loadTexts: ne843InvTable.setDescription('Table of all Inverter data')
ne843InvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1), ).setIndexNames((0, "NE843-MIB", "ne843InvEntryIndex"))
if mibBuilder.loadTexts: ne843InvEntry.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntry.setDescription('Entry of information for one Inverter')
ne843InvEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIndex.setDescription('Table Index')
ne843InvEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIde.setDescription('Identifier')
ne843InvEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843InvEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryDes.setDescription('Description')
ne843InvEntryTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843InvEntryTyp.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryTyp.setDescription('Type')
ne843InvEntrySn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntrySn.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntrySn.setDescription('Serial Number')
ne843InvEntryAdc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 6), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryAdc.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryAdc.setDescription('DC Current (Amps)')
ne843InvEntryVdc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryVdc.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryVdc.setDescription('DC Voltage')
ne843InvEntryVac = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 8), Integer32()).setUnits('Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryVac.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryVac.setDescription('AC Voltage (Volts)')
ne843InvEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843InvEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryStt.setDescription('State\nValues:\nON,\nOFF,\nSTANDBY,\nVACANT\n')
ne843InvEntryCap = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 10), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryCap.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryCap.setDescription('Capacity (Amps)')
ne843InvEntryCva = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryCva.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryCva.setDescription('Capacity in VA')
ne843InvEntryIpk = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIpk.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIpk.setDescription('Peak Current')
ne843InvEntryIrm = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIrm.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIrm.setDescription('RMS Current')
ne843InvEntryFrq = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryFrq.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryFrq.setDescription('Output Frequency')
ne843InvEntryCf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryCf.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryCf.setDescription('Crest Factor')
ne843InvEntryPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryPwr.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryPwr.setDescription('Output Power')
ne843InvEntryVnom = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryVnom.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryVnom.setDescription('Nominal Output Voltage')
ne843InvEntryNcl = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setUnits('for LVD').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843InvEntryNcl.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryNcl.setDescription('Non-Critical Load (for LVD)\nValues:\ndisable(0),\nenable(1)\n')
ne843InvEntryIlvi = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIlvi.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIlvi.setDescription('Low Voltage Input')
ne843InvEntryIta = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIta.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIta.setDescription('Temperature Alarm')
ne843InvEntryIf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIf.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIf.setDescription('Inverter Fail')
ne843InvEntryIlv = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIlv.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIlv.setDescription('Low Output Voltage')
ne843InvEntryIfa = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIfa.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIfa.setDescription('Inverter Frequency Lock Fail')
ne843InvEntryDid = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryDid.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryDid.setDescription('ID Conflict')
ne843InvEntryIcmf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIcmf.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIcmf.setDescription('Communication Failure')
ne843InvEntryIcf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIcf.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIcf.setDescription('Hi Crest Factor Status')
ne843InvEntryIda = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIda.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIda.setDescription('Distribution Alarm Status')
ne843InvEntryIhv = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIhv.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIhv.setDescription('High Output Status')
ne843InvEntryIhvi = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIhvi.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIhvi.setDescription('High Input Status')
ne843InvEntryIipk = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIipk.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIipk.setDescription('High IPeak Status')
ne843InvEntryIirm = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIirm.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIirm.setDescription('High IRMS Status')
ne843InvEntryIof = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIof.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIof.setDescription('Output Fuse Status')
ne843InvEntryIlvi1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIlvi1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIlvi1.setDescription('Low Voltage Input\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIta1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIta1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIta1.setDescription('Temperature Alarm\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIf1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIf1.setDescription('Inverter Fail\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIlv1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIlv1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIlv1.setDescription('Low Output Voltage\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIfa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIfa1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIfa1.setDescription('Inverter Frequency Lock Fail\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryDid1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryDid1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryDid1.setDescription('ID Conflict\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIcmf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIcmf1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIcmf1.setDescription('Communication Failure\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIcf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIcf1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIcf1.setDescription('Hi Crest Factor Status\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIda1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIda1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIda1.setDescription('Distribution Alarm Status\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIhv1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIhv1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIhv1.setDescription('High Output Status\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIhvi1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIhvi1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIhvi1.setDescription('High Input Status\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIipk1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIipk1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIipk1.setDescription('High IPeak Status\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIirm1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIirm1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIirm1.setDescription('High IRMS Status\nValues:\ninactive(0),\nactive(1)\n')
ne843InvEntryIof1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 43, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843InvEntryIof1.setStatus('current')
if mibBuilder.loadTexts: ne843InvEntryIof1.setDescription('Output Fuse Status\nValues:\ninactive(0),\nactive(1)\n')
ne843Rpt1 = MibIdentifier((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44))
ne843Rpt1Ide = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843Rpt1Ide.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1Ide.setDescription('Identifier')
ne843Rpt1Des = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1Des.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1Des.setDescription('Description')
ne843Rpt1Ena = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1Ena.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1Ena.setDescription('Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843Rpt1Int = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1Int.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1Int.setDescription('Interval (minutes)')
ne843Rpt1D001 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D001.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D001.setDescription('Parameter 1')
ne843Rpt1D002 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D002.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D002.setDescription('Parameter 2')
ne843Rpt1D003 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D003.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D003.setDescription('Parameter 3')
ne843Rpt1D004 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D004.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D004.setDescription('Parameter 4')
ne843Rpt1D005 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D005.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D005.setDescription('Parameter 5')
ne843Rpt1D006 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D006.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D006.setDescription('Parameter 6')
ne843Rpt1D007 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D007.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D007.setDescription('Parameter 7')
ne843Rpt1D008 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D008.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D008.setDescription('Parameter 8')
ne843Rpt1D009 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D009.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D009.setDescription('Parameter 9')
ne843Rpt1D010 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D010.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D010.setDescription('Parameter 10')
ne843Rpt1D011 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D011.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D011.setDescription('Parameter 11')
ne843Rpt1D012 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D012.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D012.setDescription('Parameter 12')
ne843Rpt1D013 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D013.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D013.setDescription('Parameter 13')
ne843Rpt1D014 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D014.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D014.setDescription('Parameter 14')
ne843Rpt1D015 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D015.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D015.setDescription('Parameter 15')
ne843Rpt1D016 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D016.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D016.setDescription('Parameter 16')
ne843Rpt1D017 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D017.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D017.setDescription('Parameter 17')
ne843Rpt1D018 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D018.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D018.setDescription('Parameter 18')
ne843Rpt1D019 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D019.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D019.setDescription('Parameter 19')
ne843Rpt1D020 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D020.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D020.setDescription('Parameter 20')
ne843Rpt1D021 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D021.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D021.setDescription('Parameter 21')
ne843Rpt1D022 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D022.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D022.setDescription('Parameter 22')
ne843Rpt1D023 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D023.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D023.setDescription('Parameter 23')
ne843Rpt1D024 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D024.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D024.setDescription('Parameter 24')
ne843Rpt1D025 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D025.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D025.setDescription('Parameter 25')
ne843Rpt1D026 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D026.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D026.setDescription('Parameter 26')
ne843Rpt1D027 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D027.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D027.setDescription('Parameter 27')
ne843Rpt1D028 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D028.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D028.setDescription('Parameter 28')
ne843Rpt1D029 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 33), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D029.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D029.setDescription('Parameter 29')
ne843Rpt1D030 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D030.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D030.setDescription('Parameter 30')
ne843Rpt1D031 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 35), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D031.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D031.setDescription('Parameter 31')
ne843Rpt1D032 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D032.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D032.setDescription('Parameter 32')
ne843Rpt1D033 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 37), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D033.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D033.setDescription('Parameter 33')
ne843Rpt1D034 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 38), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D034.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D034.setDescription('Parameter 34')
ne843Rpt1D035 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 39), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D035.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D035.setDescription('Parameter 35')
ne843Rpt1D036 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D036.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D036.setDescription('Parameter 36')
ne843Rpt1D037 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 41), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D037.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D037.setDescription('Parameter 37')
ne843Rpt1D038 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 42), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D038.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D038.setDescription('Parameter 38')
ne843Rpt1D039 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 43), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D039.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D039.setDescription('Parameter 39')
ne843Rpt1D040 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D040.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D040.setDescription('Parameter 40')
ne843Rpt1D041 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 45), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D041.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D041.setDescription('Parameter 41')
ne843Rpt1D042 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 46), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D042.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D042.setDescription('Parameter 42')
ne843Rpt1D043 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D043.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D043.setDescription('Parameter 43')
ne843Rpt1D044 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D044.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D044.setDescription('Parameter 44')
ne843Rpt1D045 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D045.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D045.setDescription('Parameter 45')
ne843Rpt1D046 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D046.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D046.setDescription('Parameter 46')
ne843Rpt1D047 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D047.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D047.setDescription('Parameter 47')
ne843Rpt1D048 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D048.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D048.setDescription('Parameter 48')
ne843Rpt1D049 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 53), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D049.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D049.setDescription('Parameter 49')
ne843Rpt1D050 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 54), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D050.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D050.setDescription('Parameter 40')
ne843Rpt1D051 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 55), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D051.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D051.setDescription('Parameter 51')
ne843Rpt1D052 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 56), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D052.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D052.setDescription('Parameter 52')
ne843Rpt1D053 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 57), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D053.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D053.setDescription('Parameter 53')
ne843Rpt1D054 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D054.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D054.setDescription('Parameter 54')
ne843Rpt1D055 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 59), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D055.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D055.setDescription('Parameter 55')
ne843Rpt1D056 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 60), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D056.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D056.setDescription('Parameter 56')
ne843Rpt1D057 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 61), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D057.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D057.setDescription('Parameter 57')
ne843Rpt1D058 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 62), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D058.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D058.setDescription('Parameter 58')
ne843Rpt1D059 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 63), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D059.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D059.setDescription('Parameter 59')
ne843Rpt1D060 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 64), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D060.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D060.setDescription('Parameter 60')
ne843Rpt1D061 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 65), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D061.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D061.setDescription('Parameter 61')
ne843Rpt1D062 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 66), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D062.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D062.setDescription('Parameter 62')
ne843Rpt1D063 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 67), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D063.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D063.setDescription('Parameter 63')
ne843Rpt1D064 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 68), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D064.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D064.setDescription('Parameter 64')
ne843Rpt1D065 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 69), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D065.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D065.setDescription('Parameter 65')
ne843Rpt1D066 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 70), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D066.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D066.setDescription('Parameter 66')
ne843Rpt1D067 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 71), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D067.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D067.setDescription('Parameter 67')
ne843Rpt1D068 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 72), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D068.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D068.setDescription('Parameter 68')
ne843Rpt1D069 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 73), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D069.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D069.setDescription('Parameter 69')
ne843Rpt1D070 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 74), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D070.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D070.setDescription('Parameter 70')
ne843Rpt1D071 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 75), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D071.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D071.setDescription('Parameter 71')
ne843Rpt1D072 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 76), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D072.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D072.setDescription('Parameter 72')
ne843Rpt1D073 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 77), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D073.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D073.setDescription('Parameter 73')
ne843Rpt1D074 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 78), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D074.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D074.setDescription('Parameter 74')
ne843Rpt1D075 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 79), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D075.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D075.setDescription('Parameter 75')
ne843Rpt1D076 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 80), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D076.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D076.setDescription('Parameter 76')
ne843Rpt1D077 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 81), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D077.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D077.setDescription('Parameter 77')
ne843Rpt1D078 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 82), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D078.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D078.setDescription('Parameter 78')
ne843Rpt1D079 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 83), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D079.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D079.setDescription('Parameter 79')
ne843Rpt1D080 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 84), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D080.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D080.setDescription('Parameter 80')
ne843Rpt1D081 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 85), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D081.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D081.setDescription('Parameter 81')
ne843Rpt1D082 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 86), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D082.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D082.setDescription('Parameter 82')
ne843Rpt1D083 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 87), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D083.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D083.setDescription('Parameter 83')
ne843Rpt1D084 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 88), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D084.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D084.setDescription('Parameter 84')
ne843Rpt1D085 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 89), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D085.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D085.setDescription('Parameter 85')
ne843Rpt1D086 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 90), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D086.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D086.setDescription('Parameter 86')
ne843Rpt1D087 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 91), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D087.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D087.setDescription('Parameter 87')
ne843Rpt1D088 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 92), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D088.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D088.setDescription('Parameter 88')
ne843Rpt1D089 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 93), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D089.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D089.setDescription('Parameter 89')
ne843Rpt1D090 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 94), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D090.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D090.setDescription('Parameter 90')
ne843Rpt1D091 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 95), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D091.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D091.setDescription('Parameter 91')
ne843Rpt1D092 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 96), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D092.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D092.setDescription('Parameter 92')
ne843Rpt1D093 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 97), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D093.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D093.setDescription('Parameter 93')
ne843Rpt1D094 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 98), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D094.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D094.setDescription('Parameter 94')
ne843Rpt1D095 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D095.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D095.setDescription('Parameter 95')
ne843Rpt1D096 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D096.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D096.setDescription('Parameter 96')
ne843Rpt1D097 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 101), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D097.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D097.setDescription('Parameter 97')
ne843Rpt1D098 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 102), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D098.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D098.setDescription('Parameter 98')
ne843Rpt1D099 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 103), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D099.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D099.setDescription('Parameter 99')
ne843Rpt1D100 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 104), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D100.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D100.setDescription('Parameter 100')
ne843Rpt1D101 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 105), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D101.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D101.setDescription('Parameter 101')
ne843Rpt1D102 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 106), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D102.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D102.setDescription('Parameter 102')
ne843Rpt1D103 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 107), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D103.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D103.setDescription('Parameter 103')
ne843Rpt1D104 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 108), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D104.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D104.setDescription('Parameter 104')
ne843Rpt1D105 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 109), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D105.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D105.setDescription('Parameter 105')
ne843Rpt1D106 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 110), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D106.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D106.setDescription('Parameter 106')
ne843Rpt1D107 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 111), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D107.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D107.setDescription('Parameter 107')
ne843Rpt1D108 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 112), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D108.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D108.setDescription('Parameter 108')
ne843Rpt1D109 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 113), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D109.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D109.setDescription('Parameter 109')
ne843Rpt1D110 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 114), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D110.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D110.setDescription('Parameter 110')
ne843Rpt1D111 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 115), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D111.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D111.setDescription('Parameter 111')
ne843Rpt1D112 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 116), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D112.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D112.setDescription('Parameter 112')
ne843Rpt1D113 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 117), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D113.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D113.setDescription('Parameter 113')
ne843Rpt1D114 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 118), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D114.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D114.setDescription('Parameter 114')
ne843Rpt1D115 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 119), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D115.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D115.setDescription('Parameter 115')
ne843Rpt1D116 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 120), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D116.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D116.setDescription('Parameter 116')
ne843Rpt1D117 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 121), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D117.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D117.setDescription('Parameter 117')
ne843Rpt1D118 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 122), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D118.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D118.setDescription('Parameter 118')
ne843Rpt1D119 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 123), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D119.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D119.setDescription('Parameter 119')
ne843Rpt1D120 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 124), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D120.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D120.setDescription('Parameter 120')
ne843Rpt1D121 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 125), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D121.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D121.setDescription('Parameter 121')
ne843Rpt1D122 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 126), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D122.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D122.setDescription('Parameter 122')
ne843Rpt1D123 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 127), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D123.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D123.setDescription('Parameter 123')
ne843Rpt1D124 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 128), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D124.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D124.setDescription('Parameter 124')
ne843Rpt1D125 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 129), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D125.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D125.setDescription('Parameter 125')
ne843Rpt1D126 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 130), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D126.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D126.setDescription('Parameter 126')
ne843Rpt1D127 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 131), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D127.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D127.setDescription('Parameter 127')
ne843Rpt1D128 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 132), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D128.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D128.setDescription('Parameter 128')
ne843Rpt1D129 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 133), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D129.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D129.setDescription('Parameter 129')
ne843Rpt1D130 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 134), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D130.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D130.setDescription('Parameter 130')
ne843Rpt1D131 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 135), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D131.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D131.setDescription('Parameter 131')
ne843Rpt1D132 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 136), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D132.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D132.setDescription('Parameter 132')
ne843Rpt1D133 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 137), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D133.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D133.setDescription('Parameter 133')
ne843Rpt1D134 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 138), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D134.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D134.setDescription('Parameter 134')
ne843Rpt1D135 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 139), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D135.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D135.setDescription('Parameter 135')
ne843Rpt1D136 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 140), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D136.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D136.setDescription('Parameter 136')
ne843Rpt1D137 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 141), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D137.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D137.setDescription('Parameter 137')
ne843Rpt1D138 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 142), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D138.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D138.setDescription('Parameter 138')
ne843Rpt1D139 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 143), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D139.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D139.setDescription('Parameter 139')
ne843Rpt1D140 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 144), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D140.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D140.setDescription('Parameter 140')
ne843Rpt1D141 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 145), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D141.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D141.setDescription('Parameter 141')
ne843Rpt1D142 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 146), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D142.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D142.setDescription('Parameter 142')
ne843Rpt1D143 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 147), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D143.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D143.setDescription('Parameter 143')
ne843Rpt1D144 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 148), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D144.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D144.setDescription('Parameter 144')
ne843Rpt1D145 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 149), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D145.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D145.setDescription('Parameter 145')
ne843Rpt1D146 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 150), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D146.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D146.setDescription('Parameter 146')
ne843Rpt1D147 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 151), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D147.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D147.setDescription('Parameter 147')
ne843Rpt1D148 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 152), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D148.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D148.setDescription('Parameter 148')
ne843Rpt1D149 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 153), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D149.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D149.setDescription('Parameter 149')
ne843Rpt1D150 = MibScalar((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 44, 154), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843Rpt1D150.setStatus('current')
if mibBuilder.loadTexts: ne843Rpt1D150.setDescription('Parameter 150')
ne843PicTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45), )
if mibBuilder.loadTexts: ne843PicTable.setStatus('current')
if mibBuilder.loadTexts: ne843PicTable.setDescription('Table of all Panel Interface Card data')
ne843PicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1), ).setIndexNames((0, "NE843-MIB", "ne843PicEntryIndex"))
if mibBuilder.loadTexts: ne843PicEntry.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntry.setDescription('Entry of information for one Panel Interface Card')
ne843PicEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryIndex.setDescription('Table Index')
ne843PicEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryIde.setDescription('Identifier')
ne843PicEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryDes.setDescription('Description')
ne843PicEntrySn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntrySn.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntrySn.setDescription('Serial Number')
ne843PicEntryCc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntryCc.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryCc.setDescription('Comcode')
ne843PicEntrySer = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntrySer.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntrySer.setDescription('Series')
ne843PicEntryClei = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntryClei.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryClei.setDescription('Clei Code')
ne843PicEntryCustpn2 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntryCustpn2.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryCustpn2.setDescription('Customer PIC Part Number')
ne843PicEntryAsstag2 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntryAsstag2.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryAsstag2.setDescription('PIC Asset Tag')
ne843PicEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryStt.setDescription('State\nValues:\nPRESENT,\nMISSING,\nVACANT\n')
ne843PicEntryTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryTyp.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryTyp.setDescription('PIC Type\nValues:\nLOAD,\nBATT\n')
ne843PicEntryNst = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryNst.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryNst.setDescription('Number of Shunts')
ne843PicEntryNvt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryNvt.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryNvt.setDescription('Number of Voltages')
ne843PicEntryVera = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntryVera.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryVera.setDescription('Application Software Version')
ne843PicEntryPid = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntryPid.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryPid.setDescription('ID Conflict')
ne843PicEntryPcf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntryPcf.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryPcf.setDescription('Communication Failure')
ne843PicEntryNumslot = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PicEntryNumslot.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryNumslot.setDescription('Number of Slots')
ne843PicEntryCbf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryCbf.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryCbf.setDescription('CB or Fuse\nValues:\nCB,\nFUSE\n')
ne843PicEntryFajae = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryFajae.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryFajae.setDescription('External Fuse Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843PicEntryFajrly = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryFajrly.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryFajrly.setDescription('External Fuse Relay\nValues:\nNone,\nEnabled\n')
ne843PicEntryOsae = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryOsae.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryOsae.setDescription('Open String Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843PicEntryOsarly = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryOsarly.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryOsarly.setDescription('Open String Relay\nValues:\nNone,\nEnabled\n')
ne843PicEntryTmpe = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryTmpe.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryTmpe.setDescription('Temperature Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843PicEntryTmprly = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryTmprly.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryTmprly.setDescription('Temperature Relay\nValues:\nNone,\nEnabled\n')
ne843PicEntryVlvs = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryVlvs.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryVlvs.setDescription('Power Loss Severity\nValues:\nCRIT,\nMAJ,\nMIN,\nWRN,\nRO\n')
ne843PicEntryVlvlat = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryVlvlat.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryVlvlat.setDescription('Power Loss Latched')
ne843PicEntryVlvae = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryVlvae.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryVlvae.setDescription('VA Power Loss Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843PicEntryVlvath = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryVlvath.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryVlvath.setDescription('VB Power Loss Threshold')
ne843PicEntryVlvbe = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryVlvbe.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryVlvbe.setDescription('VB Power Loss Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843PicEntryVlvbth = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryVlvbth.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryVlvbth.setDescription('VB Power Loss Threshold')
ne843PicEntryVlvrly = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryVlvrly.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryVlvrly.setDescription('Power Loss Relay\nValues:\nNone,\nEnabled\n')
ne843PicEntryOvls = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryOvls.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryOvls.setDescription('Overload Severity\nValues:\nCRIT,\nMAJ,\nMIN,\nWRN,\nRO\n')
ne843PicEntryOlvlat = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 33), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryOlvlat.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryOlvlat.setDescription('Overload Latched')
ne843PicEntryOvlae = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryOvlae.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryOvlae.setDescription('IA Overload Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843PicEntryOvlath = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryOvlath.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryOvlath.setDescription('IA Overload Threshold')
ne843PicEntryOvlbe = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryOvlbe.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryOvlbe.setDescription('IB Overload Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843PicEntryOvlbth = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 37), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryOvlbth.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryOvlbth.setDescription('IB Overload Threshold')
ne843PicEntryOvlrly = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 38), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryOvlrly.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryOvlrly.setDescription('Overload Relay\nValues:\nNone,\nEnabled\n')
ne843PicEntryEpoe = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryEpoe.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryEpoe.setDescription('Emergency Power Off Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843PicEntryEporly = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryEporly.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryEporly.setDescription('Emergency Power Off Relay\nValues:\nNone,\nEnabled\n')
ne843PicEntryPcauxe = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryPcauxe.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryPcauxe.setDescription('PIC Auxiliary Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843PicEntryPcauxr = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 42), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryPcauxr.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryPcauxr.setDescription('PIC Auxiliary Relay\nValues:\nNone,\nEnabled\n')
ne843PicEntrySlote = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntrySlote.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntrySlote.setDescription('Slot Enabled\nValues:\ndisable(0),\nenable(1)\n')
ne843PicEntrySlotrly = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntrySlotrly.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntrySlotrly.setDescription('Slot Relay\nValues:\nNone,\nEnabled\n')
ne843PicEntryDpmode = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 45), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryDpmode.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryDpmode.setDescription('Display Mode\nValues:\nSCAN,\nSTATIC\n')
ne843PicEntryPnldes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 46), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryPnldes.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryPnldes.setDescription('Panel Description')
ne843PicEntryMdl = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryMdl.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryMdl.setDescription('Panel Model')
ne843PicEntryPnlsn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 48), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryPnlsn.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryPnlsn.setDescription('Panel Serial Number')
ne843PicEntryPnlcc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryPnlcc.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryPnlcc.setDescription('Panel Comcode')
ne843PicEntryPnlser = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryPnlser.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryPnlser.setDescription('Panel Series')
ne843PicEntryPnlclei = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryPnlclei.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryPnlclei.setDescription('Panel Clei Code')
ne843PicEntryCustpn1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryCustpn1.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryCustpn1.setDescription('Panel Customer Part Number')
ne843PicEntryAsstag1 = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 53), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryAsstag1.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryAsstag1.setDescription('Panel Customer Asset Tag')
ne843PicEntryRtng = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 54), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryRtng.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryRtng.setDescription('Panel Rating')
ne843PicEntryPnlsize = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 45, 1, 55), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PicEntryPnlsize.setStatus('current')
if mibBuilder.loadTexts: ne843PicEntryPnlsize.setDescription('Panel Size')
ne843PcmTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 46), )
if mibBuilder.loadTexts: ne843PcmTable.setStatus('current')
if mibBuilder.loadTexts: ne843PcmTable.setDescription('Table of all PIC Current Monitor data')
ne843PcmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 46, 1), ).setIndexNames((0, "NE843-MIB", "ne843PcmEntryIndex"))
if mibBuilder.loadTexts: ne843PcmEntry.setStatus('current')
if mibBuilder.loadTexts: ne843PcmEntry.setDescription('Entry of information for one PIC Current Monitor')
ne843PcmEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 46, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PcmEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843PcmEntryIndex.setDescription('Table Index')
ne843PcmEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 46, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PcmEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843PcmEntryIde.setDescription('Identifier')
ne843PcmEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 46, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcmEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843PcmEntryDes.setDescription('Description')
ne843PcmEntryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 46, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PcmEntryVal.setStatus('current')
if mibBuilder.loadTexts: ne843PcmEntryVal.setDescription('Value')
ne843PcmEntrySht = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 46, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcmEntrySht.setStatus('current')
if mibBuilder.loadTexts: ne843PcmEntrySht.setDescription('Shunt Type\nValues:\nLOAD,\nBATTERY,\nNONE\n')
ne843PcmEntrySha = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 46, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcmEntrySha.setStatus('current')
if mibBuilder.loadTexts: ne843PcmEntrySha.setDescription('Shunt Current')
ne843PcmEntryShv = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 46, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 150))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcmEntryShv.setStatus('current')
if mibBuilder.loadTexts: ne843PcmEntryShv.setDescription('Shunt Voltage')
ne843PvmTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 47), )
if mibBuilder.loadTexts: ne843PvmTable.setStatus('current')
if mibBuilder.loadTexts: ne843PvmTable.setDescription('Table of all PIC Voltage Monitor data')
ne843PvmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 47, 1), ).setIndexNames((0, "NE843-MIB", "ne843PvmEntryIndex"))
if mibBuilder.loadTexts: ne843PvmEntry.setStatus('current')
if mibBuilder.loadTexts: ne843PvmEntry.setDescription('Entry of information for one PIC Voltage Monitor')
ne843PvmEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 47, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PvmEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843PvmEntryIndex.setDescription('Table Index')
ne843PvmEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 47, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PvmEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843PvmEntryIde.setDescription('Identifier')
ne843PvmEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 47, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PvmEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843PvmEntryDes.setDescription('Description')
ne843PvmEntryVal = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 47, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PvmEntryVal.setStatus('current')
if mibBuilder.loadTexts: ne843PvmEntryVal.setDescription('Value')
ne843PtmTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48), )
if mibBuilder.loadTexts: ne843PtmTable.setStatus('current')
if mibBuilder.loadTexts: ne843PtmTable.setDescription('Table of all PIC Temperature Monitor data')
ne843PtmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1), ).setIndexNames((0, "NE843-MIB", "ne843PtmEntryIndex"))
if mibBuilder.loadTexts: ne843PtmEntry.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntry.setDescription('Entry of information for one PIC Temperature Monitor')
ne843PtmEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryIndex.setDescription('Table Index')
ne843PtmEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryIde.setDescription('Identifier')
ne843PtmEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PtmEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryDes.setDescription('Description')
ne843PtmEntryBamt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryBamt.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryBamt.setDescription('Board Ambient Temperature')
ne843PtmEntryNat = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryNat.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryNat.setDescription('Number of Ambient Temperature Probes')
ne843PtmEntryHamt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryHamt.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryHamt.setDescription('Hi Ambient Temperature')
ne843PtmEntryLamt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryLamt.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryLamt.setDescription('Low Ambient Temperature')
ne843PtmEntryNtm = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryNtm.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryNtm.setDescription('Number of Battery Temperature Probes')
ne843PtmEntryHbt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryHbt.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryHbt.setDescription('Hi Battery Temperature')
ne843PtmEntryLbt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryLbt.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryLbt.setDescription('Low Battery Temperature')
ne843PtmEntryNbut = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryNbut.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryNbut.setDescription('Number of Bus Temperature Probes')
ne843PtmEntryHbut = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryHbut.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryHbut.setDescription('Hi Bus Temperature')
ne843PtmEntryLbut = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 48, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PtmEntryLbut.setStatus('current')
if mibBuilder.loadTexts: ne843PtmEntryLbut.setDescription('Low Bust Temperature')
ne843PcsTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49), )
if mibBuilder.loadTexts: ne843PcsTable.setStatus('current')
if mibBuilder.loadTexts: ne843PcsTable.setDescription('Table of all PIC Slot data')
ne843PcsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1), ).setIndexNames((0, "NE843-MIB", "ne843PcsEntryIndex"))
if mibBuilder.loadTexts: ne843PcsEntry.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntry.setDescription('Entry of information for one PIC Slot')
ne843PcsEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PcsEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryIndex.setDescription('Table Index')
ne843PcsEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PcsEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryIde.setDescription('Identifier')
ne843PcsEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcsEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryDes.setDescription('Description')
ne843PcsEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843PcsEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryStt.setDescription('Status')
ne843PcsEntryTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcsEntryTyp.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryTyp.setDescription('Type\nValues:\nLoad,\nBatt,\npicType\n')
ne843PcsEntryPole = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcsEntryPole.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryPole.setDescription('Number of Poles')
ne843PcsEntryPolp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcsEntryPolp.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryPolp.setDescription('Slot Pole Position')
ne843PcsEntryPopn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcsEntryPopn.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryPopn.setDescription('Slot Pole Open/Closed\nValues:\nOpen,\nClosed\n')
ne843PcsEntryTrp = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcsEntryTrp.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryTrp.setDescription('Slot Tripped\nValues:\noff(0),\non(1)\n')
ne843PcsEntryBad = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcsEntryBad.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryBad.setDescription('Slot Bad\nValues:\noff(0),\non(1)\n')
ne843PcsEntryCbf = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcsEntryCbf.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryCbf.setDescription('Slot CB or Fuse\nValues:\nCB,\nFuse\n')
ne843PcsEntrySlv = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcsEntrySlv.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntrySlv.setDescription('Slot Slave\nValues:\noff(0),\non(1)\n')
ne843PcsEntryRtng = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 49, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843PcsEntryRtng.setStatus('current')
if mibBuilder.loadTexts: ne843PcsEntryRtng.setDescription('Slot Rtng')
ne843DbyTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50), )
if mibBuilder.loadTexts: ne843DbyTable.setStatus('current')
if mibBuilder.loadTexts: ne843DbyTable.setDescription('Table of all Distribution Bay data')
ne843DbyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1), ).setIndexNames((0, "NE843-MIB", "ne843DbyEntryIndex"))
if mibBuilder.loadTexts: ne843DbyEntry.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntry.setDescription('Entry of information for one Distribution Bay')
ne843DbyEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DbyEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryIndex.setDescription('Table Index')
ne843DbyEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DbyEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryIde.setDescription('Identifier')
ne843DbyEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DbyEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryDes.setDescription('Description')
ne843DbyEntrySn = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DbyEntrySn.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntrySn.setDescription('Serial Number')
ne843DbyEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DbyEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryStt.setDescription('State')
ne843DbyEntrySha = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4000))).setUnits('Amps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DbyEntrySha.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntrySha.setDescription('Shunt Rating (Amps)')
ne843DbyEntryNpl = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DbyEntryNpl.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryNpl.setDescription('Number of Panels')
ne843DbyEntryPmt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DbyEntryPmt.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryPmt.setDescription('Measurement Type')
ne843DbyEntryIds = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DbyEntryIds.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryIds.setDescription('Identification Style')
ne843DbyEntryBze = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DbyEntryBze.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryBze.setDescription('Buzzer Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843DbyEntryOle = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DbyEntryOle.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryOle.setDescription('Overload Latch Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843DbyEntryOri = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DbyEntryOri.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryOri.setDescription('Panel Orientation')
ne843DbyEntryCmb = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DbyEntryCmb.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryCmb.setDescription('Combine Panels\nValues:\ndisable(0),\nenable(1)\n')
ne843DbyEntrySmw = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DbyEntrySmw.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntrySmw.setDescription('Shunt Miswired')
ne843DbyEntryCca = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 50, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DbyEntryCca.setStatus('current')
if mibBuilder.loadTexts: ne843DbyEntryCca.setDescription('Circuit Assignment')
ne843DpnTable = MibTable((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51), )
if mibBuilder.loadTexts: ne843DpnTable.setStatus('current')
if mibBuilder.loadTexts: ne843DpnTable.setDescription('Table of all Distribution Panel data')
ne843DpnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1), ).setIndexNames((0, "NE843-MIB", "ne843DpnEntryIndex"))
if mibBuilder.loadTexts: ne843DpnEntry.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntry.setDescription('Entry of information for one Distribution Panel')
ne843DpnEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DpnEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryIndex.setDescription('Table Index')
ne843DpnEntryIde = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DpnEntryIde.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryIde.setDescription('Identifier')
ne843DpnEntryDes = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DpnEntryDes.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryDes.setDescription('Description')
ne843DpnEntryAdc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 4), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DpnEntryAdc.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryAdc.setDescription('Current (Amps)')
ne843DpnEntryVdc = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 5), Integer32()).setUnits('mV').setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DpnEntryVdc.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryVdc.setDescription('Voltage (mV)')
ne843DpnEntryStt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DpnEntryStt.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryStt.setDescription('State')
ne843DpnEntryPid = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DpnEntryPid.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryPid.setDescription('Panel ID')
ne843DpnEntryEna = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DpnEntryEna.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryEna.setDescription('Enable\nValues:\ndisable(0),\nenable(1)\n')
ne843DpnEntryOld = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DpnEntryOld.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryOld.setDescription('Overload Delay (Seconds)')
ne843DpnEntryOlt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4000))).setUnits('amps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DpnEntryOlt.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryOlt.setDescription('Overload Threshold (amps)')
ne843DpnEntryOlr = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DpnEntryOlr.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryOlr.setDescription('Redundant Overload\nValues:\ndisable(0),\nenable(1)\n')
ne843DpnEntryPlt = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(40000, 60000))).setUnits('mV').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DpnEntryPlt.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryPlt.setDescription('Power Loss Threshold (mV)')
ne843DpnEntryCct = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ne843DpnEntryCct.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryCct.setDescription('Input Circuit')
ne843DpnEntryVlv = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DpnEntryVlv.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryVlv.setDescription('Power Loss')
ne843DpnEntryOvl = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DpnEntryOvl.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryOvl.setDescription('Overload')
ne843DpnEntryFaja = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DpnEntryFaja.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryFaja.setDescription('Distribution Fuse A')
ne843DpnEntryFajb = MibTableColumn((1, 3, 6, 1, 4, 1, 10520, 2, 1, 3, 51, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ne843DpnEntryFajb.setStatus('current')
if mibBuilder.loadTexts: ne843DpnEntryFajb.setDescription('Distribution Fuse B')
mibBuilder.exportSymbols("NE843-MIB", ne843Net1Sub=ne843Net1Sub, ne843InvEntryPwr=ne843InvEntryPwr, ne843TrapGn1Gnr=ne843TrapGn1Gnr, ne843TrsEntry=ne843TrsEntry, ne843Ps1Usr=ne843Ps1Usr, ne843Net1Sma=ne843Net1Sma, ne843Gm1Bsd=ne843Gm1Bsd, ne843Ps1Nre=ne843Ps1Nre, ne843TrapCp1Mfa=ne843TrapCp1Mfa, ne843Eco1Ntrd=ne843Eco1Ntrd, ne843RchEntrySec=ne843RchEntrySec, ne843Gn1Pht=ne843Gn1Pht, ne843RetireCn2Cnf=ne843RetireCn2Cnf, ne843TrapPs1Ax9=ne843TrapPs1Ax9, ne843TrapDc1Emd=ne843TrapDc1Emd, ne843Mp1Dbt=ne843Mp1Dbt, ne843TrapPs1Ax7=ne843TrapPs1Ax7, ne843TrapDc1Faja=ne843TrapDc1Faja, ne843Dc1Mcm=ne843Dc1Mcm, ne843RetireDc1Rfa=ne843RetireDc1Rfa, ne843RchEntryRf=ne843RchEntryRf, ne843Ps1Sde=ne843Ps1Sde, ne843AlarmEntryThr=ne843AlarmEntryThr, ne843TrapDesc=ne843TrapDesc, ne843Rpt1D038=ne843Rpt1D038, ne843At1Ets=ne843At1Ets, ne843RecEntryVdc=ne843RecEntryVdc, ne843Dc1Isd=ne843Dc1Isd, ne843Acd1Prx=ne843Acd1Prx, ne843Dc1Macf=ne843Dc1Macf, ne843MsvEntry=ne843MsvEntry, ne843Tl1EntryDes=ne843Tl1EntryDes, ne843Rpt1D104=ne843Rpt1D104, ne843Acd1Ptx=ne843Acd1Ptx, ne843RecEntryCap=ne843RecEntryCap, ne843Net1Pl6=ne843Net1Pl6, ne843RecEntryIndex=ne843RecEntryIndex, ne843RetirePs1Ax10=ne843RetirePs1Ax10, ne843Rpt1D010=ne843Rpt1D010, ne843TrapPs1Ax4=ne843TrapPs1Ax4, ne843Lp1Bdr=ne843Lp1Bdr, ne843Gn1Aue=ne843Gn1Aue, ne843Br1Clt=ne843Br1Clt, ne843Rpt1D064=ne843Rpt1D064, ne843Po1Int=ne843Po1Int, ne843BatEntryDat=ne843BatEntryDat, ne843Sc1Ltt=ne843Sc1Ltt, ne843RchEntry=ne843RchEntry, ne843RetireBr1Isda=ne843RetireBr1Isda, ne843InvEntryIcf1=ne843InvEntryIcf1, ne843PicEntryNumslot=ne843PicEntryNumslot, ne843InvEntryIda=ne843InvEntryIda, ne843InvEntryStt=ne843InvEntryStt, ne843TrapDate=ne843TrapDate, ne843BatEntryBty=ne843BatEntryBty, ne843Rpt1D120=ne843Rpt1D120, ne843TrapGn1Gnf=ne843TrapGn1Gnf, ne843RetirePs1Pgi=ne843RetirePs1Pgi, ne843Dc1Emo=ne843Dc1Emo, ne843Dc1Poc=ne843Dc1Poc, ne843RetireDc1Rfn=ne843RetireDc1Rfn, release=release, ne843UdeEntryAcc=ne843UdeEntryAcc, ne843Dc1Bda=ne843Dc1Bda, ne843Ps1Ptt=ne843Ps1Ptt, ne843DpnEntryPid=ne843DpnEntryPid, ne843Cp1Vla=ne843Cp1Vla, ne843Ps1Cch=ne843Ps1Cch, ne843RetireDc1Zid=ne843RetireDc1Zid, ne843UdeEntryNoo=ne843UdeEntryNoo, ne843InvEntryCf=ne843InvEntryCf, ne843Ivp1Rth=ne843Ivp1Rth, ne843PicEntryVlvae=ne843PicEntryVlvae, ne843RetireGn1Gnm=ne843RetireGn1Gnm, ne843Br1Tin=ne843Br1Tin, ne843TrapPs1Ax5=ne843TrapPs1Ax5, ne843Rpt1D082=ne843Rpt1D082, ne843RecEntryVan=ne843RecEntryVan, ne843Br1Btv=ne843Br1Btv, ne843DcnEntryIde=ne843DcnEntryIde, ne843Gn1Tve=ne843Gn1Tve, ne843Rpt1D140=ne843Rpt1D140, ne843Net1Wip=ne843Net1Wip, ne843Acd1Sn=ne843Acd1Sn, ne843Rpt1D016=ne843Rpt1D016, ne843RecEntryClm=ne843RecEntryClm, ne843RetireIvp1Iipk=ne843RetireIvp1Iipk, ne843Ps1Ax12=ne843Ps1Ax12, ne843CntEntryDam=ne843CntEntryDam, ne843DpnEntryFajb=ne843DpnEntryFajb, ne843PicEntryVlvath=ne843PicEntryVlvath, ne843AlarmEntryDes=ne843AlarmEntryDes, ne843InvEntryIcmf=ne843InvEntryIcmf, ne843Rpt1D074=ne843Rpt1D074, ne843RecEntryLin=ne843RecEntryLin, ne843CntEntryRam=ne843CntEntryRam, ne843InpEntryIde=ne843InpEntryIde, ne843TrapPs1Hcl=ne843TrapPs1Hcl, ne843PcmTable=ne843PcmTable, ne843RetireCp1Cfa=ne843RetireCp1Cfa, ne843Cp1Cfn=ne843Cp1Cfn, ne843RetireIvp1Ilvi=ne843RetireIvp1Ilvi, ne843RecEntryMan1=ne843RecEntryMan1, ne843Net1Ide=ne843Net1Ide, ne843Ivp1Hce=ne843Ivp1Hce, ne843TrapDc1Vlva=ne843TrapDc1Vlva, ne843PcsEntryBad=ne843PcsEntryBad, ne843Rpt1D027=ne843Rpt1D027, ne843Rpt1D008=ne843Rpt1D008, ne843Cp1Rss=ne843Cp1Rss, ne843Br1Ath=ne843Br1Ath, ne843Rpt1D077=ne843Rpt1D077, ne843RetireDc1Mman=ne843RetireDc1Mman, ne843RchEntryVa=ne843RchEntryVa, ne843Gn1Gns=ne843Gn1Gns, ne843Ps1Lngl=ne843Ps1Lngl, ne843DcnEntryDes=ne843DcnEntryDes, ne843Gn1Trt=ne843Gn1Trt, ne843Ps1Fpc=ne843Ps1Fpc, ne843Dc1Scap=ne843Dc1Scap, ne843RetireDc1Btvh=ne843RetireDc1Btvh, ne843DcmEntrySn=ne843DcmEntrySn, ne843RetireAt1Atb=ne843RetireAt1Atb, ne843Gn1Stt=ne843Gn1Stt, ne843Dc1Osa=ne843Dc1Osa, ne843CopEntry=ne843CopEntry, ne843RetireIvp1Iirm=ne843RetireIvp1Iirm, ne843Mp1Ide=ne843Mp1Ide, ne843RetirePs1Ax11=ne843RetirePs1Ax11, ne843Rp1Rprl=ne843Rp1Rprl, ne843InpTable=ne843InpTable, ne843Ivp1=ne843Ivp1, ne843TrapPs1Exl=ne843TrapPs1Exl, ne843Rpt1D051=ne843Rpt1D051, ne843CopEntryPry=ne843CopEntryPry, ne843Dc1Aseq=ne843Dc1Aseq, ne843Rp1Frq=ne843Rp1Frq, ne843Acd1Ptv=ne843Acd1Ptv, ne843Gn1Tpe=ne843Gn1Tpe, ne843PicEntryOvlbe=ne843PicEntryOvlbe, ne843CopEntryDbt=ne843CopEntryDbt, ne843Dc1Smw=ne843Dc1Smw, ne843RetireDc1Amj=ne843RetireDc1Amj, ne843BatEntryDes=ne843BatEntryDes, ne843UdeEntrySev=ne843UdeEntrySev, ne843PicEntryOvlbth=ne843PicEntryOvlbth, ne843TrapPs1Crt=ne843TrapPs1Crt, ne843Ps1Des=ne843Ps1Des, ne843DcmEntryBrc=ne843DcmEntryBrc, ne843Rpt1D029=ne843Rpt1D029, ne843RecEntryLsf1=ne843RecEntryLsf1, ne843InvEntryIof1=ne843InvEntryIof1, ne843CntEntryDix=ne843CntEntryDix, ne843Dc1Sha=ne843Dc1Sha, ne843DrcEntryVal=ne843DrcEntryVal, ne843CntEntryDth=ne843CntEntryDth, ne843TrapCp1Cfa=ne843TrapCp1Cfa, ne843TrapBr1Btvl=ne843TrapBr1Btvl, ne843DbyEntrySmw=ne843DbyEntrySmw, ne843Br1Isda=ne843Br1Isda, ne843Po1Cl08=ne843Po1Cl08, ne843Gn1Ppe=ne843Gn1Ppe, ne843TrapDc1Rrtl=ne843TrapDc1Rrtl, ne843TrapCp1Did=ne843TrapCp1Did, ne843Bs1Amf=ne843Bs1Amf, ne843PcmEntryShv=ne843PcmEntryShv, ne843Ivp1Ihvi=ne843Ivp1Ihvi, ne843Ps1Lamt=ne843Ps1Lamt, ne843Net1Ip6=ne843Net1Ip6, ne843Rpt1D042=ne843Rpt1D042, ne843TrapPs1Pgi=ne843TrapPs1Pgi, ne843Ps1Ax1=ne843Ps1Ax1, ne843Br1Mdp=ne843Br1Mdp, ne843Rpt1D093=ne843Rpt1D093, ne843Rp1Ofe=ne843Rp1Ofe, ne843Rpt1D036=ne843Rpt1D036, ne843RetireDc1Bda=ne843RetireDc1Bda, ne843Cb1Ph3=ne843Cb1Ph3, ne843RecEntrySof=ne843RecEntrySof, ne843AlarmEntryAst=ne843AlarmEntryAst, ne843TrapDc1Mman=ne843TrapDc1Mman, ne843TrsTable=ne843TrsTable, ne843TrapDc1Vsf=ne843TrapDc1Vsf, ne843TrapDc1Lalt=ne843TrapDc1Lalt, ne843Mp1Nrg=ne843Mp1Nrg, ne843Dc1Pfs=ne843Dc1Pfs, ne843DpnEntryDes=ne843DpnEntryDes, ne843InpEntryIndex=ne843InpEntryIndex, ne843Rpt1D028=ne843Rpt1D028, ne843BtdEntryIndex=ne843BtdEntryIndex, ne843PicTable=ne843PicTable, ne843TrapDc1Pcaux=ne843TrapDc1Pcaux, ne843Ps1Amtl=ne843Ps1Amtl, ne843Dc1Trd=ne843Dc1Trd, ne843Net1Msrv=ne843Net1Msrv, ne843Rpt1D146=ne843Rpt1D146, ne843RecEntryVerp=ne843RecEntryVerp, ne843Rpt1D080=ne843Rpt1D080, ne843RchEntryPri=ne843RchEntryPri, teps=teps, ne843Po1Tim=ne843Po1Tim, ne843Rp1Cap=ne843Rp1Cap, ne843TrapDc1Vmf=ne843TrapDc1Vmf, ne843Gn1Clt=ne843Gn1Clt, ne843DbyEntryStt=ne843DbyEntryStt, ne843DccEntryCcf1=ne843DccEntryCcf1, ne843Dc1Cap=ne843Dc1Cap, ne843Rp1Rpxn=ne843Rp1Rpxn, ne843RecEntryVac2=ne843RecEntryVac2, ne843PcmEntryIde=ne843PcmEntryIde, ne843PicEntrySn=ne843PicEntrySn, ne843InpEntryTyp=ne843InpEntryTyp, ne843Dc1Cca=ne843Dc1Cca, ne843DrcEntry=ne843DrcEntry, ne843AlarmEntryDly=ne843AlarmEntryDly, ne843PcmEntryDes=ne843PcmEntryDes, ne843Rpt1D113=ne843Rpt1D113, ne843Rpt1D033=ne843Rpt1D033, ne843Acd1Brc=ne843Acd1Brc, ne843InvEntryIlv1=ne843InvEntryIlv1, ne843CntEntryIndex=ne843CntEntryIndex, ne843DbyEntrySha=ne843DbyEntrySha, ne843CntEntry=ne843CntEntry, ne843Rpt1D018=ne843Rpt1D018, ne843DrcEntryUni=ne843DrcEntryUni, ne843TrapDc1Amj=ne843TrapDc1Amj, ne843RecEntryHin1=ne843RecEntryHin1, ne843InvEntrySn=ne843InvEntrySn, ne843Br1Ntm=ne843Br1Ntm, ne843Gm1Lse=ne843Gm1Lse, ne843PtmEntryNbut=ne843PtmEntryNbut, ne843Rpt1=ne843Rpt1, ne843Bs1Cta=ne843Bs1Cta, ne843RetireDc1Emd=ne843RetireDc1Emd, ne843DbyEntryCmb=ne843DbyEntryCmb, ne843PicEntryIde=ne843PicEntryIde, ne843CoeEntry=ne843CoeEntry, ne843Ivp1Iipk=ne843Ivp1Iipk, ne843Dc1Adc=ne843Dc1Adc, ne843Ivp1Rlse=ne843Ivp1Rlse, ne843PicEntrySlotrly=ne843PicEntrySlotrly, ne843DpnEntry=ne843DpnEntry, ne843InvEntryVnom=ne843InvEntryVnom, ne843Aco1Des=ne843Aco1Des, ne843Aco1Jto=ne843Aco1Jto, ne843RetirePs1Amtl=ne843RetirePs1Amtl, ne843Ivp1Lst=ne843Ivp1Lst, ne843RetireBr1Btvh=ne843RetireBr1Btvh, ne843Mp1Tmo=ne843Mp1Tmo, ne843Rpt1D009=ne843Rpt1D009, ne843Ps1Usl=ne843Ps1Usl, ne843PicEntryOvlrly=ne843PicEntryOvlrly, ne843Tlm1Tmo=ne843Tlm1Tmo, ne843DcmEntryIde=ne843DcmEntryIde)
mibBuilder.exportSymbols("NE843-MIB", ne843CntEntryDvx=ne843CntEntryDvx, ne843Dc1Cma=ne843Dc1Cma, ne843Cm1Des=ne843Cm1Des, ne843Rpt1D044=ne843Rpt1D044, ne843RetireCp1Vla=ne843RetireCp1Vla, ne843Ivp1Ste=ne843Ivp1Ste, ne843Acd1Prf=ne843Acd1Prf, ne843TrapDc1Did=ne843TrapDc1Did, ne843RecEntryVac=ne843RecEntryVac, ne843TrapIvp1If=ne843TrapIvp1If, ne843Rpt1D090=ne843Rpt1D090, ne843Acd1Psd=ne843Acd1Psd, ne843PcsEntryStt=ne843PcsEntryStt, ne843Ps1Dls=ne843Ps1Dls, ne843Dc1Vsf=ne843Dc1Vsf, ne843TrapPs1Ax8=ne843TrapPs1Ax8, ne843Cp1Rl=ne843Cp1Rl, ne843Ps1Poe=ne843Ps1Poe, ne843Rpt1D126=ne843Rpt1D126, ne843At1R7=ne843At1R7, ne843DbyEntryIndex=ne843DbyEntryIndex, ne843Cp1Mfa=ne843Cp1Mfa, ne843UdeEntryDes=ne843UdeEntryDes, ne843Rpt1D127=ne843Rpt1D127, ne843InvEntryIf=ne843InvEntryIf, ne843Dc1Isy=ne843Dc1Isy, ne843RchEntrySstt=ne843RchEntrySstt, ne843CoeEntryIndex=ne843CoeEntryIndex, ne843Ivp1Ifa=ne843Ivp1Ifa, ne843RetireDc1Lsf=ne843RetireDc1Lsf, ne843PtmEntryHamt=ne843PtmEntryHamt, ne843SndTable=ne843SndTable, ne843Gm1Nro1=ne843Gm1Nro1, ne843Cb1Br5=ne843Cb1Br5, ne843RecEntryRif=ne843RecEntryRif, ne843AlarmEntryNag=ne843AlarmEntryNag, ne843Sc1Ide=ne843Sc1Ide, ne843Rpt1D145=ne843Rpt1D145, ne843InvEntryVdc=ne843InvEntryVdc, ne843Cp1Dfa=ne843Cp1Dfa, ne843PicEntry=ne843PicEntry, ne843Acd1Des=ne843Acd1Des, ne843RetireCn2Cno=ne843RetireCn2Cno, ne843Aco1Jae=ne843Aco1Jae, ne843Cb1Br3=ne843Cb1Br3, ne843RchEntryStt=ne843RchEntryStt, ne843Aco1Cst=ne843Aco1Cst, ne843Rp1Rcdp=ne843Rp1Rcdp, ne843Rpt1D117=ne843Rpt1D117, ne843UdeEntryDur=ne843UdeEntryDur, ne843At1R1=ne843At1R1, ne843RetirePs1Amth=ne843RetirePs1Amth, ne843InpEntryDes=ne843InpEntryDes, ne843CntEntryDtd=ne843CntEntryDtd, ne843Dc1Bod=ne843Dc1Bod, ne843Br1Btr=ne843Br1Btr, ne843TrapDc1Cma=ne843TrapDc1Cma, ne843Aco1Nae=ne843Aco1Nae, ne843Cp1Hva=ne843Cp1Hva, ne843Net1Tmo=ne843Net1Tmo, ne843Ps1Dss=ne843Ps1Dss, ne843PicEntryCustpn1=ne843PicEntryCustpn1, ne843InvEntryIirm1=ne843InvEntryIirm1, ne843TrapPs1Fan24=ne843TrapPs1Fan24, ne843Ivp1Vdc=ne843Ivp1Vdc, ne843Sc1Usp=ne843Sc1Usp, ne843Lp1Ide=ne843Lp1Ide, ne843RetireCm1Cor=ne843RetireCm1Cor, ne843RetireCp1Dfa=ne843RetireCp1Dfa, ne843DbyEntryBze=ne843DbyEntryBze, ne843BtdEntryDes=ne843BtdEntryDes, ne843RecTable=ne843RecTable, ne843Ps1Pgi=ne843Ps1Pgi, ne843Net1Hpe=ne843Net1Hpe, ne843Cm1Nnc=ne843Cm1Nnc, ne843Ps1Ax7=ne843Ps1Ax7, ne843TrapPs1Faj48=ne843TrapPs1Faj48, ne843PicEntryRtng=ne843PicEntryRtng, ne843RetireDc1Mcm=ne843RetireDc1Mcm, ne843At1Pmj=ne843At1Pmj, ne843Rpt1D086=ne843Rpt1D086, ne843RetireRp1Rcdp=ne843RetireRp1Rcdp, ne843Rpt1D006=ne843Rpt1D006, ne843AlarmEntryDst=ne843AlarmEntryDst, ne843TrapAt1Atb=ne843TrapAt1Atb, ne843Br1Atw=ne843Br1Atw, ne843BatEntryIndex=ne843BatEntryIndex, ne843Ps1Blr=ne843Ps1Blr, ne843RetirePs1Faj24=ne843RetirePs1Faj24, ne843Tlm1Aue=ne843Tlm1Aue, ne843RchEntryRprl=ne843RchEntryRprl, ne843RchEntryStyp=ne843RchEntryStyp, ne843Rpt1D066=ne843Rpt1D066, ne843Br1Bte=ne843Br1Bte, ne843Net1Wgtwy6=ne843Net1Wgtwy6, ne843Sc1Utt=ne843Sc1Utt, ne843TrapAt1Ata=ne843TrapAt1Ata, ne843RetireRp1Rpxj=ne843RetireRp1Rpxj, ne843PcmEntry=ne843PcmEntry, ne843RetireDc1Btla=ne843RetireDc1Btla, ne843RecEntrySeq=ne843RecEntrySeq, ne843CntEntryDtp=ne843CntEntryDtp, ne843TrsEntryIndex=ne843TrsEntryIndex, ne843Dc1Vlva=ne843Dc1Vlva, ne843InvEntryIlvi1=ne843InvEntryIlvi1, ne843SndEntryCs=ne843SndEntryCs, ne843Cp1Vsp=ne843Cp1Vsp, ne843PvmEntryIde=ne843PvmEntryIde, ne843TrapBr1Btha=ne843TrapBr1Btha, ne843Gn1Tct=ne843Gn1Tct, ne843PcmEntrySht=ne843PcmEntrySht, ne843Lp1=ne843Lp1, ne843Rpt1D100=ne843Rpt1D100, ne843Acd1Psx=ne843Acd1Psx, ne843Rpt1D089=ne843Rpt1D089, ne843Tl1EntryCds=ne843Tl1EntryCds, ne843PcmEntrySha=ne843PcmEntrySha, ne843Rpt1D071=ne843Rpt1D071, ne843RetireCp1Mfa=ne843RetireCp1Mfa, ne843TrapDc1Slot=ne843TrapDc1Slot, ne843Mp1Sbt=ne843Mp1Sbt, ne843TrapDc1Icr=ne843TrapDc1Icr, ne843Dc1Emw=ne843Dc1Emw, ne843Ps1Rrf=ne843Ps1Rrf, ne843PicEntryPcauxr=ne843PicEntryPcauxr, ne843RecEntryDer=ne843RecEntryDer, ne843Rpt1D065=ne843Rpt1D065, ne843Gn1Pi=ne843Gn1Pi, ne843Dc1Laht=ne843Dc1Laht, ne843BatEntryMpv=ne843BatEntryMpv, ne843Br1Btvh=ne843Br1Btvh, ne843TrapUserDefined=ne843TrapUserDefined, ne843TrapDc1Laht=ne843TrapDc1Laht, ne843Dc1Bdt1=ne843Dc1Bdt1, ne843PicEntryTmpe=ne843PicEntryTmpe, ne843Cp1Cfj=ne843Cp1Cfj, ne843Cm1Ngi=ne843Cm1Ngi, ne843Gn1Des=ne843Gn1Des, ne843TrapCm1Nnc=ne843TrapCm1Nnc, ne843DbyEntry=ne843DbyEntry, ne843Ps1Ax6=ne843Ps1Ax6, ne843RetireCn1Cnf=ne843RetireCn1Cnf, ne843Ivp1Des=ne843Ivp1Des, ne843TrapPs1Clc=ne843TrapPs1Clc, ne843Ps1Sys=ne843Ps1Sys, ne843CopEntryIndex=ne843CopEntryIndex, ne843RetireCp1Hva=ne843RetireCp1Hva, ne843TrapDc1Cca=ne843TrapDc1Cca, ne843MsvEntryIndex=ne843MsvEntryIndex, ne843PicEntryVlvbth=ne843PicEntryVlvbth, ne843Dc1Nst=ne843Dc1Nst, ne843Rpt1Des=ne843Rpt1Des, ne843Acd1=ne843Acd1, ne843Rpt1D024=ne843Rpt1D024, ne843Rpt1D021=ne843Rpt1D021, ne843RetireBr1Btvl=ne843RetireBr1Btvl, ne843Rp1Olcap=ne843Rp1Olcap, ne843TrapDc1Ravht=ne843TrapDc1Ravht, ne843Rpt1D083=ne843Rpt1D083, ne843DccEntryIndex=ne843DccEntryIndex, ne843DbyEntryOri=ne843DbyEntryOri, ne843DpnEntryVlv=ne843DpnEntryVlv, ne843RetireDc1Mfa=ne843RetireDc1Mfa, ne843RchEntryIndex=ne843RchEntryIndex, ne843Br1Des=ne843Br1Des, ne843InvEntryIipk=ne843InvEntryIipk, ne843Br1Btvl=ne843Br1Btvl, ne843TrapBr1Rba=ne843TrapBr1Rba, ne843InvEntryIcmf1=ne843InvEntryIcmf1, ne843TrapDc1Rfn=ne843TrapDc1Rfn, ne843PicEntryOsarly=ne843PicEntryOsarly, ne843Cm1Cof=ne843Cm1Cof, ne843Acd1Psv=ne843Acd1Psv, ne843At1Pcr=ne843At1Pcr, ne843PcsEntryDes=ne843PcsEntryDes, ne843At1Atb=ne843At1Atb, ne843TrapPath=ne843TrapPath, ne843TrapPs1Epr=ne843TrapPs1Epr, ne843RetireAco1Aac=ne843RetireAco1Aac, ne843Rpt1D012=ne843Rpt1D012, ne843RecEntryStt=ne843RecEntryStt, ne843Tlm1Des=ne843Tlm1Des, ne843Rpt1D149=ne843Rpt1D149, ne843At1Pmn=ne843At1Pmn, ne843DccEntryDfa1=ne843DccEntryDfa1, ne843RetireBr1Bfa=ne843RetireBr1Bfa, ne843PicEntryClei=ne843PicEntryClei, ne843TrapRp1Rcdp=ne843TrapRp1Rcdp, ne843Tlm1Ide=ne843Tlm1Ide, ne843InvEntry=ne843InvEntry, ne843TrapDc1Macf=ne843TrapDc1Macf, ne843Br1Bta=ne843Br1Bta, ne843Rpt1D129=ne843Rpt1D129, ne843AlarmEntryBth=ne843AlarmEntryBth, ne843DrcEntryDes=ne843DrcEntryDes, ne843UdeEntryAst=ne843UdeEntryAst, ne843Cp1Rme=ne843Cp1Rme, ne843PicEntrySer=ne843PicEntrySer, ne843Rpt1D136=ne843Rpt1D136, ne843CoeEntryIde=ne843CoeEntryIde, ne843RetirePs1Stf=ne843RetirePs1Stf, ne843Dc1Bod1=ne843Dc1Bod1, ne843TrapPs1Cch=ne843TrapPs1Cch, ne843Ivp1Vac=ne843Ivp1Vac, ne843At1R3=ne843At1R3, ne843TrapPs1Amtl=ne843TrapPs1Amtl, ne843UdeEntry=ne843UdeEntry, ne843DrcEntryPrg=ne843DrcEntryPrg, ne843PicEntryVlvbe=ne843PicEntryVlvbe, ne843RecEntryAcf1=ne843RecEntryAcf1, ne843PicEntryPnlsn=ne843PicEntryPnlsn, ne843InvEntryIde=ne843InvEntryIde, ne843PicEntryCc=ne843PicEntryCc, ne843RecEntrySer=ne843RecEntrySer, ne843RetireDc1Sof=ne843RetireDc1Sof, ne843InvEntryCva=ne843InvEntryCva, ne843Ivp1Adc=ne843Ivp1Adc, ne843Eco1Ide=ne843Eco1Ide, ne843Cm1Ide=ne843Cm1Ide, ne843CntEntryDes=ne843CntEntryDes, ne843PtmEntry=ne843PtmEntry, ne843DcmEntryTyp=ne843DcmEntryTyp, ne843Gn1Gnr=ne843Gn1Gnr, ne843Cp1Adc=ne843Cp1Adc, ne843InvEntryFrq=ne843InvEntryFrq, ne843PicEntryIndex=ne843PicEntryIndex, ne843Dc1Rsq=ne843Dc1Rsq, ne843InvEntryAdc=ne843InvEntryAdc, ne843RecEntryEmod=ne843RecEntryEmod, ne843Ps1Crt=ne843Ps1Crt, ne843PicEntryTmprly=ne843PicEntryTmprly, ne843RecEntryBof1=ne843RecEntryBof1, ne843Ps1Ser=ne843Ps1Ser, ne843Rpt1D096=ne843Rpt1D096, ne843Dc1Ems=ne843Dc1Ems, ne843PtmEntryIde=ne843PtmEntryIde, ne843DbyEntryCca=ne843DbyEntryCca, ne843Ivp1Frq=ne843Ivp1Frq, ne843Cp1Des=ne843Cp1Des, ne843TrapPs1Ax3=ne843TrapPs1Ax3, ne843Br1Rba=ne843Br1Rba, ne843Dc1Ide=ne843Dc1Ide, ne843Gm1Fcl=ne843Gm1Fcl, ne843Rpt1D022=ne843Rpt1D022, ne843Cp1Lvd=ne843Cp1Lvd, ne843PicEntryAsstag2=ne843PicEntryAsstag2, ne843RetireDc1Cca=ne843RetireDc1Cca, ne843DcmEntrySha=ne843DcmEntrySha, ne843CoeEntryTyp=ne843CoeEntryTyp, ne843Rpt1D043=ne843Rpt1D043, ne843PicEntryPnlcc=ne843PicEntryPnlcc, ne843Ps1Fpt=ne843Ps1Fpt, ne843Ps1Amt=ne843Ps1Amt, ne843Rpt1D085=ne843Rpt1D085)
mibBuilder.exportSymbols("NE843-MIB", ne843Ivp1Hipe=ne843Ivp1Hipe, ne843Rpt1D047=ne843Rpt1D047, ne843RecEntryRfa1=ne843RecEntryRfa1, ne843Dc1Rrtl=ne843Dc1Rrtl, ne843MsvEntryDid=ne843MsvEntryDid, ne843Dc1Rtm=ne843Dc1Rtm, ne843RetireDc1Der=ne843RetireDc1Der, ne843RchEntryRpxj=ne843RchEntryRpxj, ne843Net1=ne843Net1, ne843Ps1Nat=ne843Ps1Nat, ne843PcsEntryPopn=ne843PcsEntryPopn, ne843Rpt1D124=ne843Rpt1D124, ne843Dc1Slot=ne843Dc1Slot, ne843Lp1Des=ne843Lp1Des, ne843UdeEntryFds=ne843UdeEntryFds, ne843Br1Lbt=ne843Br1Lbt, ne843UdeTable=ne843UdeTable, ne843Aco1Cae=ne843Aco1Cae, ne843RchTable=ne843RchTable, ne843Tl1Table=ne843Tl1Table, ne843Gn1Ocd=ne843Gn1Ocd, ne843RetireIvp1Icf=ne843RetireIvp1Icf, ne843DbyEntryOle=ne843DbyEntryOle, ne843Net1Fpe=ne843Net1Fpe, ne843InpEntry=ne843InpEntry, ne843Gn1Ppd=ne843Gn1Ppd, ne843RetireDc1Laht=ne843RetireDc1Laht, ne843RetireBr1Rba=ne843RetireBr1Rba, ne843PicEntryDpmode=ne843PicEntryDpmode, ne843InvEntryIta=ne843InvEntryIta, ne843Gn1Cte=ne843Gn1Cte, ne843Net1Tle=ne843Net1Tle, ne843DpnTable=ne843DpnTable, ne843Dc1Lalt=ne843Dc1Lalt, ne843RecEntryVers=ne843RecEntryVers, ne843TrapDc1Hfv=ne843TrapDc1Hfv, ne843Rpt1D141=ne843Rpt1D141, ne843RetireIvp1Ilv=ne843RetireIvp1Ilv, ne843Acd1Prk=ne843Acd1Prk, ne843PtmEntryLbt=ne843PtmEntryLbt, ne843RecEntryRtm=ne843RecEntryRtm, ne843PicEntryCustpn2=ne843PicEntryCustpn2, ne843TrapCn4Cnf=ne843TrapCn4Cnf, ne843Gn1Tpd=ne843Gn1Tpd, ne843DccEntryTyp=ne843DccEntryTyp, ne843Po1Bdr=ne843Po1Bdr, ne843PicEntryVlvrly=ne843PicEntryVlvrly, ne843TrapTime=ne843TrapTime, ne843TrapDc1Man=ne843TrapDc1Man, ne843At1Stg=ne843At1Stg, ne843Lp1Sbt=ne843Lp1Sbt, ne843Gm1Bcl=ne843Gm1Bcl, ne843RchEntryPsn=ne843RchEntryPsn, ne843DcnTable=ne843DcnTable, ne843Cp1Hfv=ne843Cp1Hfv, ne843Cb1Ide=ne843Cb1Ide, ne843TrapCp1Rl=ne843TrapCp1Rl, ne843Net1Sne=ne843Net1Sne, ne843Bs1Atm=ne843Bs1Atm, ne843Aco1Ide=ne843Aco1Ide, ne843TrapDc1Ovla=ne843TrapDc1Ovla, ne843RetirePs1Faj48=ne843RetirePs1Faj48, ne843RetireGn1Gns=ne843RetireGn1Gns, ne843Rp1Des=ne843Rp1Des, ne843PcsEntrySlv=ne843PcsEntrySlv, ne843Bs1Ide=ne843Bs1Ide, ne843RetireRp1Rf=ne843RetireRp1Rf, ne843TrapRp1Rpfj=ne843TrapRp1Rpfj, ne843RetireIvp1Ihvi=ne843RetireIvp1Ihvi, ne843TrapDc1Vla=ne843TrapDc1Vla, ne843RetireDc1Bof=ne843RetireDc1Bof, ne843TrapIvp1Iirm=ne843TrapIvp1Iirm, ne843Ps1Ast=ne843Ps1Ast, ne843Rpt1D068=ne843Rpt1D068, ne843Dc1Vlvb=ne843Dc1Vlvb, ne843CntEntryIde=ne843CntEntryIde, ne843Mp1Hsh=ne843Mp1Hsh, ne843Rpt1D055=ne843Rpt1D055, ne843PvmTable=ne843PvmTable, ne843TrapDc1Lsf=ne843TrapDc1Lsf, ne843DcnEntry=ne843DcnEntry, ne843Ps1Fpe=ne843Ps1Fpe, ne843RetireBr1Mzd=ne843RetireBr1Mzd, ne843InvEntryIhv=ne843InvEntryIhv, ne843Rpt1Ide=ne843Rpt1Ide, ne843Br1Adc=ne843Br1Adc, ne843Br1Btha=ne843Br1Btha, ne843Ps1Sn=ne843Ps1Sn, ne843TrapDc1Btvh=ne843TrapDc1Btvh, ne843TrapPs1Ax12=ne843TrapPs1Ax12, ne843Rpt1D035=ne843Rpt1D035, ne843Rpt1D031=ne843Rpt1D031, ne843Cm1=ne843Cm1, ne843DcnEntryTyp=ne843DcnEntryTyp, ne843RetirePs1Clc=ne843RetirePs1Clc, ne843Ivp1Ita=ne843Ivp1Ita, ne843UdeEntryDst=ne843UdeEntryDst, ne843DrcEntryIndex=ne843DrcEntryIndex, ne843RetirePo1Por=ne843RetirePo1Por, ne843Dc1Olcap=ne843Dc1Olcap, ne843At1R4=ne843At1R4, ne843PicEntryAsstag1=ne843PicEntryAsstag1, ne843CntEntryDtm=ne843CntEntryDtm, ne843PicEntryOlvlat=ne843PicEntryOlvlat, ne843Aco1Lbe=ne843Aco1Lbe, ne843InvEntryIrm=ne843InvEntryIrm, ne843RetireDc1Macf=ne843RetireDc1Macf, ne843RecEntryDer1=ne843RecEntryDer1, ne843PcsEntryTyp=ne843PcsEntryTyp, ne843Po1Cl03=ne843Po1Cl03, ne843Dc1Bof=ne843Dc1Bof, ne843TrapDc1Osa=ne843TrapDc1Osa, ne843Tl1EntryRpt=ne843Tl1EntryRpt, ne843RecEntryLin1=ne843RecEntryLin1, ne843Gn1Tctd=ne843Gn1Tctd, ne843DccTable=ne843DccTable, ne843RetireDc1Hva=ne843RetireDc1Hva, ne843RecEntryLsf=ne843RecEntryLsf, ne843RetireIvp1Ihv=ne843RetireIvp1Ihv, ne843TrapDc1Raht=ne843TrapDc1Raht, ne843Ps1Tmf=ne843Ps1Tmf, ne843Ps1Swv=ne843Ps1Swv, ne843MsvTable=ne843MsvTable, ne843Rpt1D110=ne843Rpt1D110, ne843Rpt1D081=ne843Rpt1D081, ne843DcmEntry=ne843DcmEntry, ne843TrapPs1Pfd=ne843TrapPs1Pfd, ne843TrapIvp1Irls=ne843TrapIvp1Irls, ne843Dc1Vla=ne843Dc1Vla, ne843RecEntryIde=ne843RecEntryIde, ne843Gn1Rt=ne843Gn1Rt, ne843Rpt1D148=ne843Rpt1D148, ne843RetirePs1Hcl=ne843RetirePs1Hcl, ne843Rpt1D118=ne843Rpt1D118, ne843PicEntryFajrly=ne843PicEntryFajrly, ne843TrapDc1Rtl=ne843TrapDc1Rtl, ne843RetirePs1Ax6=ne843RetirePs1Ax6, ne843PcsEntryIde=ne843PcsEntryIde, ne843Br1Ide=ne843Br1Ide, ne843At1=ne843At1, ne843AlarmEntryIndex=ne843AlarmEntryIndex, ne843Gn1Thtd=ne843Gn1Thtd, ne843RetireDc1Rrtl=ne843RetireDc1Rrtl, ne843Po1Ide=ne843Po1Ide, ne843RecEntryClm1=ne843RecEntryClm1, ne843TrapCm1Cor=ne843TrapCm1Cor, ne843At1R5=ne843At1R5, ne843TrapIvp1Ifa=ne843TrapIvp1Ifa, ne843RetireDc1Buht=ne843RetireDc1Buht, ne843Ps1Ax4=ne843Ps1Ax4, ne843Dc1Amj=ne843Dc1Amj, ne843Gm1Oft=ne843Gm1Oft, ne843RecEntryAac3=ne843RecEntryAac3, ne843Rpt1D011=ne843Rpt1D011, ne843CntTable=ne843CntTable, ne843Rpt1D112=ne843Rpt1D112, ne843RetirePs1Ax12=ne843RetirePs1Ax12, ne843MsvEntryStt=ne843MsvEntryStt, ne843Gn1Pv=ne843Gn1Pv, ne843CopEntrySbt=ne843CopEntrySbt, ne843Net1Dom=ne843Net1Dom, ne843Dc1Epo=ne843Dc1Epo, ne843Gn1Odr=ne843Gn1Odr, ne843TrapIvp1Mif=ne843TrapIvp1Mif, ne843Po1Cl09=ne843Po1Cl09, ne843Rpt1D049=ne843Rpt1D049, ne843RetireDc1Vlvb=ne843RetireDc1Vlvb, ne843DccEntryDid1=ne843DccEntryDid1, ne843Sc1Rve=ne843Sc1Rve, ne843RecEntryRif1=ne843RecEntryRif1, ne843Eco1Sofs=ne843Eco1Sofs, ne843DcmEntryKwh=ne843DcmEntryKwh, ne843DcnEntryStt=ne843DcnEntryStt, ne843Ps1Verd=ne843Ps1Verd, ne843Ps1Faj48=ne843Ps1Faj48, ne843At1Irt=ne843At1Irt, ne843TrapRp1Rpff=ne843TrapRp1Rpff, ne843Mp1Pry=ne843Mp1Pry, ne843CntEntryCno=ne843CntEntryCno, ne843Tl1Entry=ne843Tl1Entry, ne843CopEntryMsg=ne843CopEntryMsg, ne843PtmEntryLamt=ne843PtmEntryLamt, ne843Ivp1Dth=ne843Ivp1Dth, ne843Dc1Mman=ne843Dc1Mman, ne843AlarmEntryAcc=ne843AlarmEntryAcc, ne843DpnEntryIde=ne843DpnEntryIde, ne843Bs1Stt=ne843Bs1Stt, ne843Rpt1D095=ne843Rpt1D095, ne843Ivp1Milv=ne843Ivp1Milv, ne843Ps1Ax2=ne843Ps1Ax2, ne843PicEntryOvlae=ne843PicEntryOvlae, ne843Aco1Stt=ne843Aco1Stt, ne843TrapCp1Hfv=ne843TrapCp1Hfv, ne843Dc1Btha=ne843Dc1Btha, ne843Dc1Poc1=ne843Dc1Poc1, ne843Rpt1D058=ne843Rpt1D058, ne843Ps1Ax8=ne843Ps1Ax8, ne843Br1Scv=ne843Br1Scv, ne843Dc1Raht=ne843Dc1Raht, ne843Ps1Cem=ne843Ps1Cem, ne843RetireDc1Rls=ne843RetireDc1Rls, ne843DpnEntryIndex=ne843DpnEntryIndex, ne843InpEntryBrc=ne843InpEntryBrc, ne843TrapDc1Epo=ne843TrapDc1Epo, ne843Dc1Rot=ne843Dc1Rot, ne843PicEntryPnlclei=ne843PicEntryPnlclei, ne843Dc1Acf=ne843Dc1Acf, ne843Cp1Vdc=ne843Cp1Vdc, ne843PvmEntryIndex=ne843PvmEntryIndex, ne843RetireDc1Fajb=ne843RetireDc1Fajb, ne843UdeEntryPrg=ne843UdeEntryPrg, ne843InvEntryVac=ne843InvEntryVac, ne843TrapDc1Pfs=ne843TrapDc1Pfs, ne843BatEntryIde=ne843BatEntryIde, ne843InvEntryDes=ne843InvEntryDes, ne843PicEntryOvlath=ne843PicEntryOvlath, ne843Sc1=ne843Sc1, ne843Tl1EntryIde=ne843Tl1EntryIde, ne843InvEntryIpk=ne843InvEntryIpk, ne843Gn1Pid=ne843Gn1Pid, ne843RetireDc1Btvl=ne843RetireDc1Btvl, ne843Po1Sbt=ne843Po1Sbt, ne843TrapInfo=ne843TrapInfo, ne843At1Bzt=ne843At1Bzt, ne843TrapDc1Ovlb=ne843TrapDc1Ovlb, ne843DbyTable=ne843DbyTable, ne843Rpt1D004=ne843Rpt1D004, ne843Cp1Cap=ne843Cp1Cap, ne843Net1Des=ne843Net1Des, ne843RetireBr1Mdp=ne843RetireBr1Mdp, ne843DpnEntryOlr=ne843DpnEntryOlr, ne843CopEntryIde=ne843CopEntryIde, ne843Rp1Rrf=ne843Rp1Rrf, ne843PcsEntryPole=ne843PcsEntryPole, ne843RecEntryClei=ne843RecEntryClei, ne843DbyEntryPmt=ne843DbyEntryPmt, ne843Ps1Ere=ne843Ps1Ere, ne843TrapDc1Rif=ne843TrapDc1Rif, ne843At1Snt=ne843At1Snt, ne843Rpt1D001=ne843Rpt1D001, ne843TrapIvp1Iof=ne843TrapIvp1Iof, ne843RetireDc1Rif=ne843RetireDc1Rif, ne843DpnEntryOlt=ne843DpnEntryOlt, ne843At1Lte=ne843At1Lte, ne843Sc1Stt=ne843Sc1Stt, ne843At1Bzi=ne843At1Bzi, ne843RetireDc1Man=ne843RetireDc1Man, ne843CntEntryRtm=ne843CntEntryRtm, ne843Gn1Nva=ne843Gn1Nva, ne843Rpt1Int=ne843Rpt1Int, ne843PtmEntryHbt=ne843PtmEntryHbt, ne843Ivp1Hrme=ne843Ivp1Hrme, ne843Mp1=ne843Mp1, ne843Mp1Des=ne843Mp1Des)
mibBuilder.exportSymbols("NE843-MIB", ne843TrapRp1Rpxn=ne843TrapRp1Rpxn, ne843UdeEntryIde=ne843UdeEntryIde, ne843DccEntryCfn=ne843DccEntryCfn, ne843RetireDc1Ovlb=ne843RetireDc1Ovlb, ne843Rpt1D115=ne843Rpt1D115, ne843Cp1Clm=ne843Cp1Clm, ne843Ps1Fst=ne843Ps1Fst, ne843Rpt1D092=ne843Rpt1D092, ne843TrapCp1Dfa=ne843TrapCp1Dfa, ne843RecEntryAdc=ne843RecEntryAdc, ne843RchEntrySsn=ne843RchEntrySsn, ne843RetirePs1Fan24=ne843RetirePs1Fan24, ne843Ps1Tun=ne843Ps1Tun, ne843RetireCp1Cin=ne843RetireCp1Cin, ne843UdeEntryLat=ne843UdeEntryLat, ne843RetireDc1Vmf=ne843RetireDc1Vmf, ne843Rpt1D142=ne843Rpt1D142, ne843CntEntryStt=ne843CntEntryStt, ne843TrapRp1Rpxj=ne843TrapRp1Rpxj, ne843Rpt1D132=ne843Rpt1D132, ne843Gn1Gnm=ne843Gn1Gnm, ne843Rpt1D056=ne843Rpt1D056, ne843Dc1Rls=ne843Dc1Rls, ne843Ivp1Ilv=ne843Ivp1Ilv, ne843TrapGn1Gnm=ne843TrapGn1Gnm, ne843Ivp1Lvd=ne843Ivp1Lvd, ne843Dc1Typ=ne843Dc1Typ, ne843Rpt1D078=ne843Rpt1D078, ne843TrapGn1Gns=ne843TrapGn1Gns, ne843RetireIvp1Idid=ne843RetireIvp1Idid, ne843DcmEntryIndex=ne843DcmEntryIndex, ne843RetireRp1Rpxn=ne843RetireRp1Rpxn, ne843DccEntryDid=ne843DccEntryDid, ne843DccEntryCcf=ne843DccEntryCcf, ne843SndEntryIp=ne843SndEntryIp, ne843Cp1Did=ne843Cp1Did, ne843CopTable=ne843CopTable, ne843DpnEntryOvl=ne843DpnEntryOvl, ne843Dc1Des=ne843Dc1Des, ne843TrapPs1Faj24=ne843TrapPs1Faj24, ne843Rpt1D023=ne843Rpt1D023, ne843PcmEntryVal=ne843PcmEntryVal, controllermibs=controllermibs, ne843Gn1Ode=ne843Gn1Ode, ne843Rpt1D143=ne843Rpt1D143, ne843InvEntryTyp=ne843InvEntryTyp, ne843RetirePs1Pfd=ne843RetirePs1Pfd, ne843Ps1Cc=ne843Ps1Cc, ne843TrapAco1Aac=ne843TrapAco1Aac, ne843Acd1Psk=ne843Acd1Psk, ne843Dc1Mfa=ne843Dc1Mfa, ne843PicEntryDes=ne843PicEntryDes, ne843TrapDc1Vlvb=ne843TrapDc1Vlvb, ne843Rp1Rf=ne843Rp1Rf, ne843RetireBr1Scda=ne843RetireBr1Scda, ne843Rpt1D101=ne843Rpt1D101, ne843DbyEntryIds=ne843DbyEntryIds, ne843Po1Cl04=ne843Po1Cl04, ne843DpnEntryStt=ne843DpnEntryStt, ne843Br1Bts=ne843Br1Bts, ne843PicEntryStt=ne843PicEntryStt, ne843Rpt1D114=ne843Rpt1D114, ne843Ps1Fstl=ne843Ps1Fstl, ne843Rpt1Ena=ne843Rpt1Ena, ne843CoeTable=ne843CoeTable, ne843TrapIvp1Ilv=ne843TrapIvp1Ilv, ne843DcnEntryBrc=ne843DcnEntryBrc, ne843Dc1Hfv=ne843Dc1Hfv, ne843Rpt1D123=ne843Rpt1D123, ne843DccEntryCfa1=ne843DccEntryCfa1, ne843Dc1Eme=ne843Dc1Eme, ne843Net1Hse=ne843Net1Hse, ne843TrapPs1Amth=ne843TrapPs1Amth, ne843Net1Wip6=ne843Net1Wip6, ne843PtmEntryBamt=ne843PtmEntryBamt, ne843RetirePs1Cch=ne843RetirePs1Cch, ne843Lp1Stt=ne843Lp1Stt, ne843Aco1Aac=ne843Aco1Aac, ne843Rp1=ne843Rp1, ne843Dc1Rif=ne843Dc1Rif, ne843TrapDc1Rls=ne843TrapDc1Rls, ne843Rpt1D131=ne843Rpt1D131, ne843Po1Pry=ne843Po1Pry, ne843RchEntryDes=ne843RchEntryDes, ne843DbyEntryNpl=ne843DbyEntryNpl, ne843Dc1Rss=ne843Dc1Rss, ne843Rpt1D054=ne843Rpt1D054, ne843RetireDc1Epo=ne843RetireDc1Epo, ne843TrapDc1Btla=ne843TrapDc1Btla, ne843Acd1Ptf=ne843Acd1Ptf, ne843Gm1Nro=ne843Gm1Nro, ne843RecEntrySn=ne843RecEntrySn, ne843Rpt1D138=ne843Rpt1D138, ne843PicEntryEpoe=ne843PicEntryEpoe, ne843Po1Phn=ne843Po1Phn, ne843Ps1Faj24=ne843Ps1Faj24, ne843At1Ems=ne843At1Ems, ne843Rpt1D134=ne843Rpt1D134, ne843AlarmEntrySev=ne843AlarmEntrySev, ne843Tl1EntryIndex=ne843Tl1EntryIndex, ne843Ivp1Cap=ne843Ivp1Cap, ne843Ps1Accl=ne843Ps1Accl, ne843Rpt1D094=ne843Rpt1D094, ne843Rpt1D069=ne843Rpt1D069, ne843PicEntryMdl=ne843PicEntryMdl, ne843TrapDc1Buvht=ne843TrapDc1Buvht, ne843Net1Ead=ne843Net1Ead, ne843Po1Des=ne843Po1Des, ne843RetireDc1Cma=ne843RetireDc1Cma, ne843PicEntryPid=ne843PicEntryPid, ne843InvEntryIda1=ne843InvEntryIda1, ne843DpnEntryOld=ne843DpnEntryOld, ne843Gn1=ne843Gn1, ne843Rpt1D015=ne843Rpt1D015, ne843Gn1Tv=ne843Gn1Tv, ne843Dc1Bofe=ne843Dc1Bofe, ne843PtmEntryNtm=ne843PtmEntryNtm, ne843Acd1Ptk=ne843Acd1Ptk, ne843Rp1Va=ne843Rp1Va, ne843Tlm1Prt=ne843Tlm1Prt, ne843Dc1Vdc=ne843Dc1Vdc, ne843Rpt1D019=ne843Rpt1D019, ne843DbyEntryDes=ne843DbyEntryDes, ne843TrapDc1Acf=ne843TrapDc1Acf, ne843Gn1Tp=ne843Gn1Tp, ne843Br1Tmd=ne843Br1Tmd, ne843Acd1Ide=ne843Acd1Ide, ne843Dc1Bdt=ne843Dc1Bdt, ne843Po1=ne843Po1, ne843RetireDc1Rtl=ne843RetireDc1Rtl, ne843Ivp1Iirm=ne843Ivp1Iirm, ne843InvEntryIof=ne843InvEntryIof, ne843Rpt1D061=ne843Rpt1D061, ne843Br1Mtt=ne843Br1Mtt, ne843CoeEntryDes=ne843CoeEntryDes, ne843RetireCp1Cfj=ne843RetireCp1Cfj, ne843TrapBr1Mzd=ne843TrapBr1Mzd, ne843Gn1Nv=ne843Gn1Nv, ne843Dc1Lsf=ne843Dc1Lsf, ne843InvEntryDid=ne843InvEntryDid, ne843Ivp1Mif=ne843Ivp1Mif, ne843UdeEntryDly=ne843UdeEntryDly, ne843Br1=ne843Br1, ne843TrapDc1Pmf=ne843TrapDc1Pmf, ne843RetireDc1Faja=ne843RetireDc1Faja, ne843Dc1Rfa=ne843Dc1Rfa, ne843Ps1Bbl=ne843Ps1Bbl, ne843Ps1Cid=ne843Ps1Cid, ne843DrcEntryIde=ne843DrcEntryIde, ne843Dc1Der=ne843Dc1Der, ne843DcmEntryDes=ne843DcmEntryDes, ne843Cb1Br4=ne843Cb1Br4, ne843RchEntryIde=ne843RchEntryIde, ne843Gm1Bsp=ne843Gm1Bsp, ne843Acd1Prv=ne843Acd1Prv, ne843DccEntryDes=ne843DccEntryDes, ne843CopEntryPhn=ne843CopEntryPhn, ne843PicEntryVera=ne843PicEntryVera, ne843PicEntryVlvlat=ne843PicEntryVlvlat, ne843Ps1Hcl=ne843Ps1Hcl, ne843PicEntryPcauxe=ne843PicEntryPcauxe, ne843Cp1Vsd=ne843Cp1Vsd, ne843RetirePs1Ax9=ne843RetirePs1Ax9, ne843RetireBr1Bta=ne843RetireBr1Bta, ne843TrapDc1Bda=ne843TrapDc1Bda, ne843RecEntryRfn1=ne843RecEntryRfn1, ne843RetireRp1Rpff=ne843RetireRp1Rpff, ne843Net1Host=ne843Net1Host, ne843PicEntryCbf=ne843PicEntryCbf, ne843Eco1Nocap=ne843Eco1Nocap, ne843RetireBr1Btha=ne843RetireBr1Btha, ne843TrapDc1Bof=ne843TrapDc1Bof, ne843TrapCp1Cfn=ne843TrapCp1Cfn, ne843Cp1Typ=ne843Cp1Typ, ne843RchEntryRpfj=ne843RchEntryRpfj, ne843Br1Tth=ne843Br1Tth, ne843Rpt1D075=ne843Rpt1D075, ne843TrapCp1Vla=ne843TrapCp1Vla, ne843Lp1Hsh=ne843Lp1Hsh, ne843Lp1Pry=ne843Lp1Pry, ne843Rpt1D097=ne843Rpt1D097, ne843Ps1Clei=ne843Ps1Clei, ne843Ps1Tzo=ne843Ps1Tzo, ne843Rpt1D144=ne843Rpt1D144, ne843RecEntryMan=ne843RecEntryMan, ne843Dc1Btvl=ne843Dc1Btvl, ne843DcmEntryVal=ne843DcmEntryVal, ne843Ps1Dse=ne843Ps1Dse, ne843TrapDc1Btha=ne843TrapDc1Btha, ne843Gn1Pctd=ne843Gn1Pctd, ne843Ps1Ax10=ne843Ps1Ax10, ne843Aco1Nst=ne843Aco1Nst, ne843BatEntryCon=ne843BatEntryCon, ne843Gn1Pve=ne843Gn1Pve, ne843At1R2=ne843At1R2, ne843Ivp1Idid=ne843Ivp1Idid, ne843Ps1Ax11=ne843Ps1Ax11, ne843Cb1Stt=ne843Cb1Stt, ne843RetireBr1Btla=ne843RetireBr1Btla, ne843Rpt1D119=ne843Rpt1D119, ne843Rpt1D084=ne843Rpt1D084, ne843DccEntryStt=ne843DccEntryStt, ne843RecEntryTyp=ne843RecEntryTyp, ne843Acd1Prd=ne843Acd1Prd, ne843CoeEntryAdr=ne843CoeEntryAdr, ne843Rpt1D130=ne843Rpt1D130, ne843Cb1Br2=ne843Cb1Br2, ne843AlarmEntryNoo=ne843AlarmEntryNoo, ne843Rpt1D026=ne843Rpt1D026, ne843InvEntryIhvi1=ne843InvEntryIhvi1, ne843Mp1Bdr=ne843Mp1Bdr, ne843PicEntrySlote=ne843PicEntrySlote, ne843TrapCn1Cnf=ne843TrapCn1Cnf, ne843Ps1Sid=ne843Ps1Sid, ne843Sc1Fse=ne843Sc1Fse, ne843CntEntryRdy=ne843CntEntryRdy, ne843Dc1=ne843Dc1, ne843TrapIvp1Ihv=ne843TrapIvp1Ihv, ne843BtdEntryCap=ne843BtdEntryCap, ne843InvEntryDid1=ne843InvEntryDid1, ne843Po1Por=ne843Po1Por, ne843PicEntryNvt=ne843PicEntryNvt, ne843Gn1Tht=ne843Gn1Tht, ne843RecEntryAac2=ne843RecEntryAac2, ne843Eco1Strd=ne843Eco1Strd, ne843Dc1Rtl=ne843Dc1Rtl, ne843DcmTable=ne843DcmTable, ne843TrapIvp1Idid=ne843TrapIvp1Idid, ne843RetirePs1Ax4=ne843RetirePs1Ax4, ne843PtmEntryDes=ne843PtmEntryDes, ne843TrapIvp1Iipk=ne843TrapIvp1Iipk, ne843RecEntryRcf=ne843RecEntryRcf, ne843RetireUserDefined=ne843RetireUserDefined, ne843Dc1Mls=ne843Dc1Mls, ne843CntEntryDvt=ne843CntEntryDvt, ne843PicEntryPnlsize=ne843PicEntryPnlsize, ne843Ps1Ide=ne843Ps1Ide, ne843InvEntryIfa=ne843InvEntryIfa, ne843At1R6=ne843At1R6, ne843Ivp1Icf=ne843Ivp1Icf, ne843Cp1Cin=ne843Cp1Cin, ne843Br1Scda=ne843Br1Scda, ne843SndEntryDes=ne843SndEntryDes, ne843RecEntryVac3=ne843RecEntryVac3, ne843DbyEntrySn=ne843DbyEntrySn, ne843RecEntryEcap=ne843RecEntryEcap, ne843At1Stt=ne843At1Stt, ne843Dc1Zid=ne843Dc1Zid, ne843RetirePs1Ax7=ne843RetirePs1Ax7, ne843RetireDc1Vlva=ne843RetireDc1Vlva, ne843Dc1Buht=ne843Dc1Buht, ne843Rpt1D091=ne843Rpt1D091, ne843Br1Cev=ne843Br1Cev, ne843TrapBr1Mdp=ne843TrapBr1Mdp)
mibBuilder.exportSymbols("NE843-MIB", ne843TrapBr1Bfa=ne843TrapBr1Bfa, ne843TrapDc1Tpa=ne843TrapDc1Tpa, ne843Br1Mzd=ne843Br1Mzd, ne843TrapCm1Cof=ne843TrapCm1Cof, ne843Ivp1Irls=ne843Ivp1Irls, ne843RetirePs1Ax8=ne843RetirePs1Ax8, ne843BatEntryNst=ne843BatEntryNst, ne843MsvEntryIde=ne843MsvEntryIde, ne843BatEntry=ne843BatEntry, ne843TrapCp1Icc=ne843TrapCp1Icc, ne843Ps1Verb=ne843Ps1Verb, ne843RetirePs1Ax5=ne843RetirePs1Ax5, ne843Rpt1D020=ne843Rpt1D020, ne843Gm1=ne843Gm1, ne843Net1Dns=ne843Net1Dns, ne843PtmTable=ne843PtmTable, ne843Dc1Ovla=ne843Dc1Ovla, ne843PicEntryOvls=ne843PicEntryOvls, ne843Rpt1D108=ne843Rpt1D108, ne843Rpt1D125=ne843Rpt1D125, ne843AlarmTable=ne843AlarmTable, ne843Gm1Fsd=ne843Gm1Fsd, ne843RchEntryRcdp=ne843RchEntryRcdp, ne843Ivp1Ilvi=ne843Ivp1Ilvi, ne843PicEntryPcf=ne843PicEntryPcf, ne843DcmEntryStt=ne843DcmEntryStt, ne843RetirePs1Ax2=ne843RetirePs1Ax2, ne843UdeEntryNag=ne843UdeEntryNag, ne843Lp1App=ne843Lp1App, ne843RetireIvp1Ida=ne843RetireIvp1Ida, ne843DccEntryDfa=ne843DccEntryDfa, ne843Cm1Cor=ne843Cm1Cor, ne843Gn1Pie=ne843Gn1Pie, ne843TrapDc1Der=ne843TrapDc1Der, ne843TrapDc1Mfa=ne843TrapDc1Mfa, ne843PcsEntryRtng=ne843PcsEntryRtng, ne843Br1Btla=ne843Br1Btla, ne843Rp1Rss=ne843Rp1Rss, ne843Ps1Dflt=ne843Ps1Dflt, ne843Tl1EntrySaf=ne843Tl1EntrySaf, ne843TrapIvp1Ilvi=ne843TrapIvp1Ilvi, ne843RetireDc1Clm=ne843RetireDc1Clm, ne843RetireDc1Btha=ne843RetireDc1Btha, ne843Bs1Tmd=ne843Bs1Tmd, ne843TrapDc1Sof=ne843TrapDc1Sof, ne843DccEntryCap=ne843DccEntryCap, ne843TrsEntrySrc=ne843TrsEntrySrc, ne843Rpt1D073=ne843Rpt1D073, ne843RchEntryPtyp=ne843RchEntryPtyp, ne843BtdEntryBtc=ne843BtdEntryBtc, ne843TrapPs1Ax6=ne843TrapPs1Ax6, ne843RetireCp1Hfv=ne843RetireCp1Hfv, ne843Ps1Verw=ne843Ps1Verw, ne843Eco1=ne843Eco1, ne843UdeEntryIndex=ne843UdeEntryIndex, ne843Cp1Icc=ne843Cp1Icc, ne843Ps1Nhat=ne843Ps1Nhat, ne843Rpt1D063=ne843Rpt1D063, ne843Po1Dbt=ne843Po1Dbt, ne843CopEntryPgr=ne843CopEntryPgr, ne843RetireIvp1Ifa=ne843RetireIvp1Ifa, ne843Dc1Clm=ne843Dc1Clm, ne843BatTable=ne843BatTable, ne843Ps1Nwa=ne843Ps1Nwa, ne843PvmEntryDes=ne843PvmEntryDes, ne843RetireDc1Lalt=ne843RetireDc1Lalt, ne843RetireDc1Ralt=ne843RetireDc1Ralt, ne843RecEntryVac1=ne843RecEntryVac1, ne843Eco1Nkwh=ne843Eco1Nkwh, ne843Dc1Bty=ne843Dc1Bty, ne843Gm1Lsfe=ne843Gm1Lsfe, ne843Rpt1D087=ne843Rpt1D087, ne843Gm1Wie=ne843Gm1Wie, ne843TrapRp1Rf=ne843TrapRp1Rf, ne843DccEntryIde=ne843DccEntryIde, ne843CntEntryRtp=ne843CntEntryRtp, ne843BatEntryStt=ne843BatEntryStt, ne843Rpt1D041=ne843Rpt1D041, ne843PicEntryTyp=ne843PicEntryTyp, ne843Cp1Rth=ne843Cp1Rth, ne843Cp1Rof=ne843Cp1Rof, ne843Gm1Ide=ne843Gm1Ide, ne843Sc1Spt=ne843Sc1Spt, ne843Ps1Amth=ne843Ps1Amth, ne843Gn1Tvd=ne843Gn1Tvd, ne843CopEntryDes=ne843CopEntryDes, ne843AlarmEntry=ne843AlarmEntry, ne843RetireCp1Did=ne843RetireCp1Did, ne843PcsEntry=ne843PcsEntry, ne843Ivp1If=ne843Ivp1If, ne843AlarmEntryNor=ne843AlarmEntryNor, ne843PicEntryPnlser=ne843PicEntryPnlser, ne843Rpt1D079=ne843Rpt1D079, ne843Dc1Emd=ne843Dc1Emd, ne843Dc1Cps=ne843Dc1Cps, ne843Rpt1D060=ne843Rpt1D060, ne843Dc1Sof=ne843Dc1Sof, ne843DccEntryAdc=ne843DccEntryAdc, ne843Gm1Des=ne843Gm1Des, ne843InvEntryNcl=ne843InvEntryNcl, ne843Rpt1D133=ne843Rpt1D133, ne843Rpt1D052=ne843Rpt1D052, ne843DccEntry=ne843DccEntry, ne843InvEntryIipk1=ne843InvEntryIipk1, ne843Rp1Ide=ne843Rp1Ide, ne843=ne843, ne843PicEntryNst=ne843PicEntryNst, ne843Rpt1D103=ne843Rpt1D103, ne843Rpt1D013=ne843Rpt1D013, ne843Rpt1D076=ne843Rpt1D076, ne843TrapCp1Cfj=ne843TrapCp1Cfj, ne843Rpt1D040=ne843Rpt1D040, ne843TrapDc1Smw=ne843TrapDc1Smw, ne843Cp1Ide=ne843Cp1Ide, ne843TrapDc1Ralt=ne843TrapDc1Ralt, ne843BtdEntryBty=ne843BtdEntryBty, ne843CntEntryDin=ne843CntEntryDin, ne843InvEntryIfa1=ne843InvEntryIfa1, ne843Cb1Ph2=ne843Cb1Ph2, ne843RecEntryAac1=ne843RecEntryAac1, ne843SndEntry=ne843SndEntry, ne843Cb1Ph5=ne843Cb1Ph5, ne843CntEntryRth=ne843CntEntryRth, ne843Acd1Psf=ne843Acd1Psf, ne843Lp1Wre=ne843Lp1Wre, ne843Dc1Tpa=ne843Dc1Tpa, ne843TrapDc1Fajb=ne843TrapDc1Fajb, ne843Dc1Faja=ne843Dc1Faja, ne843Ps1Exl=ne843Ps1Exl, ne843DpnEntryCct=ne843DpnEntryCct, ne843RetireCn1Cno=ne843RetireCn1Cno, ne843Rpt1D105=ne843Rpt1D105, ne843Dc1Ron=ne843Dc1Ron, ne843Dc1Icr=ne843Dc1Icr, ne843Dc1Ravht=ne843Dc1Ravht, ne843RetireRp1Rprl=ne843RetireRp1Rprl, ne843DccEntryCfn1=ne843DccEntryCfn1, ne843Rpt1D106=ne843Rpt1D106, ne843PcmEntryIndex=ne843PcmEntryIndex, ne843Retire=ne843Retire, ne843Dc1Pmf=ne843Dc1Pmf, ne843InvTable=ne843InvTable, ne843DcnEntryIndex=ne843DcnEntryIndex, ne843RecEntryBof=ne843RecEntryBof, ne843Rpt1D147=ne843Rpt1D147, ne843PtmEntryIndex=ne843PtmEntryIndex, ne843At1Des=ne843At1Des, ne843Cb1Ph4=ne843Cb1Ph4, ne843TrapCn4Cno=ne843TrapCn4Cno, ne843Ps1Clc=ne843Ps1Clc, ne843Rpt1D107=ne843Rpt1D107, ne843RetireDc1Vla=ne843RetireDc1Vla, ne843Dc1Man=ne843Dc1Man, ne843Dc1Emi=ne843Dc1Emi, ne843Ivp1Ihv=ne843Ivp1Ihv, ne843MsvEntryDid1=ne843MsvEntryDid1, ne843Trap=ne843Trap, ne843Net1Gtwy=ne843Net1Gtwy, ne843RetirePs1Epr=ne843RetirePs1Epr, ne843TrapDc1Btvl=ne843TrapDc1Btvl, ne843BtdTable=ne843BtdTable, ne843DpnEntryPlt=ne843DpnEntryPlt, ne843Br1Tev=ne843Br1Tev, ne843RchEntryRpxn=ne843RchEntryRpxn, ne843TrapPs1Stf=ne843TrapPs1Stf, ne843Ivp1Irm=ne843Ivp1Irm, ne843TrapIvp1Ita=ne843TrapIvp1Ita, ne843TrapSev=ne843TrapSev, ne843PcsEntryTrp=ne843PcsEntryTrp, ne843RetireIvp1Ita=ne843RetireIvp1Ita, ne843Rpt1D017=ne843Rpt1D017, ne843Dc1Rfn=ne843Dc1Rfn, ne843RetireDc1Smw=ne843RetireDc1Smw, ne843Rpt1D002=ne843Rpt1D002, ne843Gn1Phtd=ne843Gn1Phtd, ne843TrapDc1Buht=ne843TrapDc1Buht, ne843Rpt1D014=ne843Rpt1D014, ne843PtmEntryHbut=ne843PtmEntryHbut, ne843InvEntryIhv1=ne843InvEntryIhv1, ne843TrapPs1Bbl=ne843TrapPs1Bbl, ne843Net1Ip=ne843Net1Ip, ne843Rpt1D128=ne843Rpt1D128, ne843Ps1Rss=ne843Ps1Rss, ne843Ps1Brc=ne843Ps1Brc, ne843Ps1Ax3=ne843Ps1Ax3, ne843PtmEntryLbut=ne843PtmEntryLbut, ne843RecEntryHin=ne843RecEntryHin, ne843TrapIvp1Icf=ne843TrapIvp1Icf, ne843RecEntryMppt=ne843RecEntryMppt, ne843Dc1Ovlb=ne843Dc1Ovlb, ne843Rpt1D150=ne843Rpt1D150, ne843RetireDc1Did=ne843RetireDc1Did, ne843Rpt1D102=ne843Rpt1D102, ne843Ps1Stf=ne843Ps1Stf, ne843TrapCp1Hva=ne843TrapCp1Hva, ne843RecEntryDes=ne843RecEntryDes, ne843BatEntryCap=ne843BatEntryCap, ne843Gm1Sof=ne843Gm1Sof, ne843TrapPo1Por=ne843TrapPo1Por, ne843Net1She=ne843Net1She, ne843Acd1Ptd=ne843Acd1Ptd, ne843TrapDc1Hva=ne843TrapDc1Hva, ne843UdeEntryAst1=ne843UdeEntryAst1, ne843Ps1Ncr=ne843Ps1Ncr, ne843Ps1Epr=ne843Ps1Epr, ne843Br1Olcap=ne843Br1Olcap, ne843Rpt1D062=ne843Rpt1D062, ne843Rpt1D059=ne843Rpt1D059, ne843Po1Cl01=ne843Po1Cl01, ne843InvEntryIlv=ne843InvEntryIlv, ne843Aco1Jst=ne843Aco1Jst, ne843CopEntryTyp=ne843CopEntryTyp, ne843Ps1Ax9=ne843Ps1Ax9, ne843RchEntryPstt=ne843RchEntryPstt, ne843AlarmEntryFth=ne843AlarmEntryFth, ne843Br1Atd=ne843Br1Atd, ne843Rpt1D070=ne843Rpt1D070, ne843PvmEntry=ne843PvmEntry, ne843RecEntryCc=ne843RecEntryCc, ne843Ps1Pfd=ne843Ps1Pfd, ne843Rp1Vsp=ne843Rp1Vsp, ne843Gn1Gnf=ne843Gn1Gnf, ne843Rpt1D099=ne843Rpt1D099, ne843Rpt1D135=ne843Rpt1D135, ne843PcsEntryCbf=ne843PcsEntryCbf, ne843Bs1=ne843Bs1, ne843Sc1Ntt=ne843Sc1Ntt, ne843TrsEntryDes=ne843TrsEntryDes, ne843Ps1Ax5=ne843Ps1Ax5, ne843RetireGn1Gnf=ne843RetireGn1Gnf, ne843Rpt1D122=ne843Rpt1D122, ne843TrapPs1Fan48=ne843TrapPs1Fan48, ne843Cp1Olcap=ne843Cp1Olcap, ne843Po1Cl10=ne843Po1Cl10, ne843RetirePs1Crt=ne843RetirePs1Crt, ne843TrapDc1Zid=ne843TrapDc1Zid, ne843InpEntrySn=ne843InpEntrySn, ne843Rpt1D137=ne843Rpt1D137, ne843Rpt1D039=ne843Rpt1D039, ne843TrapBr1Btvh=ne843TrapBr1Btvh, ne843Tlm1=ne843Tlm1, ne843RecEntryRcf1=ne843RecEntryRcf1, ne843RetireDc1Icr=ne843RetireDc1Icr, ne843DpnEntryEna=ne843DpnEntryEna, ne843RecEntryRfa=ne843RecEntryRfa, ne843Net1Ntp=ne843Net1Ntp, ne843PtmEntryNat=ne843PtmEntryNat, ne843TrapPs1Ax10=ne843TrapPs1Ax10, ne843Cb1=ne843Cb1, ne843TrapIvp1Ihvi=ne843TrapIvp1Ihvi, ne843RetireDc1Vsf=ne843RetireDc1Vsf, ne843Bs1Des=ne843Bs1Des, ne843PicEntryPnldes=ne843PicEntryPnldes, ne843RetirePs1Ax1=ne843RetirePs1Ax1)
mibBuilder.exportSymbols("NE843-MIB", ne843Cb1Br1=ne843Cb1Br1, ne843Cp1Cfa=ne843Cp1Cfa, ne843RetireAt1Ata=ne843RetireAt1Ata, ne843Dc1Pcaux=ne843Dc1Pcaux, ne843TrapCn3Cno=ne843TrapCn3Cno, ne843RetireCn4Cno=ne843RetireCn4Cno, ne843SndEntryIde=ne843SndEntryIde, ne843DpnEntryAdc=ne843DpnEntryAdc, ne843Net1Sid=ne843Net1Sid, ne843InvEntryIcf=ne843InvEntryIcf, ne843BtdEntryIde=ne843BtdEntryIde, ne843Rp1Rme=ne843Rp1Rme, ne843At1Ata=ne843At1Ata, ne843Cb1Des=ne843Cb1Des, ne843PcsEntryPolp=ne843PcsEntryPolp, ne843Mp1Stt=ne843Mp1Stt, ne843TrsEntryIde=ne843TrsEntryIde, ne843CntEntryEna=ne843CntEntryEna, ne843RetireIvp1Irls=ne843RetireIvp1Irls, ne843BatEntryAdc=ne843BatEntryAdc, ne843Ps1Fan48=ne843Ps1Fan48, ne843RchEntryRpff=ne843RchEntryRpff, ne843Ivp1Ida=ne843Ivp1Ida, ne843Gn1Ide=ne843Gn1Ide, ne843UdeEntryLed=ne843UdeEntryLed, ne843RetirePs1Exl=ne843RetirePs1Exl, ne843Rpt1D030=ne843Rpt1D030, ne843Aco1=ne843Aco1, ne843RecEntryAcf=ne843RecEntryAcf, ne843Po1Cl02=ne843Po1Cl02, ne843Br1Scd=ne843Br1Scd, ne843Br1Hbt=ne843Br1Hbt, ne843Lp1Dbt=ne843Lp1Dbt, ne843RetireCn4Cnf=ne843RetireCn4Cnf, ne843CntEntryRtd=ne843CntEntryRtd, ne843DrcTable=ne843DrcTable, ne843PicEntryEporly=ne843PicEntryEporly, ne843TrapCn2Cnf=ne843TrapCn2Cnf, ne843RecEntryRfn=ne843RecEntryRfn, ne843Dc1Ralt=ne843Dc1Ralt, ne843RecEntryTmp=ne843RecEntryTmp, ne843Rpt1D025=ne843Rpt1D025, ne843TrapBr1Scda=ne843TrapBr1Scda, ne843Rpt1D111=ne843Rpt1D111, ne843InpEntryPol=ne843InpEntryPol, PYSNMP_MODULE_ID=ne843, ne843PicEntryOsae=ne843PicEntryOsae, ne843RecEntryAac=ne843RecEntryAac, ne843PicEntryFajae=ne843PicEntryFajae, ne843InvEntryCap=ne843InvEntryCap, ne843Eco1Ncap=ne843Eco1Ncap, ne843RetirePs1Fan48=ne843RetirePs1Fan48, ne843Sc1Des=ne843Sc1Des, ne843RecEntry=ne843RecEntry, ne843TrapBr1Bta=ne843TrapBr1Bta, ne843TrapCn3Cnf=ne843TrapCn3Cnf, ne843TrapBr1Isda=ne843TrapBr1Isda, ne843Gn1Pvd=ne843Gn1Pvd, ne843Rpt1D109=ne843Rpt1D109, ne843Rp1Rpfj=ne843Rp1Rpfj, ne843Dc1Stt=ne843Dc1Stt, ne843Rpt1D050=ne843Rpt1D050, ne843Mp1Wre=ne843Mp1Wre, ne843Net1Wre=ne843Net1Wre, ne843Net1Dhcp=ne843Net1Dhcp, ne843RetireDc1Slot=ne843RetireDc1Slot, ne843InvEntryIf1=ne843InvEntryIf1, ne843Rpt1D057=ne843Rpt1D057, ne843RecEntryDid1=ne843RecEntryDid1, ne843Dc1Buvht=ne843Dc1Buvht, ne843MsvEntryDes=ne843MsvEntryDes, prototypes=prototypes, ne843Rpt1D088=ne843Rpt1D088, ne843PvmEntryVal=ne843PvmEntryVal, ne843Dc1Fajb=ne843Dc1Fajb, ne843Acd1Pta=ne843Acd1Pta, ne843DcnEntrySn=ne843DcnEntrySn, ne843CntEntryDdy=ne843CntEntryDdy, ne843RetireDc1Tpa=ne843RetireDc1Tpa, ne843Cp1=ne843Cp1, ne843TrapPs1Ax2=ne843TrapPs1Ax2, ne843RetireDc1Ravht=ne843RetireDc1Ravht, ne843Ps1Dat=ne843Ps1Dat, ne843RetireCn3Cno=ne843RetireCn3Cno, ne843Rpt1D032=ne843Rpt1D032, ne843RetireIvp1Iof=ne843RetireIvp1Iof, ne843RetireIvp1Milv=ne843RetireIvp1Milv, ne843Ps1Fan24=ne843Ps1Fan24, ne843TrapRp1Rprl=ne843TrapRp1Rprl, ne843RetireDc1Buvht=ne843RetireDc1Buvht, ne843RetireIvp1Mif=ne843RetireIvp1Mif, ne843Rpt1D098=ne843Rpt1D098, ne843Rpt1D072=ne843Rpt1D072, ne843RetirePs1Bbl=ne843RetirePs1Bbl, ne843Gm1Rme=ne843Gm1Rme, ne843Gn1Pp=ne843Gn1Pp, ne843TrapCp1Cin=ne843TrapCp1Cin, ne843TrapCn1Cno=ne843TrapCn1Cno, ne843Br1Cle=ne843Br1Cle, ne843TrapDc1Mcm=ne843TrapDc1Mcm, ne843RetireCn3Cnf=ne843RetireCn3Cnf, ne843At1Ide=ne843At1Ide, ne843Ps1Nmn=ne843Ps1Nmn, ne843RetireCp1Cfn=ne843RetireCp1Cfn, ne843Aco1Cto=ne843Aco1Cto, ne843Gn1Mod=ne843Gn1Mod, ne843TrapDc1Clm=ne843TrapDc1Clm, ne843Rpt1D067=ne843Rpt1D067, ne843Gn1Hte=ne843Gn1Hte, ne843RetireDc1Acf=ne843RetireDc1Acf, ne843SndEntryIndex=ne843SndEntryIndex, ne843Rpt1D034=ne843Rpt1D034, ne843InvEntryIndex=ne843InvEntryIndex, ne843Aco1Nto=ne843Aco1Nto, ne843Tl1EntryAid=ne843Tl1EntryAid, ne843Eco1Skwh=ne843Eco1Skwh, ne843RetireCm1Nnc=ne843RetireCm1Nnc, ne843Lp1Tmo=ne843Lp1Tmo, ne843TrapDc1Rfa=ne843TrapDc1Rfa, ne843Rpt1D116=ne843Rpt1D116, ne843RecEntryDid=ne843RecEntryDid, ne843Acd1Syk=ne843Acd1Syk, ne843CopEntryBdr=ne843CopEntryBdr, ne843Ps1=ne843Ps1, ne843Gm1Lst=ne843Gm1Lst, ne843DpnEntryFaja=ne843DpnEntryFaja, ne843Ps1Nmj=ne843Ps1Nmj, ne843Po1Cl06=ne843Po1Cl06, ne843TrapIvp1Ida=ne843TrapIvp1Ida, ne843Dc1Btla=ne843Dc1Btla, ne843RetireDc1Raht=ne843RetireDc1Raht, ne843Ps1Nal=ne843Ps1Nal, ne843RetireRp1Rpfj=ne843RetireRp1Rpfj, ne843TrapCn2Cno=ne843TrapCn2Cno, ne843Dc1Hva=ne843Dc1Hva, ne843RetireDc1Hfv=ne843RetireDc1Hfv, ne843Ps1Lng=ne843Ps1Lng, ne843Rpt1D037=ne843Rpt1D037, ne843RetireDc1Pmf=ne843RetireDc1Pmf, ne843Br1Bfa=ne843Br1Bfa, ne843Ps1Tim=ne843Ps1Tim, ne843Gn1Mrt=ne843Gn1Mrt, ne843TrapPs1Ax11=ne843TrapPs1Ax11, ne843Rpt1D121=ne843Rpt1D121, ne843PcsEntryIndex=ne843PcsEntryIndex, ne843Rp1Rpxj=ne843Rp1Rpxj, ne843Sc1Lsp=ne843Sc1Lsp, ne843Eco1Des=ne843Eco1Des, ne843MsvEntryVal=ne843MsvEntryVal, ne843Ivp1Iof=ne843Ivp1Iof, ne843Dc1Sht=ne843Dc1Sht, ne843Tl1EntryCnd=ne843Tl1EntryCnd, ne843Dc1Emt=ne843Dc1Emt, ne843Ps1Ledl=ne843Ps1Ledl, ne843Net1Ll6=ne843Net1Ll6, ne843RetireDc1Osa=ne843RetireDc1Osa, ne843Br1Nvm=ne843Br1Nvm, ne843Rpt1D007=ne843Rpt1D007, ne843RetireCp1Rl=ne843RetireCp1Rl, ne843InvEntryIta1=ne843InvEntryIta1, ne843Net1Gtwy6=ne843Net1Gtwy6, ne843InvEntryIhvi=ne843InvEntryIhvi, ne843RetireIvp1If=ne843RetireIvp1If, ne843Rpt1D046=ne843Rpt1D046, ne843Rpt1D005=ne843Rpt1D005, ne843DpnEntryVdc=ne843DpnEntryVdc, ne843Rpt1D139=ne843Rpt1D139, ne843Gn1Pct=ne843Gn1Pct, ne843InpEntryStt=ne843InpEntryStt, ne843UdeEntryNor=ne843UdeEntryNor, ne843Rpt1D003=ne843Rpt1D003, ne843Ivp1Ide=ne843Ivp1Ide, ne843TrapBr1Btla=ne843TrapBr1Btla, ne843TrapPs1Ax1=ne843TrapPs1Ax1, ne843BtdEntry=ne843BtdEntry, ne843PcsTable=ne843PcsTable, ne843Dc1Btvh=ne843Dc1Btvh, ne843RetireGn1Gnr=ne843RetireGn1Gnr, ne843Rpt1D053=ne843Rpt1D053, ne843RchEntryCap=ne843RchEntryCap, ne843DccEntryCfa=ne843DccEntryCfa, ne843RetireDc1Pcaux=ne843RetireDc1Pcaux, ne843Ps1Dtf=ne843Ps1Dtf, ne843Po1Cl07=ne843Po1Cl07, ne843InvEntryIirm=ne843InvEntryIirm, ne843RecEntrySof1=ne843RecEntrySof1, ne843RetireDc1Pfs=ne843RetireDc1Pfs, ne843Dc1Did=ne843Dc1Did, ne843Rp1Rpff=ne843Rp1Rpff, ne843PicEntryVlvs=ne843PicEntryVlvs, ne843Acd1Psa=ne843Acd1Psa, ne843At1Dur=ne843At1Dur, ne843TrapIvp1Milv=ne843TrapIvp1Milv, ne843Cp1Dth=ne843Cp1Dth, ne843InvEntryIlvi=ne843InvEntryIlvi, ne843Gm1Fsp=ne843Gm1Fsp, ne843CopEntryDly=ne843CopEntryDly, ne843Rpt1D045=ne843Rpt1D045, ne843RetireDc1Ovla=ne843RetireDc1Ovla, ne843Mp1Ins=ne843Mp1Ins, ne843Po1Cl05=ne843Po1Cl05, ne843DccEntrySn=ne843DccEntrySn, ne843RetireCp1Icc=ne843RetireCp1Icc, ne843CntEntryCnf=ne843CntEntryCnf, ne843Acd1Pra=ne843Acd1Pra, ne843RetirePs1Ax3=ne843RetirePs1Ax3, ne843DbyEntryIde=ne843DbyEntryIde, ne843Cb1Ph1=ne843Cb1Ph1, ne843Br1Cap=ne843Br1Cap, ne843Dc1Vmf=ne843Dc1Vmf, ne843Rpt1D048=ne843Rpt1D048, ne843RetireCm1Cof=ne843RetireCm1Cof)
