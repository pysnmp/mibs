#
# PySNMP MIB module TELESTE-LUMINATO-MIB2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/teleste/TELESTE-LUMINATO-MIB2
# Produced by pysmi-1.1.12 at Wed May 29 02:49:19 2024
# On host fv-az569-426 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, ModuleIdentity, Integer32, MibIdentifier, Unsigned32, NotificationType, ObjectIdentity, Gauge32, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "Integer32", "MibIdentifier", "Unsigned32", "NotificationType", "ObjectIdentity", "Gauge32", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
luminato, = mibBuilder.importSymbols("TELESTE-ROOT-MIB", "luminato")
notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 3715, 17, 4))
params = MibIdentifier((1, 3, 6, 1, 4, 1, 3715, 17, 4, 1))
severity = MibScalar((1, 3, 6, 1, 4, 1, 3715, 17, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("severityEmergency", 0), ("severityAlert", 1), ("severityCritical", 2), ("severityError", 3), ("severityWarning", 4), ("severityNotice", 5), ("severityInformational", 6), ("severityDebug", 7), ("severityNominal", 8)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: severity.setStatus('current')
if mibBuilder.loadTexts: severity.setDescription('Severity level of alarm. severityNominal(8) means that alarm condition is removed.')
module = MibScalar((1, 3, 6, 1, 4, 1, 3715, 17, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("moduleChassis", 0), ("moduleSlot1", 1), ("moduleSlot2", 2), ("moduleSlot3", 3), ("moduleSlot4", 4), ("moduleSlot5", 5), ("moduleSlot6", 6), ("modulePsu", 7)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: module.setStatus('current')
if mibBuilder.loadTexts: module.setDescription('Module which cause the alarm.')
description = MibScalar((1, 3, 6, 1, 4, 1, 3715, 17, 4, 1, 8), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: description.setStatus('current')
if mibBuilder.loadTexts: description.setDescription('Description.')
reason = MibScalar((1, 3, 6, 1, 4, 1, 3715, 17, 4, 1, 10), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: reason.setStatus('current')
if mibBuilder.loadTexts: reason.setDescription('Reason code.')
paramTable = MibTable((1, 3, 6, 1, 4, 1, 3715, 17, 4, 1, 11), )
if mibBuilder.loadTexts: paramTable.setStatus('optional')
paramEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3715, 17, 4, 1, 11, 1), ).setMaxAccess("accessiblefornotify").setIndexNames((0, "TELESTE-LUMINATO-MIB2", "paramIdx"))
if mibBuilder.loadTexts: paramEntry.setStatus('current')
paramIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3715, 17, 4, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: paramIdx.setStatus('current')
if mibBuilder.loadTexts: paramIdx.setDescription('Index of the table.')
paramValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3715, 17, 4, 1, 11, 1, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: paramValue.setStatus('current')
if mibBuilder.loadTexts: paramValue.setDescription('Value of param.')
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2))
generic = MibIdentifier((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 1))
extendedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 1, 1)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedAlarmEvent.setDescription('The generic SNMP trap that is generated when an alarm event is found.')
specific = MibIdentifier((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2))
extendedPidMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 2)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedPidMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedPidMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 2 - 'PID missing' is found.")
extendedServiceMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 3)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedServiceMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedServiceMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 3 - 'Service missing' is found.")
extendedPidConflictAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedPidConflictAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedPidConflictAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4 - 'PID conflict' is found.")
extendedTemperatureTooHighAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 6)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedTemperatureTooHighAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedTemperatureTooHighAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 6 - 'Temperature too high' is found.")
extendedTemperatureTooLowAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 7)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedTemperatureTooLowAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedTemperatureTooLowAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 7 - 'Temperature too low' is found.")
extendedManualTableInsertionFailedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 8)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedManualTableInsertionFailedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedManualTableInsertionFailedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 8 - 'Manual table insertion failed' is found.")
extendedAlertMessageAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 10)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedAlertMessageAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedAlertMessageAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 10 - 'Alert message' is found.")
extendedServicesPassthroughAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 11)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedServicesPassthroughAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedServicesPassthroughAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 11 - 'Services passthrough - duplicated SID from input stream not passed through' is found.")
extendedPsigTableInsertionFailedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 15)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedPsigTableInsertionFailedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedPsigTableInsertionFailedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 15 - 'Psig table insertion failed' is found.")
extendedModuleOffAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4096)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedModuleOffAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedModuleOffAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4096 - 'Off' is found.")
extendedSignalMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4097)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedSignalMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedSignalMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4097 - 'Signal missing' is found.")
extendedNoTsSyncAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4098)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedNoTsSyncAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedNoTsSyncAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4098 - 'No TS sync' is found.")
extendedTsRxErrorsAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4099)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedTsRxErrorsAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedTsRxErrorsAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4099 - 'TS RX errors' is found.")
extendedTsInputBufferOverflowAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4100)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedTsInputBufferOverflowAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedTsInputBufferOverflowAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4100 - 'TS input buffer overflow' is found.")
extendedAsiLinkDownAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4102)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedAsiLinkDownAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedAsiLinkDownAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4102 - 'ASI link down' is found.")
extendedForbiddenNetworkAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4103)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedForbiddenNetworkAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedForbiddenNetworkAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4103 - 'Forbidden network' is found.")
extendedPidCapacityExceededAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4104)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedPidCapacityExceededAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedPidCapacityExceededAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4104 - 'PID capacity exceeded' is found.")
extendedPsiSiCaptureCapacityExceededAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4105)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedPsiSiCaptureCapacityExceededAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedPsiSiCaptureCapacityExceededAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4105 - 'PSI/SI capture capacity exceeded' is found.")
extendedOutOfServiceIdsAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4106)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedOutOfServiceIdsAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedOutOfServiceIdsAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4106 - 'Out of service ID's' is found.")
extendedCaModuleMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4108)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCaModuleMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCaModuleMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4108 - 'CA module missing' is found.")
extendedPsiSiInsertCapacityExceededAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4109)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedPsiSiInsertCapacityExceededAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedPsiSiInsertCapacityExceededAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4109 - 'PSI/SI insert capacity exceeded' is found.")
extendedMultiplexOversubscriptionPacketsDiscardedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4110)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedMultiplexOversubscriptionPacketsDiscardedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedMultiplexOversubscriptionPacketsDiscardedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4110 - 'Multiplex oversubscription, packets discarded' is found.")
extendedUnknownModuleAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4111)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUnknownModuleAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUnknownModuleAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4111 - 'Unknown module' is found.")
extendedMainVoltageTooHighAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4112)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedMainVoltageTooHighAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedMainVoltageTooHighAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4112 - 'Main voltage too high' is found.")
extendedMainVoltageTooLowAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4113)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedMainVoltageTooLowAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedMainVoltageTooLowAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4113 - 'Main voltage too low' is found.")
extendedCurrentTooHighAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4114)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCurrentTooHighAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCurrentTooHighAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4114 - 'Current too high' is found.")
extendedCurrentTooLowAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4115)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCurrentTooLowAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCurrentTooLowAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4115 - 'Current too low' is found.")
extendedDaemonInitializationFailedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4127)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDaemonInitializationFailedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDaemonInitializationFailedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4127 - 'Daemon initialization failed' is found.")
extendedDeviceDriverFailureAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4129)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDeviceDriverFailureAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDeviceDriverFailureAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4129 - 'Device driver failure' is found.")
extendedHardwareFailureAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4130)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedHardwareFailureAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedHardwareFailureAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4130 - 'Hardware failure' is found.")
extendedFanFailureAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4131)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedFanFailureAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedFanFailureAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4131 - 'Fan failure' is found.")
extendedRunningOnBackupPowerAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4132)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedRunningOnBackupPowerAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedRunningOnBackupPowerAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4132 - 'Running on backup power' is found.")
extendedPowerSupplyOverloadedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4133)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedPowerSupplyOverloadedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedPowerSupplyOverloadedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4133 - 'Power supply overloaded' is found.")
extendedBootingUpAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4134)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBootingUpAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBootingUpAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4134 - 'Booting up' is found.")
extendedBootFailedRetryingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4135)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBootFailedRetryingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBootFailedRetryingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4135 - 'Boot failed: retrying' is found.")
extendedBootFailedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4136)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBootFailedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBootFailedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4136 - 'Boot failed' is found.")
extendedShuttingDownAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4137)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedShuttingDownAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedShuttingDownAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4137 - 'Shutting down' is found.")
extendedConnectionLostAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4138)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedConnectionLostAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedConnectionLostAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4138 - 'Connection lost' is found.")
extendedIncompatibleModuleDisabledAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4139)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedIncompatibleModuleDisabledAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedIncompatibleModuleDisabledAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4139 - 'Incompatible module disabled' is found.")
extendedFailedToBootAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4141)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedFailedToBootAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedFailedToBootAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4141 - 'Failed to boot' is found.")
extendedUpcTooLowInputPowerAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4147)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUpcTooLowInputPowerAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUpcTooLowInputPowerAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4147 - 'UPC too low input power' is found.")
extendedUpcTooHighInputPowerAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4148)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUpcTooHighInputPowerAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUpcTooHighInputPowerAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4148 - 'UPC too high input power' is found.")
extendedCalibrationDataMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4149)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCalibrationDataMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCalibrationDataMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4149 - 'Calibration data missing' is found.")
extendedCalibrationCheckSkippedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4150)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCalibrationCheckSkippedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCalibrationCheckSkippedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4150 - 'Calibration check skipped' is found.")
extendedDescramblingFailureAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4151)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDescramblingFailureAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDescramblingFailureAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4151 - 'Descrambling failure' is found.")
extendedBackupSwitchedOverToBackupDeviceAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4153)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupSwitchedOverToBackupDeviceAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupSwitchedOverToBackupDeviceAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4153 - 'Backup: Switched over to backup device' is found.")
extendedFailedToQuerySomeOfTheNitDataAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4157)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedFailedToQuerySomeOfTheNitDataAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedFailedToQuerySomeOfTheNitDataAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4157 - 'Failed to query some of the NIT data' is found.")
extendedNitWizardFailureAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4158)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedNitWizardFailureAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedNitWizardFailureAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4158 - 'NIT wizard failure' is found.")
extendedDuplicateFrequencyInTwoOrMoreSelectedQamOutputsAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4159)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDuplicateFrequencyInTwoOrMoreSelectedQamOutputsAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDuplicateFrequencyInTwoOrMoreSelectedQamOutputsAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4159 - 'Duplicate frequency in two or more selected QAM outputs' is found.")
extendedCannotResolveTableVersionUsingDefaultAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4160)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCannotResolveTableVersionUsingDefaultAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCannotResolveTableVersionUsingDefaultAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4160 - 'Cannot resolve table version: using default' is found.")
extendedSidConflictAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4173)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedSidConflictAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedSidConflictAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4173 - 'SID conflict' is found.")
extendedUnsupportedConfigurationAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4175)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUnsupportedConfigurationAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUnsupportedConfigurationAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4175 - 'Unsupported configuration' is found.")
extendedFrequencyOutOfRangeAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4176)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedFrequencyOutOfRangeAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedFrequencyOutOfRangeAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4176 - 'Frequency out of range' is found.")
extendedOutputPowerOutOfRangeAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4177)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedOutputPowerOutOfRangeAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedOutputPowerOutOfRangeAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4177 - 'Output power out of range' is found.")
extendedSymbolrateOutOfRangeAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4178)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedSymbolrateOutOfRangeAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedSymbolrateOutOfRangeAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4178 - 'Symbolrate out of range' is found.")
extendedChannelDistanceTooNarrowAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4179)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedChannelDistanceTooNarrowAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedChannelDistanceTooNarrowAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4179 - 'Channel distance too narrow' is found.")
extendedInvalidLnbVoltageConfigurationAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4180)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedInvalidLnbVoltageConfigurationAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedInvalidLnbVoltageConfigurationAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4180 - 'Invalid LNB voltage configuration' is found.")
extendedInvalidFecRateForSelectedModulationAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4181)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedInvalidFecRateForSelectedModulationAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedInvalidFecRateForSelectedModulationAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4181 - 'Invalid FEC rate for selected modulation' is found.")
extendedLnbCurrentAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4182)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedLnbCurrentAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedLnbCurrentAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4182 - 'LNB current' is found.")
extendedFrequencyOffsetAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4183)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedFrequencyOffsetAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedFrequencyOffsetAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4183 - 'Frequency offset' is found.")
extendedRestartingDescramblingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4185)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedRestartingDescramblingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedRestartingDescramblingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4185 - 'Restarting descrambling' is found.")
extendedRebootingCamAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4186)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedRebootingCamAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedRebootingCamAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4186 - 'Rebooting CAM' is found.")
extendedEcmgFailureAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4187)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedEcmgFailureAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedEcmgFailureAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4187 - 'ECMG failure' is found.")
extendedEcmStreamFailureAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4188)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedEcmStreamFailureAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedEcmStreamFailureAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4188 - 'ECM stream failure' is found.")
extendedEmmFailureAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4189)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedEmmFailureAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedEmmFailureAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4189 - 'EMM failure' is found.")
extendedEmmStreamFailureAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4190)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedEmmStreamFailureAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedEmmStreamFailureAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4190 - 'EMM stream failure' is found.")
extendedEcmgNotConnectedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4191)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedEcmgNotConnectedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedEcmgNotConnectedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4191 - 'ECMG not connected' is found.")
extendedEmmNotConnectedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4192)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedEmmNotConnectedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedEmmNotConnectedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4192 - 'EMM not connected' is found.")
extendedScsNotLicensedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4193)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedScsNotLicensedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedScsNotLicensedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4193 - 'SCS not licensed' is found.")
extendedEcmgSwitchedToSpareServerAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4194)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedEcmgSwitchedToSpareServerAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedEcmgSwitchedToSpareServerAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4194 - 'ECMG switched to spare server' is found.")
extendedUpdatedBootLoaderAvailableAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4195)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUpdatedBootLoaderAvailableAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUpdatedBootLoaderAvailableAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4195 - 'Updated boot loader available' is found.")
extendedUpdatingStage1BootLoaderAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4196)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUpdatingStage1BootLoaderAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUpdatingStage1BootLoaderAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4196 - 'Updating stage 1 boot loader' is found.")
extendedUpdatingStage2BootLoaderAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4197)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUpdatingStage2BootLoaderAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUpdatingStage2BootLoaderAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4197 - 'Updating stage 2 boot loader' is found.")
extendedFailedToUpdateStage1BootLoaderAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4198)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedFailedToUpdateStage1BootLoaderAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedFailedToUpdateStage1BootLoaderAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4198 - 'Failed to update stage 1 boot loader' is found.")
extendedFailedToUpdateStage2BootLoaderAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4199)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedFailedToUpdateStage2BootLoaderAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedFailedToUpdateStage2BootLoaderAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4199 - 'Failed to update stage 2 boot loader' is found.")
extendedBackupActiveBackupAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4203)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupActiveBackupAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupActiveBackupAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4203 - 'Backup: Active Backup' is found.")
extendedConfiguringModuleAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4205)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedConfiguringModuleAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedConfiguringModuleAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4205 - 'Configuring module' is found.")
extendedNoModuleAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4206)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedNoModuleAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedNoModuleAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4206 - 'No module' is found.")
extendedProcessStartedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4208)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedProcessStartedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedProcessStartedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4208 - 'Process started' is found.")
extendedBackupLicenseMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4209)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupLicenseMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupLicenseMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4209 - 'Backup license missing' is found.")
extendedMultiplexingLicenseMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4211)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedMultiplexingLicenseMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedMultiplexingLicenseMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4211 - 'Multiplexing license missing' is found.")
extendedDemultiplexingLicenseMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4212)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDemultiplexingLicenseMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDemultiplexingLicenseMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4212 - 'Demultiplexing license missing' is found.")
extendedDvbProcessingLicenseMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4213)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDvbProcessingLicenseMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDvbProcessingLicenseMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4213 - 'DVB processing license missing' is found.")
extendedMsdLicenseMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4214)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedMsdLicenseMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedMsdLicenseMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4214 - 'MSD license missing' is found.")
extendedDvbS2LicenseMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4215)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDvbS2LicenseMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDvbS2LicenseMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4215 - 'DVB-S2 license missing' is found.")
extendedScramblingLicenseMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4216)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedScramblingLicenseMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedScramblingLicenseMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4216 - 'Scrambling license missing' is found.")
extendedScsLicenseMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4217)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedScsLicenseMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedScsLicenseMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4217 - 'SCS license missing' is found.")
extendedUserFromGroupAdminIsUsingCliAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4218)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUserFromGroupAdminIsUsingCliAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUserFromGroupAdminIsUsingCliAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4218 - 'User from group admin is using CLI' is found.")
extendedUserFromGroupInstallIsUsingCliAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4219)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUserFromGroupInstallIsUsingCliAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUserFromGroupInstallIsUsingCliAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4219 - 'User from group install is using CLI' is found.")
extendedUserFromGroupOperIsUsingCliAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4220)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUserFromGroupOperIsUsingCliAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUserFromGroupOperIsUsingCliAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4220 - 'User from group oper is using CLI' is found.")
extendedUserFromGroupMonitorIsUsingCliAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4221)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUserFromGroupMonitorIsUsingCliAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUserFromGroupMonitorIsUsingCliAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4221 - 'User from group monitor is using CLI' is found.")
extendedRedundancyActivatedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4222)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedRedundancyActivatedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedRedundancyActivatedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4222 - 'Redundancy activated' is found.")
extendedExtIoSignaledAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4223)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedExtIoSignaledAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedExtIoSignaledAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4223 - 'EXT IO Signaled' is found.")
extendedExtIoBackupPowerSupplyFailureAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4224)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedExtIoBackupPowerSupplyFailureAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedExtIoBackupPowerSupplyFailureAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4224 - 'EXT IO Backup power supply failure' is found.")
extendedExtIoIntrusionDetectedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4225)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedExtIoIntrusionDetectedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedExtIoIntrusionDetectedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4225 - 'EXT IO Intrusion detected' is found.")
extendedLinkMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4226)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedLinkMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedLinkMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4226 - 'Link missing' is found.")
extendedRedundancyFailedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4227)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedRedundancyFailedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedRedundancyFailedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4227 - 'Redundancy failed' is found.")
extendedMultiplexOversubscriptionPacketsDelayedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4228)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedMultiplexOversubscriptionPacketsDelayedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedMultiplexOversubscriptionPacketsDelayedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4228 - 'Multiplex oversubscription, packets delayed' is found.")
extendedCbrOutputOversubscriptionAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4229)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCbrOutputOversubscriptionAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCbrOutputOversubscriptionAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4229 - 'CBR output oversubscription' is found.")
extendedBackupHwDoesNotSupportSelectedDeviceRoleAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4230)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupHwDoesNotSupportSelectedDeviceRoleAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupHwDoesNotSupportSelectedDeviceRoleAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4230 - 'Backup: HW does not support selected device role, fallback to Standalone role' is found.")
extendedSoftwareUpdateInProgressAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4231)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedSoftwareUpdateInProgressAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedSoftwareUpdateInProgressAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4231 - 'Software update in progress' is found.")
extendedSoftwareUpdateReadyWaitingForRebootToCompleteAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4232)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedSoftwareUpdateReadyWaitingForRebootToCompleteAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedSoftwareUpdateReadyWaitingForRebootToCompleteAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4232 - 'Software update ready. Waiting for reboot to complete' is found.")
extendedSoftwareUpdateFailedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4233)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedSoftwareUpdateFailedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedSoftwareUpdateFailedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4233 - 'Software update failed' is found.")
extendedBackupModuleHwDoesNotSupportSelectedOnePlusOneBackupRoleAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4234)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupModuleHwDoesNotSupportSelectedOnePlusOneBackupRoleAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupModuleHwDoesNotSupportSelectedOnePlusOneBackupRoleAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4234 - 'Backup: Module HW does not support selected 1+1 backup role' is found.")
extendedEitProcessingLicenseMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4235)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedEitProcessingLicenseMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedEitProcessingLicenseMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4235 - 'EIT processing license missing' is found.")
extendedCbrOutputOversubscriptionPacketsDiscardedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4236)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCbrOutputOversubscriptionPacketsDiscardedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCbrOutputOversubscriptionPacketsDiscardedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4236 - 'CBR output oversubscription, packets discarded' is found.")
extendedDescramblingFailedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4237)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDescramblingFailedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDescramblingFailedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4237 - 'Descrambling failed' is found.")
extendedIpInputCapacityExceededAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4238)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedIpInputCapacityExceededAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedIpInputCapacityExceededAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4238 - 'IP input capacity exceeded' is found.")
extendedEitReinsertCapacityExceededAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4239)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedEitReinsertCapacityExceededAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedEitReinsertCapacityExceededAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4239 - 'EIT reinsert capacity exceeded' is found.")
extendedRtpInputErrorsDroppedPacketsAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4241)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedRtpInputErrorsDroppedPacketsAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedRtpInputErrorsDroppedPacketsAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4241 - 'RTP input errors, dropped packets' is found.")
extendedRtpInputPacketSequenceAnomaliesDetectedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4242)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedRtpInputPacketSequenceAnomaliesDetectedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedRtpInputPacketSequenceAnomaliesDetectedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4242 - 'RTP input packet sequence anomalies detected' is found.")
extendedDvbTimeMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4243)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDvbTimeMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDvbTimeMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4243 - 'DVB time missing' is found.")
extendedDvbT2LicenseMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4244)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDvbT2LicenseMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDvbT2LicenseMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4244 - 'DVB-T2 license missing' is found.")
extendedDcFeedCurrentAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4245)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDcFeedCurrentAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDcFeedCurrentAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4245 - 'DC feed current' is found.")
extendedNotGeneratingTdtTotTableWaitingForCorrectSystemTimeAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4246)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedNotGeneratingTdtTotTableWaitingForCorrectSystemTimeAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedNotGeneratingTdtTotTableWaitingForCorrectSystemTimeAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4246 - 'Not generating TDT/TOT table. Waiting for correct system time' is found.")
extendedDataPlpIdSelectionRequiredAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4247)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDataPlpIdSelectionRequiredAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDataPlpIdSelectionRequiredAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4247 - 'Data PLP ID selection required' is found.")
extendedDataPlpIdSelectionNotValidAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4248)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDataPlpIdSelectionNotValidAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDataPlpIdSelectionNotValidAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4248 - 'Data PLP ID selection not valid' is found.")
extendedHierarchyHpSelectedForNonAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4249)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedHierarchyHpSelectedForNonAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedHierarchyHpSelectedForNonAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4249 - 'Hierarchy HP selected for non-hierarchical transmission' is found.")
extendedEcmMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4250)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedEcmMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedEcmMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4250 - 'ECM missing' is found.")
extendedScramblingConflictInSharedComponentAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4251)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedScramblingConflictInSharedComponentAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedScramblingConflictInSharedComponentAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4251 - 'Scrambling conflict in shared component' is found.")
extendedScrambledSharedComponentAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4252)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedScrambledSharedComponentAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedScrambledSharedComponentAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4252 - 'Scrambled shared component' is found.")
extendedBackupVoltageTooHighAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4253)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupVoltageTooHighAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupVoltageTooHighAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4253 - 'Backup voltage too high' is found.")
extendedBackupVoltageTooLowAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4254)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupVoltageTooLowAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupVoltageTooLowAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4254 - 'Backup voltage too low' is found.")
extendedInvalidSdtTemplateAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4255)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedInvalidSdtTemplateAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedInvalidSdtTemplateAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4255 - 'Invalid SDT template' is found.")
extendedCamFailureActionTakenRestartingDescramblingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4256)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCamFailureActionTakenRestartingDescramblingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCamFailureActionTakenRestartingDescramblingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4256 - 'CAM Failure action taken: restarting descrambling' is found.")
extendedCamFailureActionTakenRebootingCaModuleAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4257)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCamFailureActionTakenRebootingCaModuleAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCamFailureActionTakenRebootingCaModuleAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4257 - 'CAM Failure action taken: rebooting CA module' is found.")
extendedCaMenuIsOpenAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4258)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCaMenuIsOpenAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCaMenuIsOpenAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4258 - 'CA menu is open' is found.")
extendedCannotDescrambleDueToCamRoutingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4259)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCannotDescrambleDueToCamRoutingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCannotDescrambleDueToCamRoutingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4259 - 'Cannot descramble due to CAM routing' is found.")
extendedNitSidConflictAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4260)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedNitSidConflictAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedNitSidConflictAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4260 - 'SID conflict in output' is found.")
extendedNotGeneratingSttTableWaitingForCorrectSystemTimeAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4261)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedNotGeneratingSttTableWaitingForCorrectSystemTimeAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedNotGeneratingSttTableWaitingForCorrectSystemTimeAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4261 - 'Not generating STT table. Waiting for correct system time' is found.")
extendedNumberOfFecLicensesExceededAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4262)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedNumberOfFecLicensesExceededAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedNumberOfFecLicensesExceededAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4262 - 'Number of FEC licenses exceeded' is found.")
extendedErrorCorrectionOverloadTooManySimultaneousMissingPacketsAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4263)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedErrorCorrectionOverloadTooManySimultaneousMissingPacketsAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedErrorCorrectionOverloadTooManySimultaneousMissingPacketsAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4263 - 'Error correction overload. Too many simultaneous missing packets.' is found.")
extendedFecPacketsDiscardedModuleBitrateTooHighAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4264)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedFecPacketsDiscardedModuleBitrateTooHighAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedFecPacketsDiscardedModuleBitrateTooHighAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4264 - 'FEC packets discarded. Module bitrate too high.' is found.")
extendedMediaPacketsDiscardedModuleBitrateTooHighAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4265)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedMediaPacketsDiscardedModuleBitrateTooHighAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedMediaPacketsDiscardedModuleBitrateTooHighAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4265 - 'Media packets discarded. Module bitrate too high.' is found.")
extendedFecHasCorrectedPacketsAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4266)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedFecHasCorrectedPacketsAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedFecHasCorrectedPacketsAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4266 - 'FEC has corrected packets' is found.")
extendedFecInputAnomaliesDetectedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4267)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedFecInputAnomaliesDetectedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedFecInputAnomaliesDetectedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4267 - 'FEC input anomalies detected' is found.")
extendedFecErrorCorrectionCapacityExceededAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4268)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedFecErrorCorrectionCapacityExceededAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedFecErrorCorrectionCapacityExceededAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4268 - 'FEC error correction capacity exceeded' is found.")
extendedSfpLinkDownAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4269)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedSfpLinkDownAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedSfpLinkDownAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4269 - 'SFP link down' is found.")
extendedBackupsyncTurnedOffAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4272)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncTurnedOffAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncTurnedOffAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4272 - 'BackupSync: Turned off' is found.")
extendedBackupsyncManualModeAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4273)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncManualModeAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncManualModeAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4273 - 'BackupSync: Manual mode' is found.")
extendedBackupsyncAutomaticModeAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4274)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncAutomaticModeAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncAutomaticModeAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4274 - 'BackupSync: Automatic mode' is found.")
extendedBackupsyncConfigurationWillBeSynchronizedAutomaticallyAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4275)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncConfigurationWillBeSynchronizedAutomaticallyAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncConfigurationWillBeSynchronizedAutomaticallyAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4275 - 'BackupSync: Configuration will be synchronized automatically' is found.")
extendedBackupsyncSynchronizingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4276)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncSynchronizingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncSynchronizingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4276 - 'BackupSync: Synchronizing' is found.")
extendedBackupsyncSwCompatibilityCheckAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4278)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncSwCompatibilityCheckAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncSwCompatibilityCheckAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4278 - 'BackupSync: SW compatibility check' is found.")
extendedBackupsyncHwCompatibilityCheckAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4279)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncHwCompatibilityCheckAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncHwCompatibilityCheckAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4279 - 'BackupSync: HW compatibility check' is found.")
extendedBackupsyncConfigurationFaultAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4280)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncConfigurationFaultAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncConfigurationFaultAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4280 - 'BackupSync: Configuration fault' is found.")
extendedBackupsyncConnectionLostAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4281)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncConnectionLostAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncConnectionLostAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4281 - 'BackupSync: Connection lost' is found.")
extendedBackupsyncAutosyncNotPossibleFromBackupToMainAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4283)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncAutosyncNotPossibleFromBackupToMainAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncAutosyncNotPossibleFromBackupToMainAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4283 - 'BackupSync: Autosync not possible from backup to main' is found.")
extendedBackupsyncRebootingPairDeviceToNewConfigurationAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4284)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncRebootingPairDeviceToNewConfigurationAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncRebootingPairDeviceToNewConfigurationAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4284 - 'BackupSync: Rebooting pair device to new configuration' is found.")
extendedBackupsyncCheckLicenseCompatibilityAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4285)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncCheckLicenseCompatibilityAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncCheckLicenseCompatibilityAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4285 - 'BackupSync: Check license compatibility!' is found.")
extendedBackupsyncLicenseCompatibilityCheckAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4286)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedBackupsyncLicenseCompatibilityCheckAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedBackupsyncLicenseCompatibilityCheckAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4286 - 'BackupSync: License compatibility check' is found.")
extendedDeviceFirstBootActionsAreInProgressAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4288)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDeviceFirstBootActionsAreInProgressAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDeviceFirstBootActionsAreInProgressAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4288 - 'Device first boot actions are in progress' is found.")
extendedDeviceConfigurationBackupInProgressAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4289)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDeviceConfigurationBackupInProgressAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDeviceConfigurationBackupInProgressAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4289 - 'Device configuration backup in progress' is found.")
extendedDeviceConfigurationRestoreInProgressAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4290)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDeviceConfigurationRestoreInProgressAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDeviceConfigurationRestoreInProgressAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4290 - 'Device configuration restore in progress' is found.")
extendedDeviceOtherSoftwareActivationAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4291)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDeviceOtherSoftwareActivationAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDeviceOtherSoftwareActivationAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4291 - 'Device other software activation' is found.")
extendedTooManyOutputPidsConfiguredAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4292)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedTooManyOutputPidsConfiguredAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedTooManyOutputPidsConfiguredAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4292 - 'Too many output PIDs configured! Some PIDs are dropped.' is found.")
extendedRebootRequestByUserAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4293)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedRebootRequestByUserAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedRebootRequestByUserAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4293 - 'Reboot request by user' is found.")
extendedRemovedFromTheChassisAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4294)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedRemovedFromTheChassisAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedRemovedFromTheChassisAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4294 - 'Removed from the chassis' is found.")
extendedInsertedIntoTheChassisAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4295)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedInsertedIntoTheChassisAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedInsertedIntoTheChassisAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4295 - 'Inserted into the chassis' is found.")
extendedUsedInputIsNotSptsAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4296)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedUsedInputIsNotSptsAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedUsedInputIsNotSptsAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4296 - 'Used input is not SPTS' is found.")
extendedPacketsDiscardedInIpMirrorOutputsAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4297)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedPacketsDiscardedInIpMirrorOutputsAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedPacketsDiscardedInIpMirrorOutputsAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4297 - 'Packets discarded in IP mirror outputs' is found.")
extendedAesLicenseMissingAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4298)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedAesLicenseMissingAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedAesLicenseMissingAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4298 - 'AES license missing' is found.")
extendedSymbolRateTooHighForSelectedModulationSelectHighSpeedModulationModeToAvoidErrorsAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4299)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedSymbolRateTooHighForSelectedModulationSelectHighSpeedModulationModeToAvoidErrorsAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedSymbolRateTooHighForSelectedModulationSelectHighSpeedModulationModeToAvoidErrorsAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4299 - 'Symbol rate too high for selected modulation (tuner %6%). Select high speed modulation mode to avoid errors.' is found.")
extendedEcmResponsesDelayedAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4300)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedEcmResponsesDelayedAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedEcmResponsesDelayedAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4300 - 'ECM responses delayed' is found.")
extendedCwGroupConflictAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4301)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedCwGroupConflictAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedCwGroupConflictAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4301 - 'CW group conflict' is found.")
extendedDisconnectedHostInMultichassisGroupAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4302)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedDisconnectedHostInMultichassisGroupAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedDisconnectedHostInMultichassisGroupAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4302 - 'Disconnected host(s) in multichassis group' is found.")
extendedMultichassisConfigurationFailureAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4303)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedMultichassisConfigurationFailureAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedMultichassisConfigurationFailureAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4303 - 'Multichassis configuration failure' is found.")
extendedSwVersionDifferenceWithinMultichassisGroupAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4304)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedSwVersionDifferenceWithinMultichassisGroupAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedSwVersionDifferenceWithinMultichassisGroupAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4304 - 'SW version difference within multichassis group' is found.")
extendedSwVersionMismatchAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3715, 17, 4, 2, 2, 4305)).setObjects(("TELESTE-LUMINATO-MIB2", "severity"), ("TELESTE-LUMINATO-MIB2", "module"), ("TELESTE-LUMINATO-MIB2", "reason"), ("TELESTE-LUMINATO-MIB2", "description"), ("TELESTE-LUMINATO-MIB2", "paramTable"))
if mibBuilder.loadTexts: extendedSwVersionMismatchAlarmEvent.setStatus('current')
if mibBuilder.loadTexts: extendedSwVersionMismatchAlarmEvent.setDescription("The SNMP trap that is generated when an alarm event with id 4305 - 'SW version mismatch (module %6%)' is found.")
mibBuilder.exportSymbols("TELESTE-LUMINATO-MIB2", extendedDaemonInitializationFailedAlarmEvent=extendedDaemonInitializationFailedAlarmEvent, extendedBootingUpAlarmEvent=extendedBootingUpAlarmEvent, extendedRemovedFromTheChassisAlarmEvent=extendedRemovedFromTheChassisAlarmEvent, extendedFrequencyOffsetAlarmEvent=extendedFrequencyOffsetAlarmEvent, extendedSoftwareUpdateFailedAlarmEvent=extendedSoftwareUpdateFailedAlarmEvent, extendedBackupsyncSwCompatibilityCheckAlarmEvent=extendedBackupsyncSwCompatibilityCheckAlarmEvent, extendedBackupsyncAutosyncNotPossibleFromBackupToMainAlarmEvent=extendedBackupsyncAutosyncNotPossibleFromBackupToMainAlarmEvent, extendedDvbT2LicenseMissingAlarmEvent=extendedDvbT2LicenseMissingAlarmEvent, extendedNotGeneratingTdtTotTableWaitingForCorrectSystemTimeAlarmEvent=extendedNotGeneratingTdtTotTableWaitingForCorrectSystemTimeAlarmEvent, extendedMediaPacketsDiscardedModuleBitrateTooHighAlarmEvent=extendedMediaPacketsDiscardedModuleBitrateTooHighAlarmEvent, extendedTemperatureTooHighAlarmEvent=extendedTemperatureTooHighAlarmEvent, extendedRedundancyFailedAlarmEvent=extendedRedundancyFailedAlarmEvent, module=module, extendedPidCapacityExceededAlarmEvent=extendedPidCapacityExceededAlarmEvent, extendedUpdatedBootLoaderAvailableAlarmEvent=extendedUpdatedBootLoaderAvailableAlarmEvent, specific=specific, extendedFanFailureAlarmEvent=extendedFanFailureAlarmEvent, extendedUnsupportedConfigurationAlarmEvent=extendedUnsupportedConfigurationAlarmEvent, extendedScramblingLicenseMissingAlarmEvent=extendedScramblingLicenseMissingAlarmEvent, extendedEitReinsertCapacityExceededAlarmEvent=extendedEitReinsertCapacityExceededAlarmEvent, extendedPidConflictAlarmEvent=extendedPidConflictAlarmEvent, extendedFailedToUpdateStage1BootLoaderAlarmEvent=extendedFailedToUpdateStage1BootLoaderAlarmEvent, extendedSoftwareUpdateInProgressAlarmEvent=extendedSoftwareUpdateInProgressAlarmEvent, extendedDeviceOtherSoftwareActivationAlarmEvent=extendedDeviceOtherSoftwareActivationAlarmEvent, extendedUpcTooLowInputPowerAlarmEvent=extendedUpcTooLowInputPowerAlarmEvent, extendedDuplicateFrequencyInTwoOrMoreSelectedQamOutputsAlarmEvent=extendedDuplicateFrequencyInTwoOrMoreSelectedQamOutputsAlarmEvent, extendedOutOfServiceIdsAlarmEvent=extendedOutOfServiceIdsAlarmEvent, extendedMainVoltageTooHighAlarmEvent=extendedMainVoltageTooHighAlarmEvent, paramEntry=paramEntry, extendedSwVersionMismatchAlarmEvent=extendedSwVersionMismatchAlarmEvent, extendedBackupsyncRebootingPairDeviceToNewConfigurationAlarmEvent=extendedBackupsyncRebootingPairDeviceToNewConfigurationAlarmEvent, extendedFailedToQuerySomeOfTheNitDataAlarmEvent=extendedFailedToQuerySomeOfTheNitDataAlarmEvent, extendedSoftwareUpdateReadyWaitingForRebootToCompleteAlarmEvent=extendedSoftwareUpdateReadyWaitingForRebootToCompleteAlarmEvent, extendedInsertedIntoTheChassisAlarmEvent=extendedInsertedIntoTheChassisAlarmEvent, description=description, extendedNoTsSyncAlarmEvent=extendedNoTsSyncAlarmEvent, extendedCaModuleMissingAlarmEvent=extendedCaModuleMissingAlarmEvent, extendedCwGroupConflictAlarmEvent=extendedCwGroupConflictAlarmEvent, extendedBackupsyncManualModeAlarmEvent=extendedBackupsyncManualModeAlarmEvent, extendedCannotResolveTableVersionUsingDefaultAlarmEvent=extendedCannotResolveTableVersionUsingDefaultAlarmEvent, extendedScrambledSharedComponentAlarmEvent=extendedScrambledSharedComponentAlarmEvent, extendedServicesPassthroughAlarmEvent=extendedServicesPassthroughAlarmEvent, extendedExtIoBackupPowerSupplyFailureAlarmEvent=extendedExtIoBackupPowerSupplyFailureAlarmEvent, extendedRtpInputErrorsDroppedPacketsAlarmEvent=extendedRtpInputErrorsDroppedPacketsAlarmEvent, extendedFecErrorCorrectionCapacityExceededAlarmEvent=extendedFecErrorCorrectionCapacityExceededAlarmEvent, extendedDvbS2LicenseMissingAlarmEvent=extendedDvbS2LicenseMissingAlarmEvent, extendedUsedInputIsNotSptsAlarmEvent=extendedUsedInputIsNotSptsAlarmEvent, extendedUnknownModuleAlarmEvent=extendedUnknownModuleAlarmEvent, extendedEcmResponsesDelayedAlarmEvent=extendedEcmResponsesDelayedAlarmEvent, extendedTsRxErrorsAlarmEvent=extendedTsRxErrorsAlarmEvent, extendedLnbCurrentAlarmEvent=extendedLnbCurrentAlarmEvent, paramValue=paramValue, extendedUpdatingStage2BootLoaderAlarmEvent=extendedUpdatingStage2BootLoaderAlarmEvent, extendedDataPlpIdSelectionNotValidAlarmEvent=extendedDataPlpIdSelectionNotValidAlarmEvent, extendedFailedToUpdateStage2BootLoaderAlarmEvent=extendedFailedToUpdateStage2BootLoaderAlarmEvent, extendedNitSidConflictAlarmEvent=extendedNitSidConflictAlarmEvent, extendedForbiddenNetworkAlarmEvent=extendedForbiddenNetworkAlarmEvent, extendedNumberOfFecLicensesExceededAlarmEvent=extendedNumberOfFecLicensesExceededAlarmEvent, extendedTooManyOutputPidsConfiguredAlarmEvent=extendedTooManyOutputPidsConfiguredAlarmEvent, extendedPacketsDiscardedInIpMirrorOutputsAlarmEvent=extendedPacketsDiscardedInIpMirrorOutputsAlarmEvent, extendedAlertMessageAlarmEvent=extendedAlertMessageAlarmEvent, extendedCaMenuIsOpenAlarmEvent=extendedCaMenuIsOpenAlarmEvent, extendedRedundancyActivatedAlarmEvent=extendedRedundancyActivatedAlarmEvent, extendedFecHasCorrectedPacketsAlarmEvent=extendedFecHasCorrectedPacketsAlarmEvent, extendedMultiplexOversubscriptionPacketsDiscardedAlarmEvent=extendedMultiplexOversubscriptionPacketsDiscardedAlarmEvent, extendedShuttingDownAlarmEvent=extendedShuttingDownAlarmEvent, extendedUserFromGroupInstallIsUsingCliAlarmEvent=extendedUserFromGroupInstallIsUsingCliAlarmEvent, extendedBootFailedAlarmEvent=extendedBootFailedAlarmEvent, extendedModuleOffAlarmEvent=extendedModuleOffAlarmEvent, extendedBootFailedRetryingAlarmEvent=extendedBootFailedRetryingAlarmEvent, extendedServiceMissingAlarmEvent=extendedServiceMissingAlarmEvent, reason=reason, extendedChannelDistanceTooNarrowAlarmEvent=extendedChannelDistanceTooNarrowAlarmEvent, extendedCalibrationCheckSkippedAlarmEvent=extendedCalibrationCheckSkippedAlarmEvent, extendedPowerSupplyOverloadedAlarmEvent=extendedPowerSupplyOverloadedAlarmEvent, extendedBackupLicenseMissingAlarmEvent=extendedBackupLicenseMissingAlarmEvent, extendedDeviceConfigurationBackupInProgressAlarmEvent=extendedDeviceConfigurationBackupInProgressAlarmEvent, extendedEcmgSwitchedToSpareServerAlarmEvent=extendedEcmgSwitchedToSpareServerAlarmEvent, extendedBackupsyncTurnedOffAlarmEvent=extendedBackupsyncTurnedOffAlarmEvent, extendedFailedToBootAlarmEvent=extendedFailedToBootAlarmEvent, extendedTemperatureTooLowAlarmEvent=extendedTemperatureTooLowAlarmEvent, extendedRestartingDescramblingAlarmEvent=extendedRestartingDescramblingAlarmEvent, extendedBackupsyncHwCompatibilityCheckAlarmEvent=extendedBackupsyncHwCompatibilityCheckAlarmEvent, extendedCurrentTooLowAlarmEvent=extendedCurrentTooLowAlarmEvent, extendedDescramblingFailedAlarmEvent=extendedDescramblingFailedAlarmEvent, paramTable=paramTable, extendedRunningOnBackupPowerAlarmEvent=extendedRunningOnBackupPowerAlarmEvent, extendedAsiLinkDownAlarmEvent=extendedAsiLinkDownAlarmEvent, severity=severity, extendedProcessStartedAlarmEvent=extendedProcessStartedAlarmEvent, extendedCurrentTooHighAlarmEvent=extendedCurrentTooHighAlarmEvent, extendedCbrOutputOversubscriptionAlarmEvent=extendedCbrOutputOversubscriptionAlarmEvent, extendedCalibrationDataMissingAlarmEvent=extendedCalibrationDataMissingAlarmEvent, extendedSfpLinkDownAlarmEvent=extendedSfpLinkDownAlarmEvent, extendedDeviceConfigurationRestoreInProgressAlarmEvent=extendedDeviceConfigurationRestoreInProgressAlarmEvent, extendedNotGeneratingSttTableWaitingForCorrectSystemTimeAlarmEvent=extendedNotGeneratingSttTableWaitingForCorrectSystemTimeAlarmEvent, extendedExtIoSignaledAlarmEvent=extendedExtIoSignaledAlarmEvent, generic=generic, extendedDescramblingFailureAlarmEvent=extendedDescramblingFailureAlarmEvent, extendedSymbolrateOutOfRangeAlarmEvent=extendedSymbolrateOutOfRangeAlarmEvent, extendedConnectionLostAlarmEvent=extendedConnectionLostAlarmEvent, extendedNoModuleAlarmEvent=extendedNoModuleAlarmEvent, extendedEmmNotConnectedAlarmEvent=extendedEmmNotConnectedAlarmEvent, extendedDemultiplexingLicenseMissingAlarmEvent=extendedDemultiplexingLicenseMissingAlarmEvent, extendedMainVoltageTooLowAlarmEvent=extendedMainVoltageTooLowAlarmEvent, extendedOutputPowerOutOfRangeAlarmEvent=extendedOutputPowerOutOfRangeAlarmEvent, extendedAlarmEvent=extendedAlarmEvent, extendedUserFromGroupAdminIsUsingCliAlarmEvent=extendedUserFromGroupAdminIsUsingCliAlarmEvent, extendedBackupActiveBackupAlarmEvent=extendedBackupActiveBackupAlarmEvent, extendedDvbProcessingLicenseMissingAlarmEvent=extendedDvbProcessingLicenseMissingAlarmEvent, extendedBackupsyncConnectionLostAlarmEvent=extendedBackupsyncConnectionLostAlarmEvent, extendedInvalidLnbVoltageConfigurationAlarmEvent=extendedInvalidLnbVoltageConfigurationAlarmEvent, extendedScramblingConflictInSharedComponentAlarmEvent=extendedScramblingConflictInSharedComponentAlarmEvent, extendedLinkMissingAlarmEvent=extendedLinkMissingAlarmEvent, extendedEcmgFailureAlarmEvent=extendedEcmgFailureAlarmEvent, notifications=notifications, extendedDataPlpIdSelectionRequiredAlarmEvent=extendedDataPlpIdSelectionRequiredAlarmEvent, extendedCamFailureActionTakenRebootingCaModuleAlarmEvent=extendedCamFailureActionTakenRebootingCaModuleAlarmEvent, extendedErrorCorrectionOverloadTooManySimultaneousMissingPacketsAlarmEvent=extendedErrorCorrectionOverloadTooManySimultaneousMissingPacketsAlarmEvent, extendedIpInputCapacityExceededAlarmEvent=extendedIpInputCapacityExceededAlarmEvent, extendedTsInputBufferOverflowAlarmEvent=extendedTsInputBufferOverflowAlarmEvent, extendedBackupsyncConfigurationFaultAlarmEvent=extendedBackupsyncConfigurationFaultAlarmEvent, extendedConfiguringModuleAlarmEvent=extendedConfiguringModuleAlarmEvent, extendedFrequencyOutOfRangeAlarmEvent=extendedFrequencyOutOfRangeAlarmEvent, extendedNitWizardFailureAlarmEvent=extendedNitWizardFailureAlarmEvent, extendedScsLicenseMissingAlarmEvent=extendedScsLicenseMissingAlarmEvent, extendedDvbTimeMissingAlarmEvent=extendedDvbTimeMissingAlarmEvent, extendedBackupsyncConfigurationWillBeSynchronizedAutomaticallyAlarmEvent=extendedBackupsyncConfigurationWillBeSynchronizedAutomaticallyAlarmEvent, extendedBackupVoltageTooHighAlarmEvent=extendedBackupVoltageTooHighAlarmEvent, params=params, extendedDcFeedCurrentAlarmEvent=extendedDcFeedCurrentAlarmEvent, extendedUpcTooHighInputPowerAlarmEvent=extendedUpcTooHighInputPowerAlarmEvent, extendedBackupsyncSynchronizingAlarmEvent=extendedBackupsyncSynchronizingAlarmEvent, extendedUserFromGroupOperIsUsingCliAlarmEvent=extendedUserFromGroupOperIsUsingCliAlarmEvent, extendedCannotDescrambleDueToCamRoutingAlarmEvent=extendedCannotDescrambleDueToCamRoutingAlarmEvent, extendedScsNotLicensedAlarmEvent=extendedScsNotLicensedAlarmEvent, extendedBackupVoltageTooLowAlarmEvent=extendedBackupVoltageTooLowAlarmEvent, extendedDeviceDriverFailureAlarmEvent=extendedDeviceDriverFailureAlarmEvent, extendedEcmMissingAlarmEvent=extendedEcmMissingAlarmEvent, extendedAesLicenseMissingAlarmEvent=extendedAesLicenseMissingAlarmEvent, extendedEcmStreamFailureAlarmEvent=extendedEcmStreamFailureAlarmEvent, extendedBackupModuleHwDoesNotSupportSelectedOnePlusOneBackupRoleAlarmEvent=extendedBackupModuleHwDoesNotSupportSelectedOnePlusOneBackupRoleAlarmEvent, extendedBackupSwitchedOverToBackupDeviceAlarmEvent=extendedBackupSwitchedOverToBackupDeviceAlarmEvent, extendedSidConflictAlarmEvent=extendedSidConflictAlarmEvent, extendedPsiSiInsertCapacityExceededAlarmEvent=extendedPsiSiInsertCapacityExceededAlarmEvent, extendedFecPacketsDiscardedModuleBitrateTooHighAlarmEvent=extendedFecPacketsDiscardedModuleBitrateTooHighAlarmEvent, extendedExtIoIntrusionDetectedAlarmEvent=extendedExtIoIntrusionDetectedAlarmEvent, extendedHierarchyHpSelectedForNonAlarmEvent=extendedHierarchyHpSelectedForNonAlarmEvent, extendedDeviceFirstBootActionsAreInProgressAlarmEvent=extendedDeviceFirstBootActionsAreInProgressAlarmEvent, extendedHardwareFailureAlarmEvent=extendedHardwareFailureAlarmEvent, extendedRebootingCamAlarmEvent=extendedRebootingCamAlarmEvent, extendedUpdatingStage1BootLoaderAlarmEvent=extendedUpdatingStage1BootLoaderAlarmEvent, extendedDisconnectedHostInMultichassisGroupAlarmEvent=extendedDisconnectedHostInMultichassisGroupAlarmEvent, extendedIncompatibleModuleDisabledAlarmEvent=extendedIncompatibleModuleDisabledAlarmEvent, extendedInvalidFecRateForSelectedModulationAlarmEvent=extendedInvalidFecRateForSelectedModulationAlarmEvent, extendedBackupsyncCheckLicenseCompatibilityAlarmEvent=extendedBackupsyncCheckLicenseCompatibilityAlarmEvent, extendedCbrOutputOversubscriptionPacketsDiscardedAlarmEvent=extendedCbrOutputOversubscriptionPacketsDiscardedAlarmEvent, extendedPsigTableInsertionFailedAlarmEvent=extendedPsigTableInsertionFailedAlarmEvent, extendedPsiSiCaptureCapacityExceededAlarmEvent=extendedPsiSiCaptureCapacityExceededAlarmEvent, extendedEitProcessingLicenseMissingAlarmEvent=extendedEitProcessingLicenseMissingAlarmEvent, extendedEcmgNotConnectedAlarmEvent=extendedEcmgNotConnectedAlarmEvent, extendedFecInputAnomaliesDetectedAlarmEvent=extendedFecInputAnomaliesDetectedAlarmEvent, extendedCamFailureActionTakenRestartingDescramblingAlarmEvent=extendedCamFailureActionTakenRestartingDescramblingAlarmEvent, extendedMsdLicenseMissingAlarmEvent=extendedMsdLicenseMissingAlarmEvent, extendedRebootRequestByUserAlarmEvent=extendedRebootRequestByUserAlarmEvent, extendedEmmStreamFailureAlarmEvent=extendedEmmStreamFailureAlarmEvent, extendedMultichassisConfigurationFailureAlarmEvent=extendedMultichassisConfigurationFailureAlarmEvent, traps=traps, extendedPidMissingAlarmEvent=extendedPidMissingAlarmEvent, extendedRtpInputPacketSequenceAnomaliesDetectedAlarmEvent=extendedRtpInputPacketSequenceAnomaliesDetectedAlarmEvent, extendedBackupsyncLicenseCompatibilityCheckAlarmEvent=extendedBackupsyncLicenseCompatibilityCheckAlarmEvent, extendedSymbolRateTooHighForSelectedModulationSelectHighSpeedModulationModeToAvoidErrorsAlarmEvent=extendedSymbolRateTooHighForSelectedModulationSelectHighSpeedModulationModeToAvoidErrorsAlarmEvent, extendedMultiplexingLicenseMissingAlarmEvent=extendedMultiplexingLicenseMissingAlarmEvent, extendedBackupHwDoesNotSupportSelectedDeviceRoleAlarmEvent=extendedBackupHwDoesNotSupportSelectedDeviceRoleAlarmEvent, extendedInvalidSdtTemplateAlarmEvent=extendedInvalidSdtTemplateAlarmEvent, extendedManualTableInsertionFailedAlarmEvent=extendedManualTableInsertionFailedAlarmEvent, paramIdx=paramIdx, extendedSignalMissingAlarmEvent=extendedSignalMissingAlarmEvent, extendedEmmFailureAlarmEvent=extendedEmmFailureAlarmEvent, extendedBackupsyncAutomaticModeAlarmEvent=extendedBackupsyncAutomaticModeAlarmEvent, extendedSwVersionDifferenceWithinMultichassisGroupAlarmEvent=extendedSwVersionDifferenceWithinMultichassisGroupAlarmEvent, extendedMultiplexOversubscriptionPacketsDelayedAlarmEvent=extendedMultiplexOversubscriptionPacketsDelayedAlarmEvent, extendedUserFromGroupMonitorIsUsingCliAlarmEvent=extendedUserFromGroupMonitorIsUsingCliAlarmEvent)
