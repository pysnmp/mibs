#
# PySNMP MIB module BENU-SUB-TUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/benuos/BENU-SUB-TUNNEL-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 08:03:12 2024
# On host fv-az1110-484 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
benuWAG, = mibBuilder.importSymbols("BENU-WAG-MIB", "benuWAG")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, IpAddress, ModuleIdentity, MibIdentifier, iso, Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter32, NotificationType, ObjectIdentity, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "IpAddress", "ModuleIdentity", "MibIdentifier", "iso", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter32", "NotificationType", "ObjectIdentity", "Counter64", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
benuWagSubTunMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2))
benuWagSubTunMIB.setRevisions(('2015-11-13 00:00', '2015-01-02 00:00', '2012-12-12 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: benuWagSubTunMIB.setRevisionsDescriptions(('Moved bWagTunMaxNumOfTunnels and bWagSubMaxNumOfSubscribers\n                         to scalars. Also, removed some imports which are not required', 'updated MIB file by adding Subscriber and Tunnel MIB Notifications', 'Initial Version',))
if mibBuilder.loadTexts: benuWagSubTunMIB.setLastUpdated('201511130000Z')
if mibBuilder.loadTexts: benuWagSubTunMIB.setOrganization('Benu Networks,Inc')
if mibBuilder.loadTexts: benuWagSubTunMIB.setContactInfo('Benu Networks,Inc\n                          Corporate Headquarters\n                          300 Concord Road, Suite 110\n                          Billerica, MA 01821 USA\n                          Tel: +1 978-223-4700\n                          Fax: +1 978-362-1908\n                          Email: info@benunets.com')
if mibBuilder.loadTexts: benuWagSubTunMIB.setDescription('The MIB module defines subscriber and tunnel\n                information\n\n                Copyright (C)  2012 by Benu Networks, Inc.\n                All rights reserved.')
bWagSubTunnelMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 0))
if mibBuilder.loadTexts: bWagSubTunnelMIBNotifications.setStatus('current')
if mibBuilder.loadTexts: bWagSubTunnelMIBNotifications.setDescription('Subscriber and Tunnel MIB Notifications are defined in this branch.')
bWagSubMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 1))
if mibBuilder.loadTexts: bWagSubMIBObjects.setStatus('current')
if mibBuilder.loadTexts: bWagSubMIBObjects.setDescription('Subscriber MIB objects are defined in this branch.')
bWagSubMIBNotifObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 2))
if mibBuilder.loadTexts: bWagSubMIBNotifObjects.setStatus('current')
if mibBuilder.loadTexts: bWagSubMIBNotifObjects.setDescription('Subscriber MIB Notification objects are defined\n       in this branch.')
bWagTunnelMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 3))
if mibBuilder.loadTexts: bWagTunnelMIBObjects.setStatus('current')
if mibBuilder.loadTexts: bWagTunnelMIBObjects.setDescription('Subscriber MIB objects are defined in this branch.')
bWagTunnelMIBNotifObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 4))
if mibBuilder.loadTexts: bWagTunnelMIBNotifObjects.setStatus('current')
if mibBuilder.loadTexts: bWagTunnelMIBNotifObjects.setDescription('Subscriber MIB Notification objects are defined\n       in this branch.')
bWagSubMaxNumOfSubscribers = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bWagSubMaxNumOfSubscribers.setStatus('current')
if mibBuilder.loadTexts: bWagSubMaxNumOfSubscribers.setDescription('Max Number of subscribers that can exist\n        at a given time. Any new subscribers beyond this\n        number will be rejected')
bWagTunMaxNumOfTunnels = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bWagTunMaxNumOfTunnels.setStatus('current')
if mibBuilder.loadTexts: bWagTunMaxNumOfTunnels.setDescription('Max Number of tunnels that can exist\n        at a given time. Any new tunnel request beyond this\n        number will be rejected')
bWagSubHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 2, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bWagSubHighThreshold.setStatus('current')
if mibBuilder.loadTexts: bWagSubHighThreshold.setDescription('The high threshold for number of subscribers .\n        If a bWagSubLowThresholdReached event has\n        been generated , and the value number of subscribers\n        has exceeded the value of bWagSubHighThreshold, then a\n        bWagSubHighThresholdReached event will be generated.  No more\n        bWagSubHighThresholdReached events will be generated\n        until the  value for number of subscribers becomes equal to or less\n        than the value of bWagSubLowThreshold.')
bWagSubLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 2, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bWagSubLowThreshold.setStatus('current')
if mibBuilder.loadTexts: bWagSubLowThreshold.setDescription('The Lower threshold for number of subscribers .\n        If a bWagSubHighThresholdReached event has\n        been generated , and the value number of subscribers\n        falls below the value of bWagSubLowThreshold, then a\n        bWagSubLowThresholdReached event will be generated.  No more\n        bWagSubLowThresholdReached events will be generated\n        until the  value for number of subscribers becomes equal to or greater\n        than the value of bWagSubHighThreshold.')
bWagSubHighThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 0, 1)).setObjects(("BENU-SUB-TUNNEL-MIB", "bWagSubMaxNumOfSubscribers"), ("BENU-SUB-TUNNEL-MIB", "bWagSubHighThreshold"))
if mibBuilder.loadTexts: bWagSubHighThresholdReached.setStatus('current')
if mibBuilder.loadTexts: bWagSubHighThresholdReached.setDescription('This notification signifies that the current number of\n        subscribers has risen above the  value of\n        bWagSubHighThreshold.')
bWagSubLowThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 0, 2)).setObjects(("BENU-SUB-TUNNEL-MIB", "bWagSubMaxNumOfSubscribers"), ("BENU-SUB-TUNNEL-MIB", "bWagSubLowThreshold"))
if mibBuilder.loadTexts: bWagSubLowThresholdReached.setStatus('current')
if mibBuilder.loadTexts: bWagSubLowThresholdReached.setDescription('This notification signifies that the current number of\n        subscribers has fallen below the  value of\n        bWagSubLowThreshold.')
bWagTunHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 4, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bWagTunHighThreshold.setStatus('current')
if mibBuilder.loadTexts: bWagTunHighThreshold.setDescription('The high threshold for number of tunnels.\n        If a bWagTunLowThresholdReached event has\n        been generated , and the value number of tunnels in use\n        has exceeded the value of bWagTunHighThreshold, then a\n        bWagTunHighThresholdReached event will be generated.  No more\n        bWagTunHighThresholdReached events will be generated\n        until the  value for number of tunnels in use becomes equal to or less\n        than the value of bWagTunLowThreshold.')
bWagTunLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 4, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bWagTunLowThreshold.setStatus('current')
if mibBuilder.loadTexts: bWagTunLowThreshold.setDescription('The Lower threshold for number of tunnels .\n        If a bWagTunHighThresholdReached event has\n        been generated , and the value number of tunnels in use\n        falls below the value of bWagTunLowThreshold, then a\n        bWagTunLowThresholdReached event will be generated.  No more\n        bWagTunLowThresholdReached events will be generated\n        until the  value for number of tunnels in use becomes equal to\n        or greater than the value of bWagTunHighThreshold.')
bWagTunHighThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 0, 3)).setObjects(("BENU-SUB-TUNNEL-MIB", "bWagTunMaxNumOfTunnels"), ("BENU-SUB-TUNNEL-MIB", "bWagTunHighThreshold"))
if mibBuilder.loadTexts: bWagTunHighThresholdReached.setStatus('current')
if mibBuilder.loadTexts: bWagTunHighThresholdReached.setDescription('This notification signifies that the current number of\n        tunnels has risen above the  value of\n        bWagTunHighThreshold.')
bWagTunLowThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 0, 4)).setObjects(("BENU-SUB-TUNNEL-MIB", "bWagTunMaxNumOfTunnels"), ("BENU-SUB-TUNNEL-MIB", "bWagTunLowThreshold"))
if mibBuilder.loadTexts: bWagTunLowThresholdReached.setStatus('current')
if mibBuilder.loadTexts: bWagTunLowThresholdReached.setDescription('This notification signifies that the current number of\n        tunnels has fallen below the  value of\n        bWagTunLowThreshold.')
mibBuilder.exportSymbols("BENU-SUB-TUNNEL-MIB", benuWagSubTunMIB=benuWagSubTunMIB, bWagTunnelMIBObjects=bWagTunnelMIBObjects, bWagSubHighThreshold=bWagSubHighThreshold, bWagSubHighThresholdReached=bWagSubHighThresholdReached, bWagSubLowThreshold=bWagSubLowThreshold, bWagSubMaxNumOfSubscribers=bWagSubMaxNumOfSubscribers, bWagTunLowThreshold=bWagTunLowThreshold, bWagSubTunnelMIBNotifications=bWagSubTunnelMIBNotifications, bWagTunHighThreshold=bWagTunHighThreshold, bWagTunHighThresholdReached=bWagTunHighThresholdReached, bWagTunnelMIBNotifObjects=bWagTunnelMIBNotifObjects, bWagTunLowThresholdReached=bWagTunLowThresholdReached, bWagSubMIBObjects=bWagSubMIBObjects, bWagSubMIBNotifObjects=bWagSubMIBNotifObjects, bWagSubLowThresholdReached=bWagSubLowThresholdReached, PYSNMP_MODULE_ID=benuWagSubTunMIB, bWagTunMaxNumOfTunnels=bWagTunMaxNumOfTunnels)
