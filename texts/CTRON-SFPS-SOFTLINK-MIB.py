#
# PySNMP MIB module CTRON-SFPS-SOFTLINK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-SFPS-SOFTLINK-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 14:11:26 2024
# On host fv-az693-600 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
sfpsUpLinkFacility, sfpsCentersFacility, sfpsDiagFacility, sfpsFpcFacility, sfpsCallTapFacility, sfpsLiteFacility, sfpsBetaFacility, sfpsFabricFacility, sfpsMcastFacility, sfpsVLANFacility, sfpsVNSFacility, sfpsRAFacility = mibBuilder.importSymbols("CTRON-SFPS-INCLUDE-MIB", "sfpsUpLinkFacility", "sfpsCentersFacility", "sfpsDiagFacility", "sfpsFpcFacility", "sfpsCallTapFacility", "sfpsLiteFacility", "sfpsBetaFacility", "sfpsFabricFacility", "sfpsMcastFacility", "sfpsVLANFacility", "sfpsVNSFacility", "sfpsRAFacility")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, Bits, NotificationType, Unsigned32, Gauge32, IpAddress, iso, TimeTicks, ObjectIdentity, ModuleIdentity, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "Bits", "NotificationType", "Unsigned32", "Gauge32", "IpAddress", "iso", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "Integer32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class HexInteger(Integer32):
    pass

sfpsCentersFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1), )
if mibBuilder.loadTexts: sfpsCentersFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCentersFacilityTable.setDescription('')
sfpsCentersFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsCentersFacilityAddress"))
if mibBuilder.loadTexts: sfpsCentersFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCentersFacilityEntry.setDescription('')
sfpsCentersFacilityAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 1), HexInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityAddress.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCentersFacilityAddress.setDescription('')
sfpsCentersFacilityMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityMetric.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCentersFacilityMetric.setDescription('')
sfpsCentersFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityElementName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCentersFacilityElementName.setDescription('')
sfpsCentersFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCentersFacilityOperStatus.setDescription('')
sfpsCentersFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsCentersFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCentersFacilityAdminStatus.setDescription('')
sfpsCentersFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCentersFacilityStatusTime.setDescription('')
sfpsCentersFacilityRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityRequests.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCentersFacilityRequests.setDescription('')
sfpsCentersFacilityResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityResponses.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCentersFacilityResponses.setDescription('')
sfpsBetaFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1), )
if mibBuilder.loadTexts: sfpsBetaFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsBetaFacilityTable.setDescription('')
sfpsBetaFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsBetaFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsBetaFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsBetaFacilityEntry.setDescription('')
sfpsBetaFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsBetaFacilityHashIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsBetaFacilityHashIndex.setDescription('')
sfpsBetaFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsBetaFacilityElementName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsBetaFacilityElementName.setDescription('')
sfpsBetaFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsBetaFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsBetaFacilityAdminStatus.setDescription('')
sfpsBetaFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsBetaFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsBetaFacilityOperStatus.setDescription('')
sfpsBetaFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsBetaFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsBetaFacilityStatusTime.setDescription('')
sfpsCallTapFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1), )
if mibBuilder.loadTexts: sfpsCallTapFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCallTapFacilityTable.setDescription('')
sfpsCallTapFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsCallTapFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsCallTapFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCallTapFacilityEntry.setDescription('')
sfpsCallTapFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCallTapFacilityHashIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCallTapFacilityHashIndex.setDescription('')
sfpsCallTapFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCallTapFacilityElementName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCallTapFacilityElementName.setDescription('')
sfpsCallTapFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsCallTapFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCallTapFacilityAdminStatus.setDescription('')
sfpsCallTapFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCallTapFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCallTapFacilityOperStatus.setDescription('')
sfpsCallTapFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCallTapFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsCallTapFacilityStatusTime.setDescription('')
sfpsDiagFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1), )
if mibBuilder.loadTexts: sfpsDiagFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsDiagFacilityTable.setDescription('')
sfpsDiagFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsDiagFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsDiagFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsDiagFacilityEntry.setDescription('')
sfpsDiagFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsDiagFacilityHashIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsDiagFacilityHashIndex.setDescription('')
sfpsDiagFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsDiagFacilityElementName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsDiagFacilityElementName.setDescription('')
sfpsDiagFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsDiagFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsDiagFacilityAdminStatus.setDescription('')
sfpsDiagFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsDiagFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsDiagFacilityOperStatus.setDescription('')
sfpsDiagFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsDiagFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsDiagFacilityStatusTime.setDescription('')
sfpsFabricFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1), )
if mibBuilder.loadTexts: sfpsFabricFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFabricFacilityTable.setDescription('')
sfpsFabricFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsFabricFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsFabricFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFabricFacilityEntry.setDescription('')
sfpsFabricFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFabricFacilityHashIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFabricFacilityHashIndex.setDescription('')
sfpsFabricFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFabricFacilityElementName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFabricFacilityElementName.setDescription('')
sfpsFabricFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsFabricFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFabricFacilityAdminStatus.setDescription('')
sfpsFabricFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFabricFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFabricFacilityOperStatus.setDescription('')
sfpsFabricFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFabricFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFabricFacilityStatusTime.setDescription('')
sfpsLiteFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1), )
if mibBuilder.loadTexts: sfpsLiteFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsLiteFacilityTable.setDescription('')
sfpsLiteFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsLiteFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsLiteFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsLiteFacilityEntry.setDescription('')
sfpsLiteFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsLiteFacilityHashIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsLiteFacilityHashIndex.setDescription('')
sfpsLiteFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsLiteFacilityElementName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsLiteFacilityElementName.setDescription('')
sfpsLiteFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsLiteFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsLiteFacilityAdminStatus.setDescription('')
sfpsLiteFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsLiteFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsLiteFacilityOperStatus.setDescription('')
sfpsLiteFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsLiteFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsLiteFacilityStatusTime.setDescription('')
sfpsFpcFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1), )
if mibBuilder.loadTexts: sfpsFpcFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFpcFacilityTable.setDescription('')
sfpsFpcFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsFpcFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsFpcFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFpcFacilityEntry.setDescription('')
sfpsFpcFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFpcFacilityHashIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFpcFacilityHashIndex.setDescription('')
sfpsFpcFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFpcFacilityElementName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFpcFacilityElementName.setDescription('')
sfpsFpcFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsFpcFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFpcFacilityAdminStatus.setDescription('')
sfpsFpcFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFpcFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFpcFacilityOperStatus.setDescription('')
sfpsFpcFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFpcFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsFpcFacilityStatusTime.setDescription('')
sfpsMcastFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1), )
if mibBuilder.loadTexts: sfpsMcastFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsMcastFacilityTable.setDescription('')
sfpsMcastFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsMcastFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsMcastFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsMcastFacilityEntry.setDescription('')
sfpsMcastFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMcastFacilityHashIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsMcastFacilityHashIndex.setDescription('')
sfpsMcastFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMcastFacilityElementName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsMcastFacilityElementName.setDescription('')
sfpsMcastFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMcastFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsMcastFacilityAdminStatus.setDescription('')
sfpsMcastFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMcastFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsMcastFacilityOperStatus.setDescription('')
sfpsMcastFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMcastFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsMcastFacilityStatusTime.setDescription('')
sfpsVLANFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1), )
if mibBuilder.loadTexts: sfpsVLANFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVLANFacilityTable.setDescription('')
sfpsVLANFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsVLANFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsVLANFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVLANFacilityEntry.setDescription('')
sfpsVLANFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVLANFacilityHashIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVLANFacilityHashIndex.setDescription('')
sfpsVLANFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVLANFacilityElementName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVLANFacilityElementName.setDescription('')
sfpsVLANFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsVLANFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVLANFacilityAdminStatus.setDescription('')
sfpsVLANFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVLANFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVLANFacilityOperStatus.setDescription('')
sfpsVLANFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVLANFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVLANFacilityStatusTime.setDescription('')
sfpsVNSFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1), )
if mibBuilder.loadTexts: sfpsVNSFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVNSFacilityTable.setDescription('')
sfpsVNSFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsVNSFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsVNSFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVNSFacilityEntry.setDescription('')
sfpsVNSFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVNSFacilityHashIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVNSFacilityHashIndex.setDescription('')
sfpsVNSFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVNSFacilityElementName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVNSFacilityElementName.setDescription('')
sfpsVNSFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsVNSFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVNSFacilityAdminStatus.setDescription('')
sfpsVNSFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVNSFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVNSFacilityOperStatus.setDescription('')
sfpsVNSFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVNSFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsVNSFacilityStatusTime.setDescription('')
sfpsRAFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1), )
if mibBuilder.loadTexts: sfpsRAFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsRAFacilityTable.setDescription('')
sfpsRAFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsRAFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsRAFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsRAFacilityEntry.setDescription('')
sfpsRAFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsRAFacilityHashIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsRAFacilityHashIndex.setDescription('')
sfpsRAFacilityName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsRAFacilityName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsRAFacilityName.setDescription('')
sfpsRAFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsRAFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsRAFacilityAdminStatus.setDescription('')
sfpsRAFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("running", 1), ("halted", 2), ("pending", 3), ("faulted", 4), ("notStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsRAFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsRAFacilityOperStatus.setDescription('')
sfpsRAFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsRAFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsRAFacilityStatusTime.setDescription('')
sfpsUplinkFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1), )
if mibBuilder.loadTexts: sfpsUplinkFacilityTable.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsUplinkFacilityTable.setDescription('')
sfpsUplinkFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsUplinkFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsUplinkFacilityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsUplinkFacilityEntry.setDescription('')
sfpsUplinkFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsUplinkFacilityHashIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsUplinkFacilityHashIndex.setDescription('')
sfpsUplinkFacilityName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsUplinkFacilityName.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsUplinkFacilityName.setDescription('')
sfpsUplinkFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsUplinkFacilityAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsUplinkFacilityAdminStatus.setDescription('')
sfpsUplinkFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("running", 1), ("halted", 2), ("pending", 3), ("faulted", 4), ("notStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsUplinkFacilityOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsUplinkFacilityOperStatus.setDescription('')
sfpsUplinkFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsUplinkFacilityStatusTime.setStatus('mandatory')
if mibBuilder.loadTexts: sfpsUplinkFacilityStatusTime.setDescription('')
mibBuilder.exportSymbols("CTRON-SFPS-SOFTLINK-MIB", sfpsFpcFacilityOperStatus=sfpsFpcFacilityOperStatus, sfpsBetaFacilityAdminStatus=sfpsBetaFacilityAdminStatus, sfpsBetaFacilityEntry=sfpsBetaFacilityEntry, sfpsCallTapFacilityStatusTime=sfpsCallTapFacilityStatusTime, sfpsCallTapFacilityHashIndex=sfpsCallTapFacilityHashIndex, sfpsVNSFacilityOperStatus=sfpsVNSFacilityOperStatus, sfpsCentersFacilityRequests=sfpsCentersFacilityRequests, sfpsRAFacilityStatusTime=sfpsRAFacilityStatusTime, sfpsFpcFacilityAdminStatus=sfpsFpcFacilityAdminStatus, sfpsVLANFacilityStatusTime=sfpsVLANFacilityStatusTime, sfpsDiagFacilityElementName=sfpsDiagFacilityElementName, sfpsFpcFacilityElementName=sfpsFpcFacilityElementName, sfpsRAFacilityName=sfpsRAFacilityName, sfpsCallTapFacilityElementName=sfpsCallTapFacilityElementName, sfpsCallTapFacilityOperStatus=sfpsCallTapFacilityOperStatus, sfpsCentersFacilityEntry=sfpsCentersFacilityEntry, sfpsCentersFacilityOperStatus=sfpsCentersFacilityOperStatus, sfpsUplinkFacilityName=sfpsUplinkFacilityName, sfpsBetaFacilityElementName=sfpsBetaFacilityElementName, sfpsVLANFacilityAdminStatus=sfpsVLANFacilityAdminStatus, sfpsCentersFacilityAddress=sfpsCentersFacilityAddress, sfpsMcastFacilityOperStatus=sfpsMcastFacilityOperStatus, sfpsDiagFacilityAdminStatus=sfpsDiagFacilityAdminStatus, sfpsLiteFacilityHashIndex=sfpsLiteFacilityHashIndex, sfpsMcastFacilityTable=sfpsMcastFacilityTable, sfpsFabricFacilityStatusTime=sfpsFabricFacilityStatusTime, sfpsRAFacilityAdminStatus=sfpsRAFacilityAdminStatus, sfpsRAFacilityEntry=sfpsRAFacilityEntry, sfpsBetaFacilityStatusTime=sfpsBetaFacilityStatusTime, sfpsDiagFacilityStatusTime=sfpsDiagFacilityStatusTime, sfpsCallTapFacilityTable=sfpsCallTapFacilityTable, sfpsLiteFacilityElementName=sfpsLiteFacilityElementName, sfpsFpcFacilityStatusTime=sfpsFpcFacilityStatusTime, sfpsVNSFacilityHashIndex=sfpsVNSFacilityHashIndex, HexInteger=HexInteger, sfpsCallTapFacilityAdminStatus=sfpsCallTapFacilityAdminStatus, sfpsDiagFacilityEntry=sfpsDiagFacilityEntry, sfpsVLANFacilityEntry=sfpsVLANFacilityEntry, sfpsUplinkFacilityOperStatus=sfpsUplinkFacilityOperStatus, sfpsLiteFacilityEntry=sfpsLiteFacilityEntry, sfpsVNSFacilityElementName=sfpsVNSFacilityElementName, sfpsFabricFacilityAdminStatus=sfpsFabricFacilityAdminStatus, sfpsMcastFacilityAdminStatus=sfpsMcastFacilityAdminStatus, sfpsLiteFacilityTable=sfpsLiteFacilityTable, sfpsFabricFacilityElementName=sfpsFabricFacilityElementName, sfpsFpcFacilityHashIndex=sfpsFpcFacilityHashIndex, sfpsVNSFacilityStatusTime=sfpsVNSFacilityStatusTime, sfpsCentersFacilityStatusTime=sfpsCentersFacilityStatusTime, sfpsFpcFacilityTable=sfpsFpcFacilityTable, sfpsVLANFacilityTable=sfpsVLANFacilityTable, sfpsCentersFacilityMetric=sfpsCentersFacilityMetric, sfpsLiteFacilityStatusTime=sfpsLiteFacilityStatusTime, sfpsFabricFacilityEntry=sfpsFabricFacilityEntry, sfpsBetaFacilityHashIndex=sfpsBetaFacilityHashIndex, sfpsFabricFacilityOperStatus=sfpsFabricFacilityOperStatus, sfpsLiteFacilityOperStatus=sfpsLiteFacilityOperStatus, sfpsLiteFacilityAdminStatus=sfpsLiteFacilityAdminStatus, sfpsVNSFacilityTable=sfpsVNSFacilityTable, sfpsVLANFacilityOperStatus=sfpsVLANFacilityOperStatus, sfpsMcastFacilityEntry=sfpsMcastFacilityEntry, sfpsVLANFacilityElementName=sfpsVLANFacilityElementName, sfpsBetaFacilityOperStatus=sfpsBetaFacilityOperStatus, sfpsCentersFacilityAdminStatus=sfpsCentersFacilityAdminStatus, sfpsUplinkFacilityTable=sfpsUplinkFacilityTable, sfpsRAFacilityTable=sfpsRAFacilityTable, sfpsUplinkFacilityEntry=sfpsUplinkFacilityEntry, sfpsVNSFacilityAdminStatus=sfpsVNSFacilityAdminStatus, sfpsCallTapFacilityEntry=sfpsCallTapFacilityEntry, sfpsCentersFacilityElementName=sfpsCentersFacilityElementName, sfpsRAFacilityOperStatus=sfpsRAFacilityOperStatus, sfpsCentersFacilityTable=sfpsCentersFacilityTable, sfpsUplinkFacilityStatusTime=sfpsUplinkFacilityStatusTime, sfpsDiagFacilityTable=sfpsDiagFacilityTable, sfpsUplinkFacilityHashIndex=sfpsUplinkFacilityHashIndex, sfpsVNSFacilityEntry=sfpsVNSFacilityEntry, sfpsCentersFacilityResponses=sfpsCentersFacilityResponses, sfpsDiagFacilityOperStatus=sfpsDiagFacilityOperStatus, sfpsUplinkFacilityAdminStatus=sfpsUplinkFacilityAdminStatus, sfpsFpcFacilityEntry=sfpsFpcFacilityEntry, sfpsVLANFacilityHashIndex=sfpsVLANFacilityHashIndex, sfpsBetaFacilityTable=sfpsBetaFacilityTable, sfpsMcastFacilityStatusTime=sfpsMcastFacilityStatusTime, sfpsRAFacilityHashIndex=sfpsRAFacilityHashIndex, sfpsMcastFacilityHashIndex=sfpsMcastFacilityHashIndex, sfpsDiagFacilityHashIndex=sfpsDiagFacilityHashIndex, sfpsFabricFacilityTable=sfpsFabricFacilityTable, sfpsFabricFacilityHashIndex=sfpsFabricFacilityHashIndex, sfpsMcastFacilityElementName=sfpsMcastFacilityElementName)
