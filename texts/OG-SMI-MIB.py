#
# PySNMP MIB module OG-SMI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/opengear/OG-SMI-MIB
# Produced by pysmi-1.1.12 at Tue Dec  3 12:19:12 2024
# On host fv-az573-178 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, TimeTicks, Counter64, Gauge32, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, ObjectIdentity, NotificationType, Unsigned32, MibIdentifier, ModuleIdentity, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Counter64", "Gauge32", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "ObjectIdentity", "NotificationType", "Unsigned32", "MibIdentifier", "ModuleIdentity", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
opengear = ModuleIdentity((1, 3, 6, 1, 4, 1, 25049))
opengear.setRevisions(('2018-06-15 00:00', '2013-11-15 00:00', '2013-08-11 00:00', '2010-03-22 11:27', '2005-02-24 01:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: opengear.setRevisionsDescriptions(('Add a new OID root for Lighthouse 5 and newer\n\t\tmanagement platform specifics.', 'Re-structured MIB adding more information\n\t\tpertaining to monitored/managed devices.', 'Renamed from OPENGEAR-SMI-MIB to OG-SMI-MIB to\n\t\tfix naming discrepancy.', 'Renamed from OPENGEAR-SMI to OPENGEAR-SMI-MIB and\n\t\tfixed imports.', 'Initial Version.',))
if mibBuilder.loadTexts: opengear.setLastUpdated('201806150000Z')
if mibBuilder.loadTexts: opengear.setOrganization('Opengear Inc.')
if mibBuilder.loadTexts: opengear.setContactInfo('Opengear Inc.\n\t\t 630 West 9560 South,\n\t\t Sandy, UT 84070\n\t\t support@opengear.com')
if mibBuilder.loadTexts: opengear.setDescription('Opengear Structure of Management Information MIB')
ogProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 1))
if mibBuilder.loadTexts: ogProducts.setStatus('current')
if mibBuilder.loadTexts: ogProducts.setDescription('ogProducts is the root OBJECT IDENTIFIER from\n\t\twhich sysObjectID values are assigned.  Actual\n\t\tvalues are defined in OG-PRODUCTS-MIB.')
ogLegacyMgmt = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 2))
if mibBuilder.loadTexts: ogLegacyMgmt.setStatus('current')
if mibBuilder.loadTexts: ogLegacyMgmt.setDescription('Subtree reserved for legacy MIBS.')
ogExperimental = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 3))
if mibBuilder.loadTexts: ogExperimental.setStatus('current')
if mibBuilder.loadTexts: ogExperimental.setDescription('Subtree reserved for experimental MIBS.')
ogInternal = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 4))
if mibBuilder.loadTexts: ogInternal.setStatus('current')
if mibBuilder.loadTexts: ogInternal.setDescription('Subtree reserved for use by Opengear internal groups')
ogReserved1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 5))
if mibBuilder.loadTexts: ogReserved1.setStatus('current')
if mibBuilder.loadTexts: ogReserved1.setDescription('Reserved for future use')
ogReserved2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 6))
if mibBuilder.loadTexts: ogReserved2.setStatus('current')
if mibBuilder.loadTexts: ogReserved2.setDescription('Reserved for future use')
otherEnterprises = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 7))
if mibBuilder.loadTexts: otherEnterprises.setStatus('current')
if mibBuilder.loadTexts: otherEnterprises.setDescription('otherEnterprises provides a root object identifier\n\t\tfrom which mibs produced by other companies may be\n\t\tplaced.  mibs produced by other enterprises are\n\t\ttypicially implemented with the object identifiers\n\t\tas defined in the mib, but if the mib is deemed to\n\t\tbe uncontrolled, we may reroot the mib at this\n\t\tsubtree in order to have a controlled version.')
ogAgentCapability = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 8))
if mibBuilder.loadTexts: ogAgentCapability.setStatus('current')
if mibBuilder.loadTexts: ogAgentCapability.setDescription('ogAgentCapability provides a root object identifier\n\t\tfrom which AGENT-CAPABILITIES values may be assigned.')
ogConfig = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 9))
if mibBuilder.loadTexts: ogConfig.setStatus('current')
if mibBuilder.loadTexts: ogConfig.setDescription('ogConfig is the main subtree for configuration mibs.')
ogMgmt = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 10))
if mibBuilder.loadTexts: ogMgmt.setStatus('current')
if mibBuilder.loadTexts: ogMgmt.setDescription('The main subtree for MIB development.')
ogModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 11))
if mibBuilder.loadTexts: ogModules.setStatus('current')
if mibBuilder.loadTexts: ogModules.setDescription('ogModules provides a root object identifier\n                from which MODULE-IDENTITY values may be assigned.')
ogSpecific = ObjectIdentity((1, 3, 6, 1, 4, 1, 25049, 18))
if mibBuilder.loadTexts: ogSpecific.setStatus('current')
if mibBuilder.loadTexts: ogSpecific.setDescription('ogSpecific provides a root object identifier\n\t\tfrom Lighthouse version 5 and later.')
mibBuilder.exportSymbols("OG-SMI-MIB", ogSpecific=ogSpecific, opengear=opengear, ogConfig=ogConfig, ogReserved1=ogReserved1, PYSNMP_MODULE_ID=opengear, ogExperimental=ogExperimental, ogAgentCapability=ogAgentCapability, ogLegacyMgmt=ogLegacyMgmt, ogProducts=ogProducts, ogModules=ogModules, ogMgmt=ogMgmt, ogInternal=ogInternal, ogReserved2=ogReserved2, otherEnterprises=otherEnterprises)
