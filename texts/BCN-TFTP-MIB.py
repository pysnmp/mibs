#
# PySNMP MIB module BCN-TFTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/bluecatnetworks/BCN-TFTP-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 13:26:23 2024
# On host fv-az883-167 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
bcnServices, = mibBuilder.importSymbols("BCN-SMI-MIB", "bcnServices")
BcnAlarmSeverity, = mibBuilder.importSymbols("BCN-TC-MIB", "BcnAlarmSeverity")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter32, ModuleIdentity, Integer32, Gauge32, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, ObjectIdentity, Unsigned32, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "ModuleIdentity", "Integer32", "Gauge32", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "ObjectIdentity", "Unsigned32", "NotificationType", "Bits")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
bcnTftpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 1))
bcnTftpMIB.setRevisions(('2010-11-30 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: bcnTftpMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: bcnTftpMIB.setLastUpdated('201011301200Z')
if mibBuilder.loadTexts: bcnTftpMIB.setOrganization('BlueCat Networks')
if mibBuilder.loadTexts: bcnTftpMIB.setContactInfo('BlueCat Networks. Customer Care.\n\n        North America\n        Call: +1.866.491.2228\n        Europe\n        Call: +44.8081.011.306\n        Other\n        Call: +1.416.646.8433\n        \n        Email: support@bluecatnetworks.com')
if mibBuilder.loadTexts: bcnTftpMIB.setDescription('This module provides status as well as statistical information\n        about the TFTP service.')
bcnTftp = MibIdentifier((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3))
bcnTftpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 2))
bcnTftpNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 3))
bcnTftpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 4))
bcnTftpServiceStatus = ObjectIdentity((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 2, 1))
if mibBuilder.loadTexts: bcnTftpServiceStatus.setStatus('current')
if mibBuilder.loadTexts: bcnTftpServiceStatus.setDescription('General state of the TFTP Service.')
bcnTftpSerOperState = MibScalar((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("running", 1), ("notRunning", 2), ("starting", 3), ("stopping", 4), ("fault", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcnTftpSerOperState.setStatus('current')
if mibBuilder.loadTexts: bcnTftpSerOperState.setDescription('Operational state of the Service. The possible states are:\n        running(1)    The service is running normally.\n        notRunning(2) The service is stopped either intentionally (i.e.:\n                      the service is not supposed to run on this node) or\n                      unintentionally (a problem has occurred).\n        starting(3)   The service is in the process of starting, either\n                      for the first time of after an event occurred.\n        stopping(4)   The service is in the process of stopping. Stopping\n                      a service might be necessary after a configuration\n                      change.\n        fault(5)      An error has been detected and the state is undefined.\n        ')
bcnTftpServiceStatistics = ObjectIdentity((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 2, 2))
if mibBuilder.loadTexts: bcnTftpServiceStatistics.setStatus('current')
if mibBuilder.loadTexts: bcnTftpServiceStatistics.setDescription('TFTP statistics objects container')
bcnTftpSerDirs = MibScalar((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 2, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcnTftpSerDirs.setStatus('current')
if mibBuilder.loadTexts: bcnTftpSerDirs.setDescription('Number of directories on the TFTP subtree.')
bcnTftpSerFiles = MibScalar((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 2, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcnTftpSerFiles.setStatus('current')
if mibBuilder.loadTexts: bcnTftpSerFiles.setDescription('Number of files on the TFTP subtree.')
bcnTftpSerFilesSize = MibScalar((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 2, 2, 3), Unsigned32()).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: bcnTftpSerFilesSize.setStatus('current')
if mibBuilder.loadTexts: bcnTftpSerFilesSize.setDescription('The sum of the size of all files in kilobytes.\n\t\tNotice that this value does not include the actual space on disk\n        based on disk geometry allocation or space used up by directories.')
bcnTftpSerPartialList = MibScalar((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 2, 2, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcnTftpSerPartialList.setStatus('current')
if mibBuilder.loadTexts: bcnTftpSerPartialList.setDescription("The TFTP information is partial.\n\t\t The value 'false' indicates that the information provided for\n         directories, files and size is complete. The entire TFTP tree\n         was explored.\n         The value 'true' indicates that some problem prevented the\n         exploration of the entire TFTP tree, the information provided\n         is therefore partially correct.")
bcnTftpNotificationEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 3, 0))
bcnTftpNotificationData = MibIdentifier((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 3, 1))
bcnTftpAlarmSeverity = MibScalar((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 3, 1, 1), BcnAlarmSeverity()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bcnTftpAlarmSeverity.setStatus('current')
if mibBuilder.loadTexts: bcnTftpAlarmSeverity.setDescription('Severity classification for the alarm.')
bcnTftpAlarmInfo = MibScalar((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 3, 1, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bcnTftpAlarmInfo.setStatus('current')
if mibBuilder.loadTexts: bcnTftpAlarmInfo.setDescription('Descriptive information about the alarm event.')
bcnTftpAlarmNotif = NotificationType((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 3, 0, 1)).setObjects(("BCN-TFTP-MIB", "bcnTftpSerOperState"), ("BCN-TFTP-MIB", "bcnTftpAlarmSeverity"), ("BCN-TFTP-MIB", "bcnTftpAlarmInfo"))
if mibBuilder.loadTexts: bcnTftpAlarmNotif.setStatus('current')
if mibBuilder.loadTexts: bcnTftpAlarmNotif.setDescription('A bcnTftpAlarmNotif signifies that the TFTP service has transitioned\n        state or a particular event has been detected on the service.')
bcnTftpServiceCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 4, 1))
bcnTftpServiceGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 4, 2))
bcnTftpServiceStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 4, 2, 1)).setObjects(("BCN-TFTP-MIB", "bcnTftpSerOperState"), ("BCN-TFTP-MIB", "bcnTftpSerDirs"), ("BCN-TFTP-MIB", "bcnTftpSerFiles"), ("BCN-TFTP-MIB", "bcnTftpSerFilesSize"), ("BCN-TFTP-MIB", "bcnTftpSerPartialList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bcnTftpServiceStatusGroup = bcnTftpServiceStatusGroup.setStatus('current')
if mibBuilder.loadTexts: bcnTftpServiceStatusGroup.setDescription('Status conformance.')
bcnTftpNotificationEventGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 4, 2, 2)).setObjects(("BCN-TFTP-MIB", "bcnTftpAlarmNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bcnTftpNotificationEventGroup = bcnTftpNotificationEventGroup.setStatus('current')
if mibBuilder.loadTexts: bcnTftpNotificationEventGroup.setDescription('Server statistics conformance.')
bcnTftpNotificationDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 4, 2, 3)).setObjects(("BCN-TFTP-MIB", "bcnTftpAlarmSeverity"), ("BCN-TFTP-MIB", "bcnTftpAlarmInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bcnTftpNotificationDataGroup = bcnTftpNotificationDataGroup.setStatus('current')
if mibBuilder.loadTexts: bcnTftpNotificationDataGroup.setDescription('Server statistics conformance.')
bcnTftpStatusCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 13315, 3, 1, 3, 4, 1, 1)).setObjects(("BCN-TFTP-MIB", "bcnTftpServiceStatusGroup"), ("BCN-TFTP-MIB", "bcnTftpNotificationEventGroup"), ("BCN-TFTP-MIB", "bcnTftpNotificationDataGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bcnTftpStatusCompliance = bcnTftpStatusCompliance.setStatus('current')
if mibBuilder.loadTexts: bcnTftpStatusCompliance.setDescription('Basic conformance')
mibBuilder.exportSymbols("BCN-TFTP-MIB", bcnTftpSerFilesSize=bcnTftpSerFilesSize, bcnTftpConformance=bcnTftpConformance, bcnTftpSerFiles=bcnTftpSerFiles, bcnTftpNotificationData=bcnTftpNotificationData, bcnTftpNotificationEventGroup=bcnTftpNotificationEventGroup, bcnTftpObjects=bcnTftpObjects, bcnTftpMIB=bcnTftpMIB, bcnTftp=bcnTftp, bcnTftpNotificationEvents=bcnTftpNotificationEvents, bcnTftpServiceCompliances=bcnTftpServiceCompliances, bcnTftpAlarmInfo=bcnTftpAlarmInfo, bcnTftpServiceGroups=bcnTftpServiceGroups, bcnTftpAlarmSeverity=bcnTftpAlarmSeverity, bcnTftpNotification=bcnTftpNotification, bcnTftpSerDirs=bcnTftpSerDirs, bcnTftpStatusCompliance=bcnTftpStatusCompliance, bcnTftpSerPartialList=bcnTftpSerPartialList, bcnTftpAlarmNotif=bcnTftpAlarmNotif, bcnTftpServiceStatistics=bcnTftpServiceStatistics, bcnTftpSerOperState=bcnTftpSerOperState, bcnTftpServiceStatusGroup=bcnTftpServiceStatusGroup, bcnTftpNotificationDataGroup=bcnTftpNotificationDataGroup, bcnTftpServiceStatus=bcnTftpServiceStatus, PYSNMP_MODULE_ID=bcnTftpMIB)
