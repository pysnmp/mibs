#
# PySNMP MIB module CADANT-PRODUCTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/arris/CADANT-PRODUCTS-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 08:02:50 2024
# On host fv-az1110-484 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Unsigned32, Gauge32, ModuleIdentity, IpAddress, Integer32, Counter32, NotificationType, iso, enterprises, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Unsigned32", "Gauge32", "ModuleIdentity", "IpAddress", "Integer32", "Counter32", "NotificationType", "iso", "enterprises", "TimeTicks", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cadant = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998))
cadant.setRevisions(('2000-11-18 00:00', '2002-02-01 00:00', '2002-05-07 00:00', '2002-06-26 00:00', '2002-12-10 00:00', '2003-06-30 00:00', '2007-06-04 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cadant.setRevisionsDescriptions(('Initial version. Added c4cmts.', 'Added c4ccmts.', 'Added cadPolicy.', 'Added AAA support.', 'Added IKE.', 'Added G2 IMS.', 'Added cadTopology.',))
if mibBuilder.loadTexts: cadant.setLastUpdated('200306300000Z')
if mibBuilder.loadTexts: cadant.setOrganization('Arris International')
if mibBuilder.loadTexts: cadant.setContactInfo('support@arrisi.com')
if mibBuilder.loadTexts: cadant.setDescription('The object identifiers of Cadant products.')
cadObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1))
cadProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2))
cadCable = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1))
cadSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5))
cadNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6))
cadEquipment = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10))
cadSpectrum = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15))
cadLayer2 = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20))
cadLayer3 = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25))
cadSubscriber = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 30))
cadPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35))
cadAuthentication = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 40))
cadIke = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 45))
cadSchema = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 50))
cadCmRemoteQuery = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55))
cadExperimental = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100))
cadTopology = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 105))
cadCmtsIf3 = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 110))
cadL2vpn = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 120))
cadNms = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 2))
c4cmts = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2, 1))
c4ccmts = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2, 2))
g2ims = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2, 3))
mibBuilder.exportSymbols("CADANT-PRODUCTS-MIB", cadLayer3=cadLayer3, cadant=cadant, c4cmts=c4cmts, g2ims=g2ims, PYSNMP_MODULE_ID=cadant, cadSubscriber=cadSubscriber, cadIke=cadIke, cadPolicy=cadPolicy, cadNotification=cadNotification, cadLayer2=cadLayer2, cadNms=cadNms, cadExperimental=cadExperimental, cadSchema=cadSchema, cadL2vpn=cadL2vpn, cadProducts=cadProducts, cadTopology=cadTopology, cadCmRemoteQuery=cadCmRemoteQuery, cadCable=cadCable, c4ccmts=c4ccmts, cadAuthentication=cadAuthentication, cadCmtsIf3=cadCmtsIf3, cadEquipment=cadEquipment, cadObjects=cadObjects, cadSystem=cadSystem, cadSpectrum=cadSpectrum)
