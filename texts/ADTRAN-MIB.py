#
# PySNMP MIB module ADTRAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adtran/ADTRAN-MIB
# Produced by pysmi-1.1.12 at Tue May 28 12:44:44 2024
# On host fv-az847-244 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, Counter32, ModuleIdentity, Integer32, MibIdentifier, Unsigned32, iso, Gauge32, IpAddress, NotificationType, enterprises, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "ModuleIdentity", "Integer32", "MibIdentifier", "Unsigned32", "iso", "Gauge32", "IpAddress", "NotificationType", "enterprises", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
PhysAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "DisplayString", "TextualConvention")
adtran = ModuleIdentity((1, 3, 6, 1, 4, 1, 664))
if mibBuilder.loadTexts: adtran.setLastUpdated('0208090000Z')
if mibBuilder.loadTexts: adtran.setOrganization('ADTRAN, Inc.')
if mibBuilder.loadTexts: adtran.setContactInfo('        Technical Support Dept.\n                Postal: ADTRAN, Inc.\n                        901 Explorer Blvd.\n                        Huntsville, AL 35806\n\n                   Tel: +1 800 726-8663\n                   Fax: +1 256 963 6217\n                E-mail: support@adtran.com')
if mibBuilder.loadTexts: adtran.setDescription('The MIB module that describes the base organization\n               for all enterprises MIBs developed by ADTRAN, Inc.')
adProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 1))
adMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2))
adAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 3))
adPerform = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4))
adShared = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5))
adIdentity = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 6))
adIdentityShared = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 6, 10000))
adAgentCapModule = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 7))
adAgentCapProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 7, 1))
adAgentCapShared = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 7, 2))
adConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 99))
adComplianceShared = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 99, 10000))
adProductInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 3, 1))
adProdName = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdName.setStatus('current')
if mibBuilder.loadTexts: adProdName.setDescription('The Adtran Product Name')
adProdPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdPartNumber.setStatus('current')
if mibBuilder.loadTexts: adProdPartNumber.setDescription('The Adtran Product Part Number')
adProdCLEIcode = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdCLEIcode.setStatus('current')
if mibBuilder.loadTexts: adProdCLEIcode.setDescription('The Adtran Product CLEI Code')
adProdSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdSerialNumber.setStatus('current')
if mibBuilder.loadTexts: adProdSerialNumber.setDescription('The Adtran Product Serial Number')
adProdRevision = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdRevision.setStatus('current')
if mibBuilder.loadTexts: adProdRevision.setDescription('The Adtran Product Revision Number')
adProdSwVersion = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdSwVersion.setStatus('current')
if mibBuilder.loadTexts: adProdSwVersion.setDescription('The Adtran Product Software Version Number')
adProdPhysAddress = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdPhysAddress.setStatus('current')
if mibBuilder.loadTexts: adProdPhysAddress.setDescription("This octet string variable contains the Adtran\n             Physical Address assigned to this product.  For\n             example, the octet sequence 16 02 03 01 specifies\n             bank/shelf number 22 (hex 16), group number 2,\n             slot number 3, unit/port 1. This object value is\n             commonly reported in SNMP Traps to identify the\n             product's location.")
adProdProductID = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 8), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdProductID.setStatus('current')
if mibBuilder.loadTexts: adProdProductID.setDescription('The Adtran Product ID as reported via sysObjectID.\n             Note: In the proprietary ASP protocol, the product reports\n             only its product type number as an octet string.')
adProdTransType = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdTransType.setStatus('current')
if mibBuilder.loadTexts: adProdTransType.setDescription('The data transmission circuit/facility/payload level of the\n             device (see Appendix A of GR-833-CORE).  Common examples are:\n             T0, T1, T2, T3, STS1, and OC3. For the SCU and other common\n             equipment cards, the code should be EQPT.')
adCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 99, 1))
adMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 99, 2))
adCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 664, 99, 1, 1)).setObjects(("ADTRAN-MIB", "adBaseGroup"), ("ADTRAN-MIB", "adCNDGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adCompliance = adCompliance.setStatus('current')
if mibBuilder.loadTexts: adCompliance.setDescription('The compliance statement for SNMPv2 entities which implement the\n       adtran MIB, which is supported by all ADTRAN SNMP agents.')
adBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 99, 2, 1)).setObjects(("ADTRAN-MIB", "adProdName"), ("ADTRAN-MIB", "adProdPartNumber"), ("ADTRAN-MIB", "adProdCLEIcode"), ("ADTRAN-MIB", "adProdSerialNumber"), ("ADTRAN-MIB", "adProdRevision"), ("ADTRAN-MIB", "adProdSwVersion"), ("ADTRAN-MIB", "adProdPhysAddress"), ("ADTRAN-MIB", "adProdProductID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adBaseGroup = adBaseGroup.setStatus('current')
if mibBuilder.loadTexts: adBaseGroup.setDescription('The ADTRAN Base Group.')
adCNDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 99, 2, 2)).setObjects(("ADTRAN-MIB", "adProdTransType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adCNDGroup = adCNDGroup.setStatus('current')
if mibBuilder.loadTexts: adCNDGroup.setDescription('Variables supported by CND products only.')
mibBuilder.exportSymbols("ADTRAN-MIB", adProducts=adProducts, adtran=adtran, adIdentity=adIdentity, adProdSerialNumber=adProdSerialNumber, adBaseGroup=adBaseGroup, adProdRevision=adProdRevision, adAgentCapShared=adAgentCapShared, adProdName=adProdName, adMIBGroups=adMIBGroups, adPerform=adPerform, adProdProductID=adProdProductID, adCNDGroup=adCNDGroup, adIdentityShared=adIdentityShared, PYSNMP_MODULE_ID=adtran, adProductInfo=adProductInfo, adAdmin=adAdmin, adProdPartNumber=adProdPartNumber, adCompliance=adCompliance, adAgentCapModule=adAgentCapModule, adShared=adShared, adProdSwVersion=adProdSwVersion, adComplianceShared=adComplianceShared, adMgmt=adMgmt, adConformance=adConformance, adProdPhysAddress=adProdPhysAddress, adCompliances=adCompliances, adProdCLEIcode=adProdCLEIcode, adAgentCapProduct=adAgentCapProduct, adProdTransType=adProdTransType)
