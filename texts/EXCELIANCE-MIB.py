#
# PySNMP MIB module EXCELIANCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/haproxy/EXCELIANCE-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 08:06:47 2024
# On host fv-az1110-484 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter64, Unsigned32, Bits, enterprises, iso, NotificationType, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter32, TimeTicks, Integer32, ModuleIdentity, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "Bits", "enterprises", "iso", "NotificationType", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter32", "TimeTicks", "Integer32", "ModuleIdentity", "ObjectIdentity", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
exceliance = ModuleIdentity((1, 3, 6, 1, 4, 1, 23263))
exceliance.setRevisions(('2016-06-01 00:01',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: exceliance.setRevisionsDescriptions(('',))
if mibBuilder.loadTexts: exceliance.setLastUpdated('201606010001Z')
if mibBuilder.loadTexts: exceliance.setOrganization('EXCELIANCE')
if mibBuilder.loadTexts: exceliance.setContactInfo('EXCELIANCE\n\t\t3 Rue du petit robinson\n\t\tZAC des Metz\n\t\t78350 JOUY EN JOSAS\n                FRANCE\n\n                support@exceliance.net\n\t\t')
if mibBuilder.loadTexts: exceliance.setDescription('EXCELIANCE SNMP MIB')
products = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4))
landef = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 1))
compat1 = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1))
counters = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 1))
attackNumber = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attackNumber.setStatus('current')
if mibBuilder.loadTexts: attackNumber.setDescription('Detected attacks number')
acceptedPqts = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acceptedPqts.setStatus('current')
if mibBuilder.loadTexts: acceptedPqts.setDescription('Accepted paquets')
droppedPqts = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: droppedPqts.setStatus('current')
if mibBuilder.loadTexts: droppedPqts.setDescription('Dropped paquets')
services = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 2))
serviceName = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceName.setStatus('current')
if mibBuilder.loadTexts: serviceName.setDescription('Service name')
serviceStatus = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("stopped", 0), ("running", 1), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceStatus.setStatus('current')
if mibBuilder.loadTexts: serviceStatus.setDescription('Service status')
hostInfos = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3))
lastIP = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lastIP.setStatus('current')
if mibBuilder.loadTexts: lastIP.setDescription('Last IP address')
dnsName = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsName.setStatus('current')
if mibBuilder.loadTexts: dnsName.setDescription('Dns name')
hostStatus = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostStatus.setStatus('current')
if mibBuilder.loadTexts: hostStatus.setDescription('Host status')
os = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: os.setStatus('current')
if mibBuilder.loadTexts: os.setDescription('OS')
osDetails = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDetails.setStatus('current')
if mibBuilder.loadTexts: osDetails.setDescription('OS details')
uptime = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uptime.setStatus('current')
if mibBuilder.loadTexts: uptime.setDescription('Uptime in seconds')
netbiosName = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbiosName.setStatus('current')
if mibBuilder.loadTexts: netbiosName.setDescription('Netbios name')
netbiosUser = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbiosUser.setStatus('current')
if mibBuilder.loadTexts: netbiosUser.setDescription('Netbios user')
workgroup = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: workgroup.setStatus('current')
if mibBuilder.loadTexts: workgroup.setDescription('workgroup')
hostServer = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostServer.setStatus('current')
if mibBuilder.loadTexts: hostServer.setDescription('Server (file sharing)')
manufacturer = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 1, 1, 3, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: manufacturer.setStatus('current')
if mibBuilder.loadTexts: manufacturer.setDescription('Iface manufacturer')
eTrapsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 2))
eTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 3))
eNotificationMsg = NotificationType((1, 3, 6, 1, 4, 1, 23263, 3, 1001))
if mibBuilder.loadTexts: eNotificationMsg.setStatus('current')
if mibBuilder.loadTexts: eNotificationMsg.setDescription('A simple notification')
alTrap = NotificationType((1, 3, 6, 1, 4, 1, 23263, 3, 1002)).setObjects(("EXCELIANCE-MIB", "alTrapId"), ("EXCELIANCE-MIB", "alTrapMsg"), ("EXCELIANCE-MIB", "alTrapName"))
if mibBuilder.loadTexts: alTrap.setStatus('current')
if mibBuilder.loadTexts: alTrap.setDescription('Aloha SMIv2 notification')
alTrapId = MibScalar((1, 3, 6, 1, 4, 1, 23263, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(101, 102, 103, 201, 202, 203, 211, 212, 213, 301, 302, 311, 312, 401, 402, 403, 404, 411, 412, 413, 414))).clone(namedValues=NamedValues(("vrrpmaster", 101), ("vrrpbackup", 102), ("vrrpfault", 103), ("serverdown", 201), ("frontendfull", 202), ("backenddown", 203), ("serverup", 211), ("frontendopen", 212), ("backendup", 213), ("l4serverdown", 301), ("l4directordown", 302), ("l4serverup", 311), ("l4directorup", 312), ("synfloodoff", 401), ("ackrstfloodoff", 402), ("unknownttloff", 403), ("surgeoff", 404), ("synfloodon", 411), ("ackrstfloodon", 412), ("unknownttlon", 413), ("surgeon", 414)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alTrapId.setStatus('current')
if mibBuilder.loadTexts: alTrapId.setDescription('Some determined trap type')
alTrapMsg = MibScalar((1, 3, 6, 1, 4, 1, 23263, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alTrapMsg.setStatus('current')
if mibBuilder.loadTexts: alTrapMsg.setDescription('Trap message text')
alTrapName = MibScalar((1, 3, 6, 1, 4, 1, 23263, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alTrapName.setStatus('current')
if mibBuilder.loadTexts: alTrapName.setDescription('Server or Instance concerned by trap')
aloha = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 2))
alcompat1 = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1))
alProductInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 1))
alProductName = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProductName.setStatus('current')
if mibBuilder.loadTexts: alProductName.setDescription('Product Name')
alProductModel = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProductModel.setStatus('current')
if mibBuilder.loadTexts: alProductModel.setDescription('Product Model')
alProductVersion = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProductVersion.setStatus('current')
if mibBuilder.loadTexts: alProductVersion.setDescription('Product Version')
alProductSubVersion = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProductSubVersion.setStatus('current')
if mibBuilder.loadTexts: alProductSubVersion.setDescription('Product SubVersion')
alProductBuildVersion = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProductBuildVersion.setStatus('current')
if mibBuilder.loadTexts: alProductBuildVersion.setDescription('Product Build Version')
alProductBuildDate = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProductBuildDate.setStatus('current')
if mibBuilder.loadTexts: alProductBuildDate.setDescription('Product Build Date')
alProductURL = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProductURL.setStatus('current')
if mibBuilder.loadTexts: alProductURL.setDescription('Product URL ')
alServices = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2))
alServiceTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2, 1), )
if mibBuilder.loadTexts: alServiceTable.setStatus('current')
if mibBuilder.loadTexts: alServiceTable.setDescription('The table of services.')
alServiceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2, 1, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "alServiceID"))
if mibBuilder.loadTexts: alServiceTableEntry.setStatus('current')
if mibBuilder.loadTexts: alServiceTableEntry.setDescription('A row in the services table.')
alServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServiceID.setStatus('current')
if mibBuilder.loadTexts: alServiceID.setDescription('The service identifier.')
alServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServiceName.setStatus('current')
if mibBuilder.loadTexts: alServiceName.setDescription('The service name.')
alServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("stopped", 0), ("running", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServiceStatus.setStatus('current')
if mibBuilder.loadTexts: alServiceStatus.setDescription('The service status.')
alInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2, 2), )
if mibBuilder.loadTexts: alInstanceTable.setStatus('current')
if mibBuilder.loadTexts: alInstanceTable.setDescription('The table of services instances.')
alInstanceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2, 2, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "alInstanceServiceID"), (0, "EXCELIANCE-MIB", "alInstanceID"))
if mibBuilder.loadTexts: alInstanceTableEntry.setStatus('current')
if mibBuilder.loadTexts: alInstanceTableEntry.setDescription('A row in the services instances table.')
alInstanceServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alInstanceServiceID.setStatus('current')
if mibBuilder.loadTexts: alInstanceServiceID.setDescription('The service identifier.')
alInstanceID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alInstanceID.setStatus('current')
if mibBuilder.loadTexts: alInstanceID.setDescription('The instance identifier.')
alInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alInstanceName.setStatus('current')
if mibBuilder.loadTexts: alInstanceName.setDescription('The instance name.')
alInstanceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("stopped", 0), ("running", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alInstanceStatus.setStatus('current')
if mibBuilder.loadTexts: alInstanceStatus.setDescription('The instance status.')
alStats = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3))
alProcessTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1), )
if mibBuilder.loadTexts: alProcessTable.setStatus('current')
if mibBuilder.loadTexts: alProcessTable.setDescription('The table of processes.')
alProcessTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "alProcessID"))
if mibBuilder.loadTexts: alProcessTableEntry.setStatus('current')
if mibBuilder.loadTexts: alProcessTableEntry.setDescription('A row in the process table.')
alProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessID.setStatus('current')
if mibBuilder.loadTexts: alProcessID.setDescription('The process identifier.')
alProcessVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessVersion.setStatus('current')
if mibBuilder.loadTexts: alProcessVersion.setDescription('The L7 process version.')
alProcessReleaseDate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessReleaseDate.setStatus('current')
if mibBuilder.loadTexts: alProcessReleaseDate.setDescription('The L7 process release date.')
alProcessNbProc = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessNbProc.setStatus('current')
if mibBuilder.loadTexts: alProcessNbProc.setDescription('The number of process and sub processes.')
alProcessProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessProductName.setStatus('current')
if mibBuilder.loadTexts: alProcessProductName.setDescription('The L7 process name.')
alProcessSystemPID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessSystemPID.setStatus('current')
if mibBuilder.loadTexts: alProcessSystemPID.setDescription('The process system PID.')
alProcessUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessUptime.setStatus('current')
if mibBuilder.loadTexts: alProcessUptime.setDescription('The process Up time.')
alProcessUptimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessUptimeSec.setStatus('current')
if mibBuilder.loadTexts: alProcessUptimeSec.setDescription('The process Up time in seconds.')
alProcessMemMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessMemMax.setStatus('current')
if mibBuilder.loadTexts: alProcessMemMax.setDescription('The process max memory usage in MegaBytes.')
alProcessPoolAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessPoolAlloc.setStatus('current')
if mibBuilder.loadTexts: alProcessPoolAlloc.setDescription('Number of MegaBytes allocated in memory pools.')
alProcessPoolUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessPoolUsed.setStatus('current')
if mibBuilder.loadTexts: alProcessPoolUsed.setDescription('Number of MegaBytes used in memory pools.')
alProcessPoolFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessPoolFailed.setStatus('current')
if mibBuilder.loadTexts: alProcessPoolFailed.setDescription('Number of failed from memory pools.')
alProcessUlimitn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessUlimitn.setStatus('current')
if mibBuilder.loadTexts: alProcessUlimitn.setDescription('Ulimit -n value for current process.')
alProcessMaxSock = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessMaxSock.setStatus('current')
if mibBuilder.loadTexts: alProcessMaxSock.setDescription('maximum socket for current process.')
alProcessMaxConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessMaxConn.setStatus('current')
if mibBuilder.loadTexts: alProcessMaxConn.setDescription('Configured maximum of connections for current process.')
alProcessHardMaxConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessHardMaxConn.setStatus('current')
if mibBuilder.loadTexts: alProcessHardMaxConn.setDescription('Hard configured maximum of connections for current process.')
alProcessCurConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessCurConn.setStatus('current')
if mibBuilder.loadTexts: alProcessCurConn.setDescription('Current number of connections for current process.')
alProcessCumConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessCumConn.setStatus('current')
if mibBuilder.loadTexts: alProcessCumConn.setDescription('Counter of connections for current process.')
alProcessCumReq = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessCumReq.setStatus('current')
if mibBuilder.loadTexts: alProcessCumReq.setDescription('Counter of requests for current process.')
alProcessMaxSslConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessMaxSslConn.setStatus('current')
if mibBuilder.loadTexts: alProcessMaxSslConn.setDescription('Maximum of ssl connections for current process.')
alProcessCurSslConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessCurSslConn.setStatus('current')
if mibBuilder.loadTexts: alProcessCurSslConn.setDescription('Current number of ssl connections for current process.')
alProcessCumSslConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessCumSslConn.setStatus('current')
if mibBuilder.loadTexts: alProcessCumSslConn.setDescription('Counter of ssl connections for current process.')
alProcessMaxPipes = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessMaxPipes.setStatus('current')
if mibBuilder.loadTexts: alProcessMaxPipes.setDescription('Max number of pipes for current process.')
alProcessPipesUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessPipesUsed.setStatus('current')
if mibBuilder.loadTexts: alProcessPipesUsed.setDescription('Number of pipes used by current process.')
alProcessPipesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessPipesFree.setStatus('current')
if mibBuilder.loadTexts: alProcessPipesFree.setDescription('Number of free pipes for current process.')
alProcessConnRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessConnRate.setStatus('current')
if mibBuilder.loadTexts: alProcessConnRate.setDescription('Connection rate on current process.')
alProcessConnRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessConnRateLimit.setStatus('current')
if mibBuilder.loadTexts: alProcessConnRateLimit.setDescription('Connection rate limit for current process.')
alProcessMaxConnRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessMaxConnRate.setStatus('current')
if mibBuilder.loadTexts: alProcessMaxConnRate.setDescription('Max connection rate reached by current process.')
alProcessSessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessSessRate.setStatus('current')
if mibBuilder.loadTexts: alProcessSessRate.setDescription('Session rate on current process.')
alProcessSessRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessSessRateLimit.setStatus('current')
if mibBuilder.loadTexts: alProcessSessRateLimit.setDescription('Session rate limit for current process.')
alProcessMaxSessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessMaxSessRate.setStatus('current')
if mibBuilder.loadTexts: alProcessMaxSessRate.setDescription('Max session rate reached by current process.')
alProcessSslRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessSslRate.setStatus('current')
if mibBuilder.loadTexts: alProcessSslRate.setDescription('Ssl session rate on current process.')
alProcessSslRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessSslRateLimit.setStatus('current')
if mibBuilder.loadTexts: alProcessSslRateLimit.setDescription('Ssl session rate limit for current process.')
alProcessMaxSslRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessMaxSslRate.setStatus('current')
if mibBuilder.loadTexts: alProcessMaxSslRate.setDescription('Max ssl session rate reached by current process.')
alProcessSslFrontendKeyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessSslFrontendKeyRate.setStatus('current')
if mibBuilder.loadTexts: alProcessSslFrontendKeyRate.setDescription('Ssl key rate on frontend side for current process.')
alProcessMaxSslFrontendKeyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessMaxSslFrontendKeyRate.setStatus('current')
if mibBuilder.loadTexts: alProcessMaxSslFrontendKeyRate.setDescription('Max key rate on frontend side for current process.')
alProcessSslFrontendSessReuse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessSslFrontendSessReuse.setStatus('current')
if mibBuilder.loadTexts: alProcessSslFrontendSessReuse.setDescription('Percent of ssl session reuse on frontend side for current process.')
alProcessSslBackendKeyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessSslBackendKeyRate.setStatus('current')
if mibBuilder.loadTexts: alProcessSslBackendKeyRate.setDescription('Ssl key rate on backend side for current process.')
alProcessMaxSslBackendKeyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessMaxSslBackendKeyRate.setStatus('current')
if mibBuilder.loadTexts: alProcessMaxSslBackendKeyRate.setDescription('Max key rate on backend side for current process.')
alProcessSslCacheLookups = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessSslCacheLookups.setStatus('current')
if mibBuilder.loadTexts: alProcessSslCacheLookups.setDescription('Counter of lookups in cache.')
alProcessSslCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessSslCacheMisses.setStatus('current')
if mibBuilder.loadTexts: alProcessSslCacheMisses.setDescription('Counter of unmatching lookups in cache.')
alProcessCompressBpsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessCompressBpsIn.setStatus('current')
if mibBuilder.loadTexts: alProcessCompressBpsIn.setDescription('Compression bandwidth in input.')
alProcessCompressBpsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessCompressBpsOut.setStatus('current')
if mibBuilder.loadTexts: alProcessCompressBpsOut.setDescription('Compression bandwidth in output.')
alProcessCompressRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessCompressRateLimit.setStatus('current')
if mibBuilder.loadTexts: alProcessCompressRateLimit.setDescription('Compression bandwidth limit.')
alProcessZlibMemUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessZlibMemUsage.setStatus('current')
if mibBuilder.loadTexts: alProcessZlibMemUsage.setDescription('Zlib memory usage in Bytes.')
alProcessMaxZlibMemUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessMaxZlibMemUsage.setStatus('current')
if mibBuilder.loadTexts: alProcessMaxZlibMemUsage.setDescription('Maximum limit of zlib memory usage in Bytes.')
alProcessTasks = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessTasks.setStatus('current')
if mibBuilder.loadTexts: alProcessTasks.setDescription('Number of tasks for current process.')
alProcessRunQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessRunQueue.setStatus('current')
if mibBuilder.loadTexts: alProcessRunQueue.setDescription('Number of scheduled tasks for current process.')
alProcessIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessIdle.setStatus('current')
if mibBuilder.loadTexts: alProcessIdle.setDescription('Idle time in percent.')
alProcessNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 50), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessNodeName.setStatus('current')
if mibBuilder.loadTexts: alProcessNodeName.setDescription("The node's name.")
alProcessDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 1, 1, 51), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alProcessDescription.setStatus('current')
if mibBuilder.loadTexts: alProcessDescription.setDescription('Configured description.')
alBackendTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3), )
if mibBuilder.loadTexts: alBackendTable.setStatus('current')
if mibBuilder.loadTexts: alBackendTable.setDescription('The table of backends.')
alBackendTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "alBackendProcessID"), (0, "EXCELIANCE-MIB", "alBackendID"))
if mibBuilder.loadTexts: alBackendTableEntry.setStatus('current')
if mibBuilder.loadTexts: alBackendTableEntry.setDescription('A row in the backends table.')
alBackendProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendProcessID.setStatus('current')
if mibBuilder.loadTexts: alBackendProcessID.setDescription("The backend's process identifier.")
alBackendID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendID.setStatus('current')
if mibBuilder.loadTexts: alBackendID.setDescription('The backend identifier.')
alBackendName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendName.setStatus('current')
if mibBuilder.loadTexts: alBackendName.setDescription('The backend name.')
alBackendQueueCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendQueueCur.setStatus('current')
if mibBuilder.loadTexts: alBackendQueueCur.setDescription('The backend identifier.')
alBackendQueueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendQueueMax.setStatus('current')
if mibBuilder.loadTexts: alBackendQueueMax.setDescription('Maximum sessions in queue.')
alBackendQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendQueueLimit.setStatus('current')
if mibBuilder.loadTexts: alBackendQueueLimit.setDescription('Sessions limit in queue.')
alBackendSessionCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendSessionCur.setStatus('current')
if mibBuilder.loadTexts: alBackendSessionCur.setDescription('Current sessions.')
alBackendSessionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendSessionMax.setStatus('current')
if mibBuilder.loadTexts: alBackendSessionMax.setDescription('Maximum sessions.')
alBackendSessionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendSessionLimit.setStatus('current')
if mibBuilder.loadTexts: alBackendSessionLimit.setDescription('Sessions limit.')
alBackendSessionTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendSessionTotal.setStatus('current')
if mibBuilder.loadTexts: alBackendSessionTotal.setDescription('Total sessions.')
alBackendSessionLoadBalanced = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendSessionLoadBalanced.setStatus('current')
if mibBuilder.loadTexts: alBackendSessionLoadBalanced.setDescription('Load balanced sessions.')
alBackendBytesIN = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendBytesIN.setStatus('current')
if mibBuilder.loadTexts: alBackendBytesIN.setDescription('Bytes input.')
alBackendBytesOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendBytesOUT.setStatus('current')
if mibBuilder.loadTexts: alBackendBytesOUT.setDescription('Bytes output.')
alBackendErrorConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendErrorConnection.setStatus('current')
if mibBuilder.loadTexts: alBackendErrorConnection.setDescription('Connection errors.')
alBackendErrorResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendErrorResponse.setStatus('current')
if mibBuilder.loadTexts: alBackendErrorResponse.setDescription('Response errors.')
alBackendDenyRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendDenyRequest.setStatus('current')
if mibBuilder.loadTexts: alBackendDenyRequest.setDescription('Denied requests.')
alBackendDenyResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendDenyResponse.setStatus('current')
if mibBuilder.loadTexts: alBackendDenyResponse.setDescription('Denied responses.')
alBackendWarningRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendWarningRetry.setStatus('current')
if mibBuilder.loadTexts: alBackendWarningRetry.setDescription('Retry warnings.')
alBackendWarningRedispatch = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendWarningRedispatch.setStatus('current')
if mibBuilder.loadTexts: alBackendWarningRedispatch.setDescription('Redispatch warnings.')
alBackendStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendStatus.setStatus('current')
if mibBuilder.loadTexts: alBackendStatus.setDescription('The backend status.')
alBackendLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendLastChange.setStatus('current')
if mibBuilder.loadTexts: alBackendLastChange.setDescription('The backend last status change.')
alBackendCheckDown = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendCheckDown.setStatus('current')
if mibBuilder.loadTexts: alBackendCheckDown.setDescription('Checked down.')
alBackendDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alBackendDownTime.setStatus('current')
if mibBuilder.loadTexts: alBackendDownTime.setDescription('Total down time.')
alFrontendTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2), )
if mibBuilder.loadTexts: alFrontendTable.setStatus('current')
if mibBuilder.loadTexts: alFrontendTable.setDescription('The table of frontends.')
alFrontendTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "alFrontendProcessID"), (0, "EXCELIANCE-MIB", "alFrontendID"))
if mibBuilder.loadTexts: alFrontendTableEntry.setStatus('current')
if mibBuilder.loadTexts: alFrontendTableEntry.setDescription('A row in the backend table.')
alFrontendProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendProcessID.setStatus('current')
if mibBuilder.loadTexts: alFrontendProcessID.setDescription("The frontend's process identifier.")
alFrontendID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendID.setStatus('current')
if mibBuilder.loadTexts: alFrontendID.setDescription('The frontend identifier.')
alFrontendName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendName.setStatus('current')
if mibBuilder.loadTexts: alFrontendName.setDescription('The frontend name.')
alFrontendSessionCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendSessionCur.setStatus('current')
if mibBuilder.loadTexts: alFrontendSessionCur.setDescription('Current sessions.')
alFrontendSessionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendSessionMax.setStatus('current')
if mibBuilder.loadTexts: alFrontendSessionMax.setDescription('Maximum sessions.')
alFrontendSessionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendSessionLimit.setStatus('current')
if mibBuilder.loadTexts: alFrontendSessionLimit.setDescription('Sessions limit.')
alFrontendSessionTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendSessionTotal.setStatus('current')
if mibBuilder.loadTexts: alFrontendSessionTotal.setDescription('Total sessions.')
alFrontendBytesIN = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendBytesIN.setStatus('current')
if mibBuilder.loadTexts: alFrontendBytesIN.setDescription('Bytes input.')
alFrontendBytesOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendBytesOUT.setStatus('current')
if mibBuilder.loadTexts: alFrontendBytesOUT.setDescription('Bytes outpout.')
alFrontendErrorRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendErrorRequest.setStatus('current')
if mibBuilder.loadTexts: alFrontendErrorRequest.setDescription('Request errors.')
alFrontendDenyRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendDenyRequest.setStatus('current')
if mibBuilder.loadTexts: alFrontendDenyRequest.setDescription('Denied requests.')
alFrontendDenyResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendDenyResponse.setStatus('current')
if mibBuilder.loadTexts: alFrontendDenyResponse.setDescription('Denied responses.')
alFrontendStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alFrontendStatus.setStatus('current')
if mibBuilder.loadTexts: alFrontendStatus.setDescription('The backend status.')
alServerTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4), )
if mibBuilder.loadTexts: alServerTable.setStatus('current')
if mibBuilder.loadTexts: alServerTable.setDescription('The table of servers.')
alServerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "alServerProcessID"), (0, "EXCELIANCE-MIB", "alServerBackendID"), (0, "EXCELIANCE-MIB", "alServerID"))
if mibBuilder.loadTexts: alServerTableEntry.setStatus('current')
if mibBuilder.loadTexts: alServerTableEntry.setDescription('A row in the server table.')
alServerProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerProcessID.setStatus('current')
if mibBuilder.loadTexts: alServerProcessID.setDescription("The server's process identifier.")
alServerBackendID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerBackendID.setStatus('current')
if mibBuilder.loadTexts: alServerBackendID.setDescription("The server's backend identifier.")
alServerID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerID.setStatus('current')
if mibBuilder.loadTexts: alServerID.setDescription('The server identifier.')
alServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerName.setStatus('current')
if mibBuilder.loadTexts: alServerName.setDescription('The server name.')
alServerQueueCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerQueueCur.setStatus('current')
if mibBuilder.loadTexts: alServerQueueCur.setDescription('Current sessions in queue.')
alServerQueueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerQueueMax.setStatus('current')
if mibBuilder.loadTexts: alServerQueueMax.setDescription('Maximum sessions in queue.')
alServerQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerQueueLimit.setStatus('current')
if mibBuilder.loadTexts: alServerQueueLimit.setDescription('Sessions queue limit.')
alServerSessionCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerSessionCur.setStatus('current')
if mibBuilder.loadTexts: alServerSessionCur.setDescription('Current sessions.')
alServerSessionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerSessionMax.setStatus('current')
if mibBuilder.loadTexts: alServerSessionMax.setDescription('Maximum sessions.')
alServerSessionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerSessionLimit.setStatus('current')
if mibBuilder.loadTexts: alServerSessionLimit.setDescription('Sessions limit.')
alServerSessionTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerSessionTotal.setStatus('current')
if mibBuilder.loadTexts: alServerSessionTotal.setDescription('Total sessions.')
alServerSessionLoadBalanced = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerSessionLoadBalanced.setStatus('current')
if mibBuilder.loadTexts: alServerSessionLoadBalanced.setDescription('Load balanced sessions.')
alServerBytesIN = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerBytesIN.setStatus('current')
if mibBuilder.loadTexts: alServerBytesIN.setDescription('Bytes input.')
alServerBytesOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerBytesOUT.setStatus('current')
if mibBuilder.loadTexts: alServerBytesOUT.setDescription('Bytes output.')
alServerErrorConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerErrorConnection.setStatus('current')
if mibBuilder.loadTexts: alServerErrorConnection.setDescription('Connection errors.')
alServerErrorResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerErrorResponse.setStatus('current')
if mibBuilder.loadTexts: alServerErrorResponse.setDescription('Response errors.')
alServerDenyResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerDenyResponse.setStatus('current')
if mibBuilder.loadTexts: alServerDenyResponse.setDescription('Denied responses.')
alServerWarningRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerWarningRetry.setStatus('current')
if mibBuilder.loadTexts: alServerWarningRetry.setDescription('Retry warnigs.')
alServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerStatus.setStatus('current')
if mibBuilder.loadTexts: alServerStatus.setDescription('The server status.')
alServerLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerLastChange.setStatus('current')
if mibBuilder.loadTexts: alServerLastChange.setDescription('Last server status change.')
alServerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerWeight.setStatus('current')
if mibBuilder.loadTexts: alServerWeight.setDescription("Server's weight.")
alServerActive = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerActive.setStatus('current')
if mibBuilder.loadTexts: alServerActive.setDescription('Server is active.')
alServerBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerBackup.setStatus('current')
if mibBuilder.loadTexts: alServerBackup.setDescription('Server is backup.')
alServerCheckFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerCheckFailure.setStatus('current')
if mibBuilder.loadTexts: alServerCheckFailure.setDescription('Check failure.')
alServerCheckDown = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerCheckDown.setStatus('current')
if mibBuilder.loadTexts: alServerCheckDown.setDescription('Checked down.')
alServerDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerDownTime.setStatus('current')
if mibBuilder.loadTexts: alServerDownTime.setDescription('Total down time.')
alServerThrottle = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 3, 4, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alServerThrottle.setStatus('current')
if mibBuilder.loadTexts: alServerThrottle.setDescription('Server throttle.')
alL4Stats = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4))
alL4ProcessTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 1), )
if mibBuilder.loadTexts: alL4ProcessTable.setStatus('current')
if mibBuilder.loadTexts: alL4ProcessTable.setDescription('The table of processes.')
alL4ProcessTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 1, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "alL4ProcessID"))
if mibBuilder.loadTexts: alL4ProcessTableEntry.setStatus('current')
if mibBuilder.loadTexts: alL4ProcessTableEntry.setDescription('A row in the process table.')
alL4ProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ProcessID.setStatus('current')
if mibBuilder.loadTexts: alL4ProcessID.setDescription('The process identifier.')
alL4DirectorTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2), )
if mibBuilder.loadTexts: alL4DirectorTable.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorTable.setDescription('The table of directors.')
alL4DirectorTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "alL4DirectorProcessID"), (0, "EXCELIANCE-MIB", "alL4DirectorID"))
if mibBuilder.loadTexts: alL4DirectorTableEntry.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorTableEntry.setDescription('A row in the backends table.')
alL4DirectorProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4DirectorProcessID.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorProcessID.setDescription("The director's process identifier.")
alL4DirectorID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4DirectorID.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorID.setDescription('The director identifier.')
alL4DirectorName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4DirectorName.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorName.setDescription('The director name.')
alL4DirectorSessionCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4DirectorSessionCur.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorSessionCur.setDescription('Current sessions.')
alL4DirectorSessionTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4DirectorSessionTotal.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorSessionTotal.setDescription('Total sessions.')
alL4DirectorPacketsIN = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4DirectorPacketsIN.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorPacketsIN.setDescription('Packets input.')
alL4DirectorPacketsOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4DirectorPacketsOUT.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorPacketsOUT.setDescription('Packets output.')
alL4DirectorBytesIN = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4DirectorBytesIN.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorBytesIN.setDescription('Bytes input.')
alL4DirectorBytesOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4DirectorBytesOUT.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorBytesOUT.setDescription('Bytes output.')
alL4DirectorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4DirectorStatus.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorStatus.setDescription('The director status.')
alL4ServerTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3), )
if mibBuilder.loadTexts: alL4ServerTable.setStatus('current')
if mibBuilder.loadTexts: alL4ServerTable.setDescription('The table of servers.')
alL4ServerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "alL4ServerProcessID"), (0, "EXCELIANCE-MIB", "alL4ServerDirectorID"), (0, "EXCELIANCE-MIB", "alL4ServerID"))
if mibBuilder.loadTexts: alL4ServerTableEntry.setStatus('current')
if mibBuilder.loadTexts: alL4ServerTableEntry.setDescription('A row in the server table.')
alL4ServerProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerProcessID.setStatus('current')
if mibBuilder.loadTexts: alL4ServerProcessID.setDescription("The server's process identifier.")
alL4ServerDirectorID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerDirectorID.setStatus('current')
if mibBuilder.loadTexts: alL4ServerDirectorID.setDescription("The server's backend identifier.")
alL4ServerID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerID.setStatus('current')
if mibBuilder.loadTexts: alL4ServerID.setDescription('The server identifier.')
alL4ServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerName.setStatus('current')
if mibBuilder.loadTexts: alL4ServerName.setDescription('The server name.')
alL4ServerSessionCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerSessionCur.setStatus('current')
if mibBuilder.loadTexts: alL4ServerSessionCur.setDescription('Current sessions.')
alL4ServerSessionTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerSessionTotal.setStatus('current')
if mibBuilder.loadTexts: alL4ServerSessionTotal.setDescription('Total sessions.')
alL4ServerPacketsIN = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerPacketsIN.setStatus('current')
if mibBuilder.loadTexts: alL4ServerPacketsIN.setDescription('Packets input.')
alL4ServerPacketsOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerPacketsOUT.setStatus('current')
if mibBuilder.loadTexts: alL4ServerPacketsOUT.setDescription('Packets output.')
alL4ServerBytesIN = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerBytesIN.setStatus('current')
if mibBuilder.loadTexts: alL4ServerBytesIN.setDescription('Bytes input.')
alL4ServerBytesOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerBytesOUT.setStatus('current')
if mibBuilder.loadTexts: alL4ServerBytesOUT.setDescription('Bytes output.')
alL4ServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerStatus.setStatus('current')
if mibBuilder.loadTexts: alL4ServerStatus.setDescription('The server status.')
alL4ServerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerWeight.setStatus('current')
if mibBuilder.loadTexts: alL4ServerWeight.setDescription("Server's weight.")
alL4ServerActive = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerActive.setStatus('current')
if mibBuilder.loadTexts: alL4ServerActive.setDescription('Server is active.')
alL4ServerBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 4, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alL4ServerBackup.setStatus('current')
if mibBuilder.loadTexts: alL4ServerBackup.setDescription('Server is backup.')
alHardwareInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 5))
alHardwareModel = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 5, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareModel.setStatus('current')
if mibBuilder.loadTexts: alHardwareModel.setDescription('Model Name')
alHardwareUUID = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 5, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareUUID.setStatus('current')
if mibBuilder.loadTexts: alHardwareUUID.setDescription('Hardware UUID')
alHardwareETHID = MibScalar((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 5, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareETHID.setStatus('current')
if mibBuilder.loadTexts: alHardwareETHID.setDescription('Harware ETHID')
alPshieldStats = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6))
alPshieldInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1), )
if mibBuilder.loadTexts: alPshieldInstanceTable.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceTable.setDescription("The table of packetshield's instances.")
alPshieldInstanceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "alPshieldInstanceID"))
if mibBuilder.loadTexts: alPshieldInstanceTableEntry.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceTableEntry.setDescription('A row in the instances table.')
alPshieldInstanceID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceID.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceID.setDescription('The instance identifier.')
alPshieldInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceName.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceName.setDescription('The instance name.')
alPshieldInstanceRxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceRxTotal.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceRxTotal.setDescription('The total RX packets.')
alPshieldInstanceRxTotL3B = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceRxTotL3B.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceRxTotL3B.setDescription('The total RX L3 bandwidth in Bytes/s.')
alPshieldInstanceRxTotL1b = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceRxTotL1b.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceRxTotL1b.setDescription('The total RX L1 bandwidth in bits/s.')
alPshieldInstanceCaptureMissed = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceCaptureMissed.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceCaptureMissed.setDescription('The total of RX packets missed for capture.')
alPshieldInstanceDelivered = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceDelivered.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceDelivered.setDescription('The total of RX packets delivered to the system.')
alPshieldInstanceDelivL3B = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceDelivL3B.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceDelivL3B.setDescription('The total of RX L3 bandwidth delivered to the system in Bytes/s.')
alPshieldInstanceDelivL1b = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceDelivL1b.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceDelivL1b.setDescription('The total of RX L1 bandwidth delivered to the system in bits/s.')
alPshieldInstanceResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceResponses.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceResponses.setDescription('The total responded packets (syn cookies).')
alPshieldInstanceTxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceTxTotal.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceTxTotal.setDescription('The total TX packets.')
alPshieldInstanceSessionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionMax.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionMax.setDescription('Maximum number of sessions.')
alPshieldInstanceSessionOutgoing = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionOutgoing.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionOutgoing.setDescription('Active outgoing sessions.')
alPshieldInstanceSessionUpload = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionUpload.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionUpload.setDescription('Active upload sessions.')
alPshieldInstanceSessionIncoming = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionIncoming.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionIncoming.setDescription('Active incoming sessions.')
alPshieldInstanceSessionTotActive = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionTotActive.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionTotActive.setDescription('Total of active sessions.')
alPshieldInstanceSessionSynActive = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionSynActive.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionSynActive.setDescription('Total of active sessions for SYN packets.')
alPshieldInstanceSessionRstActive = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionRstActive.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionRstActive.setDescription('Total of active sessions for RST packets.')
alPshieldInstanceSessionAckActive = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionAckActive.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionAckActive.setDescription('Total of active sessions for ACK packets.')
alPshieldInstanceSessionDnsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionDnsActive.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionDnsActive.setDescription('Total of active sessions for DNS packets.')
alPshieldInstanceSessionOutActive = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionOutActive.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionOutActive.setDescription('Total of active sessions for outgoing packets.')
alPshieldInstanceSessionRetransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionRetransmit.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionRetransmit.setDescription('Total of active sessions for retransmit validation.')
alPshieldInstanceSessionForcedHash = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionForcedHash.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionForcedHash.setDescription("Last forced syncookie's hash timer in jiffies.")
alPshieldInstanceSessionForcedKernel = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldInstanceSessionForcedKernel.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceSessionForcedKernel.setDescription("Last forced kernel's syncookie protection timer in jiffies.")
alPshieldContextTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2), )
if mibBuilder.loadTexts: alPshieldContextTable.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextTable.setDescription("The table of packetshield's context.")
alPshieldContextTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "alPshieldContextInstanceID"), (0, "EXCELIANCE-MIB", "alPshieldContextID"))
if mibBuilder.loadTexts: alPshieldContextTableEntry.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextTableEntry.setDescription("A row in the packetshield's contexts table.")
alPshieldContextInstanceID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextInstanceID.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextInstanceID.setDescription("The context's instance identifier.")
alPshieldContextID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextID.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextID.setDescription("The context's identifier.")
alPshieldContextName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextName.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextName.setDescription('The context name.')
alPshieldContextStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 4), Bits().clone(namedValues=NamedValues(("none", 0), ("syncookie", 1), ("unkownttl", 2), ("unmatched", 4), ("surge", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextStatus.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextStatus.setDescription('The context status.')
alPshieldContextRxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextRxTotal.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextRxTotal.setDescription('The total RX packets.')
alPshieldContextInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextInvalid.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextInvalid.setDescription('The total filtered invalid packets.')
alPshieldContextWhitelisted = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextWhitelisted.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextWhitelisted.setDescription('The total forwarded packets because whitelisted.')
alPshieldContextFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextFiltered.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextFiltered.setDescription('The total filtered packets considering the port, protocol or sources policies.')
alPshieldContextOutRelated = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextOutRelated.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextOutRelated.setDescription('The total forwarded packets because they match an existing outgoing session.')
alPshieldContextDnsResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextDnsResponses.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextDnsResponses.setDescription('The total forwarded DNS responses because they match an existing DNS request in session table.')
alPshieldContextSyn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextSyn.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextSyn.setDescription('The total SYN packets received on protected tcp ports.')
alPshieldContextRst = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextRst.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextRst.setDescription('The total RST packets received on protected tcp ports.')
alPshieldContextAck = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextAck.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextAck.setDescription('The total ACK packets received on protected tcp ports.')
alPshieldContextUnknownTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextUnknownTtl.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextUnknownTtl.setDescription('The total packets with unknown TTL value.')
alPshieldContextTtlFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextTtlFiltered.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextTtlFiltered.setDescription('The total packets filtered due to unknown TTL value.')
alPshieldContextEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextEstablished.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextEstablished.setDescription('The total packets forwarded because matching an existing session.')
alPshieldContextNewConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextNewConnections.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextNewConnections.setDescription('The total of SYN packets considered as new connections.')
alPshieldContextUnmatched = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextUnmatched.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextUnmatched.setDescription("The total of ACK/RST packets which don't match any session.")
alPshieldContextSynCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextSynCookie.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextSynCookie.setDescription('The total of generated SYN+ACK syncookied packets.')
alPshieldContextDropSyn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextDropSyn.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextDropSyn.setDescription('The total of SYN packets dropped on protected port.')
alPshieldContextDropRst = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextDropRst.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextDropRst.setDescription('The total of Rst packets dropped on protected port.')
alPshieldContextDropAck = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextDropAck.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextDropAck.setDescription('The total of Ack packets dropped on protected port.')
alPshieldContextDelivered = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextDelivered.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextDelivered.setDescription('The total of packets delivered to system.')
alPshieldContextTxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 2, 1, 6, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alPshieldContextTxTotal.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextTxTotal.setDescription('The total of packets sent by the system.')
hapee = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 3))
lbcompat1 = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1))
lbProductInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 1))
lbStats = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3))
lbProcessTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1), )
if mibBuilder.loadTexts: lbProcessTable.setStatus('current')
if mibBuilder.loadTexts: lbProcessTable.setDescription('The table of processes.')
lbProcessTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "lbProcessID"))
if mibBuilder.loadTexts: lbProcessTableEntry.setStatus('current')
if mibBuilder.loadTexts: lbProcessTableEntry.setDescription('A row in the process table.')
lbProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessID.setStatus('current')
if mibBuilder.loadTexts: lbProcessID.setDescription('The process identifier.')
lbProcessVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessVersion.setStatus('current')
if mibBuilder.loadTexts: lbProcessVersion.setDescription('The L7 process version.')
lbProcessReleaseDate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessReleaseDate.setStatus('current')
if mibBuilder.loadTexts: lbProcessReleaseDate.setDescription('The L7 process release date.')
lbProcessNbProc = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessNbProc.setStatus('current')
if mibBuilder.loadTexts: lbProcessNbProc.setDescription('The number of process and sub processes.')
lbProcessProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessProductName.setStatus('current')
if mibBuilder.loadTexts: lbProcessProductName.setDescription('The L7 process name.')
lbProcessSystemPID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessSystemPID.setStatus('current')
if mibBuilder.loadTexts: lbProcessSystemPID.setDescription('The process system PID.')
lbProcessUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessUptime.setStatus('current')
if mibBuilder.loadTexts: lbProcessUptime.setDescription('The process Up time.')
lbProcessUptimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessUptimeSec.setStatus('current')
if mibBuilder.loadTexts: lbProcessUptimeSec.setDescription('The process Up time in seconds.')
lbProcessMemMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessMemMax.setStatus('current')
if mibBuilder.loadTexts: lbProcessMemMax.setDescription('The process max memory usage in MegaBytes.')
lbProcessPoolAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessPoolAlloc.setStatus('current')
if mibBuilder.loadTexts: lbProcessPoolAlloc.setDescription('Number of MegaBytes allocated in memory pools.')
lbProcessPoolUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessPoolUsed.setStatus('current')
if mibBuilder.loadTexts: lbProcessPoolUsed.setDescription('Number of MegaBytes used in memory pools.')
lbProcessPoolFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessPoolFailed.setStatus('current')
if mibBuilder.loadTexts: lbProcessPoolFailed.setDescription('Number of failed from memory pools.')
lbProcessUlimitn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessUlimitn.setStatus('current')
if mibBuilder.loadTexts: lbProcessUlimitn.setDescription('Ulimit -n value for current process.')
lbProcessMaxSock = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessMaxSock.setStatus('current')
if mibBuilder.loadTexts: lbProcessMaxSock.setDescription('maximum socket for current process.')
lbProcessMaxConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessMaxConn.setStatus('current')
if mibBuilder.loadTexts: lbProcessMaxConn.setDescription('Configured maximum of connections for current process.')
lbProcessHardMaxConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessHardMaxConn.setStatus('current')
if mibBuilder.loadTexts: lbProcessHardMaxConn.setDescription('Hard configured maximum of connections for current process.')
lbProcessCurConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessCurConn.setStatus('current')
if mibBuilder.loadTexts: lbProcessCurConn.setDescription('Current number of connections for current process.')
lbProcessCumConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessCumConn.setStatus('current')
if mibBuilder.loadTexts: lbProcessCumConn.setDescription('Counter of connections for current process.')
lbProcessCumReq = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessCumReq.setStatus('current')
if mibBuilder.loadTexts: lbProcessCumReq.setDescription('Counter of requests for current process.')
lbProcessMaxSslConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessMaxSslConn.setStatus('current')
if mibBuilder.loadTexts: lbProcessMaxSslConn.setDescription('Maximum of ssl connections for current process.')
lbProcessCurSslConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessCurSslConn.setStatus('current')
if mibBuilder.loadTexts: lbProcessCurSslConn.setDescription('Current number of ssl connections for current process.')
lbProcessCumSslConn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessCumSslConn.setStatus('current')
if mibBuilder.loadTexts: lbProcessCumSslConn.setDescription('Counter of ssl connections for current process.')
lbProcessMaxPipes = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessMaxPipes.setStatus('current')
if mibBuilder.loadTexts: lbProcessMaxPipes.setDescription('Max number of pipes for current process.')
lbProcessPipesUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessPipesUsed.setStatus('current')
if mibBuilder.loadTexts: lbProcessPipesUsed.setDescription('Number of pipes used by current process.')
lbProcessPipesFree = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessPipesFree.setStatus('current')
if mibBuilder.loadTexts: lbProcessPipesFree.setDescription('Number of free pipes for current process.')
lbProcessConnRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessConnRate.setStatus('current')
if mibBuilder.loadTexts: lbProcessConnRate.setDescription('Connection rate on current process.')
lbProcessConnRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessConnRateLimit.setStatus('current')
if mibBuilder.loadTexts: lbProcessConnRateLimit.setDescription('Connection rate limit for current process.')
lbProcessMaxConnRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessMaxConnRate.setStatus('current')
if mibBuilder.loadTexts: lbProcessMaxConnRate.setDescription('Max connection rate reached by current process.')
lbProcessSessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessSessRate.setStatus('current')
if mibBuilder.loadTexts: lbProcessSessRate.setDescription('Session rate on current process.')
lbProcessSessRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessSessRateLimit.setStatus('current')
if mibBuilder.loadTexts: lbProcessSessRateLimit.setDescription('Session rate limit for current process.')
lbProcessMaxSessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessMaxSessRate.setStatus('current')
if mibBuilder.loadTexts: lbProcessMaxSessRate.setDescription('Max session rate reached by current process.')
lbProcessSslRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessSslRate.setStatus('current')
if mibBuilder.loadTexts: lbProcessSslRate.setDescription('Ssl session rate on current process.')
lbProcessSslRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessSslRateLimit.setStatus('current')
if mibBuilder.loadTexts: lbProcessSslRateLimit.setDescription('Ssl session rate limit for current process.')
lbProcessMaxSslRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessMaxSslRate.setStatus('current')
if mibBuilder.loadTexts: lbProcessMaxSslRate.setDescription('Max ssl session rate reached by current process.')
lbProcessSslFrontendKeyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessSslFrontendKeyRate.setStatus('current')
if mibBuilder.loadTexts: lbProcessSslFrontendKeyRate.setDescription('Ssl key rate on frontend side for current process.')
lbProcessMaxSslFrontendKeyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessMaxSslFrontendKeyRate.setStatus('current')
if mibBuilder.loadTexts: lbProcessMaxSslFrontendKeyRate.setDescription('Max key rate on frontend side for current process.')
lbProcessSslFrontendSessReuse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessSslFrontendSessReuse.setStatus('current')
if mibBuilder.loadTexts: lbProcessSslFrontendSessReuse.setDescription('Percent of ssl session reuse on frontend side for current process.')
lbProcessSslBackendKeyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessSslBackendKeyRate.setStatus('current')
if mibBuilder.loadTexts: lbProcessSslBackendKeyRate.setDescription('Ssl key rate on backend side for current process.')
lbProcessMaxSslBackendKeyRate = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessMaxSslBackendKeyRate.setStatus('current')
if mibBuilder.loadTexts: lbProcessMaxSslBackendKeyRate.setDescription('Max key rate on backend side for current process.')
lbProcessSslCacheLookups = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessSslCacheLookups.setStatus('current')
if mibBuilder.loadTexts: lbProcessSslCacheLookups.setDescription('Counter of lookups in cache.')
lbProcessSslCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessSslCacheMisses.setStatus('current')
if mibBuilder.loadTexts: lbProcessSslCacheMisses.setDescription('Counter of unmatching lookups in cache.')
lbProcessCompressBpsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessCompressBpsIn.setStatus('current')
if mibBuilder.loadTexts: lbProcessCompressBpsIn.setDescription('Compression bandwidth in input.')
lbProcessCompressBpsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessCompressBpsOut.setStatus('current')
if mibBuilder.loadTexts: lbProcessCompressBpsOut.setDescription('Compression bandwidth in output.')
lbProcessCompressRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessCompressRateLimit.setStatus('current')
if mibBuilder.loadTexts: lbProcessCompressRateLimit.setDescription('Compression bandwidth limit.')
lbProcessZlibMemUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessZlibMemUsage.setStatus('current')
if mibBuilder.loadTexts: lbProcessZlibMemUsage.setDescription('Zlib memory usage in Bytes.')
lbProcessMaxZlibMemUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessMaxZlibMemUsage.setStatus('current')
if mibBuilder.loadTexts: lbProcessMaxZlibMemUsage.setDescription('Maximum limit of zlib memory usage in Bytes.')
lbProcessTasks = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessTasks.setStatus('current')
if mibBuilder.loadTexts: lbProcessTasks.setDescription('Number of tasks for current process.')
lbProcessRunQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessRunQueue.setStatus('current')
if mibBuilder.loadTexts: lbProcessRunQueue.setDescription('Number of scheduled tasks for current process.')
lbProcessIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessIdle.setStatus('current')
if mibBuilder.loadTexts: lbProcessIdle.setDescription('Idle time in percent.')
lbProcessNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 50), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessNodeName.setStatus('current')
if mibBuilder.loadTexts: lbProcessNodeName.setDescription("The node's name.")
lbProcessDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 1, 1, 51), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbProcessDescription.setStatus('current')
if mibBuilder.loadTexts: lbProcessDescription.setDescription('Configured description.')
lbBackendTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3), )
if mibBuilder.loadTexts: lbBackendTable.setStatus('current')
if mibBuilder.loadTexts: lbBackendTable.setDescription('The table of backends.')
lbBackendTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "lbBackendProcessID"), (0, "EXCELIANCE-MIB", "lbBackendID"))
if mibBuilder.loadTexts: lbBackendTableEntry.setStatus('current')
if mibBuilder.loadTexts: lbBackendTableEntry.setDescription('A row in the backends table.')
lbBackendProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendProcessID.setStatus('current')
if mibBuilder.loadTexts: lbBackendProcessID.setDescription("The backend's process identifier.")
lbBackendID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendID.setStatus('current')
if mibBuilder.loadTexts: lbBackendID.setDescription('The backend identifier.')
lbBackendName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendName.setStatus('current')
if mibBuilder.loadTexts: lbBackendName.setDescription('The backend name.')
lbBackendQueueCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendQueueCur.setStatus('current')
if mibBuilder.loadTexts: lbBackendQueueCur.setDescription('The backend identifier.')
lbBackendQueueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendQueueMax.setStatus('current')
if mibBuilder.loadTexts: lbBackendQueueMax.setDescription('Maximum sessions in queue.')
lbBackendQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendQueueLimit.setStatus('current')
if mibBuilder.loadTexts: lbBackendQueueLimit.setDescription('Sessions limit in queue.')
lbBackendSessionCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendSessionCur.setStatus('current')
if mibBuilder.loadTexts: lbBackendSessionCur.setDescription('Current sessions.')
lbBackendSessionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendSessionMax.setStatus('current')
if mibBuilder.loadTexts: lbBackendSessionMax.setDescription('Maximum sessions.')
lbBackendSessionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendSessionLimit.setStatus('current')
if mibBuilder.loadTexts: lbBackendSessionLimit.setDescription('Sessions limit.')
lbBackendSessionTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendSessionTotal.setStatus('current')
if mibBuilder.loadTexts: lbBackendSessionTotal.setDescription('Total sessions.')
lbBackendSessionLoadBalanced = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendSessionLoadBalanced.setStatus('current')
if mibBuilder.loadTexts: lbBackendSessionLoadBalanced.setDescription('Load balanced sessions.')
lbBackendBytesIN = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendBytesIN.setStatus('current')
if mibBuilder.loadTexts: lbBackendBytesIN.setDescription('Bytes input.')
lbBackendBytesOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendBytesOUT.setStatus('current')
if mibBuilder.loadTexts: lbBackendBytesOUT.setDescription('Bytes output.')
lbBackendErrorConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendErrorConnection.setStatus('current')
if mibBuilder.loadTexts: lbBackendErrorConnection.setDescription('Connection errors.')
lbBackendErrorResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendErrorResponse.setStatus('current')
if mibBuilder.loadTexts: lbBackendErrorResponse.setDescription('Response errors.')
lbBackendDenyRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendDenyRequest.setStatus('current')
if mibBuilder.loadTexts: lbBackendDenyRequest.setDescription('Denied requests.')
lbBackendDenyResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendDenyResponse.setStatus('current')
if mibBuilder.loadTexts: lbBackendDenyResponse.setDescription('Denied responses.')
lbBackendWarningRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendWarningRetry.setStatus('current')
if mibBuilder.loadTexts: lbBackendWarningRetry.setDescription('Retry warnings.')
lbBackendWarningRedispatch = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendWarningRedispatch.setStatus('current')
if mibBuilder.loadTexts: lbBackendWarningRedispatch.setDescription('Redispatch warnings.')
lbBackendStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendStatus.setStatus('current')
if mibBuilder.loadTexts: lbBackendStatus.setDescription('The backend status.')
lbBackendLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendLastChange.setStatus('current')
if mibBuilder.loadTexts: lbBackendLastChange.setDescription('The backend last status change.')
lbBackendCheckDown = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendCheckDown.setStatus('current')
if mibBuilder.loadTexts: lbBackendCheckDown.setDescription('Checked down.')
lbBackendDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBackendDownTime.setStatus('current')
if mibBuilder.loadTexts: lbBackendDownTime.setDescription('Total down time.')
lbFrontendTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2), )
if mibBuilder.loadTexts: lbFrontendTable.setStatus('current')
if mibBuilder.loadTexts: lbFrontendTable.setDescription('The table of frontends.')
lbFrontendTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "lbFrontendProcessID"), (0, "EXCELIANCE-MIB", "lbFrontendID"))
if mibBuilder.loadTexts: lbFrontendTableEntry.setStatus('current')
if mibBuilder.loadTexts: lbFrontendTableEntry.setDescription('A row in the backend table.')
lbFrontendProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendProcessID.setStatus('current')
if mibBuilder.loadTexts: lbFrontendProcessID.setDescription("The frontend's process identifier.")
lbFrontendID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendID.setStatus('current')
if mibBuilder.loadTexts: lbFrontendID.setDescription('The frontend identifier.')
lbFrontendName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendName.setStatus('current')
if mibBuilder.loadTexts: lbFrontendName.setDescription('The frontend name.')
lbFrontendSessionCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendSessionCur.setStatus('current')
if mibBuilder.loadTexts: lbFrontendSessionCur.setDescription('Current sessions.')
lbFrontendSessionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendSessionMax.setStatus('current')
if mibBuilder.loadTexts: lbFrontendSessionMax.setDescription('Maximum sessions.')
lbFrontendSessionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendSessionLimit.setStatus('current')
if mibBuilder.loadTexts: lbFrontendSessionLimit.setDescription('Sessions limit.')
lbFrontendSessionTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendSessionTotal.setStatus('current')
if mibBuilder.loadTexts: lbFrontendSessionTotal.setDescription('Total sessions.')
lbFrontendBytesIN = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendBytesIN.setStatus('current')
if mibBuilder.loadTexts: lbFrontendBytesIN.setDescription('Bytes input.')
lbFrontendBytesOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendBytesOUT.setStatus('current')
if mibBuilder.loadTexts: lbFrontendBytesOUT.setDescription('Bytes outpout.')
lbFrontendErrorRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendErrorRequest.setStatus('current')
if mibBuilder.loadTexts: lbFrontendErrorRequest.setDescription('Request errors.')
lbFrontendDenyRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendDenyRequest.setStatus('current')
if mibBuilder.loadTexts: lbFrontendDenyRequest.setDescription('Denied requests.')
lbFrontendDenyResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendDenyResponse.setStatus('current')
if mibBuilder.loadTexts: lbFrontendDenyResponse.setDescription('Denied responses.')
lbFrontendStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbFrontendStatus.setStatus('current')
if mibBuilder.loadTexts: lbFrontendStatus.setDescription('The backend status.')
lbServerTable = MibTable((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4), )
if mibBuilder.loadTexts: lbServerTable.setStatus('current')
if mibBuilder.loadTexts: lbServerTable.setDescription('The table of servers.')
lbServerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1), ).setIndexNames((0, "EXCELIANCE-MIB", "lbServerProcessID"), (0, "EXCELIANCE-MIB", "lbServerBackendID"), (0, "EXCELIANCE-MIB", "lbServerID"))
if mibBuilder.loadTexts: lbServerTableEntry.setStatus('current')
if mibBuilder.loadTexts: lbServerTableEntry.setDescription('A row in the server table.')
lbServerProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerProcessID.setStatus('current')
if mibBuilder.loadTexts: lbServerProcessID.setDescription("The server's process identifier.")
lbServerBackendID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerBackendID.setStatus('current')
if mibBuilder.loadTexts: lbServerBackendID.setDescription("The server's backend identifier.")
lbServerID = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerID.setStatus('current')
if mibBuilder.loadTexts: lbServerID.setDescription('The server identifier.')
lbServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerName.setStatus('current')
if mibBuilder.loadTexts: lbServerName.setDescription('The server name.')
lbServerQueueCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerQueueCur.setStatus('current')
if mibBuilder.loadTexts: lbServerQueueCur.setDescription('Current sessions in queue.')
lbServerQueueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerQueueMax.setStatus('current')
if mibBuilder.loadTexts: lbServerQueueMax.setDescription('Maximum sessions in queue.')
lbServerQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerQueueLimit.setStatus('current')
if mibBuilder.loadTexts: lbServerQueueLimit.setDescription('Sessions queue limit.')
lbServerSessionCur = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerSessionCur.setStatus('current')
if mibBuilder.loadTexts: lbServerSessionCur.setDescription('Current sessions.')
lbServerSessionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerSessionMax.setStatus('current')
if mibBuilder.loadTexts: lbServerSessionMax.setDescription('Maximum sessions.')
lbServerSessionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerSessionLimit.setStatus('current')
if mibBuilder.loadTexts: lbServerSessionLimit.setDescription('Sessions limit.')
lbServerSessionTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerSessionTotal.setStatus('current')
if mibBuilder.loadTexts: lbServerSessionTotal.setDescription('Total sessions.')
lbServerSessionLoadBalanced = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerSessionLoadBalanced.setStatus('current')
if mibBuilder.loadTexts: lbServerSessionLoadBalanced.setDescription('Load balanced sessions.')
lbServerBytesIN = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerBytesIN.setStatus('current')
if mibBuilder.loadTexts: lbServerBytesIN.setDescription('Bytes input.')
lbServerBytesOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerBytesOUT.setStatus('current')
if mibBuilder.loadTexts: lbServerBytesOUT.setDescription('Bytes output.')
lbServerErrorConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerErrorConnection.setStatus('current')
if mibBuilder.loadTexts: lbServerErrorConnection.setDescription('Connection errors.')
lbServerErrorResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerErrorResponse.setStatus('current')
if mibBuilder.loadTexts: lbServerErrorResponse.setDescription('Response errors.')
lbServerDenyResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerDenyResponse.setStatus('current')
if mibBuilder.loadTexts: lbServerDenyResponse.setDescription('Denied responses.')
lbServerWarningRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerWarningRetry.setStatus('current')
if mibBuilder.loadTexts: lbServerWarningRetry.setDescription('Retry warnigs.')
lbServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerStatus.setStatus('current')
if mibBuilder.loadTexts: lbServerStatus.setDescription('The server status.')
lbServerLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerLastChange.setStatus('current')
if mibBuilder.loadTexts: lbServerLastChange.setDescription('Last server status change.')
lbServerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerWeight.setStatus('current')
if mibBuilder.loadTexts: lbServerWeight.setDescription("Server's weight.")
lbServerActive = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerActive.setStatus('current')
if mibBuilder.loadTexts: lbServerActive.setDescription('Server is active.')
lbServerBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerBackup.setStatus('current')
if mibBuilder.loadTexts: lbServerBackup.setDescription('Server is backup.')
lbServerCheckFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerCheckFailure.setStatus('current')
if mibBuilder.loadTexts: lbServerCheckFailure.setDescription('Check failure.')
lbServerCheckDown = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerCheckDown.setStatus('current')
if mibBuilder.loadTexts: lbServerCheckDown.setDescription('Checked down.')
lbServerDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerDownTime.setStatus('current')
if mibBuilder.loadTexts: lbServerDownTime.setDescription('Total down time.')
lbServerThrottle = MibTableColumn((1, 3, 6, 1, 4, 1, 23263, 4, 3, 1, 3, 4, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbServerThrottle.setStatus('current')
if mibBuilder.loadTexts: lbServerThrottle.setDescription('Server throttle.')
landefgroups = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 1, 2))
landefObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 1, 2, 1)).setObjects(("EXCELIANCE-MIB", "attackNumber"), ("EXCELIANCE-MIB", "acceptedPqts"), ("EXCELIANCE-MIB", "droppedPqts"), ("EXCELIANCE-MIB", "serviceName"), ("EXCELIANCE-MIB", "serviceStatus"), ("EXCELIANCE-MIB", "lastIP"), ("EXCELIANCE-MIB", "dnsName"), ("EXCELIANCE-MIB", "hostStatus"), ("EXCELIANCE-MIB", "os"), ("EXCELIANCE-MIB", "osDetails"), ("EXCELIANCE-MIB", "uptime"), ("EXCELIANCE-MIB", "netbiosName"), ("EXCELIANCE-MIB", "netbiosUser"), ("EXCELIANCE-MIB", "workgroup"), ("EXCELIANCE-MIB", "hostServer"), ("EXCELIANCE-MIB", "manufacturer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    landefObjectGroup = landefObjectGroup.setStatus('current')
if mibBuilder.loadTexts: landefObjectGroup.setDescription('LANdef Objects')
algroups = MibIdentifier((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2))
alTrapNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 1)).setObjects(("EXCELIANCE-MIB", "eNotificationMsg"), ("EXCELIANCE-MIB", "alTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alTrapNotifGroup = alTrapNotifGroup.setStatus('current')
if mibBuilder.loadTexts: alTrapNotifGroup.setDescription('Aloha Trap Notifs')
alTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 2)).setObjects(("EXCELIANCE-MIB", "alTrapId"), ("EXCELIANCE-MIB", "alTrapMsg"), ("EXCELIANCE-MIB", "alTrapName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alTrapGroup = alTrapGroup.setStatus('current')
if mibBuilder.loadTexts: alTrapGroup.setDescription('Aloha Trap Objects')
alProductGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 3)).setObjects(("EXCELIANCE-MIB", "alProductName"), ("EXCELIANCE-MIB", "alProductModel"), ("EXCELIANCE-MIB", "alProductVersion"), ("EXCELIANCE-MIB", "alProductSubVersion"), ("EXCELIANCE-MIB", "alProductBuildVersion"), ("EXCELIANCE-MIB", "alProductBuildDate"), ("EXCELIANCE-MIB", "alProductURL"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alProductGroup = alProductGroup.setStatus('current')
if mibBuilder.loadTexts: alProductGroup.setDescription('Aloha Products Objects')
alServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 4)).setObjects(("EXCELIANCE-MIB", "alServiceID"), ("EXCELIANCE-MIB", "alServiceName"), ("EXCELIANCE-MIB", "alServiceStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alServiceGroup = alServiceGroup.setStatus('current')
if mibBuilder.loadTexts: alServiceGroup.setDescription('Aloha Service Objects')
alInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 5)).setObjects(("EXCELIANCE-MIB", "alInstanceServiceID"), ("EXCELIANCE-MIB", "alInstanceID"), ("EXCELIANCE-MIB", "alInstanceName"), ("EXCELIANCE-MIB", "alInstanceStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alInstanceGroup = alInstanceGroup.setStatus('current')
if mibBuilder.loadTexts: alInstanceGroup.setDescription('Aloha Instance Objects')
alProcessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 6)).setObjects(("EXCELIANCE-MIB", "alProcessID"), ("EXCELIANCE-MIB", "alProcessVersion"), ("EXCELIANCE-MIB", "alProcessReleaseDate"), ("EXCELIANCE-MIB", "alProcessNbProc"), ("EXCELIANCE-MIB", "alProcessProductName"), ("EXCELIANCE-MIB", "alProcessSystemPID"), ("EXCELIANCE-MIB", "alProcessUptime"), ("EXCELIANCE-MIB", "alProcessUptimeSec"), ("EXCELIANCE-MIB", "alProcessMemMax"), ("EXCELIANCE-MIB", "alProcessPoolAlloc"), ("EXCELIANCE-MIB", "alProcessPoolUsed"), ("EXCELIANCE-MIB", "alProcessPoolFailed"), ("EXCELIANCE-MIB", "alProcessUlimitn"), ("EXCELIANCE-MIB", "alProcessMaxSock"), ("EXCELIANCE-MIB", "alProcessMaxConn"), ("EXCELIANCE-MIB", "alProcessHardMaxConn"), ("EXCELIANCE-MIB", "alProcessCurConn"), ("EXCELIANCE-MIB", "alProcessCumConn"), ("EXCELIANCE-MIB", "alProcessCumReq"), ("EXCELIANCE-MIB", "alProcessMaxSslConn"), ("EXCELIANCE-MIB", "alProcessCurSslConn"), ("EXCELIANCE-MIB", "alProcessCumSslConn"), ("EXCELIANCE-MIB", "alProcessMaxPipes"), ("EXCELIANCE-MIB", "alProcessPipesUsed"), ("EXCELIANCE-MIB", "alProcessPipesFree"), ("EXCELIANCE-MIB", "alProcessConnRate"), ("EXCELIANCE-MIB", "alProcessConnRateLimit"), ("EXCELIANCE-MIB", "alProcessMaxConnRate"), ("EXCELIANCE-MIB", "alProcessSessRate"), ("EXCELIANCE-MIB", "alProcessSessRateLimit"), ("EXCELIANCE-MIB", "alProcessMaxSessRate"), ("EXCELIANCE-MIB", "alProcessSslRate"), ("EXCELIANCE-MIB", "alProcessSslRateLimit"), ("EXCELIANCE-MIB", "alProcessMaxSslRate"), ("EXCELIANCE-MIB", "alProcessSslFrontendKeyRate"), ("EXCELIANCE-MIB", "alProcessMaxSslFrontendKeyRate"), ("EXCELIANCE-MIB", "alProcessSslFrontendSessReuse"), ("EXCELIANCE-MIB", "alProcessSslBackendKeyRate"), ("EXCELIANCE-MIB", "alProcessMaxSslBackendKeyRate"), ("EXCELIANCE-MIB", "alProcessSslCacheLookups"), ("EXCELIANCE-MIB", "alProcessSslCacheMisses"), ("EXCELIANCE-MIB", "alProcessCompressBpsIn"), ("EXCELIANCE-MIB", "alProcessCompressBpsOut"), ("EXCELIANCE-MIB", "alProcessCompressRateLimit"), ("EXCELIANCE-MIB", "alProcessZlibMemUsage"), ("EXCELIANCE-MIB", "alProcessMaxZlibMemUsage"), ("EXCELIANCE-MIB", "alProcessTasks"), ("EXCELIANCE-MIB", "alProcessRunQueue"), ("EXCELIANCE-MIB", "alProcessIdle"), ("EXCELIANCE-MIB", "alProcessNodeName"), ("EXCELIANCE-MIB", "alProcessDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alProcessGroup = alProcessGroup.setStatus('current')
if mibBuilder.loadTexts: alProcessGroup.setDescription('Aloha Process Objects')
alBackendGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 7)).setObjects(("EXCELIANCE-MIB", "alBackendProcessID"), ("EXCELIANCE-MIB", "alBackendID"), ("EXCELIANCE-MIB", "alBackendName"), ("EXCELIANCE-MIB", "alBackendQueueCur"), ("EXCELIANCE-MIB", "alBackendQueueMax"), ("EXCELIANCE-MIB", "alBackendQueueLimit"), ("EXCELIANCE-MIB", "alBackendSessionCur"), ("EXCELIANCE-MIB", "alBackendSessionMax"), ("EXCELIANCE-MIB", "alBackendSessionLimit"), ("EXCELIANCE-MIB", "alBackendSessionTotal"), ("EXCELIANCE-MIB", "alBackendSessionLoadBalanced"), ("EXCELIANCE-MIB", "alBackendBytesIN"), ("EXCELIANCE-MIB", "alBackendBytesOUT"), ("EXCELIANCE-MIB", "alBackendErrorConnection"), ("EXCELIANCE-MIB", "alBackendErrorResponse"), ("EXCELIANCE-MIB", "alBackendDenyRequest"), ("EXCELIANCE-MIB", "alBackendDenyResponse"), ("EXCELIANCE-MIB", "alBackendWarningRetry"), ("EXCELIANCE-MIB", "alBackendWarningRedispatch"), ("EXCELIANCE-MIB", "alBackendStatus"), ("EXCELIANCE-MIB", "alBackendLastChange"), ("EXCELIANCE-MIB", "alBackendCheckDown"), ("EXCELIANCE-MIB", "alBackendDownTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alBackendGroup = alBackendGroup.setStatus('current')
if mibBuilder.loadTexts: alBackendGroup.setDescription('Aloha Backend Objects')
alFrontendGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 8)).setObjects(("EXCELIANCE-MIB", "alFrontendProcessID"), ("EXCELIANCE-MIB", "alFrontendID"), ("EXCELIANCE-MIB", "alFrontendName"), ("EXCELIANCE-MIB", "alFrontendSessionCur"), ("EXCELIANCE-MIB", "alFrontendSessionMax"), ("EXCELIANCE-MIB", "alFrontendSessionLimit"), ("EXCELIANCE-MIB", "alFrontendSessionTotal"), ("EXCELIANCE-MIB", "alFrontendBytesIN"), ("EXCELIANCE-MIB", "alFrontendBytesOUT"), ("EXCELIANCE-MIB", "alFrontendErrorRequest"), ("EXCELIANCE-MIB", "alFrontendDenyRequest"), ("EXCELIANCE-MIB", "alFrontendDenyResponse"), ("EXCELIANCE-MIB", "alFrontendStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alFrontendGroup = alFrontendGroup.setStatus('current')
if mibBuilder.loadTexts: alFrontendGroup.setDescription('Aloha Frontend Objects')
alServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 9)).setObjects(("EXCELIANCE-MIB", "alServerProcessID"), ("EXCELIANCE-MIB", "alServerBackendID"), ("EXCELIANCE-MIB", "alServerID"), ("EXCELIANCE-MIB", "alServerName"), ("EXCELIANCE-MIB", "alServerQueueCur"), ("EXCELIANCE-MIB", "alServerQueueMax"), ("EXCELIANCE-MIB", "alServerQueueLimit"), ("EXCELIANCE-MIB", "alServerSessionCur"), ("EXCELIANCE-MIB", "alServerSessionMax"), ("EXCELIANCE-MIB", "alServerSessionLimit"), ("EXCELIANCE-MIB", "alServerSessionTotal"), ("EXCELIANCE-MIB", "alServerSessionLoadBalanced"), ("EXCELIANCE-MIB", "alServerBytesIN"), ("EXCELIANCE-MIB", "alServerBytesOUT"), ("EXCELIANCE-MIB", "alServerErrorConnection"), ("EXCELIANCE-MIB", "alServerErrorResponse"), ("EXCELIANCE-MIB", "alServerDenyResponse"), ("EXCELIANCE-MIB", "alServerWarningRetry"), ("EXCELIANCE-MIB", "alServerStatus"), ("EXCELIANCE-MIB", "alServerLastChange"), ("EXCELIANCE-MIB", "alServerWeight"), ("EXCELIANCE-MIB", "alServerActive"), ("EXCELIANCE-MIB", "alServerBackup"), ("EXCELIANCE-MIB", "alServerCheckFailure"), ("EXCELIANCE-MIB", "alServerCheckDown"), ("EXCELIANCE-MIB", "alServerDownTime"), ("EXCELIANCE-MIB", "alServerThrottle"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alServerGroup = alServerGroup.setStatus('current')
if mibBuilder.loadTexts: alServerGroup.setDescription('Aloha Server Objects')
alL4ProcessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 10)).setObjects(("EXCELIANCE-MIB", "alL4ProcessID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alL4ProcessGroup = alL4ProcessGroup.setStatus('current')
if mibBuilder.loadTexts: alL4ProcessGroup.setDescription('Aloha L4 Process Objects')
alL4DirectorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 11)).setObjects(("EXCELIANCE-MIB", "alL4DirectorProcessID"), ("EXCELIANCE-MIB", "alL4DirectorID"), ("EXCELIANCE-MIB", "alL4DirectorName"), ("EXCELIANCE-MIB", "alL4DirectorSessionCur"), ("EXCELIANCE-MIB", "alL4DirectorSessionTotal"), ("EXCELIANCE-MIB", "alL4DirectorPacketsIN"), ("EXCELIANCE-MIB", "alL4DirectorPacketsOUT"), ("EXCELIANCE-MIB", "alL4DirectorBytesIN"), ("EXCELIANCE-MIB", "alL4DirectorBytesOUT"), ("EXCELIANCE-MIB", "alL4DirectorStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alL4DirectorGroup = alL4DirectorGroup.setStatus('current')
if mibBuilder.loadTexts: alL4DirectorGroup.setDescription('Aloha L4 Director Objects')
alL4ServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 12)).setObjects(("EXCELIANCE-MIB", "alL4ServerProcessID"), ("EXCELIANCE-MIB", "alL4ServerDirectorID"), ("EXCELIANCE-MIB", "alL4ServerID"), ("EXCELIANCE-MIB", "alL4ServerName"), ("EXCELIANCE-MIB", "alL4ServerSessionCur"), ("EXCELIANCE-MIB", "alL4ServerSessionTotal"), ("EXCELIANCE-MIB", "alL4ServerPacketsIN"), ("EXCELIANCE-MIB", "alL4ServerPacketsOUT"), ("EXCELIANCE-MIB", "alL4ServerBytesIN"), ("EXCELIANCE-MIB", "alL4ServerBytesOUT"), ("EXCELIANCE-MIB", "alL4ServerStatus"), ("EXCELIANCE-MIB", "alL4ServerWeight"), ("EXCELIANCE-MIB", "alL4ServerActive"), ("EXCELIANCE-MIB", "alL4ServerBackup"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alL4ServerGroup = alL4ServerGroup.setStatus('current')
if mibBuilder.loadTexts: alL4ServerGroup.setDescription('Aloha L4 Server Objects')
alHardwareInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 13)).setObjects(("EXCELIANCE-MIB", "alHardwareModel"), ("EXCELIANCE-MIB", "alHardwareUUID"), ("EXCELIANCE-MIB", "alHardwareETHID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alHardwareInfoGroup = alHardwareInfoGroup.setStatus('current')
if mibBuilder.loadTexts: alHardwareInfoGroup.setDescription('Aloha HardwareInfo Objects')
alPshieldInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 14)).setObjects(("EXCELIANCE-MIB", "alPshieldInstanceID"), ("EXCELIANCE-MIB", "alPshieldInstanceName"), ("EXCELIANCE-MIB", "alPshieldInstanceRxTotal"), ("EXCELIANCE-MIB", "alPshieldInstanceRxTotL3B"), ("EXCELIANCE-MIB", "alPshieldInstanceRxTotL1b"), ("EXCELIANCE-MIB", "alPshieldInstanceCaptureMissed"), ("EXCELIANCE-MIB", "alPshieldInstanceDelivered"), ("EXCELIANCE-MIB", "alPshieldInstanceDelivL3B"), ("EXCELIANCE-MIB", "alPshieldInstanceDelivL1b"), ("EXCELIANCE-MIB", "alPshieldInstanceResponses"), ("EXCELIANCE-MIB", "alPshieldInstanceTxTotal"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionMax"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionOutgoing"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionUpload"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionIncoming"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionTotActive"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionSynActive"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionRstActive"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionAckActive"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionDnsActive"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionOutActive"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionRetransmit"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionForcedHash"), ("EXCELIANCE-MIB", "alPshieldInstanceSessionForcedKernel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alPshieldInstanceGroup = alPshieldInstanceGroup.setStatus('current')
if mibBuilder.loadTexts: alPshieldInstanceGroup.setDescription("Aloha Packetshield's Instance Objects")
alPshieldContextGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 23263, 4, 2, 2, 15)).setObjects(("EXCELIANCE-MIB", "alPshieldContextInstanceID"), ("EXCELIANCE-MIB", "alPshieldContextID"), ("EXCELIANCE-MIB", "alPshieldContextName"), ("EXCELIANCE-MIB", "alPshieldContextStatus"), ("EXCELIANCE-MIB", "alPshieldContextRxTotal"), ("EXCELIANCE-MIB", "alPshieldContextInvalid"), ("EXCELIANCE-MIB", "alPshieldContextWhitelisted"), ("EXCELIANCE-MIB", "alPshieldContextFiltered"), ("EXCELIANCE-MIB", "alPshieldContextOutRelated"), ("EXCELIANCE-MIB", "alPshieldContextDnsResponses"), ("EXCELIANCE-MIB", "alPshieldContextSyn"), ("EXCELIANCE-MIB", "alPshieldContextRst"), ("EXCELIANCE-MIB", "alPshieldContextAck"), ("EXCELIANCE-MIB", "alPshieldContextUnknownTtl"), ("EXCELIANCE-MIB", "alPshieldContextTtlFiltered"), ("EXCELIANCE-MIB", "alPshieldContextEstablished"), ("EXCELIANCE-MIB", "alPshieldContextNewConnections"), ("EXCELIANCE-MIB", "alPshieldContextUnmatched"), ("EXCELIANCE-MIB", "alPshieldContextSynCookie"), ("EXCELIANCE-MIB", "alPshieldContextDropSyn"), ("EXCELIANCE-MIB", "alPshieldContextDropRst"), ("EXCELIANCE-MIB", "alPshieldContextDropAck"), ("EXCELIANCE-MIB", "alPshieldContextDelivered"), ("EXCELIANCE-MIB", "alPshieldContextTxTotal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alPshieldContextGroup = alPshieldContextGroup.setStatus('current')
if mibBuilder.loadTexts: alPshieldContextGroup.setDescription("Aloha Packetshield's Context Objects")
mibBuilder.exportSymbols("EXCELIANCE-MIB", lbServerLastChange=lbServerLastChange, lbProcessNodeName=lbProcessNodeName, alStats=alStats, alPshieldContextFiltered=alPshieldContextFiltered, lbServerStatus=lbServerStatus, alL4DirectorTableEntry=alL4DirectorTableEntry, alPshieldInstanceSessionForcedHash=alPshieldInstanceSessionForcedHash, alPshieldContextTable=alPshieldContextTable, lbBackendTableEntry=lbBackendTableEntry, alL4DirectorName=alL4DirectorName, alL4ServerWeight=alL4ServerWeight, alL4ServerSessionTotal=alL4ServerSessionTotal, alBackendSessionMax=alBackendSessionMax, alProcessCompressRateLimit=alProcessCompressRateLimit, lastIP=lastIP, lbFrontendID=lbFrontendID, lbFrontendBytesOUT=lbFrontendBytesOUT, alProcessMaxSslFrontendKeyRate=alProcessMaxSslFrontendKeyRate, lbBackendCheckDown=lbBackendCheckDown, lbBackendQueueMax=lbBackendQueueMax, alL4DirectorPacketsOUT=alL4DirectorPacketsOUT, alServerSessionLoadBalanced=alServerSessionLoadBalanced, alPshieldInstanceTableEntry=alPshieldInstanceTableEntry, lbServerName=lbServerName, alProcessMemMax=alProcessMemMax, alBackendErrorConnection=alBackendErrorConnection, lbProcessMaxConnRate=lbProcessMaxConnRate, alBackendSessionLoadBalanced=alBackendSessionLoadBalanced, alPshieldInstanceSessionRstActive=alPshieldInstanceSessionRstActive, alServerBackendID=alServerBackendID, alBackendWarningRetry=alBackendWarningRetry, lbProcessNbProc=lbProcessNbProc, alPshieldStats=alPshieldStats, lbProcessIdle=lbProcessIdle, alProductSubVersion=alProductSubVersion, lbProcessPipesUsed=lbProcessPipesUsed, alFrontendID=alFrontendID, alL4DirectorPacketsIN=alL4DirectorPacketsIN, lbFrontendName=lbFrontendName, alFrontendSessionCur=alFrontendSessionCur, alProcessMaxSslRate=alProcessMaxSslRate, products=products, lbProcessUlimitn=lbProcessUlimitn, netbiosName=netbiosName, lbFrontendStatus=lbFrontendStatus, alFrontendTable=alFrontendTable, alProductBuildDate=alProductBuildDate, lbProcessUptimeSec=lbProcessUptimeSec, lbProcessMaxSslBackendKeyRate=lbProcessMaxSslBackendKeyRate, alServiceName=alServiceName, alServerName=alServerName, alBackendBytesOUT=alBackendBytesOUT, lbProcessSslRate=lbProcessSslRate, alProcessUptimeSec=alProcessUptimeSec, alBackendGroup=alBackendGroup, lbServerErrorConnection=lbServerErrorConnection, alProcessCompressBpsOut=alProcessCompressBpsOut, alFrontendErrorRequest=alFrontendErrorRequest, alProductVersion=alProductVersion, compat1=compat1, lbProcessConnRate=lbProcessConnRate, lbFrontendSessionTotal=lbFrontendSessionTotal, alFrontendGroup=alFrontendGroup, lbServerCheckDown=lbServerCheckDown, lbServerSessionMax=lbServerSessionMax, alProcessCumConn=alProcessCumConn, alL4ProcessID=alL4ProcessID, lbServerBytesOUT=lbServerBytesOUT, lbProcessCurSslConn=lbProcessCurSslConn, lbProcessMemMax=lbProcessMemMax, alProcessReleaseDate=alProcessReleaseDate, alL4ServerPacketsIN=alL4ServerPacketsIN, lbBackendErrorConnection=lbBackendErrorConnection, alPshieldContextStatus=alPshieldContextStatus, alPshieldInstanceResponses=alPshieldInstanceResponses, alServerQueueCur=alServerQueueCur, alL4ServerID=alL4ServerID, alProcessPipesFree=alProcessPipesFree, lbProcessCumSslConn=lbProcessCumSslConn, alProcessConnRate=alProcessConnRate, alPshieldInstanceSessionUpload=alPshieldInstanceSessionUpload, lbServerWeight=lbServerWeight, alL4DirectorStatus=alL4DirectorStatus, alTrapMsg=alTrapMsg, alL4DirectorBytesOUT=alL4DirectorBytesOUT, alServerErrorResponse=alServerErrorResponse, alServerTableEntry=alServerTableEntry, alBackendQueueLimit=alBackendQueueLimit, alFrontendTableEntry=alFrontendTableEntry, lbBackendDenyRequest=lbBackendDenyRequest, alInstanceID=alInstanceID, lbBackendName=lbBackendName, alBackendDownTime=alBackendDownTime, lbFrontendSessionLimit=lbFrontendSessionLimit, lbBackendSessionLimit=lbBackendSessionLimit, lbProcessSessRateLimit=lbProcessSessRateLimit, exceliance=exceliance, alProcessSslCacheMisses=alProcessSslCacheMisses, alProcessGroup=alProcessGroup, lbProcessPoolUsed=lbProcessPoolUsed, alServerWarningRetry=alServerWarningRetry, alProcessCurConn=alProcessCurConn, lbServerThrottle=lbServerThrottle, alL4ServerTableEntry=alL4ServerTableEntry, lbFrontendDenyRequest=lbFrontendDenyRequest, alL4Stats=alL4Stats, algroups=algroups, alPshieldInstanceDelivL3B=alPshieldInstanceDelivL3B, alBackendTable=alBackendTable, alTrapGroup=alTrapGroup, landefgroups=landefgroups, alProcessMaxSslBackendKeyRate=alProcessMaxSslBackendKeyRate, alServerDownTime=alServerDownTime, alL4ServerGroup=alL4ServerGroup, alProcessMaxConn=alProcessMaxConn, alProcessCumReq=alProcessCumReq, alPshieldInstanceSessionOutgoing=alPshieldInstanceSessionOutgoing, alProcessHardMaxConn=alProcessHardMaxConn, alProcessZlibMemUsage=alProcessZlibMemUsage, alServerGroup=alServerGroup, alFrontendName=alFrontendName, alL4ServerTable=alL4ServerTable, lbBackendLastChange=lbBackendLastChange, alPshieldContextID=alPshieldContextID, alL4DirectorSessionCur=alL4DirectorSessionCur, lbcompat1=lbcompat1, alProcessTasks=alProcessTasks, lbBackendQueueLimit=lbBackendQueueLimit, alL4DirectorBytesIN=alL4DirectorBytesIN, alTrapId=alTrapId, alBackendQueueMax=alBackendQueueMax, alBackendBytesIN=alBackendBytesIN, alServerThrottle=alServerThrottle, alBackendID=alBackendID, alFrontendSessionLimit=alFrontendSessionLimit, alPshieldContextAck=alPshieldContextAck, lbProcessCompressBpsIn=lbProcessCompressBpsIn, lbServerSessionCur=lbServerSessionCur, lbBackendID=lbBackendID, alServerLastChange=alServerLastChange, alL4DirectorSessionTotal=alL4DirectorSessionTotal, hapee=hapee, alPshieldInstanceSessionOutActive=alPshieldInstanceSessionOutActive, alServerSessionLimit=alServerSessionLimit, alInstanceTable=alInstanceTable, alL4ServerBytesIN=alL4ServerBytesIN, lbServerDenyResponse=lbServerDenyResponse, alPshieldContextName=alPshieldContextName, alProcessUlimitn=alProcessUlimitn, lbProcessCompressRateLimit=lbProcessCompressRateLimit, lbProcessSslFrontendKeyRate=lbProcessSslFrontendKeyRate, alL4DirectorID=alL4DirectorID, alPshieldContextTtlFiltered=alPshieldContextTtlFiltered, alPshieldInstanceName=alPshieldInstanceName, alServiceTable=alServiceTable, alTrapNotifGroup=alTrapNotifGroup, alPshieldContextNewConnections=alPshieldContextNewConnections, alInstanceStatus=alInstanceStatus, alPshieldContextDnsResponses=alPshieldContextDnsResponses, alTrap=alTrap, lbServerWarningRetry=lbServerWarningRetry, lbFrontendTableEntry=lbFrontendTableEntry, alHardwareModel=alHardwareModel, lbProcessSessRate=lbProcessSessRate, attackNumber=attackNumber, lbServerQueueLimit=lbServerQueueLimit, lbServerCheckFailure=lbServerCheckFailure, alPshieldContextTableEntry=alPshieldContextTableEntry, lbFrontendProcessID=lbFrontendProcessID, alPshieldContextOutRelated=alPshieldContextOutRelated, alProcessTableEntry=alProcessTableEntry, alL4DirectorTable=alL4DirectorTable, os=os, alProcessSystemPID=alProcessSystemPID, lbServerBackup=lbServerBackup, lbFrontendSessionCur=lbFrontendSessionCur, lbBackendSessionMax=lbBackendSessionMax, alProductModel=alProductModel, manufacturer=manufacturer, alServerErrorConnection=alServerErrorConnection, lbProcessTableEntry=lbProcessTableEntry, alL4ServerPacketsOUT=alL4ServerPacketsOUT, alServiceStatus=alServiceStatus, lbProcessSslRateLimit=lbProcessSslRateLimit, alL4ServerName=alL4ServerName, alProcessSslCacheLookups=alProcessSslCacheLookups, alPshieldContextTxTotal=alPshieldContextTxTotal, alL4ServerSessionCur=alL4ServerSessionCur, lbProcessRunQueue=lbProcessRunQueue, alServerProcessID=alServerProcessID, lbBackendBytesIN=lbBackendBytesIN, lbProcessProductName=lbProcessProductName, lbProcessMaxSslRate=lbProcessMaxSslRate, alBackendProcessID=alBackendProcessID, alProcessSslFrontendKeyRate=alProcessSslFrontendKeyRate, lbProcessPoolAlloc=lbProcessPoolAlloc, lbProcessUptime=lbProcessUptime, alInstanceGroup=alInstanceGroup, alProcessSslRateLimit=alProcessSslRateLimit, alProductName=alProductName, lbBackendSessionLoadBalanced=lbBackendSessionLoadBalanced, alProcessNodeName=alProcessNodeName, alServerSessionCur=alServerSessionCur, dnsName=dnsName, alBackendStatus=alBackendStatus, alServerActive=alServerActive, alPshieldContextDropAck=alPshieldContextDropAck, alServices=alServices, alPshieldInstanceRxTotL3B=alPshieldInstanceRxTotL3B, alPshieldInstanceDelivL1b=alPshieldInstanceDelivL1b, alBackendErrorResponse=alBackendErrorResponse, lbServerDownTime=lbServerDownTime, alFrontendDenyRequest=alFrontendDenyRequest, alPshieldInstanceDelivered=alPshieldInstanceDelivered, alcompat1=alcompat1, alProcessSessRate=alProcessSessRate, workgroup=workgroup, droppedPqts=droppedPqts, lbProcessSslCacheMisses=lbProcessSslCacheMisses, alL4ServerStatus=alL4ServerStatus, lbBackendQueueCur=lbBackendQueueCur, alL4ProcessGroup=alL4ProcessGroup, eTraps=eTraps, lbProcessHardMaxConn=lbProcessHardMaxConn, alL4ServerActive=alL4ServerActive, alProcessSslBackendKeyRate=alProcessSslBackendKeyRate, lbBackendTable=lbBackendTable, lbServerSessionTotal=lbServerSessionTotal, alProcessNbProc=alProcessNbProc, alProcessMaxSessRate=alProcessMaxSessRate, uptime=uptime, lbBackendProcessID=lbBackendProcessID, alProcessCompressBpsIn=alProcessCompressBpsIn, alServerSessionMax=alServerSessionMax, alL4ServerProcessID=alL4ServerProcessID, alPshieldContextEstablished=alPshieldContextEstablished, alServiceID=alServiceID, lbBackendSessionTotal=lbBackendSessionTotal, alL4ProcessTable=alL4ProcessTable, alFrontendProcessID=alFrontendProcessID, alPshieldInstanceRxTotL1b=alPshieldInstanceRxTotL1b, lbProcessTable=lbProcessTable, alBackendLastChange=alBackendLastChange, alBackendCheckDown=alBackendCheckDown, lbProcessMaxSessRate=lbProcessMaxSessRate, lbServerProcessID=lbServerProcessID, lbFrontendTable=lbFrontendTable, alProcessUptime=alProcessUptime, alTrapName=alTrapName, alProductGroup=alProductGroup, alPshieldContextInstanceID=alPshieldContextInstanceID, alServerQueueMax=alServerQueueMax, alProcessPoolUsed=alProcessPoolUsed, lbServerErrorResponse=lbServerErrorResponse)
mibBuilder.exportSymbols("EXCELIANCE-MIB", lbProcessConnRateLimit=lbProcessConnRateLimit, alBackendSessionLimit=alBackendSessionLimit, alPshieldInstanceSessionTotActive=alPshieldInstanceSessionTotActive, alServerTable=alServerTable, alL4ServerDirectorID=alL4ServerDirectorID, alPshieldInstanceTable=alPshieldInstanceTable, alProcessRunQueue=alProcessRunQueue, lbProcessMaxZlibMemUsage=lbProcessMaxZlibMemUsage, lbServerSessionLoadBalanced=lbServerSessionLoadBalanced, lbProcessReleaseDate=lbProcessReleaseDate, alServiceTableEntry=alServiceTableEntry, lbBackendDenyResponse=lbBackendDenyResponse, lbServerSessionLimit=lbServerSessionLimit, alHardwareUUID=alHardwareUUID, alProcessMaxPipes=alProcessMaxPipes, alServerCheckFailure=alServerCheckFailure, alFrontendDenyResponse=alFrontendDenyResponse, alPshieldContextDropRst=alPshieldContextDropRst, lbBackendErrorResponse=lbBackendErrorResponse, alBackendName=alBackendName, alL4ServerBytesOUT=alL4ServerBytesOUT, alServiceGroup=alServiceGroup, alProcessIdle=alProcessIdle, lbProcessPoolFailed=lbProcessPoolFailed, lbBackendBytesOUT=lbBackendBytesOUT, lbStats=lbStats, alProcessCurSslConn=alProcessCurSslConn, alPshieldContextSyn=alPshieldContextSyn, PYSNMP_MODULE_ID=exceliance, alProductURL=alProductURL, alPshieldContextInvalid=alPshieldContextInvalid, landefObjectGroup=landefObjectGroup, alProcessConnRateLimit=alProcessConnRateLimit, alL4ServerBackup=alL4ServerBackup, alServerWeight=alServerWeight, lbProcessDescription=lbProcessDescription, alL4DirectorGroup=alL4DirectorGroup, lbProcessCompressBpsOut=lbProcessCompressBpsOut, alPshieldInstanceSessionForcedKernel=alPshieldInstanceSessionForcedKernel, lbServerQueueMax=lbServerQueueMax, alBackendDenyResponse=alBackendDenyResponse, alBackendSessionCur=alBackendSessionCur, lbFrontendSessionMax=lbFrontendSessionMax, alFrontendSessionTotal=alFrontendSessionTotal, lbProcessSslFrontendSessReuse=lbProcessSslFrontendSessReuse, lbProcessMaxSslConn=lbProcessMaxSslConn, alHardwareETHID=alHardwareETHID, alBackendDenyRequest=alBackendDenyRequest, alFrontendSessionMax=alFrontendSessionMax, alBackendTableEntry=alBackendTableEntry, lbProductInfo=lbProductInfo, alFrontendBytesOUT=alFrontendBytesOUT, alProductInfo=alProductInfo, acceptedPqts=acceptedPqts, alProcessMaxSslConn=alProcessMaxSslConn, alPshieldInstanceSessionSynActive=alPshieldInstanceSessionSynActive, alPshieldContextGroup=alPshieldContextGroup, alPshieldInstanceSessionMax=alPshieldInstanceSessionMax, lbBackendStatus=lbBackendStatus, alProcessMaxConnRate=alProcessMaxConnRate, osDetails=osDetails, alProcessVersion=alProcessVersion, lbServerActive=lbServerActive, alProcessPipesUsed=alProcessPipesUsed, alPshieldContextSynCookie=alPshieldContextSynCookie, alPshieldInstanceSessionDnsActive=alPshieldInstanceSessionDnsActive, alServerID=alServerID, alServerDenyResponse=alServerDenyResponse, lbProcessMaxPipes=lbProcessMaxPipes, alProcessSslRate=alProcessSslRate, hostInfos=hostInfos, lbFrontendDenyResponse=lbFrontendDenyResponse, lbServerTable=lbServerTable, alFrontendStatus=alFrontendStatus, eNotificationMsg=eNotificationMsg, lbFrontendBytesIN=lbFrontendBytesIN, alServerBytesOUT=alServerBytesOUT, alServerStatus=alServerStatus, alInstanceName=alInstanceName, alHardwareInfo=alHardwareInfo, serviceStatus=serviceStatus, eTrapsObjects=eTrapsObjects, netbiosUser=netbiosUser, alProcessTable=alProcessTable, lbProcessMaxConn=lbProcessMaxConn, alProcessSslFrontendSessReuse=alProcessSslFrontendSessReuse, lbProcessVersion=lbProcessVersion, lbProcessZlibMemUsage=lbProcessZlibMemUsage, alPshieldInstanceSessionAckActive=alPshieldInstanceSessionAckActive, lbServerTableEntry=lbServerTableEntry, alPshieldContextRxTotal=alPshieldContextRxTotal, alProcessPoolFailed=alProcessPoolFailed, alPshieldContextDelivered=alPshieldContextDelivered, alPshieldContextUnmatched=alPshieldContextUnmatched, alPshieldContextUnknownTtl=alPshieldContextUnknownTtl, lbProcessSystemPID=lbProcessSystemPID, lbServerBackendID=lbServerBackendID, alBackendQueueCur=alBackendQueueCur, lbServerBytesIN=lbServerBytesIN, lbBackendSessionCur=lbBackendSessionCur, alPshieldContextRst=alPshieldContextRst, alL4DirectorProcessID=alL4DirectorProcessID, alPshieldInstanceID=alPshieldInstanceID, alServerBytesIN=alServerBytesIN, lbProcessMaxSslFrontendKeyRate=lbProcessMaxSslFrontendKeyRate, alBackendWarningRedispatch=alBackendWarningRedispatch, serviceName=serviceName, lbProcessID=lbProcessID, counters=counters, alInstanceTableEntry=alInstanceTableEntry, alPshieldContextDropSyn=alPshieldContextDropSyn, alProcessMaxZlibMemUsage=alProcessMaxZlibMemUsage, alFrontendBytesIN=alFrontendBytesIN, lbProcessCurConn=lbProcessCurConn, alPshieldInstanceRxTotal=alPshieldInstanceRxTotal, lbBackendWarningRedispatch=lbBackendWarningRedispatch, alServerCheckDown=alServerCheckDown, alProcessDescription=alProcessDescription, lbFrontendErrorRequest=lbFrontendErrorRequest, alInstanceServiceID=alInstanceServiceID, alPshieldInstanceTxTotal=alPshieldInstanceTxTotal, lbProcessMaxSock=lbProcessMaxSock, alProcessID=alProcessID, alProcessPoolAlloc=alProcessPoolAlloc, alPshieldContextWhitelisted=alPshieldContextWhitelisted, services=services, alProcessMaxSock=alProcessMaxSock, alProcessProductName=alProcessProductName, alL4ProcessTableEntry=alL4ProcessTableEntry, alProcessCumSslConn=alProcessCumSslConn, lbProcessCumConn=lbProcessCumConn, aloha=aloha, lbBackendWarningRetry=lbBackendWarningRetry, lbServerID=lbServerID, alBackendSessionTotal=alBackendSessionTotal, lbProcessSslBackendKeyRate=lbProcessSslBackendKeyRate, alPshieldInstanceGroup=alPshieldInstanceGroup, lbProcessSslCacheLookups=lbProcessSslCacheLookups, alPshieldInstanceSessionIncoming=alPshieldInstanceSessionIncoming, lbBackendDownTime=lbBackendDownTime, hostStatus=hostStatus, alProcessSessRateLimit=alProcessSessRateLimit, alPshieldInstanceCaptureMissed=alPshieldInstanceCaptureMissed, alProductBuildVersion=alProductBuildVersion, lbProcessPipesFree=lbProcessPipesFree, alServerSessionTotal=alServerSessionTotal, alServerQueueLimit=alServerQueueLimit, alServerBackup=alServerBackup, lbProcessCumReq=lbProcessCumReq, hostServer=hostServer, lbServerQueueCur=lbServerQueueCur, lbProcessTasks=lbProcessTasks, alHardwareInfoGroup=alHardwareInfoGroup, landef=landef, alPshieldInstanceSessionRetransmit=alPshieldInstanceSessionRetransmit)
