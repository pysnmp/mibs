#
# PySNMP MIB module NETBOTZV2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/netbotz/NETBOTZV2-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 13:32:13 2024
# On host fv-az883-167 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, IpAddress, ModuleIdentity, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, Unsigned32, Integer32, ObjectIdentity, MibIdentifier, Counter64, NotificationType, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "ModuleIdentity", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "Unsigned32", "Integer32", "ObjectIdentity", "MibIdentifier", "Counter64", "NotificationType", "Bits", "Counter32")
DateAndTime, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "DisplayString")
netBotz_V2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 5528, 100, 1)).setLabel("netBotz-V2")
if mibBuilder.loadTexts: netBotz_V2.setLastUpdated('200309090000Z')
if mibBuilder.loadTexts: netBotz_V2.setOrganization('NetBotz Inc')
if mibBuilder.loadTexts: netBotz_V2.setContactInfo('Postal: NetBotz, Inc\n                     11044 Research Blvd Suite C-100\n                     Austin, TX 78759\n                     US\n\n                Tel: +1 512 439 5800\n\n             E-mail: support@netbotz.com')
if mibBuilder.loadTexts: netBotz_V2.setDescription('NetBotz BotzWare V2.x MIB')
netBotz = MibIdentifier((1, 3, 6, 1, 4, 1, 5528))
netBotzV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100))
netBotzV2Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10))
netBotzV2TrapParms = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 11))
netBotzV2Products = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 20))
netBotzV2GenericTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 1))
netBotzV2SensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2))
netBotzV2PodTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3))
netBotzV2PortTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 4))
netBotzV2TempSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1))
netBotzV2HumiditySensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2))
netBotzV2DewPointSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3))
netBotzV2AirFlowSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4))
netBotzV2AudioSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5))
netBotzV2AmpDetectSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6))
netBotzV2DryContactSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 7))
netBotzV2CameraMotionSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 8))
netBotzV2DoorSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 9))
netBotzV2MicPlugSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 10))
netBotzV2SpeakerPlugSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 11))
netBotzV2TVSignalSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 12))
netBotzV2GPSPositionSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13))
netBotzV2GPSMovementSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14))
netBotzV2GPSStatusSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 15))
netBotzV2WirelessStatusSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 22))
netBotzV2PacketDropSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23))
netBotzV2SNMPCrawlerSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24))
netBotzV2PlugModuleStatusSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 25))
netBotzV2OutputControlSensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 26))
netBotzV2MultiRAESensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27))
netBotzV2MultiRAESensorStatusTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 28))
netBotzV2MultiRAEDeviceStatusTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 29))
netBotzV2BasePodTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 1))
netBotzV2SensorPodTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 2))
netBotzV2CameraPodTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 3))
netBotzV2Botz = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 20, 10))
netBotzWallBotz500 = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 20, 10, 2000))
netBotz420Wall = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 20, 10, 2001))
raeSystemsAreaConnect500 = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 20, 10, 2002))
netBotz420Rack = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 20, 10, 2003))
netBotz320Wall = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 20, 10, 2004))
netBotz320Rack = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 20, 10, 2005))
netBotz420ERack = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 20, 10, 2006))
netBotz320ERack = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 20, 10, 2007))
class OperStatus(TextualConvention, Integer32):
    description = 'The operational status of the device entity.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("disconnected", 0), ("error", 1), ("normal", 2))

class ErrorStatus(TextualConvention, Integer32):
    description = 'The error status of the device entity.  If there are no error conditions\n         reported for the entity, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the entity.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("normal", 0), ("info", 1), ("warning", 2), ("error", 3), ("critical", 4), ("failure", 5))

class BoolValue(TextualConvention, Integer32):
    description = 'A boolean value.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("no", 0), ("yes", 1), ("null", 2))

netBotzEnclosures = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 2))
netBotzPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 3))
netBotzSensors = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 4))
netBotzErrors = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 5))
netBotzNumericSensors = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1))
netBotzStateSensors = MibIdentifier((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2))
enclosureTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 2, 1), )
if mibBuilder.loadTexts: enclosureTable.setStatus('current')
if mibBuilder.loadTexts: enclosureTable.setDescription('A list of enclosures (base enclosure and pods).')
enclosureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 2, 1, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "enclosureId"))
if mibBuilder.loadTexts: enclosureEntry.setStatus('current')
if mibBuilder.loadTexts: enclosureEntry.setDescription('Enclosure entry.')
enclosureId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureId.setStatus('current')
if mibBuilder.loadTexts: enclosureId.setDescription('The id of the physical enclosure.')
enclosureStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 2, 1, 1, 2), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureStatus.setStatus('current')
if mibBuilder.loadTexts: enclosureStatus.setDescription('The operational status of the enclosure.')
enclosureErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 2, 1, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureErrorStatus.setStatus('current')
if mibBuilder.loadTexts: enclosureErrorStatus.setDescription('The error status of the enclosure.  If there are no error conditions\n         reported for the enclosure, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the enclosure.')
enclosureLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureLabel.setStatus('current')
if mibBuilder.loadTexts: enclosureLabel.setDescription('The unique label assigned to the enclosure (or pod).')
enclosureParentEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureParentEncId.setStatus('current')
if mibBuilder.loadTexts: enclosureParentEncId.setDescription('The id of the parent enclosure this enclosure is attached to.')
enclosureDockedToEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureDockedToEncId.setStatus('current')
if mibBuilder.loadTexts: enclosureDockedToEncId.setDescription('The id of the enclosure this enclosure is hard-docked with,\n         i.e. as when sensor and camera pods are docked with the base\n         system unit.')
dinPortTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 3, 1), )
if mibBuilder.loadTexts: dinPortTable.setStatus('current')
if mibBuilder.loadTexts: dinPortTable.setDescription('A list of DIN port entries.')
dinPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 3, 1, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "dinPortId"))
if mibBuilder.loadTexts: dinPortEntry.setStatus('current')
if mibBuilder.loadTexts: dinPortEntry.setDescription('DIN port entry.')
dinPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dinPortId.setStatus('current')
if mibBuilder.loadTexts: dinPortId.setDescription('The unique id of the port.')
dinPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 1, 1, 2), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dinPortStatus.setStatus('current')
if mibBuilder.loadTexts: dinPortStatus.setDescription('The operational status of the port.')
dinPortLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dinPortLabel.setStatus('current')
if mibBuilder.loadTexts: dinPortLabel.setDescription('The unique label assigned to the port.')
dinPortEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dinPortEncId.setStatus('current')
if mibBuilder.loadTexts: dinPortEncId.setDescription('The id of the physical enclosure containing the port.')
dinPortSensorIdSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dinPortSensorIdSuffix.setStatus('current')
if mibBuilder.loadTexts: dinPortSensorIdSuffix.setDescription('The ID suffix added to a sensor plugged into the port.\n         The ID suffix is combined with the sensor class ID when\n         generating a local unique id for the DIN sensor.')
dinPortSupportsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 1, 1, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dinPortSupportsAverage.setStatus('current')
if mibBuilder.loadTexts: dinPortSupportsAverage.setDescription('Whether the port supports returning the average voltage\n         reading of the sensor.  This is used to determine which\n         classes of sensors are supported by the port.')
dinPortSupportsRMS = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 1, 1, 7), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dinPortSupportsRMS.setStatus('current')
if mibBuilder.loadTexts: dinPortSupportsRMS.setDescription('Whether the port supports returning the AC RMS voltage\n         reading of the sensor.  This is used to determine which\n         classes of sensors are supported by the port.')
dinPortSupportsDryContact = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 1, 1, 8), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dinPortSupportsDryContact.setStatus('current')
if mibBuilder.loadTexts: dinPortSupportsDryContact.setDescription("Whether the port supports generating the 'open' and\n         'closed' state of a dry contact sensor. This information\n         is used to determine which classes of sensors are supported\n         by the port.")
otherPortTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 3, 10), )
if mibBuilder.loadTexts: otherPortTable.setStatus('current')
if mibBuilder.loadTexts: otherPortTable.setDescription('A list of other port entries.')
otherPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 3, 10, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "otherPortId"))
if mibBuilder.loadTexts: otherPortEntry.setStatus('current')
if mibBuilder.loadTexts: otherPortEntry.setDescription('Other port entry.')
otherPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherPortId.setStatus('current')
if mibBuilder.loadTexts: otherPortId.setDescription('The unique id of the port.')
otherPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 10, 1, 2), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherPortStatus.setStatus('current')
if mibBuilder.loadTexts: otherPortStatus.setDescription('The operational status of the port.')
otherPortLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherPortLabel.setStatus('current')
if mibBuilder.loadTexts: otherPortLabel.setDescription('The unique label assigned to the port.')
otherPortEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 3, 10, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherPortEncId.setStatus('current')
if mibBuilder.loadTexts: otherPortEncId.setDescription('The id of the physical enclosure containing the port.')
tempSensorTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 1), )
if mibBuilder.loadTexts: tempSensorTable.setStatus('current')
if mibBuilder.loadTexts: tempSensorTable.setDescription('A list of temperature sensor entries.')
tempSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 1, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "tempSensorId"))
if mibBuilder.loadTexts: tempSensorEntry.setStatus('current')
if mibBuilder.loadTexts: tempSensorEntry.setDescription('A temperature sensor entry.')
tempSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempSensorId.setStatus('current')
if mibBuilder.loadTexts: tempSensorId.setDescription('The unique id of the sensor.')
tempSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-500, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempSensorValue.setStatus('current')
if mibBuilder.loadTexts: tempSensorValue.setDescription('The temperature measured by the sensor in tenths of a degree Celsius.')
tempSensorErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 1, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempSensorErrorStatus.setStatus('current')
if mibBuilder.loadTexts: tempSensorErrorStatus.setDescription('The error status of the sensor.  If there are no error conditions\n         reported for the sensor, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the sensor.')
tempSensorLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempSensorLabel.setStatus('current')
if mibBuilder.loadTexts: tempSensorLabel.setDescription('The unique label assigned to the sensor.')
tempSensorEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempSensorEncId.setStatus('current')
if mibBuilder.loadTexts: tempSensorEncId.setDescription('The id of the physical enclosure containing the sensor.')
tempSensorPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempSensorPortId.setStatus('current')
if mibBuilder.loadTexts: tempSensorPortId.setDescription('The id of the port the sensor is plugged into (or empty string\n         if it is not plugged into a port).')
tempSensorValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempSensorValueStr.setStatus('current')
if mibBuilder.loadTexts: tempSensorValueStr.setDescription('The temperature reading, in degrees celsius, shown as a string (or empty string\n         if it is not plugged into a port).')
tempSensorValueInt = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempSensorValueInt.setStatus('current')
if mibBuilder.loadTexts: tempSensorValueInt.setDescription('The temperature measured by the sensor in degree Celsius.')
tempSensorValueIntF = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 212))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempSensorValueIntF.setStatus('current')
if mibBuilder.loadTexts: tempSensorValueIntF.setDescription('The temperature measured by the sensor in degree Farenheit.')
humiSensorTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 2), )
if mibBuilder.loadTexts: humiSensorTable.setStatus('current')
if mibBuilder.loadTexts: humiSensorTable.setDescription('A list of humidity sensor entries.')
humiSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 2, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "humiSensorId"))
if mibBuilder.loadTexts: humiSensorEntry.setStatus('current')
if mibBuilder.loadTexts: humiSensorEntry.setDescription('A humidity sensor entry.')
humiSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humiSensorId.setStatus('current')
if mibBuilder.loadTexts: humiSensorId.setDescription('The unique id of the sensor.')
humiSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humiSensorValue.setStatus('current')
if mibBuilder.loadTexts: humiSensorValue.setDescription('The relative humidity measured by the sensor in tenths of a percent.')
humiSensorErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 2, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: humiSensorErrorStatus.setStatus('current')
if mibBuilder.loadTexts: humiSensorErrorStatus.setDescription('The error status of the sensor.  If there are no error conditions\n         reported for the sensor, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the sensor.')
humiSensorLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: humiSensorLabel.setStatus('current')
if mibBuilder.loadTexts: humiSensorLabel.setDescription('The unique label assigned to the sensor.')
humiSensorEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humiSensorEncId.setStatus('current')
if mibBuilder.loadTexts: humiSensorEncId.setDescription('The id of the physical enclosure containing the sensor.')
humiSensorPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humiSensorPortId.setStatus('current')
if mibBuilder.loadTexts: humiSensorPortId.setDescription('The id of the port the sensor is plugged into (or empty string\n         if it is not plugged into a port).')
humiSensorValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: humiSensorValueStr.setStatus('current')
if mibBuilder.loadTexts: humiSensorValueStr.setDescription('The humidity reading, in percent, shown as a string (or empty string\n         if it is not plugged into a port).')
humiSensorValueInt = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humiSensorValueInt.setStatus('current')
if mibBuilder.loadTexts: humiSensorValueInt.setDescription('The relative humidity measured by the sensor in percent.')
dewPointSensorTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 3), )
if mibBuilder.loadTexts: dewPointSensorTable.setStatus('current')
if mibBuilder.loadTexts: dewPointSensorTable.setDescription('A list of dew point sensor entries.')
dewPointSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 3, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "dewPointSensorId"))
if mibBuilder.loadTexts: dewPointSensorEntry.setStatus('current')
if mibBuilder.loadTexts: dewPointSensorEntry.setDescription('An ampere sensor entry.')
dewPointSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dewPointSensorId.setStatus('current')
if mibBuilder.loadTexts: dewPointSensorId.setDescription('The unique id of the sensor.')
dewPointSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-500, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dewPointSensorValue.setStatus('current')
if mibBuilder.loadTexts: dewPointSensorValue.setDescription('The dew point value measured by the sensor in tenths of a degree Celsius.')
dewPointSensorErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 3, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dewPointSensorErrorStatus.setStatus('current')
if mibBuilder.loadTexts: dewPointSensorErrorStatus.setDescription('The operational status of the sensor.  If there are no error conditions\n         reported for the sensor, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the sensor.')
dewPointSensorLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dewPointSensorLabel.setStatus('current')
if mibBuilder.loadTexts: dewPointSensorLabel.setDescription('The unique label assigned to the sensor.')
dewPointSensorEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dewPointSensorEncId.setStatus('current')
if mibBuilder.loadTexts: dewPointSensorEncId.setDescription('The id of the physical enclosure containing the sensor.')
dewPointSensorPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dewPointSensorPortId.setStatus('current')
if mibBuilder.loadTexts: dewPointSensorPortId.setDescription('The id of the port the sensor is plugged into (or empty string\n         if it is not plugged into a port).')
dewPointSensorValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dewPointSensorValueStr.setStatus('current')
if mibBuilder.loadTexts: dewPointSensorValueStr.setDescription('The dew point reading, in degrees celsius, shown as a string (or empty string\n         if it is not plugged into a port).')
dewPointSensorValueInt = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dewPointSensorValueInt.setStatus('current')
if mibBuilder.loadTexts: dewPointSensorValueInt.setDescription('The dew point value measured by the sensor in degrees Celsius.')
audioSensorTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 4), )
if mibBuilder.loadTexts: audioSensorTable.setStatus('current')
if mibBuilder.loadTexts: audioSensorTable.setDescription('A list of audio sensor entries.')
audioSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 4, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "audioSensorId"))
if mibBuilder.loadTexts: audioSensorEntry.setStatus('current')
if mibBuilder.loadTexts: audioSensorEntry.setDescription('An audio sensor entry.')
audioSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: audioSensorId.setStatus('current')
if mibBuilder.loadTexts: audioSensorId.setDescription('The unique id of the sensor.')
audioSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: audioSensorValue.setStatus('current')
if mibBuilder.loadTexts: audioSensorValue.setDescription('The (unitless) audio level measured by the sensor.')
audioSensorErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 4, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: audioSensorErrorStatus.setStatus('current')
if mibBuilder.loadTexts: audioSensorErrorStatus.setDescription('The error status of the sensor.  If there are no error conditions\n         reported for the sensor, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the sensor.')
audioSensorLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: audioSensorLabel.setStatus('current')
if mibBuilder.loadTexts: audioSensorLabel.setDescription('The unique label assigned to the sensor.')
audioSensorEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: audioSensorEncId.setStatus('current')
if mibBuilder.loadTexts: audioSensorEncId.setDescription('The id of the physical enclosure containing the sensor.')
audioSensorPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: audioSensorPortId.setStatus('current')
if mibBuilder.loadTexts: audioSensorPortId.setDescription('The id of the port the sensor is plugged into (or empty string\n         if it is not plugged into a port).')
audioSensorValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: audioSensorValueStr.setStatus('current')
if mibBuilder.loadTexts: audioSensorValueStr.setDescription('The audio reading shown as a string (or empty string\n         if it is not plugged into a port).')
audioSensorValueInt = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: audioSensorValueInt.setStatus('current')
if mibBuilder.loadTexts: audioSensorValueInt.setDescription('The (unitless) audio level measured by the sensor (1/10 of audioSensorValue).')
airFlowSensorTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 5), )
if mibBuilder.loadTexts: airFlowSensorTable.setStatus('current')
if mibBuilder.loadTexts: airFlowSensorTable.setDescription('A list of airflow sensor entries.')
airFlowSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 5, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "airFlowSensorId"))
if mibBuilder.loadTexts: airFlowSensorEntry.setStatus('current')
if mibBuilder.loadTexts: airFlowSensorEntry.setDescription('An air flow sensor entry.')
airFlowSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: airFlowSensorId.setStatus('current')
if mibBuilder.loadTexts: airFlowSensorId.setDescription('The unique id of the sensor.')
airFlowSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: airFlowSensorValue.setStatus('current')
if mibBuilder.loadTexts: airFlowSensorValue.setDescription('The air flow measured by the sensor in tenths of a meter per minute.')
airFlowSensorErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 5, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: airFlowSensorErrorStatus.setStatus('current')
if mibBuilder.loadTexts: airFlowSensorErrorStatus.setDescription('The error status of the sensor.  If there are no error conditions\n         reported for the sensor, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the sensor.')
airFlowSensorLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: airFlowSensorLabel.setStatus('current')
if mibBuilder.loadTexts: airFlowSensorLabel.setDescription('The unique label assigned to the sensor.')
airFlowSensorEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: airFlowSensorEncId.setStatus('current')
if mibBuilder.loadTexts: airFlowSensorEncId.setDescription('The id of the physical enclosure containing the sensor.')
airFlowSensorPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: airFlowSensorPortId.setStatus('current')
if mibBuilder.loadTexts: airFlowSensorPortId.setDescription('The id of the port the sensor is plugged into (or empty string\n         if it is not plugged into a port).')
airFlowSensorValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 5, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: airFlowSensorValueStr.setStatus('current')
if mibBuilder.loadTexts: airFlowSensorValueStr.setDescription('The airflow reading, in meters per minute, shown as a string (or empty string\n         if it is not plugged into a port).')
airFlowSensorValueInt = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: airFlowSensorValueInt.setStatus('current')
if mibBuilder.loadTexts: airFlowSensorValueInt.setDescription('The air flow measured by the sensor in meters per minute.')
ampDetectSensorTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 6), )
if mibBuilder.loadTexts: ampDetectSensorTable.setStatus('current')
if mibBuilder.loadTexts: ampDetectSensorTable.setDescription('A list of amp detect sensor entries.')
ampDetectSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 6, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "ampDetectSensorId"))
if mibBuilder.loadTexts: ampDetectSensorEntry.setStatus('current')
if mibBuilder.loadTexts: ampDetectSensorEntry.setDescription('An ampere sensor entry.')
ampDetectSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampDetectSensorId.setStatus('current')
if mibBuilder.loadTexts: ampDetectSensorId.setDescription('The unique id of the sensor.')
ampDetectSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampDetectSensorValue.setStatus('current')
if mibBuilder.loadTexts: ampDetectSensorValue.setDescription('The value measured by the sensor in tenths of an ampere.')
ampDetectSensorErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 6, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampDetectSensorErrorStatus.setStatus('current')
if mibBuilder.loadTexts: ampDetectSensorErrorStatus.setDescription('The operational status of the sensor.  If there are no error conditions\n         reported for the sensor, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the sensor.')
ampDetectSensorLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampDetectSensorLabel.setStatus('current')
if mibBuilder.loadTexts: ampDetectSensorLabel.setDescription('The unique label assigned to the sensor.')
ampDetectSensorEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampDetectSensorEncId.setStatus('current')
if mibBuilder.loadTexts: ampDetectSensorEncId.setDescription('The id of the physical enclosure containing the sensor.')
ampDetectSensorPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampDetectSensorPortId.setStatus('current')
if mibBuilder.loadTexts: ampDetectSensorPortId.setDescription('The id of the port the sensor is plugged into (or empty string\n         if it is not plugged into a port).')
ampDetectSensorValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 6, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampDetectSensorValueStr.setStatus('current')
if mibBuilder.loadTexts: ampDetectSensorValueStr.setDescription('The amp detect reading, in amperes, shown as a string (or empty string\n         if it is not plugged into a port).')
ampDetectSensorValueInt = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6554))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampDetectSensorValueInt.setStatus('current')
if mibBuilder.loadTexts: ampDetectSensorValueInt.setDescription('The value measured by the sensor in amperes.')
otherNumericSensorTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10), )
if mibBuilder.loadTexts: otherNumericSensorTable.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorTable.setDescription('A list of other numeric sensor entries.')
otherNumericSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "otherNumericSensorId"))
if mibBuilder.loadTexts: otherNumericSensorEntry.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorEntry.setDescription('Other numeric sensor entry.')
otherNumericSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherNumericSensorId.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorId.setDescription('The unique id of the sensor.')
otherNumericSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherNumericSensorValue.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorValue.setDescription('The value measured by the sensor in tenths of the unit of measure.')
otherNumericSensorErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherNumericSensorErrorStatus.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorErrorStatus.setDescription('The operational status of the sensor.  If there are no error conditions\n         reported for the sensor, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the sensor.')
otherNumericSensorLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherNumericSensorLabel.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorLabel.setDescription('The unique label assigned to the sensor.')
otherNumericSensorEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherNumericSensorEncId.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorEncId.setDescription('The id of the physical enclosure containing the sensor.')
otherNumericSensorPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherNumericSensorPortId.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorPortId.setDescription('The id of the port the sensor is plugged into (or empty string\n         if it is not plugged into a port).')
otherNumericSensorValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherNumericSensorValueStr.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorValueStr.setDescription('The sensor reading shown as a string (or empty string\n         if it is not plugged into a port).')
otherNumericSensorValueInt = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherNumericSensorValueInt.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorValueInt.setDescription('The value measured by the sensor in the unit of measure (1/10 of otherNumericSensorValue)')
otherNumericSensorUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherNumericSensorUnits.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorUnits.setDescription('The unit of measure for the sensor value.')
otherNumericSensorValueIntX1000 = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherNumericSensorValueIntX1000.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorValueIntX1000.setDescription('The value measured by the sensor in thousandths of the unit of measure (100 times otherNumericSensorValue)')
otherNumericSensorValueIntX1000000 = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 1, 10, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherNumericSensorValueIntX1000000.setStatus('current')
if mibBuilder.loadTexts: otherNumericSensorValueIntX1000000.setDescription('The value measured by the sensor in millionths of the unit of measure (100000 times otherNumericSensorValue)')
dryContactSensorTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 1), )
if mibBuilder.loadTexts: dryContactSensorTable.setStatus('current')
if mibBuilder.loadTexts: dryContactSensorTable.setDescription('A list of dry contact sensor entries.')
dryContactSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 1, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "dryContactSensorId"))
if mibBuilder.loadTexts: dryContactSensorEntry.setStatus('current')
if mibBuilder.loadTexts: dryContactSensorEntry.setDescription('Dry contact sensor entry.')
dryContactSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dryContactSensorId.setStatus('current')
if mibBuilder.loadTexts: dryContactSensorId.setDescription('The unique id of the sensor.')
dryContactSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("null", -1), ("open", 0), ("closed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dryContactSensorValue.setStatus('current')
if mibBuilder.loadTexts: dryContactSensorValue.setDescription('Whether the dry sensor contact is open or closed.')
dryContactSensorErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 1, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dryContactSensorErrorStatus.setStatus('current')
if mibBuilder.loadTexts: dryContactSensorErrorStatus.setDescription('The operational status of the sensor.  If there are no error conditions\n         reported for the sensor, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the sensor.')
dryContactSensorLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dryContactSensorLabel.setStatus('current')
if mibBuilder.loadTexts: dryContactSensorLabel.setDescription('The unique label assigned to the sensor.')
dryContactSensorEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dryContactSensorEncId.setStatus('current')
if mibBuilder.loadTexts: dryContactSensorEncId.setDescription('The id of the physical enclosure containing the sensor.')
dryContactSensorPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dryContactSensorPortId.setStatus('current')
if mibBuilder.loadTexts: dryContactSensorPortId.setDescription('The id of the port the sensor is plugged into (or empty string\n         if it is not plugged into a port).')
dryContactSensorValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dryContactSensorValueStr.setStatus('current')
if mibBuilder.loadTexts: dryContactSensorValueStr.setDescription('The enum value label for the state reported by the sensor.')
doorSwitchSensorTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 2), )
if mibBuilder.loadTexts: doorSwitchSensorTable.setStatus('current')
if mibBuilder.loadTexts: doorSwitchSensorTable.setDescription('A list of door switch sensor entries.')
doorSwitchSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 2, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "doorSwitchSensorId"))
if mibBuilder.loadTexts: doorSwitchSensorEntry.setStatus('current')
if mibBuilder.loadTexts: doorSwitchSensorEntry.setDescription('Door switch sensor entry.')
doorSwitchSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: doorSwitchSensorId.setStatus('current')
if mibBuilder.loadTexts: doorSwitchSensorId.setDescription('The unique id of the sensor.')
doorSwitchSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("null", -1), ("open", 0), ("closed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: doorSwitchSensorValue.setStatus('current')
if mibBuilder.loadTexts: doorSwitchSensorValue.setDescription('Whether the door is open or closed.')
doorSwitchSensorErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 2, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: doorSwitchSensorErrorStatus.setStatus('current')
if mibBuilder.loadTexts: doorSwitchSensorErrorStatus.setDescription('The operational status of the sensor.  If there are no error conditions\n         reported for the sensor, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the sensor.')
doorSwitchSensorLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: doorSwitchSensorLabel.setStatus('current')
if mibBuilder.loadTexts: doorSwitchSensorLabel.setDescription('The unique label assigned to the sensor.')
doorSwitchSensorEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: doorSwitchSensorEncId.setStatus('current')
if mibBuilder.loadTexts: doorSwitchSensorEncId.setDescription('The id of the physical enclosure containing the sensor.')
doorSwitchSensorPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: doorSwitchSensorPortId.setStatus('current')
if mibBuilder.loadTexts: doorSwitchSensorPortId.setDescription('The id of the port the sensor is plugged into (or empty string\n         if it is not plugged into a port).')
doorSwitchSensorValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: doorSwitchSensorValueStr.setStatus('current')
if mibBuilder.loadTexts: doorSwitchSensorValueStr.setDescription('The enum value label for the state reported by the sensor.')
cameraMotionSensorTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 3), )
if mibBuilder.loadTexts: cameraMotionSensorTable.setStatus('current')
if mibBuilder.loadTexts: cameraMotionSensorTable.setDescription('A list of camera motion sensor entries.')
cameraMotionSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 3, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "cameraMotionSensorId"))
if mibBuilder.loadTexts: cameraMotionSensorEntry.setStatus('current')
if mibBuilder.loadTexts: cameraMotionSensorEntry.setDescription('Camera motion sensor entry.')
cameraMotionSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cameraMotionSensorId.setStatus('current')
if mibBuilder.loadTexts: cameraMotionSensorId.setDescription('The unique id of the sensor.')
cameraMotionSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("null", -1), ("noMotion", 0), ("motionDetected", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cameraMotionSensorValue.setStatus('current')
if mibBuilder.loadTexts: cameraMotionSensorValue.setDescription('Whether motion is detected by the camera sensor.')
cameraMotionSensorErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 3, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cameraMotionSensorErrorStatus.setStatus('current')
if mibBuilder.loadTexts: cameraMotionSensorErrorStatus.setDescription('The operational status of the sensor.  If there are no error conditions\n         reported for the sensor, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the sensor.')
cameraMotionSensorLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cameraMotionSensorLabel.setStatus('current')
if mibBuilder.loadTexts: cameraMotionSensorLabel.setDescription('The unique label assigned to the sensor.')
cameraMotionSensorEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cameraMotionSensorEncId.setStatus('current')
if mibBuilder.loadTexts: cameraMotionSensorEncId.setDescription('The id of the physical enclosure containing the sensor.')
cameraMotionSensorPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cameraMotionSensorPortId.setStatus('current')
if mibBuilder.loadTexts: cameraMotionSensorPortId.setDescription('The id of the port the sensor is plugged into (or empty string\n         if it is not plugged into a port).')
cameraMotionSensorValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cameraMotionSensorValueStr.setStatus('current')
if mibBuilder.loadTexts: cameraMotionSensorValueStr.setDescription('The enum value label for the state reported by the sensor.')
otherStateSensorTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 10), )
if mibBuilder.loadTexts: otherStateSensorTable.setStatus('current')
if mibBuilder.loadTexts: otherStateSensorTable.setDescription('A list of other state sensor entries.')
otherStateSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 10, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "otherStateSensorId"))
if mibBuilder.loadTexts: otherStateSensorEntry.setStatus('current')
if mibBuilder.loadTexts: otherStateSensorEntry.setDescription('Other state sensor entry.')
otherStateSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherStateSensorId.setStatus('current')
if mibBuilder.loadTexts: otherStateSensorId.setDescription('The unique id of the sensor.')
otherStateSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherStateSensorValue.setStatus('current')
if mibBuilder.loadTexts: otherStateSensorValue.setDescription('State value reported by the sensor.')
otherStateSensorErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 10, 1, 3), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherStateSensorErrorStatus.setStatus('current')
if mibBuilder.loadTexts: otherStateSensorErrorStatus.setDescription('The operational status of the sensor.  If there are no error conditions\n         reported for the sensor, the status is normal.  Otherwise, the status is\n         reported as the severity value of the highest severity error condition\n         that is not resolved for the sensor.')
otherStateSensorLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherStateSensorLabel.setStatus('current')
if mibBuilder.loadTexts: otherStateSensorLabel.setDescription('The unique label assigned to the sensor.')
otherStateSensorEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherStateSensorEncId.setStatus('current')
if mibBuilder.loadTexts: otherStateSensorEncId.setDescription('The id of the physical enclosure containing the sensor.')
otherStateSensorPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherStateSensorPortId.setStatus('current')
if mibBuilder.loadTexts: otherStateSensorPortId.setDescription('The id of port the sensor is plugged into (or empty string\n         if it is not plugged into a port).')
otherStateSensorValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 4, 2, 10, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otherStateSensorValueStr.setStatus('current')
if mibBuilder.loadTexts: otherStateSensorValueStr.setDescription('The enum value label for the state reported by the sensor.')
errorCondTable = MibTable((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1), )
if mibBuilder.loadTexts: errorCondTable.setStatus('current')
if mibBuilder.loadTexts: errorCondTable.setDescription('A list of active and resolved error conditions.')
errorCondEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1), ).setIndexNames((0, "NETBOTZV2-MIB", "errorCondId"))
if mibBuilder.loadTexts: errorCondEntry.setStatus('current')
if mibBuilder.loadTexts: errorCondEntry.setDescription('Error condition entry.')
errorCondId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorCondId.setStatus('current')
if mibBuilder.loadTexts: errorCondId.setDescription('The unique id of the error condition.')
errorCondSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1, 2), ErrorStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorCondSeverity.setStatus('current')
if mibBuilder.loadTexts: errorCondSeverity.setDescription('The relative severity of the error condition.')
errorCondTypeId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorCondTypeId.setStatus('current')
if mibBuilder.loadTexts: errorCondTypeId.setDescription('The error type id reported for the error condition.')
errorCondStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorCondStartTime.setStatus('current')
if mibBuilder.loadTexts: errorCondStartTime.setDescription('The start time of the error condition, in msec since 1/1/1970.')
errorCondStartTimeStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorCondStartTimeStr.setStatus('current')
if mibBuilder.loadTexts: errorCondStartTimeStr.setDescription('The start time of the error condition, as ISO date-time formatted string (UTC).')
errorCondResolved = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1, 6), BoolValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorCondResolved.setStatus('current')
if mibBuilder.loadTexts: errorCondResolved.setDescription('Whether the error condition was resolved.')
errorCondResolvedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorCondResolvedTime.setStatus('current')
if mibBuilder.loadTexts: errorCondResolvedTime.setDescription('The time the error condition was resolved (if it was resolved), in msec since 1/1/1970.')
errorCondResolvedTimeStr = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorCondResolvedTimeStr.setStatus('current')
if mibBuilder.loadTexts: errorCondResolvedTimeStr.setDescription('The time the error condition was resolved (if it was resolved), as ISO date-time formatted string (UTC).')
errorCondEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorCondEncId.setStatus('current')
if mibBuilder.loadTexts: errorCondEncId.setDescription('The id of the physical enclosure associated with the error.')
errorCondPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorCondPortId.setStatus('current')
if mibBuilder.loadTexts: errorCondPortId.setDescription('The id of the port associated with the error (or empty string\n         if the error is not associated with a port).')
errorCondSensorId = MibTableColumn((1, 3, 6, 1, 4, 1, 5528, 100, 5, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorCondSensorId.setStatus('current')
if mibBuilder.loadTexts: errorCondSensorId.setDescription('The id of the sensor associated with the error (or empty string\n         if the error is not associated with a sensor.)')
netBotzV2TrapErrorID = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapErrorID.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapErrorID.setDescription('Unique ID of error condition that produced the trap')
netBotzV2TrapErrorType = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapErrorType.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapErrorType.setDescription('Symbolic ID of error type')
netBotzV2TrapErrorTypeLabel = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapErrorTypeLabel.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapErrorTypeLabel.setDescription('Label for error type')
netBotzV2TrapSensorID = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapSensorID.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapSensorID.setDescription('ID of sensor associated with error condition that produced the trap')
netBotzV2TrapSensorLabel = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapSensorLabel.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapSensorLabel.setDescription('Label of sensor associated with error condition that produced the trap')
netBotzV2TrapPodID = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapPodID.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapPodID.setDescription('ID of pod associated with error condition that produced the trap')
netBotzV2TrapPodLabel = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapPodLabel.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapPodLabel.setDescription('Label of pod associated with error condition that produced the trap')
netBotzV2TrapPortID = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapPortID.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapPortID.setDescription('ID of port associated with error condition that produced the trap')
netBotzV2TrapPortLabel = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapPortLabel.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapPortLabel.setDescription('Label of port associated with error condition that produced the trap')
netBotzV2TrapStartTime = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapStartTime.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapStartTime.setDescription('Start time (in UTC seconds) for error that produced the trap')
netBotzV2TrapNotifyTime = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapNotifyTime.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapNotifyTime.setDescription('Notification time (in UTC seconds) for error that produced the trap')
netBotzV2TrapResolveTime = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapResolveTime.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapResolveTime.setDescription('Resolve time (in UTC seconds) for error that produced the trap')
netBotzV2TrapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("information", 0), ("warning", 1), ("error", 2), ("critical", 3), ("failure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapSeverity.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapSeverity.setDescription('Severity of error that produced the trap')
netBotzV2TrapSensorValue = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapSensorValue.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapSensorValue.setDescription('String presentation of value of sensor')
netBotzV2TrapSensorValueInt = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapSensorValueInt.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapSensorValueInt.setDescription('Whole integer representation of value of sensor (without decimal portion)')
netBotzV2TrapSensorValueFraction = MibScalar((1, 3, 6, 1, 4, 1, 5528, 100, 11, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotzV2TrapSensorValueFraction.setStatus('current')
if mibBuilder.loadTexts: netBotzV2TrapSensorValueFraction.setDescription('Fractional portion of value of sensor (multiplied by 1000000)')
netBotzTempTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 2)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempTooHigh.setStatus('current')
if mibBuilder.loadTexts: netBotzTempTooHigh.setDescription('Temperature sensor value too high.')
netBotzTempTooHighRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 102)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempTooHighRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzTempTooHighRTN.setDescription('Temperature sensor value is not longer too high.')
netBotzTempTooLow = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 3)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempTooLow.setStatus('current')
if mibBuilder.loadTexts: netBotzTempTooLow.setDescription('Temperature sensor value too low.')
netBotzTempTooLowRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 103)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempTooLowRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzTempTooLowRTN.setDescription('Temperature sensor value is no longer too low.')
netBotzTempTooHighTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 4)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempTooHighTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzTempTooHighTooLong.setDescription('Temperature sensor value too high for too long.')
netBotzTempTooHighTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 104)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempTooHighTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzTempTooHighTooLongRTN.setDescription('Temperature sensor value is not longer too high for too long.')
netBotzTempTooLowTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 5)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempTooLowTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzTempTooLowTooLong.setDescription('Temperature sensor value too low for too long.')
netBotzTempTooLowForTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 105)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempTooLowForTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzTempTooLowForTooLongRTN.setDescription('Temperature sensor value is no longer too low for too long.')
netBotzTempUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzTempUnplugged.setDescription('Temperature sensor unplugged.')
netBotzTempReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzTempReplugged.setDescription('Temperature sensor no longer unplugged.')
netBotzTempIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 8)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzTempIncreasingTooQuickly.setDescription('Temperature sensor value increasing too quickly.')
netBotzTempNotIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 108)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempNotIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzTempNotIncreasingTooQuickly.setDescription('Temperature sensor value no longer increasing too quickly.')
netBotzTempDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 9)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzTempDecreasingTooQuickly.setDescription('Temperature sensor value decreasing too quickly.')
netBotzTempNotDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 109)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempNotDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzTempNotDecreasingTooQuickly.setDescription('Temperature sensor value no longer decreasing too quickly.')
netBotzTempError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempError.setStatus('current')
if mibBuilder.loadTexts: netBotzTempError.setDescription('Temperature sensor error.')
netBotzTempErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 1, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTempErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzTempErrorRTN.setDescription('Temperature sensor error resolved.')
netBotzHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 2)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityTooHigh.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityTooHigh.setDescription('Humidity sensor value too high.')
netBotzHumidityTooHighRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 102)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityTooHighRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityTooHighRTN.setDescription('Humidity sensor value is not longer too high.')
netBotzHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 3)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityTooLow.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityTooLow.setDescription('Humidity sensor value too low.')
netBotzHumidityTooLowRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 103)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityTooLowRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityTooLowRTN.setDescription('Humidity sensor value is no longer too low.')
netBotzHumidityTooHighTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 4)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityTooHighTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityTooHighTooLong.setDescription('Humidity sensor value too high for too long.')
netBotzHumidityTooHighTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 104)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityTooHighTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityTooHighTooLongRTN.setDescription('Humidity sensor value is not longer too high for too long.')
netBotzHumidityTooLowTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 5)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityTooLowTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityTooLowTooLong.setDescription('Humidity sensor value too low for too long.')
netBotzHumidityTooLowForTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 105)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityTooLowForTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityTooLowForTooLongRTN.setDescription('Humidity sensor value is no longer too low for too long.')
netBotzHumidityUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityUnplugged.setDescription('Humidity sensor unplugged.')
netBotzHumidityReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityReplugged.setDescription('Humidity sensor no longer unplugged.')
netBotzHumidityIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 8)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityIncreasingTooQuickly.setDescription('Humidity sensor value increasing too quickly.')
netBotzHumidityNotIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 108)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityNotIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityNotIncreasingTooQuickly.setDescription('Humidity sensor value no longer increasing too quickly.')
netBotzHumidityDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 9)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityDecreasingTooQuickly.setDescription('Humidity sensor value decreasing too quickly.')
netBotzHumidityNotDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 109)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityNotDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityNotDecreasingTooQuickly.setDescription('Humidity sensor value no longer decreasing too quickly.')
netBotzHumidityError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityError.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityError.setDescription('Humidity sensor error.')
netBotzHumidityErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 2, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzHumidityErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzHumidityErrorRTN.setDescription('Humidity sensor error resolved.')
netBotzDewPointTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 2)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointTooHigh.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointTooHigh.setDescription('DewPoint sensor value too high.')
netBotzDewPointTooHighRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 102)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointTooHighRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointTooHighRTN.setDescription('DewPoint sensor value is not longer too high.')
netBotzDewPointTooLow = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 3)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointTooLow.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointTooLow.setDescription('DewPoint sensor value too low.')
netBotzDewPointTooLowRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 103)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointTooLowRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointTooLowRTN.setDescription('DewPoint sensor value is no longer too low.')
netBotzDewPointTooHighTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 4)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointTooHighTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointTooHighTooLong.setDescription('DewPoint sensor value too high for too long.')
netBotzDewPointTooHighTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 104)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointTooHighTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointTooHighTooLongRTN.setDescription('DewPoint sensor value is not longer too high for too long.')
netBotzDewPointTooLowTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 5)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointTooLowTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointTooLowTooLong.setDescription('DewPoint sensor value too low for too long.')
netBotzDewPointTooLowForTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 105)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointTooLowForTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointTooLowForTooLongRTN.setDescription('DewPoint sensor value is no longer too low for too long.')
netBotzDewPointUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointUnplugged.setDescription('DewPoint sensor unplugged.')
netBotzDewPointReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointReplugged.setDescription('DewPoint sensor no longer unplugged.')
netBotzDewPointIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 8)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointIncreasingTooQuickly.setDescription('DewPoint sensor value increasing too quickly.')
netBotzDewPointNotIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 108)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointNotIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointNotIncreasingTooQuickly.setDescription('DewPoint sensor value no longer increasing too quickly.')
netBotzDewPointDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 9)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointDecreasingTooQuickly.setDescription('DewPoint sensor value decreasing too quickly.')
netBotzDewPointNotDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 109)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointNotDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointNotDecreasingTooQuickly.setDescription('DewPoint sensor value no longer decreasing too quickly.')
netBotzDewPointError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointError.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointError.setDescription('DewPoint sensor error.')
netBotzDewPointErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 3, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDewPointErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzDewPointErrorRTN.setDescription('DewPoint sensor error resolved.')
netBotzAirFlowTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 2)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowTooHigh.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowTooHigh.setDescription('AirFlow sensor value too high.')
netBotzAirFlowTooHighRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 102)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowTooHighRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowTooHighRTN.setDescription('AirFlow sensor value is not longer too high.')
netBotzAirFlowTooLow = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 3)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowTooLow.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowTooLow.setDescription('AirFlow sensor value too low.')
netBotzAirFlowTooLowRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 103)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowTooLowRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowTooLowRTN.setDescription('AirFlow sensor value is no longer too low.')
netBotzAirFlowTooHighTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 4)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowTooHighTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowTooHighTooLong.setDescription('AirFlow sensor value too high for too long.')
netBotzAirFlowTooHighTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 104)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowTooHighTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowTooHighTooLongRTN.setDescription('AirFlow sensor value is not longer too high for too long.')
netBotzAirFlowTooLowTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 5)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowTooLowTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowTooLowTooLong.setDescription('AirFlow sensor value too low for too long.')
netBotzAirFlowTooLowForTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 105)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowTooLowForTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowTooLowForTooLongRTN.setDescription('AirFlow sensor value is no longer too low for too long.')
netBotzAirFlowUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowUnplugged.setDescription('AirFlow sensor unplugged.')
netBotzAirFlowReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowReplugged.setDescription('AirFlow sensor no longer unplugged.')
netBotzAirFlowIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 8)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowIncreasingTooQuickly.setDescription('AirFlow sensor value increasing too quickly.')
netBotzAirFlowNotIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 108)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowNotIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowNotIncreasingTooQuickly.setDescription('AirFlow sensor value no longer increasing too quickly.')
netBotzAirFlowDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 9)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowDecreasingTooQuickly.setDescription('AirFlow sensor value decreasing too quickly.')
netBotzAirFlowNotDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 109)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowNotDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowNotDecreasingTooQuickly.setDescription('AirFlow sensor value no longer decreasing too quickly.')
netBotzAirFlowError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowError.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowError.setDescription('AirFlow sensor error.')
netBotzAirFlowErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 4, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAirFlowErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAirFlowErrorRTN.setDescription('AirFlow sensor error resolved.')
netBotzAudioTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 2)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioTooHigh.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioTooHigh.setDescription('Audio sensor value too high.')
netBotzAudioTooHighRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 102)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioTooHighRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioTooHighRTN.setDescription('Audio sensor value is not longer too high.')
netBotzAudioTooLow = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 3)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioTooLow.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioTooLow.setDescription('Audio sensor value too low.')
netBotzAudioTooLowRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 103)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioTooLowRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioTooLowRTN.setDescription('Audio sensor value is no longer too low.')
netBotzAudioTooHighTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 4)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioTooHighTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioTooHighTooLong.setDescription('Audio sensor value too high for too long.')
netBotzAudioTooHighTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 104)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioTooHighTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioTooHighTooLongRTN.setDescription('Audio sensor value is not longer too high for too long.')
netBotzAudioTooLowTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 5)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioTooLowTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioTooLowTooLong.setDescription('Audio sensor value too low for too long.')
netBotzAudioTooLowForTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 105)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioTooLowForTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioTooLowForTooLongRTN.setDescription('Audio sensor value is no longer too low for too long.')
netBotzAudioUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioUnplugged.setDescription('Audio sensor unplugged.')
netBotzAudioReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioReplugged.setDescription('Audio sensor no longer unplugged.')
netBotzAudioIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 8)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioIncreasingTooQuickly.setDescription('Audio sensor value increasing too quickly.')
netBotzAudioNotIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 108)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioNotIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioNotIncreasingTooQuickly.setDescription('Audio sensor value no longer increasing too quickly.')
netBotzAudioDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 9)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioDecreasingTooQuickly.setDescription('Audio sensor value decreasing too quickly.')
netBotzAudioNotDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 109)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioNotDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioNotDecreasingTooQuickly.setDescription('Audio sensor value no longer decreasing too quickly.')
netBotzAudioError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioError.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioError.setDescription('Audio sensor error.')
netBotzAudioErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 5, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAudioErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAudioErrorRTN.setDescription('Audio sensor error resolved.')
netBotzAmpDetectTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 2)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectTooHigh.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectTooHigh.setDescription('Amp Detectsensor value too high.')
netBotzAmpDetectTooHighRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 102)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectTooHighRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectTooHighRTN.setDescription('Amp Detectsensor value is not longer too high.')
netBotzAmpDetectTooLow = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 3)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectTooLow.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectTooLow.setDescription('Amp Detectsensor value too low.')
netBotzAmpDetectTooLowRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 103)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectTooLowRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectTooLowRTN.setDescription('Amp Detectsensor value is no longer too low.')
netBotzAmpDetectTooHighTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 4)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectTooHighTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectTooHighTooLong.setDescription('Amp Detectsensor value too high for too long.')
netBotzAmpDetectTooHighTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 104)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectTooHighTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectTooHighTooLongRTN.setDescription('Amp Detectsensor value is not longer too high for too long.')
netBotzAmpDetectTooLowTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 5)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectTooLowTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectTooLowTooLong.setDescription('Amp Detectsensor value too low for too long.')
netBotzAmpDetectTooLowForTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 105)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectTooLowForTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectTooLowForTooLongRTN.setDescription('Amp Detectsensor value is no longer too low for too long.')
netBotzAmpDetectUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectUnplugged.setDescription('Amp Detectsensor unplugged.')
netBotzAmpDetectReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectReplugged.setDescription('Amp Detectsensor no longer unplugged.')
netBotzAmpDetectIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 8)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectIncreasingTooQuickly.setDescription('Amp Detectsensor value increasing too quickly.')
netBotzAmpDetectNotIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 108)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectNotIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectNotIncreasingTooQuickly.setDescription('Amp Detectsensor value no longer increasing too quickly.')
netBotzAmpDetectDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 9)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectDecreasingTooQuickly.setDescription('Amp Detectsensor value decreasing too quickly.')
netBotzAmpDetectNotDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 109)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectNotDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectNotDecreasingTooQuickly.setDescription('Amp Detectsensor value no longer decreasing too quickly.')
netBotzAmpDetectError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectError.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectError.setDescription('Amp Detectsensor error.')
netBotzAmpDetectErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 6, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzAmpDetectErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzAmpDetectErrorRTN.setDescription('Amp Detectsensor error resolved.')
netBotzDryContactUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 7, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDryContactUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzDryContactUnplugged.setDescription('Dry Contact sensor unplugged.')
netBotzDryContactReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 7, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDryContactReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzDryContactReplugged.setDescription('Dry Contact sensor no longer unplugged.')
netBotzDryContactError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 7, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDryContactError.setStatus('current')
if mibBuilder.loadTexts: netBotzDryContactError.setDescription('Dry Contact sensor error.')
netBotzDryContactErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 7, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDryContactErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzDryContactErrorRTN.setDescription('Dry Contact sensor error resolved.')
netBotzDryContactValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 7, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDryContactValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzDryContactValueError.setDescription('Dry Contact sensor value error.')
netBotzDryContactValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 7, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDryContactValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzDryContactValueErrorRTN.setDescription('Dry Contact sensor value error resolved.')
netBotzCameraMotionSensorUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 8, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzCameraMotionSensorUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzCameraMotionSensorUnplugged.setDescription('Camera Motion Sensor sensor unplugged.')
netBotzCameraMotionSensorReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 8, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzCameraMotionSensorReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzCameraMotionSensorReplugged.setDescription('Camera Motion Sensor sensor no longer unplugged.')
netBotzCameraMotionSensorError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 8, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzCameraMotionSensorError.setStatus('current')
if mibBuilder.loadTexts: netBotzCameraMotionSensorError.setDescription('Camera Motion Sensor sensor error.')
netBotzCameraMotionSensorErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 8, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzCameraMotionSensorErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzCameraMotionSensorErrorRTN.setDescription('Camera Motion Sensor sensor error resolved.')
netBotzCameraMotionSensorValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 8, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzCameraMotionSensorValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzCameraMotionSensorValueError.setDescription('Camera Motion Sensor sensor value error.')
netBotzCameraMotionSensorValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 8, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzCameraMotionSensorValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzCameraMotionSensorValueErrorRTN.setDescription('Camera Motion Sensor sensor value error resolved.')
netBotzDoorSensorUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 9, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDoorSensorUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzDoorSensorUnplugged.setDescription('Door Sensor sensor unplugged.')
netBotzDoorSensorReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 9, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDoorSensorReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzDoorSensorReplugged.setDescription('Door Sensor sensor no longer unplugged.')
netBotzDoorSensorError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 9, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDoorSensorError.setStatus('current')
if mibBuilder.loadTexts: netBotzDoorSensorError.setDescription('Door Sensor sensor error.')
netBotzDoorSensorErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 9, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDoorSensorErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzDoorSensorErrorRTN.setDescription('Door Sensor sensor error resolved.')
netBotzDoorSensorValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 9, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDoorSensorValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzDoorSensorValueError.setDescription('Door Sensor sensor value error.')
netBotzDoorSensorValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 9, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDoorSensorValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzDoorSensorValueErrorRTN.setDescription('Door Sensor sensor value error resolved.')
netBotzMicPlugSensorUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 10, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMicPlugSensorUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzMicPlugSensorUnplugged.setDescription('MicPlug Sensor sensor unplugged.')
netBotzMicPlugSensorReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 10, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMicPlugSensorReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzMicPlugSensorReplugged.setDescription('MicPlug Sensor sensor no longer unplugged.')
netBotzMicPlugSensorError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 10, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMicPlugSensorError.setStatus('current')
if mibBuilder.loadTexts: netBotzMicPlugSensorError.setDescription('MicPlug Sensor sensor error.')
netBotzMicPlugSensorErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 10, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMicPlugSensorErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMicPlugSensorErrorRTN.setDescription('MicPlug Sensor sensor error resolved.')
netBotzMicPlugSensorValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 10, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMicPlugSensorValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzMicPlugSensorValueError.setDescription('MicPlug Sensor sensor value error.')
netBotzMicPlugSensorValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 10, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMicPlugSensorValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMicPlugSensorValueErrorRTN.setDescription('MicPlug Sensor sensor value error resolved.')
netBotzSpeakerPlugSensorUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 11, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorUnplugged.setDescription('SpeakerPlug Sensor sensor unplugged.')
netBotzSpeakerPlugSensorReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 11, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorReplugged.setDescription('SpeakerPlug Sensor sensor no longer unplugged.')
netBotzSpeakerPlugSensorError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 11, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorError.setStatus('current')
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorError.setDescription('SpeakerPlug Sensor sensor error.')
netBotzSpeakerPlugSensorErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 11, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorErrorRTN.setDescription('SpeakerPlug Sensor sensor error resolved.')
netBotzSpeakerPlugSensorValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 11, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorValueError.setDescription('SpeakerPlug Sensor sensor value error.')
netBotzSpeakerPlugSensorValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 11, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzSpeakerPlugSensorValueErrorRTN.setDescription('SpeakerPlug Sensor sensor value error resolved.')
netBotzTVSignalSensorUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 12, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTVSignalSensorUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzTVSignalSensorUnplugged.setDescription('TVSignal Sensor sensor unplugged.')
netBotzTVSignalSensorReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 12, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTVSignalSensorReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzTVSignalSensorReplugged.setDescription('TVSignal Sensor sensor no longer unplugged.')
netBotzTVSignalSensorError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 12, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTVSignalSensorError.setStatus('current')
if mibBuilder.loadTexts: netBotzTVSignalSensorError.setDescription('TVSignal Sensor sensor error.')
netBotzTVSignalSensorErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 12, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTVSignalSensorErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzTVSignalSensorErrorRTN.setDescription('TVSignal Sensor sensor error resolved.')
netBotzTVSignalSensorValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 12, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTVSignalSensorValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzTVSignalSensorValueError.setDescription('TVSignal Sensor sensor value error.')
netBotzTVSignalSensorValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 12, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzTVSignalSensorValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzTVSignalSensorValueErrorRTN.setDescription('TVSignal Sensor sensor value error resolved.')
netBotzPodUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 0, 7)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPodUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzPodUnplugged.setDescription('Pod unplugged.')
netBotzPodReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 0, 107)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPodReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzPodReplugged.setDescription('Pod no longer unplugged.')
netBotzSensorPodUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 2, 0, 7)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSensorPodUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzSensorPodUnplugged.setDescription('Sensor Pod unplugged.')
netBotzSensorPodReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 2, 0, 107)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSensorPodReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzSensorPodReplugged.setDescription('Sensor Pod no longer unplugged.')
netBotzCameraPodUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 3, 0, 7)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzCameraPodUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzCameraPodUnplugged.setDescription('Camera Pod unplugged.')
netBotzCameraPodReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 3, 0, 107)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzCameraPodReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzCameraPodReplugged.setDescription('Camera Pod no longer unplugged.')
netBotzLogonError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 0, 11)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzLogonError.setStatus('current')
if mibBuilder.loadTexts: netBotzLogonError.setDescription('Multiple failed logon attempts.')
netBotzLogonErrorResolved = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 0, 111)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzLogonErrorResolved.setStatus('current')
if mibBuilder.loadTexts: netBotzLogonErrorResolved.setDescription('Failed logon attempts stopped, or logon succeeded.')
netBotzDriveNotFoundError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 0, 12)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDriveNotFoundError.setStatus('current')
if mibBuilder.loadTexts: netBotzDriveNotFoundError.setDescription('Configured add-on drive not found or has malfunctioned.')
netBotzDriveNotFoundErrorResolved = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 3, 0, 112)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzDriveNotFoundErrorResolved.setStatus('current')
if mibBuilder.loadTexts: netBotzDriveNotFoundErrorResolved.setDescription('Missing add-on drive has bee found.')
netBotzGPSPositionTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 2)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionTooHigh.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionTooHigh.setDescription('GPS Position sensor value too high.')
netBotzGPSPositionTooHighRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 102)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionTooHighRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionTooHighRTN.setDescription('GPS Position sensor value is not longer too high.')
netBotzGPSPositionTooLow = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 3)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionTooLow.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionTooLow.setDescription('GPS Position sensor value too low.')
netBotzGPSPositionTooLowRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 103)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionTooLowRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionTooLowRTN.setDescription('GPS Position sensor value is no longer too low.')
netBotzGPSPositionTooHighTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 4)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionTooHighTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionTooHighTooLong.setDescription('GPS Position sensor value too high for too long.')
netBotzGPSPositionTooHighTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 104)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionTooHighTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionTooHighTooLongRTN.setDescription('GPS Position sensor value is not longer too high for too long.')
netBotzGPSPositionTooLowTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 5)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionTooLowTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionTooLowTooLong.setDescription('GPS Position ensor value too low for too long.')
netBotzGPSPositionTooLowForTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 105)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionTooLowForTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionTooLowForTooLongRTN.setDescription('GPS Position sensor value is no longer too low for too long.')
netBotzGPSPositionUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionUnplugged.setDescription('GPS Position sensor unplugged.')
netBotzGPSPositionReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionReplugged.setDescription('GPS Position sensor no longer unplugged.')
netBotzGPSPositionIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 8)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionIncreasingTooQuickly.setDescription('GPS Position sensor value increasing too quickly.')
netBotzGPSPositionNotIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 108)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionNotIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionNotIncreasingTooQuickly.setDescription('GPS Position sensor value no longer increasing too quickly.')
netBotzGPSPositionDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 9)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionDecreasingTooQuickly.setDescription('GPS Position sensor value decreasing too quickly.')
netBotzGPSPositionNotDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 109)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionNotDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionNotDecreasingTooQuickly.setDescription('GPS Position sensor value no longer decreasing too quickly.')
netBotzGPSPositionError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionError.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionError.setDescription('GPS Position sensor error.')
netBotzGPSPositionErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 13, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSPositionErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSPositionErrorRTN.setDescription('GPS Position sensor error resolved.')
netBotzGPSMovementTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 2)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementTooHigh.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementTooHigh.setDescription('GPS Movement sensor value too high.')
netBotzGPSMovementTooHighRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 102)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementTooHighRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementTooHighRTN.setDescription('GPS Movement sensor value is not longer too high.')
netBotzGPSMovementTooLow = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 3)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementTooLow.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementTooLow.setDescription('GPS Movement sensor value too low.')
netBotzGPSMovementTooLowRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 103)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementTooLowRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementTooLowRTN.setDescription('GPS Movement sensor value is no longer too low.')
netBotzGPSMovementTooHighTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 4)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementTooHighTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementTooHighTooLong.setDescription('GPS Movement sensor value too high for too long.')
netBotzGPSMovementTooHighTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 104)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementTooHighTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementTooHighTooLongRTN.setDescription('GPS Movement sensor value is not longer too high for too long.')
netBotzGPSMovementTooLowTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 5)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementTooLowTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementTooLowTooLong.setDescription('GPS Movement ensor value too low for too long.')
netBotzGPSMovementTooLowForTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 105)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementTooLowForTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementTooLowForTooLongRTN.setDescription('GPS Movement sensor value is no longer too low for too long.')
netBotzGPSMovementUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementUnplugged.setDescription('GPS Movement sensor unplugged.')
netBotzGPSMovementReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementReplugged.setDescription('GPS Movement sensor no longer unplugged.')
netBotzGPSMovementIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 8)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementIncreasingTooQuickly.setDescription('GPS Movement sensor value increasing too quickly.')
netBotzGPSMovementNotIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 108)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementNotIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementNotIncreasingTooQuickly.setDescription('GPS Movement sensor value no longer increasing too quickly.')
netBotzGPSMovementDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 9)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementDecreasingTooQuickly.setDescription('GPS Movement sensor value decreasing too quickly.')
netBotzGPSMovementNotDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 109)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementNotDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementNotDecreasingTooQuickly.setDescription('GPS Movement sensor value no longer decreasing too quickly.')
netBotzGPSMovementError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementError.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementError.setDescription('GPS Movement sensor error.')
netBotzGPSMovementErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 14, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSMovementErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSMovementErrorRTN.setDescription('GPS Movement sensor error resolved.')
netBotzPacketDropTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 2)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropTooHigh.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropTooHigh.setDescription('Packet Drop sensor value too high.')
netBotzPacketDropTooHighRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 102)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropTooHighRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropTooHighRTN.setDescription('Packet Drop sensor value is not longer too high.')
netBotzPacketDropTooLow = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 3)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropTooLow.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropTooLow.setDescription('Packet Drop sensor value too low.')
netBotzPacketDropTooLowRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 103)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropTooLowRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropTooLowRTN.setDescription('Packet Drop sensor value is no longer too low.')
netBotzPacketDropTooHighTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 4)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropTooHighTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropTooHighTooLong.setDescription('Packet Drop sensor value too high for too long.')
netBotzPacketDropTooHighTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 104)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropTooHighTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropTooHighTooLongRTN.setDescription('Packet Drop sensor value is not longer too high for too long.')
netBotzPacketDropTooLowTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 5)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropTooLowTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropTooLowTooLong.setDescription('Packet Drop ensor value too low for too long.')
netBotzPacketDropTooLowForTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 105)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropTooLowForTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropTooLowForTooLongRTN.setDescription('Packet Drop sensor value is no longer too low for too long.')
netBotzPacketDropUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropUnplugged.setDescription('Packet Drop sensor unplugged.')
netBotzPacketDropReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropReplugged.setDescription('Packet Drop sensor no longer unplugged.')
netBotzPacketDropIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 8)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropIncreasingTooQuickly.setDescription('Packet Drop sensor value increasing too quickly.')
netBotzPacketDropNotIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 108)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropNotIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropNotIncreasingTooQuickly.setDescription('Packet Drop sensor value no longer increasing too quickly.')
netBotzPacketDropDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 9)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropDecreasingTooQuickly.setDescription('Packet Drop sensor value decreasing too quickly.')
netBotzPacketDropNotDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 109)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropNotDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropNotDecreasingTooQuickly.setDescription('Packet Drop sensor value no longer decreasing too quickly.')
netBotzPacketDropError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropError.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropError.setDescription('Packet Drop sensor error.')
netBotzPacketDropErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 23, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzPacketDropErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzPacketDropErrorRTN.setDescription('Packet Drop sensor error resolved.')
netBotzSNMPCrawlerTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 2)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooHigh.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooHigh.setDescription('SNMP Crawler sensor value too high.')
netBotzSNMPCrawlerTooHighRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 102)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooHighRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooHighRTN.setDescription('SNMP Crawler sensor value is not longer too high.')
netBotzSNMPCrawlerTooLow = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 3)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooLow.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooLow.setDescription('SNMP Crawler sensor value too low.')
netBotzSNMPCrawlerTooLowRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 103)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooLowRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooLowRTN.setDescription('SNMP Crawler sensor value is no longer too low.')
netBotzSNMPCrawlerTooHighTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 4)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooHighTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooHighTooLong.setDescription('SNMP Crawler sensor value too high for too long.')
netBotzSNMPCrawlerTooHighTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 104)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooHighTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooHighTooLongRTN.setDescription('SNMP Crawler sensor value is not longer too high for too long.')
netBotzSNMPCrawlerTooLowTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 5)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooLowTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooLowTooLong.setDescription('SNMP Crawler ensor value too low for too long.')
netBotzSNMPCrawlerTooLowForTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 105)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooLowForTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerTooLowForTooLongRTN.setDescription('SNMP Crawler sensor value is no longer too low for too long.')
netBotzSNMPCrawlerUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerUnplugged.setDescription('SNMP Crawler sensor unplugged.')
netBotzSNMPCrawlerReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerReplugged.setDescription('SNMP Crawler sensor no longer unplugged.')
netBotzSNMPCrawlerIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 8)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerIncreasingTooQuickly.setDescription('SNMP Crawler sensor value increasing too quickly.')
netBotzSNMPCrawlerNotIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 108)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerNotIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerNotIncreasingTooQuickly.setDescription('SNMP Crawler sensor value no longer increasing too quickly.')
netBotzSNMPCrawlerDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 9)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerDecreasingTooQuickly.setDescription('SNMP Crawler sensor value decreasing too quickly.')
netBotzSNMPCrawlerNotDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 109)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerNotDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerNotDecreasingTooQuickly.setDescription('SNMP Crawler sensor value no longer decreasing too quickly.')
netBotzSNMPCrawlerError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerError.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerError.setDescription('SNMP Crawler sensor error.')
netBotzSNMPCrawlerErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerErrorRTN.setDescription('SNMP Crawler sensor error resolved.')
netBotzSNMPCrawlerSensorValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerSensorValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerSensorValueError.setDescription('SNMP Crawler Sensor sensor value error.')
netBotzSNMPCrawlerSensorValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 24, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzSNMPCrawlerSensorValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzSNMPCrawlerSensorValueErrorRTN.setDescription('SNMP Crawler Sensor sensor value error resolved.')
netBotzGPSStatusSensorUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 15, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSStatusSensorUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSStatusSensorUnplugged.setDescription('GPS Status Sensor sensor unplugged.')
netBotzGPSStatusSensorReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 15, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSStatusSensorReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSStatusSensorReplugged.setDescription('GPS Status Sensor sensor no longer unplugged.')
netBotzGPSStatusSensorError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 15, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSStatusSensorError.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSStatusSensorError.setDescription('GPS Status Sensor sensor error.')
netBotzGPSStatusSensorErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 15, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSStatusSensorErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSStatusSensorErrorRTN.setDescription('GPS Status Sensor sensor error resolved.')
netBotzGPSStatusSensorValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 15, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSStatusSensorValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSStatusSensorValueError.setDescription('GPS Status Sensor sensor value error.')
netBotzGPSStatusSensorValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 15, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzGPSStatusSensorValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzGPSStatusSensorValueErrorRTN.setDescription('GPS Status Sensor sensor value error resolved.')
netBotzWirelessStatusSensorUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 22, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzWirelessStatusSensorUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzWirelessStatusSensorUnplugged.setDescription('Wireless Status Sensor sensor unplugged.')
netBotzWirelessStatusSensorReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 22, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzWirelessStatusSensorReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzWirelessStatusSensorReplugged.setDescription('Wireless Status Sensor sensor no longer unplugged.')
netBotzWirelessStatusSensorError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 22, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzWirelessStatusSensorError.setStatus('current')
if mibBuilder.loadTexts: netBotzWirelessStatusSensorError.setDescription('Wireless Status Sensor sensor error.')
netBotzWirelessStatusSensorErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 22, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzWirelessStatusSensorErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzWirelessStatusSensorErrorRTN.setDescription('Wireless Status Sensor sensor error resolved.')
netBotzWirelessStatusSensorValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 22, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzWirelessStatusSensorValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzWirelessStatusSensorValueError.setDescription('Wireless Status Sensor sensor value error.')
netBotzWirelessStatusSensorValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 22, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzWirelessStatusSensorValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzWirelessStatusSensorValueErrorRTN.setDescription('Wireless Status Sensor sensor value error resolved.')
netBotzOutputControlSensorUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 26, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzOutputControlSensorUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzOutputControlSensorUnplugged.setDescription('Output Control Sensor unplugged.')
netBotzOutputControlSensorReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 26, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzOutputControlSensorReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzOutputControlSensorReplugged.setDescription('Output Control Sensor no longer unplugged.')
netBotzOutputControlSensorError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 26, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzOutputControlSensorError.setStatus('current')
if mibBuilder.loadTexts: netBotzOutputControlSensorError.setDescription('Output Control Sensor error.')
netBotzOutputControlSensorErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 26, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzOutputControlSensorErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzOutputControlSensorErrorRTN.setDescription('Output Control Sensor error resolved.')
netBotzOutputControlSensorValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 26, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzOutputControlSensorValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzOutputControlSensorValueError.setDescription('Output Control Sensor value error.')
netBotzOutputControlSensorValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 26, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzOutputControlSensorValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzOutputControlSensorValueErrorRTN.setDescription('Output Control Sensor value error resolved.')
netBotzMultiRAESensorTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 2)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorTooHigh.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorTooHigh.setDescription('MultiRAE sensor value too high.')
netBotzMultiRAESensorTooHighRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 102)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorTooHighRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorTooHighRTN.setDescription('MultiRAE sensor value is not longer too high.')
netBotzMultiRAESensorTooLow = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 3)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorTooLow.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorTooLow.setDescription('MultiRAE sensor value too low.')
netBotzMultiRAESensorTooLowRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 103)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorTooLowRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorTooLowRTN.setDescription('MultiRAE sensor value is no longer too low.')
netBotzMultiRAESensorTooHighTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 4)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorTooHighTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorTooHighTooLong.setDescription('MultiRAE sensor value too high for too long.')
netBotzMultiRAESensorTooHighTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 104)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorTooHighTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorTooHighTooLongRTN.setDescription('MultiRAE sensor value is not longer too high for too long.')
netBotzMultiRAESensorTooLowTooLong = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 5)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorTooLowTooLong.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorTooLowTooLong.setDescription('MultiRAE ensor value too low for too long.')
netBotzMultiRAESensorTooLowForTooLongRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 105)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorTooLowForTooLongRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorTooLowForTooLongRTN.setDescription('MultiRAE sensor value is no longer too low for too long.')
netBotzMultiRAESensorUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorUnplugged.setDescription('MultiRAE sensor unplugged.')
netBotzMultiRAESensorReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorReplugged.setDescription('MultiRAE sensor no longer unplugged.')
netBotzMultiRAESensorIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 8)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorIncreasingTooQuickly.setDescription('MultiRAE sensor value increasing too quickly.')
netBotzMultiRAESensorNotIncreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 108)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorNotIncreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorNotIncreasingTooQuickly.setDescription('MultiRAE sensor value no longer increasing too quickly.')
netBotzMultiRAESensorDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 9)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorDecreasingTooQuickly.setDescription('MultiRAE sensor value decreasing too quickly.')
netBotzMultiRAESensorNotDecreasingTooQuickly = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 109)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorNotDecreasingTooQuickly.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorNotDecreasingTooQuickly.setDescription('MultiRAE sensor value no longer decreasing too quickly.')
netBotzMultiRAESensorError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorError.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorError.setDescription('MultiRAE sensor error.')
netBotzMultiRAESensorErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorErrorRTN.setDescription('MultiRAE sensor error resolved.')
netBotzMultiRAESensorSensorValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorSensorValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorSensorValueError.setDescription('MultiRAE Sensor sensor value error.')
netBotzMultiRAESensorSensorValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 27, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorSensorValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorSensorValueErrorRTN.setDescription('MultiRAE Sensor sensor value error resolved.')
netBotzMultiRAESensorStatusUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 28, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusUnplugged.setDescription('MultiRAE Sensor Status unplugged.')
netBotzMultiRAESensorStatusReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 28, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusReplugged.setDescription('MultiRAE Sensor Status no longer unplugged.')
netBotzMultiRAESensorStatusError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 28, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusError.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusError.setDescription('MultiRAE Sensor Status error.')
netBotzMultiRAESensorStatusErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 28, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusErrorRTN.setDescription('MultiRAE Sensor Status error resolved.')
netBotzMultiRAESensorStatusValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 28, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusValueError.setDescription('MultiRAE Sensor Status value error.')
netBotzMultiRAESensorStatusValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 28, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAESensorStatusValueErrorRTN.setDescription('MultiRAE Sensor Status value error resolved.')
netBotzMultiRAEDeviceStatusUnplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 29, 0, 6)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusUnplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusUnplugged.setDescription('MultiRAE Device Status unplugged.')
netBotzMultiRAEDeviceStatusReplugged = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 29, 0, 106)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusReplugged.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusReplugged.setDescription('MultiRAE Device Status no longer unplugged.')
netBotzMultiRAEDeviceStatusError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 29, 0, 1)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusError.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusError.setDescription('MultiRAE Device Status error.')
netBotzMultiRAEDeviceStatusErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 29, 0, 101)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusErrorRTN.setDescription('MultiRAE Device Status error resolved.')
netBotzMultiRAEDeviceStatusValueError = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 29, 0, 10)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusValueError.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusValueError.setDescription('MultiRAE Device Status value error.')
netBotzMultiRAEDeviceStatusValueErrorRTN = NotificationType((1, 3, 6, 1, 4, 1, 5528, 100, 10, 2, 29, 0, 110)).setObjects(("NETBOTZV2-MIB", "netBotzV2TrapErrorID"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorType"), ("NETBOTZV2-MIB", "netBotzV2TrapErrorTypeLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorID"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPodID"), ("NETBOTZV2-MIB", "netBotzV2TrapPodLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapPortID"), ("NETBOTZV2-MIB", "netBotzV2TrapPortLabel"), ("NETBOTZV2-MIB", "netBotzV2TrapStartTime"), ("NETBOTZV2-MIB", "netBotzV2TrapNotifyTime"), ("NETBOTZV2-MIB", "netBotzV2TrapResolveTime"), ("NETBOTZV2-MIB", "netBotzV2TrapSeverity"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValue"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueInt"), ("NETBOTZV2-MIB", "netBotzV2TrapSensorValueFraction"))
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusValueErrorRTN.setStatus('current')
if mibBuilder.loadTexts: netBotzMultiRAEDeviceStatusValueErrorRTN.setDescription('MultiRAE Device Status value error resolved.')
mibBuilder.exportSymbols("NETBOTZV2-MIB", tempSensorLabel=tempSensorLabel, otherNumericSensorEntry=otherNumericSensorEntry, netBotzV2OutputControlSensorTraps=netBotzV2OutputControlSensorTraps, netBotzLogonErrorResolved=netBotzLogonErrorResolved, netBotzGPSPositionDecreasingTooQuickly=netBotzGPSPositionDecreasingTooQuickly, netBotzDriveNotFoundError=netBotzDriveNotFoundError, netBotzTVSignalSensorUnplugged=netBotzTVSignalSensorUnplugged, netBotzGPSMovementReplugged=netBotzGPSMovementReplugged, netBotzPacketDropDecreasingTooQuickly=netBotzPacketDropDecreasingTooQuickly, enclosureDockedToEncId=enclosureDockedToEncId, netBotzAudioTooLowTooLong=netBotzAudioTooLowTooLong, humiSensorErrorStatus=humiSensorErrorStatus, dryContactSensorValueStr=dryContactSensorValueStr, netBotzGPSMovementError=netBotzGPSMovementError, audioSensorEntry=audioSensorEntry, dewPointSensorId=dewPointSensorId, netBotzDewPointUnplugged=netBotzDewPointUnplugged, airFlowSensorEntry=airFlowSensorEntry, otherStateSensorPortId=otherStateSensorPortId, netBotzMicPlugSensorReplugged=netBotzMicPlugSensorReplugged, netBotzAirFlowDecreasingTooQuickly=netBotzAirFlowDecreasingTooQuickly, netBotzDewPointErrorRTN=netBotzDewPointErrorRTN, otherPortEncId=otherPortEncId, netBotzAudioErrorRTN=netBotzAudioErrorRTN, netBotzPacketDropErrorRTN=netBotzPacketDropErrorRTN, netBotzGPSMovementNotIncreasingTooQuickly=netBotzGPSMovementNotIncreasingTooQuickly, netBotzPodUnplugged=netBotzPodUnplugged, netBotzV2TempSensorTraps=netBotzV2TempSensorTraps, netBotz320ERack=netBotz320ERack, netBotzMultiRAESensorTooLowTooLong=netBotzMultiRAESensorTooLowTooLong, otherNumericSensorUnits=otherNumericSensorUnits, netBotzAirFlowNotDecreasingTooQuickly=netBotzAirFlowNotDecreasingTooQuickly, netBotzTVSignalSensorValueError=netBotzTVSignalSensorValueError, netBotzMultiRAESensorSensorValueError=netBotzMultiRAESensorSensorValueError, errorCondResolvedTime=errorCondResolvedTime, netBotzGPSPositionTooHighTooLongRTN=netBotzGPSPositionTooHighTooLongRTN, otherNumericSensorTable=otherNumericSensorTable, netBotzMultiRAESensorUnplugged=netBotzMultiRAESensorUnplugged, netBotzPacketDropReplugged=netBotzPacketDropReplugged, netBotzV2SpeakerPlugSensorTraps=netBotzV2SpeakerPlugSensorTraps, netBotzV2CameraPodTraps=netBotzV2CameraPodTraps, tempSensorValueIntF=tempSensorValueIntF, netBotzHumidityTooLow=netBotzHumidityTooLow, netBotzV2AudioSensorTraps=netBotzV2AudioSensorTraps, netBotzGPSMovementIncreasingTooQuickly=netBotzGPSMovementIncreasingTooQuickly, netBotzOutputControlSensorValueErrorRTN=netBotzOutputControlSensorValueErrorRTN, dinPortLabel=dinPortLabel, netBotzV2MultiRAEDeviceStatusTraps=netBotzV2MultiRAEDeviceStatusTraps, airFlowSensorId=airFlowSensorId, netBotzDriveNotFoundErrorResolved=netBotzDriveNotFoundErrorResolved, otherNumericSensorValue=otherNumericSensorValue, netBotzPacketDropError=netBotzPacketDropError, netBotz320Wall=netBotz320Wall, netBotzV2TrapResolveTime=netBotzV2TrapResolveTime, dewPointSensorPortId=dewPointSensorPortId, netBotzMicPlugSensorValueError=netBotzMicPlugSensorValueError, netBotzV2CameraMotionSensorTraps=netBotzV2CameraMotionSensorTraps, netBotzHumidityDecreasingTooQuickly=netBotzHumidityDecreasingTooQuickly, dinPortEncId=dinPortEncId, errorCondId=errorCondId, tempSensorValue=tempSensorValue, netBotzV2Botz=netBotzV2Botz, netBotzV2GenericTraps=netBotzV2GenericTraps, netBotzAmpDetectTooLowForTooLongRTN=netBotzAmpDetectTooLowForTooLongRTN, otherPortId=otherPortId, tempSensorErrorStatus=tempSensorErrorStatus, airFlowSensorTable=airFlowSensorTable, netBotzWallBotz500=netBotzWallBotz500, humiSensorValueInt=humiSensorValueInt, netBotzGPSMovementTooLowForTooLongRTN=netBotzGPSMovementTooLowForTooLongRTN, netBotzDoorSensorValueError=netBotzDoorSensorValueError, netBotzSNMPCrawlerNotDecreasingTooQuickly=netBotzSNMPCrawlerNotDecreasingTooQuickly, netBotzDoorSensorUnplugged=netBotzDoorSensorUnplugged, netBotzV2DewPointSensorTraps=netBotzV2DewPointSensorTraps, audioSensorValue=audioSensorValue, enclosureId=enclosureId, netBotzAudioTooLow=netBotzAudioTooLow, netBotzMultiRAESensorTooHighTooLongRTN=netBotzMultiRAESensorTooHighTooLongRTN, errorCondResolvedTimeStr=errorCondResolvedTimeStr, netBotzSNMPCrawlerError=netBotzSNMPCrawlerError, netBotzAudioDecreasingTooQuickly=netBotzAudioDecreasingTooQuickly, airFlowSensorLabel=airFlowSensorLabel, netBotzGPSMovementTooHigh=netBotzGPSMovementTooHigh, netBotzGPSStatusSensorError=netBotzGPSStatusSensorError, netBotzHumidityTooHighTooLong=netBotzHumidityTooHighTooLong, netBotz420ERack=netBotz420ERack, netBotzV2PacketDropSensorTraps=netBotzV2PacketDropSensorTraps, netBotzPacketDropTooHighTooLongRTN=netBotzPacketDropTooHighTooLongRTN, netBotzV2GPSPositionSensorTraps=netBotzV2GPSPositionSensorTraps, netBotzV2TrapSensorID=netBotzV2TrapSensorID, netBotzHumidityNotIncreasingTooQuickly=netBotzHumidityNotIncreasingTooQuickly, enclosureParentEncId=enclosureParentEncId, netBotzAudioNotDecreasingTooQuickly=netBotzAudioNotDecreasingTooQuickly, netBotzOutputControlSensorError=netBotzOutputControlSensorError, cameraMotionSensorEntry=cameraMotionSensorEntry, netBotzPacketDropTooLow=netBotzPacketDropTooLow, tempSensorPortId=tempSensorPortId, dryContactSensorPortId=dryContactSensorPortId, netBotzSNMPCrawlerTooLow=netBotzSNMPCrawlerTooLow, otherNumericSensorValueIntX1000=otherNumericSensorValueIntX1000, airFlowSensorErrorStatus=airFlowSensorErrorStatus, raeSystemsAreaConnect500=raeSystemsAreaConnect500, netBotzGPSStatusSensorReplugged=netBotzGPSStatusSensorReplugged, netBotzAirFlowUnplugged=netBotzAirFlowUnplugged, netBotzDryContactValueError=netBotzDryContactValueError, netBotzSpeakerPlugSensorValueErrorRTN=netBotzSpeakerPlugSensorValueErrorRTN, netBotzV2MultiRAESensorStatusTraps=netBotzV2MultiRAESensorStatusTraps, netBotzPacketDropTooHighTooLong=netBotzPacketDropTooHighTooLong, netBotzHumidityReplugged=netBotzHumidityReplugged, netBotzPacketDropUnplugged=netBotzPacketDropUnplugged, dryContactSensorEntry=dryContactSensorEntry, dinPortSupportsDryContact=dinPortSupportsDryContact, netBotzHumidityErrorRTN=netBotzHumidityErrorRTN, netBotzDewPointTooLowForTooLongRTN=netBotzDewPointTooLowForTooLongRTN, netBotzV2SensorPodTraps=netBotzV2SensorPodTraps, dinPortStatus=dinPortStatus, ErrorStatus=ErrorStatus, netBotzTempTooLowRTN=netBotzTempTooLowRTN, netBotzAirFlowTooLowForTooLongRTN=netBotzAirFlowTooLowForTooLongRTN, netBotzMultiRAESensorTooHighRTN=netBotzMultiRAESensorTooHighRTN, netBotzGPSPositionTooHighTooLong=netBotzGPSPositionTooHighTooLong, airFlowSensorEncId=airFlowSensorEncId, otherNumericSensorValueIntX1000000=otherNumericSensorValueIntX1000000, dryContactSensorErrorStatus=dryContactSensorErrorStatus, netBotzTVSignalSensorErrorRTN=netBotzTVSignalSensorErrorRTN, netBotzSNMPCrawlerTooLowRTN=netBotzSNMPCrawlerTooLowRTN, dinPortSupportsRMS=dinPortSupportsRMS, netBotzGPSPositionNotDecreasingTooQuickly=netBotzGPSPositionNotDecreasingTooQuickly, netBotzMultiRAESensorStatusValueErrorRTN=netBotzMultiRAESensorStatusValueErrorRTN, netBotzTempTooHighTooLongRTN=netBotzTempTooHighTooLongRTN, netBotzAmpDetectTooLowRTN=netBotzAmpDetectTooLowRTN, netBotzDewPointNotDecreasingTooQuickly=netBotzDewPointNotDecreasingTooQuickly, netBotzV2TrapParms=netBotzV2TrapParms, netBotzAmpDetectErrorRTN=netBotzAmpDetectErrorRTN, netBotzTempTooLow=netBotzTempTooLow, ampDetectSensorEncId=ampDetectSensorEncId, netBotzV2AirFlowSensorTraps=netBotzV2AirFlowSensorTraps, netBotzSpeakerPlugSensorReplugged=netBotzSpeakerPlugSensorReplugged, netBotzPorts=netBotzPorts, netBotzSensorPodUnplugged=netBotzSensorPodUnplugged, netBotzV2TrapStartTime=netBotzV2TrapStartTime, netBotzCameraMotionSensorErrorRTN=netBotzCameraMotionSensorErrorRTN, netBotzV2TrapSensorValueInt=netBotzV2TrapSensorValueInt, netBotzAmpDetectTooHigh=netBotzAmpDetectTooHigh, netBotzTempIncreasingTooQuickly=netBotzTempIncreasingTooQuickly, dinPortTable=dinPortTable, netBotzSensors=netBotzSensors, ampDetectSensorValueStr=ampDetectSensorValueStr, errorCondSensorId=errorCondSensorId, netBotzAirFlowTooLowTooLong=netBotzAirFlowTooLowTooLong, netBotzMultiRAESensorReplugged=netBotzMultiRAESensorReplugged, ampDetectSensorEntry=ampDetectSensorEntry, netBotzDewPointTooLowTooLong=netBotzDewPointTooLowTooLong, netBotzGPSMovementUnplugged=netBotzGPSMovementUnplugged, airFlowSensorValueInt=airFlowSensorValueInt, dewPointSensorErrorStatus=dewPointSensorErrorStatus, netBotzV2PortTraps=netBotzV2PortTraps, netBotzTempUnplugged=netBotzTempUnplugged, humiSensorValue=humiSensorValue, netBotzHumidityIncreasingTooQuickly=netBotzHumidityIncreasingTooQuickly, netBotzSNMPCrawlerSensorValueError=netBotzSNMPCrawlerSensorValueError, netBotzAudioIncreasingTooQuickly=netBotzAudioIncreasingTooQuickly, OperStatus=OperStatus, netBotzV2TrapPortLabel=netBotzV2TrapPortLabel, netBotzCameraMotionSensorValueErrorRTN=netBotzCameraMotionSensorValueErrorRTN, netBotzAmpDetectError=netBotzAmpDetectError, netBotzSNMPCrawlerSensorValueErrorRTN=netBotzSNMPCrawlerSensorValueErrorRTN, netBotzWirelessStatusSensorError=netBotzWirelessStatusSensorError, humiSensorEncId=humiSensorEncId, netBotzMicPlugSensorValueErrorRTN=netBotzMicPlugSensorValueErrorRTN, dewPointSensorValueStr=dewPointSensorValueStr, netBotzPacketDropNotIncreasingTooQuickly=netBotzPacketDropNotIncreasingTooQuickly, tempSensorEntry=tempSensorEntry, netBotzSNMPCrawlerReplugged=netBotzSNMPCrawlerReplugged, cameraMotionSensorLabel=cameraMotionSensorLabel, netBotzHumidityError=netBotzHumidityError, netBotzWirelessStatusSensorValueError=netBotzWirelessStatusSensorValueError, enclosureTable=enclosureTable, netBotzSpeakerPlugSensorError=netBotzSpeakerPlugSensorError, errorCondStartTime=errorCondStartTime, netBotzGPSPositionTooHigh=netBotzGPSPositionTooHigh, netBotzSensorPodReplugged=netBotzSensorPodReplugged, netBotzV2TrapErrorID=netBotzV2TrapErrorID, netBotzAudioTooLowRTN=netBotzAudioTooLowRTN, netBotzAirFlowReplugged=netBotzAirFlowReplugged, netBotzAudioTooLowForTooLongRTN=netBotzAudioTooLowForTooLongRTN, audioSensorId=audioSensorId, netBotzAirFlowIncreasingTooQuickly=netBotzAirFlowIncreasingTooQuickly, netBotzAmpDetectTooLow=netBotzAmpDetectTooLow, netBotzAmpDetectTooHighRTN=netBotzAmpDetectTooHighRTN, netBotzGPSPositionIncreasingTooQuickly=netBotzGPSPositionIncreasingTooQuickly, otherPortEntry=otherPortEntry, netBotzV2MultiRAESensorTraps=netBotzV2MultiRAESensorTraps, dewPointSensorValueInt=dewPointSensorValueInt, netBotzDewPointTooHigh=netBotzDewPointTooHigh, cameraMotionSensorId=cameraMotionSensorId, netBotzDewPointTooHighRTN=netBotzDewPointTooHighRTN, netBotzV2Traps=netBotzV2Traps, tempSensorId=tempSensorId, humiSensorValueStr=humiSensorValueStr, netBotzGPSMovementTooLowTooLong=netBotzGPSMovementTooLowTooLong, netBotzV2DoorSensorTraps=netBotzV2DoorSensorTraps, netBotzAmpDetectNotIncreasingTooQuickly=netBotzAmpDetectNotIncreasingTooQuickly, netBotzV2BasePodTraps=netBotzV2BasePodTraps, netBotzTempTooLowForTooLongRTN=netBotzTempTooLowForTooLongRTN, airFlowSensorValueStr=airFlowSensorValueStr, netBotzMultiRAESensorError=netBotzMultiRAESensorError, netBotzV2SNMPCrawlerSensorTraps=netBotzV2SNMPCrawlerSensorTraps, tempSensorValueStr=tempSensorValueStr, netBotzGPSStatusSensorUnplugged=netBotzGPSStatusSensorUnplugged, doorSwitchSensorValue=doorSwitchSensorValue, enclosureEntry=enclosureEntry, dewPointSensorTable=dewPointSensorTable, netBotzNumericSensors=netBotzNumericSensors, netBotz_V2=netBotz_V2, netBotzDewPointTooLow=netBotzDewPointTooLow, netBotzTempNotDecreasingTooQuickly=netBotzTempNotDecreasingTooQuickly, netBotzAmpDetectIncreasingTooQuickly=netBotzAmpDetectIncreasingTooQuickly, netBotzDewPointTooLowRTN=netBotzDewPointTooLowRTN, netBotzV2WirelessStatusSensorTraps=netBotzV2WirelessStatusSensorTraps, dryContactSensorValue=dryContactSensorValue, audioSensorPortId=audioSensorPortId, netBotzSNMPCrawlerUnplugged=netBotzSNMPCrawlerUnplugged, netBotzV2TrapNotifyTime=netBotzV2TrapNotifyTime, netBotzOutputControlSensorValueError=netBotzOutputControlSensorValueError, netBotzAirFlowError=netBotzAirFlowError, netBotzAudioTooHighTooLong=netBotzAudioTooHighTooLong, netBotzGPSPositionError=netBotzGPSPositionError, humiSensorEntry=humiSensorEntry, netBotzAmpDetectTooHighTooLongRTN=netBotzAmpDetectTooHighTooLongRTN, netBotzAirFlowNotIncreasingTooQuickly=netBotzAirFlowNotIncreasingTooQuickly, netBotzPodReplugged=netBotzPodReplugged, netBotzDewPointReplugged=netBotzDewPointReplugged, doorSwitchSensorTable=doorSwitchSensorTable, netBotzHumidityTooHigh=netBotzHumidityTooHigh, netBotzMultiRAESensorTooHighTooLong=netBotzMultiRAESensorTooHighTooLong, dinPortEntry=dinPortEntry, netBotzV2TrapErrorTypeLabel=netBotzV2TrapErrorTypeLabel, dewPointSensorLabel=dewPointSensorLabel, errorCondStartTimeStr=errorCondStartTimeStr, otherStateSensorErrorStatus=otherStateSensorErrorStatus, netBotzAmpDetectNotDecreasingTooQuickly=netBotzAmpDetectNotDecreasingTooQuickly, netBotzMultiRAESensorIncreasingTooQuickly=netBotzMultiRAESensorIncreasingTooQuickly, netBotzAudioError=netBotzAudioError, netBotzV2TrapPodID=netBotzV2TrapPodID, netBotzV2TrapSensorValueFraction=netBotzV2TrapSensorValueFraction, dewPointSensorEntry=dewPointSensorEntry, netBotzV2TrapPortID=netBotzV2TrapPortID, netBotzV2=netBotzV2, netBotzDewPointTooHighTooLongRTN=netBotzDewPointTooHighTooLongRTN, netBotzCameraMotionSensorUnplugged=netBotzCameraMotionSensorUnplugged, netBotz=netBotz, netBotzTempTooHighTooLong=netBotzTempTooHighTooLong, netBotzEnclosures=netBotzEnclosures)
mibBuilder.exportSymbols("NETBOTZV2-MIB", cameraMotionSensorTable=cameraMotionSensorTable, dewPointSensorValue=dewPointSensorValue, netBotzDryContactError=netBotzDryContactError, netBotzSNMPCrawlerErrorRTN=netBotzSNMPCrawlerErrorRTN, doorSwitchSensorId=doorSwitchSensorId, netBotzAmpDetectTooLowTooLong=netBotzAmpDetectTooLowTooLong, netBotzMultiRAEDeviceStatusUnplugged=netBotzMultiRAEDeviceStatusUnplugged, enclosureStatus=enclosureStatus, netBotzV2GPSMovementSensorTraps=netBotzV2GPSMovementSensorTraps, ampDetectSensorValueInt=ampDetectSensorValueInt, dinPortSensorIdSuffix=dinPortSensorIdSuffix, netBotzGPSPositionTooLowForTooLongRTN=netBotzGPSPositionTooLowForTooLongRTN, netBotzV2TrapPodLabel=netBotzV2TrapPodLabel, audioSensorTable=audioSensorTable, ampDetectSensorPortId=ampDetectSensorPortId, netBotzGPSMovementNotDecreasingTooQuickly=netBotzGPSMovementNotDecreasingTooQuickly, netBotzV2TrapSeverity=netBotzV2TrapSeverity, netBotzSNMPCrawlerTooHigh=netBotzSNMPCrawlerTooHigh, humiSensorPortId=humiSensorPortId, audioSensorValueInt=audioSensorValueInt, netBotzDryContactErrorRTN=netBotzDryContactErrorRTN, netBotzTempNotIncreasingTooQuickly=netBotzTempNotIncreasingTooQuickly, netBotzMultiRAESensorStatusError=netBotzMultiRAESensorStatusError, otherStateSensorEntry=otherStateSensorEntry, otherStateSensorEncId=otherStateSensorEncId, netBotzMultiRAEDeviceStatusReplugged=netBotzMultiRAEDeviceStatusReplugged, netBotzHumidityTooLowTooLong=netBotzHumidityTooLowTooLong, errorCondTypeId=errorCondTypeId, doorSwitchSensorValueStr=doorSwitchSensorValueStr, ampDetectSensorId=ampDetectSensorId, tempSensorValueInt=tempSensorValueInt, netBotzMultiRAESensorStatusErrorRTN=netBotzMultiRAESensorStatusErrorRTN, netBotzGPSStatusSensorValueError=netBotzGPSStatusSensorValueError, tempSensorTable=tempSensorTable, netBotzGPSPositionTooLowTooLong=netBotzGPSPositionTooLowTooLong, doorSwitchSensorPortId=doorSwitchSensorPortId, otherNumericSensorValueInt=otherNumericSensorValueInt, netBotzMultiRAESensorNotDecreasingTooQuickly=netBotzMultiRAESensorNotDecreasingTooQuickly, netBotzV2GPSStatusSensorTraps=netBotzV2GPSStatusSensorTraps, netBotzAmpDetectDecreasingTooQuickly=netBotzAmpDetectDecreasingTooQuickly, netBotzAirFlowTooLow=netBotzAirFlowTooLow, doorSwitchSensorEntry=doorSwitchSensorEntry, doorSwitchSensorLabel=doorSwitchSensorLabel, dryContactSensorEncId=dryContactSensorEncId, netBotzAudioTooHigh=netBotzAudioTooHigh, netBotzSNMPCrawlerIncreasingTooQuickly=netBotzSNMPCrawlerIncreasingTooQuickly, otherPortTable=otherPortTable, netBotzSNMPCrawlerTooHighTooLongRTN=netBotzSNMPCrawlerTooHighTooLongRTN, netBotzTempDecreasingTooQuickly=netBotzTempDecreasingTooQuickly, netBotzGPSStatusSensorErrorRTN=netBotzGPSStatusSensorErrorRTN, otherStateSensorLabel=otherStateSensorLabel, netBotzMultiRAESensorErrorRTN=netBotzMultiRAESensorErrorRTN, netBotzSNMPCrawlerTooHighRTN=netBotzSNMPCrawlerTooHighRTN, netBotzMultiRAESensorSensorValueErrorRTN=netBotzMultiRAESensorSensorValueErrorRTN, netBotzOutputControlSensorUnplugged=netBotzOutputControlSensorUnplugged, netBotzTVSignalSensorError=netBotzTVSignalSensorError, netBotzMultiRAESensorDecreasingTooQuickly=netBotzMultiRAESensorDecreasingTooQuickly, dryContactSensorTable=dryContactSensorTable, ampDetectSensorValue=ampDetectSensorValue, netBotzDoorSensorReplugged=netBotzDoorSensorReplugged, cameraMotionSensorErrorStatus=cameraMotionSensorErrorStatus, netBotzGPSMovementErrorRTN=netBotzGPSMovementErrorRTN, otherNumericSensorEncId=otherNumericSensorEncId, BoolValue=BoolValue, netBotzStateSensors=netBotzStateSensors, netBotzSNMPCrawlerTooLowForTooLongRTN=netBotzSNMPCrawlerTooLowForTooLongRTN, netBotzMultiRAEDeviceStatusErrorRTN=netBotzMultiRAEDeviceStatusErrorRTN, errorCondEncId=errorCondEncId, netBotzGPSPositionErrorRTN=netBotzGPSPositionErrorRTN, netBotzAmpDetectTooHighTooLong=netBotzAmpDetectTooHighTooLong, dinPortId=dinPortId, netBotzCameraPodReplugged=netBotzCameraPodReplugged, netBotzGPSMovementTooHighTooLong=netBotzGPSMovementTooHighTooLong, netBotzHumidityTooLowForTooLongRTN=netBotzHumidityTooLowForTooLongRTN, netBotzGPSPositionReplugged=netBotzGPSPositionReplugged, netBotzV2MicPlugSensorTraps=netBotzV2MicPlugSensorTraps, netBotzGPSMovementTooHighRTN=netBotzGPSMovementTooHighRTN, netBotzSNMPCrawlerDecreasingTooQuickly=netBotzSNMPCrawlerDecreasingTooQuickly, netBotzCameraPodUnplugged=netBotzCameraPodUnplugged, netBotzV2AmpDetectSensorTraps=netBotzV2AmpDetectSensorTraps, netBotzV2PodTraps=netBotzV2PodTraps, netBotzHumidityUnplugged=netBotzHumidityUnplugged, netBotzAirFlowErrorRTN=netBotzAirFlowErrorRTN, otherNumericSensorValueStr=otherNumericSensorValueStr, netBotzGPSPositionTooHighRTN=netBotzGPSPositionTooHighRTN, netBotzTempReplugged=netBotzTempReplugged, netBotzAudioTooHighRTN=netBotzAudioTooHighRTN, netBotzCameraMotionSensorError=netBotzCameraMotionSensorError, netBotzPacketDropTooLowTooLong=netBotzPacketDropTooLowTooLong, errorCondSeverity=errorCondSeverity, netBotzV2DryContactSensorTraps=netBotzV2DryContactSensorTraps, netBotz420Wall=netBotz420Wall, netBotzAirFlowTooLowRTN=netBotzAirFlowTooLowRTN, netBotzDoorSensorError=netBotzDoorSensorError, netBotzPacketDropTooHigh=netBotzPacketDropTooHigh, netBotzHumidityNotDecreasingTooQuickly=netBotzHumidityNotDecreasingTooQuickly, netBotzMicPlugSensorUnplugged=netBotzMicPlugSensorUnplugged, netBotzSpeakerPlugSensorErrorRTN=netBotzSpeakerPlugSensorErrorRTN, netBotzDewPointError=netBotzDewPointError, netBotzMicPlugSensorError=netBotzMicPlugSensorError, errorCondEntry=errorCondEntry, ampDetectSensorLabel=ampDetectSensorLabel, netBotzV2TrapSensorLabel=netBotzV2TrapSensorLabel, dewPointSensorEncId=dewPointSensorEncId, otherStateSensorTable=otherStateSensorTable, audioSensorValueStr=audioSensorValueStr, netBotzAudioReplugged=netBotzAudioReplugged, netBotzErrors=netBotzErrors, netBotzDoorSensorValueErrorRTN=netBotzDoorSensorValueErrorRTN, netBotz320Rack=netBotz320Rack, otherNumericSensorLabel=otherNumericSensorLabel, netBotzOutputControlSensorReplugged=netBotzOutputControlSensorReplugged, netBotzHumidityTooLowRTN=netBotzHumidityTooLowRTN, netBotzDryContactReplugged=netBotzDryContactReplugged, netBotzWirelessStatusSensorValueErrorRTN=netBotzWirelessStatusSensorValueErrorRTN, netBotzPacketDropNotDecreasingTooQuickly=netBotzPacketDropNotDecreasingTooQuickly, cameraMotionSensorValue=cameraMotionSensorValue, netBotzCameraMotionSensorReplugged=netBotzCameraMotionSensorReplugged, netBotzSNMPCrawlerTooLowTooLong=netBotzSNMPCrawlerTooLowTooLong, dryContactSensorLabel=dryContactSensorLabel, netBotzPacketDropTooLowForTooLongRTN=netBotzPacketDropTooLowForTooLongRTN, netBotzAudioTooHighTooLongRTN=netBotzAudioTooHighTooLongRTN, netBotzCameraMotionSensorValueError=netBotzCameraMotionSensorValueError, netBotzV2TVSignalSensorTraps=netBotzV2TVSignalSensorTraps, netBotzAirFlowTooHighRTN=netBotzAirFlowTooHighRTN, netBotzDryContactUnplugged=netBotzDryContactUnplugged, netBotzAmpDetectUnplugged=netBotzAmpDetectUnplugged, netBotzGPSMovementTooLowRTN=netBotzGPSMovementTooLowRTN, cameraMotionSensorPortId=cameraMotionSensorPortId, netBotzDewPointTooHighTooLong=netBotzDewPointTooHighTooLong, doorSwitchSensorErrorStatus=doorSwitchSensorErrorStatus, netBotzLogonError=netBotzLogonError, netBotzV2Products=netBotzV2Products, otherNumericSensorPortId=otherNumericSensorPortId, otherStateSensorValue=otherStateSensorValue, netBotzWirelessStatusSensorUnplugged=netBotzWirelessStatusSensorUnplugged, netBotzMultiRAESensorStatusValueError=netBotzMultiRAESensorStatusValueError, netBotzTempError=netBotzTempError, netBotzGPSPositionTooLow=netBotzGPSPositionTooLow, netBotzTempTooHighRTN=netBotzTempTooHighRTN, netBotzGPSMovementDecreasingTooQuickly=netBotzGPSMovementDecreasingTooQuickly, tempSensorEncId=tempSensorEncId, netBotzTVSignalSensorValueErrorRTN=netBotzTVSignalSensorValueErrorRTN, netBotzV2SensorTraps=netBotzV2SensorTraps, netBotzTVSignalSensorReplugged=netBotzTVSignalSensorReplugged, netBotzPacketDropTooHighRTN=netBotzPacketDropTooHighRTN, netBotzMultiRAESensorStatusUnplugged=netBotzMultiRAESensorStatusUnplugged, errorCondResolved=errorCondResolved, otherStateSensorId=otherStateSensorId, netBotzHumidityTooHighRTN=netBotzHumidityTooHighRTN, PYSNMP_MODULE_ID=netBotz_V2, netBotzTempErrorRTN=netBotzTempErrorRTN, netBotzTempTooLowTooLong=netBotzTempTooLowTooLong, netBotzMultiRAESensorNotIncreasingTooQuickly=netBotzMultiRAESensorNotIncreasingTooQuickly, netBotzWirelessStatusSensorErrorRTN=netBotzWirelessStatusSensorErrorRTN, netBotzGPSMovementTooLow=netBotzGPSMovementTooLow, netBotzHumidityTooHighTooLongRTN=netBotzHumidityTooHighTooLongRTN, ampDetectSensorErrorStatus=ampDetectSensorErrorStatus, netBotzV2TrapSensorValue=netBotzV2TrapSensorValue, netBotzMultiRAEDeviceStatusError=netBotzMultiRAEDeviceStatusError, netBotzOutputControlSensorErrorRTN=netBotzOutputControlSensorErrorRTN, netBotzDewPointNotIncreasingTooQuickly=netBotzDewPointNotIncreasingTooQuickly, enclosureLabel=enclosureLabel, netBotzAirFlowTooHighTooLong=netBotzAirFlowTooHighTooLong, netBotzSNMPCrawlerTooHighTooLong=netBotzSNMPCrawlerTooHighTooLong, netBotz420Rack=netBotz420Rack, doorSwitchSensorEncId=doorSwitchSensorEncId, otherPortLabel=otherPortLabel, humiSensorLabel=humiSensorLabel, netBotzMultiRAESensorStatusReplugged=netBotzMultiRAESensorStatusReplugged, netBotzV2PlugModuleStatusSensorTraps=netBotzV2PlugModuleStatusSensorTraps, otherStateSensorValueStr=otherStateSensorValueStr, netBotzGPSMovementTooHighTooLongRTN=netBotzGPSMovementTooHighTooLongRTN, netBotzMultiRAESensorTooLowForTooLongRTN=netBotzMultiRAESensorTooLowForTooLongRTN, otherNumericSensorId=otherNumericSensorId, airFlowSensorPortId=airFlowSensorPortId, netBotzGPSStatusSensorValueErrorRTN=netBotzGPSStatusSensorValueErrorRTN, netBotzAudioNotIncreasingTooQuickly=netBotzAudioNotIncreasingTooQuickly, netBotzTempTooHigh=netBotzTempTooHigh, netBotzPacketDropIncreasingTooQuickly=netBotzPacketDropIncreasingTooQuickly, netBotzGPSPositionTooLowRTN=netBotzGPSPositionTooLowRTN, audioSensorEncId=audioSensorEncId, netBotzWirelessStatusSensorReplugged=netBotzWirelessStatusSensorReplugged, netBotzMultiRAEDeviceStatusValueErrorRTN=netBotzMultiRAEDeviceStatusValueErrorRTN, dinPortSupportsAverage=dinPortSupportsAverage, dryContactSensorId=dryContactSensorId, netBotzGPSPositionNotIncreasingTooQuickly=netBotzGPSPositionNotIncreasingTooQuickly, netBotzV2HumiditySensorTraps=netBotzV2HumiditySensorTraps, audioSensorLabel=audioSensorLabel, netBotzDryContactValueErrorRTN=netBotzDryContactValueErrorRTN, netBotzDewPointIncreasingTooQuickly=netBotzDewPointIncreasingTooQuickly, netBotzAmpDetectReplugged=netBotzAmpDetectReplugged, netBotzMultiRAESensorTooHigh=netBotzMultiRAESensorTooHigh, netBotzSpeakerPlugSensorValueError=netBotzSpeakerPlugSensorValueError, airFlowSensorValue=airFlowSensorValue, errorCondPortId=errorCondPortId, netBotzDoorSensorErrorRTN=netBotzDoorSensorErrorRTN, netBotzSpeakerPlugSensorUnplugged=netBotzSpeakerPlugSensorUnplugged, otherPortStatus=otherPortStatus, netBotzMultiRAESensorTooLow=netBotzMultiRAESensorTooLow, cameraMotionSensorValueStr=cameraMotionSensorValueStr, cameraMotionSensorEncId=cameraMotionSensorEncId, netBotzAudioUnplugged=netBotzAudioUnplugged, netBotzV2TrapErrorType=netBotzV2TrapErrorType, netBotzGPSPositionUnplugged=netBotzGPSPositionUnplugged, otherNumericSensorErrorStatus=otherNumericSensorErrorStatus, humiSensorTable=humiSensorTable, netBotzAirFlowTooHighTooLongRTN=netBotzAirFlowTooHighTooLongRTN, audioSensorErrorStatus=audioSensorErrorStatus, netBotzMultiRAESensorTooLowRTN=netBotzMultiRAESensorTooLowRTN, netBotzSNMPCrawlerNotIncreasingTooQuickly=netBotzSNMPCrawlerNotIncreasingTooQuickly, humiSensorId=humiSensorId, netBotzDewPointDecreasingTooQuickly=netBotzDewPointDecreasingTooQuickly, netBotzMultiRAEDeviceStatusValueError=netBotzMultiRAEDeviceStatusValueError, netBotzMicPlugSensorErrorRTN=netBotzMicPlugSensorErrorRTN, netBotzAirFlowTooHigh=netBotzAirFlowTooHigh, errorCondTable=errorCondTable, netBotzPacketDropTooLowRTN=netBotzPacketDropTooLowRTN, ampDetectSensorTable=ampDetectSensorTable, enclosureErrorStatus=enclosureErrorStatus)
