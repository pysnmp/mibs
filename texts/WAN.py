#
# PySNMP MIB module WAN (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/peplink/WAN
# Produced by pysmi-1.1.12 at Fri Jul 19 11:39:33 2024
# On host fv-az702-886 platform Linux version 6.5.0-1023-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ObjectIdentity, iso, enterprises, ModuleIdentity, TimeTicks, Counter64, Integer32, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, NotificationType, Gauge32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "enterprises", "ModuleIdentity", "TimeTicks", "Counter64", "Integer32", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "NotificationType", "Gauge32", "Unsigned32")
RowStatus, MacAddress, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "DisplayString", "TruthValue", "TextualConvention")
peplink = MibIdentifier((1, 3, 6, 1, 4, 1, 23695))
wan_status = ModuleIdentity((1, 3, 6, 1, 4, 1, 23695, 2)).setLabel("wan-status")
if mibBuilder.loadTexts: wan_status.setLastUpdated('201609060000Z')
if mibBuilder.loadTexts: wan_status.setOrganization('PEPLINK')
if mibBuilder.loadTexts: wan_status.setContactInfo('')
if mibBuilder.loadTexts: wan_status.setDescription('MIB module for WAN.')
class PortSpeedType(TextualConvention, Integer32):
    description = 'Describe the port speed and type.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("unknown", 0), ("auto", 1), ("fullDulplex10", 2), ("halfDulplex10", 3), ("fullDulplex100", 4), ("halfDulplex100", 5), ("fullDulplex1000", 6), ("halfDulplex1000", 7))

wanStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 2, 1))
wanNum = MibScalar((1, 3, 6, 1, 4, 1, 23695, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanNum.setStatus('current')
if mibBuilder.loadTexts: wanNum.setDescription('Number of WAN network.')
wanTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 2, 1, 2), )
if mibBuilder.loadTexts: wanTable.setStatus('current')
if mibBuilder.loadTexts: wanTable.setDescription('WAN Table')
wanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 2, 1, 2, 1), ).setIndexNames((0, "WAN", "wanId"))
if mibBuilder.loadTexts: wanEntry.setStatus('current')
if mibBuilder.loadTexts: wanEntry.setDescription('An entry in the wanTable')
wanId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanId.setStatus('current')
if mibBuilder.loadTexts: wanId.setDescription('WAN ID.')
wanName = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanName.setStatus('current')
if mibBuilder.loadTexts: wanName.setDescription('WAN Name.')
wanState = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("disabled", 1), ("disconnected", 2), ("connected", 3), ("connecting", 4), ("activating", 5), ("health-check-fail", 6), ("disconnected-manually", 7), ("standby", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanState.setStatus('current')
if mibBuilder.loadTexts: wanState.setDescription('WAN status.')
wanHealthCheckState = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fail", 0), ("success", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanHealthCheckState.setStatus('current')
if mibBuilder.loadTexts: wanHealthCheckState.setDescription('WAN health check state.')
wanSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanSignal.setStatus('current')
if mibBuilder.loadTexts: wanSignal.setDescription('WAN signal strength in dBm unit.\n\t\t\t\t\tRemark:\n\t\t\t\t\tIf the value equals -9999, means signal strength \n\t\t\t\t\tnot applicable in this WAN.')
wanCellID = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanCellID.setStatus('current')
if mibBuilder.loadTexts: wanCellID.setDescription('WAN cell id.\n\t\t\t\t\tRemark:\n\t\t\t\t\tOnly applicable for cellular WAN.')
wanPdpConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("pdp-ip", 1), ("pdp-ppp", 2), ("pdp-ipv6", 3), ("pdp-ipv4v6", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanPdpConnection.setStatus('current')
if mibBuilder.loadTexts: wanPdpConnection.setDescription('WAN PDP connection type.\n\t\t\t\t\tRemark:\n\t\t\t\t\tOnly applicable for cellular WAN.')
wanNetwork = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3))
wanNetworkIpTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 1), )
if mibBuilder.loadTexts: wanNetworkIpTable.setStatus('current')
if mibBuilder.loadTexts: wanNetworkIpTable.setDescription('WAN Network IP Table')
wanNetworkIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 1, 1), ).setIndexNames((0, "WAN", "wanId"), (0, "WAN", "wanNetworkIpId"))
if mibBuilder.loadTexts: wanNetworkIpEntry.setStatus('current')
if mibBuilder.loadTexts: wanNetworkIpEntry.setDescription('An entry in the wanNetworkIpTable')
wanNetworkIpId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanNetworkIpId.setStatus('current')
if mibBuilder.loadTexts: wanNetworkIpId.setDescription('WAN network IP id.')
wanNetworkIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("dhcp", 0), ("static", 1), ("pppoe", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanNetworkIpType.setStatus('current')
if mibBuilder.loadTexts: wanNetworkIpType.setDescription('WAN network IP type.')
wanNetworkIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanNetworkIpAddress.setStatus('current')
if mibBuilder.loadTexts: wanNetworkIpAddress.setDescription('WAN network IP address.')
wanNetworkSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanNetworkSubnetMask.setStatus('current')
if mibBuilder.loadTexts: wanNetworkSubnetMask.setDescription('WAN network subnet mask.')
wanNetworkDnsTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 2), )
if mibBuilder.loadTexts: wanNetworkDnsTable.setStatus('current')
if mibBuilder.loadTexts: wanNetworkDnsTable.setDescription('WAN Network DNS Table')
wanNetworkDnsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 2, 1), ).setIndexNames((0, "WAN", "wanId"), (0, "WAN", "wanNetworkDnsId"))
if mibBuilder.loadTexts: wanNetworkDnsEntry.setStatus('current')
if mibBuilder.loadTexts: wanNetworkDnsEntry.setDescription('An entry in the wanNetworkDnsTable')
wanNetworkDnsId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanNetworkDnsId.setStatus('current')
if mibBuilder.loadTexts: wanNetworkDnsId.setDescription('WAN network DNS id.')
wanNetworkDnsServer = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanNetworkDnsServer.setStatus('current')
if mibBuilder.loadTexts: wanNetworkDnsServer.setDescription('WAN network DNS server.')
wanNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 3), )
if mibBuilder.loadTexts: wanNetworkTable.setStatus('current')
if mibBuilder.loadTexts: wanNetworkTable.setDescription('WAN Network Table')
wanNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 3, 1), ).setIndexNames((0, "WAN", "wanId"))
if mibBuilder.loadTexts: wanNetworkEntry.setStatus('current')
if mibBuilder.loadTexts: wanNetworkEntry.setDescription('An entry in the wanNetworkTable')
wanNetworkGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 3, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanNetworkGateway.setStatus('current')
if mibBuilder.loadTexts: wanNetworkGateway.setDescription('WAN network subnet mask.')
wanDataUsageTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 2, 1, 4), )
if mibBuilder.loadTexts: wanDataUsageTable.setStatus('current')
if mibBuilder.loadTexts: wanDataUsageTable.setDescription('WAN Network Data Usage Table')
wanDataUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 2, 1, 4, 1), ).setIndexNames((0, "WAN", "wanId"), (0, "WAN", "dataTypeID"))
if mibBuilder.loadTexts: wanDataUsageEntry.setStatus('current')
if mibBuilder.loadTexts: wanDataUsageEntry.setDescription('An entry in the wanDataUsageTable')
dataTypeID = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("daily", 0), ("monthly", 1), ("sinceLastReboot", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dataTypeID.setStatus('current')
if mibBuilder.loadTexts: dataTypeID.setDescription('WAN network data usage type id.')
wanDataUsageTxByte = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 4, 1, 2), Counter64()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDataUsageTxByte.setStatus('current')
if mibBuilder.loadTexts: wanDataUsageTxByte.setDescription('WAN network transmitted bytes(units: MB).')
wanDataUsageRxByte = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 4, 1, 3), Counter64()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDataUsageRxByte.setStatus('current')
if mibBuilder.loadTexts: wanDataUsageRxByte.setDescription('WAN network received bytes(units: MB).')
portWanSpeedTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 2, 1, 5), )
if mibBuilder.loadTexts: portWanSpeedTable.setStatus('current')
if mibBuilder.loadTexts: portWanSpeedTable.setDescription('WAN port speed table.')
portWanSpeedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 2, 1, 5, 1), ).setIndexNames((0, "WAN", "portWanSpeedIndex"))
if mibBuilder.loadTexts: portWanSpeedEntry.setStatus('current')
if mibBuilder.loadTexts: portWanSpeedEntry.setDescription('An entry in the portWanSpeedTable')
portWanSpeedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portWanSpeedIndex.setStatus('current')
if mibBuilder.loadTexts: portWanSpeedIndex.setDescription('WAN port speed index.')
portWanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 1, 5, 1, 2), PortSpeedType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portWanSpeed.setStatus('current')
if mibBuilder.loadTexts: portWanSpeed.setDescription('WAN port speed status (Auto/10baseT-FD/\n\t\t\t\t\t\t\t10baseT-HD/100baseTx-FD/100baseTx-HD/1000baseTx-FD/\n\t\t\t\t\t\t\t1000baseTx-HD.')
wanOverallStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 2, 2))
wanOverallDataUsageTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 2, 2, 1), )
if mibBuilder.loadTexts: wanOverallDataUsageTable.setStatus('current')
if mibBuilder.loadTexts: wanOverallDataUsageTable.setDescription('WAN Network Overall Data Usage Table')
wanOverallDataUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 2, 2, 1, 1), ).setIndexNames((0, "WAN", "wanOverallDataTypeID"))
if mibBuilder.loadTexts: wanOverallDataUsageEntry.setStatus('current')
if mibBuilder.loadTexts: wanOverallDataUsageEntry.setDescription('An entry in the wanOverallDataUsageTable')
wanOverallDataTypeID = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("sinceLastReboot", 3), ("sinceInstallation", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanOverallDataTypeID.setStatus('current')
if mibBuilder.loadTexts: wanOverallDataTypeID.setDescription('WAN network data usage type id.')
wanOverallDataUsageTxByte = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 2, 1, 1, 2), Counter64()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: wanOverallDataUsageTxByte.setStatus('current')
if mibBuilder.loadTexts: wanOverallDataUsageTxByte.setDescription('WAN network transmitted bytes(units: MB).')
wanOverallDataUsageRxByte = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 2, 2, 1, 1, 3), Counter64()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: wanOverallDataUsageRxByte.setStatus('current')
if mibBuilder.loadTexts: wanOverallDataUsageRxByte.setDescription('WAN network received bytes(units: MB).')
mibBuilder.exportSymbols("WAN", wanOverallDataUsageEntry=wanOverallDataUsageEntry, wanHealthCheckState=wanHealthCheckState, wanOverallDataUsageTxByte=wanOverallDataUsageTxByte, wanNetworkTable=wanNetworkTable, wanCellID=wanCellID, wanNetworkIpId=wanNetworkIpId, wan_status=wan_status, wanNetworkIpEntry=wanNetworkIpEntry, wanOverallDataUsageRxByte=wanOverallDataUsageRxByte, wanNetworkIpTable=wanNetworkIpTable, wanNetworkDnsEntry=wanNetworkDnsEntry, wanNetworkIpAddress=wanNetworkIpAddress, wanNetworkDnsId=wanNetworkDnsId, wanNetwork=wanNetwork, portWanSpeedEntry=portWanSpeedEntry, wanNetworkDnsTable=wanNetworkDnsTable, dataTypeID=dataTypeID, PYSNMP_MODULE_ID=wan_status, wanNetworkGateway=wanNetworkGateway, wanTable=wanTable, wanNum=wanNum, wanDataUsageRxByte=wanDataUsageRxByte, wanOverallStatus=wanOverallStatus, portWanSpeedTable=portWanSpeedTable, wanPdpConnection=wanPdpConnection, wanDataUsageTxByte=wanDataUsageTxByte, wanNetworkDnsServer=wanNetworkDnsServer, wanStatus=wanStatus, wanEntry=wanEntry, wanName=wanName, portWanSpeed=portWanSpeed, wanSignal=wanSignal, PortSpeedType=PortSpeedType, wanDataUsageTable=wanDataUsageTable, wanOverallDataTypeID=wanOverallDataTypeID, wanDataUsageEntry=wanDataUsageEntry, wanNetworkSubnetMask=wanNetworkSubnetMask, wanNetworkEntry=wanNetworkEntry, wanNetworkIpType=wanNetworkIpType, wanOverallDataUsageTable=wanOverallDataUsageTable, wanId=wanId, peplink=peplink, portWanSpeedIndex=portWanSpeedIndex, wanState=wanState)
