#
# PySNMP MIB module ACMEPACKET-PRODUCTS (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/oracle/ACMEPACKET-PRODUCTS
# Produced by pysmi-1.1.12 at Mon Sep 16 14:59:11 2024
# On host fv-az1272-448 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
acmepacket, = mibBuilder.importSymbols("ACMEPACKET-SMI", "acmepacket")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, Unsigned32, ModuleIdentity, Gauge32, NotificationType, Bits, iso, ObjectIdentity, Counter32, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "NotificationType", "Bits", "iso", "ObjectIdentity", "Counter32", "TimeTicks", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
acmepacketProducts = ModuleIdentity((1, 3, 6, 1, 4, 1, 9148, 1))
acmepacketProducts.setRevisions(('2012-07-16 00:00', '2007-04-03 15:00', '2014-06-26 00:00', '2017-03-29 00:00', '2019-05-04 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: acmepacketProducts.setRevisionsDescriptions(('Updated contact info', 'Initial version of this MIB module.', 'Updated Organization and Contact info.', 'Added OBJECT-IDENTITY for Platform 6350', 'Added OBJECT-IDENTITY for AP4900',))
if mibBuilder.loadTexts: acmepacketProducts.setLastUpdated('201905040000Z')
if mibBuilder.loadTexts: acmepacketProducts.setOrganization('Oracle Communications')
if mibBuilder.loadTexts: acmepacketProducts.setContactInfo('           \tCustomer Service\n\t\t \tPostal:\t\tOracle Communications\n\t\t\t\t\t100 Crosby Drive \n\t\t\t\t\tBedford, MA 01730\n\t\t\t\t\tUS\n\t\t    \tTel:\t\t1-800-633-0738\n\t\t\tUrl:\t\twww.oracle.com\n\t\t \tE-mail:\t\tsupport@oracle.com')
if mibBuilder.loadTexts: acmepacketProducts.setDescription('Products supported at Acme Packet.')
apNetNet4000Series = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 1))
if mibBuilder.loadTexts: apNetNet4000Series.setStatus('current')
if mibBuilder.loadTexts: apNetNet4000Series.setDescription('This is subtree contains all product lines supported in\n                 the Net-Net 4000 Series product line.')
apNetNet4250 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 1, 1))
if mibBuilder.loadTexts: apNetNet4250.setStatus('current')
if mibBuilder.loadTexts: apNetNet4250.setDescription('The Net-Net 4250 product.')
apNetNet4500 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 1, 2))
if mibBuilder.loadTexts: apNetNet4500.setStatus('current')
if mibBuilder.loadTexts: apNetNet4500.setDescription('The Net-Net 4500 product.')
apNetNet4600 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 1, 3))
if mibBuilder.loadTexts: apNetNet4600.setStatus('current')
if mibBuilder.loadTexts: apNetNet4600.setDescription('The Net-Net 4600 product.')
apNetNet4900 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 1, 4))
if mibBuilder.loadTexts: apNetNet4900.setStatus('current')
if mibBuilder.loadTexts: apNetNet4900.setDescription('The Net-Net 4900 product.')
apNetNet9000Series = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 2))
if mibBuilder.loadTexts: apNetNet9000Series.setStatus('current')
if mibBuilder.loadTexts: apNetNet9000Series.setDescription('This is subtree contains all product lines supported in\n                 the Net-Net 9000 Series product line.')
apNetNet9200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 2, 1))
if mibBuilder.loadTexts: apNetNet9200.setStatus('current')
if mibBuilder.loadTexts: apNetNet9200.setDescription('The Net-Net 9200 product.')
apNetNet3000Series = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 3))
if mibBuilder.loadTexts: apNetNet3000Series.setStatus('current')
if mibBuilder.loadTexts: apNetNet3000Series.setDescription('This is subtree contains all product lines supported in\n                 the Net-Net 3000 Series product line.')
apNetNet3800 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 3, 1))
if mibBuilder.loadTexts: apNetNet3800.setStatus('current')
if mibBuilder.loadTexts: apNetNet3800.setDescription('The Net-Net 3800 product.')
apNetNet3820 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 3, 2))
if mibBuilder.loadTexts: apNetNet3820.setStatus('current')
if mibBuilder.loadTexts: apNetNet3820.setDescription('The Net-Net 3820 product.')
apNetNet3900 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 3, 3))
if mibBuilder.loadTexts: apNetNet3900.setStatus('current')
if mibBuilder.loadTexts: apNetNet3900.setDescription('The Net-Net 3900 product.')
apNetNetOSSeries = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 4))
if mibBuilder.loadTexts: apNetNetOSSeries.setStatus('current')
if mibBuilder.loadTexts: apNetNetOSSeries.setDescription('This is subtree contains all product lines supported in\n                 the Net-Net OS Series product line.')
apNetNetOS = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 4, 1))
if mibBuilder.loadTexts: apNetNetOS.setStatus('current')
if mibBuilder.loadTexts: apNetNetOS.setDescription('The Net-Net OS running on third party hardware.')
apNetNetOSVM = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 4, 2))
if mibBuilder.loadTexts: apNetNetOSVM.setStatus('current')
if mibBuilder.loadTexts: apNetNetOSVM.setDescription('The Net-Net OS running in a virtual machine environment.')
apNetNet6000Series = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 5))
if mibBuilder.loadTexts: apNetNet6000Series.setStatus('current')
if mibBuilder.loadTexts: apNetNet6000Series.setDescription('This is subtree contains all product lines supported in\n                 the Net-Net 6000 Series product line.')
apNetNet6300 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 5, 1))
if mibBuilder.loadTexts: apNetNet6300.setStatus('current')
if mibBuilder.loadTexts: apNetNet6300.setDescription('The Net-Net 6300 product.')
apNetNet6100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 5, 2))
if mibBuilder.loadTexts: apNetNet6100.setStatus('current')
if mibBuilder.loadTexts: apNetNet6100.setDescription('The Net-Net 6100 product.')
apNetNet6350 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 5, 3))
if mibBuilder.loadTexts: apNetNet6350.setStatus('current')
if mibBuilder.loadTexts: apNetNet6350.setDescription('The Net-Net 6350 product.')
apNetNet1000Series = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 6))
if mibBuilder.loadTexts: apNetNet1000Series.setStatus('current')
if mibBuilder.loadTexts: apNetNet1000Series.setDescription('This is subtree contains all product lines supported in\n                 the Net-Net 1000 Series product line.')
apNetNet1100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9148, 1, 6, 1))
if mibBuilder.loadTexts: apNetNet1100.setStatus('current')
if mibBuilder.loadTexts: apNetNet1100.setDescription('The Net-Net 1100 product.')
mibBuilder.exportSymbols("ACMEPACKET-PRODUCTS", acmepacketProducts=acmepacketProducts, apNetNet4600=apNetNet4600, apNetNet9000Series=apNetNet9000Series, apNetNet1100=apNetNet1100, apNetNetOSSeries=apNetNetOSSeries, apNetNetOS=apNetNetOS, apNetNet6350=apNetNet6350, apNetNet3900=apNetNet3900, apNetNet9200=apNetNet9200, apNetNet4900=apNetNet4900, apNetNet4500=apNetNet4500, apNetNet4000Series=apNetNet4000Series, apNetNet6000Series=apNetNet6000Series, apNetNet6100=apNetNet6100, apNetNet3800=apNetNet3800, apNetNet6300=apNetNet6300, apNetNet1000Series=apNetNet1000Series, apNetNetOSVM=apNetNetOSVM, apNetNet4250=apNetNet4250, apNetNet3000Series=apNetNet3000Series, PYSNMP_MODULE_ID=acmepacketProducts, apNetNet3820=apNetNet3820)
