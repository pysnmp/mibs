#
# PySNMP MIB module JACQUES-650-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/jacques/JACQUES-650-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 16:00:16 2024
# On host fv-az1205-935 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
enterprises, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, Integer32, ModuleIdentity, ObjectIdentity, IpAddress, Counter64, iso, NotificationType, Counter32, Unsigned32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "Integer32", "ModuleIdentity", "ObjectIdentity", "IpAddress", "Counter64", "iso", "NotificationType", "Counter32", "Unsigned32", "Bits")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
jacquesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 49759))
jacquesMIB.setRevisions(('2017-03-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: jacquesMIB.setRevisionsDescriptions(('Initial version',))
if mibBuilder.loadTexts: jacquesMIB.setLastUpdated('201703260000Z')
if mibBuilder.loadTexts: jacquesMIB.setOrganization('Jacques Technologies')
if mibBuilder.loadTexts: jacquesMIB.setContactInfo('Postal: 268 Montague Road\r\n                          West End QLD\r\n                          Australia 4101\r\n                  Tel:    +61 07 3846 8400\r\n                  E-Mail: support@jacques.com.au')
if mibBuilder.loadTexts: jacquesMIB.setDescription('Jacques 650 System MIB module')
jacquesMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 1))
jacquesScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 2))
jacquesNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 3))
jacquesAppNotifyPrePrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 3, 0))
jacquesAppNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 3, 0, 0))
jacquesEndpointNotifyPrePrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 3, 1))
jacquesEndpointNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 3, 1, 0))
jacquesMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 1, 1))
jacquesMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 1, 2))
jacquesServerName = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jacquesServerName.setStatus('current')
if mibBuilder.loadTexts: jacquesServerName.setDescription('The name of this server')
jacquesAppUp = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 2), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesAppUp.setStatus('current')
if mibBuilder.loadTexts: jacquesAppUp.setDescription('A flag indicating whether an application is up or down.')
jacquesTag = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesTag.setStatus('current')
if mibBuilder.loadTexts: jacquesTag.setDescription('Unique identifier given to a particular endpoint device.\r\n         Usually the string form of a number')
jacquesEndpointOnline = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 4), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesEndpointOnline.setStatus('current')
if mibBuilder.loadTexts: jacquesEndpointOnline.setDescription('A flag indicating whether an endpoint is online.')
jacquesEndpointMode = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("remote", 2), ("isolate", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesEndpointMode.setStatus('current')
if mibBuilder.loadTexts: jacquesEndpointMode.setDescription('The mode of the endpoint.')
jacquesEndpointAlarmType = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesEndpointAlarmType.setStatus('current')
if mibBuilder.loadTexts: jacquesEndpointAlarmType.setDescription('The type of endpoint alarm.')
jacquesEndpointAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 7), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesEndpointAlarmState.setStatus('current')
if mibBuilder.loadTexts: jacquesEndpointAlarmState.setDescription('A flag indicating whether the endpoint alarm is set or reset.')
jacquesJccpserverUpNotify = NotificationType((1, 3, 6, 1, 4, 1, 49759, 3, 0, 0, 1)).setObjects(("JACQUES-650-MIB", "jacquesAppUp"), ("JACQUES-650-MIB", "jacquesServerName"))
if mibBuilder.loadTexts: jacquesJccpserverUpNotify.setStatus('current')
if mibBuilder.loadTexts: jacquesJccpserverUpNotify.setDescription('Notification that the jccpserver application is up/down.')
jacquesEndpointOnlineNotify = NotificationType((1, 3, 6, 1, 4, 1, 49759, 3, 1, 0, 1)).setObjects(("JACQUES-650-MIB", "jacquesTag"), ("JACQUES-650-MIB", "jacquesEndpointOnline"))
if mibBuilder.loadTexts: jacquesEndpointOnlineNotify.setStatus('current')
if mibBuilder.loadTexts: jacquesEndpointOnlineNotify.setDescription('Notification that the endpoint online state has changed.')
jacquesEndpointModeNotify = NotificationType((1, 3, 6, 1, 4, 1, 49759, 3, 1, 0, 2)).setObjects(("JACQUES-650-MIB", "jacquesTag"), ("JACQUES-650-MIB", "jacquesEndpointMode"))
if mibBuilder.loadTexts: jacquesEndpointModeNotify.setStatus('current')
if mibBuilder.loadTexts: jacquesEndpointModeNotify.setDescription('Notification that the endpoint mode has changed.')
jacquesEndpointAlarmNotify = NotificationType((1, 3, 6, 1, 4, 1, 49759, 3, 1, 0, 3)).setObjects(("JACQUES-650-MIB", "jacquesTag"), ("JACQUES-650-MIB", "jacquesEndpointAlarmType"))
if mibBuilder.loadTexts: jacquesEndpointAlarmNotify.setStatus('current')
if mibBuilder.loadTexts: jacquesEndpointAlarmNotify.setDescription('Notification that an endpoint alarm has set or reset.')
jacquesMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 49759, 1, 1, 1)).setObjects(("JACQUES-650-MIB", "jacquesServerGroup"), ("JACQUES-650-MIB", "jacquesEndpointGroup"), ("JACQUES-650-MIB", "jacquesServerNotifyGroup"), ("JACQUES-650-MIB", "jacquesEndpointNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jacquesMIBCompliance = jacquesMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: jacquesMIBCompliance.setDescription('The requirements for conformance to the Jacques 650 MIB.')
jacquesServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 49759, 1, 2, 1)).setObjects(("JACQUES-650-MIB", "jacquesAppUp"), ("JACQUES-650-MIB", "jacquesServerName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jacquesServerGroup = jacquesServerGroup.setStatus('current')
if mibBuilder.loadTexts: jacquesServerGroup.setDescription('The Jacques 650 System Server Group')
jacquesEndpointGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 49759, 1, 2, 2)).setObjects(("JACQUES-650-MIB", "jacquesTag"), ("JACQUES-650-MIB", "jacquesEndpointOnline"), ("JACQUES-650-MIB", "jacquesEndpointMode"), ("JACQUES-650-MIB", "jacquesEndpointAlarmType"), ("JACQUES-650-MIB", "jacquesEndpointAlarmState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jacquesEndpointGroup = jacquesEndpointGroup.setStatus('current')
if mibBuilder.loadTexts: jacquesEndpointGroup.setDescription('The Jacques 650 System Endpoint Group')
jacquesServerNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 49759, 1, 2, 3)).setObjects(("JACQUES-650-MIB", "jacquesJccpserverUpNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jacquesServerNotifyGroup = jacquesServerNotifyGroup.setStatus('current')
if mibBuilder.loadTexts: jacquesServerNotifyGroup.setDescription('The Jacques 650 System Server Notifications Group')
jacquesEndpointNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 49759, 1, 2, 4)).setObjects(("JACQUES-650-MIB", "jacquesEndpointOnlineNotify"), ("JACQUES-650-MIB", "jacquesEndpointModeNotify"), ("JACQUES-650-MIB", "jacquesEndpointAlarmNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jacquesEndpointNotifyGroup = jacquesEndpointNotifyGroup.setStatus('current')
if mibBuilder.loadTexts: jacquesEndpointNotifyGroup.setDescription('The Jacques 650 System Endpoint Notifications Group')
mibBuilder.exportSymbols("JACQUES-650-MIB", jacquesEndpointMode=jacquesEndpointMode, jacquesMIBCompliances=jacquesMIBCompliances, jacquesEndpointOnlineNotify=jacquesEndpointOnlineNotify, jacquesTag=jacquesTag, jacquesServerName=jacquesServerName, jacquesMIBCompliance=jacquesMIBCompliance, jacquesEndpointNotifyPrefix=jacquesEndpointNotifyPrefix, jacquesAppNotifyPrefix=jacquesAppNotifyPrefix, jacquesScalars=jacquesScalars, jacquesMIB=jacquesMIB, jacquesEndpointAlarmType=jacquesEndpointAlarmType, jacquesMIBConformance=jacquesMIBConformance, jacquesAppUp=jacquesAppUp, PYSNMP_MODULE_ID=jacquesMIB, jacquesEndpointGroup=jacquesEndpointGroup, jacquesJccpserverUpNotify=jacquesJccpserverUpNotify, jacquesServerNotifyGroup=jacquesServerNotifyGroup, jacquesMIBGroups=jacquesMIBGroups, jacquesEndpointOnline=jacquesEndpointOnline, jacquesEndpointNotifyGroup=jacquesEndpointNotifyGroup, jacquesNotify=jacquesNotify, jacquesEndpointAlarmState=jacquesEndpointAlarmState, jacquesEndpointAlarmNotify=jacquesEndpointAlarmNotify, jacquesAppNotifyPrePrefix=jacquesAppNotifyPrePrefix, jacquesEndpointModeNotify=jacquesEndpointModeNotify, jacquesServerGroup=jacquesServerGroup, jacquesEndpointNotifyPrePrefix=jacquesEndpointNotifyPrePrefix)
