#
# PySNMP MIB module AT-ATMF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/allied/AT-ATMF-MIB
# Produced by pysmi-1.1.12 at Wed May 29 07:58:04 2024
# On host fv-az1024-251 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
DisplayStringUnsized, modules = mibBuilder.importSymbols("AT-SMI-MIB", "DisplayStringUnsized", "modules")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, MibIdentifier, ObjectIdentity, Counter64, Counter32, iso, NotificationType, Gauge32, Unsigned32, Bits, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "MibIdentifier", "ObjectIdentity", "Counter64", "Counter32", "iso", "NotificationType", "Gauge32", "Unsigned32", "Bits", "IpAddress", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atmf = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603))
atmf.setRevisions(('2014-10-07 12:00', '2014-07-04 12:00', '2014-05-07 12:00', '2013-07-15 12:00', '2013-05-27 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: atmf.setRevisionsDescriptions(('This MIB file is enhanced to incorporate the new controller\n            module trap - atAtmfControllerAreaRemoteBackupStatusTrap.', 'This MIB file is updated to incorporate the definitions of managed\n            objects for the ATMF controller module.', 'Enhance the atAtmfRemoteBackupStatusTrap to include the\n            atAtmfTrapRemoteBackupServerId field.', 'Add atAtmfTrapRemoteServersAvailable.\n             Add trap and trap variable definitions.', 'Initial Revision',))
if mibBuilder.loadTexts: atmf.setLastUpdated('201410071200Z')
if mibBuilder.loadTexts: atmf.setOrganization('Allied Telesis, Inc')
if mibBuilder.loadTexts: atmf.setContactInfo('http://www.alliedtelesis.com')
if mibBuilder.loadTexts: atmf.setDescription('This MIB file contains definitions of managed objects for the\n            ATMF module.')
atAtmfTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 0))
atAtmfBackupStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 0, 1)).setObjects(("AT-ATMF-MIB", "atAtmfTrapNodeName"), ("AT-ATMF-MIB", "atAtmfTrapMasterNodeName"), ("AT-ATMF-MIB", "atAtmfTrapBackupStatus"))
if mibBuilder.loadTexts: atAtmfBackupStatusTrap.setStatus('current')
if mibBuilder.loadTexts: atAtmfBackupStatusTrap.setDescription('This trap is generated when an ATMF master attempts to perform a backup of a\n         nodes FLASH contents.  Nominally, it states that the backup of an individual\n         node or all nodes to a master node has <failed|passed>.')
atAtmfNodeStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 0, 2)).setObjects(("AT-ATMF-MIB", "atAtmfTrapNodeName"), ("AT-ATMF-MIB", "atAtmfTrapNodeStatusChange"), ("AT-ATMF-MIB", "atAtmfTrapNetworkName"))
if mibBuilder.loadTexts: atAtmfNodeStatusChangeTrap.setStatus('current')
if mibBuilder.loadTexts: atAtmfNodeStatusChangeTrap.setDescription('This trap is generated when an ATMF node joins or leaves the ATMF network.\n         Nominally, it states that a node has <left|joined> an ATMF network.')
atAtmfNodeRecoveryTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 0, 3)).setObjects(("AT-ATMF-MIB", "atAtmfTrapNodeName"), ("AT-ATMF-MIB", "atAtmfTrapMasterNodeName"), ("AT-ATMF-MIB", "atAtmfTrapNodeRecoveryStatus"))
if mibBuilder.loadTexts: atAtmfNodeRecoveryTrap.setStatus('current')
if mibBuilder.loadTexts: atAtmfNodeRecoveryTrap.setDescription('This trap is generated when an attempt has been made to recover an ATMF\n         node. Nominally, it states that an attempt has been made to recover a\n         node from the specified master with the status of <passed|failed>.')
atAtmfInterfaceStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 0, 4)).setObjects(("AT-ATMF-MIB", "atAtmfTrapNodeName"), ("AT-ATMF-MIB", "atAtmfTrapInterfaceName"), ("AT-ATMF-MIB", "atAtmfTrapInterfaceStatusChange"))
if mibBuilder.loadTexts: atAtmfInterfaceStatusChangeTrap.setStatus('current')
if mibBuilder.loadTexts: atAtmfInterfaceStatusChangeTrap.setDescription('This trap is generated when an ATMF interface status change has occurred.\n         Nominally, it states that an interface on a node has changed status to\n         <blocking|forwarding>.')
atAtmfExternalMediaLowMemoryTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 0, 5)).setObjects(("AT-ATMF-MIB", "atAtmfTrapMasterNodeName"), ("AT-ATMF-MIB", "atAtmfTrapMediaType"), ("AT-ATMF-MIB", "atAtmfTrapMediaTotal"), ("AT-ATMF-MIB", "atAtmfTrapMediaFree"))
if mibBuilder.loadTexts: atAtmfExternalMediaLowMemoryTrap.setStatus('current')
if mibBuilder.loadTexts: atAtmfExternalMediaLowMemoryTrap.setDescription('This trap is generated when the available external storage on the ATMF master\n         node falls below a nominated threshold.  Nominally, it states that the external\n         <usb|sd> storage on a master node has fallen below the designated threshold and\n         specifies the total available memory <xxx MB> and the total free memory <xxx MB>.')
atAtmfRollingRebootCompleteTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 0, 6)).setObjects(("AT-ATMF-MIB", "atAtmfTrapNodeName"), ("AT-ATMF-MIB", "atAtmfTrapRollingRebootStatus"))
if mibBuilder.loadTexts: atAtmfRollingRebootCompleteTrap.setStatus('current')
if mibBuilder.loadTexts: atAtmfRollingRebootCompleteTrap.setDescription('This trap is generated when the ATMF rolling reboot process has finished\n         on a particular ATMF node.  Nominally, it states that the ATMF rolling reboot,\n         executed against the specified node, has returned a reboot status of\n         <failed|passed>.')
atAtmfRollingRebootReleaseCompleteTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 0, 7)).setObjects(("AT-ATMF-MIB", "atAtmfTrapNodeName"), ("AT-ATMF-MIB", "atAtmfTrapRollingRebootStatus"), ("AT-ATMF-MIB", "atAtmfTrapRollingRebootReleaseName"), ("AT-ATMF-MIB", "atAtmfTrapRollingRebootReleaseStatus"))
if mibBuilder.loadTexts: atAtmfRollingRebootReleaseCompleteTrap.setStatus('current')
if mibBuilder.loadTexts: atAtmfRollingRebootReleaseCompleteTrap.setDescription('This trap is generated when the ATMF rolling reboot process attempts to push a new\n         software release to a specified ATMF node.  Nominally, it states that the ATMF\n         rolling reboot release process, executed from the specified node has returned a\n         reboot status of <failed|passed>, the name of the attempted release file and\n         the release status of <failed|passed>.')
atAtmfRemoteBackupStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 0, 8)).setObjects(("AT-ATMF-MIB", "atAtmfTrapNodeName"), ("AT-ATMF-MIB", "atAtmfTrapRemoteBackupServerId"), ("AT-ATMF-MIB", "atAtmfTrapRemoteBackupServerName"), ("AT-ATMF-MIB", "atAtmfTrapRemoteServerStatus"), ("AT-ATMF-MIB", "atAtmfTrapRemoteServersAvailable"))
if mibBuilder.loadTexts: atAtmfRemoteBackupStatusTrap.setStatus('current')
if mibBuilder.loadTexts: atAtmfRemoteBackupStatusTrap.setDescription('This trap is generated when an ATMF remote backup server availability state changes.\n         Nominally, it states whether a remote backup server is <unavailable|available> and\n         the number of remote backup servers available.')
atAtmfControllerAreaStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 0, 9)).setObjects(("AT-ATMF-MIB", "atAtmfTrapNodeName"), ("AT-ATMF-MIB", "atAtmfControllerAreaName"), ("AT-ATMF-MIB", "atAtmfControllerAreaStatus"))
if mibBuilder.loadTexts: atAtmfControllerAreaStatusChangeTrap.setStatus('current')
if mibBuilder.loadTexts: atAtmfControllerAreaStatusChangeTrap.setDescription('This trap is generated when an ATMF controller area reachability state changes.\n         Nominally, it states whether an ATMF controller area is <unreachable|reachable>.')
atAtmfControllerAreaRemoteBackupStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 0, 10)).setObjects(("AT-ATMF-MIB", "atAtmfTrapNodeName"), ("AT-ATMF-MIB", "atAtmfControllerAreaName"), ("AT-ATMF-MIB", "atAtmfTrapMasterNodeName"), ("AT-ATMF-MIB", "atAtmfTrapBackupStatus"))
if mibBuilder.loadTexts: atAtmfControllerAreaRemoteBackupStatusTrap.setStatus('current')
if mibBuilder.loadTexts: atAtmfControllerAreaRemoteBackupStatusTrap.setDescription("This trap is generated when an ATMF controller attempts to perform a backup of a\n        remote area local master's FLASH contents.  Nominally, it states that the backup\n        of an individual local master, all area local masters in a specified area or all\n        local area master's in all areas has <failed|passed>.")
atAtmfTrapVariable = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1))
atAtmfTrapNodeName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 1), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapNodeName.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapNodeName.setDescription('The ATMF node name.')
atAtmfTrapMasterNodeName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 2), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapMasterNodeName.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapMasterNodeName.setDescription('The ATMF master node name.')
atAtmfTrapNetworkName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 3), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapNetworkName.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapNetworkName.setDescription('The ATMF network name.')
atAtmfTrapInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 4), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapInterfaceName.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapInterfaceName.setDescription('The ATMF interface name.')
atAtmfTrapBackupStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("failed", 1), ("passed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapBackupStatus.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapBackupStatus.setDescription('The status of the last backup attempt on either a specified ATMF node or all\n         nodes in the ATMF network.')
atAtmfTrapNodeStatusChange = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("left", 1), ("joined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapNodeStatusChange.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapNodeStatusChange.setDescription('An ATMF node has changed status in the ATMF network.')
atAtmfTrapInterfaceStatusChange = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("blocking", 1), ("forwarding", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapInterfaceStatusChange.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapInterfaceStatusChange.setDescription('An ATMF interface has changed status.')
atAtmfTrapNodeRecoveryStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("failed", 1), ("passed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapNodeRecoveryStatus.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapNodeRecoveryStatus.setDescription('The status of the last recovery attempt.')
atAtmfTrapMediaType = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 9), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapMediaType.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapMediaType.setDescription('The media type configured on the ATMF node - USB, SD or FS.')
atAtmfTrapMediaTotal = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapMediaTotal.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapMediaTotal.setDescription('The total memory available on the resident media, in MB.')
atAtmfTrapMediaFree = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapMediaFree.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapMediaFree.setDescription('The free memory available on the resident media, in MB. Each\n         node has a maximum flash of 64MB.')
atAtmfTrapRollingRebootStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("failed", 1), ("passed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapRollingRebootStatus.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapRollingRebootStatus.setDescription('The status of the last rolling reboot for a node.')
atAtmfTrapRollingRebootReleaseName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 13), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapRollingRebootReleaseName.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapRollingRebootReleaseName.setDescription('The name of the last rolling reboot release.')
atAtmfTrapRollingRebootReleaseStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("failed", 1), ("passed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapRollingRebootReleaseStatus.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapRollingRebootReleaseStatus.setDescription('The release update status of the last rolling reboot for a node.')
atAtmfTrapRemoteBackupServerId = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapRemoteBackupServerId.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapRemoteBackupServerId.setDescription('The ATMF remote backup server id.')
atAtmfTrapRemoteBackupServerName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 16), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapRemoteBackupServerName.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapRemoteBackupServerName.setDescription('The ATMF remote backup server name.')
atAtmfTrapRemoteServerStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unavailable", 1), ("available", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapRemoteServerStatus.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapRemoteServerStatus.setDescription('The current availablility of the remote backup server for a specified ATMF master node.')
atAtmfTrapRemoteServersAvailable = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfTrapRemoteServersAvailable.setStatus('current')
if mibBuilder.loadTexts: atAtmfTrapRemoteServersAvailable.setDescription('The number of currently available remote backup servers.')
atAtmfSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2))
atAtmfSummaryNodeName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2, 1), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfSummaryNodeName.setStatus('current')
if mibBuilder.loadTexts: atAtmfSummaryNodeName.setDescription('The name assigned to a particular node.')
atAtmfSummaryStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfSummaryStatus.setStatus('current')
if mibBuilder.loadTexts: atAtmfSummaryStatus.setDescription("The Node's ATMF status.")
atAtmfSummaryRole = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("member", 1), ("master", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfSummaryRole.setStatus('current')
if mibBuilder.loadTexts: atAtmfSummaryRole.setDescription('The role configured for this ATMF device, either Member or Master.')
atAtmfSummaryNetworkName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2, 4), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfSummaryNetworkName.setStatus('current')
if mibBuilder.loadTexts: atAtmfSummaryNetworkName.setDescription('The ATMF network that a particular node belongs to.')
atAtmfSummaryParentName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2, 5), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfSummaryParentName.setStatus('current')
if mibBuilder.loadTexts: atAtmfSummaryParentName.setDescription("The parent name of the node or 'none'.")
atAtmfSummaryCoreDistance = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfSummaryCoreDistance.setStatus('current')
if mibBuilder.loadTexts: atAtmfSummaryCoreDistance.setDescription('The ATMF core distance for this node.')
atAtmfSummaryDomainId = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfSummaryDomainId.setStatus('current')
if mibBuilder.loadTexts: atAtmfSummaryDomainId.setDescription('The ATMF domain Id for this node.')
atAtmfSummaryRestrictedLogin = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfSummaryRestrictedLogin.setStatus('current')
if mibBuilder.loadTexts: atAtmfSummaryRestrictedLogin.setDescription('The login for this ATMF device is restricted to only those devices\n         that are designated ATMF Masters.')
atAtmfSummaryNodes = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfSummaryNodes.setStatus('current')
if mibBuilder.loadTexts: atAtmfSummaryNodes.setDescription('The number ATMF nodes known to this device.')
atAtmfSummaryAreaName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2, 10), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfSummaryAreaName.setStatus('current')
if mibBuilder.loadTexts: atAtmfSummaryAreaName.setDescription('The ATMF default area configured for this ATMF device.')
atAtmfSummaryControllerRole = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("non-controller", 1), ("controller", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfSummaryControllerRole.setStatus('current')
if mibBuilder.loadTexts: atAtmfSummaryControllerRole.setDescription('The controller role configured for this ATMF device, either Non-controller or\n         Controller.')
atAtmfNodeTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 3), )
if mibBuilder.loadTexts: atAtmfNodeTable.setStatus('current')
if mibBuilder.loadTexts: atAtmfNodeTable.setDescription('ATMF Node Entry.')
atAtmfNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 3, 1), ).setIndexNames((0, "AT-ATMF-MIB", "atAtmfNodeName"))
if mibBuilder.loadTexts: atAtmfNodeEntry.setStatus('current')
if mibBuilder.loadTexts: atAtmfNodeEntry.setDescription('ATMF Node Entry.')
atAtmfNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 3, 1, 1), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfNodeName.setStatus('current')
if mibBuilder.loadTexts: atAtmfNodeName.setDescription('The name assigned to a particular node.')
atAtmfControllerAreaTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 4), )
if mibBuilder.loadTexts: atAtmfControllerAreaTable.setStatus('current')
if mibBuilder.loadTexts: atAtmfControllerAreaTable.setDescription('The configured areas available to the ATMF controller.')
atAtmfControllerAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 4, 1), ).setIndexNames((0, "AT-ATMF-MIB", "atAtmfControllerAreaId"))
if mibBuilder.loadTexts: atAtmfControllerAreaEntry.setStatus('current')
if mibBuilder.loadTexts: atAtmfControllerAreaEntry.setDescription('ATMF controller entry.')
atAtmfControllerAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfControllerAreaId.setStatus('current')
if mibBuilder.loadTexts: atAtmfControllerAreaId.setDescription('The area identifier assigned to a particular controller area.')
atAtmfControllerAreaName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 4, 1, 2), DisplayStringUnsized().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfControllerAreaName.setStatus('current')
if mibBuilder.loadTexts: atAtmfControllerAreaName.setDescription('The name assigned to a particular controller area.')
atAtmfControllerAreaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unreachable", 1), ("reachable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfControllerAreaStatus.setStatus('current')
if mibBuilder.loadTexts: atAtmfControllerAreaStatus.setDescription('The reachability status of a particular controller area.')
atAtmfControllerAreaMemberCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 603, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtmfControllerAreaMemberCount.setStatus('current')
if mibBuilder.loadTexts: atAtmfControllerAreaMemberCount.setDescription('The number of member nodes available in a particular controller area.')
mibBuilder.exportSymbols("AT-ATMF-MIB", atAtmfControllerAreaMemberCount=atAtmfControllerAreaMemberCount, atAtmfSummaryNodeName=atAtmfSummaryNodeName, atAtmfSummaryRole=atAtmfSummaryRole, atAtmfRollingRebootCompleteTrap=atAtmfRollingRebootCompleteTrap, atAtmfTrapInterfaceName=atAtmfTrapInterfaceName, atAtmfTrapMasterNodeName=atAtmfTrapMasterNodeName, atAtmfTrapNetworkName=atAtmfTrapNetworkName, atAtmfControllerAreaId=atAtmfControllerAreaId, atAtmfNodeStatusChangeTrap=atAtmfNodeStatusChangeTrap, atAtmfTrapRemoteServersAvailable=atAtmfTrapRemoteServersAvailable, atAtmfSummaryRestrictedLogin=atAtmfSummaryRestrictedLogin, atAtmfTrapRemoteBackupServerId=atAtmfTrapRemoteBackupServerId, atAtmfSummaryAreaName=atAtmfSummaryAreaName, atAtmfNodeTable=atAtmfNodeTable, atAtmfTrapVariable=atAtmfTrapVariable, atAtmfSummaryStatus=atAtmfSummaryStatus, atAtmfTrapRollingRebootReleaseName=atAtmfTrapRollingRebootReleaseName, atAtmfTrapRemoteBackupServerName=atAtmfTrapRemoteBackupServerName, atAtmfTrapRollingRebootReleaseStatus=atAtmfTrapRollingRebootReleaseStatus, atAtmfTraps=atAtmfTraps, atAtmfSummaryCoreDistance=atAtmfSummaryCoreDistance, atAtmfControllerAreaName=atAtmfControllerAreaName, atAtmfTrapMediaType=atAtmfTrapMediaType, atAtmfSummaryDomainId=atAtmfSummaryDomainId, atAtmfNodeName=atAtmfNodeName, atAtmfSummaryNodes=atAtmfSummaryNodes, atAtmfTrapNodeStatusChange=atAtmfTrapNodeStatusChange, atAtmfSummaryControllerRole=atAtmfSummaryControllerRole, atAtmfControllerAreaStatus=atAtmfControllerAreaStatus, atAtmfControllerAreaRemoteBackupStatusTrap=atAtmfControllerAreaRemoteBackupStatusTrap, atAtmfTrapNodeName=atAtmfTrapNodeName, atAtmfTrapMediaTotal=atAtmfTrapMediaTotal, atAtmfTrapMediaFree=atAtmfTrapMediaFree, atmf=atmf, atAtmfControllerAreaEntry=atAtmfControllerAreaEntry, atAtmfRollingRebootReleaseCompleteTrap=atAtmfRollingRebootReleaseCompleteTrap, atAtmfTrapRollingRebootStatus=atAtmfTrapRollingRebootStatus, atAtmfTrapInterfaceStatusChange=atAtmfTrapInterfaceStatusChange, atAtmfSummaryParentName=atAtmfSummaryParentName, PYSNMP_MODULE_ID=atmf, atAtmfTrapRemoteServerStatus=atAtmfTrapRemoteServerStatus, atAtmfControllerAreaTable=atAtmfControllerAreaTable, atAtmfSummary=atAtmfSummary, atAtmfNodeRecoveryTrap=atAtmfNodeRecoveryTrap, atAtmfRemoteBackupStatusTrap=atAtmfRemoteBackupStatusTrap, atAtmfControllerAreaStatusChangeTrap=atAtmfControllerAreaStatusChangeTrap, atAtmfTrapNodeRecoveryStatus=atAtmfTrapNodeRecoveryStatus, atAtmfInterfaceStatusChangeTrap=atAtmfInterfaceStatusChangeTrap, atAtmfTrapBackupStatus=atAtmfTrapBackupStatus, atAtmfBackupStatusTrap=atAtmfBackupStatusTrap, atAtmfSummaryNetworkName=atAtmfSummaryNetworkName, atAtmfExternalMediaLowMemoryTrap=atAtmfExternalMediaLowMemoryTrap, atAtmfNodeEntry=atAtmfNodeEntry)
