#
# PySNMP MIB module APSLB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/oracle/APSLB-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 13:35:10 2024
# On host fv-az975-559 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
acmepacketMgmt, = mibBuilder.importSymbols("ACMEPACKET-SMI", "acmepacketMgmt")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
InetAddress, InetAddressPrefixLength, InetVersion, InetZoneIndex, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetVersion", "InetZoneIndex", "InetAddressType")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter64, MibIdentifier, IpAddress, Bits, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter32, Integer32, iso, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "MibIdentifier", "IpAddress", "Bits", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter32", "Integer32", "iso", "TimeTicks", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
apSLBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9148, 3, 11))
apSLBModule.setRevisions(('2014-06-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: apSLBModule.setRevisionsDescriptions(('Updated Organization and Contact info.',))
if mibBuilder.loadTexts: apSLBModule.setLastUpdated('201406260000Z')
if mibBuilder.loadTexts: apSLBModule.setOrganization('Oracle Communications')
if mibBuilder.loadTexts: apSLBModule.setContactInfo('           \tCustomer Service\n\t\t \tPostal:\t\tOracle Communications\n\t\t\t\t\t100 Crosby Drive \n\t\t\t\t\tBedford, MA 01730\n\t\t\t\t\tUS\n\t\t    \tTel:\t\t1-800-633-0738\n\t\t\tUrl:\t\twww.oracle.com\n\t\t \tE-mail:\t\tsupport@oracle.com')
if mibBuilder.loadTexts: apSLBModule.setDescription('The Session Load Balancer MIB for Oracle Communications Acme Packet SBCs')
apSLBMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1))
apSLBNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 2))
apSLBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3))
apSLBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4))
apSLBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3, 0))
apSLBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 1))
apSLBNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 2))
apSLBMIBGeneralObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1))
apSLBStatsEndpointsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 1), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsEndpointsCurrent.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsEndpointsCurrent.setDescription('Number of endpoints currently on the SLB.')
apSLBStatsEndpointsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 2), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsEndpointsDenied.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsEndpointsDenied.setDescription('Number of endpoints denied by the SLB because the\n                system has reached the maximum endpoint capacity.')
apSLBEndpointCapacity = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 3), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBEndpointCapacity.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacity.setDescription('The maximum number of endpoints allowed on the SLB.  \n                This value is based on the installed SLB license(s).')
apSLBEndpointCapacityUpperThresh = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBEndpointCapacityUpperThresh.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityUpperThresh.setDescription('The configured endpoint capacity upper threshold percentage.')
apSLBEndpointCapacityLowerThresh = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBEndpointCapacityLowerThresh.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityLowerThresh.setDescription('The configured endpoint capacity lower threshold percentage.')
apSLBStatsUntrustedEndpointsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 6), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsCurrent.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsCurrent.setDescription('Number of untrusted endpoints currently on the SLB.')
apSLBStatsTrustedEndpointsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 7), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsTrustedEndpointsCurrent.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsTrustedEndpointsCurrent.setDescription('Number of trusted endpoints currently on the SLB.')
apSLBStatsUntrustedEndpointsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 8), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsDenied.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsDenied.setDescription('The number of untrusted endpoints denied by the SLB due\n                to the total number of untrusted endpoints exceeding the\n                configured maximum allowed.')
apSLBStatsUntrustedEndpointsAgedOut = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 9), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsAgedOut.setStatus('current')
if mibBuilder.loadTexts: apSLBStatsUntrustedEndpointsAgedOut.setDescription('The number of untrusted endpoints aged out of the\n                system because they were not authenticated within the\n                configured grace period.')
apSLBUntrustedEndpointCapacity = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 10), Unsigned32()).setUnits('endpoints').setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacity.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacity.setDescription('The maximum number of untrusted endpoints allowed on the SLB.  \n                This value is a configured percentage of the maximum endpoint\n                capacity of the system.')
apSLBUntrustedEndpointCapacityUpperThresh = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityUpperThresh.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityUpperThresh.setDescription('The configured untrusted endpoint capacity upper threshold\n                percentage.')
apSLBUntrustedEndpointCapacityLowerThresh = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 11, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityLowerThresh.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityLowerThresh.setDescription('The configured untrusted endpoint capacity lower threshold\n                percentage.')
apSLBEndpointCapacityThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3, 0, 1)).setObjects(("APSLB-MIB", "apSLBStatsEndpointsCurrent"), ("APSLB-MIB", "apSLBEndpointCapacity"), ("APSLB-MIB", "apSLBEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBEndpointCapacityLowerThresh"))
if mibBuilder.loadTexts: apSLBEndpointCapacityThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityThresholdTrap.setDescription('The trap will be generated when the number of endpoints on the SLB \n\t    exceeds the configured threshold.')
apSLBEndpointCapacityThresholdClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3, 0, 2)).setObjects(("APSLB-MIB", "apSLBStatsEndpointsCurrent"), ("APSLB-MIB", "apSLBEndpointCapacity"), ("APSLB-MIB", "apSLBEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBEndpointCapacityLowerThresh"))
if mibBuilder.loadTexts: apSLBEndpointCapacityThresholdClearTrap.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityThresholdClearTrap.setDescription('The trap will be generated when the number of endpoints on the SLB \n\t    falls below the configured threshold.')
apSLBUntrustedEndpointCapacityThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3, 0, 3)).setObjects(("APSLB-MIB", "apSLBStatsUntrustedEndpointsCurrent"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsDenied"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsAgedOut"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacity"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityLowerThresh"))
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityThresholdTrap.setDescription('The trap will be generated when the number of untrusted endpoints\n        on the SLB exceeds the configured threshold.')
apSLBUntrustedEndpointCapacityThresholdClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 11, 3, 0, 4)).setObjects(("APSLB-MIB", "apSLBStatsUntrustedEndpointsCurrent"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsDenied"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsAgedOut"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacity"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityLowerThresh"))
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityThresholdClearTrap.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityThresholdClearTrap.setDescription('The trap will be generated when the number of untrusted endpoints \n        on the SLB falls below the configured threshold.')
apSLBEndpointCapacityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 1, 1)).setObjects(("APSLB-MIB", "apSLBStatsEndpointsCurrent"), ("APSLB-MIB", "apSLBStatsEndpointsDenied"), ("APSLB-MIB", "apSLBEndpointCapacity"), ("APSLB-MIB", "apSLBEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBEndpointCapacityLowerThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apSLBEndpointCapacityGroup = apSLBEndpointCapacityGroup.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityGroup.setDescription('Objects for monitoring SLB endpoint capacity.')
apSLBUntrustedEndpointCapacityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 1, 2)).setObjects(("APSLB-MIB", "apSLBStatsUntrustedEndpointsCurrent"), ("APSLB-MIB", "apSLBStatsTrustedEndpointsCurrent"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsDenied"), ("APSLB-MIB", "apSLBStatsUntrustedEndpointsAgedOut"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacity"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityUpperThresh"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityLowerThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apSLBUntrustedEndpointCapacityGroup = apSLBUntrustedEndpointCapacityGroup.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityGroup.setDescription('Objects for monitoring SLB untrusted endpoint capacity.')
apSLBEndpointCapacityNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 2, 1)).setObjects(("APSLB-MIB", "apSLBEndpointCapacityThresholdTrap"), ("APSLB-MIB", "apSLBEndpointCapacityThresholdClearTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apSLBEndpointCapacityNotificationsGroup = apSLBEndpointCapacityNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: apSLBEndpointCapacityNotificationsGroup.setDescription('Traps to monitor SLB endpoint capacity threshold crossings.')
apSLBUntrustedEndpointCapacityNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 11, 4, 2, 2)).setObjects(("APSLB-MIB", "apSLBUntrustedEndpointCapacityThresholdTrap"), ("APSLB-MIB", "apSLBUntrustedEndpointCapacityThresholdClearTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apSLBUntrustedEndpointCapacityNotificationsGroup = apSLBUntrustedEndpointCapacityNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: apSLBUntrustedEndpointCapacityNotificationsGroup.setDescription('Traps to monitor SLB untrusted endpoint capacity threshold crossings.')
mibBuilder.exportSymbols("APSLB-MIB", apSLBNotifications=apSLBNotifications, apSLBUntrustedEndpointCapacityNotificationsGroup=apSLBUntrustedEndpointCapacityNotificationsGroup, apSLBEndpointCapacityGroup=apSLBEndpointCapacityGroup, apSLBStatsUntrustedEndpointsAgedOut=apSLBStatsUntrustedEndpointsAgedOut, apSLBNotificationObjects=apSLBNotificationObjects, apSLBEndpointCapacity=apSLBEndpointCapacity, apSLBStatsUntrustedEndpointsDenied=apSLBStatsUntrustedEndpointsDenied, apSLBStatsEndpointsDenied=apSLBStatsEndpointsDenied, apSLBNotificationPrefix=apSLBNotificationPrefix, apSLBConformance=apSLBConformance, apSLBUntrustedEndpointCapacity=apSLBUntrustedEndpointCapacity, apSLBEndpointCapacityNotificationsGroup=apSLBEndpointCapacityNotificationsGroup, apSLBGroups=apSLBGroups, apSLBStatsEndpointsCurrent=apSLBStatsEndpointsCurrent, apSLBUntrustedEndpointCapacityLowerThresh=apSLBUntrustedEndpointCapacityLowerThresh, apSLBModule=apSLBModule, apSLBEndpointCapacityUpperThresh=apSLBEndpointCapacityUpperThresh, apSLBStatsUntrustedEndpointsCurrent=apSLBStatsUntrustedEndpointsCurrent, apSLBUntrustedEndpointCapacityThresholdClearTrap=apSLBUntrustedEndpointCapacityThresholdClearTrap, apSLBUntrustedEndpointCapacityGroup=apSLBUntrustedEndpointCapacityGroup, apSLBEndpointCapacityLowerThresh=apSLBEndpointCapacityLowerThresh, apSLBEndpointCapacityThresholdClearTrap=apSLBEndpointCapacityThresholdClearTrap, apSLBUntrustedEndpointCapacityUpperThresh=apSLBUntrustedEndpointCapacityUpperThresh, PYSNMP_MODULE_ID=apSLBModule, apSLBNotificationGroups=apSLBNotificationGroups, apSLBMIBObjects=apSLBMIBObjects, apSLBStatsTrustedEndpointsCurrent=apSLBStatsTrustedEndpointsCurrent, apSLBEndpointCapacityThresholdTrap=apSLBEndpointCapacityThresholdTrap, apSLBUntrustedEndpointCapacityThresholdTrap=apSLBUntrustedEndpointCapacityThresholdTrap, apSLBMIBGeneralObjects=apSLBMIBGeneralObjects)
