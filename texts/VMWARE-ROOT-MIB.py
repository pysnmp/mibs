#
# PySNMP MIB module VMWARE-ROOT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/vmware/VMWARE-ROOT-MIB
# Produced by pysmi-1.1.12 at Wed May 29 08:16:39 2024
# On host fv-az698-992 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ObjectIdentity, Gauge32, ModuleIdentity, Bits, Integer32, Counter64, NotificationType, Unsigned32, iso, IpAddress, TimeTicks, enterprises, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "Gauge32", "ModuleIdentity", "Bits", "Integer32", "Counter64", "NotificationType", "Unsigned32", "iso", "IpAddress", "TimeTicks", "enterprises", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vmware = ModuleIdentity((1, 3, 6, 1, 4, 1, 6876))
vmware.setRevisions(('2018-08-30 00:00', '2017-10-30 00:00', '2017-06-07 00:00', '2016-11-03 00:00', '2016-01-02 20:00', '2010-04-02 00:00', '2007-07-30 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: vmware.setRevisionsDescriptions(('Arc vmwPerAppTunnel defined.', 'Arc vmwNSXsys defined.', 'Arc vmwHCX defined.', 'Arc vmwNetworkInsight defined.', 'Arc vmwNsxManager defined.', 'Arc vmwDocumentation defined.', 'The initial revision. Prior version was released in\n                SMIv1 format as VMWARE-ROOT-MIB.',))
if mibBuilder.loadTexts: vmware.setLastUpdated('201808300000Z')
if mibBuilder.loadTexts: vmware.setOrganization('VMware, Inc')
if mibBuilder.loadTexts: vmware.setContactInfo('VMware, Inc\n                3401 Hillview Ave\n                Palo Alto, CA 94304\n                Tel: 1-877-486-9273 or 650-427-5000\n                Fax: 650-427-5001\n                Web: http://kb.vmware.com/kb/1013445\n                ')
if mibBuilder.loadTexts: vmware.setDescription('VMware managed object root assignements\n                This module defines the VMware SNMP MIB root\n                and its primary subtrees.\n               ')
vmwNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 0))
if mibBuilder.loadTexts: vmwNotifications.setStatus('current')
if mibBuilder.loadTexts: vmwNotifications.setDescription('Parent of all notifications (traps, informs).')
vmwSystem = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 1))
if mibBuilder.loadTexts: vmwSystem.setStatus('current')
if mibBuilder.loadTexts: vmwSystem.setDescription('Parent of all managed objects relating to system software identification.')
vmwVirtMachines = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 2))
if mibBuilder.loadTexts: vmwVirtMachines.setStatus('current')
if mibBuilder.loadTexts: vmwVirtMachines.setDescription('Parent of all managed objects relating to virtual machine inventory.')
vmwResources = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 3))
if mibBuilder.loadTexts: vmwResources.setStatus('current')
if mibBuilder.loadTexts: vmwResources.setDescription('Parent of all managed objects relating to resource utilization.')
vmwProductSpecific = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 4))
if mibBuilder.loadTexts: vmwProductSpecific.setStatus('current')
if mibBuilder.loadTexts: vmwProductSpecific.setDescription('parent of objects specific to a given hardware/software product.')
vmwLdap = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 40))
if mibBuilder.loadTexts: vmwLdap.setStatus('current')
if mibBuilder.loadTexts: vmwLdap.setDescription('VMware specific LDAP schema definitions.')
vmwTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 50))
if mibBuilder.loadTexts: vmwTraps.setStatus('current')
if mibBuilder.loadTexts: vmwTraps.setDescription('Managed objects defined under this node are only visible in\n     notifications varbind lists and can not be polled.')
vmwSRM = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 51))
if mibBuilder.loadTexts: vmwSRM.setStatus('current')
if mibBuilder.loadTexts: vmwSRM.setDescription('Managed objects defined under this node are only visible in\n     notifications from Site Recovery Manager and can not be polled.')
vmwVCHA = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 53))
if mibBuilder.loadTexts: vmwVCHA.setStatus('current')
if mibBuilder.loadTexts: vmwVCHA.setDescription('Managed objects defined under this node are only visible in\n     notifications from VMware Virtual Center High Availability and can not be polled.')
vmwVmon = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 55))
if mibBuilder.loadTexts: vmwVmon.setStatus('current')
if mibBuilder.loadTexts: vmwVmon.setDescription('Managed objects defined under this node are for VMware Service Lifecycle\n    Manager.')
vmwOID = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 60))
if mibBuilder.loadTexts: vmwOID.setStatus('deprecated')
if mibBuilder.loadTexts: vmwOID.setDescription('Assignments under this are no longer made.')
vmwareAgentCapabilities = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 70))
if mibBuilder.loadTexts: vmwareAgentCapabilities.setStatus('current')
if mibBuilder.loadTexts: vmwareAgentCapabilities.setDescription('All agent capabilities defnitions occur under this.')
vmwNsxManager = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 90))
if mibBuilder.loadTexts: vmwNsxManager.setStatus('current')
if mibBuilder.loadTexts: vmwNsxManager.setDescription('Objects used by VMware NSX Manager and related components.')
vmwNetworkInsight = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 100))
if mibBuilder.loadTexts: vmwNetworkInsight.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsight.setDescription('Objects used by VMware vRealize Network Insight and related components.')
vmwHCX = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 110))
if mibBuilder.loadTexts: vmwHCX.setStatus('current')
if mibBuilder.loadTexts: vmwHCX.setDescription('Objects used by VMware HCX appliance and related components.')
vmwNSXsys = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 120))
if mibBuilder.loadTexts: vmwNSXsys.setStatus('current')
if mibBuilder.loadTexts: vmwNSXsys.setDescription('Objects used by VMware NSX systems and related components.')
vmwPerAppTunnel = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 130))
if mibBuilder.loadTexts: vmwPerAppTunnel.setStatus('current')
if mibBuilder.loadTexts: vmwPerAppTunnel.setDescription('Objects used by VMware PerApp Tunnel and related components.')
vmwExperimental = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 700))
if mibBuilder.loadTexts: vmwExperimental.setStatus('current')
if mibBuilder.loadTexts: vmwExperimental.setDescription('Used for product testing and development.')
vmwDocumentation = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 750))
if mibBuilder.loadTexts: vmwDocumentation.setStatus('current')
if mibBuilder.loadTexts: vmwDocumentation.setDescription('Used in product documentation, examples.')
vmwObsolete = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 800))
if mibBuilder.loadTexts: vmwObsolete.setStatus('current')
if mibBuilder.loadTexts: vmwObsolete.setDescription('Conformance, meta SMI oids for Obsolete smi assignements done under this arc.')
mibBuilder.exportSymbols("VMWARE-ROOT-MIB", vmwVirtMachines=vmwVirtMachines, vmwNsxManager=vmwNsxManager, vmwVCHA=vmwVCHA, vmware=vmware, vmwVmon=vmwVmon, vmwResources=vmwResources, vmwProductSpecific=vmwProductSpecific, vmwNetworkInsight=vmwNetworkInsight, vmwHCX=vmwHCX, vmwNSXsys=vmwNSXsys, PYSNMP_MODULE_ID=vmware, vmwareAgentCapabilities=vmwareAgentCapabilities, vmwNotifications=vmwNotifications, vmwTraps=vmwTraps, vmwOID=vmwOID, vmwExperimental=vmwExperimental, vmwPerAppTunnel=vmwPerAppTunnel, vmwSystem=vmwSystem, vmwDocumentation=vmwDocumentation, vmwLdap=vmwLdap, vmwSRM=vmwSRM, vmwObsolete=vmwObsolete)
