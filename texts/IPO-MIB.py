#
# PySNMP MIB module IPO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/avaya/IPO-MIB.mib
# Produced by pysmi-1.1.12 at Fri Nov 22 15:55:10 2024
# On host fv-az1205-935 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
mibs, = mibBuilder.importSymbols("AVAYAGEN-MIB", "mibs")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ItuPerceivedSeverity, = mibBuilder.importSymbols("ITU-ALARM-TC-MIB", "ItuPerceivedSeverity")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
sysDescr, = mibBuilder.importSymbols("SNMPv2-MIB", "sysDescr")
Counter32, Integer32, IpAddress, MibIdentifier, NotificationType, Gauge32, ObjectIdentity, iso, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "IpAddress", "MibIdentifier", "NotificationType", "Gauge32", "ObjectIdentity", "iso", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "Counter64")
DateAndTime, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "DisplayString")
ipoMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6889, 2, 2))
ipoMIB.setRevisions(('2014-07-04 00:00', '2014-06-25 00:00', '2014-06-25 00:00', '2014-06-16 00:00', '2014-06-04 00:00', '2014-05-23 00:00', '2014-05-08 00:00', '2014-01-06 00:00', '2013-10-08 00:00', '2013-08-06 00:00', '2013-04-24 19:00', '2013-04-24 15:18', '2012-11-17 15:11', '2012-02-28 13:00', '2011-11-01 22:00', '2011-09-27 11:30', '2011-03-15 15:17', '2010-10-13 14:17', '2010-07-12 13:45', '2009-10-19 07:35', '2009-10-09 13:47', '2009-09-11 09:50', '2009-09-07 16:20', '2008-04-28 16:40', '2008-04-18 14:50', '2006-06-29 00:00', '2004-10-06 00:00', '2004-08-27 00:00', '2004-08-06 00:00', '2004-07-10 00:00', '2004-05-28 00:00', '2004-03-03 00:00', '2003-12-15 00:00', '2003-11-11 00:00', '2003-10-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ipoMIB.setRevisionsDescriptions(('Rev 2.00.25\n         Added new value serviceAMServerNotAvailable', 'Rev 2.00.24\n         Added new value serviceCCRNotSupported', 'Rev 2.00.23\n         Added new value serviceNonSelectAlarm', 'Rev 2.00.22\n         Added new values serviceGeneralAlarm and serviceSystemInfo', 'Rev 2.00.21\n         Added new value serviceIPDECTSystemError ', 'Rev 2.00.20\n         Added new value monitorLogStamped ', 'Rev 2.00.19\n         Added new values trunkSIPDNSInvalidConfig and trunkSIPDNSTransportError ', 'Rev 2.00.18\n         Added oneXPortal values for ipoGTEventAppEntity', 'Rev 2.00.17\n         Added new values serviceSystemHardDriveAlarm and serviceAdditionalHardDriveAlarm ', 'Rev 2.00.16\n        Added new values of serviceACCSAlarm for\n        ipoGTEventReason object', 'Rev 2.00.15\n        Added new values for ipoGTEventReason object\n        serviceCpuAlarm, serviceCpuIOAlarm, serviceMemoryAlarm', 'Rev 2.00.14\n        Added new value of serviceLocalBackup for\n        ipoGTEventReason object', 'Rev 2.00.13\n        Added new notification: ipoGenEmergencyCallSvcEvent\n        Added new value of serviceEmergencyCall to the ipoGTEventReason object.', 'Rev 2.00.12\n        Added new values for ipoGTEventReason object from\n        servicePortRangeExhausted to serviceWebservicesUWSError.', 'Rev 2.00.11\n        Added new values for ipoGTEventReason object from\n        servicePlannedMaintenance to serviceSslVpnServerReportedError.', 'Rev 2.00.10\n        Added new value of testAlarm for ipoGTEventReason object.', 'Rev 2.00.09\n        Added new value of securityError for\n        ipoGTEventReason object', 'Rev 2.00.08\n        Added new value of serviceLicenseFileInvalid for\n        ipoGTEventReason object', 'Rev 2.00.07\n        Introduced new notifications, see ipoGenSvcMiscNotificationsGroup\n        and new objects, see ipoGenSvcMiscNotificationObjectsGroup', 'Rev 2.00.06\n        System Running Backup, Invalid Memory Card, No Licence Key Dongle\n        Notifications added.  Corrections to MIB syntax for System\n        Shutdown Notification.', 'Rev 2.00.05\n        System shutdown Notification added.', 'Rev 2.00.04\n        QOS Monitoring Notification added.', 'Rev 2.00.03\n        smallBusinessContactCenter(3) value for\n        ipoGTEventAppEntity changed to customerCallReporter.', 'Rev 2.00.02\n        Added smallBusinessContactCenter(3) value to\n        ipoGTEventAppEntity.', 'Rev 2.00.01\n        Added traps related to Universal PRI licensing.', 'Rev 2.00.00\n        Traps/notifications revised to provide more information about\n        the entity and device concerned.', 'Rev 1.00.08\n        Corrected description of event severities for physical\n        entities.', 'Rev 1.00.07\n        Corrected mandatory groups after addition of SOG event\n        related objects and notifications.', 'Rev 1.00.06\n        Added SOG event related object and notifications.', 'Rev 1.00.05\n        Added application event related object and notifications.\n        Corrected description of ipoGenLKSCommsOperationalEvent.', 'Rev 1.00.04\n        Revised usage description for ipoGTEventSeverity.', 'Rev 1.00.03\n        Revised for external publication.', 'Rev 1.00.02\n        Added loopback object and notification.', 'Rev 1.00.01\n        Corrected ipoGTEventEntity MAX-ACCESS.', 'Rev 1.00.00\n        The first published version of this MIB module.',))
if mibBuilder.loadTexts: ipoMIB.setLastUpdated('201407040000Z')
if mibBuilder.loadTexts: ipoMIB.setOrganization('Avaya Inc.')
if mibBuilder.loadTexts: ipoMIB.setContactInfo('Avaya Customer Services\n         Postal: Avaya, Inc.\n                 211 Mt Airy Rd.\n                 Basking Ridge, NJ 07920\n                 USA\n         Tel:    +1 908 953 6000\n\n         WWW:    http://www.avaya.com')
if mibBuilder.loadTexts: ipoMIB.setDescription('Avaya IP Office MIBs OID tree.\n\n         This MIB module defines the root items for MIBs for\n         use with Avaya IP Office family of telephone switches.')
ipoGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1))
ipoGenMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 1))
ipoGenTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2))
ipoGenConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3))
ipoGTEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0))
ipoGTObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1))
ipoGTEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("critical", 1), ("major", 2), ("minor", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventSeverity.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGTEventSeverity.setDescription('Severity of the event that has occurred.\n\n        The event severity depends upon the type of\n        entity/notification that the operational state change event\n        relates to:\n\n        GenEntityEvents:\n\n        Type of physical   Severity\n        entity\n        container          critical\n        module             major\n        port               major\n\n        Known transient errors for entities have a severity of minor.\n\n        LKSCommsEvents:\n        Severity is major\n\n        GenLoopbackEvent:\n        Severity is major\n\n        GenAppEvents:\n        Severity depends on sub-event\n        Failure/Operational - severity is major\n        Event               - severity depends on event condition\n\n        ipoGenSogEvents:\n        Severity depends on sub-event\n        HostFailure         - severity is Major\n        ModeChange:\n          - Mode survivable: severity is Major\n          - Mode subTending: severity is Minor\n\n        PhoneChangeEvents:\n        Severity is minor\n\n        **NOTE: This object is deprecated and replaced by\n          ipoGTEventStdSeverity.')
ipoGTEventDateTime = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 2), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventDateTime.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventDateTime.setDescription('Date and time of the occurence of the event.')
ipoGTEventEntity = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventEntity.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventEntity.setDescription('A reference, by entPhysicalIndex value, to the\n        EntPhysicalEntry representing the physical entity that an\n        event is associated with in an entity MIB instantiation within\n        the IP Office agent.')
ipoGTEventLoopbackStatus = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventLoopbackStatus.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGTEventLoopbackStatus.setDescription('This variable represents the current state of the\n         loopback on the DS1 interface.  It contains\n         information about loopbacks established by a\n         manager and remotely from the far end.\n\n         The ipoGTEventLoopbackStatus is a bit map represented as\n         a sum, therefore is can represent multiple\n         loopbacks simultaneously.\n\n         The various bit positions are:\n          1  noLoopback\n          2  nearEndPayloadLoopback\n          4  nearEndLineLoopback\n          8  nearEndOtherLoopback\n         16  nearEndInwardLoopback\n         32  farEndPayloadLoopback\n         64  farEndLineLoopback')
ipoGTEventAppEntity = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("voiceMail", 1), ("deltaServer", 2), ("customerCallReporter", 3), ("oneXPortal", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventAppEntity.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventAppEntity.setDescription('The IP Office application to which a notification/trap\n        relates.')
ipoGTEventAppEvent = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73))).clone(namedValues=NamedValues(("storageFull", 1), ("storageNearlyFull", 2), ("storageOkay", 3), ("backupCommunicationError", 4), ("backupFileError", 5), ("httpFailure", 6), ("httpSslAcceptFailure", 7), ("httpSslConnection", 8), ("httpSslFailure", 9), ("httpSslPortFailure", 10), ("ignoringRequest", 11), ("imapInitializationFailed", 12), ("imapInvalidMsgNr", 13), ("imapMailboxNotExist", 14), ("imapMessageInvalid", 15), ("imapMessageNotExist", 16), ("imapMessageNrNotExist", 17), ("imapMissingConnection", 18), ("imapMissingSettings", 19), ("imapNoLicence", 20), ("imapNotConfigured", 21), ("imapShiftConnection", 22), ("mapiInitializationFailed", 23), ("mapiMissingSettings", 24), ("mapiConnectionFailed", 25), ("mapiShiftConnection", 26), ("licence", 27), ("licenceDistributed", 28), ("licenceExpired", 29), ("licenceSOG", 30), ("loginFailure", 31), ("loginFailureInvalidMailbox", 32), ("mailboxNotFound", 33), ("makeLiveFileAccess", 34), ("makeLiveMissingFile", 35), ("offlineMakeLive", 36), ("onexError", 37), ("pbxConnectionLost", 38), ("pbxIncompatibility", 39), ("smgrSettingsError", 40), ("smtpConnectionFailed", 41), ("smtpConnectionTimeout", 42), ("smtpError", 43), ("smtpSecureConnectionFailed", 44), ("smtpUnexpectedData", 45), ("smtpUnsuportedData", 46), ("socketAbortingError", 47), ("socketBindError", 48), ("socketClientDisconnectedError", 49), ("socketConnectionError", 50), ("socketNoresponseError", 51), ("socketOptionError", 52), ("socketReceiveError", 53), ("socketRecvFailedError", 54), ("socketSendFailedError", 55), ("socketSelectError", 56), ("socketTimedOutError", 57), ("switchedToPrimary", 58), ("switchedToSecondary", 59), ("tcpAcceptError", 60), ("tcpListenError", 61), ("tcpSelectError", 62), ("tcpError", 63), ("testTimeExpired", 64), ("tftpConnectionError", 65), ("tftpMonitoringError", 66), ("tftpReadingError", 67), ("tftpReceivingError", 68), ("tftpWrittingError", 69), ("tooManyClients", 70), ("updateEerror", 71), ("updateSuccess", 72), ("vmScript", 73)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventAppEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventAppEvent.setDescription('IP Office application event states.  The associated event\n        severity of the notification/trap the object is carried in\n        varies depending upon the event condition. The appropriate\n        severity is detailed against event enumeration.')
ipoGTEventHostAddress = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 7), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventHostAddress.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventHostAddress.setDescription('Address of an IP Office Small Office Gateway Subtending Host.')
ipoGTEventSOGMode = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("survivable", 1), ("subTending", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventSOGMode.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventSOGMode.setDescription('IP Office Small Office Gateway operating modes.  \n        survivable(1) indicates the control unit has no current host, \n        either through confguration error or communication failure.  \n        subTending(2) indicates normal operation to a valid Sub-\n        tending Host.')
ipoGTEventStdSeverity = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 9), ItuPerceivedSeverity()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventStdSeverity.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventStdSeverity.setDescription('Severity of the event that has occurred.\n\n        The event severity depends upon the type of\n        entity/notification that the operational state change event\n        relates to. The severity values that are normally used are\n        detailed below:\n\n        The enterprise versions of standard SNMP traps all have a\n        severity of major (4).\n\n        Operational events which notify the transition back to an\n        operational state from a failure state have a severity of\n        cleared (1).\n\n\n        GenEntityEvents:\n          Operational - severity is cleared (1)\n\n          Failure event severity levels\n            Type of physical   Severity for failure\n            entity\n            container          critical (3)\n            module             major (4)\n            port               major (4)\n\n          Error\n            Known transient errors for entities have a severity of\n            warning (6).\n\n          Change - severity is major (4)\n\n        LKSCommsSvcEvents:\n          Operational - severity is cleared (1)\n          Failure -     severity is major (4)\n\n        GenLoopbackSvcEvent:\n          Severity is major (4)\n\n        GenAppSvcEvents:\n          Severity depends on sub-event\n          Operational - severity is cleared (1)\n          Failure -     severity is major (4)\n          Event -       severity depends on event condition\n            For voicemail storage conditions the severity is as\n            follows:\n              storageOkay       - severity is cleared (1)\n              storageNearlyFull - severity is warning (6)\n                (Only warning severity as it could be transitory.)\n              storageFull       - severity is critical (3)\n\n        GenSogSvcEvents:\n          Severity depends on sub-event\n          HostFailure         - severity is Major (4)\n          ModeChange:\n            - Mode survivable: severity is Major (4)\n            - Mode subTending: severity is Minor (5)\n\n        GenUPriLicSvcEvents:\n          Severity depends on sub-event\n          ChansReduced        - severity is Major (4)\n          CallRejected        - severity is Minor (5)\n\n        GenQoSMonSvcEvent:\n          QoSWarning        - severity is Warning (6)\n\n        PhoneChangeSvcEvents:\n          Severity is minor (5)\n\n        ipoGenSystemRunningBackupEvent:\n          Severity is cleared (1)\n          Severity is critical (3)\n                \n        ipoGenInvalidMemoryCardEvent:\n          Severity is cleared (1)\n          Severity is Major (4)\n\n        ipoGenNoLicenceKeyDongleEvent:\n          Severity is cleared (1)\n          Severity is warning (6)\n          Severity is critical (3)\n\n        ipoGenMemoryCardCapacityEvent:\n          Severity depends on sub-event\n              storageOkay       - severity is cleared (1)\n              storageNearlyFull - severity is warning (6)\n              storageFull       - severity is critical (3)')
ipoGTEventDevID = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventDevID.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventDevID.setDescription('A unique textual identifier of the alarming device.')
ipoGTEventEntityName = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventEntityName.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventEntityName.setDescription('The textual name of the alarming physical entity. The\n        contents of this object is made of concatenated\n        entPhysicalName values that fully identify the object with the\n        overall IP Office entity. Examples values are:\n\n        Controller, Trunk Slot B, Trunk Module, T1 PRI 2\n          = T1 PRI Port 2, on a dual T1 Trunk Module, in Trunk Slot B,\n            on the IP Office Controller Unit\n\n        Controller, VCM Slot 1, VCM 1\n          = VCM Card, in VCM Slot 1, on the IP Office Controller Unit\n\n        Controller, EXP 1, DS EXP 16, DS 12\n          = DS Phone Port 12, on a DS16 Expansion Module, attached to\n          Expansion Port 1, on the IP Office Controller Unit')
ipoGTEventLoopbackStatusBits = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 12), Bits().clone(namedValues=NamedValues(("noLoopback", 0), ("nearEndPayloadLoopback", 1), ("nearEndLineLoopback", 2), ("nearEndOtherLoopback", 3), ("nearEndInwardLoopback", 4), ("farEndPayloadLoopback", 5), ("farEndLineLoopback", 6)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventLoopbackStatusBits.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventLoopbackStatusBits.setDescription('This variable represents the current state of the loopback on\n         the DS1 interface.  It contains information about loopbacks\n         established by a manager and remotely from the far end.\n\n         The ipoGTEventLoopbackStatus is a bit map therefore is can\n         represent multiple loopbacks simultaneously.')
ipoGTEventQoSMonJitter = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 13), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventQoSMonJitter.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventQoSMonJitter.setDescription('IP Office QoS monitoring Received Jitter time in milliseconds.')
ipoGTEventQoSMonRndTrip = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 14), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventQoSMonRndTrip.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventQoSMonRndTrip.setDescription('IP Office QoS monitoring Round Trip Delay time in milliseconds.')
ipoGTEventQoSMonPktLoss = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 15), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventQoSMonPktLoss.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventQoSMonPktLoss.setDescription('IP Office QoS monitoring Received Packet Loss.')
ipoGTEventQoSMonCallId = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 16), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventQoSMonCallId.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventQoSMonCallId.setDescription('IP Office QoS monitoring Call Identifier.')
ipoGTEventQoSMonDevType = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("line", 1), ("extn", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventQoSMonDevType.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventQoSMonDevType.setDescription('IP Office QoS monitoring Device Type.')
ipoGTEventQoSMonDevId = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 18), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventQoSMonDevId.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventQoSMonDevId.setDescription('IP Office QoS monitoring Device Identifier.')
ipoGTEventQoSMonExtnNo = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 19), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventQoSMonExtnNo.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventQoSMonExtnNo.setDescription('IP Office QoS monitoring Extension Number.')
ipoGTEventSystemShutdownSource = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 20), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventSystemShutdownSource.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventSystemShutdownSource.setDescription('This variable represents the source from where the system\n        shutdown was performed.\n        \n        Possible values are:\n        \n        DTE-Port\n            - if the system shutdown is performed using the DTE,\n        AUX-Button\n            - if the system shutdown is performed using the AUX\n            button (available only for IP500v2),\n        Phone <user name>\n            - if the system shutdown is performed from a phone,\n        Manager <security user name>\n            - if the system shutdown is performed from Manager,\n        SSA <security user name>\n            - if the system shutdown is performed from SSA.')
ipoGTEventSystemShutdownTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 21), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventSystemShutdownTimeout.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventSystemShutdownTimeout.setDescription('This variable represents the period of time the system will be in\n        the shutdown state for. Possible values are in the 5 to 1440 minutes\n        range, 0 meaning infinite.')
ipoGTEventMemoryCardSlotId = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("compactFlash", 1), ("systemSD", 2), ("optionalSD", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventMemoryCardSlotId.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventMemoryCardSlotId.setDescription('This variable indicates a memory card physical position identifier.\n        System(2) and Optional(3) are valid for the IP500 V2.  CF(1) valid \n        for the IP500.')
ipoGTEventNoValidKeyReason = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("noReason", 1), ("notPresent", 2), ("noRegisterAccess", 3), ("invalidRegisters", 4), ("invalidWatermark", 5), ("invalidClusterSize", 6), ("invalidVolume", 7), ("invalidHeaderFiles", 8), ("nonSpecificError", 9)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventNoValidKeyReason.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventNoValidKeyReason.setDescription('This variable indicates the reason no valid licence feature key is \n        assumed.  This is also the order of importance and check precedence.\n                noReason(1) - cleared condition\n                notPresent(2) - license feature key no present\n                noRegisterAccess(3) - license feature key present, but no access\n                invalidRegisters(4) - invalid register values\n                invalidWatermark(5) - watermark invalid or not present\n                invalidClusterSize(6) - filesystem not as expected')
ipoGTEventReason = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79))).clone(namedValues=NamedValues(("configurationAgentNotTargeted", 1), ("configurationSCNDialPlanConflict", 2), ("configurationNoIncomingCallRoute", 3), ("configurationHWTypeFailure", 4), ("serviceFeatureLicenseMissing", 5), ("serviceAllLicensesInUse", 6), ("serviceClockSourceChanged", 7), ("serviceLogonFailed", 8), ("serviceNoFreeChannelsAvail", 9), ("serviceHoldMusicFileFailure", 10), ("serviceAllResourcesInUse", 11), ("serviceAlarm", 12), ("serviceNetworkInterconnectFailure", 13), ("trunkSeizeFailure", 14), ("trunkIncomingCallOutgoingTrunk", 15), ("trunkCLINotDelivered", 16), ("trunkDDIIncomplete", 17), ("trunkLOS", 18), ("trunkOOS", 19), ("trunkRedAlarm", 20), ("trunkBlueAlarm", 21), ("trunkYellowAlarm", 22), ("trunkIPConnectFail", 23), ("trunkSCNInvalidConnection", 24), ("linkDeviceChanged", 25), ("linkLDAPServerCommFailure", 26), ("linkResourceDown", 27), ("linkSMTPServerCommFailure", 28), ("linkVMProConnFailure", 29), ("serviceTimeServerAlarm", 30), ("serviceLicenseFileInvalid", 31), ("serviceLicenseError", 32), ("securityError", 33), ("codecError", 34), ("scepNoRespError", 35), ("configAppsProcAlarm", 36), ("serviceAppsProcAlarm", 37), ("serviceLicenseServerError", 38), ("testAlarm", 39), ("servicePlannedMaintenance", 40), ("serviceNetworkDisconnection", 41), ("serviceFailedTlsNegotiation", 42), ("serviceFailedTlsRenegotiation", 43), ("serviceLackOfResources", 44), ("serviceInternalError", 45), ("serviceTooManyMissedHeartbeats", 46), ("serviceFailedDnsResolution", 47), ("serviceDuplicateIpAddress", 48), ("serviceAuthenticationFailure", 49), ("serviceSslVpnStackProtocolError", 50), ("serviceSslVpnServerReportedError", 51), ("servicePortRangeExhausted", 52), ("serviceWebservicesUWSError", 53), ("trunkNoFreeVoIPChannel", 54), ("serviceEmergencyCall", 55), ("serviceLocationCongestion", 56), ("serviceCpuAlarm", 57), ("serviceCpuIOAlarm", 58), ("serviceMemoryAlarm", 59), ("serviceLocalBackup", 60), ("trunkSMConnectAsSIP", 61), ("trunkSIPConnectAsSM", 62), ("serviceSipRxPacketSizeError", 63), ("serviceACCSAlarm", 64), ("serviceSystemHardDriveAlarm", 65), ("serviceAdditionalHardDriveAlarm", 66), ("linkDialerConnFailure", 67), ("trunkSIPDNSInvalidConfig", 68), ("trunkSIPDNSTransportError", 69), ("monitorLogStamped", 70), ("trunkSCNInvalidSubOperMode", 71), ("serviceIPDECTSystemError", 72), ("serviceIPOCCAlarm", 73), ("serviceGeneralAlarm", 74), ("serviceSystemInfo", 75), ("serviceNonSelectAlarm", 76), ("serviceCCRNotSupported", 77), ("serviceAMServerNotAvailable", 78), ("trunkMediaSecuritySettingsIncompatible", 79)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventReason.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventReason.setDescription('This variable indicates what event took place within Configuration, Service, Trunk\n        or Link category alarm')
ipoGTEventData = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 25), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventData.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventData.setDescription('This variable contains opaque data that can be used to provide additional information\n        when the ipoGTEventReason value is not sufficient.')
ipoGTEventAlarmDescription = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 26), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventAlarmDescription.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventAlarmDescription.setDescription('This variable describes the alarm')
ipoGTEventAlarmRemedialAction = MibScalar((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 1, 27), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ipoGTEventAlarmRemedialAction.setStatus('current')
if mibBuilder.loadTexts: ipoGTEventAlarmRemedialAction.setDescription('This variable describes the remedial action of the alarm')
ipoGenEntityFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 1)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventEntity"))
if mibBuilder.loadTexts: ipoGenEntityFailureEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenEntityFailureEvent.setDescription('A ipoGenEntityFailureEvent notification is generated whenever a\n        physical entity on the IP Office fails in its operation. It\n        signifies that the SNMP entity, acting in an agent role, has\n        detected that the state of a physical entity of the system has\n        transitioned from the operational to the failed state\n\n        **NOTE: This notification is deprecated and replaced by \n        ipoGenEntityFailureSvcEvent')
ipoGenEntityOperationalEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 2)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventEntity"))
if mibBuilder.loadTexts: ipoGenEntityOperationalEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenEntityOperationalEvent.setDescription('A ipoGenEntityOperationalEvent notification is generated whenever\n        a physical entity on the IP Office becomes operational again\n        after having failed. It signifies that the SNMP entity, acting\n        in an agent role, has detected that the state of a physical\n        entity of the system has transitioned from the failed to the\n        operational state\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenEntityOperationalSvcEvent.')
ipoGenEntityErrorEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 3)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventEntity"))
if mibBuilder.loadTexts: ipoGenEntityErrorEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenEntityErrorEvent.setDescription('A ipoGenEntityErrorEvent notification is generated whenever a\n        physical entity on the IP Office experiences a temporary\n        error. It signifies that the SNMP entity, acting in an agent\n        role, has detected a transitory error on a physical entity of\n        the system.\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenEntityErrorSvcEvent.')
ipoGenEntityChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 4)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventEntity"))
if mibBuilder.loadTexts: ipoGenEntityChangeEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenEntityChangeEvent.setDescription('A ipoGenEntityChangeEvent notification is generated whenever\n        a physical entity on the IP Office experiences a change itself\n        or with other entities associated with it. It signifies that\n        the SNMP entity, acting in an agent role, has detected a non\n        error/failure change for a physical entity on the system.\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenEntityChangeSvcEvent.')
ipoGenLKSCommsFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 5)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"))
if mibBuilder.loadTexts: ipoGenLKSCommsFailureEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenLKSCommsFailureEvent.setDescription('A ipoGenLKSCommsFailureEvent notification is generated\n        whenever communication with a Licence Key Server fails.  It\n        signifies that the SNMP entity, acting in an agent role, has\n        detected that the state of the communications between the\n        Licence Key Server has transitioned from the operational to\n        the failed state.\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenLKSCommsFailureSvcEvent.')
ipoGenLKSCommsOperationalEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 6)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"))
if mibBuilder.loadTexts: ipoGenLKSCommsOperationalEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenLKSCommsOperationalEvent.setDescription('A ipoGenLKSCommsOperationalEvent notification is generated\n        whenever communication with a Licence Key Server becomes\n        operational again after having failed.  It signifies that the\n        SNMP entity, acting in an agent role, has detected that the\n        state of the communications between the Licence Key Server has\n        transitioned from the failed to the operational state.\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenLKSCommsOperationalSvcEvent.')
ipoGenLKSCommsErrorEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 7)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"))
if mibBuilder.loadTexts: ipoGenLKSCommsErrorEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenLKSCommsErrorEvent.setDescription('A ipoGenLKSCommsErrorEvent notification is generated whenever\n         a IP Office experiences a temporary error with License Key\n         Server communication. It signifies that the SNMP entity,\n         acting in an agent role, has detected a transitory error with\n         the communication between the License Key Server and Client\n         on the system.\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenLKSCommsErrorSvcEvent.')
ipoGenLKSCommsChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 8)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"))
if mibBuilder.loadTexts: ipoGenLKSCommsChangeEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenLKSCommsChangeEvent.setDescription('A ipoGenLKSCommsChangeEvent notification is generated\n        whenever a IP Office experiences a change a non error change\n        License Key Server communication operation.  It signifies that\n        the SNMP entity, acting in an agent role, has detected a non\n        error/failure change with the License Key Server and Client\n        operation on the system.\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenLKSCommsChangeSvcEvent.')
ipoGenLoopbackEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 9)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventEntity"), ("IPO-MIB", "ipoGTEventLoopbackStatus"))
if mibBuilder.loadTexts: ipoGenLoopbackEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenLoopbackEvent.setDescription('A ipoGenLoopbackEvent notification is generated whenever a IP\n        Office T1 (DS1) interface operating as a CSU actions a loopback\n        status change.\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenLoopbackSvcEvent.')
ipoGenAppFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 10)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventAppEntity"))
if mibBuilder.loadTexts: ipoGenAppFailureEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenAppFailureEvent.setDescription('A ipoGenAppFailureEvent notification is generated whenever\n        communication between a IP Office switch and a IP Office\n        application fails.  It signifies that the SNMP entity, acting\n        in an agent role, has detected that the state of the\n        communications between the IP Office switch and a IP Office\n        application has transitioned from the operational to the\n        failed state.  The IP Office application between which\n        communication has been lost is identified by the value of\n        ipoGTEventAppEntity.\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenAppFailureSvcEvent.')
ipoGenAppOperationalEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 11)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventAppEntity"))
if mibBuilder.loadTexts: ipoGenAppOperationalEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenAppOperationalEvent.setDescription('A ipoGenAppOperationalEvent notification is generated\n        whenever communication between a IP Office switch and a IP\n        Office application becomes operational again after having\n        failed.  It signifies that the SNMP entity, acting in an agent\n        role, has detected that the state of the communications\n        between the IP Office switch and a IP Office application has\n        transitioned from the failed to the operational state.  The IP\n        Office application between which communication has been lost\n        is identified by the value of ipoGTEventAppEntity.\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenAppOperationalSvcEvent.')
ipoGenAppEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 12)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventAppEntity"), ("IPO-MIB", "ipoGTEventAppEvent"))
if mibBuilder.loadTexts: ipoGenAppEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenAppEvent.setDescription('A ipoGenAppEvent notification is generated whenever a\n        application entity of the IP Office system experiences an event.\n        It signifies that the SNMP entity, acting as a proxy for\n        the application, has detected an event on the application\n        entity of the overall IP Office system.\n        The event severity varies dependent upon the event condition.\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenAppSvcEvent.')
ipoGenSogHostFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 13)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventHostAddress"))
if mibBuilder.loadTexts: ipoGenSogHostFailureEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenSogHostFailureEvent.setDescription('An ipoGenSogFailureEvent notification is generated whenever a\n        previously valid Sub-tending host fails during Small Office \n        Gateway operation.\n        The ipAddress field indicates the address of the failed host.\n        The event severity will always indicate Major.\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenSogHostFailureSvcEvent.')
ipoGenSogModeChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 14)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventSOGMode"))
if mibBuilder.loadTexts: ipoGenSogModeChangeEvent.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenSogModeChangeEvent.setDescription('An ipoGenSogModeChangeEvent notification is generated whenever \n        the Small Office Gateway operating mode changes. This also\n        includes entry to the initial mode.\n        The ipoGTEventSOGMode field indicates the new operating mode.\n        The event severity will be major(2) for a ipoGTEventSOGMode value\n        of survivable(1), and minor(3) for a ipoGTEventSOGMode value of\n        subTending(2).\n\n        **NOTE: This notification is deprecated and replaced by\n          ipoGenSogModeChangeSvcEvent.')
ipoGenColdStartSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 15)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"))
if mibBuilder.loadTexts: ipoGenColdStartSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenColdStartSvcEvent.setDescription("Enterprise version of standard coldstart trap featuring\n         device identification information.  A coldStart trap\n         signifies that the sending protocol entity is reinitializing\n         itself such that the agent's configuration or the protocol\n         entity implementation may be altered.")
ipoGenWarmStartSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 16)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"))
if mibBuilder.loadTexts: ipoGenWarmStartSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenWarmStartSvcEvent.setDescription('Enterprise version of standard warmstart trap featuring\n         device identification information.  A warmStart trap\n         signifies that the sending protocol entity is reinitializing\n         that neither the agent configuration nor the protocol entity\n         implementation is altered.')
ipoGenLinkDownSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 17)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ipoGenLinkDownSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenLinkDownSvcEvent.setDescription("Enterprise version of standard linkDown trap featuring device\n         identification information.  A linkDown trap signifies that\n         the sending protocol entity recognizes a failure in one of\n         the communication links represented in the agent's\n         configuration.")
ipoGenLinkUpSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 18)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ipoGenLinkUpSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenLinkUpSvcEvent.setDescription("Enterprise version of standard linkUp trap featuring device\n         identification information.  A linkUp trap signifies that the\n         sending protocol entity recognizes that one of the\n         communication links represented in the agent's configuration\n         has come up.")
ipoGenAuthFailureSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 19)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"))
if mibBuilder.loadTexts: ipoGenAuthFailureSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenAuthFailureSvcEvent.setDescription('Enterprise version of standard authenticationFailure trap\n         featuring device identification information.  An\n         authenticationFailure trap signifies that the sending\n         protocol entity is the addressee of a protocol message that\n         is not properly authenticated.  While implementations of the\n         SNMP must be capable of generating this trap, they must also\n         be capable of suppressing the emission of such traps via an\n         implementation- specific mechanism.')
ipoGenEntityFailureSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 20)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventEntity"), ("IPO-MIB", "ipoGTEventEntityName"))
if mibBuilder.loadTexts: ipoGenEntityFailureSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenEntityFailureSvcEvent.setDescription('A ipoGenEntityFailureSvcEvent notification is generated\n        whenever a physical entity on the IP Office fails in its\n        operation. It signifies that the SNMP entity, acting in an\n        agent role, has detected that the state of a physical entity\n        of the system has transitioned from the operational to the\n        failed state')
ipoGenEntityOperationalSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 21)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventEntity"), ("IPO-MIB", "ipoGTEventEntityName"))
if mibBuilder.loadTexts: ipoGenEntityOperationalSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenEntityOperationalSvcEvent.setDescription('A ipoGenEntityOperationalSvcEvent notification is generated\n        whenever a physical entity on the IP Office becomes\n        operational again after having failed. It signifies that the\n        SNMP entity, acting in an agent role, has detected that the\n        state of a physical entity of the system has transitioned from\n        the failed to the operational state')
ipoGenEntityErrorSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 22)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventEntity"), ("IPO-MIB", "ipoGTEventEntityName"))
if mibBuilder.loadTexts: ipoGenEntityErrorSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenEntityErrorSvcEvent.setDescription('A ipoGenEntityErrorSvcEvent notification is generated\n        whenever a physical entity on the IP Office experiences a\n        temporary error. It signifies that the SNMP entity, acting in\n        an agent role, has detected a transitory error on a physical\n        entity of the system.')
ipoGenEntityChangeSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 23)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventEntity"), ("IPO-MIB", "ipoGTEventEntityName"))
if mibBuilder.loadTexts: ipoGenEntityChangeSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenEntityChangeSvcEvent.setDescription('A ipoGenEntityChangeSvcEvent notification is generated\n        whenever a physical entity on the IP Office experiences a\n        change itself or with other entities associated with it. It\n        signifies that the SNMP entity, acting in an agent role, has\n        detected a non error/failure change for a physical entity on\n        the system.')
ipoGenLKSCommsFailureSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 24)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"))
if mibBuilder.loadTexts: ipoGenLKSCommsFailureSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenLKSCommsFailureSvcEvent.setDescription('A ipoGenLKSCommsFailureSvcEvent notification is generated\n        whenever communication with a Licence Key Server fails.  It\n        signifies that the SNMP entity, acting in an agent role, has\n        detected that the state of the communications between the\n        Licence Key Server has transitioned from the operational to\n        the failed state.')
ipoGenLKSCommsOperationalSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 25)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"))
if mibBuilder.loadTexts: ipoGenLKSCommsOperationalSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenLKSCommsOperationalSvcEvent.setDescription('A ipoGenLKSCommsOperationalSvcEvent notification is generated\n        whenever communication with a Licence Key Server becomes\n        operational again after having failed.  It signifies that the\n        SNMP entity, acting in an agent role, has detected that the\n        state of the communications between the Licence Key Server has\n        transitioned from the failed to the operational state.')
ipoGenLKSCommsErrorSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 26)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"))
if mibBuilder.loadTexts: ipoGenLKSCommsErrorSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenLKSCommsErrorSvcEvent.setDescription('A ipoGenLKSCommsErrorSvcEvent notification is generated\n         whenever a IP Office experiences a temporary error with\n         License Key Server communication. It signifies that the SNMP\n         entity, acting in an agent role, has detected a transitory\n         error with the communication between the License Key Server\n         and Client on the system.')
ipoGenLKSCommsChangeSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 27)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"))
if mibBuilder.loadTexts: ipoGenLKSCommsChangeSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenLKSCommsChangeSvcEvent.setDescription('A ipoGenLKSCommsChangeSvcEvent notification is generated\n        whenever a IP Office experiences a change a non error change\n        License Key Server communication operation.  It signifies that\n        the SNMP entity, acting in an agent role, has detected a non\n        error/failure change with the License Key Server and Client\n        operation on the system.')
ipoGenLoopbackSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 28)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventEntity"), ("IPO-MIB", "ipoGTEventEntityName"), ("IPO-MIB", "ipoGTEventLoopbackStatusBits"))
if mibBuilder.loadTexts: ipoGenLoopbackSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenLoopbackSvcEvent.setDescription('A ipoGenLoopbackSvcEvent notification is generated whenever a\n        IP Office T1 (DS1) interface operating as a CSU actions a\n        loopback status change.')
ipoGenAppFailureSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 29)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventAppEntity"))
if mibBuilder.loadTexts: ipoGenAppFailureSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenAppFailureSvcEvent.setDescription('A ipoGenAppFailureSvcEvent notification is generated whenever\n        communication between a IP Office switch and a IP Office\n        application fails.  It signifies that the SNMP entity, acting\n        in an agent role, has detected that the state of the\n        communications between the IP Office switch and a IP Office\n        application has transitioned from the operational to the\n        failed state.  The IP Office application between which\n        communication has been lost is identified by the value of\n        ipoGTEventAppEntity.')
ipoGenAppOperationalSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 30)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventAppEntity"))
if mibBuilder.loadTexts: ipoGenAppOperationalSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenAppOperationalSvcEvent.setDescription('A ipoGenAppOperationalSvcEvent notification is generated\n        whenever communication between a IP Office switch and a IP\n        Office application becomes operational again after having\n        failed.  It signifies that the SNMP entity, acting in an agent\n        role, has detected that the state of the communications\n        between the IP Office switch and a IP Office application has\n        transitioned from the failed to the operational state.  The IP\n        Office application between which communication has been lost\n        is identified by the value of ipoGTEventAppEntity.')
ipoGenAppSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 31)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventAppEntity"), ("IPO-MIB", "ipoGTEventAppEvent"), ("IPO-MIB", "ipoGTEventAlarmDescription"))
if mibBuilder.loadTexts: ipoGenAppSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenAppSvcEvent.setDescription('A ipoGenAppSvcEvent notification is generated whenever a\n        application entity of the IP Office system experiences an\n        event.  It signifies that the SNMP entity, acting as a proxy\n        for the application, has detected an event on the application\n        entity of the overall IP Office system.\n\n        The event severity varies dependent upon the event condition.')
ipoGenSogHostFailureSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 32)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventHostAddress"))
if mibBuilder.loadTexts: ipoGenSogHostFailureSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenSogHostFailureSvcEvent.setDescription('An ipoGenSogFailureSvcEvent notification is generated\n        whenever a previously valid Sub-tending host fails during\n        Small Office Gateway operation.\n\n        The ipAddress field indicates the address of the failed host.\n        The event severity will always indicate major(4).')
ipoGenSogModeChangeSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 33)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventSOGMode"))
if mibBuilder.loadTexts: ipoGenSogModeChangeSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenSogModeChangeSvcEvent.setDescription('An ipoGenSogModeChangeSvcEvent notification is generated\n        whenever the Small Office Gateway operating mode changes. This\n        also includes entry to the initial mode.\n\n        The ipoGTEventSOGMode field indicates the new operating mode.\n        The event severity will be major(4) for a ipoGTEventSOGMode\n        value of survivable(1), and minor(5) for a ipoGTEventSOGMode\n        value of subTending(2).')
ipoGenUPriLicChansReducedSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 34)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"))
if mibBuilder.loadTexts: ipoGenUPriLicChansReducedSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenUPriLicChansReducedSvcEvent.setDescription('A ipoGenUPriLicChansReducedSvcEvent notification is generated\n        whenever the number of Universal PRI Licensed channels has\n        been reduced. It signifies that the SNMP entity, acting in an\n        agent role, has detected a reduction in the licensed channels\n        on a Univeral PRI trunk.')
ipoGenUPriLicCallRejectedSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 35)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"))
if mibBuilder.loadTexts: ipoGenUPriLicCallRejectedSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenUPriLicCallRejectedSvcEvent.setDescription('A ipoGenUPriLicCallRejectedSvcEvent notification is generated\n        whenever a call on a Universal PRI is rejected due to a\n        licensed channel not being available.  It signifies that the\n        SNMP entity, acting in an agent role, has detected a licensed\n        channel not available in order to make a call on a Univeral\n        PRI trunk.')
ipoGenQoSMonSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 36)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventQoSMonJitter"), ("IPO-MIB", "ipoGTEventQoSMonRndTrip"), ("IPO-MIB", "ipoGTEventQoSMonPktLoss"), ("IPO-MIB", "ipoGTEventQoSMonCallId"), ("IPO-MIB", "ipoGTEventQoSMonDevType"), ("IPO-MIB", "ipoGTEventQoSMonDevId"), ("IPO-MIB", "ipoGTEventQoSMonExtnNo"))
if mibBuilder.loadTexts: ipoGenQoSMonSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenQoSMonSvcEvent.setDescription('A ipoGenQoSMonSvcEvent notification is generated when one of\n        the monitored QoS parameters (e.g. round trip delay, jitter,\n        packet loss, etc) exceeds its pre-selected threshold during\n        the duration of the call. It signifies that the SNMP entity,\n        acting in an agent role, has detected a state that one of the\n        monitored QoS parameters for the call exceeded its\n        pre-selected threshold.\n\n        The ipoGTEventQOSMonExtnNo value is only valid when the device\n        monitored is an extension rather than a line.')
ipoGenSystemShutdownSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 37)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventSystemShutdownSource"), ("IPO-MIB", "ipoGTEventSystemShutdownTimeout"))
if mibBuilder.loadTexts: ipoGenSystemShutdownSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenSystemShutdownSvcEvent.setDescription('An ipoGenSystemShutdownSvcEvent notification is generated when a\n        system shutdown is performed. It signifies that the\n        SNMP entity has detected a system shutdown.')
ipoGenSystemRunningBackupEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 38)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"))
if mibBuilder.loadTexts: ipoGenSystemRunningBackupEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenSystemRunningBackupEvent.setDescription('An ipoGenSystemRunningBackup notification is generated when a\n        system is running partially or wholly from alternate/backup \n        software and/or configuration data.\n        In the case of an IP500 V2, it indicates that the current boot location\n        is not the System SD card slot, \\system\\primary.')
ipoGenInvalidMemoryCardEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 39)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventMemoryCardSlotId"))
if mibBuilder.loadTexts: ipoGenInvalidMemoryCardEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenInvalidMemoryCardEvent.setDescription('An ipoGenInvalidMemoryCard notification is generated when a memory\n        card is detected present but cannot be used due to failure in the \n        filesystem or card type checks.\n        The checks are carried out on startup and whenever a memory card is\n        inserted.')
ipoGenNoLicenceKeyDongleEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 40)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventNoValidKeyReason"))
if mibBuilder.loadTexts: ipoGenNoLicenceKeyDongleEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenNoLicenceKeyDongleEvent.setDescription('A ipoGenNoLicenceKeyDongle notification is generated if a system\n        either does not detect presence, or fails to validate a Licence Feature\n        Key Dongle.\n        In the case of an IP500 V2, it indicates that either the System SD card\n        is not present, or that one of the validation checks has failed.  Note\n        that removing the System SD card will cause this event immediately,\n        however the licences will remain valid for approximately 2 hours.\n\n        ipoGTEventStdSeverity will indicate the events state:\n          Severity is cleared(1): license dongle OK\n          Severity is warning(6): license dongle not OK, in grace period\n          Severity is critical(3): license dongle not OK, grace period expired\n        \n        The first check to fail is contained within ipoGTEventNoKeyReason.')
ipoGenMemoryCardCapacityEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 41)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventMemoryCardSlotId"), ("IPO-MIB", "ipoGTEventAppEvent"))
if mibBuilder.loadTexts: ipoGenMemoryCardCapacityEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenMemoryCardCapacityEvent.setDescription('A ipoGenMemoryCardCapacityEvent notification is generated if a memory\n        card passes one of the preset capacity thresholds.\n        In the case of an IP500 V2, the thresholds shall be\n            storageFull(1) - greater than  99% of nominal capacity\n            storageNearlyFull(2) - greater than 90% of nominal capacity\n            storageOkay(3) - less than 90% of nominal capacity.')
ipoGenConfigFailureSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 42)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenConfigFailureSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenConfigFailureSvcEvent.setDescription('A ipoGenConfigFailureSvcEvent notification is generated\n        whenever a configuration component fails in its operation. It signifies\n        that the SNMP entity,acting in an agent role,has detected that\n        the state of a configuration component has transitioned from the\n        operational to the failed state. \n        \n        This notification event is associated with a configuration \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenConfigOperationalSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 43)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"))
if mibBuilder.loadTexts: ipoGenConfigOperationalSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenConfigOperationalSvcEvent.setDescription('A ipoGenConfigOperationalSvcEvent notification is generated\n        whenever a configuration component becomes operational again\n        after having failed.It signifies that the SNMP entity,acting in an\n        agent role,has detected that the state of a configuration component \n        of thesystem has transitioned from the failed to the operational state.\n\n        This notification event is associated with a configuration \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenConfigErrorSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 44)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenConfigErrorSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenConfigErrorSvcEvent.setDescription('A ipoGenConfigErrorSvcEvent notification is generated\n        whenever a configuration component experiences a\n        temporary error.It signifies that the SNMP entity, acting\n        in an agent role,has detected a transitory error on a\n        configuration component of the system.\n        \n        This notification event is associated with a configuration \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenConfigChangeSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 45)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenConfigChangeSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenConfigChangeSvcEvent.setDescription('A ipoGenConfigChangeSvcEvent notification is generated\n        whenever a configuration component experiences a change\n        or a non error change event.It signifies that the SNMP entity, acting\n        in an agent role,has detected a non error/failure change on a\n        configuration component of the system.\n        \n        This notification event is associated with a configuration \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenServiceFailureSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 46)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenServiceFailureSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenServiceFailureSvcEvent.setDescription('A ipoGenServiceFailureSvcEvent notification is generated\n        whenever a Service component fails in its operation. It signifies\n        that the SNMP entity,acting in an agent role,has detected that\n        the state of a Service component has transitioned from the\n        operational to the failed state. \n        \n        This notification event is associated with a service \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenServiceOperationalSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 47)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"))
if mibBuilder.loadTexts: ipoGenServiceOperationalSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenServiceOperationalSvcEvent.setDescription('A ipoGenServiceOperationalSvcEvent notificationis generated\n        whenever a service component becomes operational again\n        after having failed.It signifiest hat the SNMP entity, acting in an\n        agent role, has detected that the state of a service component \n        of the system has transitioned from the failed to the operational state.\n        \n        This notification event is associated with a service \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenServiceErrorSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 48)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenServiceErrorSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenServiceErrorSvcEvent.setDescription('A ipoGenServiceErrorSvcEvent notification is generated\n        whenever a service component experiences a\n        temporary error. It signifiest hat the SNMP entity, acting\n        in an agent role,has detected a transitory error on a\n        service component of the system.\n        \n        This notification event is associated with a service \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenServiceChangeSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 49)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenServiceChangeSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenServiceChangeSvcEvent.setDescription('A ipoGenServiceChangeSvcEvent notification is generated\n        whenever a service component experiences a change\n        or a non error change event. It signifies that the SNMP entity, acting\n        in an agent role,has detected a non error/failure change on a\n        service component of the system.\n        \n        This notification event is associated with a service \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenTrunkFailureSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 50)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenTrunkFailureSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenTrunkFailureSvcEvent.setDescription('A ipoGenTrunkFailureSvcEvent notification is generated\n        whenever a trunk component fails in its operation. It signifies\n        that the SNMP entity,acting in an agent role,has detected that\n        the state of a Trunk component has transitioned from the\n        operational to the failed state. \n        \n        This notification event is associated with a trunk \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenTrunkOperationalSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 51)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"))
if mibBuilder.loadTexts: ipoGenTrunkOperationalSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenTrunkOperationalSvcEvent.setDescription('A ipoGenTrunkOperationalSvcEvent notificationis generated\n        whenever a trunk component becomes operational again\n        after having failed. It signifies that the SNMP entity, acting in an\n        agent role,has detected that the state of a trunk component \n        of the system has transitioned from the failed to the operational state.\n\n        This notification event is associated with a trunk \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenTrunkErrorSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 52)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenTrunkErrorSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenTrunkErrorSvcEvent.setDescription('A ipoGenTrunkErrorSvcEvent notification is generated\n        whenever a trunk component experiences a\n        temporary error. It signifies that the SNMP entity, acting\n        in an agent role, has detected a transitory error on a\n        trunk component of the system.\n        \n        This notification event is associated with a trunk \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenTrunkChangeSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 53)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenTrunkChangeSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenTrunkChangeSvcEvent.setDescription('A ipoGenTrunkChangeSvcEvent notification is generated\n        whenever a trunk component experiences a change\n        or a non error change event. It signifies that the SNMP entity, acting\n        in an agent role, has detected a non error/failure change on a\n        trunk component of the system.\n        \n        This notification event is associated with a trunk \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenLinkFailureSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 54)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenLinkFailureSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenLinkFailureSvcEvent.setDescription('A ipoGenLinkFailureSvcEvent notification is generated\n        whenever a Link component fails in its operation. It signifies\n        that the SNMP entity,acting in an agent role,has detected that\n        the state of a Link component has transitioned from the\n        operational to the failed state. \n        \n        This notification event is associated with a link \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenLinkOperationalSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 55)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"))
if mibBuilder.loadTexts: ipoGenLinkOperationalSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenLinkOperationalSvcEvent.setDescription('A ipoGenLinkOperationalSvcEvent notification is generated\n        whenever a link component becomes operational again\n        after having failed. It signifies that the SNMP entity, acting in an\n        agent role, hasdetected that the state of a link component \n        of the system has transitioned from the failed to the operational state.\n\n        This notification event is associated with a link \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenLinkErrorSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 56)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenLinkErrorSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenLinkErrorSvcEvent.setDescription('A ipoGenLinkErrorSvcEvent notification is generated\n        whenever a link component experiences a\n        temporary error. It signifies that the SNMP entity, acting\n        in an agent role,has detected a transitory error on a\n        link component of thesystem.\n        \n        This notification event is associated with a link \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenLinkChangeSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 57)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenLinkChangeSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenLinkChangeSvcEvent.setDescription('A ipoGenLinkChangeSvcEvent notification is generated\n        whenever a link component experiences a change\n        or a non error change event. It signifies that the SNMP entity, acting\n        in an agent role,has detected a non error/failure change on a\n        link component of the system.\n        \n        This notification event is associated with a link \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenEmergencyCallSvcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 2, 0, 58)).setObjects(("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventDevID"), ("SNMPv2-MIB", "sysDescr"), ("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if mibBuilder.loadTexts: ipoGenEmergencyCallSvcEvent.setStatus('current')
if mibBuilder.loadTexts: ipoGenEmergencyCallSvcEvent.setDescription('A ipoGenEmergencyCallSvcEvent notification is generated\n        whenever an emergency call is made, regardless whether successfully or not.\n        It signifies that the SNMP entity, acting\n        in an agent role, has detected an emergency call attempt on the system.\n        \n        This notification event is associated with a service \n        system status category alarm. Details about the alarm are \n        provided in the included object variables.')
ipoGenCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 1))
ipoGenGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2))
ipoGenCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 1, 1)).setObjects(("IPO-MIB", "ipoGenNotificationObjectsGroup"), ("IPO-MIB", "ipoGenNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenCompliance = ipoGenCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenCompliance.setDescription('The compliance statement for IP Office agents which implement\n         up to and including version 1.00.05 of this MIB.')
ipoGen2Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 1, 2)).setObjects(("IPO-MIB", "ipoGenNotificationObjectsGroup"), ("IPO-MIB", "ipoGenNotificationsGroup"), ("IPO-MIB", "ipoGenSOGNotificationObjectsGroup"), ("IPO-MIB", "ipoGenSOGNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGen2Compliance = ipoGen2Compliance.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGen2Compliance.setDescription('The compliance statement for IP Office agents which implement\n         version 1.00.06 and later versions of this MIB.')
ipoGen3Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 1, 3)).setObjects(("IPO-MIB", "ipoGenv2NotificationObjectsGroup"), ("IPO-MIB", "ipoGenEntGenNotificationsGroup"), ("IPO-MIB", "ipoGenSvcNotificationsGroup"), ("IPO-MIB", "ipoGenSOGNotificationObjectsGroup"), ("IPO-MIB", "ipoGenSvcSOGNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGen3Compliance = ipoGen3Compliance.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGen3Compliance.setDescription('The compliance statement for IP Office agents which implement\n         version 1.01.01 and later versions of this MIB.')
ipoGen4Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 1, 4)).setObjects(("IPO-MIB", "ipoGenv2NotificationObjectsGroup"), ("IPO-MIB", "ipoGenEntGenNotificationsGroup"), ("IPO-MIB", "ipoGenSvcNotificationsGroup"), ("IPO-MIB", "ipoGenSOGNotificationObjectsGroup"), ("IPO-MIB", "ipoGenSvcSOGNotificationsGroup"), ("IPO-MIB", "ipoGenUPriLicSvcNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGen4Compliance = ipoGen4Compliance.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGen4Compliance.setDescription('The compliance statement for IP Office agents which implement\n         version 2.00.01 and later versions of this MIB.')
ipoGen5Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 1, 5)).setObjects(("IPO-MIB", "ipoGenv2NotificationObjectsGroup"), ("IPO-MIB", "ipoGenEntGenNotificationsGroup"), ("IPO-MIB", "ipoGenSvcNotificationsGroup"), ("IPO-MIB", "ipoGenSOGNotificationObjectsGroup"), ("IPO-MIB", "ipoGenSvcSOGNotificationsGroup"), ("IPO-MIB", "ipoGenUPriLicSvcNotificationsGroup"), ("IPO-MIB", "ipoGenQosMonNotificationObjectsGroup"), ("IPO-MIB", "ipoGenSvcQoSMonNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGen5Compliance = ipoGen5Compliance.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGen5Compliance.setDescription('The compliance statement for IP Office agents which implement\n        version 2.00.04 and later versions of this MIB.')
ipoGen6Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 1, 6)).setObjects(("IPO-MIB", "ipoGenv2NotificationObjectsGroup"), ("IPO-MIB", "ipoGenEntGenNotificationsGroup"), ("IPO-MIB", "ipoGenSvcNotificationsGroup"), ("IPO-MIB", "ipoGenSOGNotificationObjectsGroup"), ("IPO-MIB", "ipoGenSvcSOGNotificationsGroup"), ("IPO-MIB", "ipoGenUPriLicSvcNotificationsGroup"), ("IPO-MIB", "ipoGenSvcQoSMonNotificationsGroup"), ("IPO-MIB", "ipoGenSvcSystemShutdownNotificationsGroup"), ("IPO-MIB", "ipoGenSvcSystemShutdownObjectGroup"), ("IPO-MIB", "ipoGenSDcardNotificationsGroup"), ("IPO-MIB", "ipoGenSDcardNotificationObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGen6Compliance = ipoGen6Compliance.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGen6Compliance.setDescription('The compliance statement for IP Office agents which implement\n         version 2.00.03 and later versions of this MIB.')
ipoGen7Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 1, 7)).setObjects(("IPO-MIB", "ipoGenv2NotificationObjectsGroup"), ("IPO-MIB", "ipoGenEntGenNotificationsGroup"), ("IPO-MIB", "ipoGenSvcNotificationsGroup"), ("IPO-MIB", "ipoGenSvcMiscNotificationsGroup"), ("IPO-MIB", "ipoGenSvcMiscNotificationObjectsGroup"), ("IPO-MIB", "ipoGenSOGNotificationObjectsGroup"), ("IPO-MIB", "ipoGenSvcSOGNotificationsGroup"), ("IPO-MIB", "ipoGenUPriLicSvcNotificationsGroup"), ("IPO-MIB", "ipoGenSvcQoSMonNotificationsGroup"), ("IPO-MIB", "ipoGenSvcSystemShutdownNotificationsGroup"), ("IPO-MIB", "ipoGenSvcSystemShutdownObjectGroup"), ("IPO-MIB", "ipoGenSDcardNotificationsGroup"), ("IPO-MIB", "ipoGenSDcardNotificationObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGen7Compliance = ipoGen7Compliance.setStatus('current')
if mibBuilder.loadTexts: ipoGen7Compliance.setDescription('The compliance statement for IP Office agents which implement\n         version 2.00.07 and later versions of this MIB.')
ipoGenNotificationObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 1)).setObjects(("IPO-MIB", "ipoGTEventSeverity"), ("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventEntity"), ("IPO-MIB", "ipoGTEventLoopbackStatus"), ("IPO-MIB", "ipoGTEventAppEntity"), ("IPO-MIB", "ipoGTEventAppEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenNotificationObjectsGroup = ipoGenNotificationObjectsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenNotificationObjectsGroup.setDescription('Objects that are contained in IP Office wide notifications.\n\n        **NOTE: This group is deprecated and replaced by\n          ipoGenv2NotificationObjectsGroup.')
ipoGenNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 2)).setObjects(("IPO-MIB", "ipoGenEntityFailureEvent"), ("IPO-MIB", "ipoGenEntityOperationalEvent"), ("IPO-MIB", "ipoGenEntityErrorEvent"), ("IPO-MIB", "ipoGenEntityChangeEvent"), ("IPO-MIB", "ipoGenLKSCommsFailureEvent"), ("IPO-MIB", "ipoGenLKSCommsOperationalEvent"), ("IPO-MIB", "ipoGenLKSCommsErrorEvent"), ("IPO-MIB", "ipoGenLKSCommsChangeEvent"), ("IPO-MIB", "ipoGenLoopbackEvent"), ("IPO-MIB", "ipoGenAppOperationalEvent"), ("IPO-MIB", "ipoGenAppFailureEvent"), ("IPO-MIB", "ipoGenAppEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenNotificationsGroup = ipoGenNotificationsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenNotificationsGroup.setDescription('The notifications which indicate specific changes in the\n        state of the IP Office system.\n\n        **NOTE: This group is deprecated and replaced by\n          ipoGenSvcNotificationsGroup.')
ipoGenSOGNotificationObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 3)).setObjects(("IPO-MIB", "ipoGTEventHostAddress"), ("IPO-MIB", "ipoGTEventSOGMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenSOGNotificationObjectsGroup = ipoGenSOGNotificationObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenSOGNotificationObjectsGroup.setDescription('Objects that are contained in IP Office SOG notifications.')
ipoGenSOGNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 4)).setObjects(("IPO-MIB", "ipoGenSogHostFailureEvent"), ("IPO-MIB", "ipoGenSogModeChangeEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenSOGNotificationsGroup = ipoGenSOGNotificationsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ipoGenSOGNotificationsGroup.setDescription('The notifications which indicate specific changes in the\n        state of the IP Office SOG system.\n\n        **NOTE: This group is deprecated and replaced by\n          ipoGenSvcNotificationsGroup.')
ipoGenv2NotificationObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 5)).setObjects(("IPO-MIB", "ipoGTEventDateTime"), ("IPO-MIB", "ipoGTEventEntity"), ("IPO-MIB", "ipoGTEventAppEntity"), ("IPO-MIB", "ipoGTEventAppEvent"), ("IPO-MIB", "ipoGTEventStdSeverity"), ("IPO-MIB", "ipoGTEventDevID"), ("IPO-MIB", "ipoGTEventEntityName"), ("IPO-MIB", "ipoGTEventLoopbackStatusBits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenv2NotificationObjectsGroup = ipoGenv2NotificationObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenv2NotificationObjectsGroup.setDescription('Objects that are contained in IP Office wide notifications.')
ipoGenEntGenNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 6)).setObjects(("IPO-MIB", "ipoGenColdStartSvcEvent"), ("IPO-MIB", "ipoGenWarmStartSvcEvent"), ("IPO-MIB", "ipoGenLinkDownSvcEvent"), ("IPO-MIB", "ipoGenLinkUpSvcEvent"), ("IPO-MIB", "ipoGenAuthFailureSvcEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenEntGenNotificationsGroup = ipoGenEntGenNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenEntGenNotificationsGroup.setDescription('IP Office Enterpise versions of the generic traps as defined\n        RFC1215 that provide more identification of the entity\n        concerned.')
ipoGenSvcNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 7)).setObjects(("IPO-MIB", "ipoGenEntityFailureSvcEvent"), ("IPO-MIB", "ipoGenEntityOperationalSvcEvent"), ("IPO-MIB", "ipoGenEntityErrorSvcEvent"), ("IPO-MIB", "ipoGenEntityChangeSvcEvent"), ("IPO-MIB", "ipoGenLKSCommsFailureSvcEvent"), ("IPO-MIB", "ipoGenLKSCommsOperationalSvcEvent"), ("IPO-MIB", "ipoGenLKSCommsErrorSvcEvent"), ("IPO-MIB", "ipoGenLKSCommsChangeSvcEvent"), ("IPO-MIB", "ipoGenLoopbackSvcEvent"), ("IPO-MIB", "ipoGenAppOperationalSvcEvent"), ("IPO-MIB", "ipoGenAppFailureSvcEvent"), ("IPO-MIB", "ipoGenAppSvcEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenSvcNotificationsGroup = ipoGenSvcNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenSvcNotificationsGroup.setDescription('The service notifications which indicate specific changes in\n        the state of the IP Office system.')
ipoGenSvcSOGNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 8)).setObjects(("IPO-MIB", "ipoGenSogHostFailureSvcEvent"), ("IPO-MIB", "ipoGenSogModeChangeSvcEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenSvcSOGNotificationsGroup = ipoGenSvcSOGNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenSvcSOGNotificationsGroup.setDescription('The service notifications which indicate specific changes in\n        the state of the IP Office SOG system.')
ipoGenUPriLicSvcNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 9)).setObjects(("IPO-MIB", "ipoGenUPriLicChansReducedSvcEvent"), ("IPO-MIB", "ipoGenUPriLicCallRejectedSvcEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenUPriLicSvcNotificationsGroup = ipoGenUPriLicSvcNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenUPriLicSvcNotificationsGroup.setDescription('The service notifications which indicate specific changes\n        related to the state licensing and Universal PRI trunks on the\n        IP Office system.')
ipoGenQosMonNotificationObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 10)).setObjects(("IPO-MIB", "ipoGTEventQoSMonJitter"), ("IPO-MIB", "ipoGTEventQoSMonRndTrip"), ("IPO-MIB", "ipoGTEventQoSMonPktLoss"), ("IPO-MIB", "ipoGTEventQoSMonCallId"), ("IPO-MIB", "ipoGTEventQoSMonDevType"), ("IPO-MIB", "ipoGTEventQoSMonDevId"), ("IPO-MIB", "ipoGTEventQoSMonExtnNo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenQosMonNotificationObjectsGroup = ipoGenQosMonNotificationObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenQosMonNotificationObjectsGroup.setDescription('Additional objects that are contained in IP Office QOS\n        Monitoring notifications.')
ipoGenSvcQoSMonNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 11)).setObjects(("IPO-MIB", "ipoGenQoSMonSvcEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenSvcQoSMonNotificationsGroup = ipoGenSvcQoSMonNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenSvcQoSMonNotificationsGroup.setDescription('The service notifications which indicate specific changes\n        related to the value of QoS parameters for a call on a physical\n        entity on the IP Office system.')
ipoGenSvcSystemShutdownObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 12)).setObjects(("IPO-MIB", "ipoGTEventSystemShutdownSource"), ("IPO-MIB", "ipoGTEventSystemShutdownTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenSvcSystemShutdownObjectGroup = ipoGenSvcSystemShutdownObjectGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenSvcSystemShutdownObjectGroup.setDescription('Additional objects that are contained in the system shutdown \n        notification')
ipoGenSvcSystemShutdownNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 13)).setObjects(("IPO-MIB", "ipoGenSystemShutdownSvcEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenSvcSystemShutdownNotificationsGroup = ipoGenSvcSystemShutdownNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenSvcSystemShutdownNotificationsGroup.setDescription('The service notifications which indicate specific changes\n        related to the system shutdown performed on the IP Office system.')
ipoGenSDcardNotificationObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 14)).setObjects(("IPO-MIB", "ipoGTEventMemoryCardSlotId"), ("IPO-MIB", "ipoGTEventNoValidKeyReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenSDcardNotificationObjectsGroup = ipoGenSDcardNotificationObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenSDcardNotificationObjectsGroup.setDescription('Additional objects that are contained in IP Office SD card\n        notifications.')
ipoGenSDcardNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 15)).setObjects(("IPO-MIB", "ipoGenAppOperationalSvcEvent"), ("IPO-MIB", "ipoGenAppFailureSvcEvent"), ("IPO-MIB", "ipoGenAppSvcEvent"), ("IPO-MIB", "ipoGenSystemRunningBackupEvent"), ("IPO-MIB", "ipoGenInvalidMemoryCardEvent"), ("IPO-MIB", "ipoGenNoLicenceKeyDongleEvent"), ("IPO-MIB", "ipoGenMemoryCardCapacityEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenSDcardNotificationsGroup = ipoGenSDcardNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenSDcardNotificationsGroup.setDescription('The notifications associated with IP Office SD card usage.')
ipoGenSvcMiscNotificationObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 16)).setObjects(("IPO-MIB", "ipoGTEventReason"), ("IPO-MIB", "ipoGTEventData"), ("IPO-MIB", "ipoGTEventAlarmDescription"), ("IPO-MIB", "ipoGTEventAlarmRemedialAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenSvcMiscNotificationObjectsGroup = ipoGenSvcMiscNotificationObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenSvcMiscNotificationObjectsGroup.setDescription('Additional objects that are contained in IP Office\n        notifications to provide additional information to\n        end user')
ipoGenSvcMiscNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6889, 2, 2, 1, 3, 2, 17)).setObjects(("IPO-MIB", "ipoGenConfigFailureSvcEvent"), ("IPO-MIB", "ipoGenConfigOperationalSvcEvent"), ("IPO-MIB", "ipoGenConfigErrorSvcEvent"), ("IPO-MIB", "ipoGenConfigChangeSvcEvent"), ("IPO-MIB", "ipoGenServiceFailureSvcEvent"), ("IPO-MIB", "ipoGenServiceOperationalSvcEvent"), ("IPO-MIB", "ipoGenServiceErrorSvcEvent"), ("IPO-MIB", "ipoGenServiceChangeSvcEvent"), ("IPO-MIB", "ipoGenTrunkFailureSvcEvent"), ("IPO-MIB", "ipoGenTrunkOperationalSvcEvent"), ("IPO-MIB", "ipoGenTrunkErrorSvcEvent"), ("IPO-MIB", "ipoGenTrunkChangeSvcEvent"), ("IPO-MIB", "ipoGenLinkFailureSvcEvent"), ("IPO-MIB", "ipoGenLinkOperationalSvcEvent"), ("IPO-MIB", "ipoGenLinkErrorSvcEvent"), ("IPO-MIB", "ipoGenLinkChangeSvcEvent"), ("IPO-MIB", "ipoGenEmergencyCallSvcEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipoGenSvcMiscNotificationsGroup = ipoGenSvcMiscNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ipoGenSvcMiscNotificationsGroup.setDescription('The notifications indicating change in status\n        related to four areas: Configuration, Sevice,\n        Trunk and Link')
mibBuilder.exportSymbols("IPO-MIB", ipoGenLKSCommsChangeSvcEvent=ipoGenLKSCommsChangeSvcEvent, ipoGTEventLoopbackStatus=ipoGTEventLoopbackStatus, ipoGTEventEntityName=ipoGTEventEntityName, ipoGenCompliances=ipoGenCompliances, ipoGenSvcSystemShutdownObjectGroup=ipoGenSvcSystemShutdownObjectGroup, ipoGen4Compliance=ipoGen4Compliance, ipoGenMibs=ipoGenMibs, ipoGenLKSCommsChangeEvent=ipoGenLKSCommsChangeEvent, ipoGenLinkDownSvcEvent=ipoGenLinkDownSvcEvent, ipoGenAppOperationalSvcEvent=ipoGenAppOperationalSvcEvent, ipoGenSogHostFailureSvcEvent=ipoGenSogHostFailureSvcEvent, ipoGeneric=ipoGeneric, ipoGenLinkErrorSvcEvent=ipoGenLinkErrorSvcEvent, ipoGenNotificationObjectsGroup=ipoGenNotificationObjectsGroup, ipoGenSogModeChangeSvcEvent=ipoGenSogModeChangeSvcEvent, ipoGTEvents=ipoGTEvents, ipoGTEventData=ipoGTEventData, ipoGTEventAppEvent=ipoGTEventAppEvent, ipoGenColdStartSvcEvent=ipoGenColdStartSvcEvent, ipoGenLinkUpSvcEvent=ipoGenLinkUpSvcEvent, ipoGen5Compliance=ipoGen5Compliance, ipoGen3Compliance=ipoGen3Compliance, ipoGenSvcMiscNotificationsGroup=ipoGenSvcMiscNotificationsGroup, ipoGTEventStdSeverity=ipoGTEventStdSeverity, ipoGenQoSMonSvcEvent=ipoGenQoSMonSvcEvent, ipoGen6Compliance=ipoGen6Compliance, ipoGenQosMonNotificationObjectsGroup=ipoGenQosMonNotificationObjectsGroup, ipoGenSvcQoSMonNotificationsGroup=ipoGenSvcQoSMonNotificationsGroup, ipoGTEventQoSMonJitter=ipoGTEventQoSMonJitter, ipoGenEntityChangeEvent=ipoGenEntityChangeEvent, PYSNMP_MODULE_ID=ipoMIB, ipoGenEntGenNotificationsGroup=ipoGenEntGenNotificationsGroup, ipoGenSystemRunningBackupEvent=ipoGenSystemRunningBackupEvent, ipoGenEntityErrorEvent=ipoGenEntityErrorEvent, ipoGen7Compliance=ipoGen7Compliance, ipoGenSystemShutdownSvcEvent=ipoGenSystemShutdownSvcEvent, ipoGenConformance=ipoGenConformance, ipoGenAppOperationalEvent=ipoGenAppOperationalEvent, ipoGenUPriLicSvcNotificationsGroup=ipoGenUPriLicSvcNotificationsGroup, ipoGenEmergencyCallSvcEvent=ipoGenEmergencyCallSvcEvent, ipoGenEntityOperationalSvcEvent=ipoGenEntityOperationalSvcEvent, ipoGenLKSCommsOperationalSvcEvent=ipoGenLKSCommsOperationalSvcEvent, ipoGenEntityOperationalEvent=ipoGenEntityOperationalEvent, ipoGTEventDevID=ipoGTEventDevID, ipoGTEventEntity=ipoGTEventEntity, ipoGTEventHostAddress=ipoGTEventHostAddress, ipoGenInvalidMemoryCardEvent=ipoGenInvalidMemoryCardEvent, ipoGenTrunkFailureSvcEvent=ipoGenTrunkFailureSvcEvent, ipoGenTraps=ipoGenTraps, ipoGenLoopbackSvcEvent=ipoGenLoopbackSvcEvent, ipoGenConfigErrorSvcEvent=ipoGenConfigErrorSvcEvent, ipoGenUPriLicChansReducedSvcEvent=ipoGenUPriLicChansReducedSvcEvent, ipoGenEntityErrorSvcEvent=ipoGenEntityErrorSvcEvent, ipoGenMemoryCardCapacityEvent=ipoGenMemoryCardCapacityEvent, ipoGenLoopbackEvent=ipoGenLoopbackEvent, ipoGenConfigFailureSvcEvent=ipoGenConfigFailureSvcEvent, ipoGenConfigOperationalSvcEvent=ipoGenConfigOperationalSvcEvent, ipoGenConfigChangeSvcEvent=ipoGenConfigChangeSvcEvent, ipoGenSDcardNotificationObjectsGroup=ipoGenSDcardNotificationObjectsGroup, ipoGTEventQoSMonDevType=ipoGTEventQoSMonDevType, ipoGTEventAlarmRemedialAction=ipoGTEventAlarmRemedialAction, ipoGenSvcSOGNotificationsGroup=ipoGenSvcSOGNotificationsGroup, ipoGenEntityChangeSvcEvent=ipoGenEntityChangeSvcEvent, ipoGenLKSCommsErrorEvent=ipoGenLKSCommsErrorEvent, ipoGenSogHostFailureEvent=ipoGenSogHostFailureEvent, ipoGenLinkOperationalSvcEvent=ipoGenLinkOperationalSvcEvent, ipoMIB=ipoMIB, ipoGenAppFailureEvent=ipoGenAppFailureEvent, ipoGTEventAppEntity=ipoGTEventAppEntity, ipoGenSvcSystemShutdownNotificationsGroup=ipoGenSvcSystemShutdownNotificationsGroup, ipoGenAppEvent=ipoGenAppEvent, ipoGenTrunkErrorSvcEvent=ipoGenTrunkErrorSvcEvent, ipoGTEventQoSMonDevId=ipoGTEventQoSMonDevId, ipoGenAuthFailureSvcEvent=ipoGenAuthFailureSvcEvent, ipoGenv2NotificationObjectsGroup=ipoGenv2NotificationObjectsGroup, ipoGenEntityFailureSvcEvent=ipoGenEntityFailureSvcEvent, ipoGTEventSystemShutdownSource=ipoGTEventSystemShutdownSource, ipoGenLinkChangeSvcEvent=ipoGenLinkChangeSvcEvent, ipoGenAppFailureSvcEvent=ipoGenAppFailureSvcEvent, ipoGenSDcardNotificationsGroup=ipoGenSDcardNotificationsGroup, ipoGenLKSCommsOperationalEvent=ipoGenLKSCommsOperationalEvent, ipoGenSvcMiscNotificationObjectsGroup=ipoGenSvcMiscNotificationObjectsGroup, ipoGenSvcNotificationsGroup=ipoGenSvcNotificationsGroup, ipoGenTrunkOperationalSvcEvent=ipoGenTrunkOperationalSvcEvent, ipoGTEventLoopbackStatusBits=ipoGTEventLoopbackStatusBits, ipoGenUPriLicCallRejectedSvcEvent=ipoGenUPriLicCallRejectedSvcEvent, ipoGenServiceFailureSvcEvent=ipoGenServiceFailureSvcEvent, ipoGenTrunkChangeSvcEvent=ipoGenTrunkChangeSvcEvent, ipoGenCompliance=ipoGenCompliance, ipoGTObjects=ipoGTObjects, ipoGenLinkFailureSvcEvent=ipoGenLinkFailureSvcEvent, ipoGenSOGNotificationObjectsGroup=ipoGenSOGNotificationObjectsGroup, ipoGTEventNoValidKeyReason=ipoGTEventNoValidKeyReason, ipoGenEntityFailureEvent=ipoGenEntityFailureEvent, ipoGTEventQoSMonCallId=ipoGTEventQoSMonCallId, ipoGenLKSCommsFailureEvent=ipoGenLKSCommsFailureEvent, ipoGenSogModeChangeEvent=ipoGenSogModeChangeEvent, ipoGTEventQoSMonRndTrip=ipoGTEventQoSMonRndTrip, ipoGTEventQoSMonPktLoss=ipoGTEventQoSMonPktLoss, ipoGenSOGNotificationsGroup=ipoGenSOGNotificationsGroup, ipoGTEventReason=ipoGTEventReason, ipoGenServiceErrorSvcEvent=ipoGenServiceErrorSvcEvent, ipoGTEventQoSMonExtnNo=ipoGTEventQoSMonExtnNo, ipoGenNotificationsGroup=ipoGenNotificationsGroup, ipoGTEventSeverity=ipoGTEventSeverity, ipoGenLKSCommsFailureSvcEvent=ipoGenLKSCommsFailureSvcEvent, ipoGenServiceChangeSvcEvent=ipoGenServiceChangeSvcEvent, ipoGen2Compliance=ipoGen2Compliance, ipoGTEventMemoryCardSlotId=ipoGTEventMemoryCardSlotId, ipoGTEventDateTime=ipoGTEventDateTime, ipoGTEventAlarmDescription=ipoGTEventAlarmDescription, ipoGenAppSvcEvent=ipoGenAppSvcEvent, ipoGTEventSOGMode=ipoGTEventSOGMode, ipoGenGroups=ipoGenGroups, ipoGenServiceOperationalSvcEvent=ipoGenServiceOperationalSvcEvent, ipoGenNoLicenceKeyDongleEvent=ipoGenNoLicenceKeyDongleEvent, ipoGTEventSystemShutdownTimeout=ipoGTEventSystemShutdownTimeout, ipoGenLKSCommsErrorSvcEvent=ipoGenLKSCommsErrorSvcEvent, ipoGenWarmStartSvcEvent=ipoGenWarmStartSvcEvent)
