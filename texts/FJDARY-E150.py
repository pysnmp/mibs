#
# PySNMP MIB module FJDARY-E150 (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/fujitsu/FJDARY-E150
# Produced by pysmi-1.1.12 at Thu Nov 28 02:58:07 2024
# On host fv-az885-149 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, iso, Bits, Gauge32, enterprises, TimeTicks, Counter32, MibIdentifier, ModuleIdentity, Counter64, Integer32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Bits", "Gauge32", "enterprises", "TimeTicks", "Counter32", "MibIdentifier", "ModuleIdentity", "Counter64", "Integer32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType")
PhysAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "DisplayString", "TextualConvention")
fjdarye150 = ModuleIdentity((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150))
fjdarye150.setRevisions(('2014-05-13 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fjdarye150.setRevisionsDescriptions(('v3.0',))
if mibBuilder.loadTexts: fjdarye150.setLastUpdated('201405130000Z')
if mibBuilder.loadTexts: fjdarye150.setOrganization('')
if mibBuilder.loadTexts: fjdarye150.setContactInfo('')
if mibBuilder.loadTexts: fjdarye150.setDescription('')
class FjdaryComponentStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("normal", 1), ("alarm", 2), ("warning", 3), ("invalid", 4), ("maintenance", 5), ("undefined", 6))

fujitsu = MibIdentifier((1, 3, 6, 1, 4, 1, 211))
product = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1))
storage = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21))
nsp = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1))
fjdarySsp = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 1))
fjdaryPconfig = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2))
fjdaryCm = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1))
fjdaryCmcpu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 2))
fjdaryCa = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 3))
fjdaryCmmemory = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 4))
fjdaryBud = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 5))
fjdaryCmfan = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 6))
fjdaryBcu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 7))
fjdaryBtu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 8))
fjdaryScu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9))
fjdaryCe = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 10))
fjdaryCeinletthml = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 11))
fjdaryCethml = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 12))
fjdaryCpsu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 13))
fjdaryDe = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 14))
fjdaryIom = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15))
fjdaryPsu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 16))
fjdaryDeinletthml = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 17))
fjdaryDethml = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 18))
fjdaryDisk = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19))
fjdaryLanport = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20))
fjdaryFem = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 21))
fjdaryPfm = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 22))
fjdaryLconfig = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3))
fjdaryCaPort = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1))
fjdaryOlu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 2))
fjdarySlu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 3))
fjdaryRlu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 4))
fjdaryDlu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 5))
fjdaryMlu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 6))
fjdaryOpenmap = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7))
fjdaryLunmap = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 8))
fjdaryAffinityGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 9))
fjdaryHostwwn = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 10))
fjdaryResetpath = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 11))
fjdaryHostiscsi = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 12))
fjdaryHostResponse = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 13))
fjdarySensor = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13))
fjdaryMachinePower = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1))
fjdaryEncPower = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2))
fjdaryMachineTemp = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3))
fjdaryEncTemp = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4))
fjdaryFirm = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 4))
fjdaryPerformance = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5))
fjdaryPfInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 1))
fjdaryPfOlu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2))
fjdaryPfDisk = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 3))
fjdaryPfCm = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 4))
fjdaryPfCaPort = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 5))
fjdaryPfDtOlu = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 6))
fjdaryPfDtDisk = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 7))
fjdaryPfDtCm = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 8))
fjdaryPfDtCaPort = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 9))
fjdaryPfRaPort = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 10))
fjdaryPfDtRaPort = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 11))
fjdaryPfPfm = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 12))
fjdaryPfDtPfm = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 13))
fjdaryPfCmCore = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14))
fjdaryPfDtCmCore = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 15))
fjdaryPfCmNas = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16))
fjdaryPfDtCmNas = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 17))
fjdaryPfCmNasCore = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18))
fjdaryPfDtCmNasCore = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 19))
fjdaryPfCmNasCoreIOWait = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20))
fjdaryPfDtCmNasCoreIOWait = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 21))
fjdaryPfCaPortNas = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 22))
fjdaryPfDtCaPortNas = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 23))
fjdaryPfCmNasVol = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24))
fjdaryPfDtCmNasVol = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 25))
fjdaryManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14))
fjdaryMgtMachineInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 1))
fjdaryMgtOpVolume = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 2))
fjdaryMgtRaidGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 3))
application = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 4))
aplNetwork = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 4, 1))
aplNetDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 4, 1, 1))
aplNetStorage = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126))
aplNetNsp = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1))
aplNetFjdarye150 = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150))
aplNetFjdarye150Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0))
fjdaryUnitStatus = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("unused", 2), ("ok", 3), ("warning", 4), ("failed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryUnitStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryUnitStatus.setDescription("Overall status of this system. Status becomes warning or failed\n         when there are broken parts in the system.\n         But, it doesn't become warning or failed when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryTrapItemId = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryTrapItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryTrapItemId.setDescription('This object is used to store the identification number of parts for\n         which maintenance is necessary when trap is transmitted.')
fjdaryTrapSensorInfo = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryTrapSensorInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryTrapSensorInfo.setDescription('This object is used to store detail information of sensor when trap is\n         transmitted.')
fjdaryTrapMaintenanceInfo = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryTrapMaintenanceInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryTrapMaintenanceInfo.setDescription('This object is used to store detail information of maintenance when\n         trap is transmitted.')
fjdaryTrapWarningInfo = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryTrapWarningInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryTrapWarningInfo.setDescription('This object is used to store detail information of warning when trap\n         is transmitted.')
fjdaryTrapMessage = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryTrapMessage.setStatus('current')
if mibBuilder.loadTexts: fjdaryTrapMessage.setDescription('This object is used to store detail messages when all trap is\n         transmitted.')
fjdaryTrapLinkStatusInfo = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linkup", 1), ("linkdown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryTrapLinkStatusInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryTrapLinkStatusInfo.setDescription('This object is used to store detail information of CA port link\n         status when trap is transmitted.')
fjdaryMIBversion = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMIBversion.setStatus('current')
if mibBuilder.loadTexts: fjdaryMIBversion.setDescription('This is the version for this MIB.\n         This defines a revision of v3.0')
fjdarySspMachineId = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdarySspMachineId.setStatus('current')
if mibBuilder.loadTexts: fjdarySspMachineId.setDescription('This value indicates the identification number of this system.\n         ttssssssssssssmmmmmmmmmmmmccssssssssssss\n         | |           |           | |\n         | |           |           | +-serial number(12byte)\n         | |           |           +-check code(2byte)\n         | |           +-model name(12byte)\n         | +-series name(12byte)\n         +-type code(2byte)')
fjdarySspConfigDate = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdarySspConfigDate.setStatus('current')
if mibBuilder.loadTexts: fjdarySspConfigDate.setDescription('The last date when the configuration was applied.\n         yyyymmddHHMMSS\n         |   | | | | |\n         |   | | | | +-second\n         |   | | | +-minute\n         |   | | +-hour\n         |   | +-day\n         |   +-month\n         +-year')
fjdarySspWwnn = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdarySspWwnn.setStatus('current')
if mibBuilder.loadTexts: fjdarySspWwnn.setDescription('The value of this object indecates the World Wide Node Name.')
fjdarySspVenderId = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdarySspVenderId.setStatus('current')
if mibBuilder.loadTexts: fjdarySspVenderId.setDescription('The value of this object indecates the Vender ID.')
fjdarySspProductId = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdarySspProductId.setStatus('current')
if mibBuilder.loadTexts: fjdarySspProductId.setDescription('The value of this object indecates the Product ID.')
fjdarySspBoxId = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdarySspBoxId.setStatus('current')
if mibBuilder.loadTexts: fjdarySspBoxId.setDescription('This value of a meaning within a user system. An initial value is the\n         same as fjdarySspMachineId.')
fjdarySspMaintenanceServiceLevel = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdarySspMaintenanceServiceLevel.setStatus('current')
if mibBuilder.loadTexts: fjdarySspMaintenanceServiceLevel.setDescription('The value of this object indecates the support level of maintenance\n         service. Level2 supports interface that strengthens the security\n         level from level1.')
fjdaryCmCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmCount.setDescription("The number of CM(controller module)'s informations\n         (regardless of their current state) present on this system.")
fjdaryCmTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 2), )
if mibBuilder.loadTexts: fjdaryCmTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmTable.setDescription('')
fjdaryCmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryCmIndex"))
if mibBuilder.loadTexts: fjdaryCmEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmEntry.setDescription('')
fjdaryCmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmIndex.setDescription('The value of this object uniquely identifies this fjdaryCm entry.')
fjdaryCmItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmItemId.setDescription('The value of this object indicates the identification number\n         of this CM.\n         the following definition:\n           0x0100MM00\n                 |\n                 +-fjdaryCmModuleId')
fjdaryCmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmStatus.setDescription("The value of this object indicates the state of this CM.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryCmSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmSubStatus.setDescription('The value of this object indicates the state of this CM.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryCmModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmModuleId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmModuleId.setDescription('The value of this object indicates the module indicates of this CM.\n         0x10-0x17 shows CM. bit0-2 shows the CM slot number.')
fjdaryCmRole = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmRole.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmRole.setDescription('The value of this object indicates the role of this CM.')
fjdaryCmPartNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmPartNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmPartNo.setDescription('The value of this object indicates the Part No of this CM.')
fjdaryCmSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmSerialNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmSerialNo.setDescription('The value of this object indicates the Serial No of this CM.')
fjdaryCmRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 1, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmRevision.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmRevision.setDescription('The value of this object indicates the Revision of this CM.')
fjdaryCmcpuCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmcpuCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmcpuCount.setDescription('The number of CM CPU informations\n         (regardless of their current state) present on this system.')
fjdaryCmcpuTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 2, 2), )
if mibBuilder.loadTexts: fjdaryCmcpuTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmcpuTable.setDescription('')
fjdaryCmcpuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 2, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryCmcpuIndex"))
if mibBuilder.loadTexts: fjdaryCmcpuEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmcpuEntry.setDescription('')
fjdaryCmcpuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmcpuIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmcpuIndex.setDescription('The value of this object uniquely identifies this fjdaryCmcpu entry.')
fjdaryCmcpuItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmcpuItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmcpuItemId.setDescription('The value of this object indicates the identification number\n         of this CM CPU.\n         the following definition:\n           0x0100MM00\n                 |\n                 +-fjdaryCmcpuModuleId')
fjdaryCmcpuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 2, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmcpuStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmcpuStatus.setDescription("The value of this object indicates the state of this CM CPU.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryCmcpuSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 2, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmcpuSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmcpuSubStatus.setDescription('The value of this object indicates the state of this CM CPU.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryCmcpuModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmcpuModuleId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmcpuModuleId.setDescription('The value of this object indicates the module indicates of this\n         CM CPU.\n         0x10-0x17 shows CM. bit0-2 shows the CM slot number.')
fjdaryCmcpuRole = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmcpuRole.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmcpuRole.setDescription('The value of this object indicates the role of this CM CPU.')
fjdaryCmcpuClock = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmcpuClock.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmcpuClock.setDescription('This shows CPU Clock of CM CPU. The unit is KHz.')
fjdaryCaCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaCount.setDescription("The number of CA(channel adapter)'s informations\n         (regardless of their current state) present on this system.")
fjdaryCaTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 3, 2), )
if mibBuilder.loadTexts: fjdaryCaTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaTable.setDescription('')
fjdaryCaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 3, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryCaIndex"))
if mibBuilder.loadTexts: fjdaryCaEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaEntry.setDescription('')
fjdaryCaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaIndex.setDescription('The value of this object uniquely identifies this fjdaryCa entry.')
fjdaryCaItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaItemId.setDescription('The value of this object indicates the identification number\n         of this CA.\n         the following definition:\n           0x1000MM00\n                 |\n                 +-fjdaryCaModuleId')
fjdaryCaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 3, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaStatus.setDescription("The value of this object indicates the state of this CA.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryCaSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 3, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaSubStatus.setDescription('The value of this object indicates the state of this CA.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryCaModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaModuleId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaModuleId.setDescription('The value of this object indicates the module indicates of this CA.\n         0x40-0x7F shows CA. bit0-2 shows the CM slot number.\n         bit4-5 shows the CA slot number in CM.\n         bit3 shows the processor number in CA.')
fjdaryCaType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaType.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaType.setDescription('The value of this object indicates the type of this CA.')
fjdaryCmmemoryCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmmemoryCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmmemoryCount.setDescription("The number of CM memory's informations\n         (regardless of their current state) present on this system.")
fjdaryCmmemoryTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 4, 2), )
if mibBuilder.loadTexts: fjdaryCmmemoryTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmmemoryTable.setDescription('')
fjdaryCmmemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 4, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryCmmemoryIndex"))
if mibBuilder.loadTexts: fjdaryCmmemoryEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmmemoryEntry.setDescription('')
fjdaryCmmemoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmmemoryIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmmemoryIndex.setDescription('The value of this object uniquely identifies this fjdaryCmmemory\n         entry.')
fjdaryCmmemoryItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmmemoryItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmmemoryItemId.setDescription('The value of this object indicates the identification number\n         of this CM memory.\n         the following definition:\n           0x0b00MM00\n                 |\n                 +-fjdaryCmModuleId')
fjdaryCmmemoryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 4, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmmemoryStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmmemoryStatus.setDescription("The value of this object indicates the state of this CM memory.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryCmmemorySubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 4, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmmemorySubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmmemorySubStatus.setDescription('The value of this object indicates the state of this CM memory.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryCmmemoryCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmmemoryCapacity.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmmemoryCapacity.setDescription('The value of this object indicates the capacity of this CM memory.\n         The unit is MB.')
fjdaryCmmemoryPartNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 4, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmmemoryPartNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmmemoryPartNo.setDescription('The value of this object indicates the Part No of this CM memory.')
fjdaryCmmemorySerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 4, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmmemorySerialNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmmemorySerialNo.setDescription('The value of this object indicates the Serial No of this CM memory.')
fjdaryBudCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBudCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryBudCount.setDescription("The number of BUD's informations\n         (regardless of their current state) present on this system.")
fjdaryBudTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 5, 2), )
if mibBuilder.loadTexts: fjdaryBudTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryBudTable.setDescription('')
fjdaryBudEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 5, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryBudIndex"))
if mibBuilder.loadTexts: fjdaryBudEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryBudEntry.setDescription('')
fjdaryBudIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBudIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryBudIndex.setDescription('The value of this object uniquely identifies this fjdaryBud entry.')
fjdaryBudItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBudItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryBudItemId.setDescription('The value of this object indicates the identification number\n         of this BUD.\n         the following definition:\n           0x0c00MM00\n                 |\n                 +-fjdaryCmModuleId')
fjdaryBudStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 5, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBudStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryBudStatus.setDescription("The value of this object indicates the state of this BUD.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryBudSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 5, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBudSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryBudSubStatus.setDescription('The value of this object indicates the state of this BUD.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryCmfanCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmfanCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmfanCount.setDescription("The number of CM fan's informations\n         (regardless of their current state) present on this system.")
fjdaryCmfanTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 6, 2), )
if mibBuilder.loadTexts: fjdaryCmfanTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmfanTable.setDescription('')
fjdaryCmfanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 6, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryCmfanIndex"))
if mibBuilder.loadTexts: fjdaryCmfanEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmfanEntry.setDescription('')
fjdaryCmfanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmfanIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmfanIndex.setDescription('The value of this object uniquely identifies this fjdaryCmfan entry.')
fjdaryCmfanItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmfanItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmfanItemId.setDescription('The value of this object indicates the identification number\n         of this CM fan.\n         the following definition:\n           0x0d00MM00\n                 |\n                 +-fjdaryCmModuleId')
fjdaryCmfanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 6, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmfanStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmfanStatus.setDescription("The value of this object indicates the state of this CM fan.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryCmfanSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 6, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCmfanSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCmfanSubStatus.setDescription('The value of this object indicates the state of this CM fan.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryBcuCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBcuCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryBcuCount.setDescription("The number of BCU's informations\n         (regardless of their current state) present on this system.")
fjdaryBcuTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 7, 2), )
if mibBuilder.loadTexts: fjdaryBcuTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryBcuTable.setDescription('')
fjdaryBcuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 7, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryBcuIndex"))
if mibBuilder.loadTexts: fjdaryBcuEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryBcuEntry.setDescription('')
fjdaryBcuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBcuIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryBcuIndex.setDescription('The value of this object uniquely identifies this fjdaryBcu entry.')
fjdaryBcuItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBcuItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryBcuItemId.setDescription('The value of this object indicates the identification number\n         of this BCU.\n         the following definition:\n           0x7500SS00\n                 |\n                 +-slot number')
fjdaryBcuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 7, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBcuStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryBcuStatus.setDescription("The value of this object indicates the state of this BCU.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryBcuSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 7, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBcuSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryBcuSubStatus.setDescription('The value of this object indicates the state of this BCU.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryBtuCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBtuCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryBtuCount.setDescription("The number of BTU's informations\n         (regardless of their current state) present on this system.")
fjdaryBtuTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 8, 2), )
if mibBuilder.loadTexts: fjdaryBtuTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryBtuTable.setDescription('')
fjdaryBtuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 8, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryBtuIndex"))
if mibBuilder.loadTexts: fjdaryBtuEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryBtuEntry.setDescription('')
fjdaryBtuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBtuIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryBtuIndex.setDescription('The value of this object uniquely identifies this fjdaryBtu entry.')
fjdaryBtuItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBtuItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryBtuItemId.setDescription('The value of this object indicates the identification number\n         of this BTU.\n         the following definition:\n           0x7600SS00\n                 |\n                 +-slot number')
fjdaryBtuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 8, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBtuStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryBtuStatus.setDescription("The value of this object indicates the state of this BTU.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryBtuSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 8, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryBtuSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryBtuSubStatus.setDescription('The value of this object indicates the state of this BTU.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryScuCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryScuCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryScuCount.setDescription("The number of SCU's informations\n         (regardless of their current state) present on this system.")
fjdaryScuTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9, 2), )
if mibBuilder.loadTexts: fjdaryScuTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryScuTable.setDescription('')
fjdaryScuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryScuIndex"))
if mibBuilder.loadTexts: fjdaryScuEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryScuEntry.setDescription('')
fjdaryScuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryScuIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryScuIndex.setDescription('The value of this object uniquely identifies this fjdaryScu entry.')
fjdaryScuItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryScuItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryScuItemId.setDescription('The value of this object indicates the identification number\n         of this SCU.\n         the following definition:\n           0x0f00MM00\n                 |\n                 +-fjdaryCmModuleId')
fjdaryScuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryScuStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryScuStatus.setDescription("The value of this object indicates the state of this SCU.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryScuSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryScuSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryScuSubStatus.setDescription('The value of this object indicates the state of this SCU.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryScuVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryScuVoltage.setStatus('current')
if mibBuilder.loadTexts: fjdaryScuVoltage.setDescription('The value of this object indicates the voltage of this SCU.\n         The unit is 1/20 volts.')
fjdaryScuPartNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryScuPartNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryScuPartNo.setDescription('The value of this object indicates the Part No of this SCU.')
fjdaryScuSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryScuSerialNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryScuSerialNo.setDescription('The value of this object indicates the Serial No of this SCU.')
fjdaryScuRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 9, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryScuRevision.setStatus('current')
if mibBuilder.loadTexts: fjdaryScuRevision.setDescription('The value of this object indicates the Revision of this SCU.')
fjdaryCeCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCeCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeCount.setDescription("The number of CE(controller enclosure)'s informations\n         (regardless of their current state) present on this system.")
fjdaryCeTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 10, 2), )
if mibBuilder.loadTexts: fjdaryCeTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeTable.setDescription('')
fjdaryCeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 10, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryCeIndex"))
if mibBuilder.loadTexts: fjdaryCeEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeEntry.setDescription('')
fjdaryCeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCeIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeIndex.setDescription('The value of this object uniquely identifies this fjdaryCe entry.')
fjdaryCeItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCeItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeItemId.setDescription('The value of this object indicates the identification number\n         of this CE.\n         the following definition:\n           0x70000000')
fjdaryCeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 10, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCeStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeStatus.setDescription("The value of this object indicates the state of this CE.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryCeSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 10, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCeSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeSubStatus.setDescription('The value of this object indicates the state of this CE.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryCeinletthmlCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCeinletthmlCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeinletthmlCount.setDescription("The number of CE inlet thermal sensor's informations\n         (regardless of their current state) present on this system.")
fjdaryCeinletthmlTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 11, 2), )
if mibBuilder.loadTexts: fjdaryCeinletthmlTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeinletthmlTable.setDescription('')
fjdaryCeinletthmlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 11, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryCeinletthmlIndex"))
if mibBuilder.loadTexts: fjdaryCeinletthmlEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeinletthmlEntry.setDescription('')
fjdaryCeinletthmlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCeinletthmlIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeinletthmlIndex.setDescription('The value of this object uniquely identifies this fjdaryCeinletthml\n         entry.')
fjdaryCeinletthmlItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCeinletthmlItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeinletthmlItemId.setDescription('The value of this object indicates the identification number\n         of this CE inlet thermal sensor.\n         the following definition:\n         It becomes either definition by the type.\n           0x7b000000           0xdb000000')
fjdaryCeinletthmlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 11, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCeinletthmlStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeinletthmlStatus.setDescription("The value of this object indicates the state of this CE inlet thermal\n         sensor.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryCeinletthmlSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 11, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCeinletthmlSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCeinletthmlSubStatus.setDescription('The value of this object indicates the state of this CE inlet thermal\n         sensor.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryCethmlCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 12, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCethmlCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryCethmlCount.setDescription("The number of CE thermal sensor's informations\n         (regardless of their current state) present on this system.")
fjdaryCethmlTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 12, 2), )
if mibBuilder.loadTexts: fjdaryCethmlTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryCethmlTable.setDescription('')
fjdaryCethmlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 12, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryCethmlIndex"))
if mibBuilder.loadTexts: fjdaryCethmlEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryCethmlEntry.setDescription('')
fjdaryCethmlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCethmlIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryCethmlIndex.setDescription('The value of this object uniquely identifies this fjdaryCethml entry.')
fjdaryCethmlItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCethmlItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCethmlItemId.setDescription('The value of this object indicates the identification number\n         of this CE thermal sensor.\n         the following definition:\n         It becomes either definition by the type.\n           0x7a000000           0xda000000')
fjdaryCethmlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 12, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCethmlStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCethmlStatus.setDescription("The value of this object indicates the state of this CE thermal\n         sensor.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryCethmlSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 12, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCethmlSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCethmlSubStatus.setDescription('The value of this object indicates the state of this CE thermal\n         sensor.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryCpsuCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 13, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCpsuCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryCpsuCount.setDescription("The number of CPSU(power supply unit mounted on CE)'s informations\n         (regardless of their current state) present on this system.")
fjdaryCpsuTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 13, 2), )
if mibBuilder.loadTexts: fjdaryCpsuTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryCpsuTable.setDescription('')
fjdaryCpsuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 13, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryCpsuIndex"))
if mibBuilder.loadTexts: fjdaryCpsuEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryCpsuEntry.setDescription('')
fjdaryCpsuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCpsuIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryCpsuIndex.setDescription('The value of this object uniquely identifies this fjdaryCpsu entry.')
fjdaryCpsuItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCpsuItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryCpsuItemId.setDescription('The value of this object indicates the identification number\n         of this CPSU.\n         the following definition:\n         It becomes either definition by the type.\n           0x7300SS00           0xd20000SS\n                 |                      |\n                 +-slot number          +-slot number')
fjdaryCpsuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 13, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCpsuStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCpsuStatus.setDescription("The value of this object indicates the state of this CPSU.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryCpsuSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 13, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCpsuSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryCpsuSubStatus.setDescription('The value of this object indicates the state of this CPSU.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryCpsuPartNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 13, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCpsuPartNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryCpsuPartNo.setDescription('The value of this object indicates the Part No of this CPSU.')
fjdaryCpsuSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 13, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCpsuSerialNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryCpsuSerialNo.setDescription('The value of this object indicates the Serial No of this CPSU.')
fjdaryCpsuRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 13, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCpsuRevision.setStatus('current')
if mibBuilder.loadTexts: fjdaryCpsuRevision.setDescription('The value of this object indicates the Revision of this CPSU.')
fjdaryDeCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 14, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeCount.setDescription("The number of DE(drive enclosure)'s informations\n         (regardless of their current state) present on this system.")
fjdaryDeTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 14, 2), )
if mibBuilder.loadTexts: fjdaryDeTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeTable.setDescription('')
fjdaryDeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 14, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryDeIndex"))
if mibBuilder.loadTexts: fjdaryDeEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeEntry.setDescription('')
fjdaryDeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeIndex.setDescription('The value of this object uniquely identifies this fjdaryDe entry.')
fjdaryDeItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 14, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeItemId.setDescription('The value of this object indicates the identification number\n         of this DE.\n         the following definition:\n           0xd000DD00\n                 |\n                 +-fjdaryDeId')
fjdaryDeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 14, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeStatus.setDescription("The value of this object indicates the state of this DE.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryDeSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 14, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeSubStatus.setDescription('The value of this object indicates the state of this DE.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryDeId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 14, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeId.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeId.setDescription('The value of this object indicates the identification of this DE.')
fjdaryDeType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 14, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeType.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeType.setDescription('The value of this object indicates the type of this DE.')
fjdaryIomCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryIomCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryIomCount.setDescription("The number of IOM's informations\n         (regardless of their current state) present on this system.")
fjdaryIomTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15, 2), )
if mibBuilder.loadTexts: fjdaryIomTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryIomTable.setDescription('')
fjdaryIomEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryIomIndex"))
if mibBuilder.loadTexts: fjdaryIomEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryIomEntry.setDescription('')
fjdaryIomIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryIomIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryIomIndex.setDescription('The value of this object uniquely identifies this fjdaryIom entry.')
fjdaryIomItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryIomItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryIomItemId.setDescription('The value of this object indicates the identification number\n         of this IOM.\n         the following definition:\n           0x9000DDSS\n                 | |\n                 | +-slot number\n                 +-DE ID')
fjdaryIomStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryIomStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryIomStatus.setDescription("The value of this object indicates the state of this IOM.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryIomSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryIomSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryIomSubStatus.setDescription('The value of this object indicates the state of this IOM.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryIomFirmInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryIomFirmInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryIomFirmInfo.setDescription('The value of this object indicates the firmware information of this\n         IOM.')
fjdaryIomPartNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryIomPartNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryIomPartNo.setDescription('The value of this object indicates the Part No of this IOM.')
fjdaryIomSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryIomSerialNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryIomSerialNo.setDescription('The value of this object indicates the Serial No of this IOM.')
fjdaryIomRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 15, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryIomRevision.setStatus('current')
if mibBuilder.loadTexts: fjdaryIomRevision.setDescription('The value of this object indicates the Revision of this IOM.')
fjdaryPsuCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 16, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPsuCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPsuCount.setDescription("The number of PSU(power supply unit)'s informations\n         (regardless of their current state) present on this system.")
fjdaryPsuTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 16, 2), )
if mibBuilder.loadTexts: fjdaryPsuTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPsuTable.setDescription('')
fjdaryPsuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 16, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPsuIndex"))
if mibBuilder.loadTexts: fjdaryPsuEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPsuEntry.setDescription('')
fjdaryPsuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 16, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPsuIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPsuIndex.setDescription('The value of this object uniquely identifies this fjdaryPsu entry.')
fjdaryPsuItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 16, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPsuItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryPsuItemId.setDescription('The value of this object indicates the identification number\n         of this PSU.\n         the following definition:\n           0xd200DDSS\n                 | |\n                 | +-slot number\n                 +-DE ID')
fjdaryPsuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 16, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPsuStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryPsuStatus.setDescription("The value of this object indicates the state of this PSU.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryPsuSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 16, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPsuSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryPsuSubStatus.setDescription('The value of this object indicates the state of this PSU.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryPsuPartNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 16, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPsuPartNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPsuPartNo.setDescription('The value of this object indicates the Part No of this PSU.')
fjdaryPsuSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 16, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPsuSerialNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPsuSerialNo.setDescription('The value of this object indicates the Serial No of this PSU.')
fjdaryPsuRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 16, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPsuRevision.setStatus('current')
if mibBuilder.loadTexts: fjdaryPsuRevision.setDescription('The value of this object indicates the Revision of this PSU.')
fjdaryDeinletthmlCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 17, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeinletthmlCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeinletthmlCount.setDescription("The number of DE inlet thermal sensor's informations\n         (regardless of their current state) present on this system.")
fjdaryDeinletthmlTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 17, 2), )
if mibBuilder.loadTexts: fjdaryDeinletthmlTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeinletthmlTable.setDescription('')
fjdaryDeinletthmlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 17, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryDeinletthmlIndex"))
if mibBuilder.loadTexts: fjdaryDeinletthmlEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeinletthmlEntry.setDescription('')
fjdaryDeinletthmlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 17, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeinletthmlIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeinletthmlIndex.setDescription('The value of this object uniquely identifies this fjdaryDeinletthml\n         entry.')
fjdaryDeinletthmlItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 17, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeinletthmlItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeinletthmlItemId.setDescription('The value of this object indicates the identification number\n         of this DE inlet thermal sensor.\n         the following definition:\n           0xdb00DD00\n                 |\n                 +-DE ID')
fjdaryDeinletthmlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 17, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeinletthmlStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeinletthmlStatus.setDescription("The value of this object indicates the state of this DE inlet thermal\n         sensor.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryDeinletthmlSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 17, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDeinletthmlSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryDeinletthmlSubStatus.setDescription('The value of this object indicates the state of this DE inlet thermal\n         sensor.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryDethmlCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 18, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDethmlCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryDethmlCount.setDescription("The number of DE thermal sensor's informations\n         (regardless of their current state) present on this system.")
fjdaryDethmlTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 18, 2), )
if mibBuilder.loadTexts: fjdaryDethmlTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryDethmlTable.setDescription('')
fjdaryDethmlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 18, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryDethmlIndex"))
if mibBuilder.loadTexts: fjdaryDethmlEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryDethmlEntry.setDescription('')
fjdaryDethmlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 18, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDethmlIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryDethmlIndex.setDescription('The value of this object uniquely identifies this fjdaryDethml entry.')
fjdaryDethmlItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 18, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDethmlItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryDethmlItemId.setDescription('The value of this object indicates the identification number\n         of this DE thermal sensor.\n         the following definition:\n           0xda00DD00\n                 |\n                 +-DE ID')
fjdaryDethmlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 18, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDethmlStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryDethmlStatus.setDescription("The value of this object indicates the state of this DE thermal\n         sensor.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryDethmlSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 18, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDethmlSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryDethmlSubStatus.setDescription('The value of this object indicates the state of this DE thermal\n         sensor.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryDiskCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskCount.setDescription("The number of DISK's informations\n         (regardless of their current state) present on this system.")
fjdaryDiskTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2), )
if mibBuilder.loadTexts: fjdaryDiskTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskTable.setDescription('')
fjdaryDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryDiskIndex"))
if mibBuilder.loadTexts: fjdaryDiskEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskEntry.setDescription('')
fjdaryDiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskIndex.setDescription('The value of this object uniquely identifies this fjdaryDisk entry.')
fjdaryDiskItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskItemId.setDescription('The value of this object indicates the identification number\n         of this DISK.\n         the following definition:\n           0x8000DDSS\n                 | |\n                 | +-slot number\n                 +-DE ID')
fjdaryDiskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 64, 65, 66, 67, 68, 69))).clone(namedValues=NamedValues(("available", 1), ("broken", 2), ("notavailable", 3), ("notsupported", 4), ("present", 5), ("readying", 6), ("recovering", 7), ("partbroken", 64), ("spare", 65), ("formatting", 66), ("unformatted", 67), ("notexist", 68), ("copying", 69)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskStatus.setDescription("The value of this object indicates the state of this DISK.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)\n\n         available    : Normal state\n         broken       : Abnormal state\n                        (The data can not be guaranteed)\n         notavailable : Not available state\n                        (Because the RAID group is not set)\n         notsupported : Unsupported error state\n         present      : Undefined volume set state\n         readying     : Data readying state\n         recovering   : Data recovering state\n         partbroken   : Abnormal state\n         spare        : Using spare disk state\n         formatting   : Data formatting state\n         unformatted  : Unformatted state\n         notexist     : Not exist\n         copying      : Data copying state")
fjdaryDiskSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 64, 65, 66, 67, 68, 69))).clone(namedValues=NamedValues(("available", 1), ("broken", 2), ("notavailable", 3), ("notsupported", 4), ("present", 5), ("readying", 6), ("recovering", 7), ("partbroken", 64), ("spare", 65), ("formatting", 66), ("unformatted", 67), ("notexist", 68), ("copying", 69)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskSubStatus.setDescription('The value of this object indicates the state of this DISK.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)\n\n         available    : Normal state\n         broken       : Abnormal state\n                        (The data can not be guaranteed)\n         notavailable : Not available state\n                        (Because the RAID group is not set)\n         notsupported : Unsupported error state\n         present      : Undefined volume set state\n         readying     : Data readying state\n         recovering   : Data recovering state\n         partbroken   : Abnormal state\n         spare        : Using spare disk state\n         formatting   : Data formatting state\n         unformatted  : Unformatted state\n         notexist     : Not exist\n         copying      : Data copying state')
fjdaryDiskCompStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 5), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskCompStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskCompStatus.setDescription("The value of this object indicates the state of this DISK.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)\n\n         Not included in the RAID group and not spare become undefined.\n         Under the rebuild copyback become maintenance.")
fjdaryDiskCompSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 6), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskCompSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskCompSubStatus.setDescription('The value of this object indicates the state of this DISK.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)\n\n         Not included in the RAID group and not spare become undefined.\n         Under the rebuild copyback become maintenance.')
fjdaryDiskPlun = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskPlun.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskPlun.setDescription('The value of this object indicates the PLUN of this DISK.\n         the following definition:\n           0xDDSS\n             | |\n             | +-slot number\n             +-DE ID')
fjdaryDiskPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskPurpose.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskPurpose.setDescription('The value of this object indicates the purpose of this DISK.')
fjdaryDiskType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskType.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskType.setDescription('The value of this object indicates the type of this DISK.')
fjdaryDiskWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskWwn.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskWwn.setDescription('The value of this object indicates the world wide name of this DISK.')
fjdaryDiskVenderId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskVenderId.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskVenderId.setDescription('The value of this object indicates the vender of this DISK.')
fjdaryDiskProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskProductId.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskProductId.setDescription('The value of this object indicates the product of this DISK.')
fjdaryDiskFwRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskFwRevision.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskFwRevision.setDescription('The value of this object indicates the firmware revision of this\n         DISK.')
fjdaryDiskDateCode = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskDateCode.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskDateCode.setDescription('The value of this object indicates the date code of this DISK.')
fjdaryDiskCfgRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskCfgRevision.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskCfgRevision.setDescription('The value of this object indicates the configuration revision of this\n         DISK.')
fjdaryDiskSize = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 19, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDiskSize.setStatus('current')
if mibBuilder.loadTexts: fjdaryDiskSize.setDescription('This shows disk capacity. The unit is GB.')
fjdaryLanportCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLanportCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportCount.setDescription("The number of LAN port's informations\n         (regardless of theier current state) present on this system.")
fjdaryLanportTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 2), )
if mibBuilder.loadTexts: fjdaryLanportTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportTable.setDescription('')
fjdaryLanportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryLanportIndex"))
if mibBuilder.loadTexts: fjdaryLanportEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportEntry.setDescription('')
fjdaryLanportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLanportIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportIndex.setDescription('The value of this object uniquely identifies this fjdaryLanport\n         entry. The number of the unit that mounts LAN port is shown.')
fjdaryLanportStatus0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6, 7))).clone(namedValues=NamedValues(("linkup", 1), ("undefined", 4), ("linkdown", 6), ("unknown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLanportStatus0.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportStatus0.setDescription('The value of this object indicates the MNT port state.\n\n         linkup      : Link up state\n         undefined   : Undefined state\n         linkdown    : Link down state\n         unknown     : Unknown state')
fjdaryLanportStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6, 7))).clone(namedValues=NamedValues(("linkup", 1), ("undefined", 4), ("linkdown", 6), ("unknown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLanportStatus1.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportStatus1.setDescription('The value of this object indicates the RMT port state.\n\n         linkup      : Link up state\n         undefined   : Undefined state\n         linkdown    : Link down state\n         unknown     : Unknown state')
fjdaryLanportStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6, 7))).clone(namedValues=NamedValues(("linkup", 1), ("undefined", 4), ("linkdown", 6), ("unknown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLanportStatus2.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportStatus2.setDescription('The value of this object indicates the FST port state.\n\n         linkup      : Link up state\n         undefined   : Undefined state\n         linkdown    : Link down state\n         unknown     : Unknown state')
fjdaryLanportHwAdTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 3), )
if mibBuilder.loadTexts: fjdaryLanportHwAdTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportHwAdTable.setDescription('')
fjdaryLanportHwAdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 3, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryLanportHwAdIndex"))
if mibBuilder.loadTexts: fjdaryLanportHwAdEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportHwAdEntry.setDescription('')
fjdaryLanportHwAdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLanportHwAdIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportHwAdIndex.setDescription('The value of this object uniquely identifies this fjdaryLanportHwAd\n         entry. The number of the unit that mounts LAN port is shown.')
fjdaryLanportHwAddress0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 3, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLanportHwAddress0.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportHwAddress0.setDescription("The value of this object indicates the MNT port's MAC address.\n         If this value is not applicable, return all zero's.")
fjdaryLanportHwAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 3, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLanportHwAddress1.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportHwAddress1.setDescription("The value of this object indicates the RMT port's MAC address.\n         If this value is not applicable, return all zero's.")
fjdaryLanportHwAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 20, 3, 1, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLanportHwAddress2.setStatus('current')
if mibBuilder.loadTexts: fjdaryLanportHwAddress2.setDescription("The value of this object indicates the FST port's MAC address.\n         If this value is not applicable, return all zero's.")
fjdaryFemCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 21, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryFemCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryFemCount.setDescription("The number of FEM's informations (regardless of their current state)\n         present on this system.")
fjdaryFemTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 21, 2), )
if mibBuilder.loadTexts: fjdaryFemTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryFemTable.setDescription('')
fjdaryFemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 21, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryFemIndex"))
if mibBuilder.loadTexts: fjdaryFemEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryFemEntry.setDescription('')
fjdaryFemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 21, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryFemIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryFemIndex.setDescription('The value of this object uniquely identifies this fjdaryFem entry.')
fjdaryFemItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 21, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryFemItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryFemItemId.setDescription('The value of this object indicates the identification number\n         of this FEM.\n         the following definition:\n           0x0a00DD00\n                 |\n                 +-DE ID')
fjdaryFemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 21, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryFemStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryFemStatus.setDescription("The value of this object indicates the state of this FEM.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryFemSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 21, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryFemSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryFemSubStatus.setDescription('The value of this object indicates the state of this FEM.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryPfmCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 22, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfmCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfmCount.setDescription("The number of PFM's informations (regardless of their current state)\n         present on this system.")
fjdaryPfmTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 22, 2), )
if mibBuilder.loadTexts: fjdaryPfmTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfmTable.setDescription('')
fjdaryPfmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 22, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfmIndex"))
if mibBuilder.loadTexts: fjdaryPfmEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfmEntry.setDescription('')
fjdaryPfmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 22, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfmIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfmIndex.setDescription('The value of this object uniquely identifies this fjdaryPfm entry.')
fjdaryPfmItemId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 22, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfmItemId.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfmItemId.setDescription('The value of this object indicates the identification number\n         of this PFM.\n         the following definition:\n           0x7800MMSS\n                 | |\n                 | +-slot number\n                 +-CM ModuleID')
fjdaryPfmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 22, 2, 1, 3), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfmStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfmStatus.setDescription("The value of this object indicates the state of this PFM.\n         But, it doesn't become warning or alarm when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)")
fjdaryPfmSubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 2, 22, 2, 1, 4), FjdaryComponentStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfmSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfmSubStatus.setDescription('The value of this object indicates the state of this PFM.\n         It becomes warning and alarm while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryCaPortCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaPortCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortCount.setDescription("The number of CA port's informations\n         (regardless of their current state) present on this system.")
fjdaryCaPortTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 2), )
if mibBuilder.loadTexts: fjdaryCaPortTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortTable.setDescription('')
fjdaryCaPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryCaPortIndex"))
if mibBuilder.loadTexts: fjdaryCaPortEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortEntry.setDescription('')
fjdaryCaPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaPortIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortIndex.setDescription('The value of this object uniquely identifies this fjdaryCaPort entry.\n         Ascending order of fjdaryCaModuleId.')
fjdaryCaPortPortInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaPortPortInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortPortInfo.setDescription('The value of this object indicates the CA port information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Reserved                 |Factor      |Port No     |\n              +------------+------------+------------+------------+\n          0x04|Mapping     |CM CPU MID  |Reserved                 |\n              | Table No   |            |                         |\n              +------------+------------+------------+------------+\n          0x08|Security    |Transfer    |Reserved    |CA Mode     |\n              | Mode       | Rate       |            |            |\n              +------------+------------+------------+------------+\n          0x0c|Reserved                                           |\n              :                                                   :\n          0x1c|                                                   |\n              +------------+------------+------------+------------+\n          0x20|Host        |Method      |Loop ID     |Service     |\n              | Connection |            |            | Class      |\n              +------------+------------+------------+------------+\n          0x24|FC Frame Size            |Reserved                 |\n              +------------+------------+------------+------------+')
fjdaryCaPortiscsiInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaPortiscsiInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortiscsiInfo.setDescription('The value of this object indicates the CA port iscsi information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|iSCSI Flag                                         |\n              +------------+------------+------------+------------+\n          0x04|Reserved                                           |\n              :                                                   :\n          0x24|                                                   |\n              +------------+------------+------------+------------+\n          0x28|Valid       |Reserved                              |\n              +------------+------------+------------+------------+\n          0x2c|Reserved                                           |\n              +------------+------------+------------+------------+')
fjdaryCaPortiscsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaPortiscsiName.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortiscsiName.setDescription('The value of this object indicates an iscsi name of this CA port.')
fjdaryCaPortiscsiAliasName = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaPortiscsiAliasName.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortiscsiAliasName.setDescription('The value of this object indicates an iscsi alias name of this CA\n         port.')
fjdaryCaPortiscsiIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaPortiscsiIpAddress.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortiscsiIpAddress.setDescription('The value of this object indicates an iscsi ip address of this CA\n         port.')
fjdaryCaPortiscsiSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 2, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaPortiscsiSubnetMask.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortiscsiSubnetMask.setDescription('The value of this object indicates an iscsi subnet mask of this CA\n         port.')
fjdaryCaPortiscsiIsnsServer = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 2, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaPortiscsiIsnsServer.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortiscsiIsnsServer.setDescription('The value of this object indicates an isns server ip address of this\n         CA port.')
fjdaryCaPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(11, 12, 13, 20))).clone(namedValues=NamedValues(("ca", 11), ("ra", 12), ("cara", 13), ("initiator", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryCaPortMode.setStatus('current')
if mibBuilder.loadTexts: fjdaryCaPortMode.setDescription('The value of this object indicates the mode of this CA port.')
fjdaryOluCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOluCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryOluCount.setDescription("The number of OLU's informations\n         (regardless of their current state) present on this system.")
fjdaryOluTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 2, 2), )
if mibBuilder.loadTexts: fjdaryOluTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryOluTable.setDescription('')
fjdaryOluEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 2, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryOluIndex"))
if mibBuilder.loadTexts: fjdaryOluEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryOluEntry.setDescription('')
fjdaryOluIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOluIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryOluIndex.setDescription('The value of this object uniquely identifies this fjdaryOlu entry.')
fjdaryOluInfoTable = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOluInfoTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryOluInfoTable.setDescription('The value of this object indicates the OLU information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|OLU info#index*2 (96 bytes)                        |\n              +------------+------------+------------+------------+\n          0x60|OLU info#index*2+1 (96 bytes)                      |\n              +------------+------------+------------+------------+\n\n         OLU info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|OLUN                     |Status                   |\n              +------------+------------+------------+------------+\n          0x04|SLU Count   |Reserved    |Pool No                  |\n              +------------+------------+------------+------------+\n          0x08|Reserved                                           |\n              :                                                   :\n          0x14|                                                   |\n              +------------+------------+------------+------------+\n          0x18|SLUN 0x00                |SLUN 0x01                |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0x34|SLUN 0x0E                |SLUN 0x0F                |\n              +------------+------------+------------+------------+\n          0x38|Reserved                                           |\n              :                                                   :\n          0x5c|                                                   |\n              +------------+------------+------------+------------+')
fjdarySluCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdarySluCount.setStatus('current')
if mibBuilder.loadTexts: fjdarySluCount.setDescription("The number of SLU's informations\n         (regardless of their current state) present on this system.")
fjdarySluTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 3, 2), )
if mibBuilder.loadTexts: fjdarySluTable.setStatus('current')
if mibBuilder.loadTexts: fjdarySluTable.setDescription('')
fjdarySluEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 3, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdarySluIndex"))
if mibBuilder.loadTexts: fjdarySluEntry.setStatus('current')
if mibBuilder.loadTexts: fjdarySluEntry.setDescription('')
fjdarySluIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdarySluIndex.setStatus('current')
if mibBuilder.loadTexts: fjdarySluIndex.setDescription('The value of this object uniquely identifies this fjdarySlu entry.')
fjdarySluInfoTable = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdarySluInfoTable.setStatus('current')
if mibBuilder.loadTexts: fjdarySluInfoTable.setDescription('The value of this object indicates the SLU information.\n         Part of raid group or the entire volume is shown.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|SLUN                     |Status                   |\n              +------------+------------+------------+------------+\n          0x04|LU Type     |Reserved                              |\n              +------------+------------+------------+------------+\n          0x08|RLUN                     |Temporary RLUN           |\n              +------------+------------+------------+------------+\n          0x0c|MLUN                     |OLUN                     |\n              +------------+------------+------------+------------+\n          0x10|Reserved                                           |\n              :                                                   :\n          0x1c|                                                   |\n              +------------+------------+------------+------------+\n          0x20|Start RLBA                                         |\n              +                                                   +\n          0x24|                                                   |\n              +------------+------------+------------+------------+\n          0x28|Temporary Start RLBA                               |\n              +                                                   +\n          0x2c|                                                   |\n              +------------+------------+------------+------------+\n          0x30|Start OLBA                                         |\n              +                                                   +\n          0x34|                                                   |\n              +------------+------------+------------+------------+\n          0x38|OLBA Count                                         |\n              +                                                   +\n          0x3c|                                                   |\n              +------------+------------+------------+------------+\n          0x40|SLBA Count                                         |\n              +                                                   +\n          0x44|                                                   |\n              +------------+------------+------------+------------+\n          0x48|Temporary SLBA Count                               |\n              +                                                   +\n          0x4c|                                                   |\n              +------------+------------+------------+------------+\n          0x50|Start SLBA for OLU                                 |\n              +                                                   +\n          0x54|                                                   |\n              +------------+------------+------------+------------+\n          0x58|SLBA Count for OLU                                 |\n              +                                                   +\n          0x5c|                                                   |\n              +------------+------------+------------+------------+\n          0x60|Virtual OLBA Count                                 |\n              +                                                   +\n          0x64|                                                   |\n              +------------+------------+------------+------------+\n          0x68|Reserved                                           |\n              :                                                   :\n          0xac|                                                   |\n              +------------+------------+------------+------------+')
fjdaryRluCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryRluCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryRluCount.setDescription("The number of RLU's informations\n         (regardless of their current state) present on this system.")
fjdaryRluTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 4, 2), )
if mibBuilder.loadTexts: fjdaryRluTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryRluTable.setDescription('')
fjdaryRluEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 4, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryRluIndex"))
if mibBuilder.loadTexts: fjdaryRluEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryRluEntry.setDescription('')
fjdaryRluIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryRluIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryRluIndex.setDescription('The value of this object uniquely identifies this fjdaryRlu entry.')
fjdaryRluInfoTable0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 4, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryRluInfoTable0.setStatus('current')
if mibBuilder.loadTexts: fjdaryRluInfoTable0.setDescription('The value of this object indicates the RLU information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|RLUN                     |Status                   |\n              +------------+------------+------------+------------+\n          0x04|Define      |Current     |Reserved                 |\n              | CM CPU MID | CM CPU MID |                         |\n              +------------+------------+------------+------------+\n          0x08|RAID Level  |RLU Mode    |Blockade    |RLU Enable  |\n              |            |            |            | Flag       |\n              +------------+------------+------------+------------+\n          0x0c|Reserved                 |Pool No                  |\n              +------------+------------+------------+------------+\n          0x10|RLBA Count                                         |\n              +                                                   +\n          0x14|                                                   |\n              +------------+------------+------------+------------+\n          0x18|Stripe Depth                                       |\n              +------------+------------+------------+------------+\n          0x1c|Stripe Size                                        |\n              +------------+------------+------------+------------+\n          0x20|Expanded RLUN            |Temporary RLUN           |\n              +------------+------------+------------+------------+\n          0x24|Reserved                                           |\n              :                                                   :\n          0x2c|                                                   |\n              +------------+------------+------------+------------+\n          0x30|SLU Count   |Reserved                              |\n              +------------+------------+------------+------------+')
fjdaryRluInfoTable1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryRluInfoTable1.setStatus('current')
if mibBuilder.loadTexts: fjdaryRluInfoTable1.setDescription('The value of this object indicates the RLU information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|SLUN 0x00                |SLUN 0x01                |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xfc|SLUN 0x7E                |SLUN 0x7F                |\n              +------------+------------+------------+------------+')
fjdaryRluInfoTable2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 4, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryRluInfoTable2.setStatus('current')
if mibBuilder.loadTexts: fjdaryRluInfoTable2.setDescription('The value of this object indicates the RLU information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|SLUN 0x80                |SLUN 0x81                |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xfc|SLUN 0xFE                |Reserved                 |\n              +------------+------------+------------+------------+')
fjdaryRluInfoTable3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 4, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryRluInfoTable3.setStatus('current')
if mibBuilder.loadTexts: fjdaryRluInfoTable3.setDescription('The value of this object indicates the RLU information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Member Disk |Reserved                              |\n              | Count      |                                      |\n              +------------+------------+------------+------------+\n          0x04|DLUN 0x00                |DLUN 0x01                |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0x20|DLUN 0x0E                |DLUN 0x0F                |\n              +------------+------------+------------+------------+')
fjdaryDluCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDluCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryDluCount.setDescription("The number of DLU's informations\n         (regardless of their current state) present on this system.")
fjdaryDluTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 5, 2), )
if mibBuilder.loadTexts: fjdaryDluTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryDluTable.setDescription('')
fjdaryDluEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 5, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryDluIndex"))
if mibBuilder.loadTexts: fjdaryDluEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryDluEntry.setDescription('')
fjdaryDluIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDluIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryDluIndex.setDescription('The value of this object uniquely identifies this fjdaryDlu entry.')
fjdaryDluInfoTable = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 5, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryDluInfoTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryDluInfoTable.setDescription('The value of this object indicates the DLU information.\n         Information to relate RLU to DISK is shown.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|DLUN                     |Status                   |\n              +------------+------------+------------+------------+\n          0x04|RLUN                     |Member Disk |Reserved    |\n              |                         | Number     |            |\n              +------------+------------+------------+------------+\n          0x08|Start DLBA                                         |\n              +                                                   +\n          0x0c|                                                   |\n              +------------+------------+------------+------------+\n          0x10|Block Count                                        |\n              +                                                   +\n          0x14|                                                   |\n              +------------+------------+------------+------------+\n          0x18|Stripe Depth                                       |\n              +------------+------------+------------+------------+\n          0x1c|Stripe Size                                        |\n              +------------+------------+------------+------------+\n          0x20|Member Disk |Reserved                              |\n              | Count      |                                      |\n              +------------+------------+------------+------------+\n          0x24|Reserved                                           |\n              :                                                   :\n          0x2c|                                                   |\n              +------------+------------+------------+------------+\n          0x30|PLU in Use 0x00          |PLU in Use 0x01          |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0x6c|PLU in Use 0x1E          |PLU in Use 0x1F          |\n              +------------+------------+------------+------------+\n          0x70|Defined PLU 0x00         |Defined PLU 0x01         |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xac|Defined PLU 0x1E         |Defined PLU 0x1F         |\n              +------------+------------+------------+------------+')
fjdaryMluCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMluCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryMluCount.setDescription("The number of MLU's informations\n         (regardless of their current state) present on this system.")
fjdaryMluTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 6, 2), )
if mibBuilder.loadTexts: fjdaryMluTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryMluTable.setDescription('')
fjdaryMluEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 6, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryMluIndex"))
if mibBuilder.loadTexts: fjdaryMluEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryMluEntry.setDescription('')
fjdaryMluIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMluIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryMluIndex.setDescription('The value of this object uniquely identifies this fjdaryMlu entry.')
fjdaryMluInfoTable = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 6, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMluInfoTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryMluInfoTable.setDescription('The value of this object indicates the MLU information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|MLU info#index*5 (48 bytes)                        |\n              +------------+------------+------------+------------+\n          0x30|MLU info#index*5+1 (48 bytes)                      |\n              +------------+------------+------------+------------+\n          0x60|MLU info#index*5+2 (48 bytes)                      |\n              +------------+------------+------------+------------+\n          0x90|MLU info#index*5+3 (48 bytes)                      |\n              +------------+------------+------------+------------+\n          0xc0|MLU info#index*5+4 (48 bytes)                      |\n              +------------+------------+------------+------------+\n\n         MLU info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|MLUN                     |Status                   |\n              +------------+------------+------------+------------+\n          0x04|Type Index  |MLU Mode    |Reserved                 |\n              +------------+------------+------------+------------+\n          0x08|SLUN                     |Reserved                 |\n              +------------+------------+------------+------------+\n          0x0c|MLBA Count                                         |\n              +------------+------------+------------+------------+\n          0x10|Reserved                                           |\n              :                                                   :\n          0x2c|                                                   |\n              +------------+------------+------------+------------+')
fjdaryOpenmapCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOpenmapCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapCount.setDescription("The number of open volume mapping table's informations\n         (regardless of their current state) present on this system.")
fjdaryOpenmapTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2), )
if mibBuilder.loadTexts: fjdaryOpenmapTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapTable.setDescription('')
fjdaryOpenmapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryOpenmapIndex"))
if mibBuilder.loadTexts: fjdaryOpenmapEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapEntry.setDescription('')
fjdaryOpenmapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOpenmapIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapIndex.setDescription('The value of this object uniquely identifies this fjdaryOpenmap\n         entry.')
fjdaryOpenmapInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOpenmapInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapInfo.setDescription('The value of this object indicates the open volume mapping table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Map No      |Reserved    |CA MID      |Port No     |\n              +------------+------------+------------+------------+\n          0x04|LUN Mapping No           |Valid Count              |\n              +------------+------------+------------+------------+\n          0x08|Reserved                                           |\n              :                                                   :\n          0x1c|                                                   |\n              +------------+------------+------------+------------+')
fjdaryOpenmapHostTable0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOpenmapHostTable0.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapHostTable0.setDescription('The value of this object indicates the open volume mapping table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Host 0x00                |Affinity Grp 0x00        |\n              +------------+------------+------------+------------+\n          0x04|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xf8|Host 0x1F                |Affinity Grp 0x1F        |\n              +------------+------------+------------+------------+\n          0xfc|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+')
fjdaryOpenmapHostTable1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOpenmapHostTable1.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapHostTable1.setDescription('The value of this object indicates the open volume mapping table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Host 0x20                |Affinity Grp 0x20        |\n              +------------+------------+------------+------------+\n          0x04|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xf8|Host 0x3F                |Affinity Grp 0x3F        |\n              +------------+------------+------------+------------+\n          0xfc|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+')
fjdaryOpenmapHostTable2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOpenmapHostTable2.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapHostTable2.setDescription('The value of this object indicates the open volume mapping table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Host 0x40                |Affinity Grp 0x40        |\n              +------------+------------+------------+------------+\n          0x04|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xf8|Host 0x5F                |Affinity Grp 0x5F        |\n              +------------+------------+------------+------------+\n          0xfc|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+')
fjdaryOpenmapHostTable3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOpenmapHostTable3.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapHostTable3.setDescription('The value of this object indicates the open volume mapping table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Host 0x60                |Affinity Grp 0x60        |\n              +------------+------------+------------+------------+\n          0x04|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xf8|Host 0x7F                |Affinity Grp 0x7F        |\n              +------------+------------+------------+------------+\n          0xfc|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+')
fjdaryOpenmapHostTable4 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOpenmapHostTable4.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapHostTable4.setDescription('The value of this object indicates the open volume mapping table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Host 0x80                |Affinity Grp 0x80        |\n              +------------+------------+------------+------------+\n          0x04|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xf8|Host 0x9F                |Affinity Grp 0x9F        |\n              +------------+------------+------------+------------+\n          0xfc|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+')
fjdaryOpenmapHostTable5 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOpenmapHostTable5.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapHostTable5.setDescription('The value of this object indicates the open volume mapping table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Host 0xA0                |Affinity Grp 0xA0        |\n              +------------+------------+------------+------------+\n          0x04|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xf8|Host 0xBF                |Affinity Grp 0xBF        |\n              +------------+------------+------------+------------+\n          0xfc|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+')
fjdaryOpenmapHostTable6 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOpenmapHostTable6.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapHostTable6.setDescription('The value of this object indicates the open volume mapping table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Host 0xC0                |Affinity Grp 0xC0        |\n              +------------+------------+------------+------------+\n          0x04|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xf8|Host 0xDF                |Affinity Grp 0xDF        |\n              +------------+------------+------------+------------+\n          0xfc|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+')
fjdaryOpenmapHostTable7 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 7, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryOpenmapHostTable7.setStatus('current')
if mibBuilder.loadTexts: fjdaryOpenmapHostTable7.setDescription('The value of this object indicates the open volume mapping table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Host 0xE0                |Affinity Grp 0xE0        |\n              +------------+------------+------------+------------+\n          0x04|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xf8|Host 0xFF                |Affinity Grp 0xFF        |\n              +------------+------------+------------+------------+\n          0xfc|Enable      |Reserved                              |\n              | Access     |                                      |\n              +------------+------------+------------+------------+')
fjdaryLunmapCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLunmapCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryLunmapCount.setDescription("The number of LUN mapping table's informations\n         (regardless of their current state) present on this system.")
fjdaryLunmapTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 8, 2), )
if mibBuilder.loadTexts: fjdaryLunmapTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryLunmapTable.setDescription('')
fjdaryLunmapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 8, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryLunmapIndex"))
if mibBuilder.loadTexts: fjdaryLunmapEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryLunmapEntry.setDescription('')
fjdaryLunmapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLunmapIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryLunmapIndex.setDescription('The value of this object uniquely identifies this fjdaryLunmap entry.')
fjdaryLunmapInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 8, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLunmapInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryLunmapInfo.setDescription('The value of this object indicates the LUN mapping table information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|LUN Map Number           |Definition  |Reserved    |\n              +------------+------------+------------+------------+\n          0x04|LUN Map Name                                       |\n              :                                                   :\n          0x10|                                                   |\n              +------------+------------+------------+------------+\n          0x14|Host Response Table No   |Reserved                 |\n              +------------+------------+------------+------------+\n          0x18|Reserved                                           |\n              +                                                   +\n          0x1c|                                                   |\n              +------------+------------+------------+------------+')
fjdaryLunmapTable0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 8, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLunmapTable0.setStatus('current')
if mibBuilder.loadTexts: fjdaryLunmapTable0.setDescription('The value of this object indicates the LUN mapping table information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|LUN#000-OLU#             |LUN#001-OLU#             |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xfc|LUN#126-OLU#             |LUN#127-OLU#             |\n              +------------+------------+------------+------------+')
fjdaryLunmapTable1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 8, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLunmapTable1.setStatus('current')
if mibBuilder.loadTexts: fjdaryLunmapTable1.setDescription('The value of this object indicates the LUN mapping table information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|LUN#128-OLU#             |LUN#129-OLU#             |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xfc|LUN#254-OLU#             |LUN#255-OLU#             |\n              +------------+------------+------------+------------+')
fjdaryLunmapTable2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 8, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLunmapTable2.setStatus('current')
if mibBuilder.loadTexts: fjdaryLunmapTable2.setDescription('The value of this object indicates the LUN mapping table information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|LUN#256-OLU#             |LUN#257-OLU#             |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xfc|LUN#382-OLU#             |LUN#383-OLU#             |\n              +------------+------------+------------+------------+')
fjdaryLunmapTable3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 8, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryLunmapTable3.setStatus('current')
if mibBuilder.loadTexts: fjdaryLunmapTable3.setDescription('The value of this object indicates the LUN mapping table information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|LUN#384-OLU#             |LUN#385-OLU#             |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xfc|LUN#510-OLU#             |LUN#511-OLU#             |\n              +------------+------------+------------+------------+')
fjdaryAffinityGrpCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryAffinityGrpCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryAffinityGrpCount.setDescription("The number of affinity group table's informations\n         (regardless of their current state) present on this system.")
fjdaryAffinityGrpTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 9, 2), )
if mibBuilder.loadTexts: fjdaryAffinityGrpTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryAffinityGrpTable.setDescription('')
fjdaryAffinityGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 9, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryAffinityGrpIndex"))
if mibBuilder.loadTexts: fjdaryAffinityGrpEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryAffinityGrpEntry.setDescription('')
fjdaryAffinityGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryAffinityGrpIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryAffinityGrpIndex.setDescription('The value of this object uniquely identifies this fjdaryAffinityGrp\n         entry.')
fjdaryAffinityGrpInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 9, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryAffinityGrpInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryAffinityGrpInfo.setDescription('The value of this object indicates the affinity group table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Affinity Group Number    |Definition  |Reserved    |\n              +------------+------------+------------+------------+\n          0x04|Affinity Group Name                                |\n              :                                                   :\n          0x10|                                                   |\n              +------------+------------+------------+------------+\n          0x14|Previous Affinity Group  |Next Affinity Group      |\n              | Number                  | Number                  |\n              +------------+------------+------------+------------+\n          0x18|Reserved                                           |\n              +                                                   +\n          0x1c|                                                   |\n              +------------+------------+------------+------------+')
fjdaryAffinityGrpTable0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 9, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryAffinityGrpTable0.setStatus('current')
if mibBuilder.loadTexts: fjdaryAffinityGrpTable0.setDescription('The value of this object indicates the affinity group table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|LUN#000-OLU#             |LUN#001-OLU#             |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xfc|LUN#126-OLU#             |LUN#127-OLU#             |\n              +------------+------------+------------+------------+')
fjdaryAffinityGrpTable1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 9, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryAffinityGrpTable1.setStatus('current')
if mibBuilder.loadTexts: fjdaryAffinityGrpTable1.setDescription('The value of this object indicates the affinity group table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|LUN#128-OLU#             |LUN#129-OLU#             |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xfc|LUN#254-OLU#             |LUN#255-OLU#             |\n              +------------+------------+------------+------------+')
fjdaryAffinityGrpTable2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 9, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryAffinityGrpTable2.setStatus('current')
if mibBuilder.loadTexts: fjdaryAffinityGrpTable2.setDescription('The value of this object indicates the affinity group table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|LUN#256-OLU#             |LUN#257-OLU#             |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xfc|LUN#382-OLU#             |LUN#383-OLU#             |\n              +------------+------------+------------+------------+')
fjdaryAffinityGrpTable3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 9, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryAffinityGrpTable3.setStatus('current')
if mibBuilder.loadTexts: fjdaryAffinityGrpTable3.setDescription('The value of this object indicates the affinity group table\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|LUN#384-OLU#             |LUN#385-OLU#             |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xfc|LUN#510-OLU#             |LUN#511-OLU#             |\n              +------------+------------+------------+------------+')
fjdaryHostwwnCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostwwnCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostwwnCount.setDescription("The number of host wwn table's informations\n         (regardless of their current state) present on this system.")
fjdaryHostwwnTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 10, 2), )
if mibBuilder.loadTexts: fjdaryHostwwnTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostwwnTable.setDescription('')
fjdaryHostwwnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 10, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryHostwwnIndex"))
if mibBuilder.loadTexts: fjdaryHostwwnEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostwwnEntry.setDescription('')
fjdaryHostwwnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostwwnIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostwwnIndex.setDescription('The value of this object uniquely identifies this fjdaryHostwwn\n         entry.')
fjdaryHostwwnWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 10, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostwwnWWN.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostwwnWWN.setDescription('The value of this object indicates the host wwn table information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Host WWN                                           |\n              +                                                   +\n          0x04|                                                   |\n              +------------+------------+------------+------------+\n          0x08|Host Response Table No   |Valid Flag  |Reserved    |\n              +------------+------------+------------+------------+\n          0x0c|Reserved                                           |\n              :                                                   :\n          0x1c|                                                   |\n              +------------+------------+------------+------------+')
fjdaryResetpathCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryResetpathCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryResetpathCount.setDescription("The number of reset path group table's informations\n         (regardless of their current state) present on this system.")
fjdaryResetpathTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 11, 2), )
if mibBuilder.loadTexts: fjdaryResetpathTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryResetpathTable.setDescription('')
fjdaryResetpathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 11, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryResetpathIndex"))
if mibBuilder.loadTexts: fjdaryResetpathEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryResetpathEntry.setDescription('')
fjdaryResetpathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryResetpathIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryResetpathIndex.setDescription('The value of this object uniquely identifies this fjdaryResetpath\n         entry.')
fjdaryResetpathGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 11, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryResetpathGroup.setStatus('current')
if mibBuilder.loadTexts: fjdaryResetpathGroup.setDescription('The value of this object indicates the reset path group table\n         information.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Reset Path Group (bitmap)                          |\n              :                                                   :\n          0x0c|                                                   |\n              +------------+------------+------------+------------+\n\n         Grouped CA is stored from bit0 in ascending order of\n         fjdaryCaModuleId.\n          bit   0: CA MID 0x40 Port#0\n          bit   1: CA MID 0x40 Port#1\n          bit   2: CA MID 0x41 Port#0\n                        :\n          bit 127: CA MID 0x7F Port#1\n\n         The bit definition is as follows.\n              +------------+------------+------------+------------+\n          0x00|bit 7-0     |bit 15-8    |bit 23-16   |bit 31-24   |\n              +------------+------------+------------+------------+\n          0x04|bit 39-32   |bit 47-40   |bit 55-48   |bit 63-56   |\n              +------------+------------+------------+------------+\n          0x08|bit 71-64   |bit 79-72   |bit 87-80   |bit 95-88   |\n              +------------+------------+------------+------------+\n          0x0c|bit 103-96  |bit 111-104 |bit 119-112 |bit 127-120 |\n              +------------+------------+------------+------------+')
fjdaryHostiscsiCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 12, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostiscsiCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostiscsiCount.setDescription('The number of host iscsi informations\n         (regardless of their current state) present on this system.')
fjdaryHostiscsiTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 12, 2), )
if mibBuilder.loadTexts: fjdaryHostiscsiTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostiscsiTable.setDescription('')
fjdaryHostiscsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 12, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryHostiscsiIndex"))
if mibBuilder.loadTexts: fjdaryHostiscsiEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostiscsiEntry.setDescription('')
fjdaryHostiscsiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostiscsiIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostiscsiIndex.setDescription('The value of this object uniquely identifies this fjdaryHostiscsi\n         entry.')
fjdaryHostiscsiDefine = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 12, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostiscsiDefine.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostiscsiDefine.setDescription('The value of this object indicates the host iscsi information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Valid Flag  |Reserved                              |\n              +------------+------------+------------+------------+\n          0x04|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x08|Host Response Table No   |TCP Port No              |\n              +------------+------------+------------+------------+')
fjdaryHostiscsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 12, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostiscsiName.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostiscsiName.setDescription('The value of this object shows iscsi name of a host.')
fjdaryHostiscsiAliasName = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 12, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostiscsiAliasName.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostiscsiAliasName.setDescription('The value of this object shows alias name of a host.')
fjdaryHostiscsiIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 12, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostiscsiIpAddress.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostiscsiIpAddress.setDescription('The value of this object shows ip address of a host.')
fjdaryHostResponseCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 13, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostResponseCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostResponseCount.setDescription('The number of host response informations\n         (regardless of their current state) present on this system.')
fjdaryHostResponseTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 13, 2), )
if mibBuilder.loadTexts: fjdaryHostResponseTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostResponseTable.setDescription('')
fjdaryHostResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 13, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryHostResponseIndex"))
if mibBuilder.loadTexts: fjdaryHostResponseEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostResponseEntry.setDescription('')
fjdaryHostResponseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostResponseIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostResponseIndex.setDescription('The value of this object uniquely identifies this fjdaryHostResponse\n         entry.')
fjdaryHostResponseInfoTable = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 3, 13, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryHostResponseInfoTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryHostResponseInfoTable.setDescription('The value of this object indicates the host response information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|Table No                 |Valid Flag  |Reserved    |\n              +------------+------------+------------+------------+\n          0x04|Reserved                                           |\n              :                                                   :\n          0x14|                                                   |\n              +------------+------------+------------+------------+\n          0x18|SCC Mode    |Host Command|Sense Control            |\n              |            | Timeout    |                         |\n              +------------+------------+------------+------------+\n          0x1c|Ope Mode    |Ope Mode    | Reserved                |\n              | Flag0      | Flag1      |                         |\n              +------------+------------+------------+------------+\n          0x20|Status      |Reserved                              |\n              | Control    |                                      |\n              +------------+------------+------------+------------+\n          0x24|Reserved                                           |\n              :                                                   :\n          0x3c|                                                   |\n              +------------+------------+------------+------------+\n          0x40|Inquiry     |Inquiry     |Inquiry     |Reserved    |\n              | Byte0 Mode | VPD ID Type| StdData Ver|            |\n              +------------+------------+------------+------------+\n          0x44|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x48|Entry       |Entry       |Entry       |Entry       |\n              | Sense Key  | Sense Code | Sub Sense  | Convert Bit|\n              |            |            | Code       |            |\n              +------------+------------+------------+------------+\n          0x4c|Report      |Report      |Report      |Report      |\n              | Sense Key  | Sense Code | Sub Sense  | Convert Bit|\n              |            |            | Code       |            |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0x80|Entry       |Entry       |Entry       |Entry       |\n              | Sense Key  | Sense Code | Sub Sense  | Convert Bit|\n              |            |            | Code       |            |\n              +------------+------------+------------+------------+\n          0x84|Report      |Report      |Report      |Report      |\n              | Sense Key  | Sense Code | Sub Sense  | Convert Bit|\n              |            |            | Code       |            |\n              +------------+------------+------------+------------+\n          0x88|Reserved                                           |\n              +                                                   +\n          0x8c|                                                   |\n              +------------+------------+------------+------------+')
fjdaryMachinePowerCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerCount.setDescription("The number of power consumption information table's entry on this\n         machine.")
fjdaryMachinePowerTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2), )
if mibBuilder.loadTexts: fjdaryMachinePowerTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerTable.setDescription('')
fjdaryMachinePowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryMachinePowerIndex"))
if mibBuilder.loadTexts: fjdaryMachinePowerEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerEntry.setDescription('')
fjdaryMachinePowerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerIndex.setDescription('The value of this object uniquely identifies this fjdaryMachinePower\n         entry.')
fjdaryMachinePowerFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 1, 2))).clone(namedValues=NamedValues(("invalid", 255), ("updating", 1), ("valid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerFlag.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerFlag.setDescription('The state of information concerned index is shown.')
fjdaryMachinePowerCmNum = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerCmNum.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerCmNum.setDescription('CM number in which this information is gathered.')
fjdaryMachinePowerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerTime.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerTime.setDescription('Passage second when this information was gathered.')
fjdaryMachinePowerInfo0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo0.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo0.setDescription('The average power consumption is shown during one hour in the past.\n         The unit is Watt.')
fjdaryMachinePowerInfo1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo1.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo1.setDescription('The average power consumption 1 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo2.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo2.setDescription('The average power consumption 2 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo3.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo3.setDescription('The average power consumption 3 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo4 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo4.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo4.setDescription('The average power consumption 4 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo5 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo5.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo5.setDescription('The average power consumption 5 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo6 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo6.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo6.setDescription('The average power consumption 6 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo7 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo7.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo7.setDescription('The average power consumption 7 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo8 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo8.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo8.setDescription('The average power consumption 8 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo9 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo9.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo9.setDescription('The average power consumption 9 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo10 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo10.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo10.setDescription('The average power consumption 10 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo11 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo11.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo11.setDescription('The average power consumption 11 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo12 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo12.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo12.setDescription('The average power consumption 12 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo13 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo13.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo13.setDescription('The average power consumption 13 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo14 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo14.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo14.setDescription('The average power consumption 14 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo15 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo15.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo15.setDescription('The average power consumption 15 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo16 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo16.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo16.setDescription('The average power consumption 16 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo17 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo17.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo17.setDescription('The average power consumption 17 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo18 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo18.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo18.setDescription('The average power consumption 18 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo19 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo19.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo19.setDescription('The average power consumption 19 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo20 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo20.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo20.setDescription('The average power consumption 20 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo21 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo21.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo21.setDescription('The average power consumption 21 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo22 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo22.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo22.setDescription('The average power consumption 22 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo23 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo23.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo23.setDescription('The average power consumption 23 hour ago is shown. The unit is Watt.')
fjdaryMachinePowerInfo24 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 1, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachinePowerInfo24.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachinePowerInfo24.setDescription('The average power consumption 24 hour ago is shown. The unit is Watt.')
fjdaryEncPowerCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerCount.setDescription("The number of power consumption information table's entry of each\n         enclosure.")
fjdaryEncPowerTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2), )
if mibBuilder.loadTexts: fjdaryEncPowerTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerTable.setDescription('')
fjdaryEncPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryEncPowerIndex"))
if mibBuilder.loadTexts: fjdaryEncPowerEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerEntry.setDescription('')
fjdaryEncPowerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerIndex.setDescription('The value of this object uniquely identifies this fjdaryEncPower\n         entry.')
fjdaryEncPowerFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 1, 2))).clone(namedValues=NamedValues(("invalid", 255), ("updating", 1), ("valid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerFlag.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerFlag.setDescription('The state of information concerned index is shown.')
fjdaryEncPowerCmNum = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerCmNum.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerCmNum.setDescription('CM number in which this information is gathered.')
fjdaryEncPowerDeId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerDeId.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerDeId.setDescription('DE ID in which this information is gathered.\n         When fjdaryEncPowerType is de, this information is effective.')
fjdaryEncPowerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerTime.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerTime.setDescription('Passage second when this information was gathered.')
fjdaryEncPowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 32))).clone(namedValues=NamedValues(("ce", 16), ("de", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerType.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerType.setDescription('enclosure type in which this information is gathered.')
fjdaryEncPowerInfo0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo0.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo0.setDescription('The average power consumption is shown during one hour in the past.\n         The unit is Watt.')
fjdaryEncPowerInfo1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo1.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo1.setDescription('The average power consumption 1 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo2.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo2.setDescription('The average power consumption 2 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo3.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo3.setDescription('The average power consumption 3 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo4 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo4.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo4.setDescription('The average power consumption 4 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo5 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo5.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo5.setDescription('The average power consumption 5 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo6 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo6.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo6.setDescription('The average power consumption 6 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo7 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo7.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo7.setDescription('The average power consumption 7 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo8 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo8.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo8.setDescription('The average power consumption 8 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo9 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo9.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo9.setDescription('The average power consumption 9 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo10 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo10.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo10.setDescription('The average power consumption 10 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo11 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo11.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo11.setDescription('The average power consumption 11 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo12 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo12.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo12.setDescription('The average power consumption 12 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo13 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo13.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo13.setDescription('The average power consumption 13 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo14 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo14.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo14.setDescription('The average power consumption 14 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo15 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo15.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo15.setDescription('The average power consumption 15 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo16 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo16.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo16.setDescription('The average power consumption 16 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo17 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo17.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo17.setDescription('The average power consumption 17 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo18 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo18.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo18.setDescription('The average power consumption 18 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo19 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo19.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo19.setDescription('The average power consumption 19 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo20 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo20.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo20.setDescription('The average power consumption 20 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo21 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo21.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo21.setDescription('The average power consumption 21 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo22 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo22.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo22.setDescription('The average power consumption 22 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo23 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo23.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo23.setDescription('The average power consumption 23 hour ago is shown. The unit is Watt.')
fjdaryEncPowerInfo24 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 2, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncPowerInfo24.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncPowerInfo24.setDescription('The average power consumption 24 hour ago is shown. The unit is Watt.')
fjdaryMachineTempCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempCount.setDescription("The number of temperature information table's entry on this machine.")
fjdaryMachineTempTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2), )
if mibBuilder.loadTexts: fjdaryMachineTempTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempTable.setDescription('')
fjdaryMachineTempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryMachineTempIndex"))
if mibBuilder.loadTexts: fjdaryMachineTempEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempEntry.setDescription('')
fjdaryMachineTempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempIndex.setDescription('The value of this object uniquely identifies this fjdaryMachineTemp\n         entry.')
fjdaryMachineTempFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 1, 2))).clone(namedValues=NamedValues(("invalid", 255), ("updating", 1), ("valid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempFlag.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempFlag.setDescription('The state of information concerned index is shown.')
fjdaryMachineTempCmNum = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempCmNum.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempCmNum.setDescription('CM number in which this information is gathered.')
fjdaryMachineTempTime = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempTime.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempTime.setDescription('Passage second when this information was gathered.')
fjdaryMachineTempInfo0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo0.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo0.setDescription('The maximum temperature is shown during one hour in the past.\n         The unit is Celsius.')
fjdaryMachineTempInfo1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo1.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo1.setDescription('The maximum temperature 1 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo2.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo2.setDescription('The maximum temperature 2 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo3.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo3.setDescription('The maximum temperature 3 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo4 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo4.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo4.setDescription('The maximum temperature 4 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo5 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo5.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo5.setDescription('The maximum temperature 5 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo6 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo6.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo6.setDescription('The maximum temperature 6 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo7 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo7.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo7.setDescription('The maximum temperature 7 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo8 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo8.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo8.setDescription('The maximum temperature 8 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo9 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo9.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo9.setDescription('The maximum temperature 9 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo10 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo10.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo10.setDescription('The maximum temperature 10 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo11 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo11.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo11.setDescription('The maximum temperature 11 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo12 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo12.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo12.setDescription('The maximum temperature 12 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo13 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo13.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo13.setDescription('The maximum temperature 13 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo14 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo14.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo14.setDescription('The maximum temperature 14 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo15 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo15.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo15.setDescription('The maximum temperature 15 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo16 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo16.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo16.setDescription('The maximum temperature 16 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo17 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo17.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo17.setDescription('The maximum temperature 17 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo18 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo18.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo18.setDescription('The maximum temperature 18 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo19 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo19.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo19.setDescription('The maximum temperature 19 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo20 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo20.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo20.setDescription('The maximum temperature 20 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo21 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo21.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo21.setDescription('The maximum temperature 21 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo22 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo22.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo22.setDescription('The maximum temperature 22 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo23 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo23.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo23.setDescription('The maximum temperature 23 hour ago is shown. The unit is Celsius.')
fjdaryMachineTempInfo24 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 3, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMachineTempInfo24.setStatus('current')
if mibBuilder.loadTexts: fjdaryMachineTempInfo24.setDescription('The maximum temperature 24 hour ago is shown. The unit is Celsius.')
fjdaryEncTempCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempCount.setDescription("The number of temperature information table's entry of each\n         enclosure.")
fjdaryEncTempTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2), )
if mibBuilder.loadTexts: fjdaryEncTempTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempTable.setDescription('')
fjdaryEncTempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryEncTempIndex"))
if mibBuilder.loadTexts: fjdaryEncTempEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempEntry.setDescription('')
fjdaryEncTempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempIndex.setDescription('The value of this object uniquely identifies this fjdaryEncTemp\n         entry.')
fjdaryEncTempFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 1, 2))).clone(namedValues=NamedValues(("invalid", 255), ("updating", 1), ("valid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempFlag.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempFlag.setDescription('The state of information concerned index is shown.')
fjdaryEncTempCmNum = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempCmNum.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempCmNum.setDescription('CM number in which this information is gathered.')
fjdaryEncTempDeId = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempDeId.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempDeId.setDescription('DE ID in which this information is gathered.\n         When fjdaryEncTempType is de, this information is effective')
fjdaryEncTempTime = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempTime.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempTime.setDescription('Passage second when this information was gathered.')
fjdaryEncTempType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 32))).clone(namedValues=NamedValues(("ce", 16), ("de", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempType.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempType.setDescription('enclosure type in which this information is gathered.')
fjdaryEncTempInfo0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo0.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo0.setDescription('The maximum temperature is shown during one hour in the past.\n         The unit is Celsius.')
fjdaryEncTempInfo1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo1.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo1.setDescription('The maximum temperature 1 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo2.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo2.setDescription('The maximum temperature 2 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo3.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo3.setDescription('The maximum temperature 3 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo4 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo4.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo4.setDescription('The maximum temperature 4 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo5 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo5.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo5.setDescription('The maximum temperature 5 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo6 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo6.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo6.setDescription('The maximum temperature 6 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo7 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo7.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo7.setDescription('The maximum temperature 7 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo8 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo8.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo8.setDescription('The maximum temperature 8 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo9 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo9.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo9.setDescription('The maximum temperature 9 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo10 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo10.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo10.setDescription('The maximum temperature 10 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo11 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo11.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo11.setDescription('The maximum temperature 11 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo12 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo12.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo12.setDescription('The maximum temperature 12 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo13 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo13.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo13.setDescription('The maximum temperature 13 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo14 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo14.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo14.setDescription('The maximum temperature 14 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo15 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo15.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo15.setDescription('The maximum temperature 15 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo16 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo16.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo16.setDescription('The maximum temperature 16 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo17 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo17.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo17.setDescription('The maximum temperature 17 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo18 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo18.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo18.setDescription('The maximum temperature 18 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo19 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo19.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo19.setDescription('The maximum temperature 19 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo20 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo20.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo20.setDescription('The maximum temperature 20 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo21 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo21.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo21.setDescription('The maximum temperature 21 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo22 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo22.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo22.setDescription('The maximum temperature 22 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo23 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo23.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo23.setDescription('The maximum temperature 23 hour ago is shown. The unit is Celsius.')
fjdaryEncTempInfo24 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 13, 4, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryEncTempInfo24.setStatus('current')
if mibBuilder.loadTexts: fjdaryEncTempInfo24.setDescription('The maximum temperature 24 hour ago is shown. The unit is Celsius.')
fjdaryFirmTotal = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 4, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryFirmTotal.setStatus('current')
if mibBuilder.loadTexts: fjdaryFirmTotal.setDescription('The value of this object indicates the total firmware information.\n         VVLLSSSS\n         | | |\n         | | +-firmware suffix\n         | +-firmware level\n         +-firmware version')
fjdaryPfInfoVersion = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfInfoVersion.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfInfoVersion.setDescription('This is the version for this performance information data.')
fjdaryPfInfoLevel = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfInfoLevel.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfInfoLevel.setDescription('This is the level for this performance information data.')
fjdaryPfInfoIntervalTime = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfInfoIntervalTime.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfInfoIntervalTime.setDescription('This indicates the acquisition interval of the performance information\n         data. The unit is a second.\n         If this value is not applicable, return zero.')
fjdaryPfInfoUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfInfoUpdateTime.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfInfoUpdateTime.setDescription('This indicates the update time of the performance information data.\n         The unit is a second.')
fjdaryPfInfoDataValid = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 1))).clone(namedValues=NamedValues(("invalid", 255), ("valid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfInfoDataValid.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfInfoDataValid.setDescription('This shows whether the performance information data to be acquired\n         exists.')
fjdaryPfOluCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluCount.setDescription("The number of OLU's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfOluTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2), )
if mibBuilder.loadTexts: fjdaryPfOluTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluTable.setDescription('')
fjdaryPfOluEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfOluIndex"))
if mibBuilder.loadTexts: fjdaryPfOluEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluEntry.setDescription('')
fjdaryPfOluIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluIndex.setDescription('The value of this object uniquely identifies this fjdaryPfOlu entry.\n         This is the same as OLUN.')
fjdaryPfOluRdIOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluRdIOPS.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluRdIOPS.setDescription('This shows the READ IOPS related to host I/O processing.')
fjdaryPfOluWtIOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluWtIOPS.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluWtIOPS.setDescription('This shows the WRITE IOPS related to host I/O processing.')
fjdaryPfOluAdCpRdIOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluAdCpRdIOPS.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluAdCpRdIOPS.setDescription('This shows the READ IOPS related to advanced copy processing.')
fjdaryPfOluAdCpWtIOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluAdCpWtIOPS.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluAdCpWtIOPS.setDescription('This shows the WRITE IOPS related to advanced copy processing.')
fjdaryPfOluRdTp = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluRdTp.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluRdTp.setDescription('This shows the READ Throughput related to host I/O processing.\n         The unit is MB/sec.')
fjdaryPfOluWtTp = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluWtTp.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluWtTp.setDescription('This shows the WRITE Throughput related to host I/O processing.\n         The unit is MB/sec.')
fjdaryPfOluAdCpRdTp = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluAdCpRdTp.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluAdCpRdTp.setDescription('This shows the READ Throughput related to advanced copy processing.\n         The unit is MB/sec.')
fjdaryPfOluAdCpWtTp = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluAdCpWtTp.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluAdCpWtTp.setDescription('This shows the WRITE Throughput related to advanced copy processing.\n         The unit is MB/sec.')
fjdaryPfOluRdRspTime = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluRdRspTime.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluRdRspTime.setDescription('This indicates the average of READ Response Time related to host I/O\n         processing. The unit is msec.')
fjdaryPfOluWtRspTime = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluWtRspTime.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluWtRspTime.setDescription('This indicates the average of WRITE Response Time related to host I/O\n         processing. The unit is msec.')
fjdaryPfOluRdCacheHit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluRdCacheHit.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluRdCacheHit.setDescription('This shows the READ Cache Hit Rate related to host I/O processing.\n         The unit is percent.')
fjdaryPfOluWtCacheHit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluWtCacheHit.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluWtCacheHit.setDescription('This shows the WRITE Cache Hit Rate related to host I/O processing.\n         The unit is percent.')
fjdaryPfOluAdRdCacheHit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluAdRdCacheHit.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluAdRdCacheHit.setDescription('This shows the READ Cache Hit Rate related to advanced copy\n         processing. The unit is percent.')
fjdaryPfOluAdWtCacheHit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluAdWtCacheHit.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluAdWtCacheHit.setDescription('This shows the WRITE Cache Hit Rate related to advanced copy\n         processing. The unit is percent.')
fjdaryPfOluRdPreFetchHit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluRdPreFetchHit.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluRdPreFetchHit.setDescription('This shows the READ Prefetch Hit Rate related to host I/O processing.\n         The unit is percent.')
fjdaryPfOluAdRdPreFetchHit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluAdRdPreFetchHit.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluAdRdPreFetchHit.setDescription('This shows the READ Prefetch Hit Rate related to advanced copy\n         processing. The unit is percent.')
fjdaryPfOluRdExcCacheHit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluRdExcCacheHit.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluRdExcCacheHit.setDescription('This shows the READ Extreme Cache Cache Hit Rate related to host I/O\n         processing. The unit is percent.')
fjdaryPfOluAdRdExcCacheHit = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfOluAdRdExcCacheHit.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfOluAdRdExcCacheHit.setDescription('This shows the READ Extreme Cache Cache Hit Rate related to\n         advanced copy processing. The unit is percent.')
fjdaryPfDiskCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDiskCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDiskCount.setDescription("The number of DISK's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfDiskTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 3, 2), )
if mibBuilder.loadTexts: fjdaryPfDiskTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDiskTable.setDescription('')
fjdaryPfDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 3, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDiskIndex"))
if mibBuilder.loadTexts: fjdaryPfDiskEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDiskEntry.setDescription('')
fjdaryPfDiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDiskIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDiskIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDisk entry.')
fjdaryPfDiskPlun = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDiskPlun.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDiskPlun.setDescription('This shows PLU number concerned DISK.\n         the following definition:\n           0xDDSS\n             | |\n             | +-slot number\n             +-DE ID')
fjdaryPfDiskBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDiskBusy.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDiskBusy.setDescription('This shows DISK busy rate. The unit is percent.')
fjdaryPfCmCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCount.setDescription("The number of CM's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfCmTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 4, 2), )
if mibBuilder.loadTexts: fjdaryPfCmTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmTable.setDescription('')
fjdaryPfCmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 4, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfCmIndex"))
if mibBuilder.loadTexts: fjdaryPfCmEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmEntry.setDescription('')
fjdaryPfCmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmIndex.setDescription('The value of this object uniquely identifies this fjdaryPfCm entry.')
fjdaryPfCmBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmBusy.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmBusy.setDescription('This shows the average of CPU busy rate. The unit is percent.')
fjdaryPfCmCpRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCpRemain.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCpRemain.setDescription('This shows the amount of the copy remainder. The unit is Byte.')
fjdaryPfCaPortCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCaPortCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortCount.setDescription("The number of CA port's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfCaPortTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 5, 2), )
if mibBuilder.loadTexts: fjdaryPfCaPortTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortTable.setDescription('')
fjdaryPfCaPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 5, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfCaPortIndex"))
if mibBuilder.loadTexts: fjdaryPfCaPortEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortEntry.setDescription('')
fjdaryPfCaPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCaPortIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortIndex.setDescription('The value of this object uniquely identifies this fjdaryPfCaPort\n         entry.')
fjdaryPfCaPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(11, 12, 13, 20))).clone(namedValues=NamedValues(("ca", 11), ("ra", 12), ("cara", 13), ("initiator", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCaPortMode.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortMode.setDescription('This shows a mode concerned CA.')
fjdaryPfCaPortRdIOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCaPortRdIOPS.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortRdIOPS.setDescription('This shows the READ IOPS for the CA,CARA mode.\n         The Initiator IOPS is shown for RA,Initiator mode.')
fjdaryPfCaPortWtIOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCaPortWtIOPS.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortWtIOPS.setDescription('This shows the WRITE IOPS for the CA,CARA mode.\n         The Target IOPS is shown for the RA mode.\n         This information is an invalid value for the Initiator mode.')
fjdaryPfCaPortRdTp = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCaPortRdTp.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortRdTp.setDescription('This shows the amount of the READ Throughput for the CA,CARA mode.\n         The Initiator Throughput is shown for RA,Initiator mode.\n         The unit is MB/sec.')
fjdaryPfCaPortWtTp = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCaPortWtTp.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortWtTp.setDescription('This shows the amount of the WRITE Throughput for the CA,CARA mode.\n         The Target Throughput is shown for the RA mode.\n         The unit is MB/sec.\n         This information is an invalid value for the Initiator mode.')
fjdaryPfDtOluCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtOluCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtOluCount.setDescription("The number of OLU's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfDtOluTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 6, 2), )
if mibBuilder.loadTexts: fjdaryPfDtOluTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtOluTable.setDescription('')
fjdaryPfDtOluEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 6, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtOluIndex"))
if mibBuilder.loadTexts: fjdaryPfDtOluEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtOluEntry.setDescription('')
fjdaryPfDtOluIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtOluIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtOluIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDtOlu\n         entry.')
fjdaryPfDtOluInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 6, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtOluInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtOluInfo.setDescription('The value of this object indicates the OLU performance information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|OLU info#index*2 (80 bytes)                        |\n              +------------+------------+------------+------------+\n          0x50|OLU info#index*2+1 (80 bytes)                      |\n              +------------+------------+------------+------------+\n\n         OLU info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|fjdaryPfOluRdIOPS                                  |\n              +------------+------------+------------+------------+\n          0x04|fjdaryPfOluWtIOPS                                  |\n              +------------+------------+------------+------------+\n          0x08|fjdaryPfOluAdCpRdIOPS                              |\n              +------------+------------+------------+------------+\n          0x0c|fjdaryPfOluAdCpWtIOPS                              |\n              +------------+------------+------------+------------+\n          0x10|fjdaryPfOluRdTp                                    |\n              +------------+------------+------------+------------+\n          0x14|fjdaryPfOluWtTp                                    |\n              +------------+------------+------------+------------+\n          0x18|fjdaryPfOluAdCpRdTp                                |\n              +------------+------------+------------+------------+\n          0x1c|fjdaryPfOluAdCpWtTp                                |\n              +------------+------------+------------+------------+\n          0x20|fjdaryPfOluRdRspTime                               |\n              +------------+------------+------------+------------+\n          0x24|fjdaryPfOluWtRspTime                               |\n              +------------+------------+------------+------------+\n          0x28|Reserved                                           |\n              +                                                   +\n          0x2c|                                                   |\n              +------------+------------+------------+------------+\n          0x30|fjdaryPfOluRdCacheHit                              |\n              +------------+------------+------------+------------+\n          0x34|fjdaryPfOluWtCacheHit                              |\n              +------------+------------+------------+------------+\n          0x38|fjdaryPfOluAdRdCacheHit                            |\n              +------------+------------+------------+------------+\n          0x3c|fjdaryPfOluAdWtCacheHit                            |\n              +------------+------------+------------+------------+\n          0x40|fjdaryPfOluRdPreFetchHit                           |\n              +------------+------------+------------+------------+\n          0x44|fjdaryPfOluAdRdPreFetchHit                         |\n              +------------+------------+------------+------------+\n          0x48|fjdaryPfOluRdExcCacheHit                           |\n              +------------+------------+------------+------------+\n          0x4c|fjdaryPfOluAdRdExcCacheHit                         |\n              +------------+------------+------------+------------+')
fjdaryPfDtDiskCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtDiskCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtDiskCount.setDescription("The number of DISK's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfDtDiskTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 7, 2), )
if mibBuilder.loadTexts: fjdaryPfDtDiskTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtDiskTable.setDescription('')
fjdaryPfDtDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 7, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtDiskIndex"))
if mibBuilder.loadTexts: fjdaryPfDtDiskEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtDiskEntry.setDescription('')
fjdaryPfDtDiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtDiskIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtDiskIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDtDisk\n         entry.')
fjdaryPfDtDiskInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 7, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtDiskInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtDiskInfo.setDescription('The value of this object indicates the DISK performance information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|DISK info#index*26 (8 bytes)                       |\n              +------------+------------+------------+------------+\n          0x08|DISK info#index*26+1 (8 bytes)                     |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xcc|DISK info#index*26+25 (8 bytes)                    |\n              +------------+------------+------------+------------+\n\n         DISK info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|fjdaryPfDiskPlun         |Reserved                 |\n              +------------+------------+------------+------------+\n          0x04|fjdaryPfDiskBusy                                   |\n              +------------+------------+------------+------------+')
fjdaryPfDtCmCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmCount.setDescription("The number of CM's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfDtCmTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 8, 2), )
if mibBuilder.loadTexts: fjdaryPfDtCmTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmTable.setDescription('')
fjdaryPfDtCmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 8, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtCmIndex"))
if mibBuilder.loadTexts: fjdaryPfDtCmEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmEntry.setDescription('')
fjdaryPfDtCmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDtCm entry.')
fjdaryPfDtCmInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 8, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmInfo.setDescription('The value of this object indicates the CM performance information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|CM info#index0 (16 bytes)                          |\n              +------------+------------+------------+------------+\n          0x10|CM info#index1 (16 bytes)                          |\n              +------------+------------+------------+------------+\n\n         CM info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|fjdaryPfCmBusy                                     |\n              +------------+------------+------------+------------+\n          0x04|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x08|fjdaryPfCmCpRemain                                 |\n              +                                                   +\n          0x0c|                                                   |\n              +------------+------------+------------+------------+')
fjdaryPfDtCaPortCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCaPortCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCaPortCount.setDescription("The number of CA port's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfDtCaPortTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 9, 2), )
if mibBuilder.loadTexts: fjdaryPfDtCaPortTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCaPortTable.setDescription('')
fjdaryPfDtCaPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 9, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtCaPortIndex"))
if mibBuilder.loadTexts: fjdaryPfDtCaPortEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCaPortEntry.setDescription('')
fjdaryPfDtCaPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCaPortIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCaPortIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDtCaPort\n         entry.')
fjdaryPfDtCaPortInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 9, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCaPortInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCaPortInfo.setDescription('The value of this object indicates the CA port performance\n         information.\n         This information is a little endian.\n         This information is an invalid value for the RA,Initiator mode.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|CA port info#index*16 (16 bytes)                   |\n              +------------+------------+------------+------------+\n          0x10|CA port info#index*16+1 (16 bytes)                 |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xf0|CA port info#index*16+15 (16 bytes)                |\n              +------------+------------+------------+------------+\n\n         CA port info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|fjdaryPfCaPortRdIOPS                               |\n              +------------+------------+------------+------------+\n          0x04|fjdaryPfCaPortWtIOPS                               |\n              +------------+------------+------------+------------+\n          0x08|fjdaryPfCaPortRdTp                                 |\n              +------------+------------+------------+------------+\n          0x0c|fjdaryPfCaPortWtTp                                 |\n              +------------+------------+------------+------------+')
fjdaryPfRaPortCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfRaPortCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfRaPortCount.setDescription("The number of CA port's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfRaPortTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 10, 2), )
if mibBuilder.loadTexts: fjdaryPfRaPortTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfRaPortTable.setDescription('')
fjdaryPfRaPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 10, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfRaPortIndex"))
if mibBuilder.loadTexts: fjdaryPfRaPortEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfRaPortEntry.setDescription('')
fjdaryPfRaPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfRaPortIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfRaPortIndex.setDescription('The value of this object uniquely identifies this fjdaryPfRaPort\n         entry.')
fjdaryPfRaPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(11, 12, 13, 20))).clone(namedValues=NamedValues(("ca", 11), ("ra", 12), ("cara", 13), ("initiator", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfRaPortMode.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfRaPortMode.setDescription('This shows a mode concerned CA.')
fjdaryPfRaPortRdIOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfRaPortRdIOPS.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfRaPortRdIOPS.setDescription('The Initiator IOPS is shown for RA,Initiator,CARA mode.\n         This information is an invalid value for the CA mode.')
fjdaryPfRaPortWtIOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 10, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfRaPortWtIOPS.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfRaPortWtIOPS.setDescription('The Target IOPS is shown for the RA,CARA mode.\n         This information is an invalid value for the Initiator,CA mode.')
fjdaryPfRaPortRdTp = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 10, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfRaPortRdTp.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfRaPortRdTp.setDescription('The Initiator Throughput is shown for RA,Initiator,CARA mode.\n         The unit is MB/sec.\n         This information is an invalid value for the CA mode.')
fjdaryPfRaPortWtTp = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfRaPortWtTp.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfRaPortWtTp.setDescription('The Target Throughput is shown for the RA,CARA mode.\n         The unit is MB/sec.\n         This information is an invalid value for the Initiator,CA mode.')
fjdaryPfDtRaPortCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtRaPortCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtRaPortCount.setDescription("The number of CA port's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfDtRaPortTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 11, 2), )
if mibBuilder.loadTexts: fjdaryPfDtRaPortTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtRaPortTable.setDescription('')
fjdaryPfDtRaPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 11, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtRaPortIndex"))
if mibBuilder.loadTexts: fjdaryPfDtRaPortEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtRaPortEntry.setDescription('')
fjdaryPfDtRaPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtRaPortIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtRaPortIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDtRaPort\n         entry.')
fjdaryPfDtRaPortInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 11, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtRaPortInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtRaPortInfo.setDescription('The value of this object indicates the CA port performance\n         information.\n         This information is a little endian.\n         This information is an invalid value for the CA mode.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|CA port info#index*16 (16 bytes)                   |\n              +------------+------------+------------+------------+\n          0x10|CA port info#index*16+1 (16 bytes)                 |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0xf0|CA port info#index*16+15 (16 bytes)                |\n              +------------+------------+------------+------------+\n\n         CA port info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|fjdaryPfRaPortRdIOPS                               |\n              +------------+------------+------------+------------+\n          0x04|fjdaryPfRaPortWtIOPS                               |\n              +------------+------------+------------+------------+\n          0x08|fjdaryPfRaPortRdTp                                 |\n              +------------+------------+------------+------------+\n          0x0c|fjdaryPfRaPortWtTp                                 |\n              +------------+------------+------------+------------+')
fjdaryPfPfmCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 12, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfPfmCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfPfmCount.setDescription("The number of PFM's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfPfmTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 12, 2), )
if mibBuilder.loadTexts: fjdaryPfPfmTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfPfmTable.setDescription('')
fjdaryPfPfmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 12, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfPfmIndex"))
if mibBuilder.loadTexts: fjdaryPfPfmEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfPfmEntry.setDescription('')
fjdaryPfPfmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfPfmIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfPfmIndex.setDescription('The value of this object uniquely identifies this fjdaryPfPfm entry.')
fjdaryPfPfmBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfPfmBusy.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfPfmBusy.setDescription('This shows a busy rate of PFM. The unit is percent.')
fjdaryPfDPfmCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 13, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDPfmCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDPfmCount.setDescription("The number of PFM's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfDtPfmTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 13, 2), )
if mibBuilder.loadTexts: fjdaryPfDtPfmTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtPfmTable.setDescription('')
fjdaryPfDtPfmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 13, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtPfmIndex"))
if mibBuilder.loadTexts: fjdaryPfDtPfmEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtPfmEntry.setDescription('')
fjdaryPfDtPfmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtPfmIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtPfmIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDtPfm\n         entry.')
fjdaryPfDtPfmInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 13, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtPfmInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtPfmInfo.setDescription('The value of this object indicates the PFM performance\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|PFM info#index0 (8 bytes)                          |\n              +------------+------------+------------+------------+\n          0x08|PFM info#index1 (8 bytes)                          |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0x3c|PFM info#index7 (8 bytes)                          |\n              +------------+------------+------------+------------+\n\n         PFM info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|PFM No                   |Reserved                 |\n              +------------+------------+------------+------------+\n          0x04|fjdaryPfPfmBusy                                    |\n              +------------+------------+------------+------------+')
fjdaryPfCmCoreCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreCount.setDescription("The number of CM core's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfCmCoreTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2), )
if mibBuilder.loadTexts: fjdaryPfCmCoreTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreTable.setDescription('')
fjdaryPfCmCoreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfCmCoreIndex"))
if mibBuilder.loadTexts: fjdaryPfCmCoreEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreEntry.setDescription('')
fjdaryPfCmCoreIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreIndex.setDescription('The value of this object uniquely identifies this fjdaryPfCmCore\n         entry.')
fjdaryPfCmCoreValidCount = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreValidCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreValidCount.setDescription('This shows an effective number of this information.\n         For instance, when this value is two, fjdaryPfCmCoreBusy0\n         and fjdaryPfCmCoreBusy1 become effective information.')
fjdaryPfCmCoreBusy0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy0.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy0.setDescription('This shows the busy rate of CPU core#0 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy1.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy1.setDescription('This shows the busy rate of CPU core#1 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy2.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy2.setDescription('This shows the busy rate of CPU core#2 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy3.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy3.setDescription('This shows the busy rate of CPU core#3 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy4.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy4.setDescription('This shows the busy rate of CPU core#4 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy5.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy5.setDescription('This shows the busy rate of CPU core#5 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy6 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy6.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy6.setDescription('This shows the busy rate of CPU core#6 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy7 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy7.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy7.setDescription('This shows the busy rate of CPU core#7 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy8 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy8.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy8.setDescription('This shows the busy rate of CPU core#8 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy9 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy9.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy9.setDescription('This shows the busy rate of CPU core#9 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy10 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy10.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy10.setDescription('This shows the busy rate of CPU core#10 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy11 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy11.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy11.setDescription('This shows the busy rate of CPU core#11 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy12 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy12.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy12.setDescription('This shows the busy rate of CPU core#12 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy13 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy13.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy13.setDescription('This shows the busy rate of CPU core#13 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy14 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy14.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy14.setDescription('This shows the busy rate of CPU core#14 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy15 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy15.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy15.setDescription('This shows the busy rate of CPU core#15 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy16 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy16.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy16.setDescription('This shows the busy rate of CPU core#16 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy17 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy17.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy17.setDescription('This shows the busy rate of CPU core#17 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy18 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy18.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy18.setDescription('This shows the busy rate of CPU core#18 for SAN.\n         The unit is percent.')
fjdaryPfCmCoreBusy19 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 14, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy19.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmCoreBusy19.setDescription('This shows the busy rate of CPU core#19 for SAN.\n         The unit is percent.')
fjdaryPfDtCmCoreCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 15, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmCoreCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmCoreCount.setDescription("The number of CM core's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfDtCmCoreTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 15, 2), )
if mibBuilder.loadTexts: fjdaryPfDtCmCoreTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmCoreTable.setDescription('')
fjdaryPfDtCmCoreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 15, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtCmCoreIndex"))
if mibBuilder.loadTexts: fjdaryPfDtCmCoreEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmCoreEntry.setDescription('')
fjdaryPfDtCmCoreIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 15, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmCoreIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmCoreIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDtCmCore\n         entry.')
fjdaryPfDtCmCoreInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 15, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmCoreInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmCoreInfo.setDescription('The value of this object indicates the CM core performance\n         information. This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|CM core info#index0 (88 bytes)                     |\n              +------------+------------+------------+------------+\n          0x58|CM core info#index1 (88 bytes)                     |\n              +------------+------------+------------+------------+\n\n         CM core info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|fjdaryPfCm  |Reserved                              |\n              | Core       |                                      |\n              | ValidCount |                                      |\n              +------------+------------+------------+------------+\n          0x04|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x08|fjdaryPfCmCoreBusy0                                |\n              +------------+------------+------------+------------+\n          0x0c|fjdaryPfCmCoreBusy1                                |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0x54|fjdaryPfCmCoreBusy19                               |\n              +------------+------------+------------+------------+')
fjdaryPfCmNasCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCount.setDescription('The number of CM NAS performance informations\n         (regardless of their current state) present on this system.')
fjdaryPfCmNasTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2), )
if mibBuilder.loadTexts: fjdaryPfCmNasTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasTable.setDescription('')
fjdaryPfCmNasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfCmNasIndex"))
if mibBuilder.loadTexts: fjdaryPfCmNasEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasEntry.setDescription('')
fjdaryPfCmNasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasIndex.setDescription('The value of this object uniquely identifies this fjdaryPfCmNas\n         entry.')
fjdaryPfCmNasIOWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasIOWaitTime.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasIOWaitTime.setDescription('This shows the average of the I/O request at waiting time.\n         The unit is msec.')
fjdaryPfCmNasRdThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasRdThroughput.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasRdThroughput.setDescription('This shows the READ Throughput. The unit is MB/sec.')
fjdaryPfCmNasWtThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasWtThroughput.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasWtThroughput.setDescription('This shows the WRITE Throughput. The unit is MB/sec.')
fjdaryPfCmNasIOCPUBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasIOCPUBusy.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasIOCPUBusy.setDescription('This shows the busy rate of CPU at the I/O request period.\n         The unit is percent.')
fjdaryPfCmNasUsageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasUsageRate.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasUsageRate.setDescription('This shows the usage rate of the NAS volume. The unit is percent.')
fjdaryPfCmNasUsedAmount = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasUsedAmount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasUsedAmount.setDescription('This shows the used amount of the NAS volume. The unit is KB.')
fjdaryPfCmNasSambaOpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasSambaOpCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasSambaOpCount.setDescription('This shows the number of per second of Samba operations.')
fjdaryPfCmNasNFSOpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasNFSOpCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasNFSOpCount.setDescription('This shows the number of per second of NFS operations.')
fjdaryPfCmNasNtInThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasNtInThroughput.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasNtInThroughput.setDescription('This shows the receive throughput in the network interface.\n         The unit is MB/sec.')
fjdaryPfCmNasNtOutThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasNtOutThroughput.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasNtOutThroughput.setDescription('This shows the transmit throughput in the network interface.\n         The unit is MB/sec.')
fjdaryPfCmNasCPUBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCPUBusy.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCPUBusy.setDescription('This shows the average of CPU busy rate for NAS.\n         The unit is percent.')
fjdaryPfCmNasFreeMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasFreeMemory.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasFreeMemory.setDescription('This shows an unused amount of the memory. The unit is KB.')
fjdaryPfCmNasCachedMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCachedMemory.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCachedMemory.setDescription('This shows the amount of the memory in which the cache data is\n         retained when the disk is accessed. The unit is KB.')
fjdaryPfCmNasCPUIOWait = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 16, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCPUIOWait.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCPUIOWait.setDescription('This shows the average of CPU I/O wait rate for NAS.\n         The unit is percent.')
fjdaryPfDtCmNasCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 17, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasCount.setDescription('The number of CM NAS performance informations\n         (regardless of their current state) present on this system.')
fjdaryPfDtCmNasTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 17, 2), )
if mibBuilder.loadTexts: fjdaryPfDtCmNasTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasTable.setDescription('')
fjdaryPfDtCmNasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 17, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtCmNasIndex"))
if mibBuilder.loadTexts: fjdaryPfDtCmNasEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasEntry.setDescription('')
fjdaryPfDtCmNasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 17, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDtCmNas\n         entry.')
fjdaryPfDtCmNasInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 17, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasInfo.setDescription('The value of this object indicates the CM NAS performance\n         information. This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|fjdaryPfCmNasIOWaitTime                            |\n              +------------+------------+------------+------------+\n          0x04|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x08|fjdaryPfCmNasRdThroughput                          |\n              +------------+------------+------------+------------+\n          0x0c|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x10|fjdaryPfCmNasWtThroughput                          |\n              +------------+------------+------------+------------+\n          0x14|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x18|fjdaryPfCm  |Reserved                              |\n              | NasIOCPU   |                                      |\n              | Busy       |                                      |\n              +------------+------------+------------+------------+\n          0x1c|fjdaryPfCm  |Reserved                              |\n              | NasUsage   |                                      |\n              | Rate       |                                      |\n              +------------+------------+------------+------------+\n          0x20|fjdaryPfCmNasUsedAmount                            |\n              +                                                   +\n          0x24|                                                   |\n              +------------+------------+------------+------------+\n          0x28|Reserved                                           |\n              +                                                   +\n          0x2c|                                                   |\n              +------------+------------+------------+------------+\n          0x30|fjdaryPfCmNasSambaOpCount                          |\n              +                                                   +\n          0x34|                                                   |\n              +------------+------------+------------+------------+\n          0x38|fjdaryPfCmNasNFSOpCount                            |\n              +                                                   +\n          0x3c|                                                   |\n              +------------+------------+------------+------------+\n          0x40|Reserved                                           |\n              :                                                   :\n          0x74|                                                   |\n              +------------+------------+------------+------------+\n          0x78|fjdaryPfCmNasNtInThroughput                        |\n              +------------+------------+------------+------------+\n          0x7c|Reserved                                           |\n              :                                                   :\n          0x84|                                                   |\n              +------------+------------+------------+------------+\n          0x88|fjdaryPfCmNasNtOutThroughput                       |\n              +------------+------------+------------+------------+\n          0x8c|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x90|fjdaryPfCm  |fjdaryPfCm  |Reserved                 |\n              | NasCPU     | NasCPU     |                         |\n              | Busy       | IOWait     |                         |\n              +------------+------------+------------+------------+\n          0x94|fjdaryPfCmNasFreeMemory                            |\n              +------------+------------+------------+------------+\n          0x98|fjdaryPfCmNasCachedMemory                          |\n              +------------+------------+------------+------------+\n          0x9c|Reserved                                           |\n              :                                                   :\n          0xbc|                                                   |\n              +------------+------------+------------+------------+')
fjdaryPfCmNasCoreCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreCount.setDescription("The number of CM NAS core's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfCmNasCoreTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2), )
if mibBuilder.loadTexts: fjdaryPfCmNasCoreTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreTable.setDescription('')
fjdaryPfCmNasCoreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfCmNasCoreIndex"))
if mibBuilder.loadTexts: fjdaryPfCmNasCoreEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreEntry.setDescription('')
fjdaryPfCmNasCoreIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIndex.setDescription('The value of this object uniquely identifies this\n         fjdaryPfCmNasCore entry.')
fjdaryPfCmNasCoreValidCount = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreValidCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreValidCount.setDescription('This shows an effective number of this information.\n         For instance, when this value is two, fjdaryPfCmNasCoreBusy0\n         and fjdaryPfCmNasCoreBusy1 become effective information.')
fjdaryPfCmNasCoreBusy0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy0.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy0.setDescription('This shows the busy rate of CPU core#0 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy1.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy1.setDescription('This shows the busy rate of CPU core#1 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy2.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy2.setDescription('This shows the busy rate of CPU core#2 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy3.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy3.setDescription('This shows the busy rate of CPU core#3 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy4.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy4.setDescription('This shows the busy rate of CPU core#4 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy5.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy5.setDescription('This shows the busy rate of CPU core#5 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy6 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy6.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy6.setDescription('This shows the busy rate of CPU core#6 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy7 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy7.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy7.setDescription('This shows the busy rate of CPU core#7 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy8 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy8.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy8.setDescription('This shows the busy rate of CPU core#8 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy9 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy9.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy9.setDescription('This shows the busy rate of CPU core#9 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy10 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy10.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy10.setDescription('This shows the busy rate of CPU core#10 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy11 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy11.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy11.setDescription('This shows the busy rate of CPU core#11 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy12 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy12.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy12.setDescription('This shows the busy rate of CPU core#12 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy13 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy13.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy13.setDescription('This shows the busy rate of CPU core#13 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy14 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy14.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy14.setDescription('This shows the busy rate of CPU core#14 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy15 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy15.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy15.setDescription('This shows the busy rate of CPU core#15 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy16 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy16.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy16.setDescription('This shows the busy rate of CPU core#16 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy17 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy17.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy17.setDescription('This shows the busy rate of CPU core#17 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy18 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy18.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy18.setDescription('This shows the busy rate of CPU core#18 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreBusy19 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 18, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy19.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreBusy19.setDescription('This shows the busy rate of CPU core#19 for NAS.\n         The unit is percent.')
fjdaryPfDtCmNasCoreCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 19, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreCount.setDescription("The number of CM NAS core's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfDtCmNasCoreTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 19, 2), )
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreTable.setDescription('')
fjdaryPfDtCmNasCoreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 19, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtCmNasCoreIndex"))
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreEntry.setDescription('')
fjdaryPfDtCmNasCoreIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 19, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDtCmNasCore\n         entry.')
fjdaryPfDtCmNasCoreInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 19, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreInfo.setDescription('The value of this object indicates the CM core performance\n         information. This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|CM NAS core info#index0 (32 bytes)                 |\n              +------------+------------+------------+------------+\n          0x20|CM NAS core info#index1 (32 bytes)                 |\n              +------------+------------+------------+------------+\n\n         CM NAS core info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|fjdaryPfCm  |Reserved                              |\n              | NasCore    |                                      |\n              | CpuCount   |                                      |\n              +------------+------------+------------+------------+\n          0x04|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x08|fjdaryPfCm  |fjdaryPfCm  |fjdaryPfCm  |fjdaryPfCm  |\n              | NasCore    | NasCore    | NasCore    | NasCore    |\n              | Busy0      | Busy1      |     Busy2  |     Busy3  |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0x18|fjdaryPfCm  |fjdaryPfCm  |fjdaryPfCm  |fjdaryPfCm  |\n              | NasCore    | NasCore    | NasCore    | NasCore    |\n              | Busy16     | Busy17     | Busy18     | Busy19     |\n              +------------+------------+------------+------------+\n          0x1c|Reserved                                           |\n              +------------+------------+------------+------------+')
fjdaryPfCmNasCoreIOWaitCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWaitCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWaitCount.setDescription("The number of CM NAS core's I/O wait performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfCmNasCoreIOWaitTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2), )
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWaitTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWaitTable.setDescription('')
fjdaryPfCmNasCoreIOWaitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfCmNasCoreIOWaitIndex"))
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWaitEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWaitEntry.setDescription('')
fjdaryPfCmNasCoreIOWaitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWaitIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWaitIndex.setDescription('The value of this object uniquely identifies this\n         fjdaryPfCmNasCoreIOWait entry.')
fjdaryPfCmNasCoreIOWaitValidCount = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWaitValidCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWaitValidCount.setDescription('This shows an effective number of this information.\n         For instance, when this value is two, fjdaryPfCmNasCoreIOWait0\n         and fjdaryPfCmNasCoreIOWait1 become effective information.')
fjdaryPfCmNasCoreIOWait0 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait0.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait0.setDescription('This shows the I/O wait rate of CPU core#0 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait1 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait1.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait1.setDescription('This shows the I/O wait rate of CPU core#1 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait2.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait2.setDescription('This shows the I/O wait rate of CPU core#2 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait3 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait3.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait3.setDescription('This shows the I/O wait rate of CPU core#3 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait4 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait4.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait4.setDescription('This shows the I/O wait rate of CPU core#4 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait5 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait5.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait5.setDescription('This shows the I/O wait rate of CPU core#5 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait6 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait6.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait6.setDescription('This shows the I/O wait rate of CPU core#6 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait7 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait7.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait7.setDescription('This shows the I/O wait rate of CPU core#7 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait8 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait8.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait8.setDescription('This shows the I/O wait rate of CPU core#8 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait9 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait9.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait9.setDescription('This shows the I/O wait rate of CPU core#9 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait10 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait10.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait10.setDescription('This shows the I/O wait rate of CPU core#10 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait11 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait11.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait11.setDescription('This shows the I/O wait rate of CPU core#11 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait12 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait12.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait12.setDescription('This shows the I/O wait rate of CPU core#12 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait13 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait13.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait13.setDescription('This shows the I/O wait rate of CPU core#13 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait14 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait14.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait14.setDescription('This shows the I/O wait rate of CPU core#14 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait15 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait15.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait15.setDescription('This shows the I/O wait rate of CPU core#15 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait16 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait16.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait16.setDescription('This shows the I/O wait rate of CPU core#16 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait17 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait17.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait17.setDescription('This shows the I/O wait rate of CPU core#17 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait18 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait18.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait18.setDescription('This shows the I/O wait rate of CPU core#18 for NAS.\n         The unit is percent.')
fjdaryPfCmNasCoreIOWait19 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 20, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait19.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasCoreIOWait19.setDescription('This shows the I/O wait rate of CPU core#19 for NAS.\n         The unit is percent.')
fjdaryPfDtCmNasCoreIOWaitCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 21, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIOWaitCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIOWaitCount.setDescription("The number of CM NAS core's I/O wait performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfDtCmNasCoreIOWaitTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 21, 2), )
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIOWaitTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIOWaitTable.setDescription('')
fjdaryPfDtCmNasCoreIOWaitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 21, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtCmNasCoreIOWaitIndex"))
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIOWaitEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIOWaitEntry.setDescription('')
fjdaryPfDtCmNasCoreIOWaitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 21, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIOWaitIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIOWaitIndex.setDescription('The value of this object uniquely identifies this\n         fjdaryPfDtCmNasCoreIOWait entry.')
fjdaryPfDtCmNasCoreIOWaitInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 21, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIOWaitInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasCoreIOWaitInfo.setDescription('The value of this object indicates the CM core I/O wait performance\n         information. This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|CM NAS core info#index0 (32 bytes)                 |\n              +------------+------------+------------+------------+\n          0x20|CM NAS core info#index1 (32 bytes)                 |\n              +------------+------------+------------+------------+\n\n         CM NAS core info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|fjdaryPfCm  |Reserved                              |\n              | NasCore    |                                      |\n              | IOWait     |                                      |\n              | ValidCount |                                      |\n              +------------+------------+------------+------------+\n          0x04|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x08|fjdaryPfCm  |fjdaryPfCm  |fjdaryPfCm  |fjdaryPfCm  |\n              | NasCore    | NasCore    | NasCore    | NasCore    |\n              | IOWait0    | IOWait1    | IOWait2    | IOWait3    |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0x18|fjdaryPfCm  |fjdaryPfCm  |fjdaryPfCm  |fjdaryPfCm  |\n              | NasCore    | NasCore    | NasCore    | NasCore    |\n              | IOWait16   | IOWait17   | IOWait18   | IOWait19   |\n              +------------+------------+------------+------------+\n          0x1c|Reserved                                           |\n              +------------+------------+------------+------------+')
fjdaryPfCaPortNasCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 22, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCaPortNasCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortNasCount.setDescription("The number of CA port's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfCaPortNasTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 22, 2), )
if mibBuilder.loadTexts: fjdaryPfCaPortNasTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortNasTable.setDescription('')
fjdaryPfCaPortNasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 22, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfCaPortNasIndex"))
if mibBuilder.loadTexts: fjdaryPfCaPortNasEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortNasEntry.setDescription('')
fjdaryPfCaPortNasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 22, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCaPortNasIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortNasIndex.setDescription('The value of this object uniquely identifies this fjdaryPfCaPortNas\n         entry.')
fjdaryPfCaPortNasNtInThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 22, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCaPortNasNtInThroughput.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortNasNtInThroughput.setDescription('This shows the receive throughput in the CA port interface.\n         The unit is MB/sec.')
fjdaryPfCaPortNasNtOutThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 22, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCaPortNasNtOutThroughput.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCaPortNasNtOutThroughput.setDescription('This shows the transmit throughput in the CA port interface.\n         The unit is MB/sec.')
fjdaryPfDtCaPortNasCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 23, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCaPortNasCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCaPortNasCount.setDescription("The number of CA port's performance informations\n         (regardless of their current state) present on this system.")
fjdaryPfDtCaPortNasTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 23, 2), )
if mibBuilder.loadTexts: fjdaryPfDtCaPortNasTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCaPortNasTable.setDescription('')
fjdaryPfDtCaPortNasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 23, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtCaPortNasIndex"))
if mibBuilder.loadTexts: fjdaryPfDtCaPortNasEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCaPortNasEntry.setDescription('')
fjdaryPfDtCaPortNasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 23, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCaPortNasIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCaPortNasIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDtCaPortNas\n         entry.')
fjdaryPfDtCaPortNasInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 23, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCaPortNasInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCaPortNasInfo.setDescription('The value of this object indicates the CA port performance\n         information.\n         This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|CA port info#index*16 (8 bytes)                    |\n              +------------+------------+------------+------------+\n          0x08|CA port info#index*16+1 (8 bytes)                  |\n              +------------+------------+------------+------------+\n              :                                                   :\n              +------------+------------+------------+------------+\n          0x80|CA port info#index*16+15 (8 bytes)                 |\n              +------------+------------+------------+------------+\n\n         CA port info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|fjdaryPfCaPortNasNtInThroughput                    |\n              +------------+------------+------------+------------+\n          0x04|fjdaryPfCaPortNasNtOutThroughput                   |\n              +------------+------------+------------+------------+')
fjdaryPfCmNasVolCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasVolCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasVolCount.setDescription('The number of CM NAS volume performance informations\n         (regardless of their current state) present on this system.')
fjdaryPfCmNasVolTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24, 2), )
if mibBuilder.loadTexts: fjdaryPfCmNasVolTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasVolTable.setDescription('')
fjdaryPfCmNasVolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfCmNasVolIndex"))
if mibBuilder.loadTexts: fjdaryPfCmNasVolEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasVolEntry.setDescription('')
fjdaryPfCmNasVolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasVolIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasVolIndex.setDescription('The value of this object uniquely identifies this fjdaryPfCmNasVol\n         entry.')
fjdaryPfCmNasVolOluNo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasVolOluNo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasVolOluNo.setDescription('This shows the OLU number of NAS volume.')
fjdaryPfCmNasVolIOWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasVolIOWaitTime.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasVolIOWaitTime.setDescription('This shows the average of the I/O request at waiting time.\n         The unit is msec.')
fjdaryPfCmNasVolRdTp = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasVolRdTp.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasVolRdTp.setDescription('This shows the READ Throughput. The unit is MB/sec.')
fjdaryPfCmNasVolWtTp = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasVolWtTp.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasVolWtTp.setDescription('This shows the WRITE Throughput. The unit is MB/sec.')
fjdaryPfCmNasVolIOCPUBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasVolIOCPUBusy.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasVolIOCPUBusy.setDescription('This shows the busy rate of CPU at the I/O request period.\n         The unit is percent.')
fjdaryPfCmNasVolUsageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasVolUsageRate.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasVolUsageRate.setDescription('This shows the usage rate of the NAS volume. The unit is percent.')
fjdaryPfCmNasVolUsedAmount = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 24, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfCmNasVolUsedAmount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfCmNasVolUsedAmount.setDescription('This shows the used amount of the NAS volume. The unit is KB.')
fjdaryPfDtCmNasVolCount = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 25, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasVolCount.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasVolCount.setDescription('The number of CM NAS volume performance informations\n         (regardless of their current state) present on this system.')
fjdaryPfDtCmNasVolTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 25, 2), )
if mibBuilder.loadTexts: fjdaryPfDtCmNasVolTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasVolTable.setDescription('')
fjdaryPfDtCmNasVolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 25, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryPfDtCmNasVolIndex"))
if mibBuilder.loadTexts: fjdaryPfDtCmNasVolEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasVolEntry.setDescription('')
fjdaryPfDtCmNasVolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 25, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasVolIndex.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasVolIndex.setDescription('The value of this object uniquely identifies this fjdaryPfDtCmNasVol\n         entry.')
fjdaryPfDtCmNasVolInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 5, 25, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryPfDtCmNasVolInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryPfDtCmNasVolInfo.setDescription('The value of this object indicates the CM NAS volume performance\n         information. This information is a little endian.\n\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|NAS volume info#index*4 (48 bytes)                 |\n              +------------+------------+------------+------------+\n          0x30|NAS volume info#index*4+1 (48 bytes)               |\n              +------------+------------+------------+------------+\n          0x60|NAS volume info#index*4+2 (48 bytes)               |\n              +------------+------------+------------+------------+\n          0x90|NAS volume info#index*4+3 (48 bytes)               |\n              +------------+------------+------------+------------+\n\n         NAS volume info#\n                  byte 0       byte 1       byte 2       byte 3\n              +------------+------------+------------+------------+\n          0x00|fjdaryPfCmNasVolOluNo                              |\n              +------------+------------+------------+------------+\n          0x04|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x08|fjdaryPfCmNasVolIOWaitTime                         |\n              +------------+------------+------------+------------+\n          0x0c|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x10|fjdaryPfCmNasVolRdTp                               |\n              +------------+------------+------------+------------+\n          0x14|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x18|fjdaryPfCmNasVolWtTp                               |\n              +------------+------------+------------+------------+\n          0x1c|Reserved                                           |\n              +------------+------------+------------+------------+\n          0x20|fjdaryPfCm  |Reserved                              |\n              | NasVol     |                                      |\n              | IOCPUBusy  |                                      |\n              +------------+------------+------------+------------+\n          0x24|fjdaryPfCm  |Reserved                              |\n              | NasVol     |                                      |\n              | UsageRate  |                                      |\n              +------------+------------+------------+------------+\n          0x28|fjdaryPfCmNasVolUsedAmount                         |\n              +                                                   +\n          0x2c|                                                   |\n              +------------+------------+------------+------------+')
fjdaryMgtMachineStatus = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("unused", 2), ("ok", 3), ("warning", 4), ("failed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtMachineStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtMachineStatus.setDescription("Overall status of this system. Status becomes warning or failed\n         when there are broken parts in the system.\n         But, it doesn't become warning or failed when maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)\n         This is the same as fjdaryUnitStatus.")
fjdaryMgtMachineSubStatus = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("unused", 2), ("ok", 3), ("warning", 4), ("failed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtMachineSubStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtMachineSubStatus.setDescription('Overall status of this system. Status becomes warning or failed\n         when there are broken parts in the system.\n         It becomes warning and failed while even maintaining it.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryMgtMaintenanceMode = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtMaintenanceMode.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtMaintenanceMode.setDescription('This shows the state of the mode while maintaining the system.\n         (In the maintenance work, fjdaryMgtMaintenanceMode is on)')
fjdaryMgtConfigInfo = MibScalar((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtConfigInfo.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtConfigInfo.setDescription('This shows the management data of the configuration information of\n         machine. This data is the one only for a certain specific software.')
fjdaryMgtOpVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 2, 2), )
if mibBuilder.loadTexts: fjdaryMgtOpVolumeTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtOpVolumeTable.setDescription('')
fjdaryMgtOpVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 2, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryMgtOpVolumeNumber"))
if mibBuilder.loadTexts: fjdaryMgtOpVolumeEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtOpVolumeEntry.setDescription('')
fjdaryMgtOpVolumeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtOpVolumeNumber.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtOpVolumeNumber.setDescription('This shows the open volume number.')
fjdaryMgtOpVolumeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 15))).clone(namedValues=NamedValues(("unknown", 1), ("ok", 2), ("degraded", 3), ("error", 6), ("dormant", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtOpVolumeStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtOpVolumeStatus.setDescription('This shows the status of open volume.')
fjdaryMgtOpVolumeType = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("open", 2), ("sdv", 3), ("tpv", 4), ("sdpv", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtOpVolumeType.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtOpVolumeType.setDescription('This shows the type of open volume.')
fjdaryMgtOpVolumeCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtOpVolumeCapacity.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtOpVolumeCapacity.setDescription('This shows the open volume capacity. The unit is MB.')
fjdaryMgtOpVolumeType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("open", 2), ("sdv", 3), ("tpv", 4), ("sdpv", 5), ("ftv", 6), ("wsv", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtOpVolumeType2.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtOpVolumeType2.setDescription('This shows the type of open volume. This is more detailed than\n         fjdaryMgtOpVolumeType.')
fjdaryMgtOpVolumeAttribute = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtOpVolumeAttribute.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtOpVolumeAttribute.setDescription('This shows the attribute of open volume.\n         The value is a bit mask.\n\n         The bits have the following definition:\n             Dynamic LUN Mirroring(DLM)    - 4\n             Offloaded Data Transfer(ODX)  - 8')
fjdaryMgtRaidGrpTable = MibTable((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 3, 2), )
if mibBuilder.loadTexts: fjdaryMgtRaidGrpTable.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtRaidGrpTable.setDescription('')
fjdaryMgtRaidGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 3, 2, 1), ).setIndexNames((0, "FJDARY-E150", "fjdaryMgtRaidGrpNumber"))
if mibBuilder.loadTexts: fjdaryMgtRaidGrpEntry.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtRaidGrpEntry.setDescription('')
fjdaryMgtRaidGrpNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtRaidGrpNumber.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtRaidGrpNumber.setDescription('This shows the raid group number.')
fjdaryMgtRaidGrpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 15))).clone(namedValues=NamedValues(("unknown", 1), ("ok", 2), ("degraded", 3), ("error", 6), ("dormant", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtRaidGrpStatus.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtRaidGrpStatus.setDescription('This shows the status of raid group')
fjdaryMgtRaidGrpRaidLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(100, 1, 10, 5, 50, 6, 106, 255))).clone(namedValues=NamedValues(("raid0", 100), ("raid1", 1), ("raid10", 10), ("raid5", 5), ("raid50", 50), ("raid6", 6), ("raid6-fr", 106), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtRaidGrpRaidLevel.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtRaidGrpRaidLevel.setDescription('This shows the RAID level.\n         the following definition:\n           RAID0       - raid0\n           RAID1       - raid1\n           RAID1+0     - raid10\n           RAID5       - raid5\n           RAID5+0     - raid50\n           RAID6       - raid6\n           RAID6-FR    - raid6-fr')
fjdaryMgtRaidGrpCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 211, 1, 21, 1, 150, 14, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fjdaryMgtRaidGrpCapacity.setStatus('current')
if mibBuilder.loadTexts: fjdaryMgtRaidGrpCapacity.setDescription('This shows the raid group capacity. The unit is MB.')
fjdarye150ItemFault = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 2)).setObjects(("FJDARY-E150", "fjdaryTrapItemId"), ("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150ItemFault.setStatus('current')
if mibBuilder.loadTexts: fjdarye150ItemFault.setDescription('A itemFault trap signifies that device was failed.')
fjdarye150BatteryExpiration = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 3)).setObjects(("FJDARY-E150", "fjdaryTrapItemId"), ("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150BatteryExpiration.setStatus('current')
if mibBuilder.loadTexts: fjdarye150BatteryExpiration.setDescription('A batteryExpiration trap signifies that the exchange time of the\n         battery comes.')
fjdarye150ItemWarning = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 5)).setObjects(("FJDARY-E150", "fjdaryTrapItemId"), ("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"), ("FJDARY-E150", "fjdaryTrapWarningInfo"))
if mibBuilder.loadTexts: fjdarye150ItemWarning.setStatus('current')
if mibBuilder.loadTexts: fjdarye150ItemWarning.setDescription('A itemWarning trap signifies that device was warning.')
fjdarye150SensorStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 6)).setObjects(("FJDARY-E150", "fjdaryTrapItemId"), ("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapSensorInfo"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150SensorStatusChange.setStatus('current')
if mibBuilder.loadTexts: fjdarye150SensorStatusChange.setDescription('A sensorStatusChange trap signifies that environment sensor status\n         changes.')
fjdarye150MaintenanceRequired = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 7)).setObjects(("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMaintenanceInfo"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150MaintenanceRequired.setStatus('current')
if mibBuilder.loadTexts: fjdarye150MaintenanceRequired.setDescription('A maintenanceRequired trap signifies that maintenance information.')
fjdarye150Information = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 9)).setObjects(("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150Information.setStatus('current')
if mibBuilder.loadTexts: fjdarye150Information.setDescription('A Information trap signifies that information events.')
fjdarye150CaPortLinkStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 10)).setObjects(("FJDARY-E150", "fjdaryTrapItemId"), ("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapLinkStatusInfo"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150CaPortLinkStatusChange.setStatus('current')
if mibBuilder.loadTexts: fjdarye150CaPortLinkStatusChange.setDescription('A caPortLinkStatusChange trap signifies that CA port link status\n         changes.')
fjdarye150StorageClusterEvent = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 11)).setObjects(("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMaintenanceInfo"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150StorageClusterEvent.setStatus('current')
if mibBuilder.loadTexts: fjdarye150StorageClusterEvent.setDescription('A storageClusterEvent trap signifies that error event of\n         Storage Cluster.')
fjdarye150StorageClusterInformation = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 12)).setObjects(("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150StorageClusterInformation.setStatus('current')
if mibBuilder.loadTexts: fjdarye150StorageClusterInformation.setDescription('A storageClusterInformation trap signifies that information event of\n         Storage Cluster.')
fjdarye150ItemFaultToNormal = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 22)).setObjects(("FJDARY-E150", "fjdaryTrapItemId"), ("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150ItemFaultToNormal.setStatus('current')
if mibBuilder.loadTexts: fjdarye150ItemFaultToNormal.setDescription('A itemFaultToNormal trap signifies that the device state has changed\n         to normal after sending itemFault trap.')
fjdarye150ItemWarningToNormal = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 25)).setObjects(("FJDARY-E150", "fjdaryTrapItemId"), ("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"), ("FJDARY-E150", "fjdaryTrapWarningInfo"))
if mibBuilder.loadTexts: fjdarye150ItemWarningToNormal.setStatus('current')
if mibBuilder.loadTexts: fjdarye150ItemWarningToNormal.setDescription('A itemWarningToNormal trap signifies that the device state has changed\n         to normal after sending itemWarning trap.')
fjdarye150SensorStatusChangeToNormal = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 26)).setObjects(("FJDARY-E150", "fjdaryTrapItemId"), ("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapSensorInfo"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150SensorStatusChangeToNormal.setStatus('current')
if mibBuilder.loadTexts: fjdarye150SensorStatusChangeToNormal.setDescription('A sensorStatusChangeToNormal trap signifies that the error or warning\n         state detected by the environment sensor has returned to normal after\n         sending SensorStatusChange trap.')
fjdarye150Error = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 50)).setObjects(("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150Error.setStatus('current')
if mibBuilder.loadTexts: fjdarye150Error.setDescription('An Error trap signifies that error events.')
fjdarye150Warning = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 51)).setObjects(("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150Warning.setStatus('current')
if mibBuilder.loadTexts: fjdarye150Warning.setDescription('A Warning trap signifies that warning events.')
fjdarye150QuotaLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 60)).setObjects(("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150QuotaLimitExceeded.setStatus('current')
if mibBuilder.loadTexts: fjdarye150QuotaLimitExceeded.setDescription('A quotaLimitExceeded trap signifies that the limit of quota is\n         exceeded.')
fjdarye150QuotaWarningExceeded = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 61)).setObjects(("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150QuotaWarningExceeded.setStatus('current')
if mibBuilder.loadTexts: fjdarye150QuotaWarningExceeded.setDescription('A quotaWarningExceeded trap signifies that the limit of quota is\n         reached.')
fjdarye150QuotaNormal = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 62)).setObjects(("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150QuotaNormal.setStatus('current')
if mibBuilder.loadTexts: fjdarye150QuotaNormal.setDescription('A quotaNormal trap signifies that the quota became less than limit.')
fjdarye150SnapshotInformation = NotificationType((1, 3, 6, 1, 4, 1, 211, 4, 1, 1, 126, 1, 150, 0, 63)).setObjects(("FJDARY-E150", "fjdarySspMachineId"), ("FJDARY-E150", "fjdaryTrapMessage"))
if mibBuilder.loadTexts: fjdarye150SnapshotInformation.setStatus('current')
if mibBuilder.loadTexts: fjdarye150SnapshotInformation.setDescription('A snapshotInformation trap signifies that the execution of snapshot\n         succeeded.')
mibBuilder.exportSymbols("FJDARY-E150", fjdaryPfCmCoreBusy5=fjdaryPfCmCoreBusy5, fjdaryPfCmNasCoreIOWait18=fjdaryPfCmNasCoreIOWait18, fjdaryPfCaPortWtTp=fjdaryPfCaPortWtTp, fjdaryEncTempInfo20=fjdaryEncTempInfo20, fjdaryEncTempInfo7=fjdaryEncTempInfo7, fjdaryPfRaPortRdIOPS=fjdaryPfRaPortRdIOPS, fjdaryCeItemId=fjdaryCeItemId, fjdaryRluTable=fjdaryRluTable, fjdaryPfCmNasFreeMemory=fjdaryPfCmNasFreeMemory, fjdaryPfCmNasCoreIOWait1=fjdaryPfCmNasCoreIOWait1, fjdaryPfCmCpRemain=fjdaryPfCmCpRemain, fjdaryPfCmNasNtInThroughput=fjdaryPfCmNasNtInThroughput, fjdaryPfDtCmNasCoreIOWaitCount=fjdaryPfDtCmNasCoreIOWaitCount, fjdaryMgtRaidGrpTable=fjdaryMgtRaidGrpTable, fjdaryCmRole=fjdaryCmRole, fjdaryMgtRaidGrpEntry=fjdaryMgtRaidGrpEntry, fjdarySspBoxId=fjdarySspBoxId, fjdaryCmmemorySerialNo=fjdaryCmmemorySerialNo, fjdaryEncTempInfo5=fjdaryEncTempInfo5, fjdaryEncPowerInfo8=fjdaryEncPowerInfo8, fjdaryPfCmNasWtThroughput=fjdaryPfCmNasWtThroughput, fjdaryPfCmCoreBusy13=fjdaryPfCmCoreBusy13, fjdaryCmcpuItemId=fjdaryCmcpuItemId, fjdaryMgtConfigInfo=fjdaryMgtConfigInfo, fjdaryCaCount=fjdaryCaCount, fjdaryMachinePowerInfo19=fjdaryMachinePowerInfo19, fjdaryMachineTempIndex=fjdaryMachineTempIndex, fjdaryCmfanCount=fjdaryCmfanCount, fjdaryOlu=fjdaryOlu, fjdaryPfInfoLevel=fjdaryPfInfoLevel, fjdaryPfCmNasUsageRate=fjdaryPfCmNasUsageRate, fjdaryCmIndex=fjdaryCmIndex, fjdaryMachineTempCount=fjdaryMachineTempCount, fjdaryDeCount=fjdaryDeCount, fjdaryFemEntry=fjdaryFemEntry, fjdarye150StorageClusterInformation=fjdarye150StorageClusterInformation, fjdaryCeinletthmlEntry=fjdaryCeinletthmlEntry, fjdaryEncPowerInfo24=fjdaryEncPowerInfo24, fjdaryDethml=fjdaryDethml, fjdaryOpenmapHostTable2=fjdaryOpenmapHostTable2, fjdaryMachinePowerCount=fjdaryMachinePowerCount, fjdaryPfDtCm=fjdaryPfDtCm, fjdaryPfDtCaPort=fjdaryPfDtCaPort, fjdaryPfCaPortEntry=fjdaryPfCaPortEntry, fjdaryPfCmNasSambaOpCount=fjdaryPfCmNasSambaOpCount, fjdaryPfDtCaPortNasInfo=fjdaryPfDtCaPortNasInfo, fjdaryPfCmNasCPUIOWait=fjdaryPfCmNasCPUIOWait, fjdaryHostResponseTable=fjdaryHostResponseTable, fjdaryPfDtCmInfo=fjdaryPfDtCmInfo, fjdaryPfCmCount=fjdaryPfCmCount, fjdaryPfPfm=fjdaryPfPfm, fjdaryBcuIndex=fjdaryBcuIndex, fjdaryCpsuCount=fjdaryCpsuCount, fjdaryEncPowerInfo4=fjdaryEncPowerInfo4, fjdaryIomSubStatus=fjdaryIomSubStatus, fjdaryCmcpuModuleId=fjdaryCmcpuModuleId, fjdaryPfCmBusy=fjdaryPfCmBusy, fjdaryBtuStatus=fjdaryBtuStatus, fjdaryPfCaPortNasCount=fjdaryPfCaPortNasCount, fjdaryAffinityGrpTable=fjdaryAffinityGrpTable, fjdaryHostResponseEntry=fjdaryHostResponseEntry, fjdaryPfCmNasCoreIOWait3=fjdaryPfCmNasCoreIOWait3, fjdaryDlu=fjdaryDlu, fjdaryEncPowerInfo6=fjdaryEncPowerInfo6, fjdaryPfPfmBusy=fjdaryPfPfmBusy, fjdaryBudItemId=fjdaryBudItemId, fjdaryPfDtCmNasCoreTable=fjdaryPfDtCmNasCoreTable, fjdaryPfCmIndex=fjdaryPfCmIndex, fjdaryPfCmNasCoreIOWait19=fjdaryPfCmNasCoreIOWait19, fjdaryMluCount=fjdaryMluCount, fjdaryBtuIndex=fjdaryBtuIndex, fjdaryHostwwnCount=fjdaryHostwwnCount, fjdaryPsu=fjdaryPsu, fjdaryPfDtCmNasCoreIOWaitInfo=fjdaryPfDtCmNasCoreIOWaitInfo, fjdaryMachineTempInfo6=fjdaryMachineTempInfo6, fjdarySspProductId=fjdarySspProductId, fjdaryMluTable=fjdaryMluTable, fjdaryDiskStatus=fjdaryDiskStatus, fjdaryPfRaPortEntry=fjdaryPfRaPortEntry, fjdaryLanport=fjdaryLanport, fjdaryMachineTempInfo24=fjdaryMachineTempInfo24, fjdaryPfDiskBusy=fjdaryPfDiskBusy, fjdaryPfOluRdPreFetchHit=fjdaryPfOluRdPreFetchHit, fjdaryEncPowerInfo17=fjdaryEncPowerInfo17, fjdaryHostiscsiDefine=fjdaryHostiscsiDefine, fjdarySspConfigDate=fjdarySspConfigDate, fjdaryPfDtPfm=fjdaryPfDtPfm, fjdaryPfRaPortWtTp=fjdaryPfRaPortWtTp, fjdaryCmmemoryCount=fjdaryCmmemoryCount, fjdaryMlu=fjdaryMlu, fjdaryFirmTotal=fjdaryFirmTotal, fjdaryPfDtCmNasCoreIndex=fjdaryPfDtCmNasCoreIndex, fjdaryOpenmapIndex=fjdaryOpenmapIndex, fjdarySspVenderId=fjdarySspVenderId, fjdaryPfDtOluIndex=fjdaryPfDtOluIndex, fjdaryPfCmNasCoreCount=fjdaryPfCmNasCoreCount, fjdaryDluCount=fjdaryDluCount, fjdaryDiskCompStatus=fjdaryDiskCompStatus, fjdaryMachinePowerInfo18=fjdaryMachinePowerInfo18, fjdaryMachinePowerInfo15=fjdaryMachinePowerInfo15, fjdaryCeIndex=fjdaryCeIndex, fjdaryPfDtDiskInfo=fjdaryPfDtDiskInfo, fjdaryIomItemId=fjdaryIomItemId, fjdaryHostwwnEntry=fjdaryHostwwnEntry, fjdaryTrapMessage=fjdaryTrapMessage, fjdaryPfCmNasCoreBusy19=fjdaryPfCmNasCoreBusy19, storage=storage, fjdaryPfCmNasCoreBusy8=fjdaryPfCmNasCoreBusy8, fjdaryOpenmapCount=fjdaryOpenmapCount, fjdaryCethmlCount=fjdaryCethmlCount, fjdaryPfDtCmNasVolEntry=fjdaryPfDtCmNasVolEntry, fjdaryResetpathGroup=fjdaryResetpathGroup, fjdaryPfDtDiskTable=fjdaryPfDtDiskTable, fjdaryCethmlTable=fjdaryCethmlTable, fjdaryEncTempInfo0=fjdaryEncTempInfo0, fjdaryPfDtRaPort=fjdaryPfDtRaPort, fjdaryPfCmCoreBusy16=fjdaryPfCmCoreBusy16, fjdarySlu=fjdarySlu, fjdaryFemTable=fjdaryFemTable, fjdaryMgtMaintenanceMode=fjdaryMgtMaintenanceMode, fjdaryRluEntry=fjdaryRluEntry, fjdaryCmEntry=fjdaryCmEntry, fjdaryPfCmCoreBusy19=fjdaryPfCmCoreBusy19, fjdaryPconfig=fjdaryPconfig, fjdaryRluInfoTable3=fjdaryRluInfoTable3, fjdaryCmfanTable=fjdaryCmfanTable, fjdaryPfOluAdCpWtTp=fjdaryPfOluAdCpWtTp, fjdaryLunmapEntry=fjdaryLunmapEntry, fjdaryDiskType=fjdaryDiskType, fjdarye150BatteryExpiration=fjdarye150BatteryExpiration, fjdaryDisk=fjdaryDisk, fjdaryPfCaPortMode=fjdaryPfCaPortMode, aplNetNsp=aplNetNsp, fjdaryPfCmCoreBusy10=fjdaryPfCmCoreBusy10, fjdaryCeinletthmlIndex=fjdaryCeinletthmlIndex, fjdaryMgtOpVolumeTable=fjdaryMgtOpVolumeTable, fjdaryPfCmNasCoreIOWait14=fjdaryPfCmNasCoreIOWait14, fjdaryMachineTempInfo19=fjdaryMachineTempInfo19, fjdaryPfCmNasVolIndex=fjdaryPfCmNasVolIndex, fjdaryPfDtCmCount=fjdaryPfDtCmCount, fjdaryBcu=fjdaryBcu, fjdaryMachinePowerInfo2=fjdaryMachinePowerInfo2, aplNetDevice=aplNetDevice, fjdaryDiskSize=fjdaryDiskSize, fjdaryScuRevision=fjdaryScuRevision, fjdaryCeEntry=fjdaryCeEntry, fjdaryCmmemoryCapacity=fjdaryCmmemoryCapacity, fjdaryRluInfoTable2=fjdaryRluInfoTable2, fjdaryDiskItemId=fjdaryDiskItemId, fjdaryPfDtCaPortTable=fjdaryPfDtCaPortTable, fjdaryPfDtCmNasCoreInfo=fjdaryPfDtCmNasCoreInfo, fjdaryPfCmNasCoreTable=fjdaryPfCmNasCoreTable, fjdaryLanportHwAdEntry=fjdaryLanportHwAdEntry, fjdaryEncPowerInfo2=fjdaryEncPowerInfo2, fjdaryPfCmNasVol=fjdaryPfCmNasVol, fjdaryPfCmNasVolCount=fjdaryPfCmNasVolCount, fjdaryPfDtCmNasCount=fjdaryPfDtCmNasCount, fjdaryUnitStatus=fjdaryUnitStatus, fjdaryPfmCount=fjdaryPfmCount, fjdaryPfmSubStatus=fjdaryPfmSubStatus, fjdaryOpenmapInfo=fjdaryOpenmapInfo, fjdaryPfCmCoreBusy8=fjdaryPfCmCoreBusy8, fjdaryMgtMachineStatus=fjdaryMgtMachineStatus, fjdaryPfCmNasVolOluNo=fjdaryPfCmNasVolOluNo, fjdaryMgtMachineInfo=fjdaryMgtMachineInfo, fjdaryDeTable=fjdaryDeTable, fjdaryTrapSensorInfo=fjdaryTrapSensorInfo, fjdaryPfCmCoreBusy7=fjdaryPfCmCoreBusy7, fjdarySspMaintenanceServiceLevel=fjdarySspMaintenanceServiceLevel, fjdaryPfCaPortNasNtOutThroughput=fjdaryPfCaPortNasNtOutThroughput, fjdaryMachinePowerCmNum=fjdaryMachinePowerCmNum, fjdaryPfCaPortCount=fjdaryPfCaPortCount, fjdaryCmfanStatus=fjdaryCmfanStatus, fjdaryEncTempType=fjdaryEncTempType, fjdaryMachinePowerInfo16=fjdaryMachinePowerInfo16, fjdaryCpsuTable=fjdaryCpsuTable, fjdaryPfDtCmNasVolTable=fjdaryPfDtCmNasVolTable, fjdaryPfCmNasCoreIOWait2=fjdaryPfCmNasCoreIOWait2, fjdaryPfOluAdCpRdIOPS=fjdaryPfOluAdCpRdIOPS, fjdaryBudEntry=fjdaryBudEntry, fjdaryPfCmNasCoreIOWait4=fjdaryPfCmNasCoreIOWait4, fjdarye150MaintenanceRequired=fjdarye150MaintenanceRequired, fjdaryPfDtRaPortInfo=fjdaryPfDtRaPortInfo, fjdaryCaType=fjdaryCaType, fjdaryFemCount=fjdaryFemCount, fjdaryCpsuItemId=fjdaryCpsuItemId, fjdaryPfOluCount=fjdaryPfOluCount, fjdaryEncTempInfo21=fjdaryEncTempInfo21, fjdaryFemIndex=fjdaryFemIndex, fjdaryHostResponseInfoTable=fjdaryHostResponseInfoTable, fjdaryPfCmNasCoreBusy13=fjdaryPfCmNasCoreBusy13, fjdaryHostwwnIndex=fjdaryHostwwnIndex, fjdaryHostwwn=fjdaryHostwwn, fjdaryCmcpuStatus=fjdaryCmcpuStatus, fjdaryIomTable=fjdaryIomTable, fjdaryBcuEntry=fjdaryBcuEntry, fjdaryMachinePowerTime=fjdaryMachinePowerTime, fjdaryEncPowerDeId=fjdaryEncPowerDeId, fjdaryIomSerialNo=fjdaryIomSerialNo, fjdaryMachineTempInfo22=fjdaryMachineTempInfo22, fjdaryCmfanIndex=fjdaryCmfanIndex, fjdaryBudCount=fjdaryBudCount, fjdaryPfRaPort=fjdaryPfRaPort, aplNetFjdarye150=aplNetFjdarye150, fjdaryHostResponseIndex=fjdaryHostResponseIndex, fjdaryPfDtCmNasEntry=fjdaryPfDtCmNasEntry, fjdaryHostiscsiIndex=fjdaryHostiscsiIndex, fjdaryPfCmCoreBusy1=fjdaryPfCmCoreBusy1, fjdaryLunmapTable3=fjdaryLunmapTable3, fjdarySluIndex=fjdarySluIndex, fjdaryPfInfoDataValid=fjdaryPfInfoDataValid, fjdaryEncPowerCmNum=fjdaryEncPowerCmNum, fjdaryCethml=fjdaryCethml, fjdaryEncPowerIndex=fjdaryEncPowerIndex, fjdaryIomPartNo=fjdaryIomPartNo, fjdaryMachineTempInfo17=fjdaryMachineTempInfo17, fjdaryCe=fjdaryCe, fjdaryAffinityGrpCount=fjdaryAffinityGrpCount, fjdaryPfCaPortWtIOPS=fjdaryPfCaPortWtIOPS, fjdaryPfCmNasCoreIOWait16=fjdaryPfCmNasCoreIOWait16, fjdaryPfDtCmEntry=fjdaryPfDtCmEntry, fjdaryPsuSubStatus=fjdaryPsuSubStatus, fjdaryFemSubStatus=fjdaryFemSubStatus, fjdaryPfCmNasCoreIOWait10=fjdaryPfCmNasCoreIOWait10, fjdaryCmModuleId=fjdaryCmModuleId, fjdaryCaIndex=fjdaryCaIndex, fjdaryEncPowerInfo18=fjdaryEncPowerInfo18, fjdaryCeSubStatus=fjdaryCeSubStatus, fjdaryMachineTempInfo7=fjdaryMachineTempInfo7, fjdaryPfCmNasCount=fjdaryPfCmNasCount, fjdaryPfDtCmCoreInfo=fjdaryPfDtCmCoreInfo, fjdaryPerformance=fjdaryPerformance, fjdaryOluInfoTable=fjdaryOluInfoTable, fjdarye150ItemFault=fjdarye150ItemFault, fjdaryDiskCfgRevision=fjdaryDiskCfgRevision, fjdaryDiskPurpose=fjdaryDiskPurpose, fjdaryEncTempInfo6=fjdaryEncTempInfo6, fjdaryCmmemoryEntry=fjdaryCmmemoryEntry, fjdaryPfDtCmNasIndex=fjdaryPfDtCmNasIndex, fjdaryPfDtCmNasCoreIOWait=fjdaryPfDtCmNasCoreIOWait, fjdaryCaPortIndex=fjdaryCaPortIndex, fjdaryPfCmNasEntry=fjdaryPfCmNasEntry, fjdaryPfCmNasCoreIOWait0=fjdaryPfCmNasCoreIOWait0, fjdaryPfRaPortCount=fjdaryPfRaPortCount, fjdarySluEntry=fjdarySluEntry, fjdaryMachineTempTable=fjdaryMachineTempTable, fjdaryPfCmCoreBusy0=fjdaryPfCmCoreBusy0, fjdaryEncPower=fjdaryEncPower, fjdaryLanportHwAdIndex=fjdaryLanportHwAdIndex, fjdaryPfCaPortNasEntry=fjdaryPfCaPortNasEntry, fjdarye150ItemFaultToNormal=fjdarye150ItemFaultToNormal, fjdaryPfCmCoreBusy15=fjdaryPfCmCoreBusy15, fjdaryDiskCompSubStatus=fjdaryDiskCompSubStatus, fjdaryMachineTempInfo12=fjdaryMachineTempInfo12)
mibBuilder.exportSymbols("FJDARY-E150", fjdaryScuSubStatus=fjdaryScuSubStatus, fjdaryScuCount=fjdaryScuCount, fjdaryPfCmNasRdThroughput=fjdaryPfCmNasRdThroughput, fjdaryDiskProductId=fjdaryDiskProductId, fjdaryDeId=fjdaryDeId, fjdaryPfCaPortIndex=fjdaryPfCaPortIndex, fjdaryPfCmNasCoreIOWait17=fjdaryPfCmNasCoreIOWait17, fjdaryMachinePowerInfo21=fjdaryMachinePowerInfo21, fjdaryMachineTempInfo3=fjdaryMachineTempInfo3, fjdaryPfDtPfmInfo=fjdaryPfDtPfmInfo, fjdaryEncTempInfo24=fjdaryEncTempInfo24, fjdaryPfCmNasVolTable=fjdaryPfCmNasVolTable, fjdaryCmfanEntry=fjdaryCmfanEntry, fjdaryLunmapCount=fjdaryLunmapCount, fjdaryCmmemoryPartNo=fjdaryCmmemoryPartNo, fjdaryEncTempInfo4=fjdaryEncTempInfo4, fjdaryDeIndex=fjdaryDeIndex, fjdaryPsuSerialNo=fjdaryPsuSerialNo, fjdaryPfDtOluTable=fjdaryPfDtOluTable, fjdaryPfOlu=fjdaryPfOlu, fjdaryScuPartNo=fjdaryScuPartNo, fjdaryPfCaPort=fjdaryPfCaPort, fjdarySluCount=fjdarySluCount, fjdaryEncTempInfo22=fjdaryEncTempInfo22, fjdaryPfCmNasCoreIOWaitEntry=fjdaryPfCmNasCoreIOWaitEntry, fjdaryDethmlEntry=fjdaryDethmlEntry, fjdaryOpenmapHostTable6=fjdaryOpenmapHostTable6, fjdaryLunmapIndex=fjdaryLunmapIndex, fjdaryManagement=fjdaryManagement, fjdarye150Error=fjdarye150Error, fjdaryMachinePowerTable=fjdaryMachinePowerTable, fjdaryCmSubStatus=fjdaryCmSubStatus, aplNetFjdarye150Traps=aplNetFjdarye150Traps, fjdaryMachineTempInfo8=fjdaryMachineTempInfo8, fjdaryPfRaPortIndex=fjdaryPfRaPortIndex, fjdaryMachineTempInfo11=fjdaryMachineTempInfo11, fjdaryLunmapTable=fjdaryLunmapTable, fjdaryCmmemory=fjdaryCmmemory, fjdaryCpsuStatus=fjdaryCpsuStatus, fjdaryLanportCount=fjdaryLanportCount, fjdaryFemItemId=fjdaryFemItemId, fjdarySluInfoTable=fjdarySluInfoTable, fjdaryDluInfoTable=fjdaryDluInfoTable, fjdaryPfCmNasCoreIOWait13=fjdaryPfCmNasCoreIOWait13, fjdaryAffinityGrpTable3=fjdaryAffinityGrpTable3, fjdaryPfOluRdRspTime=fjdaryPfOluRdRspTime, fjdaryPfRaPortTable=fjdaryPfRaPortTable, fjdaryMachineTempInfo20=fjdaryMachineTempInfo20, fjdaryEncPowerFlag=fjdaryEncPowerFlag, fjdaryPfCmNasCoreBusy17=fjdaryPfCmNasCoreBusy17, fjdarye150ItemWarningToNormal=fjdarye150ItemWarningToNormal, fjdaryMgtRaidGrp=fjdaryMgtRaidGrp, fjdaryEncTempInfo19=fjdaryEncTempInfo19, fjdaryBtu=fjdaryBtu, fjdaryMachinePowerInfo0=fjdaryMachinePowerInfo0, fjdaryPfCmNasVolIOCPUBusy=fjdaryPfCmNasVolIOCPUBusy, fjdaryPfCmNasCoreBusy2=fjdaryPfCmNasCoreBusy2, fjdaryEncTempInfo18=fjdaryEncTempInfo18, fjdaryMgtRaidGrpStatus=fjdaryMgtRaidGrpStatus, fjdaryPfCmNasCoreIOWaitTable=fjdaryPfCmNasCoreIOWaitTable, fjdaryPfDtDisk=fjdaryPfDtDisk, fjdaryMIBversion=fjdaryMIBversion, fjdaryPsuItemId=fjdaryPsuItemId, fjdaryPfOluWtRspTime=fjdaryPfOluWtRspTime, fjdarye150SensorStatusChange=fjdarye150SensorStatusChange, fjdaryPfDtCaPortEntry=fjdaryPfDtCaPortEntry, fjdaryEncPowerTable=fjdaryEncPowerTable, fjdaryMluIndex=fjdaryMluIndex, fjdaryCmfanSubStatus=fjdaryCmfanSubStatus, fjdaryPfCmCoreBusy12=fjdaryPfCmCoreBusy12, fjdaryEncPowerInfo7=fjdaryEncPowerInfo7, fjdaryRluInfoTable0=fjdaryRluInfoTable0, fjdaryEncTempInfo10=fjdaryEncTempInfo10, fjdaryCpsuIndex=fjdaryCpsuIndex, fjdaryMachineTempInfo1=fjdaryMachineTempInfo1, fjdarye150SensorStatusChangeToNormal=fjdarye150SensorStatusChangeToNormal, fjdaryRlu=fjdaryRlu, fjdaryBudIndex=fjdaryBudIndex, fjdaryDluTable=fjdaryDluTable, fjdarye150SnapshotInformation=fjdarye150SnapshotInformation, fjdaryResetpath=fjdaryResetpath, fjdaryMachineTempInfo14=fjdaryMachineTempInfo14, fjdaryPfDtOluEntry=fjdaryPfDtOluEntry, fjdaryMachineTempFlag=fjdaryMachineTempFlag, fjdaryTrapMaintenanceInfo=fjdaryTrapMaintenanceInfo, fjdaryDethmlStatus=fjdaryDethmlStatus, fjdaryAffinityGrpInfo=fjdaryAffinityGrpInfo, fjdaryPfCmEntry=fjdaryPfCmEntry, fjdaryBudSubStatus=fjdaryBudSubStatus, fjdaryCaPortEntry=fjdaryCaPortEntry, fjdaryMgtOpVolumeEntry=fjdaryMgtOpVolumeEntry, fjdaryDeType=fjdaryDeType, fjdaryDeinletthmlTable=fjdaryDeinletthmlTable, fjdaryEncPowerInfo23=fjdaryEncPowerInfo23, fjdaryPfOluAdRdCacheHit=fjdaryPfOluAdRdCacheHit, fjdaryPfDtCmIndex=fjdaryPfDtCmIndex, fjdaryCmStatus=fjdaryCmStatus, fjdaryPsuIndex=fjdaryPsuIndex, fjdaryOluTable=fjdaryOluTable, fjdaryCaPortiscsiName=fjdaryCaPortiscsiName, fjdaryPfDtCaPortCount=fjdaryPfDtCaPortCount, fjdaryDeStatus=fjdaryDeStatus, fjdaryCmmemoryTable=fjdaryCmmemoryTable, fjdaryOpenmapTable=fjdaryOpenmapTable, fjdaryEncPowerInfo3=fjdaryEncPowerInfo3, fjdaryPfCaPortRdIOPS=fjdaryPfCaPortRdIOPS, fjdaryPfCmNasCoreIOWait12=fjdaryPfCmNasCoreIOWait12, fjdaryDiskVenderId=fjdaryDiskVenderId, fjdarye150QuotaNormal=fjdarye150QuotaNormal, fjdaryPfDiskIndex=fjdaryPfDiskIndex, fjdaryLanportHwAddress0=fjdaryLanportHwAddress0, fjdaryPfDtCmNasVolInfo=fjdaryPfDtCmNasVolInfo, fjdaryPfm=fjdaryPfm, fjdaryLconfig=fjdaryLconfig, fjdaryPfOluRdExcCacheHit=fjdaryPfOluRdExcCacheHit, fjdaryCmItemId=fjdaryCmItemId, fjdarye150StorageClusterEvent=fjdarye150StorageClusterEvent, fjdaryCeinletthmlItemId=fjdaryCeinletthmlItemId, fjdaryPfPfmTable=fjdaryPfPfmTable, fjdaryPfCmNasVolRdTp=fjdaryPfCmNasVolRdTp, fjdaryPfCmNasCachedMemory=fjdaryPfCmNasCachedMemory, fjdaryPfCmNasCoreBusy10=fjdaryPfCmNasCoreBusy10, fjdaryOluCount=fjdaryOluCount, fjdaryDethmlCount=fjdaryDethmlCount, fjdaryMachinePowerInfo6=fjdaryMachinePowerInfo6, fjdaryHostiscsiTable=fjdaryHostiscsiTable, fjdaryCmcpuRole=fjdaryCmcpuRole, fjdaryPfCmNasTable=fjdaryPfCmNasTable, fjdaryPfmItemId=fjdaryPfmItemId, fjdaryLanportHwAddress1=fjdaryLanportHwAddress1, fjdaryPfDtOlu=fjdaryPfDtOlu, fjdaryBtuEntry=fjdaryBtuEntry, fjdaryPfCmCoreCount=fjdaryPfCmCoreCount, fjdaryDiskDateCode=fjdaryDiskDateCode, fjdaryMachineTempEntry=fjdaryMachineTempEntry, fjdaryCa=fjdaryCa, fjdaryEncTempInfo14=fjdaryEncTempInfo14, fjdaryPfDtCaPortNasCount=fjdaryPfDtCaPortNasCount, fjdarye150QuotaWarningExceeded=fjdarye150QuotaWarningExceeded, fjdaryCaTable=fjdaryCaTable, fjdaryPfmStatus=fjdaryPfmStatus, fjdaryBcuSubStatus=fjdaryBcuSubStatus, fjdaryMachinePowerIndex=fjdaryMachinePowerIndex, fjdarySspMachineId=fjdarySspMachineId, fjdaryResetpathTable=fjdaryResetpathTable, fjdaryResetpathEntry=fjdaryResetpathEntry, fjdaryPfCmTable=fjdaryPfCmTable, fjdaryDiskTable=fjdaryDiskTable, fjdaryMachineTempTime=fjdaryMachineTempTime, fjdaryEncTempInfo13=fjdaryEncTempInfo13, fjdaryPfCmNasVolEntry=fjdaryPfCmNasVolEntry, fjdaryPfCmNasIndex=fjdaryPfCmNasIndex, fjdaryPfDtDiskEntry=fjdaryPfDtDiskEntry, fjdaryMachineTempInfo16=fjdaryMachineTempInfo16, fjdaryEncTemp=fjdaryEncTemp, aplNetStorage=aplNetStorage, fjdaryCethmlSubStatus=fjdaryCethmlSubStatus, fjdaryEncPowerType=fjdaryEncPowerType, fjdaryMachineTempInfo21=fjdaryMachineTempInfo21, fjdaryMachinePowerInfo4=fjdaryMachinePowerInfo4, fjdaryPfDtOluInfo=fjdaryPfDtOluInfo, fjdaryPfCmNasCoreBusy6=fjdaryPfCmNasCoreBusy6, fjdaryPfDtRaPortEntry=fjdaryPfDtRaPortEntry, fjdaryPfPfmCount=fjdaryPfPfmCount, fjdaryDeItemId=fjdaryDeItemId, fjdaryPfCmCoreBusy18=fjdaryPfCmCoreBusy18, fjdaryMachinePowerInfo8=fjdaryMachinePowerInfo8, fjdaryDluEntry=fjdaryDluEntry, fjdaryDeinletthmlIndex=fjdaryDeinletthmlIndex, fjdaryLunmapTable0=fjdaryLunmapTable0, fjdaryMachinePowerInfo7=fjdaryMachinePowerInfo7, fjdaryCmcpuSubStatus=fjdaryCmcpuSubStatus, fjdaryCmCount=fjdaryCmCount, fjdaryPfInfoVersion=fjdaryPfInfoVersion, fjdaryMluInfoTable=fjdaryMluInfoTable, fjdaryPfCmNasCoreIndex=fjdaryPfCmNasCoreIndex, fjdaryMachinePowerInfo14=fjdaryMachinePowerInfo14, fjdaryMgtRaidGrpNumber=fjdaryMgtRaidGrpNumber, fjdaryMachineTempInfo0=fjdaryMachineTempInfo0, fjdaryMgtRaidGrpRaidLevel=fjdaryMgtRaidGrpRaidLevel, fjdaryPfCmNasCoreIOWaitCount=fjdaryPfCmNasCoreIOWaitCount, fjdaryPfInfoUpdateTime=fjdaryPfInfoUpdateTime, fjdaryLanportStatus2=fjdaryLanportStatus2, fjdaryPfCmNasCoreBusy9=fjdaryPfCmNasCoreBusy9, fjdaryEncTempInfo11=fjdaryEncTempInfo11, fjdaryScuVoltage=fjdaryScuVoltage, fjdaryMgtMachineSubStatus=fjdaryMgtMachineSubStatus, fjdaryCeStatus=fjdaryCeStatus, fjdaryBcuItemId=fjdaryBcuItemId, fjdaryCeCount=fjdaryCeCount, fjdaryMachinePowerInfo3=fjdaryMachinePowerInfo3, fjdaryPfCmNasVolWtTp=fjdaryPfCmNasVolWtTp, fjdaryPfmIndex=fjdaryPfmIndex, fjdaryMachinePowerInfo10=fjdaryMachinePowerInfo10, FjdaryComponentStatus=FjdaryComponentStatus, fjdaryMachinePowerInfo5=fjdaryMachinePowerInfo5, fjdaryAffinityGrpTable2=fjdaryAffinityGrpTable2, fjdaryCmmemoryItemId=fjdaryCmmemoryItemId, fjdaryPfDtCmCoreCount=fjdaryPfDtCmCoreCount, fjdaryFem=fjdaryFem, fjdaryMachinePowerEntry=fjdaryMachinePowerEntry, fjdarySluTable=fjdarySluTable, fjdaryCaPortPortInfo=fjdaryCaPortPortInfo, fjdaryPfCmNasCoreIOWaitValidCount=fjdaryPfCmNasCoreIOWaitValidCount, fjdaryPfDiskPlun=fjdaryPfDiskPlun, fjdaryPfCmNasCoreBusy12=fjdaryPfCmNasCoreBusy12, fjdaryHostResponseCount=fjdaryHostResponseCount, fjdaryPfCaPortRdTp=fjdaryPfCaPortRdTp, fjdaryCmmemorySubStatus=fjdaryCmmemorySubStatus, fjdaryScuStatus=fjdaryScuStatus, fjdaryResetpathIndex=fjdaryResetpathIndex, fjdaryPfOluRdTp=fjdaryPfOluRdTp, fjdaryPfOluEntry=fjdaryPfOluEntry, fjdaryPfmEntry=fjdaryPfmEntry, fjdaryPfDtDiskCount=fjdaryPfDtDiskCount, fjdaryCaPortiscsiIsnsServer=fjdaryCaPortiscsiIsnsServer, fjdaryDeEntry=fjdaryDeEntry, fjdaryLanportStatus1=fjdaryLanportStatus1, fjdaryPfPfmIndex=fjdaryPfPfmIndex, fjdaryDluIndex=fjdaryDluIndex, fjdaryPfOluRdIOPS=fjdaryPfOluRdIOPS, fjdaryCmfan=fjdaryCmfan, fjdaryEncPowerInfo16=fjdaryEncPowerInfo16, fjdaryPfDtCmNasInfo=fjdaryPfDtCmNasInfo, fjdaryPfDtDiskIndex=fjdaryPfDtDiskIndex, fjdaryEncPowerTime=fjdaryEncPowerTime, fjdaryPfOluWtIOPS=fjdaryPfOluWtIOPS, fjdarye150CaPortLinkStatusChange=fjdarye150CaPortLinkStatusChange, fjdaryCaPortMode=fjdaryCaPortMode, fjdarye150QuotaLimitExceeded=fjdarye150QuotaLimitExceeded, fjdaryMachinePowerInfo17=fjdaryMachinePowerInfo17, aplNetwork=aplNetwork, fjdaryCpsuSubStatus=fjdaryCpsuSubStatus, fjdaryCaEntry=fjdaryCaEntry, fjdaryCethmlIndex=fjdaryCethmlIndex, fjdaryPfOluAdRdExcCacheHit=fjdaryPfOluAdRdExcCacheHit, fjdaryCmmemoryIndex=fjdaryCmmemoryIndex, fjdaryHostwwnTable=fjdaryHostwwnTable, fjdaryPfDtPfmEntry=fjdaryPfDtPfmEntry, fjdaryCmcpu=fjdaryCmcpu, fjdaryPfCmNasUsedAmount=fjdaryPfCmNasUsedAmount, fjdaryBcuCount=fjdaryBcuCount, fjdaryPfCmNasCoreIOWait11=fjdaryPfCmNasCoreIOWait11, fjdaryHostwwnWWN=fjdaryHostwwnWWN, fjdaryDiskCount=fjdaryDiskCount, fjdaryDiskIndex=fjdaryDiskIndex, fjdaryDeinletthmlCount=fjdaryDeinletthmlCount, fjdaryMachineTempInfo18=fjdaryMachineTempInfo18, fjdaryEncTempInfo16=fjdaryEncTempInfo16, fjdaryCmPartNo=fjdaryCmPartNo, fjdaryHostiscsiAliasName=fjdaryHostiscsiAliasName, fjdaryEncTempDeId=fjdaryEncTempDeId, fjdaryPfInfo=fjdaryPfInfo, fjdaryScuItemId=fjdaryScuItemId)
mibBuilder.exportSymbols("FJDARY-E150", fjdaryPfCmCoreBusy2=fjdaryPfCmCoreBusy2, fjdaryPfCaPortTable=fjdaryPfCaPortTable, fjdaryPfDtCmCoreTable=fjdaryPfDtCmCoreTable, fjdaryMluEntry=fjdaryMluEntry, fjdaryPfCmNasVolUsageRate=fjdaryPfCmNasVolUsageRate, fjdaryPfDtCmNasVolIndex=fjdaryPfDtCmNasVolIndex, fjdaryPfRaPortWtIOPS=fjdaryPfRaPortWtIOPS, fjdaryMachineTempCmNum=fjdaryMachineTempCmNum, fjdaryEncTempInfo1=fjdaryEncTempInfo1, fjdaryPfCmNasIOWaitTime=fjdaryPfCmNasIOWaitTime, fjdaryBudTable=fjdaryBudTable, fjdaryBtuSubStatus=fjdaryBtuSubStatus, fjdaryMachineTempInfo9=fjdaryMachineTempInfo9, fjdaryBudStatus=fjdaryBudStatus, fjdaryPfDtCaPortNasEntry=fjdaryPfDtCaPortNasEntry, fjdaryMgtOpVolumeNumber=fjdaryMgtOpVolumeNumber, fjdaryPfCmNasCoreIOWait15=fjdaryPfCmNasCoreIOWait15, fjdaryMachinePowerInfo24=fjdaryMachinePowerInfo24, fjdaryEncPowerInfo0=fjdaryEncPowerInfo0, fjdaryMachinePowerFlag=fjdaryMachinePowerFlag, fjdaryPsuPartNo=fjdaryPsuPartNo, fjdaryCmSerialNo=fjdaryCmSerialNo, fjdaryCmcpuTable=fjdaryCmcpuTable, fjdaryRluIndex=fjdaryRluIndex, fjdaryPfCmCoreValidCount=fjdaryPfCmCoreValidCount, fjdaryEncTempTime=fjdaryEncTempTime, PYSNMP_MODULE_ID=fjdarye150, fjdaryAffinityGrpIndex=fjdaryAffinityGrpIndex, fjdaryPfDtCmNasVol=fjdaryPfDtCmNasVol, fjdaryCethmlStatus=fjdaryCethmlStatus, fjdaryCpsuRevision=fjdaryCpsuRevision, fjdaryLunmapTable2=fjdaryLunmapTable2, fjdaryMachinePowerInfo11=fjdaryMachinePowerInfo11, fjdaryCeinletthmlSubStatus=fjdaryCeinletthmlSubStatus, fjdaryMachinePowerInfo23=fjdaryMachinePowerInfo23, fjdaryPfDtCmNasCoreIOWaitTable=fjdaryPfDtCmNasCoreIOWaitTable, fjdaryScuEntry=fjdaryScuEntry, fjdaryEncTempInfo17=fjdaryEncTempInfo17, fjdaryEncTempFlag=fjdaryEncTempFlag, fjdaryOpenmapHostTable3=fjdaryOpenmapHostTable3, fjdaryPfRaPortMode=fjdaryPfRaPortMode, fjdarySensor=fjdarySensor, application=application, fjdaryPfDtCaPortIndex=fjdaryPfDtCaPortIndex, fjdaryCethmlItemId=fjdaryCethmlItemId, fjdarySsp=fjdarySsp, fjdaryCm=fjdaryCm, fjdaryBud=fjdaryBud, fjdaryPfDiskCount=fjdaryPfDiskCount, fjdaryPfCmNasNFSOpCount=fjdaryPfCmNasNFSOpCount, fjdaryDiskEntry=fjdaryDiskEntry, fjdaryLunmapInfo=fjdaryLunmapInfo, fjdaryDeinletthml=fjdaryDeinletthml, fjdaryMachinePowerInfo9=fjdaryMachinePowerInfo9, fjdaryDethmlTable=fjdaryDethmlTable, fjdaryPfCmCoreBusy3=fjdaryPfCmCoreBusy3, fjdaryPfCmNasCoreBusy0=fjdaryPfCmNasCoreBusy0, fjdaryPfCmNasCoreBusy4=fjdaryPfCmNasCoreBusy4, fjdaryMgtOpVolumeType2=fjdaryMgtOpVolumeType2, fjdaryPfCmNasCoreIOWait5=fjdaryPfCmNasCoreIOWait5, fjdaryPfCm=fjdaryPfCm, fjdaryPfCaPortNasIndex=fjdaryPfCaPortNasIndex, fjdarye150ItemWarning=fjdarye150ItemWarning, fjdaryPfDtCaPortInfo=fjdaryPfDtCaPortInfo, fjdaryDiskSubStatus=fjdaryDiskSubStatus, fjdaryScuIndex=fjdaryScuIndex, fjdaryLunmapTable1=fjdaryLunmapTable1, fjdaryMachinePowerInfo1=fjdaryMachinePowerInfo1, fjdaryEncPowerInfo11=fjdaryEncPowerInfo11, fjdaryEncPowerInfo21=fjdaryEncPowerInfo21, fjdaryPfRaPortRdTp=fjdaryPfRaPortRdTp, fjdaryHostiscsiEntry=fjdaryHostiscsiEntry, fjdaryCaPortiscsiInfo=fjdaryCaPortiscsiInfo, fjdaryPfCmNasCoreBusy7=fjdaryPfCmNasCoreBusy7, fjdaryPfCmNasCoreIOWait=fjdaryPfCmNasCoreIOWait, fjdaryPfDtRaPortCount=fjdaryPfDtRaPortCount, fjdaryEncTempInfo9=fjdaryEncTempInfo9, fjdaryPfPfmEntry=fjdaryPfPfmEntry, fjdaryPfDtCaPortNas=fjdaryPfDtCaPortNas, fjdaryPfCmNasVolUsedAmount=fjdaryPfCmNasVolUsedAmount, fjdaryEncTempEntry=fjdaryEncTempEntry, fjdaryPfDtPfmIndex=fjdaryPfDtPfmIndex, fjdaryHostResponse=fjdaryHostResponse, fjdaryCpsuSerialNo=fjdaryCpsuSerialNo, fjdaryPfCmCoreIndex=fjdaryPfCmCoreIndex, fjdaryPfCmNasCoreIOWait7=fjdaryPfCmNasCoreIOWait7, fjdaryPfCmCore=fjdaryPfCmCore, fjdaryPfDPfmCount=fjdaryPfDPfmCount, fjdaryPfDtCmNasTable=fjdaryPfDtCmNasTable, fjdaryMgtOpVolume=fjdaryMgtOpVolume, fjdaryEncTempTable=fjdaryEncTempTable, fjdaryCaStatus=fjdaryCaStatus, fjdaryEncTempCmNum=fjdaryEncTempCmNum, fjdaryBtuItemId=fjdaryBtuItemId, fjdaryDiskFwRevision=fjdaryDiskFwRevision, fjdaryPfDiskEntry=fjdaryPfDiskEntry, fjdaryPfOluAdCpWtIOPS=fjdaryPfOluAdCpWtIOPS, fjdaryMachineTempInfo4=fjdaryMachineTempInfo4, fjdaryPfCmNasCPUBusy=fjdaryPfCmNasCPUBusy, fjdaryOpenmapEntry=fjdaryOpenmapEntry, fjdaryEncPowerInfo9=fjdaryEncPowerInfo9, fjdaryCeinletthmlCount=fjdaryCeinletthmlCount, fjdaryMachinePowerInfo22=fjdaryMachinePowerInfo22, fjdaryTrapItemId=fjdaryTrapItemId, fjdaryDeinletthmlSubStatus=fjdaryDeinletthmlSubStatus, fjdaryEncTempInfo3=fjdaryEncTempInfo3, fjdaryPfCmNasIOCPUBusy=fjdaryPfCmNasIOCPUBusy, fjdaryOpenmapHostTable4=fjdaryOpenmapHostTable4, fjdaryCeinletthmlTable=fjdaryCeinletthmlTable, fjdaryPfDtRaPortIndex=fjdaryPfDtRaPortIndex, fjdaryEncTempCount=fjdaryEncTempCount, fjdaryPfCaPortNasTable=fjdaryPfCaPortNasTable, fjdaryHostiscsiName=fjdaryHostiscsiName, fjdaryAffinityGrpEntry=fjdaryAffinityGrpEntry, fjdaryCmcpuIndex=fjdaryCmcpuIndex, fjdaryCmmemoryStatus=fjdaryCmmemoryStatus, fjdaryPfCmNasCoreIOWait9=fjdaryPfCmNasCoreIOWait9, fjdaryEncPowerInfo1=fjdaryEncPowerInfo1, fjdaryCmcpuClock=fjdaryCmcpuClock, fjdaryPsuRevision=fjdaryPsuRevision, fjdaryPfCaPortNasNtInThroughput=fjdaryPfCaPortNasNtInThroughput, fjdaryCethmlEntry=fjdaryCethmlEntry, fjdaryPfOluWtCacheHit=fjdaryPfOluWtCacheHit, nsp=nsp, fjdaryPfOluAdRdPreFetchHit=fjdaryPfOluAdRdPreFetchHit, fjdaryPfCmNasCoreBusy15=fjdaryPfCmNasCoreBusy15, fjdaryMachineTempInfo23=fjdaryMachineTempInfo23, fjdaryEncTempInfo12=fjdaryEncTempInfo12, fjdaryPfDtCmCore=fjdaryPfDtCmCore, fjdaryPsuTable=fjdaryPsuTable, fjdaryEncTempInfo2=fjdaryEncTempInfo2, fjdaryPfCmNas=fjdaryPfCmNas, fjdaryRluCount=fjdaryRluCount, fjdaryPfInfoIntervalTime=fjdaryPfInfoIntervalTime, fjdaryHostiscsiIpAddress=fjdaryHostiscsiIpAddress, fjdaryEncPowerInfo13=fjdaryEncPowerInfo13, fjdaryDethmlSubStatus=fjdaryDethmlSubStatus, fjdaryLanportIndex=fjdaryLanportIndex, fjdaryResetpathCount=fjdaryResetpathCount, fjdaryCpsu=fjdaryCpsu, fjdaryHostiscsiCount=fjdaryHostiscsiCount, fjdaryCeinletthml=fjdaryCeinletthml, fjdaryIomIndex=fjdaryIomIndex, fjdaryLanportHwAddress2=fjdaryLanportHwAddress2, fjdaryPfCmCoreBusy11=fjdaryPfCmCoreBusy11, fjdaryCaPortiscsiIpAddress=fjdaryCaPortiscsiIpAddress, fjdaryMachinePowerInfo20=fjdaryMachinePowerInfo20, fjdaryAffinityGrp=fjdaryAffinityGrp, fjdaryCaPortCount=fjdaryCaPortCount, fjdaryMachineTempInfo5=fjdaryMachineTempInfo5, fjdaryPfCmCoreBusy9=fjdaryPfCmCoreBusy9, fjdaryFemStatus=fjdaryFemStatus, fjdaryPfDtCmCoreEntry=fjdaryPfDtCmCoreEntry, fjdaryEncPowerInfo20=fjdaryEncPowerInfo20, fjdaryEncTempInfo23=fjdaryEncTempInfo23, fjdaryPfCmNasCoreBusy1=fjdaryPfCmNasCoreBusy1, fjdaryScuTable=fjdaryScuTable, fjdaryMgtOpVolumeCapacity=fjdaryMgtOpVolumeCapacity, fjdaryOpenmapHostTable0=fjdaryOpenmapHostTable0, fjdaryEncPowerInfo19=fjdaryEncPowerInfo19, fjdaryEncPowerCount=fjdaryEncPowerCount, fjdaryCmfanItemId=fjdaryCmfanItemId, fjdaryPfCmNasCoreBusy11=fjdaryPfCmNasCoreBusy11, fjdaryPfDtCaPortNasIndex=fjdaryPfDtCaPortNasIndex, fjdaryLanportHwAdTable=fjdaryLanportHwAdTable, fjdaryEncTempInfo8=fjdaryEncTempInfo8, fjdaryPfCmNasCore=fjdaryPfCmNasCore, fjdaryPfCmCoreBusy4=fjdaryPfCmCoreBusy4, fjdaryDeinletthmlEntry=fjdaryDeinletthmlEntry, fjdaryCeTable=fjdaryCeTable, fjdaryPsuEntry=fjdaryPsuEntry, fjdaryCmTable=fjdaryCmTable, fjdaryPfDtCmCoreIndex=fjdaryPfDtCmCoreIndex, fjdaryDeinletthmlStatus=fjdaryDeinletthmlStatus, fjdaryRluInfoTable1=fjdaryRluInfoTable1, fjdaryMachinePower=fjdaryMachinePower, fjdaryEncPowerInfo22=fjdaryEncPowerInfo22, fjdaryTrapLinkStatusInfo=fjdaryTrapLinkStatusInfo, fjdaryCmcpuEntry=fjdaryCmcpuEntry, fjdaryCmRevision=fjdaryCmRevision, fjdaryAffinityGrpTable1=fjdaryAffinityGrpTable1, fjdarye150=fjdarye150, fjdaryDeSubStatus=fjdaryDeSubStatus, fjdaryPfCmNasCoreValidCount=fjdaryPfCmNasCoreValidCount, fjdaryCpsuEntry=fjdaryCpsuEntry, fjdaryBtuCount=fjdaryBtuCount, fjdaryEncPowerInfo10=fjdaryEncPowerInfo10, fjdaryPfCmNasCoreIOWait6=fjdaryPfCmNasCoreIOWait6, fjdaryPfDtCmNas=fjdaryPfDtCmNas, fjdaryPfCmNasCoreBusy5=fjdaryPfCmNasCoreBusy5, fjdaryEncPowerEntry=fjdaryEncPowerEntry, fjdaryOluEntry=fjdaryOluEntry, fjdaryIomStatus=fjdaryIomStatus, fjdaryPfOluIndex=fjdaryPfOluIndex, fjdaryPfCmNasCoreBusy3=fjdaryPfCmNasCoreBusy3, fjdaryPfOluAdCpRdTp=fjdaryPfOluAdCpRdTp, fjdaryPfCmCoreTable=fjdaryPfCmCoreTable, fjdaryMachinePowerInfo12=fjdaryMachinePowerInfo12, fjdaryIomEntry=fjdaryIomEntry, fjdaryPfCmCoreBusy17=fjdaryPfCmCoreBusy17, fjdaryPfCmNasVolIOWaitTime=fjdaryPfCmNasVolIOWaitTime, fjdaryPfDtCmNasVolCount=fjdaryPfDtCmNasVolCount, fjdaryCaSubStatus=fjdaryCaSubStatus, fjdaryMgtRaidGrpCapacity=fjdaryMgtRaidGrpCapacity, fjdaryMachineTempInfo10=fjdaryMachineTempInfo10, fjdaryPfOluWtTp=fjdaryPfOluWtTp, fjdaryScu=fjdaryScu, fjdaryPfCmNasNtOutThroughput=fjdaryPfCmNasNtOutThroughput, fjdaryOpenmapHostTable7=fjdaryOpenmapHostTable7, fjdaryDiskPlun=fjdaryDiskPlun, fjdaryPfDtCmNasCoreCount=fjdaryPfDtCmNasCoreCount, fjdarye150Warning=fjdarye150Warning, fjdaryAffinityGrpTable0=fjdaryAffinityGrpTable0, fjdaryLanportEntry=fjdaryLanportEntry, fjdaryPfCmNasCoreBusy18=fjdaryPfCmNasCoreBusy18, fjdaryOluIndex=fjdaryOluIndex, fjdaryFirm=fjdaryFirm, fjdaryPsuStatus=fjdaryPsuStatus, fjdaryPfDiskTable=fjdaryPfDiskTable, fjdaryLunmap=fjdaryLunmap, fjdaryPfDtPfmTable=fjdaryPfDtPfmTable, fjdaryMgtOpVolumeAttribute=fjdaryMgtOpVolumeAttribute, fjdaryMachineTempInfo2=fjdaryMachineTempInfo2, fjdaryPfCmCoreBusy14=fjdaryPfCmCoreBusy14, fjdaryEncPowerInfo12=fjdaryEncPowerInfo12, fjdaryPfmTable=fjdaryPfmTable, fjdaryEncPowerInfo14=fjdaryEncPowerInfo14, fjdaryOpenmap=fjdaryOpenmap, fjdaryMachineTempInfo15=fjdaryMachineTempInfo15, fjdaryPfCmCoreBusy6=fjdaryPfCmCoreBusy6, fjdaryPfDisk=fjdaryPfDisk, fjdaryPfOluTable=fjdaryPfOluTable, fjdaryIomRevision=fjdaryIomRevision, fjdaryPfDtOluCount=fjdaryPfDtOluCount, fjdaryCaPort=fjdaryCaPort, fjdaryEncPowerInfo5=fjdaryEncPowerInfo5, fjdaryMachinePowerInfo13=fjdaryMachinePowerInfo13, fjdaryMachineTempInfo13=fjdaryMachineTempInfo13, fjdaryPfCmNasCoreIOWaitIndex=fjdaryPfCmNasCoreIOWaitIndex, fjdaryTrapWarningInfo=fjdaryTrapWarningInfo, fjdaryCaItemId=fjdaryCaItemId, fjdaryLanportStatus0=fjdaryLanportStatus0, fjdaryCeinletthmlStatus=fjdaryCeinletthmlStatus, fjdaryOpenmapHostTable1=fjdaryOpenmapHostTable1, fjdaryPfDtCmNasCoreEntry=fjdaryPfDtCmNasCoreEntry, fjdaryOpenmapHostTable5=fjdaryOpenmapHostTable5, fjdaryPfDtCmTable=fjdaryPfDtCmTable, product=product, fjdaryHostiscsi=fjdaryHostiscsi, fjdaryMgtOpVolumeStatus=fjdaryMgtOpVolumeStatus, fjdaryScuSerialNo=fjdaryScuSerialNo, fjdaryMgtOpVolumeType=fjdaryMgtOpVolumeType, fjdaryDe=fjdaryDe, fjdaryPfDtCmNasCore=fjdaryPfDtCmNasCore)
mibBuilder.exportSymbols("FJDARY-E150", fjdaryLanportTable=fjdaryLanportTable, fjdaryPfCmNasCoreIOWait8=fjdaryPfCmNasCoreIOWait8, fjdaryPfDtCmNasCoreIOWaitIndex=fjdaryPfDtCmNasCoreIOWaitIndex, fjdaryBtuTable=fjdaryBtuTable, fjdaryCpsuPartNo=fjdaryCpsuPartNo, fjdaryDeinletthmlItemId=fjdaryDeinletthmlItemId, fjdaryPfOluRdCacheHit=fjdaryPfOluRdCacheHit, fjdaryDethmlItemId=fjdaryDethmlItemId, fjdaryPfCmCoreEntry=fjdaryPfCmCoreEntry, fjdaryPfOluAdWtCacheHit=fjdaryPfOluAdWtCacheHit, fjdaryEncTempInfo15=fjdaryEncTempInfo15, fjdaryPfDtRaPortTable=fjdaryPfDtRaPortTable, fjdaryPsuCount=fjdaryPsuCount, fjdaryIom=fjdaryIom, fjdaryPfCaPortNas=fjdaryPfCaPortNas, fjdaryDiskWwn=fjdaryDiskWwn, fjdaryEncPowerInfo15=fjdaryEncPowerInfo15, fjdaryPfCmNasCoreBusy16=fjdaryPfCmNasCoreBusy16, fjdaryCaModuleId=fjdaryCaModuleId, fjdaryPfCmNasCoreEntry=fjdaryPfCmNasCoreEntry, fjdaryPfCmNasCoreBusy14=fjdaryPfCmNasCoreBusy14, fujitsu=fujitsu, fjdaryIomFirmInfo=fjdaryIomFirmInfo, fjdaryCmcpuCount=fjdaryCmcpuCount, fjdaryPfDtCaPortNasTable=fjdaryPfDtCaPortNasTable, fjdaryBcuStatus=fjdaryBcuStatus, fjdaryCaPortTable=fjdaryCaPortTable, fjdarye150Information=fjdarye150Information, fjdaryCaPortiscsiAliasName=fjdaryCaPortiscsiAliasName, fjdaryPfDtCmNasCoreIOWaitEntry=fjdaryPfDtCmNasCoreIOWaitEntry, fjdaryIomCount=fjdaryIomCount, fjdaryCaPortiscsiSubnetMask=fjdaryCaPortiscsiSubnetMask, fjdaryDethmlIndex=fjdaryDethmlIndex, fjdaryMachineTemp=fjdaryMachineTemp, fjdarySspWwnn=fjdarySspWwnn, fjdaryEncTempIndex=fjdaryEncTempIndex, fjdaryBcuTable=fjdaryBcuTable)
