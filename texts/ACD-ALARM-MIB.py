#
# PySNMP MIB module ACD-ALARM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/accedian/ACD-ALARM-MIB
# Produced by pysmi-1.1.12 at Wed May 29 06:40:57 2024
# On host fv-az1019-850 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
acdMibs, = mibBuilder.importSymbols("ACCEDIAN-SMI", "acdMibs")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
Integer32, ObjectIdentity, iso, Counter32, MibIdentifier, Counter64, Unsigned32, NotificationType, Gauge32, TimeTicks, ModuleIdentity, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "iso", "Counter32", "MibIdentifier", "Counter64", "Unsigned32", "NotificationType", "Gauge32", "TimeTicks", "ModuleIdentity", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, TruthValue, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "DateAndTime")
acdAlarm = ModuleIdentity((1, 3, 6, 1, 4, 1, 22420, 2, 1))
acdAlarm.setRevisions(('2011-10-10 01:00', '2010-11-10 01:00', '2009-02-04 01:00', '2008-02-01 01:00', '2007-05-22 01:00', '2006-12-19 01:00', '2006-08-06 01:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: acdAlarm.setRevisionsDescriptions(('Add acdAlarmCfgTableLastChangeTid and\n             acdAlarmStatusTableLastChangeTid.', 'Fix compliance section.', 'Add new fields in acdAlarmCfgEntry, acdAlarmActiveState and\n             acdAlarmClearState.', 'Add UNITS clause to object, where appropriate.', 'Add acdAlarmCfgNumber object to Alarm traps.', 'Add 802.3AH notification enable and msg field in status table.', 'Initial version of MIB module ACD-ALARM-MIB.',))
if mibBuilder.loadTexts: acdAlarm.setLastUpdated('201110100100Z')
if mibBuilder.loadTexts: acdAlarm.setOrganization('Accedian Networks, Inc.')
if mibBuilder.loadTexts: acdAlarm.setContactInfo('Accedian Technical Assistance Center\n             Accedian Networks, Inc.\n             4878 Levy, suite 202\n             Saint-Laurent, Quebec Canada H4R 2P1\n             E-mail: support@accedian.com')
if mibBuilder.loadTexts: acdAlarm.setDescription('The alarm Table for this Accedian Networks device.')
acdAlarmMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15))
acdAlarmConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 1))
acdAlarmStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 2))
acdAlarmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 3))
acdAlarmTableTid = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 4))
acdAlarmGenThreshOn = MibScalar((1, 3, 6, 1, 4, 1, 22420, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 50000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdAlarmGenThreshOn.setStatus('current')
if mibBuilder.loadTexts: acdAlarmGenThreshOn.setDescription('This value represents the Alarm On Hysteris. This is the time since the\n        detection of the On event inside the system versus the report. This is\n        to avoid storm of notifications.')
acdAlarmGenThreshOff = MibScalar((1, 3, 6, 1, 4, 1, 22420, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 50000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdAlarmGenThreshOff.setStatus('current')
if mibBuilder.loadTexts: acdAlarmGenThreshOff.setDescription('This value represents the Alarm Off Hysteris. This is the time since the\n        detection of the Off event inside the system versus the report. This is\n        to avoid storm of notifications.')
acdAlarmGenLedEnable = MibScalar((1, 3, 6, 1, 4, 1, 22420, 2, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdAlarmGenLedEnable.setStatus('current')
if mibBuilder.loadTexts: acdAlarmGenLedEnable.setDescription('This is to Enable the alarms reporting through the LEDs.')
acdAlarmGenSyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 22420, 2, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdAlarmGenSyslogEnable.setStatus('current')
if mibBuilder.loadTexts: acdAlarmGenSyslogEnable.setDescription('This is to Enable the alarms reporting through the syslog system.')
acdAlarmGenSNMPEnable = MibScalar((1, 3, 6, 1, 4, 1, 22420, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdAlarmGenSNMPEnable.setStatus('current')
if mibBuilder.loadTexts: acdAlarmGenSNMPEnable.setDescription('This is to Enable the alarms reporting through the SNMP agent.')
acdAlarmGen8023AHEnable = MibScalar((1, 3, 6, 1, 4, 1, 22420, 2, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdAlarmGen8023AHEnable.setStatus('current')
if mibBuilder.loadTexts: acdAlarmGen8023AHEnable.setDescription('This is to Enable the alarms reporting through the 802.3AH protocol.')
acdAlarmCfgTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 1, 10), )
if mibBuilder.loadTexts: acdAlarmCfgTable.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgTable.setDescription('Table of all alarms.')
acdAlarmCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 1, 10, 1), ).setIndexNames((0, "ACD-ALARM-MIB", "acdAlarmCfgID"))
if mibBuilder.loadTexts: acdAlarmCfgEntry.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgEntry.setDescription('An alarm is an exceptional event that requires user notificaton.')
acdAlarmCfgID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 10, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmCfgID.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgID.setDescription('Unique value for each alarm. Its value ranges from 1 to\n    MAXINT (4 bytes). ')
acdAlarmCfgNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 10, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmCfgNumber.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgNumber.setDescription('Unique number that identifies this alarm. Assigned by the unit. The\n        alarm identifier is compose of 3 fields, the module number, the instance\n        number and the error number. The alarm number looks like this:\n        A.BBB.CC and is expressed in decimal, A is the module number, BBB is\n        the instance number (1-999) and CC is the error number (1-99). A module\n        number is assigned for each source of alarm in the system. For example\n        the port module is set to 1, the SFP module is set to 2, the PAA is set\n        to 3 and the environmental is set to 8.')
acdAlarmCfgDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 10, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdAlarmCfgDesc.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgDesc.setDescription('This string is to describe the alarm in a readable way, e.g.:\n        +5Vdc Power supply fail.')
acdAlarmCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 10, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdAlarmCfgEnable.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgEnable.setDescription('This is to indicate if the alarm is reported or not.')
acdAlarmCfgSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("info", 0), ("minor", 1), ("major", 2), ("critical", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdAlarmCfgSeverity.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgSeverity.setDescription('Accedian Networks classifies alarms into four severity types. These types\n        and their associated decimal codes are, informational(0), minor(1),\n        major(2) and critical(3).')
acdAlarmCfgServiceAffecting = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 10, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdAlarmCfgServiceAffecting.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgServiceAffecting.setDescription('This is to indicate if the alarm is service affecting or not. This\n        value depends on the utilization of the box. For instance in an\n        application where the monitoring of the traffic is mandatory the link\n        down event on the monitor port is service affecting.')
acdAlarmCfgExtNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 10, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmCfgExtNumber.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgExtNumber.setDescription('Unique number that identifies this alarm. Assigned by the unit. The\n        alarm identifier is compose of 3 fields, the module number, the instance\n        number and the error number. The alarm number looks like this:\n        A.B.C and is expressed in decimal, A is the module number, B is\n        the instance number and C is the error number. A module number is\n        assigned for each source of alarm in the system (see Accedian \n        documentation for more detail).')
acdAlarmCfgConditionType = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 10, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmCfgConditionType.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgConditionType.setDescription('This is the type of alarm condition.')
acdAlarmCfgAMOType = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 10, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmCfgAMOType.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgAMOType.setDescription('This is the Alarm Maintenance Object.')
acdAlarmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 1, 11), )
if mibBuilder.loadTexts: acdAlarmStatusTable.setStatus('current')
if mibBuilder.loadTexts: acdAlarmStatusTable.setDescription('Table of all alarms')
acdAlarmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 1, 11, 1), ).setIndexNames((0, "ACD-ALARM-MIB", "acdAlarmStatusID"))
if mibBuilder.loadTexts: acdAlarmStatusEntry.setStatus('current')
if mibBuilder.loadTexts: acdAlarmStatusEntry.setDescription('An alarm is an exceptional event that requires user notificaton.')
acdAlarmStatusID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 11, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmStatusID.setStatus('current')
if mibBuilder.loadTexts: acdAlarmStatusID.setDescription('Unique value for each alarm. Its value ranges from 1 to\n        MAXINT (4 bytes). ')
acdAlarmStatusNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 11, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmStatusNumber.setStatus('current')
if mibBuilder.loadTexts: acdAlarmStatusNumber.setDescription('Unique number that identifies this alarm. Assigned by the unit. The\n        alarm identifier is compose of 3 fields, the module number, the instance\n        number and the error number. The alarm number looks like this:\n        AAA.BBB.CC and is expressed in decimal, AAA is the module number, BBB is\n        the instance number (1-999) and CC is the error number (1-99). A module\n        number is assigned for each source of alarm in the system. For example\n        the port module is set to 1, the SFP module is set to 2, the PAA is set\n        to 3 and the environmental is set to 8.')
acdAlarmStatusOn = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 11, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmStatusOn.setStatus('current')
if mibBuilder.loadTexts: acdAlarmStatusOn.setDescription('This is to indicate if the alarm is On or Off.')
acdAlarmStatusLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 11, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmStatusLastChange.setStatus('current')
if mibBuilder.loadTexts: acdAlarmStatusLastChange.setDescription('This is the time of the last change for this alarm. A value of zero\n        means that nothing happened to this alarm since the last reboot.')
acdAlarmStatusMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 1, 11, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmStatusMsg.setStatus('current')
if mibBuilder.loadTexts: acdAlarmStatusMsg.setDescription('This string is to add information why the alarm is reported.')
acdAlarmV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 1, 12))
acdAlarmActiveState = NotificationType((1, 3, 6, 1, 4, 1, 22420, 2, 1, 12, 1)).setObjects(("ACD-ALARM-MIB", "acdAlarmCfgID"), ("ACD-ALARM-MIB", "acdAlarmCfgNumber"), ("ACD-ALARM-MIB", "acdAlarmCfgSeverity"), ("ACD-ALARM-MIB", "acdAlarmCfgServiceAffecting"), ("ACD-ALARM-MIB", "acdAlarmCfgDesc"), ("ACD-ALARM-MIB", "acdAlarmStatusLastChange"), ("ACD-ALARM-MIB", "acdAlarmCfgExtNumber"), ("ACD-ALARM-MIB", "acdAlarmCfgConditionType"), ("ACD-ALARM-MIB", "acdAlarmCfgAMOType"), ("SNMPv2-MIB", "sysName"))
if mibBuilder.loadTexts: acdAlarmActiveState.setStatus('current')
if mibBuilder.loadTexts: acdAlarmActiveState.setDescription('The SNMP trap that is generated when an alarm\n         entry crosses its rising threshold and generates\n         an event that is configured for sending SNMP\n         traps.')
acdAlarmClearState = NotificationType((1, 3, 6, 1, 4, 1, 22420, 2, 1, 12, 2)).setObjects(("ACD-ALARM-MIB", "acdAlarmCfgID"), ("ACD-ALARM-MIB", "acdAlarmCfgNumber"), ("ACD-ALARM-MIB", "acdAlarmCfgSeverity"), ("ACD-ALARM-MIB", "acdAlarmCfgServiceAffecting"), ("ACD-ALARM-MIB", "acdAlarmCfgDesc"), ("ACD-ALARM-MIB", "acdAlarmStatusLastChange"), ("ACD-ALARM-MIB", "acdAlarmCfgExtNumber"), ("ACD-ALARM-MIB", "acdAlarmCfgConditionType"), ("ACD-ALARM-MIB", "acdAlarmCfgAMOType"), ("SNMPv2-MIB", "sysName"))
if mibBuilder.loadTexts: acdAlarmClearState.setStatus('current')
if mibBuilder.loadTexts: acdAlarmClearState.setDescription('The SNMP trap that is generated when an alarm\n         entry crosses its falling threshold and generates\n         an event that is configured for sending SNMP\n         traps.')
acdAlarmCfgTableLastChangeTid = MibScalar((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 4, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmCfgTableLastChangeTid.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgTableLastChangeTid.setDescription('This is the transaction ID of the last change of the acdAlarmCfgTable\n        table.  If this value is different since the last read this is indicate \n        a table change.')
acdAlarmStatusTableLastChangeTid = MibScalar((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 4, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdAlarmStatusTableLastChangeTid.setStatus('current')
if mibBuilder.loadTexts: acdAlarmStatusTableLastChangeTid.setDescription('This is the transaction ID of the last change of the acdAlarmStatusTable\n        table.  If this value is different since the last read this is indicate \n        a table change.')
acdAlarmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 3, 1))
acdAlarmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 3, 2))
acdAlarmGenGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 3, 2, 1)).setObjects(("ACD-ALARM-MIB", "acdAlarmGenThreshOn"), ("ACD-ALARM-MIB", "acdAlarmGenThreshOff"), ("ACD-ALARM-MIB", "acdAlarmGenLedEnable"), ("ACD-ALARM-MIB", "acdAlarmGenSyslogEnable"), ("ACD-ALARM-MIB", "acdAlarmGenSNMPEnable"), ("ACD-ALARM-MIB", "acdAlarmGen8023AHEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdAlarmGenGroup = acdAlarmGenGroup.setStatus('current')
if mibBuilder.loadTexts: acdAlarmGenGroup.setDescription('.')
acdAlarmCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 3, 2, 2)).setObjects(("ACD-ALARM-MIB", "acdAlarmCfgID"), ("ACD-ALARM-MIB", "acdAlarmCfgNumber"), ("ACD-ALARM-MIB", "acdAlarmCfgDesc"), ("ACD-ALARM-MIB", "acdAlarmCfgEnable"), ("ACD-ALARM-MIB", "acdAlarmCfgSeverity"), ("ACD-ALARM-MIB", "acdAlarmCfgServiceAffecting"), ("ACD-ALARM-MIB", "acdAlarmCfgExtNumber"), ("ACD-ALARM-MIB", "acdAlarmCfgConditionType"), ("ACD-ALARM-MIB", "acdAlarmCfgAMOType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdAlarmCfgGroup = acdAlarmCfgGroup.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCfgGroup.setDescription('.')
acdAlarmStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 3, 2, 3)).setObjects(("ACD-ALARM-MIB", "acdAlarmStatusID"), ("ACD-ALARM-MIB", "acdAlarmStatusNumber"), ("ACD-ALARM-MIB", "acdAlarmStatusOn"), ("ACD-ALARM-MIB", "acdAlarmStatusLastChange"), ("ACD-ALARM-MIB", "acdAlarmStatusMsg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdAlarmStatusGroup = acdAlarmStatusGroup.setStatus('current')
if mibBuilder.loadTexts: acdAlarmStatusGroup.setDescription('.')
acdAlarmNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 3, 2, 4)).setObjects(("ACD-ALARM-MIB", "acdAlarmActiveState"), ("ACD-ALARM-MIB", "acdAlarmClearState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdAlarmNotificationsGroup = acdAlarmNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: acdAlarmNotificationsGroup.setDescription('Objects for the Notifications group.')
acdAlarmTidGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 3, 2, 5)).setObjects(("ACD-ALARM-MIB", "acdAlarmCfgTableLastChangeTid"), ("ACD-ALARM-MIB", "acdAlarmStatusTableLastChangeTid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdAlarmTidGroup = acdAlarmTidGroup.setStatus('current')
if mibBuilder.loadTexts: acdAlarmTidGroup.setDescription('List of scalars to monitior changes in tables.')
acdAlarmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 22420, 2, 1, 15, 3, 1, 1)).setObjects(("ACD-ALARM-MIB", "acdAlarmGenGroup"), ("ACD-ALARM-MIB", "acdAlarmCfgGroup"), ("ACD-ALARM-MIB", "acdAlarmStatusGroup"), ("ACD-ALARM-MIB", "acdAlarmNotificationsGroup"), ("ACD-ALARM-MIB", "acdAlarmTidGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdAlarmCompliance = acdAlarmCompliance.setStatus('current')
if mibBuilder.loadTexts: acdAlarmCompliance.setDescription('The compliance statement for support of the ACD-ALARM-MIB module.')
mibBuilder.exportSymbols("ACD-ALARM-MIB", acdAlarmCfgAMOType=acdAlarmCfgAMOType, acdAlarmStatusTableLastChangeTid=acdAlarmStatusTableLastChangeTid, acdAlarmStatusOn=acdAlarmStatusOn, acdAlarmV2=acdAlarmV2, acdAlarmNotificationsGroup=acdAlarmNotificationsGroup, acdAlarmGroups=acdAlarmGroups, acdAlarmActiveState=acdAlarmActiveState, acdAlarmCompliances=acdAlarmCompliances, acdAlarmGenSyslogEnable=acdAlarmGenSyslogEnable, acdAlarm=acdAlarm, acdAlarmCfgID=acdAlarmCfgID, acdAlarmCfgEntry=acdAlarmCfgEntry, acdAlarmTidGroup=acdAlarmTidGroup, acdAlarmCfgExtNumber=acdAlarmCfgExtNumber, acdAlarmGenThreshOff=acdAlarmGenThreshOff, acdAlarmCompliance=acdAlarmCompliance, acdAlarmConformance=acdAlarmConformance, acdAlarmGenThreshOn=acdAlarmGenThreshOn, acdAlarmCfgTable=acdAlarmCfgTable, acdAlarmCfgNumber=acdAlarmCfgNumber, acdAlarmCfgEnable=acdAlarmCfgEnable, acdAlarmCfgTableLastChangeTid=acdAlarmCfgTableLastChangeTid, acdAlarmStatusEntry=acdAlarmStatusEntry, acdAlarmGenSNMPEnable=acdAlarmGenSNMPEnable, acdAlarmCfgConditionType=acdAlarmCfgConditionType, acdAlarmGen8023AHEnable=acdAlarmGen8023AHEnable, acdAlarmMIBObjects=acdAlarmMIBObjects, acdAlarmStatus=acdAlarmStatus, acdAlarmCfgSeverity=acdAlarmCfgSeverity, acdAlarmStatusID=acdAlarmStatusID, acdAlarmTableTid=acdAlarmTableTid, acdAlarmCfgDesc=acdAlarmCfgDesc, acdAlarmStatusTable=acdAlarmStatusTable, acdAlarmGenGroup=acdAlarmGenGroup, acdAlarmStatusNumber=acdAlarmStatusNumber, PYSNMP_MODULE_ID=acdAlarm, acdAlarmStatusMsg=acdAlarmStatusMsg, acdAlarmCfgGroup=acdAlarmCfgGroup, acdAlarmClearState=acdAlarmClearState, acdAlarmConfig=acdAlarmConfig, acdAlarmStatusGroup=acdAlarmStatusGroup, acdAlarmCfgServiceAffecting=acdAlarmCfgServiceAffecting, acdAlarmStatusLastChange=acdAlarmStatusLastChange, acdAlarmGenLedEnable=acdAlarmGenLedEnable)
