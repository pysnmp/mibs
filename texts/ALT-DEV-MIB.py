#
# PySNMP MIB module ALT-DEV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/altergy/ALT-DEV-MIB
# Produced by pysmi-1.1.12 at Wed Sep 18 06:42:24 2024
# On host fv-az1780-151 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
IpAddress, ModuleIdentity, NotificationType, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, Unsigned32, TimeTicks, MibIdentifier, Counter64, iso, Integer32, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ModuleIdentity", "NotificationType", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "Unsigned32", "TimeTicks", "MibIdentifier", "Counter64", "iso", "Integer32", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
altergyInc = ModuleIdentity((1, 3, 6, 1, 4, 1, 52248))
altergyInc.setRevisions(('2020-02-12 19:40',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: altergyInc.setRevisionsDescriptions(('First draft',))
if mibBuilder.loadTexts: altergyInc.setLastUpdated('202002121940Z')
if mibBuilder.loadTexts: altergyInc.setOrganization('www.altergy.com')
if mibBuilder.loadTexts: altergyInc.setContactInfo('postal:\tMatthew Ellington\n\t\t\t140 Blue Ravine\n\t\t\tFolsom, CA  95630\n\n\temail:\t\tmatthew.ellington@altergy.com')
if mibBuilder.loadTexts: altergyInc.setDescription('MIB objects for Altergy fuel cell and reformer')
altergyConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 99))
altergyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 99, 1))
altergyCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 99, 2))
basicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 52248, 99, 2, 1)).setObjects(("ALT-DEV-MIB", "altergyDevGroup1"), ("ALT-DEV-MIB", "altergyDevGroup2"), ("ALT-DEV-MIB", "altergyDevGroup3"), ("ALT-DEV-MIB", "altergyDevGroup4"), ("ALT-DEV-MIB", "altergyDevTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    basicCompliance = basicCompliance.setStatus('current')
if mibBuilder.loadTexts: basicCompliance.setDescription('ALT2-DEV-MIB MODULE-COMPLIANCE.')
altergyDevGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 52248, 99, 1, 1)).setObjects(("ALT-DEV-MIB", "altergyDevFWVer"), ("ALT-DEV-MIB", "altergyDevState"), ("ALT-DEV-MIB", "altergyDevVbus"), ("ALT-DEV-MIB", "altergyDevIout"), ("ALT-DEV-MIB", "altergyDevAlarmStr"), ("ALT-DEV-MIB", "altergyDevImax"), ("ALT-DEV-MIB", "altergyDevTboard"), ("ALT-DEV-MIB", "altergyDevPpump"), ("ALT-DEV-MIB", "altergyDevTburner"), ("ALT-DEV-MIB", "altergyDevTexhaust"), ("ALT-DEV-MIB", "altergyDevTpurifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altergyDevGroup1 = altergyDevGroup1.setStatus('current')
if mibBuilder.loadTexts: altergyDevGroup1.setDescription('Information scalars for fuel cell engine.')
altergyDevGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 52248, 99, 1, 2)).setObjects(("ALT-DEV-MIB", "altergyDevAlarm0"), ("ALT-DEV-MIB", "altergyDevAlarm1"), ("ALT-DEV-MIB", "altergyDevAlarm2"), ("ALT-DEV-MIB", "altergyDevAlarm3"), ("ALT-DEV-MIB", "altergyDevFuelPressA"), ("ALT-DEV-MIB", "altergyDevFuelPressB"), ("ALT-DEV-MIB", "altergyDevAdc0"), ("ALT-DEV-MIB", "altergyDevAdc1"), ("ALT-DEV-MIB", "altergyDevAdc2"), ("ALT-DEV-MIB", "altergyDevAdc3"), ("ALT-DEV-MIB", "altergyDevDigIn0"), ("ALT-DEV-MIB", "altergyDevDigIn1"), ("ALT-DEV-MIB", "altergyDevDigIn2"), ("ALT-DEV-MIB", "altergyDevDigIn3"), ("ALT-DEV-MIB", "altergyDevDigOut0"), ("ALT-DEV-MIB", "altergyDevDigOut1"), ("ALT-DEV-MIB", "altergyDevIntTankLevel"), ("ALT-DEV-MIB", "altergyDevExtTankLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altergyDevGroup2 = altergyDevGroup2.setStatus('current')
if mibBuilder.loadTexts: altergyDevGroup2.setDescription('Information arrays for fuel cell engine.')
altergyDevGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 52248, 99, 1, 3)).setObjects(("ALT-DEV-MIB", "altergyDevVset"), ("ALT-DEV-MIB", "altergyDevIset"), ("ALT-DEV-MIB", "altergyDevMode"), ("ALT-DEV-MIB", "altergyDevVon"), ("ALT-DEV-MIB", "altergyDevVoff"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altergyDevGroup3 = altergyDevGroup3.setStatus('current')
if mibBuilder.loadTexts: altergyDevGroup3.setDescription('Operational scalars group for fuel cell engine.')
altergyDevGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 52248, 99, 1, 4)).setObjects(("ALT-DEV-MIB", "altergyDevIp"), ("ALT-DEV-MIB", "altergyDevGateway"), ("ALT-DEV-MIB", "altergyDevNetmask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altergyDevGroup4 = altergyDevGroup4.setStatus('current')
if mibBuilder.loadTexts: altergyDevGroup4.setDescription('Network settings for the fuel cell engine.')
altergyDevTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 52248, 99, 1, 5)).setObjects(("ALT-DEV-MIB", "altergyTrapStart"), ("ALT-DEV-MIB", "altergyTrapStop"), ("ALT-DEV-MIB", "altergyTrapStartDR"), ("ALT-DEV-MIB", "altergyTrapStopDR"), ("ALT-DEV-MIB", "altergyTrapHold"), ("ALT-DEV-MIB", "altergyTrapOperational"), ("ALT-DEV-MIB", "altergyTrapSoftReset"), ("ALT-DEV-MIB", "altergyTrapHardReset"), ("ALT-DEV-MIB", "altergyTrapOpCleared"), ("ALT-DEV-MIB", "altergyTrapFuelWarnA"), ("ALT-DEV-MIB", "altergyTrapWarn1Cleared"), ("ALT-DEV-MIB", "altergyTrapFuelWarnB"), ("ALT-DEV-MIB", "altergyTrapWarn2Cleared"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altergyDevTrapGroup = altergyDevTrapGroup.setStatus('current')
if mibBuilder.loadTexts: altergyDevTrapGroup.setDescription('Device traps.')
altergyDevInfoScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 1))
altergyDevInfoArrays = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 2))
altergyDevAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 2, 1))
altergyDevFuelPress = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 2, 2))
altergyDevAdc = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 2, 3))
altergyDevDigIn = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 2, 4))
altergyDevDigOut = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 2, 5))
altergyDevTankLevel = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 2, 10))
altergyDevOpSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 5))
altergyDevNetSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 10))
altergyDevTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 52248, 50))
altergyDevFWVer = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevFWVer.setStatus('current')
if mibBuilder.loadTexts: altergyDevFWVer.setDescription('Device firmware string.')
altergyDevState = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 29, 30, 48, 50, 59, 60, 64, 65, 69, 70, 79, 80, 84, 85, 89, 90, 100, 102, 104, 105, 107, 108, 109, 110, 129, 130, 194, 195, 196, 197, 198, 199, 219, 220, 229, 230, 239, 240, 251, 252, 254, 255))).clone(namedValues=NamedValues(("resetInit", 0), ("reset", 1), ("selfcheckInit", 9), ("selfcheck", 10), ("offlineInit", 11), ("offline", 12), ("leakCheckInit", 14), ("leakCheck", 15), ("warmupInit", 17), ("warmup", 18), ("idleInit", 19), ("idle", 20), ("startStackInit", 29), ("startStack", 30), ("refreshInit", 48), ("refresh", 50), ("startFanInit", 59), ("startFan", 60), ("checkVoutInit", 64), ("checkVout", 65), ("startPCSInit", 69), ("startPCS", 70), ("runInit", 79), ("run", 80), ("tripInit", 84), ("trip", 85), ("shutdownInit", 89), ("shutdown", 90), ("healthCheckInit", 100), ("healthCheck", 102), ("stackCoolInit", 104), ("stackCool", 105), ("stackLoadInit", 107), ("stackLoad", 108), ("bleedLineInit", 109), ("bleedLine", 110), ("airPurgeInit", 129), ("airPurge", 130), ("badConfigInit", 194), ("badConfig", 195), ("bootInit", 196), ("boot", 197), ("stopInit", 198), ("stop", 199), ("bufferPrepInit", 219), ("bufferPrep", 220), ("vacuumInit", 229), ("vacuum", 230), ("cooldownInit", 239), ("cooldown", 240), ("serviceinit", 251), ("service", 252), ("testinit", 254), ("test", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevState.setStatus('current')
if mibBuilder.loadTexts: altergyDevState.setDescription('Device state enum.')
altergyDevVbus = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevVbus.setStatus('current')
if mibBuilder.loadTexts: altergyDevVbus.setDescription('The system bus voltage in dV.')
altergyDevIout = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevIout.setStatus('current')
if mibBuilder.loadTexts: altergyDevIout.setDescription('The system output current in dA.')
altergyDevAlarmStr = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevAlarmStr.setStatus('current')
if mibBuilder.loadTexts: altergyDevAlarmStr.setDescription('Fuel cell/reformer alarms as a string.')
altergyDevImax = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevImax.setStatus('current')
if mibBuilder.loadTexts: altergyDevImax.setDescription('Maximum output current during this session in dA.')
altergyDevTboard = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevTboard.setStatus('current')
if mibBuilder.loadTexts: altergyDevTboard.setDescription('Temperature of the main board in C.')
altergyDevBoardSN = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevBoardSN.setStatus('current')
if mibBuilder.loadTexts: altergyDevBoardSN.setDescription('Serial number of the main board.')
altergyDevPpump = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevPpump.setStatus('current')
if mibBuilder.loadTexts: altergyDevPpump.setDescription('Pump pressure in PSI.')
altergyDevTburner = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevTburner.setStatus('current')
if mibBuilder.loadTexts: altergyDevTburner.setDescription('Temperature of the burner in C.')
altergyDevTexhaust = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevTexhaust.setStatus('current')
if mibBuilder.loadTexts: altergyDevTexhaust.setDescription('Temperature of the exhaust in C.')
altergyDevTpurifier = MibScalar((1, 3, 6, 1, 4, 1, 52248, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevTpurifier.setStatus('current')
if mibBuilder.loadTexts: altergyDevTpurifier.setDescription('Temperature of the purifier in C.')
altergyDevAlarm0 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevAlarm0.setStatus('current')
if mibBuilder.loadTexts: altergyDevAlarm0.setDescription('Hex value of fuel cell/reformer alarm0.')
altergyDevAlarm1 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevAlarm1.setStatus('current')
if mibBuilder.loadTexts: altergyDevAlarm1.setDescription('Hex value of fuel cell/reformer alarm1.')
altergyDevAlarm2 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevAlarm2.setStatus('current')
if mibBuilder.loadTexts: altergyDevAlarm2.setDescription('Hex value of fuel cell/reformer alarm2.')
altergyDevAlarm3 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevAlarm3.setStatus('current')
if mibBuilder.loadTexts: altergyDevAlarm3.setDescription('Hex value of fuel cell/reformer alarm3.')
altergyDevFuelPressA = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevFuelPressA.setStatus('current')
if mibBuilder.loadTexts: altergyDevFuelPressA.setDescription('Fuel pressure bank A in PSI.')
altergyDevFuelPressB = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevFuelPressB.setStatus('current')
if mibBuilder.loadTexts: altergyDevFuelPressB.setDescription('Fuel pressure bank B in PSI.')
altergyDevAdc0 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevAdc0.setStatus('current')
if mibBuilder.loadTexts: altergyDevAdc0.setDescription('ADC channel 0 value in millivolts.')
altergyDevAdc1 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevAdc1.setStatus('current')
if mibBuilder.loadTexts: altergyDevAdc1.setDescription('ADC channel 1 value in millivolts.')
altergyDevAdc2 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevAdc2.setStatus('current')
if mibBuilder.loadTexts: altergyDevAdc2.setDescription('ADC channel 2 value in millivolts.')
altergyDevAdc3 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevAdc3.setStatus('current')
if mibBuilder.loadTexts: altergyDevAdc3.setDescription('ADC channel 3 value in millivolts.')
altergyDevDigIn0 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevDigIn0.setStatus('current')
if mibBuilder.loadTexts: altergyDevDigIn0.setDescription('Digital input 0 state.')
altergyDevDigIn1 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevDigIn1.setStatus('current')
if mibBuilder.loadTexts: altergyDevDigIn1.setDescription('Digital input 1 state.')
altergyDevDigIn2 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevDigIn2.setStatus('current')
if mibBuilder.loadTexts: altergyDevDigIn2.setDescription('Digital input 2 state.')
altergyDevDigIn3 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevDigIn3.setStatus('current')
if mibBuilder.loadTexts: altergyDevDigIn3.setDescription('Digital input 3 value.')
altergyDevDigOut0 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevDigOut0.setStatus('current')
if mibBuilder.loadTexts: altergyDevDigOut0.setDescription('Digital output 0 state.')
altergyDevDigOut1 = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevDigOut1.setStatus('current')
if mibBuilder.loadTexts: altergyDevDigOut1.setDescription('Digital output 1 state.')
altergyDevIntTankLevel = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevIntTankLevel.setStatus('current')
if mibBuilder.loadTexts: altergyDevIntTankLevel.setDescription('Internal fuel tank level in percent.')
altergyDevExtTankLevel = MibScalar((1, 3, 6, 1, 4, 1, 52248, 2, 10, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altergyDevExtTankLevel.setStatus('current')
if mibBuilder.loadTexts: altergyDevExtTankLevel.setDescription('External fuel tank level in percent.')
altergyDevVset = MibScalar((1, 3, 6, 1, 4, 1, 52248, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: altergyDevVset.setStatus('current')
if mibBuilder.loadTexts: altergyDevVset.setDescription('Fuel cell PCS voltage setpoint in dV.')
altergyDevIset = MibScalar((1, 3, 6, 1, 4, 1, 52248, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: altergyDevIset.setStatus('current')
if mibBuilder.loadTexts: altergyDevIset.setDescription('Fuel cell PCS current limit in dA.')
altergyDevMode = MibScalar((1, 3, 6, 1, 4, 1, 52248, 5, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: altergyDevMode.setStatus('current')
if mibBuilder.loadTexts: altergyDevMode.setDescription('Fuel cell mode (manual|telecom|ups).')
altergyDevVon = MibScalar((1, 3, 6, 1, 4, 1, 52248, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: altergyDevVon.setStatus('current')
if mibBuilder.loadTexts: altergyDevVon.setDescription('Telecom on voltage in dV.')
altergyDevVoff = MibScalar((1, 3, 6, 1, 4, 1, 52248, 5, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: altergyDevVoff.setStatus('current')
if mibBuilder.loadTexts: altergyDevVoff.setDescription('Telecom off voltage in dV.')
altergyDevIp = MibScalar((1, 3, 6, 1, 4, 1, 52248, 10, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: altergyDevIp.setStatus('current')
if mibBuilder.loadTexts: altergyDevIp.setDescription('Device ip address.')
altergyDevGateway = MibScalar((1, 3, 6, 1, 4, 1, 52248, 10, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: altergyDevGateway.setStatus('current')
if mibBuilder.loadTexts: altergyDevGateway.setDescription('Device network gateway.')
altergyDevNetmask = MibScalar((1, 3, 6, 1, 4, 1, 52248, 10, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: altergyDevNetmask.setStatus('current')
if mibBuilder.loadTexts: altergyDevNetmask.setDescription('Device network subnet mask.')
altergyTrapStart = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 6065)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapStart.setStatus('current')
if mibBuilder.loadTexts: altergyTrapStart.setDescription('Run Mode Started')
altergyTrapStop = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 6066)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapStop.setStatus('current')
if mibBuilder.loadTexts: altergyTrapStop.setDescription('Run Mode Stopped')
altergyTrapStartDR = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 6067)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapStartDR.setStatus('current')
if mibBuilder.loadTexts: altergyTrapStartDR.setDescription('Dormancy Refresh Started')
altergyTrapStopDR = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 6068)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapStopDR.setStatus('current')
if mibBuilder.loadTexts: altergyTrapStopDR.setDescription('Dormancy Refresh Stopped')
altergyTrapHold = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 6069)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapHold.setStatus('current')
if mibBuilder.loadTexts: altergyTrapHold.setDescription('Hold Alarm')
altergyTrapOperational = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 6070)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapOperational.setStatus('current')
if mibBuilder.loadTexts: altergyTrapOperational.setDescription('Operational Alarm.')
altergyTrapSoftReset = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 6071)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapSoftReset.setStatus('current')
if mibBuilder.loadTexts: altergyTrapSoftReset.setDescription('Soft reset.')
altergyTrapHardReset = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 6072)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapHardReset.setStatus('current')
if mibBuilder.loadTexts: altergyTrapHardReset.setDescription('Hard reset.')
altergyTrapOpCleared = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 6073)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapOpCleared.setStatus('current')
if mibBuilder.loadTexts: altergyTrapOpCleared.setDescription('Operational alarm has cleared.')
altergyTrapFuelWarnA = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 7070)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapFuelWarnA.setStatus('current')
if mibBuilder.loadTexts: altergyTrapFuelWarnA.setDescription('Low fuel warning bank A.')
altergyTrapWarn1Cleared = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 7071)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapWarn1Cleared.setStatus('current')
if mibBuilder.loadTexts: altergyTrapWarn1Cleared.setDescription('Low fuel warning bank A cleared.')
altergyTrapFuelWarnB = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 7072)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapFuelWarnB.setStatus('current')
if mibBuilder.loadTexts: altergyTrapFuelWarnB.setDescription('Low fuel warning bank B.')
altergyTrapWarn2Cleared = NotificationType((1, 3, 6, 1, 4, 1, 52248, 50, 7073)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: altergyTrapWarn2Cleared.setStatus('current')
if mibBuilder.loadTexts: altergyTrapWarn2Cleared.setDescription('Low fuel warning bank B cleared.')
mibBuilder.exportSymbols("ALT-DEV-MIB", altergyDevAdc3=altergyDevAdc3, altergyDevDigIn=altergyDevDigIn, altergyDevMode=altergyDevMode, altergyTrapSoftReset=altergyTrapSoftReset, altergyTrapStop=altergyTrapStop, altergyDevTankLevel=altergyDevTankLevel, altergyDevTrapGroup=altergyDevTrapGroup, altergyDevIntTankLevel=altergyDevIntTankLevel, altergyTrapOpCleared=altergyTrapOpCleared, altergyDevNetSettings=altergyDevNetSettings, altergyDevGroup3=altergyDevGroup3, altergyDevVon=altergyDevVon, altergyDevAdc=altergyDevAdc, altergyTrapStopDR=altergyTrapStopDR, altergyDevAdc0=altergyDevAdc0, altergyTrapHardReset=altergyTrapHardReset, altergyDevDigIn1=altergyDevDigIn1, altergyDevInfoScalars=altergyDevInfoScalars, altergyTrapWarn2Cleared=altergyTrapWarn2Cleared, altergyDevTexhaust=altergyDevTexhaust, altergyDevAlarm2=altergyDevAlarm2, altergyDevDigIn0=altergyDevDigIn0, altergyTrapStart=altergyTrapStart, altergyDevFuelPress=altergyDevFuelPress, altergyDevImax=altergyDevImax, altergyDevTpurifier=altergyDevTpurifier, altergyTrapWarn1Cleared=altergyTrapWarn1Cleared, altergyDevTraps=altergyDevTraps, altergyTrapHold=altergyTrapHold, altergyDevAdc2=altergyDevAdc2, altergyDevBoardSN=altergyDevBoardSN, altergyDevVset=altergyDevVset, altergyDevAlarm3=altergyDevAlarm3, altergyDevAdc1=altergyDevAdc1, altergyTrapFuelWarnB=altergyTrapFuelWarnB, altergyDevNetmask=altergyDevNetmask, altergyConformance=altergyConformance, altergyDevTboard=altergyDevTboard, altergyDevAlarm1=altergyDevAlarm1, altergyInc=altergyInc, altergyDevExtTankLevel=altergyDevExtTankLevel, altergyDevGroup4=altergyDevGroup4, altergyDevFuelPressB=altergyDevFuelPressB, altergyDevGroup2=altergyDevGroup2, altergyDevAlarm=altergyDevAlarm, altergyDevVoff=altergyDevVoff, altergyTrapFuelWarnA=altergyTrapFuelWarnA, altergyDevVbus=altergyDevVbus, altergyDevAlarm0=altergyDevAlarm0, altergyDevPpump=altergyDevPpump, altergyDevIout=altergyDevIout, altergyDevFWVer=altergyDevFWVer, altergyDevAlarmStr=altergyDevAlarmStr, altergyDevInfoArrays=altergyDevInfoArrays, basicCompliance=basicCompliance, altergyDevFuelPressA=altergyDevFuelPressA, altergyGroups=altergyGroups, altergyDevGateway=altergyDevGateway, altergyDevIp=altergyDevIp, altergyDevIset=altergyDevIset, altergyDevDigIn3=altergyDevDigIn3, altergyDevGroup1=altergyDevGroup1, PYSNMP_MODULE_ID=altergyInc, altergyDevDigIn2=altergyDevDigIn2, altergyDevDigOut0=altergyDevDigOut0, altergyTrapStartDR=altergyTrapStartDR, altergyDevState=altergyDevState, altergyCompliances=altergyCompliances, altergyDevOpSettings=altergyDevOpSettings, altergyDevTburner=altergyDevTburner, altergyDevDigOut=altergyDevDigOut, altergyTrapOperational=altergyTrapOperational, altergyDevDigOut1=altergyDevDigOut1)
