#
# PySNMP MIB module CITRIX-NetScaler-SD-WAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/citrix/CITRIX-NetScaler-SD-WAN-MIB
# Produced by pysmi-1.1.12 at Wed May 29 06:42:41 2024
# On host fv-az1019-850 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Unsigned32, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Integer32, Bits, enterprises, MibIdentifier, Counter32, TimeTicks, Gauge32, ObjectIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Integer32", "Bits", "enterprises", "MibIdentifier", "Counter32", "TimeTicks", "Gauge32", "ObjectIdentity", "IpAddress")
TimeStamp, TestAndIncr, DisplayString, RowStatus, AutonomousType, TruthValue, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TestAndIncr", "DisplayString", "RowStatus", "AutonomousType", "TruthValue", "PhysAddress", "TextualConvention")
citrix = MibIdentifier((1, 3, 6, 1, 4, 1, 3845))
sdWANMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3845, 31))
if mibBuilder.loadTexts: sdWANMIB.setLastUpdated('201709260000Z')
if mibBuilder.loadTexts: sdWANMIB.setOrganization('www.citrix.com')
if mibBuilder.loadTexts: sdWANMIB.setContactInfo('\tCITRIX, Inc.\n\t\tpostal: 851 West Cypress Creek Road\n\t\t\tFort Lauderdale, Florida  33309\n\t\t\tUnited States')
if mibBuilder.loadTexts: sdWANMIB.setDescription('The MIB module for managing the CITRIX NetScaler SD-WAN Appliance')
sdWANStatusMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4))
sdWANObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2))
sdWANNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 3))
sdWANConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 1))
sdWANStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2))
sdWANEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3))
sdWANStatsAppliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12))
sdWANStatsApplianceScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1))
sdWANStatsApplianceName = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceName.setDescription('The string name for the appliance.')
sdWANStatsApplianceBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceBytesSent.setDescription('The count of the number of bytes sent for the appliance since\n             the last time the NetScaler SD-WAN service was started.')
sdWANStatsAppliancePacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsAppliancePacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsAppliancePacketsSent.setDescription('The count of the number of packets sent for the appliance since\n             the last time the NetScaler SD-WAN service was started.')
sdWANStatsApplianceBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceBytesReceived.setDescription('The count of the number of bytes received for the appliance since\n             the last time the NetScaler SD-WAN service was started.')
sdWANStatsAppliancePacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsAppliancePacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsAppliancePacketsReceived.setDescription('The count of the number of packets received for the appliance since\n             the last time the NetScaler SD-WAN service was started.')
sdWANStatsApplianceBytesDropped = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceBytesDropped.setDescription('The count of the number of bytes dropped for the appliance since\n             the last time the NetScaler SD-WAN service was started.')
sdWANStatsAppliancePacketsDropped = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsAppliancePacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsAppliancePacketsDropped.setDescription('The count of the number of packets dropped for the appliance since\n             the last time the NetScaler SD-WAN service was started.')
sdWANStatsApplianceState = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceState.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceState.setDescription('The state of the appliance - whether or not it is enabled\n             (passing traffic) or disabled.')
sdWANStatsApplianceHAState = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("undefined", 0), ("notConfigured", 1), ("active", 2), ("standby", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceHAState.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceHAState.setDescription('The High Availability state of the appliance - whether or not it\n            is the currently active appliance or the standby appliance.')
sdWANStatsApplianceSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceSerialNumber.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceSerialNumber.setDescription('The string representation of the serial number for the appliance.')
sdWANStatsApplianceOSVersion = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceOSVersion.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceOSVersion.setDescription('The string representation of the OS Version.')
sdWANStatsApplianceSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceSoftwareVersion.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceSoftwareVersion.setDescription('The string representation of the Software Version running on\n             the appliance.')
sdWANStatsApplianceConfigCreatedOn = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceConfigCreatedOn.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceConfigCreatedOn.setDescription('Day and Time NetScaler SD-WAN Configuration was created.  Only displayed\n            on client when appliance is not disabled.')
sdWANStatsApplianceServiceUptime = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceServiceUptime.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceServiceUptime.setDescription('The amount of time since the Virtual WAN Service was last initialized')
sdWANStatsApplianceApplianceUptime = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 12, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsApplianceApplianceUptime.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsApplianceApplianceUptime.setDescription('The amount of time since this Appliance was last initialized')
sdWANStatsEthernetInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13))
sdWANStatsEthernetInterfaceScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 1))
sdWANStatsNumEthernetInterfaces = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsNumEthernetInterfaces.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsNumEthernetInterfaces.setDescription('The total number of Ethernet interfaces.')
sdWANStatsEthernetInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 2), )
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceTable.setDescription('A collection of statistics for Ethernet Interface objects.\n            Contains statistics counts for all the Ethernet Interfaces in\n            the system.  Counter data in this table is updated once a\n            minute and is a cumulative count since the last time the\n            NetScaler SD-WAN service was started.')
sdWANStatsEthernetInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 2, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsEthernetInterfaceIndex"))
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceEntry.setDescription('An entry containing management information applicable to a\n            particular Ethernet interface object.')
sdWANStatsEthernetInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceIndex.setDescription('The unique Citrix Index value for the Ethernet\n            interface.')
sdWANStatsEthernetInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceIfIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceIfIndex.setDescription('The unique ifIndex value for the Ethernet\n            interface.  This can be used to reference\n            information in the IF-MIB about this interface.')
sdWANStatsEthernetInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceName.setDescription('The name for the Ethernet interface.  This is the\n            name shown on the front panel of the appliance and\n            used in the user interfaces (Web and CLI).')
sdWANStatsEthernetInterfaceBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceBytesSent.setDescription('The count of bytes sent for this Ethernet interface.')
sdWANStatsEthernetInterfacePacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsEthernetInterfacePacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsEthernetInterfacePacketsSent.setDescription('The count of packets sent for this Ethernet interface.')
sdWANStatsEthernetInterfaceBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceBytesReceived.setDescription('The count of bytes received for this Ethernet interface.')
sdWANStatsEthernetInterfacePacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsEthernetInterfacePacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsEthernetInterfacePacketsReceived.setDescription('The count of packets received for this Ethernet interface.')
sdWANStatsEthernetInterfaceBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsEthernetInterfaceBytesDropped.setDescription('The count of bytes dropped for this Ethernet interface.')
sdWANStatsEthernetInterfacePacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 13, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsEthernetInterfacePacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsEthernetInterfacePacketsDropped.setDescription('The count of packets dropped for this Ethernet interface.')
sdWANStatsRules = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14))
sdWANStatsRuleScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 1))
sdWANStatsNumRules = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsNumRules.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsNumRules.setDescription('The total number of rules in the system.')
sdWANStatsRuleTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2), )
if mibBuilder.loadTexts: sdWANStatsRuleTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRuleTable.setDescription('A collection of statistics for rule objects.\n            Contains statistics counts for all the rules in\n            the system.  Counter data in this table is updated once a\n            minute and is a cumulative count since the last time the\n            NetScaler SD-WAN service was started.')
sdWANStatsRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsRuleIndex"))
if mibBuilder.loadTexts: sdWANStatsRuleEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRuleEntry.setDescription('An entry containing management information applicable to a\n            particular route object.')
sdWANStatsRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRuleIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRuleIndex.setDescription('The unique index value for the rule.')
sdWANStatsRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRuleID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRuleID.setDescription('The unique Citrix ID for the rule.')
sdWANStatsRuleApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRuleApplicationName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRuleApplicationName.setDescription('The optional string application name associated with this rule.')
sdWANStatsRuleLANToWANHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRuleLANToWANHitCount.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRuleLANToWANHitCount.setDescription('The count of the number of LAN to WAN packets that have\n             hit this rule, measured over the past active minute.')
sdWANStatsRuleWANToLANHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRuleWANToLANHitCount.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRuleWANToLANHitCount.setDescription('The count of the number of WAN to LAN packets that have\n            hit this rule, measured over the past active minute.')
sdWANStatsRuleBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRuleBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRuleBytesSent.setDescription('The count of the number of bytes sent that\n            matched this rule, measured over the past active minute.')
sdWANStatsRulePacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRulePacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRulePacketsSent.setDescription('The count of the number of packets sent that\n            matched this rule, measured over the past active minute.')
sdWANStatsRuleBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRuleBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRuleBytesReceived.setDescription('The count of the number of bytes received that\n            matched this rule, measured over the past active minute.')
sdWANStatsRulePacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRulePacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRulePacketsReceived.setDescription('The count of the number of packets received that\n            matched this rule, measured over the past active minute.')
sdWANStatsRuleBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRuleBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRuleBytesDropped.setDescription('The count of the number of bytes dropped that\n            matched this rule, measured over the past active minute.')
sdWANStatsRulePacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRulePacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRulePacketsDropped.setDescription('The count of the number of packets dropped that\n            matched this rule, measured over the past active minute.')
sdWANStatsRuleLastActiveNMinuteAgo = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 14, 2, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRuleLastActiveNMinuteAgo.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRuleLastActiveNMinuteAgo.setDescription('This rule was hit last N Minutes ago.\n            If this field value is 0 and either sdWANStatsRuleBytesSent\n            or sdWANStatsRuleBytesReceived is not zero, then that means\n            that this rule is currently being used.  The rule\n            statistics contain the latest values.\n            If this field is > 0, then the rule statistics is\n            plateaued to show that this rule was used N minutes ago.')
sdWANStatsWANLinks = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15))
sdWANStatsWANLinkScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 1))
sdWANStatsNumWANLinks = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsNumWANLinks.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsNumWANLinks.setDescription('The total number of WAN Links on this appliance.')
sdWANStatsWANLinkTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2), )
if mibBuilder.loadTexts: sdWANStatsWANLinkTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkTable.setDescription('A collection of statistics for WAN Link objects.\n            Contains statistics counts for all the WAN Links in\n            the system.  Counter data in this table is updated once a\n            minute and is a cumulative count since the last time the\n            WAN service was started.')
sdWANStatsWANLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsWANLinkIndex"))
if mibBuilder.loadTexts: sdWANStatsWANLinkEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkEntry.setDescription('An entry containing management information applicable to a\n            particular WAN Link object.')
sdWANStatsWANLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANLinkIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkIndex.setDescription('The unique index value for the WAN Link.')
sdWANStatsWANLinkID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANLinkID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkID.setDescription('The unique Citrix ID for the WAN Link.')
sdWANStatsWANLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANLinkName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkName.setDescription('The name for the WAN Link.')
sdWANStatsWANLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("disabled", 1), ("dead", 2), ("bad", 3), ("good", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANLinkState.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkState.setDescription('The current operational state of the virtual path.')
sdWANStatsWANLinkBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANLinkBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkBytesSent.setDescription('The count of bytes sent for this WAN Link.')
sdWANStatsWANLinkPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANLinkPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkPacketsSent.setDescription('The count of packets sent for this WAN Link.')
sdWANStatsWANLinkBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANLinkBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkBytesReceived.setDescription('The count of bytes received for this WAN Link.')
sdWANStatsWANLinkPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANLinkPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkPacketsReceived.setDescription('The count of packets received for this WAN Link.')
sdWANStatsWANLinkBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANLinkBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkBytesDropped.setDescription('The count of bytes dropped for this WAN Link.')
sdWANStatsWANLinkPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 15, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANLinkPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANLinkPacketsDropped.setDescription('The count of packets dropped for this WAN Link.')
sdWANStatsVPaths = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16))
sdWANStatsVPathScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 1))
sdWANStatsNumVPaths = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsNumVPaths.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsNumVPaths.setDescription('The total number of VPaths.')
sdWANStatsVPathTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2), )
if mibBuilder.loadTexts: sdWANStatsVPathTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathTable.setDescription('A collection of statistics for VPath objects.\n            Contains statistics counts for all the VPaths in\n            the system.  Counter data in this table is updated once a\n            minute and is a cumulative count since the last time the\n            NetScaler SD-WAN service was started.')
sdWANStatsVPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsVPathIndex"))
if mibBuilder.loadTexts: sdWANStatsVPathEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathEntry.setDescription('An entry containing management information applicable to a\n            particular VPath object.')
sdWANStatsVPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathIndex.setDescription('The unique index value for the VPath.')
sdWANStatsVPathID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathID.setDescription('The unique Citrix ID for the VPath.')
sdWANStatsVPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathName.setDescription('The name for the VPath.')
sdWANStatsVPathState = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("disabled", 1), ("dead", 2), ("bad", 3), ("good", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathState.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathState.setDescription('The current operational state of the virtual path.')
sdWANStatsVPathBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathBytesSent.setDescription('The count of bytes sent for this VPath.')
sdWANStatsVPathPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathPacketsSent.setDescription('The count of packets sent for this VPath.')
sdWANStatsVPathBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathBytesReceived.setDescription('The count of bytes received for this VPath.')
sdWANStatsVPathPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathPacketsReceived.setDescription('The count of packets received for this VPath.')
sdWANStatsVPathNumPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathNumPaths.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathNumPaths.setDescription('The number of Paths associated with this virtual path - this\n            is the number of rows in the sdWANStatsWANPathsTable for\n            the current virtual path.  Each virtual path can have a different\n            number of paths associated with it.')
sdWANStatsVPathNumRules = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathNumRules.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathNumRules.setDescription('The number of Rules associated with this virtual path - this\n            is the number of rows in the sdWANStatsWANRulesTable for\n            the current virtual path.  Each virtual path can have a different\n            number of rules associated with it.')
sdWANStatsVPathSendBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathSendBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathSendBytesDropped.setDescription('The count of send bytes dropped for this VPath.')
sdWANStatsVPathSendPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathSendPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathSendPacketsDropped.setDescription('The count of send packets dropped for this VPath.')
sdWANStatsVPathSendPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathSendPacketsLost.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathSendPacketsLost.setDescription('The current total number of send packets lost for this\n            VPath.')
sdWANStatsVPathSendPacketsOOO = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathSendPacketsOOO.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathSendPacketsOOO.setDescription('The current total number of send packets received out\n             of order by the remote on this VPath.')
sdWANStatsVPathSendBOWTms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathSendBOWTms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathSendBOWTms.setDescription('The current best one-way time (BOWT) value (in milliseconds)\n            in the send direction for this VPath.')
sdWANStatsVPathSendJitterms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathSendJitterms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathSendJitterms.setDescription('The current worst jitter value (in milliseconds) in the send\n            direction for this VPath.')
sdWANStatsVPathReceiveBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathReceiveBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathReceiveBytesDropped.setDescription('The count of receive bytes dropped for this VPath.')
sdWANStatsVPathReceivePacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathReceivePacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathReceivePacketsDropped.setDescription('The count of receive packets dropped for this VPath.')
sdWANStatsVPathReceivePacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathReceivePacketsLost.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathReceivePacketsLost.setDescription('The current total number of receive packets lost for this\n            VPath.')
sdWANStatsVPathReceivePacketsOOO = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathReceivePacketsOOO.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathReceivePacketsOOO.setDescription('The current total number of received packets out\n             of order on this VPath.')
sdWANStatsVPathReceiveBOWTms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathReceiveBOWTms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathReceiveBOWTms.setDescription('The current best one-way time (BOWT) value (in milliseconds)\n            in the receive direction for this VPath.')
sdWANStatsVPathReceiveJitterms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 2, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsVPathReceiveJitterms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsVPathReceiveJitterms.setDescription('The current worst jitter value (in milliseconds) in the\n            receive direction for this VPath.')
sdWANStatsWANPaths = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3))
sdWANStatsWANPathTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1), )
if mibBuilder.loadTexts: sdWANStatsWANPathTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathTable.setDescription('A collection of statistics for VPath Path objects.\n            Contains statistics counts for all the VPath Paths in\n            the system.  Counter data in this table is updated once a\n            minute and is a cumulative count since the last time the\n            NetScaler SD-WAN service was started.  The number of virtual paths in\n            this table is stored in sdWANStatsNumVPaths and the number\n            of Paths for each virtual path is in the variable\n            sdWANStatsVPathNumPaths which is in the sdWANStatsVPathTable\n            and has a specific number of paths value for each virtual path\n            index.')
sdWANStatsWANPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsWANPathVPathIndex"), (0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsWANPathPathIndex"))
if mibBuilder.loadTexts: sdWANStatsWANPathEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathEntry.setDescription('An entry containing management information applicable to a\n            particular VPath object.')
sdWANStatsWANPathVPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathVPathIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathVPathIndex.setDescription('The unique index (VPath) value for the VPath Path.')
sdWANStatsWANPathPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathPathIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathPathIndex.setDescription('The unique index (Path) value for the VPath Path.')
sdWANStatsWANPathVPathID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathVPathID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathVPathID.setDescription('The unique Citrix ID (VPath) value for the VPath Path.')
sdWANStatsWANPathPathID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathPathID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathPathID.setDescription('The unique Citrix ID (Path) value for the VPath Path.')
sdWANStatsWANPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathName.setDescription('The name for the VPath Path.')
sdWANStatsWANPathState = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("disabled", 1), ("dead", 2), ("bad", 3), ("good", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathState.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathState.setDescription('The current operational state of the virtual path.')
sdWANStatsWANPathBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathBytesSent.setDescription('The count of bytes sent for this VPath Path.')
sdWANStatsWANPathPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathPacketsSent.setDescription('The count of packets sent for this VPath Path.')
sdWANStatsWANPathBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathBytesReceived.setDescription('The count of bytes received for this VPath Path.')
sdWANStatsWANPathPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathPacketsReceived.setDescription('The count of packets received for this VPath Path.')
sdWANStatsWANPathBOWTms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathBOWTms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathBOWTms.setDescription('The current best one-way time (BOWT) value (in milliseconds)\n            value for this VPath Path.')
sdWANStatsWANPathJitterms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathJitterms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathJitterms.setDescription('The current best jitter value (in milliseconds) for this\n            VPath Path.')
sdWANStatsWANPathPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathPacketsLost.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathPacketsLost.setDescription('The current total number of packets lost for this\n            VPath Path.')
sdWANStatsWANPathPacketsOOO = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 3, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANPathPacketsOOO.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANPathPacketsOOO.setDescription('The current total number of out of order\n             packets detected on this VPath Path.')
sdWANStatsWANClasses = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4))
sdWANStatsWANClassTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1), )
if mibBuilder.loadTexts: sdWANStatsWANClassTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassTable.setDescription('A collection of statistics for VPath Class objects.\n            Contains statistics counts for all the VPath Classes in\n            the system.  Counter data in this table is updated once a\n            minute and is a cumulative count since the last time the\n            NetScaler SD-WAN service was started.  The number of virtual path in\n            this table is stored in sdWANStatsNumVPaths and the number\n            of Classes for each virtual path is always 17.')
sdWANStatsWANClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsWANClassVPathIndex"), (0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsWANClassClassIndex"))
if mibBuilder.loadTexts: sdWANStatsWANClassEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassEntry.setDescription('An entry containing management information applicable to a\n            particular VPath object.')
sdWANStatsWANClassVPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassVPathIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassVPathIndex.setDescription('The unique index (VPath) value for the VPath Class.')
sdWANStatsWANClassClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassClassIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassClassIndex.setDescription('The unique index (Class) value for the VPath Class.')
sdWANStatsWANClassVPathID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassVPathID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassVPathID.setDescription('The internal Citrix ID for the VPath object.')
sdWANStatsWANClassClassID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassClassID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassClassID.setDescription('The internal Citrix ID for the Class object.')
sdWANStatsWANClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassName.setDescription('The name for the VPath Class.')
sdWANStatsWANClassType = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("realtime", 1), ("interactive", 2), ("bulk", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassType.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassType.setDescription('The name for the VPath Class.')
sdWANStatsWANClassBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassBytesSent.setDescription('The count of bytes sent for this VPath Class.')
sdWANStatsWANClassPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassPacketsSent.setDescription('The count of packets sent for this VPath Class.')
sdWANStatsWANClassBytesPending = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassBytesPending.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassBytesPending.setDescription('The count of bytes pending for this VPath Class.')
sdWANStatsWANClassPacketsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassPacketsPending.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassPacketsPending.setDescription('The count of packets pending for this VPath Class.')
sdWANStatsWANClassBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassBytesDropped.setDescription('The count of bytes dropped for this VPath Class.')
sdWANStatsWANClassPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 4, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANClassPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANClassPacketsDropped.setDescription('The count of packets dropped for this VPath Class.')
sdWANStatsWANRules = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5))
sdWANStatsWANRuleTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1), )
if mibBuilder.loadTexts: sdWANStatsWANRuleTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleTable.setDescription('A collection of statistics for VPath Rule objects.\n            Contains statistics counts for all the VPath Rules in\n            the system.  Counter data in this table is updated once a\n            minute and is a cumulative count since the last time the\n            NetScaler SD-WAN service was started.  The number of virtual paths in\n            this table is stored in sdWANStatsNumVPaths and the number\n            of Rules for each virtual path is in the variable\n            sdWANStatsVPathNumRules which is in the sdWANStatsVPathTable\n            and has a specific number of rules value for each virtual path\n            index.')
sdWANStatsWANRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsWANRuleVPathIndex"), (0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsWANRuleRuleIndex"))
if mibBuilder.loadTexts: sdWANStatsWANRuleEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleEntry.setDescription('An entry containing management information applicable to a\n            particular VPath object.')
sdWANStatsWANRuleVPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleVPathIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleVPathIndex.setDescription('The unique index (VPath) value for the VPath Rule.')
sdWANStatsWANRuleRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleRuleIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleRuleIndex.setDescription('The unique index (Rule) value for the VPath Rule.')
sdWANStatsWANRuleVPathID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleVPathID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleVPathID.setDescription('The unique Citrix ID (VPath) value for the VPath Rule.')
sdWANStatsWANRuleRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleRuleID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleRuleID.setDescription('The unique Citrix ID (Rule) value for the VPath Rule.')
sdWANStatsWANRuleGlobalRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleGlobalRuleIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleGlobalRuleIndex.setDescription('The index of this rule in the sdWANStatsRuleTable.')
sdWANStatsWANRuleApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleApplicationName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleApplicationName.setDescription('The optional string application name associated\n            with this rule.')
sdWANStatsWANRuleLANToWANHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleLANToWANHitCount.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleLANToWANHitCount.setDescription('The count of the number of times this rule has\n            been hit for in the LAN to WAN direction, measured over\n            the past active minute.')
sdWANStatsWANRuleWANToLANHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleWANToLANHitCount.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleWANToLANHitCount.setDescription('The count of the number of times this rule has\n            been hit for in the WAN to LAN direction, measured over\n            the past active minute.')
sdWANStatsWANRuleBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleBytesSent.setDescription('The count of the number of bytes sent for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsWANRulePacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRulePacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRulePacketsSent.setDescription('The count of the number of packets sent for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsWANRuleBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleBytesReceived.setDescription('The count of the number of bytes received for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsWANRulePacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRulePacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRulePacketsReceived.setDescription('The count of the number of packets received for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsWANRuleBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleBytesDropped.setDescription('The count of the number of bytes dropped for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsWANRulePacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRulePacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRulePacketsDropped.setDescription('The count of the number of packets dropped for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsWANRuleLastActiveNMinuteAgo = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 16, 5, 1, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsWANRuleLastActiveNMinuteAgo.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsWANRuleLastActiveNMinuteAgo.setDescription('This rule was hit last N Minutes ago.\n            If this field value is 0 and either sdWANStatsWANRuleBytesSent\n            or sdWANStatsWANRuleBytesReceived is not zero, then that means\n            that this rule is currently being used.  The rule\n            statistics contain the latest values.\n            If this field is > 0, then the rule statistics is\n            plateaued to show that this rule was used N minutes ago.')
sdWANStatsInternet = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17))
sdWANStatsInternetScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 1))
sdWANStatsInternetBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetBytesSent.setDescription('The count of the bytes sent on this Internet service.')
sdWANStatsInternetPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetPacketsSent.setDescription('The count of the packets sent on this Internet service.')
sdWANStatsInternetBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetBytesReceived.setDescription('The count of the bytes received on this Internet service.')
sdWANStatsInternetPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetPacketsReceived.setDescription('The count of the packets received on this Internet service.')
sdWANStatsInternetBytesDropped = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetBytesDropped.setDescription('The count of the bytes dropped on this Internet service.')
sdWANStatsInternetPacketsDropped = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetPacketsDropped.setDescription('The count of the packets dropped on this Internet service.')
sdWANStatsInternetNumRules = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetNumRules.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetNumRules.setDescription('The number of Rules associated with the Internet service.')
sdWANStatsInternetRuleTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2), )
if mibBuilder.loadTexts: sdWANStatsInternetRuleTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleTable.setDescription('A collection of statistics for Rules associated with\n            the Internet service.\n            Counter data in this table is updated once a minute\n            and is a cumulative count since the last time the\n            NetScaler SD-WAN service was started.\n            The number of rules in this table is sdWANStatsInternetNumRules\n            and there is an entry for each of them.')
sdWANStatsInternetRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsInternetRuleIndex"))
if mibBuilder.loadTexts: sdWANStatsInternetRuleEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleEntry.setDescription('An entry containing management information applicable to a\n            particular InternetRule object.')
sdWANStatsInternetRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRuleIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleIndex.setDescription('The unique index value for the InternetRule.')
sdWANStatsInternetRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRuleID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleID.setDescription('The unique Citrix ID for the InternetRule.')
sdWANStatsInternetRuleGlobalRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRuleGlobalRuleIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleGlobalRuleIndex.setDescription('The index of this rule in the sdWANStatsRuleTable.')
sdWANStatsInternetRuleApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRuleApplicationName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleApplicationName.setDescription('The optional string application name associated\n            with this rule.')
sdWANStatsInternetRuleLANToWANHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRuleLANToWANHitCount.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleLANToWANHitCount.setDescription('The count of LAN to WAN packets that hit this rule,\n            measured over the past active minute.')
sdWANStatsInternetRuleWANToLANHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRuleWANToLANHitCount.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleWANToLANHitCount.setDescription('The count of WAN to LAN packets that hit this rule,\n            measured over the past active minute.')
sdWANStatsInternetRuleBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRuleBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleBytesSent.setDescription('The count of the number of bytes sent for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsInternetRulePacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRulePacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRulePacketsSent.setDescription('The count of the number of bytes received for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsInternetRuleBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRuleBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleBytesReceived.setDescription('The count of the number of packets sent for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsInternetRulePacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRulePacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRulePacketsReceived.setDescription('The count of the number of packets received for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsInternetRuleBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRuleBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleBytesDropped.setDescription('The count of the number of bytes dropped for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsInternetRulePacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRulePacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRulePacketsDropped.setDescription('The count of the number of packets dropped for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsInternetRuleLastActiveNMinuteAgo = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 17, 2, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsInternetRuleLastActiveNMinuteAgo.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsInternetRuleLastActiveNMinuteAgo.setDescription('This rule was hit last N Minutes ago.\n            If this field value is 0 and either sdWANStatsInternetRuleBytesSent\n            or sdWANStatsInternetRuleBytesReceived is not zero, then that means\n            that this rule is currently being used.  The rule\n            statistics contain the latest values.\n            If this field is > 0, then the rule statistics is\n            plateaued to show that this rule was used N minutes ago.')
sdWANStatsIntranet = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18))
sdWANStatsIntranetScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 1))
sdWANStatsIntranetNumIntranetServices = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetNumIntranetServices.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetNumIntranetServices.setDescription('The number of Intranet Services on this site.')
sdWANStatsIntranetsTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3), )
if mibBuilder.loadTexts: sdWANStatsIntranetsTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsTable.setDescription('A collection of statistics for the Intranet\n            services on this site.\n            Counter data in this table is updated once a minute\n            and is a cumulative count since the last time the\n            NetScaler SD-WAN service was started.')
sdWANStatsIntranetsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsIntranetsIndex"))
if mibBuilder.loadTexts: sdWANStatsIntranetsEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsEntry.setDescription('An entry containing management information applicable to a\n            particular Intranets object.')
sdWANStatsIntranetsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetsIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsIndex.setDescription('The intranet index.')
sdWANStatsIntranetsID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetsID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsID.setDescription('The intranet id.')
sdWANStatsIntranetsName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetsName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsName.setDescription('The intranet name.')
sdWANStatsIntranetsBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetsBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsBytesSent.setDescription('The count of the bytes sent on this intranet service.')
sdWANStatsIntranetsPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetsPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsPacketsSent.setDescription('The count of the packets sent on this intranet service.')
sdWANStatsIntranetsBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetsBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsBytesReceived.setDescription('The count of the bytes received on this intranet service.')
sdWANStatsIntranetsPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetsPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsPacketsReceived.setDescription('The count of packets received on this intranet service.')
sdWANStatsIntranetsBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetsBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsBytesDropped.setDescription('The number of bytes dropped on this intranet service.')
sdWANStatsIntranetsPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetsPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsPacketsDropped.setDescription('The number of packets dropped on this intranet service.')
sdWANStatsIntranetsNumRules = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetsNumRules.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsNumRules.setDescription('The number of rules associated with this specific Intranet\n            service.')
sdWANStatsIntranetsRoutingDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetsRoutingDomainName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetsRoutingDomainName.setDescription('The routing domain name. Each routing domain has\n            its own set of interfaces and routing tables.')
sdWANStatsIntranetRulesTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4), )
if mibBuilder.loadTexts: sdWANStatsIntranetRulesTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesTable.setDescription('A collection of statistics for Rules associated with\n            the Intranet service.\n            Counter data in this table is updated once a minute\n            and is a cumulative count since the last time the\n            NetScaler SD-WAN service was started.\n            The number of rules in this table is sdWANStatsIntranetNumRules\n            and there is an entry for each of them.')
sdWANStatsIntranetRulesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsIntranetRulesIntranetIndex"), (0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsIntranetRulesRuleIndex"))
if mibBuilder.loadTexts: sdWANStatsIntranetRulesEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesEntry.setDescription('An entry containing management information applicable to a\n            particular IntranetRules object.')
sdWANStatsIntranetRulesIntranetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesIntranetIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesIntranetIndex.setDescription('The unique index value for the Intranet service.')
sdWANStatsIntranetRulesRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesRuleIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesRuleIndex.setDescription('The unique index value for the Rule corresponding to\n            the current Intranet service in the IntranetRules.')
sdWANStatsIntranetRulesID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesID.setDescription('The unique Citrix ID for this Rule in the IntranetRules.')
sdWANStatsIntranetRulesGlobalRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesGlobalRuleIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesGlobalRuleIndex.setDescription('The index of this rule in the sdWANStatsRuleTable.')
sdWANStatsIntranetRulesIntranetName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesIntranetName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesIntranetName.setDescription('The optional string name associated with this\n            Intranet service.')
sdWANStatsIntranetRulesApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesApplicationName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesApplicationName.setDescription('The optional string application name associated\n            with this rule.')
sdWANStatsIntranetRulesLANToWANHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesLANToWANHitCount.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesLANToWANHitCount.setDescription('The count of LAN to WAN packets that hit this rule,\n            measured over the past active minute.')
sdWANStatsIntranetRulesWANToLANHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesWANToLANHitCount.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesWANToLANHitCount.setDescription('The count of WAN to LAN packets that hit this rule,\n            measured over the past active minute.')
sdWANStatsIntranetRulesBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesBytesSent.setDescription('The count of the number of bytes sent for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsIntranetRulesPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesPacketsSent.setDescription('The count of the number of bytes received for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsIntranetRulesBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesBytesReceived.setDescription('The count of the number of packets sent for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsIntranetRulesPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesPacketsReceived.setDescription('The count of the number of packets received for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsIntranetRulesBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesBytesDropped.setDescription('The count of the number of bytes dropped for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsIntranetRulesPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesPacketsDropped.setDescription('The count of the number of packets dropped for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsIntranetRulesLastActiveNMinuteAgo = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 18, 4, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsIntranetRulesLastActiveNMinuteAgo.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsIntranetRulesLastActiveNMinuteAgo.setDescription('This rule was hit last N Minutes ago.\n            If this field value is 0 and either sdWANStatsIntranetRulesBytesSent\n            or sdWANStatsIntranetRulesBytesReceived is not zero, then that means\n            that this rule is currently being used.  The rule\n            statistics contain the latest values.\n            If this field is > 0, then the rule statistics is\n            plateaued to show that this rule was used N minutes ago.')
sdWANStatsPassthrough = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 19))
sdWANStatsPassthroughScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 19, 1))
sdWANStatsPassthroughBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 19, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsPassthroughBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsPassthroughBytesSent.setDescription('The count of the bytes sent on this Passthrough service.')
sdWANStatsPassthroughPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 19, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsPassthroughPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsPassthroughPacketsSent.setDescription('The count of the packets sent on this Passthrough service.')
sdWANStatsPassthroughBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 19, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsPassthroughBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsPassthroughBytesReceived.setDescription('The count of the bytes received on this Passthrough service.')
sdWANStatsPassthroughPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 19, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsPassthroughPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsPassthroughPacketsReceived.setDescription('The count of the packets received on this Passthrough service.')
sdWANStatsPassthroughBytesDropped = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 19, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsPassthroughBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsPassthroughBytesDropped.setDescription('The count of the bytes dropped on this Passthrough service.')
sdWANStatsPassthroughPacketsDropped = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 19, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsPassthroughPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsPassthroughPacketsDropped.setDescription('The count of the packets dropped on this Passthrough service.')
sdWANStatsRoutesV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20))
sdWANStatsRouteScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 1))
sdWANStatsNumRoutesV2 = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsNumRoutesV2.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsNumRoutesV2.setDescription('The total number of routes in the system.')
sdWANStatsRouteTableV2 = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2), )
if mibBuilder.loadTexts: sdWANStatsRouteTableV2.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteTableV2.setDescription('A collection of statistics for route objects.\n            Contains statistics counts for all the routes in\n            the system.  Counter data in this table is updated once a\n            minute and is a cumulative count since the last time the\n            NetScaler SD-WAN service was started.')
sdWANStatsRouteEntryV2 = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsRouteIndexV2"))
if mibBuilder.loadTexts: sdWANStatsRouteEntryV2.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteEntryV2.setDescription('An entry containing management information applicable to a\n            particular route object.')
sdWANStatsRouteIndexV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteIndexV2.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteIndexV2.setDescription('The unique index value for the route.')
sdWANStatsRouteNetworkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteNetworkAddr.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteNetworkAddr.setDescription('This is the destination IP Address.')
sdWANStatsRouteNetworkPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteNetworkPrefix.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteNetworkPrefix.setDescription('Network Prefix indicate number of significant\n            bits in the NetworkAddr field.')
sdWANStatsRouteGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteGateway.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteGateway.setDescription('The Gateway IP Address for Route.')
sdWANStatsRouteServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("discard", 0), ("passthrough", 1), ("internet", 2), ("multicast", 3), ("intranet", 4), ("virtualpath", 5), ("langretunnel", 6), ("lanipsectunnel", 7), ("local", 8), ("iphost", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteServiceType.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteServiceType.setDescription('Service Type for Route.')
sdWANStatsRouteServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteServiceID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteServiceID.setDescription('The unique Citrix ID for the Service ID.\n            meaningful for service type virtual path and intranet.')
sdWANStatsRouteServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteServiceName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteServiceName.setDescription('Service Name in meaning format.')
sdWANStatsRouteReachable = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("na", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteReachable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteReachable.setDescription('Indicate whether route is reachable.')
sdWANStatsRouteSiteName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteSiteName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteSiteName.setDescription('Destination NetScaler SD-WAN Site Name for VPath Routes.')
sdWANStatsRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("static", 0), ("dynamic", 1), ("dynamicVPath", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteType.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteType.setDescription('Indicate whether route is static, dynamic, or\n            part of dynamic virtual path route.')
sdWANStatsRouteNeighborDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("na", 0), ("directNeighbor", 1), ("indirectNeighbor", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteNeighborDirect.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteNeighborDirect.setDescription("If route is learned from another NetScaler SD-WAN Site, route\n            is neighbor's direct route.  Otherwise, neighbor\n            learned route from its neighbor.  Field is\n            only applicable for dynamic routes.")
sdWANStatsRouteCost = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteCost.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteCost.setDescription('Route Cost.')
sdWANStatsRouteHitCountV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteHitCountV2.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteHitCountV2.setDescription('The count of the number of packets that have hit this route.')
sdWANStatsRouteEligible = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteEligible.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteEligible.setDescription('When eligiblility type and eligibility\n             and value are specified for this route, this route is\n             only available for use when the conditions specified is\n             up.  If eligibility fields are not specified, then this\n             route is always eligible.')
sdWANStatsRouteEligibilityType = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteEligibilityType.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteEligibilityType.setDescription('Use route only when either a specified path or gateway\n             or both are available.')
sdWANStatsRouteEligibilityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteEligibilityValue.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteEligibilityValue.setDescription('Either the name of the path or gateway IP or both.')
sdWANStatsRouteProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("NA", 0), ("BGP", 1), ("OSPF", 2), ("VW", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteProtocol.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteProtocol.setDescription('The Routing Protocol.')
sdWANStatsRouteRoutingDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 20, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsRouteRoutingDomainName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsRouteRoutingDomainName.setDescription('The routing domain name. Each routing domain has\n            its own set of interfaces and routing tables.')
sdWANStatsDynamicVPaths = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21))
sdWANStatsDynamicVPathScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 1))
sdWANStatsNumDynamicVPaths = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsNumDynamicVPaths.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsNumDynamicVPaths.setDescription('The total number of Dynamic VPaths.')
sdWANStatsDynamicVPathTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2), )
if mibBuilder.loadTexts: sdWANStatsDynamicVPathTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathTable.setDescription('A collection of statistics for Dynamic VPath objects.\n            Contains statistics counts for all the Dynamic VPaths in\n            the system.  Counter data in this table is updated once a\n            minute and is a cumulative count since the last time the\n            NetScaler SD-WAN service was started.  Dynamic VPaths can be added\n            and removed.')
sdWANStatsDynamicVPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsDynamicVPathIndex"))
if mibBuilder.loadTexts: sdWANStatsDynamicVPathEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathEntry.setDescription('An entry containing management information applicable to a\n            particular Dynamic VPath object.')
sdWANStatsDynamicVPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathIndex.setDescription('The unique index value for the Dynamic VPath.')
sdWANStatsDynamicVPathID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathID.setDescription('The unique Citrix ID for the Dynamic VPath.')
sdWANStatsDynamicVPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathName.setDescription('The name for the Dynamic VPath.')
sdWANStatsDynamicVPathState = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("disabled", 1), ("dead", 2), ("bad", 3), ("good", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathState.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathState.setDescription('The current operational state of the dynamic virtual path.')
sdWANStatsDynamicVPathTimeSinceCreation = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathTimeSinceCreation.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathTimeSinceCreation.setDescription('Number of seconds since the dynamic virtual path has been created.')
sdWANStatsDynamicVPathBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathBytesSent.setDescription('The count of bytes sent for this Dynamic VPath.')
sdWANStatsDynamicVPathPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathPacketsSent.setDescription('The count of packets sent for this Dynamic VPath.')
sdWANStatsDynamicVPathSendBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendBytesDropped.setDescription('The count of send bytes dropped for this Dynamic VPath.')
sdWANStatsDynamicVPathSendPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendPacketsDropped.setDescription('The count of send packets dropped for this Dynamic VPath.')
sdWANStatsDynamicVPathSendPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendPacketsLost.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendPacketsLost.setDescription('The current total number of send packets lost for this\n            Dynamic VPath.')
sdWANStatsDynamicVPathSendPacketsOOO = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendPacketsOOO.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendPacketsOOO.setDescription('The current total number of send packets received out\n             of order by the remote on this Dynamic VPath.')
sdWANStatsDynamicVPathSendBOWTms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendBOWTms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendBOWTms.setDescription('The current best one-way time (BOWT) value (in milliseconds)\n            in the send direction for this Dynamic VPath.')
sdWANStatsDynamicVPathSendJitterms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendJitterms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathSendJitterms.setDescription('The current worst jitter value (in milliseconds) in the send\n            direction for this Dynamic VPath.')
sdWANStatsDynamicVPathBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathBytesReceived.setDescription('The count of bytes received for this Dynamic VPath.')
sdWANStatsDynamicVPathPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathPacketsReceived.setDescription('The count of packets received for this Dynamic VPath.')
sdWANStatsDynamicVPathReceiveBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceiveBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceiveBytesDropped.setDescription('The count of receive bytes dropped for this Dynamic VPath.')
sdWANStatsDynamicVPathReceivePacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceivePacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceivePacketsDropped.setDescription('The count of receive packets dropped for this Dynamic VPath.')
sdWANStatsDynamicVPathReceivePacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceivePacketsLost.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceivePacketsLost.setDescription('The current total number of receive packets lost for this\n            Dynamic VPath.')
sdWANStatsDynamicVPathReceivePacketsOOO = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceivePacketsOOO.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceivePacketsOOO.setDescription('The current total number of received packets out\n             of order on this Dynamic VPath.')
sdWANStatsDynamicVPathReceiveBOWTms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceiveBOWTms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceiveBOWTms.setDescription('The current best one-way time (BOWT) value (in milliseconds)\n            in the receive direction for this Dynamic VPath.')
sdWANStatsDynamicVPathReceiveJitterms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceiveJitterms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathReceiveJitterms.setDescription('The current worst jitter value (in milliseconds) in the\n            receive direction for this Dynamic VPath.')
sdWANStatsDynamicVPathNumPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathNumPaths.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathNumPaths.setDescription('The number of Paths associated with this virtual path - this\n            is the number of rows in the sdWANStatsDynamicWANPathsTable for\n            the current virtual path.  Each dynamic virtual path can have a different\n            number of paths associated with it.')
sdWANStatsDynamicVPathNumRules = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicVPathNumRules.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicVPathNumRules.setDescription('The number of Rules associated with this virtual path - this\n            is the number of rows in the sdWANStatsDynamicWANRulesTable for\n            the current virtual path.  Each dynamic virtual path can have a different\n            number of rules associated with it.')
sdWANStatsDynamicWANPaths = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3))
sdWANStatsDynamicWANPathTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1), )
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathTable.setDescription('A collection of statistics for Dynamic VPath Path objects.\n            Contains statistics counts for all the Dynamic VPath Paths in\n            the system.  Counter data in this table is updated once a\n            minute and is a cumulative count since the time the\n            VPath was added.  The number of virtual path in\n            this table is stored in sdWANStatsDynamicNumVPaths and the number\n            of Paths for each dynamic virtual path is in the variable\n            sdWANStatsDynamicVPathNumPaths which is in the sdWANStatsDynamicVPathTable\n            and has a specific number of paths value for each dynamic virtual path\n            index.')
sdWANStatsDynamicWANPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsDynamicWANPathVPathIndex"), (0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsDynamicWANPathPathIndex"))
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathEntry.setDescription('An entry containing management information applicable to a\n            particular Dynamic VPath object.')
sdWANStatsDynamicWANPathVPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathVPathIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathVPathIndex.setDescription('The unique index (VPath) value for the Dynamic VPath Path.')
sdWANStatsDynamicWANPathPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPathIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPathIndex.setDescription('The unique index (Path) value for the Dynamic VPath Path.')
sdWANStatsDynamicWANPathVPathID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathVPathID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathVPathID.setDescription('The unique Citrix ID (VPath) value for the Dynamic VPath Path.')
sdWANStatsDynamicWANPathPathID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPathID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPathID.setDescription('The unique Citrix ID (Path) value for the Dynamic VPath Path.')
sdWANStatsDynamicWANPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathName.setDescription('The name for the Dynamic VPath Path.')
sdWANStatsDynamicWANPathState = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("disabled", 1), ("dead", 2), ("bad", 3), ("good", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathState.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathState.setDescription('The current operational state of the dynamic virtual path path.')
sdWANStatsDynamicWANPathBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathBytesSent.setDescription('The count of bytes sent for this Dynamic VPath Path.')
sdWANStatsDynamicWANPathPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPacketsSent.setDescription('The count of packets sent for this Dynamic VPath Path.')
sdWANStatsDynamicWANPathBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathBytesReceived.setDescription('The count of bytes received for this Dynamic VPath Path.')
sdWANStatsDynamicWANPathPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPacketsReceived.setDescription('The count of packets received for this Dynamic VPath Path.')
sdWANStatsDynamicWANPathBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathBytesDropped.setDescription('The count of bytes dropped for this Dynamic VPath Path.')
sdWANStatsDynamicWANPathPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPacketsDropped.setDescription('The count of packets dropped for this Dynamic VPath Path.')
sdWANStatsDynamicWANPathBOWTms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathBOWTms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathBOWTms.setDescription('The current best one-way time (BOWT) value (in milliseconds)\n            value for this Dynamic VPath Path.')
sdWANStatsDynamicWANPathJitterms = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathJitterms.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathJitterms.setDescription('The current best jitter value (in milliseconds) for this\n            Dynamic VPath Path.')
sdWANStatsDynamicWANPathPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPacketsLost.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPacketsLost.setDescription('The current total number of packets lost for this\n            Dynamic VPath Path.')
sdWANStatsDynamicWANPathPacketsOOO = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 3, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPacketsOOO.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANPathPacketsOOO.setDescription('The current total number of out of order\n             packets detected on this Dynamic VPath Path.')
sdWANStatsDynamicWANClasses = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4))
sdWANStatsDynamicWANClassTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1), )
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassTable.setDescription('A collection of statistics for Dynamic VPath Class objects.\n            Contains statistics counts for all the Dynamic VPath\n            Classes in the system.  Counter data in this table is\n            updated once a minute and is a cumulative count since the\n            virtual path has been added.  The number of virtual path in\n            this table is stored in sdWANStatsNumDynamicVPaths and the number\n            of Classes for each virtual path is always 17.')
sdWANStatsDynamicWANClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsDynamicWANClassVPathIndex"), (0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsDynamicWANClassClassIndex"))
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassEntry.setDescription('An entry containing management information applicable to a\n            particular Dynamic VPath object.')
sdWANStatsDynamicWANClassVPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassVPathIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassVPathIndex.setDescription('The unique index (VPath) value for the Dynamic VPath Class.')
sdWANStatsDynamicWANClassClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassClassIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassClassIndex.setDescription('The unique index (Class) value for the Dynamic VPath Class.')
sdWANStatsDynamicWANClassVPathID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassVPathID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassVPathID.setDescription('The internal Citrix ID for the Dynamic VPath object.')
sdWANStatsDynamicWANClassClassID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassClassID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassClassID.setDescription('The internal Citrix ID for the Dynamic VPath Class object.')
sdWANStatsDynamicWANClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassName.setDescription('The name for the Dynamic VPath Class.')
sdWANStatsDynamicWANClassType = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("realtime", 1), ("interactive", 2), ("bulk", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassType.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassType.setDescription('The type of the Dynamic VPath Class.')
sdWANStatsDynamicWANClassBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassBytesSent.setDescription('The count of bytes sent for this Dynamic VPath Class.')
sdWANStatsDynamicWANClassPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassPacketsSent.setDescription('The count of packets sent for this Dynamic VPath Class.')
sdWANStatsDynamicWANClassBytesPending = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassBytesPending.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassBytesPending.setDescription('The count of bytes pending for this Dynamic VPath Class.')
sdWANStatsDynamicWANClassPacketsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassPacketsPending.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassPacketsPending.setDescription('The count of packets pending for this Dynamic VPath Class.')
sdWANStatsDynamicWANClassBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassBytesDropped.setDescription('The count of bytes dropped for this Dynamic VPath Class.')
sdWANStatsDynamicWANClassPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 4, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANClassPacketsDropped.setDescription('The count of packets dropped for this Dynamic VPath Class.')
sdWANStatsDynamicWANRules = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5))
sdWANStatsDynamicWANRuleTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1), )
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleTable.setDescription('A collection of statistics for Dynamic VPath Rule objects.\n            Contains statistics counts for all the Dynamic VPath Rules in\n            the system.  Counter data in this table is updated once a\n            minute and is a cumulative count since the time that the\n            virtual path has been added.  The number of virtual paths in this table\n            is stored in sdWANStatsNumDynamicVPaths and the number of Rules\n            for each virtual path is in the variable sdWANStatsDynamicVPathNumRules\n            which is in the sdWANStatsDynamicVPathTable\n            and has a specific number of rules value for each virtual path\n            index.')
sdWANStatsDynamicWANRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsDynamicWANRuleVPathIndex"), (0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsDynamicWANRuleRuleIndex"))
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleEntry.setDescription('An entry containing management information applicable to a\n            particular Dynamic VPath object.')
sdWANStatsDynamicWANRuleVPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleVPathIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleVPathIndex.setDescription('The unique index (VPath) value for the Dynamic VPath Rule.')
sdWANStatsDynamicWANRuleRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleRuleIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleRuleIndex.setDescription('The unique index (Rule) value for the Dynamic VPath Rule.')
sdWANStatsDynamicWANRuleVPathID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleVPathID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleVPathID.setDescription('The unique Citrix ID (VPath) value for the Dynamic VPath Rule.')
sdWANStatsDynamicWANRuleRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleRuleID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleRuleID.setDescription('The unique Citrix ID (Rule) value for the Dynamic VPath Rule.')
sdWANStatsDynamicWANRuleGlobalRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleGlobalRuleIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleGlobalRuleIndex.setDescription('The index of this rule in the sdWANStatsRuleTable.')
sdWANStatsDynamicWANRuleApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleApplicationName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleApplicationName.setDescription('The optional string application name associated\n            with this dynamic virtual path rule.')
sdWANStatsDynamicWANRuleLANToWANHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleLANToWANHitCount.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleLANToWANHitCount.setDescription('The count of the number of times this rule has\n            been hit for in the LAN to WAN direction, measured over\n            the past active minute.')
sdWANStatsDynamicWANRuleWANToLANHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleWANToLANHitCount.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleWANToLANHitCount.setDescription('The count of the number of times this rule has\n            been hit for in the WAN to LAN direction, measured over\n            the past active minute.')
sdWANStatsDynamicWANRuleBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleBytesSent.setDescription('The count of the number of bytes sent for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsDynamicWANRulePacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRulePacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRulePacketsSent.setDescription('The count of the number of bytes received for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsDynamicWANRuleBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleBytesReceived.setDescription('The count of the number of packets sent for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsDynamicWANRulePacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRulePacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRulePacketsReceived.setDescription('The count of the number of packets received for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsDynamicWANRuleBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleBytesDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleBytesDropped.setDescription('The count of the number of bytes dropped for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsDynamicWANRulePacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRulePacketsDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRulePacketsDropped.setDescription('The count of the number of packets dropped for packets that\n            matched this rule, measured over the past active minute.')
sdWANStatsDynamicWANRuleLastActiveNMinuteAgo = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 21, 5, 1, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleLastActiveNMinuteAgo.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsDynamicWANRuleLastActiveNMinuteAgo.setDescription('This rule was hit last N Minutes ago.\n            If this field value is 0 and either sdWANStatsDynamicWANRuleBytesSent\n            or sdWANStatsDynamicWANRuleBytesReceived is not zero, then that means\n            that this rule is currently being used.  The rule\n            statistics contain the latest values.\n            If this field is > 0, then the rule statistics is\n            plateaued to show that this rule was used N minutes ago.')
sdWANStatsArp = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22))
sdWANStatsArpScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 1))
sdWANStatsNumArpEntries = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsNumArpEntries.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsNumArpEntries.setDescription('The total number of Arp entries.')
sdWANStatsArpTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 2), )
if mibBuilder.loadTexts: sdWANStatsArpTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsArpTable.setDescription('A collection of statistics for Arp entry objects.\n            Contains statistics counts for all the Arp entries in\n            the system. Counter data in this table is updated once a\n            minute.')
sdWANStatsArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 2, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsArpID"))
if mibBuilder.loadTexts: sdWANStatsArpEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsArpEntry.setDescription('An entry containing all the information for a ARP entry object.')
sdWANStatsArpID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsArpID.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsArpID.setDescription('The unique Citrix Index value for the Arp\n            entry.')
sdWANStatsArpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsArpIfIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsArpIfIndex.setDescription('The interface name corresponding to the Arp entry. This is the\n            name shown on the front panel of the appliance and\n            used in the user interfaces (Web and CLI).')
sdWANStatsArpVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsArpVlanTag.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsArpVlanTag.setDescription('The VLAN ID associated with the Arp entry.')
sdWANStatsArpIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsArpIpAddr.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsArpIpAddr.setDescription('The IP address mapping for the physical address.')
sdWANStatsArpPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 2, 1, 5), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsArpPhysAddr.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsArpPhysAddr.setDescription("The destination MAC address in a frame to which\n        this entry's filtering information applies.")
sdWANStatsArpState = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsArpState.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsArpState.setDescription('The state of the Arp entry.')
sdWANStatsArpType = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsArpType.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsArpType.setDescription('The type of Arp entry describes whether it is persistent or end-user. ')
sdWANStatsArpReplyAgeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 22, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsArpReplyAgeMs.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsArpReplyAgeMs.setDescription('The age of arp reply we received in milliseconds.')
sdWANStatsLanGRETunnels = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23))
sdWANStatsLanGRETunnelScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 1))
sdWANStatsNumLanGRETunnels = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsNumLanGRETunnels.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsNumLanGRETunnels.setDescription('The total number of LAN-side GRE Tunnels.')
sdWANStatsLanGRETunnelTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2), )
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelTable.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelTable.setDescription('A collection of statistics for LAN-side GRE tunnel objects.\n            Contains statistics counts and state for all the LAN-side GRE\n            tunnels in the system.  Counter data in this table is updated\n            once a minute and is a cumulative count since the last time\n            the NetScaler SD-WAN service was started.')
sdWANStatsLanGRETunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANStatsLanGRETunnelIndex"))
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelEntry.setDescription('An entry containing management information applicable to a\n            particular LAN-side GRE tunnel object.')
sdWANStatsLanGRETunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelIndex.setDescription('The unique Citrix Index value for the LAN-side\n            GRE tunnel.')
sdWANStatsLanGRETunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelName.setDescription('The name for the LAN-side GRE tunnel.  This is the\n            tunnel IP adddress of the configured tunnel.')
sdWANStatsLanGRETunnelState = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelState.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelState.setDescription('The state of the LAN-side GRE tunnel.  This can\n            be up or down.')
sdWANStatsLanGRETunnelKeepaliveRequestSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelKeepaliveRequestSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelKeepaliveRequestSent.setDescription('The count of keepalive request packets sent for this\n            LAN-side GRE tunnel.')
sdWANStatsLanGRETunnelKeepaliveReplyReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelKeepaliveReplyReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelKeepaliveReplyReceived.setDescription('The count of keepalive reply packets received for this\n            LAN-side GRE tunnel.')
sdWANStatsLanGRETunnelKeepaliveReplySent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelKeepaliveReplySent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelKeepaliveReplySent.setDescription('The count of keepalive reply packets sent for this\n            LAN-side GRE tunnel.')
sdWANStatsLanGRETunnelPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelPacketsSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelPacketsSent.setDescription('The count of packets sent for this LAN-side\n            GRE tunnel.')
sdWANStatsLanGRETunnelBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelBytesSent.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelBytesSent.setDescription('The count of bytes sent for this LAN-side\n            GRE tunnel.')
sdWANStatsLanGRETunnelPacketsSentDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelPacketsSentDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelPacketsSentDropped.setDescription('The count of packets failed to sent for this LAN-side\n            GRE tunnel.')
sdWANStatsLanGRETunnelBytesSentDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelBytesSentDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelBytesSentDropped.setDescription('The count of bytes fail to sent for this LAN-side\n            GRE tunnel.')
sdWANStatsLanGRETunnelPacketsSentFragmented = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelPacketsSentFragmented.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelPacketsSentFragmented.setDescription('The count of packets fragmented before sent for this LAN-side\n            GRE tunnel.')
sdWANStatsLanGRETunnelPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelPacketsReceived.setDescription('The count of packets received for this LAN-side\n            GRE tunnel.')
sdWANStatsLanGRETunnelBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelBytesReceived.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelBytesReceived.setDescription('The count of bytes received for this LAN-side\n            GRE tunnel.')
sdWANStatsLanGRETunnelPacketsReceivedDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelPacketsReceivedDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelPacketsReceivedDropped.setDescription('The count of packets dropped after received for this LAN-side\n            GRE tunnel.')
sdWANStatsLanGRETunnelBytesReceivedDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelBytesReceivedDropped.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelBytesReceivedDropped.setDescription('The count of bytes dropped after received for this LAN-side\n            GRE tunnel.')
sdWANStatsLanGRETunnelRoutingDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 2, 23, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelRoutingDomainName.setStatus('current')
if mibBuilder.loadTexts: sdWANStatsLanGRETunnelRoutingDomainName.setDescription('The routing domain name. Each routing domain has\n            its own set of interfaces and routing tables.')
class SdWANEventObjectTypeEnum(TextualConvention, Integer32):
    description = 'Describes an enumeration of values used to represent the\n            severity of an event generated by the NetScaler SD-WAN Appliance.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1001, 1002, 1003, 1004, 1005))
    namedValues = NamedValues(("undefined", 1), ("service", 2), ("virtualpath", 3), ("wanlink", 4), ("wanpath", 5), ("harddisk", 6), ("fan", 7), ("vwanappliance", 8), ("vwuser", 9), ("powersupply", 10), ("configupdate", 11), ("softwareupdate", 12), ("proxyarp", 13), ("ethernet", 14), ("watchdog", 15), ("dynamicvirtualpath", 16), ("lantowanpath", 17), ("wantolanpath", 18), ("appliancesettingsupdate", 19), ("discoveredmtu", 20), ("wanlinkcongestion", 21), ("usagecongestion", 22), ("gretunnel", 23), ("ipsectunnel", 24), ("vwcentersystem", 1001), ("vwcenteruser", 1002), ("vwcenterstorage", 1003), ("vwcenterdatabase", 1004), ("vwcenterconnectiontovirtualwan", 1005))

class SdWANEventSeverityEnum(TextualConvention, Integer32):
    description = 'Describes an enumeration of values used to represent the\n            severity of an event generated by the NetScaler SD-WAN Appliance.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("debug", 1), ("info", 2), ("notice", 3), ("warning", 4), ("error", 5), ("critical", 6), ("alert", 7), ("emergency", 8))

class SdWANEventStateEnum(TextualConvention, Integer32):
    description = 'Describes an enumeration of values used to represent the\n            current state of the object that generated the event or\n            trap in the NetScaler SD-WAN Appliance.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008))
    namedValues = NamedValues(("undefined", 1), ("disabled", 2), ("dead", 3), ("bad", 4), ("good", 5), ("warning", 6), ("error", 7), ("restart", 8), ("reboot", 9), ("active", 10), ("standby", 11), ("success", 12), ("failure", 13), ("enabled", 14), ("pending", 15), ("created", 16), ("removed", 17), ("systemerror", 18), ("activeha", 19), ("standbyha", 20), ("activemcn", 21), ("standbymcn", 22), ("congested", 23), ("uncongested", 24), ("iplearned", 25), ("ipreleased", 26), ("ipexpired", 27), ("ipgwnorsp", 28), ("iprcvdnak", 29), ("ipdetecteddup", 30), ("ipdhcpsnorsp", 31), ("rollback", 32), ("usage0", 33), ("usage1", 34), ("usage2", 35), ("usage3", 36), ("thresholdok", 1001), ("thresholdexceeded", 1002), ("pollingthresholdok", 1003), ("pollingthresholdexceeded", 1004), ("start", 1005), ("stop", 1006), ("mismatch", 1007), ("statserror", 1008))

sdWANEventScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 1))
sdWANNumEvents = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANNumEvents.setStatus('current')
if mibBuilder.loadTexts: sdWANNumEvents.setDescription('The current number of Events in the system.')
sdWANEventTable = MibTable((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 2), )
if mibBuilder.loadTexts: sdWANEventTable.setStatus('current')
if mibBuilder.loadTexts: sdWANEventTable.setDescription('A table containing the latest set of events that have\n            been generated by the sdWAN system.')
sdWANEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 2, 1), ).setIndexNames((0, "CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventIndex"))
if mibBuilder.loadTexts: sdWANEventEntry.setStatus('current')
if mibBuilder.loadTexts: sdWANEventEntry.setDescription('An entry containing information describing an event that\n            occurred in the system.')
sdWANEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANEventIndex.setStatus('current')
if mibBuilder.loadTexts: sdWANEventIndex.setDescription("A unique value, greater than zero, for each event.  It\n            is recommended that values are assigned contiguously\n            starting from 1.  The value for each interface sub-layer\n            must remain constant at least from one re-initialization of\n            the entity's network management system to the next re-\n            initialization.")
sdWANEventID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANEventID.setStatus('current')
if mibBuilder.loadTexts: sdWANEventID.setDescription('A unique value, used for the internal identification\n            of the event.  This ID will match the ID used in the\n            other User Interfaces.')
sdWANEventObjectID = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANEventObjectID.setStatus('current')
if mibBuilder.loadTexts: sdWANEventObjectID.setDescription('The ID of the object associated with the event.')
sdWANEventObjectName = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANEventObjectName.setStatus('current')
if mibBuilder.loadTexts: sdWANEventObjectName.setDescription('A String representing the object that generated the event.')
sdWANEventObjectType = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 2, 1, 5), SdWANEventObjectTypeEnum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANEventObjectType.setStatus('current')
if mibBuilder.loadTexts: sdWANEventObjectType.setDescription('An enumerated value representing the object type of the\n            object that generated the event.')
sdWANEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANEventTime.setStatus('current')
if mibBuilder.loadTexts: sdWANEventTime.setDescription('The localtime on the appliance as a String when the\n            event occurred.')
sdWANEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 2, 1, 7), SdWANEventStateEnum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANEventType.setStatus('current')
if mibBuilder.loadTexts: sdWANEventType.setDescription('The type of the event - basically an enumeration of\n            State transitions that can occur in the appliance that\n            will generate an event.')
sdWANEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 2, 1, 8), SdWANEventSeverityEnum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANEventSeverity.setStatus('current')
if mibBuilder.loadTexts: sdWANEventSeverity.setDescription('The severity of the event.')
sdWANEventDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANEventDescription.setStatus('current')
if mibBuilder.loadTexts: sdWANEventDescription.setDescription('A string description of the event.')
sdWANEventNotification = NotificationType((1, 3, 6, 1, 4, 1, 3845, 31, 4, 3, 1)).setObjects(("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventIndex"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventID"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventObjectID"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventObjectName"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventObjectType"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventTime"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventType"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventSeverity"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventDescription"))
if mibBuilder.loadTexts: sdWANEventNotification.setStatus('current')
if mibBuilder.loadTexts: sdWANEventNotification.setDescription('Trap sent when an event occurs in a NetScaler SD-WAN appliance.\n            These events can be from any of several sdWANEventObjectType\n            object types in the system, and can represent a state\n            transition or error condition in the sdWANEventType.')
sdWANNetworkEventNotification = NotificationType((1, 3, 6, 1, 4, 1, 3845, 31, 4, 3, 2)).setObjects(("CITRIX-NetScaler-SD-WAN-MIB", "sdWANNetworkEventSiteName"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventID"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventObjectID"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventObjectName"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventObjectType"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventTime"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventType"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventSeverity"), ("CITRIX-NetScaler-SD-WAN-MIB", "sdWANEventDescription"))
if mibBuilder.loadTexts: sdWANNetworkEventNotification.setStatus('current')
if mibBuilder.loadTexts: sdWANNetworkEventNotification.setDescription('Trap sent from the network management/\n            monitoring system.  These\n            events can be from any of the appliances in the network\n            being managed.')
sdWANNetworkEventScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 3))
sdWANNetworkEventSiteName = MibScalar((1, 3, 6, 1, 4, 1, 3845, 31, 4, 2, 3, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdWANNetworkEventSiteName.setStatus('current')
if mibBuilder.loadTexts: sdWANNetworkEventSiteName.setDescription('A unique value, used for the identification of the\n            site that is the source of the event.')
mibBuilder.exportSymbols("CITRIX-NetScaler-SD-WAN-MIB", sdWANStatsDynamicWANRules=sdWANStatsDynamicWANRules, sdWANStatsVPathScalars=sdWANStatsVPathScalars, sdWANStatsWANRuleTable=sdWANStatsWANRuleTable, sdWANEventObjectName=sdWANEventObjectName, sdWANStatsLanGRETunnelPacketsReceivedDropped=sdWANStatsLanGRETunnelPacketsReceivedDropped, sdWANStatsArpEntry=sdWANStatsArpEntry, sdWANStatsNumArpEntries=sdWANStatsNumArpEntries, sdWANStatsArpID=sdWANStatsArpID, sdWANStatsDynamicWANClassClassIndex=sdWANStatsDynamicWANClassClassIndex, sdWANStatsRouteEligibilityType=sdWANStatsRouteEligibilityType, sdWANStatsDynamicWANClassPacketsPending=sdWANStatsDynamicWANClassPacketsPending, sdWANStatsRouteTableV2=sdWANStatsRouteTableV2, sdWANStatsDynamicVPathReceiveJitterms=sdWANStatsDynamicVPathReceiveJitterms, sdWANStatsLanGRETunnelEntry=sdWANStatsLanGRETunnelEntry, sdWANStatsArpVlanTag=sdWANStatsArpVlanTag, sdWANStatsRouteNetworkPrefix=sdWANStatsRouteNetworkPrefix, sdWANStatsWANRuleWANToLANHitCount=sdWANStatsWANRuleWANToLANHitCount, sdWANStatsDynamicWANPathPacketsReceived=sdWANStatsDynamicWANPathPacketsReceived, sdWANStatsVPathName=sdWANStatsVPathName, sdWANStatsWANLinks=sdWANStatsWANLinks, sdWANNetworkEventSiteName=sdWANNetworkEventSiteName, sdWANStatsDynamicWANRuleVPathIndex=sdWANStatsDynamicWANRuleVPathIndex, sdWANStatsWANPathTable=sdWANStatsWANPathTable, sdWANStatsWANPathJitterms=sdWANStatsWANPathJitterms, sdWANStatsInternetBytesReceived=sdWANStatsInternetBytesReceived, sdWANStatsVPathSendBytesDropped=sdWANStatsVPathSendBytesDropped, sdWANStatsIntranetsIndex=sdWANStatsIntranetsIndex, sdWANStatsAppliancePacketsReceived=sdWANStatsAppliancePacketsReceived, sdWANStatsDynamicWANClassClassID=sdWANStatsDynamicWANClassClassID, sdWANEventTable=sdWANEventTable, sdWANStatistics=sdWANStatistics, sdWANStatsWANClassPacketsDropped=sdWANStatsWANClassPacketsDropped, sdWANStatsVPathReceivePacketsLost=sdWANStatsVPathReceivePacketsLost, sdWANStatsWANClassName=sdWANStatsWANClassName, sdWANStatsWANLinkBytesDropped=sdWANStatsWANLinkBytesDropped, sdWANStatsDynamicWANClassTable=sdWANStatsDynamicWANClassTable, sdWANStatsRuleID=sdWANStatsRuleID, sdWANStatsDynamicWANRuleBytesReceived=sdWANStatsDynamicWANRuleBytesReceived, sdWANStatsEthernetInterfaceScalars=sdWANStatsEthernetInterfaceScalars, sdWANStatsApplianceBytesSent=sdWANStatsApplianceBytesSent, sdWANStatsVPathNumPaths=sdWANStatsVPathNumPaths, sdWANStatsRuleTable=sdWANStatsRuleTable, sdWANEventSeverity=sdWANEventSeverity, sdWANStatsRuleBytesDropped=sdWANStatsRuleBytesDropped, sdWANStatsVPathSendBOWTms=sdWANStatsVPathSendBOWTms, sdWANMIB=sdWANMIB, sdWANStatsRuleEntry=sdWANStatsRuleEntry, sdWANStatsInternetPacketsDropped=sdWANStatsInternetPacketsDropped, sdWANStatsWANRuleGlobalRuleIndex=sdWANStatsWANRuleGlobalRuleIndex, sdWANStatsVPathSendJitterms=sdWANStatsVPathSendJitterms, sdWANStatsDynamicWANPathJitterms=sdWANStatsDynamicWANPathJitterms, sdWANStatsDynamicWANClassBytesSent=sdWANStatsDynamicWANClassBytesSent, sdWANStatsWANRulePacketsDropped=sdWANStatsWANRulePacketsDropped, sdWANStatsDynamicWANClassEntry=sdWANStatsDynamicWANClassEntry, sdWANStatsDynamicWANPaths=sdWANStatsDynamicWANPaths, sdWANStatsRouteEligible=sdWANStatsRouteEligible, sdWANStatsAppliancePacketsDropped=sdWANStatsAppliancePacketsDropped, sdWANStatsDynamicWANPathState=sdWANStatsDynamicWANPathState, sdWANStatsWANPathVPathIndex=sdWANStatsWANPathVPathIndex, sdWANStatsRouteServiceName=sdWANStatsRouteServiceName, sdWANStatsRouteIndexV2=sdWANStatsRouteIndexV2, sdWANStatsInternetRuleLastActiveNMinuteAgo=sdWANStatsInternetRuleLastActiveNMinuteAgo, sdWANStatsApplianceHAState=sdWANStatsApplianceHAState, sdWANStatsWANRuleEntry=sdWANStatsWANRuleEntry, sdWANStatsApplianceBytesReceived=sdWANStatsApplianceBytesReceived, sdWANStatsIntranetRulesApplicationName=sdWANStatsIntranetRulesApplicationName, sdWANStatsArp=sdWANStatsArp, sdWANStatsRouteEligibilityValue=sdWANStatsRouteEligibilityValue, sdWANStatsDynamicWANRulePacketsReceived=sdWANStatsDynamicWANRulePacketsReceived, sdWANEventEntry=sdWANEventEntry, sdWANStatsPassthroughBytesReceived=sdWANStatsPassthroughBytesReceived, sdWANStatsRouteSiteName=sdWANStatsRouteSiteName, sdWANStatsDynamicWANRuleRuleID=sdWANStatsDynamicWANRuleRuleID, sdWANStatsApplianceSoftwareVersion=sdWANStatsApplianceSoftwareVersion, sdWANStatsVPathState=sdWANStatsVPathState, sdWANStatsDynamicVPathReceiveBOWTms=sdWANStatsDynamicVPathReceiveBOWTms, sdWANStatsEthernetInterfaceName=sdWANStatsEthernetInterfaceName, sdWANStatsLanGRETunnelBytesSent=sdWANStatsLanGRETunnelBytesSent, sdWANStatsDynamicVPathID=sdWANStatsDynamicVPathID, sdWANStatsRouteGateway=sdWANStatsRouteGateway, sdWANStatsApplianceBytesDropped=sdWANStatsApplianceBytesDropped, SdWANEventObjectTypeEnum=SdWANEventObjectTypeEnum, sdWANStatsRulePacketsSent=sdWANStatsRulePacketsSent, sdWANStatsInternet=sdWANStatsInternet, sdWANStatsLanGRETunnelName=sdWANStatsLanGRETunnelName, sdWANStatsRules=sdWANStatsRules, sdWANStatsWANLinkIndex=sdWANStatsWANLinkIndex, sdWANStatsInternetRuleID=sdWANStatsInternetRuleID, sdWANStatsVPathReceivePacketsDropped=sdWANStatsVPathReceivePacketsDropped, sdWANStatsDynamicVPathTable=sdWANStatsDynamicVPathTable, sdWANStatsWANClassPacketsPending=sdWANStatsWANClassPacketsPending, sdWANStatsIntranetsPacketsDropped=sdWANStatsIntranetsPacketsDropped, sdWANStatsVPaths=sdWANStatsVPaths, sdWANEventObjectID=sdWANEventObjectID, sdWANEventScalars=sdWANEventScalars, sdWANStatsLanGRETunnelPacketsSentDropped=sdWANStatsLanGRETunnelPacketsSentDropped, sdWANStatsWANLinkPacketsReceived=sdWANStatsWANLinkPacketsReceived, sdWANStatsWANClassBytesDropped=sdWANStatsWANClassBytesDropped, sdWANStatsInternetNumRules=sdWANStatsInternetNumRules, sdWANStatsDynamicWANClasses=sdWANStatsDynamicWANClasses, sdWANStatsRulePacketsDropped=sdWANStatsRulePacketsDropped, sdWANStatsWANLinkID=sdWANStatsWANLinkID, sdWANStatsVPathReceiveBytesDropped=sdWANStatsVPathReceiveBytesDropped, sdWANStatsIntranetsBytesReceived=sdWANStatsIntranetsBytesReceived, sdWANStatsIntranetNumIntranetServices=sdWANStatsIntranetNumIntranetServices, sdWANStatsVPathReceiveJitterms=sdWANStatsVPathReceiveJitterms, sdWANStatsVPathBytesSent=sdWANStatsVPathBytesSent, sdWANStatsLanGRETunnelState=sdWANStatsLanGRETunnelState, sdWANStatsDynamicWANClassType=sdWANStatsDynamicWANClassType, sdWANConfiguration=sdWANConfiguration, sdWANStatsInternetRuleTable=sdWANStatsInternetRuleTable, PYSNMP_MODULE_ID=sdWANMIB, sdWANStatsDynamicWANRuleLastActiveNMinuteAgo=sdWANStatsDynamicWANRuleLastActiveNMinuteAgo, sdWANStatsWANRules=sdWANStatsWANRules, sdWANStatsRouteReachable=sdWANStatsRouteReachable, sdWANStatsWANLinkScalars=sdWANStatsWANLinkScalars, sdWANStatsWANRuleRuleID=sdWANStatsWANRuleRuleID, sdWANStatsLanGRETunnelKeepaliveReplySent=sdWANStatsLanGRETunnelKeepaliveReplySent, sdWANStatsIntranetRulesLANToWANHitCount=sdWANStatsIntranetRulesLANToWANHitCount, sdWANStatsWANRuleRuleIndex=sdWANStatsWANRuleRuleIndex, sdWANStatsApplianceApplianceUptime=sdWANStatsApplianceApplianceUptime, sdWANStatsIntranetsTable=sdWANStatsIntranetsTable, sdWANStatsWANPathName=sdWANStatsWANPathName, sdWANStatsIntranetRulesPacketsReceived=sdWANStatsIntranetRulesPacketsReceived, sdWANStatsVPathIndex=sdWANStatsVPathIndex, sdWANStatsNumRoutesV2=sdWANStatsNumRoutesV2, sdWANStatsDynamicVPathBytesReceived=sdWANStatsDynamicVPathBytesReceived, sdWANStatsDynamicWANPathVPathID=sdWANStatsDynamicWANPathVPathID, sdWANStatsEthernetInterfaceIndex=sdWANStatsEthernetInterfaceIndex, sdWANStatsIntranetRulesBytesSent=sdWANStatsIntranetRulesBytesSent, sdWANStatsInternetRuleBytesDropped=sdWANStatsInternetRuleBytesDropped, sdWANStatsWANClassPacketsSent=sdWANStatsWANClassPacketsSent, sdWANEvents=sdWANEvents, sdWANStatsInternetPacketsSent=sdWANStatsInternetPacketsSent, sdWANStatsDynamicWANClassBytesPending=sdWANStatsDynamicWANClassBytesPending, sdWANStatsInternetPacketsReceived=sdWANStatsInternetPacketsReceived, sdWANStatsDynamicVPathName=sdWANStatsDynamicVPathName, sdWANStatsDynamicWANPathPacketsSent=sdWANStatsDynamicWANPathPacketsSent, sdWANNumEvents=sdWANNumEvents, sdWANStatsDynamicWANPathName=sdWANStatsDynamicWANPathName, sdWANStatsDynamicWANPathPacketsOOO=sdWANStatsDynamicWANPathPacketsOOO, sdWANStatsArpType=sdWANStatsArpType, sdWANStatsNumLanGRETunnels=sdWANStatsNumLanGRETunnels, sdWANStatsWANPathPathID=sdWANStatsWANPathPathID, sdWANStatsNumEthernetInterfaces=sdWANStatsNumEthernetInterfaces, sdWANStatsVPathPacketsReceived=sdWANStatsVPathPacketsReceived, sdWANStatsRuleBytesSent=sdWANStatsRuleBytesSent, sdWANEventTime=sdWANEventTime, sdWANStatsEthernetInterfacePacketsDropped=sdWANStatsEthernetInterfacePacketsDropped, sdWANEventObjectType=sdWANEventObjectType, sdWANStatsRuleWANToLANHitCount=sdWANStatsRuleWANToLANHitCount, sdWANStatsIntranetsPacketsSent=sdWANStatsIntranetsPacketsSent, sdWANStatsWANPathPacketsLost=sdWANStatsWANPathPacketsLost, sdWANStatsDynamicVPathTimeSinceCreation=sdWANStatsDynamicVPathTimeSinceCreation, sdWANStatsIntranetsID=sdWANStatsIntranetsID, sdWANStatsArpReplyAgeMs=sdWANStatsArpReplyAgeMs, sdWANStatsInternetRuleBytesReceived=sdWANStatsInternetRuleBytesReceived, sdWANStatsLanGRETunnelBytesReceived=sdWANStatsLanGRETunnelBytesReceived, sdWANStatsPassthroughBytesSent=sdWANStatsPassthroughBytesSent, sdWANStatsDynamicWANClassName=sdWANStatsDynamicWANClassName, sdWANStatsDynamicVPathEntry=sdWANStatsDynamicVPathEntry, sdWANStatsInternetRuleBytesSent=sdWANStatsInternetRuleBytesSent, sdWANStatsAppliances=sdWANStatsAppliances, sdWANStatsLanGRETunnelBytesReceivedDropped=sdWANStatsLanGRETunnelBytesReceivedDropped, sdWANStatsWANLinkState=sdWANStatsWANLinkState, sdWANStatsWANRuleBytesSent=sdWANStatsWANRuleBytesSent, sdWANStatsWANClassVPathIndex=sdWANStatsWANClassVPathIndex, sdWANStatsRouteServiceID=sdWANStatsRouteServiceID, sdWANStatsDynamicWANRuleLANToWANHitCount=sdWANStatsDynamicWANRuleLANToWANHitCount, sdWANStatsVPathReceiveBOWTms=sdWANStatsVPathReceiveBOWTms, sdWANStatsRouteScalars=sdWANStatsRouteScalars, sdWANStatsInternetRulePacketsReceived=sdWANStatsInternetRulePacketsReceived, sdWANStatsDynamicVPathSendBOWTms=sdWANStatsDynamicVPathSendBOWTms, sdWANStatsDynamicWANPathVPathIndex=sdWANStatsDynamicWANPathVPathIndex, sdWANStatsWANPaths=sdWANStatsWANPaths, sdWANStatsEthernetInterfacePacketsSent=sdWANStatsEthernetInterfacePacketsSent, sdWANStatsDynamicWANPathPacketsLost=sdWANStatsDynamicWANPathPacketsLost, sdWANStatsDynamicVPathSendJitterms=sdWANStatsDynamicVPathSendJitterms, sdWANStatsInternetRulePacketsSent=sdWANStatsInternetRulePacketsSent, sdWANStatsDynamicWANClassPacketsSent=sdWANStatsDynamicWANClassPacketsSent, sdWANStatsWANLinkTable=sdWANStatsWANLinkTable, sdWANStatsVPathNumRules=sdWANStatsVPathNumRules, sdWANStatsIntranetRulesBytesDropped=sdWANStatsIntranetRulesBytesDropped, sdWANStatsWANClassType=sdWANStatsWANClassType, sdWANStatsWANLinkBytesReceived=sdWANStatsWANLinkBytesReceived, sdWANStatsIntranet=sdWANStatsIntranet, sdWANStatsDynamicWANRulePacketsSent=sdWANStatsDynamicWANRulePacketsSent, sdWANStatsRuleApplicationName=sdWANStatsRuleApplicationName, sdWANEventNotification=sdWANEventNotification, sdWANStatsDynamicWANRuleWANToLANHitCount=sdWANStatsDynamicWANRuleWANToLANHitCount, sdWANStatsIntranetScalars=sdWANStatsIntranetScalars, sdWANStatsIntranetsBytesSent=sdWANStatsIntranetsBytesSent, sdWANStatsVPathSendPacketsDropped=sdWANStatsVPathSendPacketsDropped, sdWANStatsDynamicVPathReceivePacketsOOO=sdWANStatsDynamicVPathReceivePacketsOOO, SdWANEventStateEnum=SdWANEventStateEnum, sdWANStatsDynamicWANClassVPathIndex=sdWANStatsDynamicWANClassVPathIndex, sdWANStatsWANClassBytesPending=sdWANStatsWANClassBytesPending, sdWANStatsWANRuleVPathID=sdWANStatsWANRuleVPathID, sdWANStatsVPathReceivePacketsOOO=sdWANStatsVPathReceivePacketsOOO, sdWANStatsRulePacketsReceived=sdWANStatsRulePacketsReceived, sdWANNetworkEventScalars=sdWANNetworkEventScalars, sdWANStatsIntranetRulesBytesReceived=sdWANStatsIntranetRulesBytesReceived, sdWANStatsArpIfIndex=sdWANStatsArpIfIndex, sdWANStatsDynamicWANRuleRuleIndex=sdWANStatsDynamicWANRuleRuleIndex, sdWANStatsApplianceScalars=sdWANStatsApplianceScalars, sdWANStatsApplianceOSVersion=sdWANStatsApplianceOSVersion, sdWANStatsAppliancePacketsSent=sdWANStatsAppliancePacketsSent, sdWANStatsIntranetsRoutingDomainName=sdWANStatsIntranetsRoutingDomainName, sdWANStatsLanGRETunnels=sdWANStatsLanGRETunnels, sdWANStatsDynamicWANClassBytesDropped=sdWANStatsDynamicWANClassBytesDropped, sdWANStatsIntranetRulesPacketsDropped=sdWANStatsIntranetRulesPacketsDropped, sdWANStatsLanGRETunnelPacketsSent=sdWANStatsLanGRETunnelPacketsSent, sdWANStatsDynamicWANRuleBytesDropped=sdWANStatsDynamicWANRuleBytesDropped, sdWANStatsRouteCost=sdWANStatsRouteCost, sdWANStatsIntranetRulesIntranetIndex=sdWANStatsIntranetRulesIntranetIndex, sdWANStatsInternetRuleIndex=sdWANStatsInternetRuleIndex, sdWANStatsInternetRuleLANToWANHitCount=sdWANStatsInternetRuleLANToWANHitCount, sdWANStatsWANClassClassID=sdWANStatsWANClassClassID, sdWANStatsDynamicWANPathPacketsDropped=sdWANStatsDynamicWANPathPacketsDropped, sdWANStatsDynamicWANPathPathIndex=sdWANStatsDynamicWANPathPathIndex, sdWANStatsDynamicWANClassVPathID=sdWANStatsDynamicWANClassVPathID, sdWANStatsRouteNeighborDirect=sdWANStatsRouteNeighborDirect, sdWANStatsDynamicWANPathPathID=sdWANStatsDynamicWANPathPathID, sdWANStatsWANClassBytesSent=sdWANStatsWANClassBytesSent, sdWANStatsIntranetRulesPacketsSent=sdWANStatsIntranetRulesPacketsSent, sdWANStatsVPathSendPacketsOOO=sdWANStatsVPathSendPacketsOOO, sdWANStatsRouteType=sdWANStatsRouteType, SdWANEventSeverityEnum=SdWANEventSeverityEnum, sdWANStatsNumDynamicVPaths=sdWANStatsNumDynamicVPaths, sdWANStatsDynamicVPathReceivePacketsDropped=sdWANStatsDynamicVPathReceivePacketsDropped, sdWANStatsVPathSendPacketsLost=sdWANStatsVPathSendPacketsLost, sdWANStatsWANRulePacketsReceived=sdWANStatsWANRulePacketsReceived, sdWANStatsIntranetRulesLastActiveNMinuteAgo=sdWANStatsIntranetRulesLastActiveNMinuteAgo, sdWANStatsIntranetRulesGlobalRuleIndex=sdWANStatsIntranetRulesGlobalRuleIndex, sdWANStatsWANRuleLastActiveNMinuteAgo=sdWANStatsWANRuleLastActiveNMinuteAgo, sdWANStatsIntranetsPacketsReceived=sdWANStatsIntranetsPacketsReceived, sdWANStatsWANLinkName=sdWANStatsWANLinkName, sdWANStatsDynamicVPathIndex=sdWANStatsDynamicVPathIndex, sdWANStatsRuleIndex=sdWANStatsRuleIndex, sdWANStatsArpScalars=sdWANStatsArpScalars, sdWANNetworkEventNotification=sdWANNetworkEventNotification, sdWANStatsEthernetInterfaceBytesReceived=sdWANStatsEthernetInterfaceBytesReceived, sdWANStatsDynamicVPathNumPaths=sdWANStatsDynamicVPathNumPaths, sdWANStatsWANLinkBytesSent=sdWANStatsWANLinkBytesSent, sdWANNotifs=sdWANNotifs, sdWANStatsDynamicWANRuleBytesSent=sdWANStatsDynamicWANRuleBytesSent, sdWANStatsDynamicWANPathTable=sdWANStatsDynamicWANPathTable, sdWANStatsRuleScalars=sdWANStatsRuleScalars, sdWANStatsLanGRETunnelTable=sdWANStatsLanGRETunnelTable, sdWANStatsInternetBytesDropped=sdWANStatsInternetBytesDropped, sdWANStatsArpState=sdWANStatsArpState, sdWANEventDescription=sdWANEventDescription, sdWANStatsInternetRuleGlobalRuleIndex=sdWANStatsInternetRuleGlobalRuleIndex, sdWANStatsRoutesV2=sdWANStatsRoutesV2)
mibBuilder.exportSymbols("CITRIX-NetScaler-SD-WAN-MIB", sdWANStatsWANPathPacketsReceived=sdWANStatsWANPathPacketsReceived, sdWANStatsApplianceSerialNumber=sdWANStatsApplianceSerialNumber, sdWANStatsWANPathBytesSent=sdWANStatsWANPathBytesSent, sdWANStatsLanGRETunnelScalars=sdWANStatsLanGRETunnelScalars, sdWANStatsVPathEntry=sdWANStatsVPathEntry, sdWANStatsDynamicWANPathBytesDropped=sdWANStatsDynamicWANPathBytesDropped, sdWANStatsIntranetRulesWANToLANHitCount=sdWANStatsIntranetRulesWANToLANHitCount, sdWANStatsInternetScalars=sdWANStatsInternetScalars, sdWANStatsIntranetsBytesDropped=sdWANStatsIntranetsBytesDropped, sdWANStatsLanGRETunnelBytesSentDropped=sdWANStatsLanGRETunnelBytesSentDropped, sdWANStatsIntranetRulesIntranetName=sdWANStatsIntranetRulesIntranetName, sdWANStatsLanGRETunnelPacketsSentFragmented=sdWANStatsLanGRETunnelPacketsSentFragmented, sdWANStatsDynamicVPaths=sdWANStatsDynamicVPaths, sdWANStatsArpIpAddr=sdWANStatsArpIpAddr, sdWANStatsEthernetInterfaceTable=sdWANStatsEthernetInterfaceTable, sdWANStatsApplianceServiceUptime=sdWANStatsApplianceServiceUptime, sdWANStatsDynamicVPathSendPacketsLost=sdWANStatsDynamicVPathSendPacketsLost, sdWANStatsNumWANLinks=sdWANStatsNumWANLinks, sdWANStatsDynamicVPathNumRules=sdWANStatsDynamicVPathNumRules, sdWANStatsDynamicWANPathEntry=sdWANStatsDynamicWANPathEntry, sdWANStatsPassthroughPacketsSent=sdWANStatsPassthroughPacketsSent, sdWANStatsLanGRETunnelKeepaliveReplyReceived=sdWANStatsLanGRETunnelKeepaliveReplyReceived, sdWANStatsApplianceName=sdWANStatsApplianceName, sdWANStatsPassthroughPacketsReceived=sdWANStatsPassthroughPacketsReceived, sdWANStatusMIB=sdWANStatusMIB, sdWANStatsPassthrough=sdWANStatsPassthrough, sdWANStatsIntranetRulesRuleIndex=sdWANStatsIntranetRulesRuleIndex, sdWANStatsRouteRoutingDomainName=sdWANStatsRouteRoutingDomainName, sdWANStatsDynamicWANRuleApplicationName=sdWANStatsDynamicWANRuleApplicationName, sdWANStatsApplianceConfigCreatedOn=sdWANStatsApplianceConfigCreatedOn, sdWANStatsWANPathEntry=sdWANStatsWANPathEntry, sdWANStatsVPathID=sdWANStatsVPathID, sdWANStatsRouteNetworkAddr=sdWANStatsRouteNetworkAddr, sdWANStatsWANPathState=sdWANStatsWANPathState, sdWANStatsWANPathPacketsOOO=sdWANStatsWANPathPacketsOOO, sdWANStatsDynamicWANRuleEntry=sdWANStatsDynamicWANRuleEntry, sdWANStatsIntranetsEntry=sdWANStatsIntranetsEntry, sdWANStatsInternetRuleEntry=sdWANStatsInternetRuleEntry, sdWANStatsWANPathPacketsSent=sdWANStatsWANPathPacketsSent, sdWANStatsEthernetInterfacePacketsReceived=sdWANStatsEthernetInterfacePacketsReceived, sdWANStatsInternetRuleWANToLANHitCount=sdWANStatsInternetRuleWANToLANHitCount, sdWANStatsDynamicVPathSendPacketsDropped=sdWANStatsDynamicVPathSendPacketsDropped, sdWANStatsRuleLANToWANHitCount=sdWANStatsRuleLANToWANHitCount, sdWANStatsRouteHitCountV2=sdWANStatsRouteHitCountV2, sdWANStatsLanGRETunnelRoutingDomainName=sdWANStatsLanGRETunnelRoutingDomainName, sdWANStatsEthernetInterfaces=sdWANStatsEthernetInterfaces, sdWANStatsLanGRETunnelIndex=sdWANStatsLanGRETunnelIndex, sdWANStatsVPathBytesReceived=sdWANStatsVPathBytesReceived, sdWANStatsIntranetRulesTable=sdWANStatsIntranetRulesTable, sdWANStatsDynamicVPathSendBytesDropped=sdWANStatsDynamicVPathSendBytesDropped, sdWANStatsRuleBytesReceived=sdWANStatsRuleBytesReceived, sdWANStatsNumVPaths=sdWANStatsNumVPaths, sdWANStatsWANClassTable=sdWANStatsWANClassTable, sdWANEventIndex=sdWANEventIndex, sdWANStatsWANRuleBytesDropped=sdWANStatsWANRuleBytesDropped, sdWANStatsEthernetInterfaceBytesSent=sdWANStatsEthernetInterfaceBytesSent, sdWANStatsWANRuleLANToWANHitCount=sdWANStatsWANRuleLANToWANHitCount, sdWANStatsIntranetRulesEntry=sdWANStatsIntranetRulesEntry, sdWANStatsDynamicWANRuleGlobalRuleIndex=sdWANStatsDynamicWANRuleGlobalRuleIndex, sdWANStatsWANRulePacketsSent=sdWANStatsWANRulePacketsSent, sdWANStatsDynamicVPathState=sdWANStatsDynamicVPathState, sdWANStatsWANClasses=sdWANStatsWANClasses, sdWANStatsDynamicVPathScalars=sdWANStatsDynamicVPathScalars, sdWANStatsApplianceState=sdWANStatsApplianceState, sdWANStatsDynamicVPathReceivePacketsLost=sdWANStatsDynamicVPathReceivePacketsLost, sdWANStatsDynamicVPathPacketsReceived=sdWANStatsDynamicVPathPacketsReceived, sdWANStatsWANClassClassIndex=sdWANStatsWANClassClassIndex, sdWANStatsWANLinkPacketsSent=sdWANStatsWANLinkPacketsSent, sdWANStatsWANLinkEntry=sdWANStatsWANLinkEntry, sdWANStatsWANRuleBytesReceived=sdWANStatsWANRuleBytesReceived, sdWANStatsLanGRETunnelPacketsReceived=sdWANStatsLanGRETunnelPacketsReceived, sdWANEventType=sdWANEventType, sdWANStatsRouteProtocol=sdWANStatsRouteProtocol, sdWANStatsWANPathPathIndex=sdWANStatsWANPathPathIndex, sdWANStatsWANClassEntry=sdWANStatsWANClassEntry, sdWANStatsPassthroughBytesDropped=sdWANStatsPassthroughBytesDropped, sdWANEventID=sdWANEventID, sdWANStatsEthernetInterfaceEntry=sdWANStatsEthernetInterfaceEntry, sdWANStatsInternetBytesSent=sdWANStatsInternetBytesSent, sdWANStatsArpPhysAddr=sdWANStatsArpPhysAddr, sdWANStatsWANClassVPathID=sdWANStatsWANClassVPathID, sdWANStatsEthernetInterfaceIfIndex=sdWANStatsEthernetInterfaceIfIndex, sdWANStatsVPathTable=sdWANStatsVPathTable, sdWANObjects=sdWANObjects, sdWANStatsDynamicWANClassPacketsDropped=sdWANStatsDynamicWANClassPacketsDropped, sdWANStatsRouteEntryV2=sdWANStatsRouteEntryV2, sdWANStatsWANPathBytesReceived=sdWANStatsWANPathBytesReceived, sdWANStatsIntranetRulesID=sdWANStatsIntranetRulesID, sdWANStatsVPathPacketsSent=sdWANStatsVPathPacketsSent, sdWANStatsPassthroughPacketsDropped=sdWANStatsPassthroughPacketsDropped, sdWANStatsRuleLastActiveNMinuteAgo=sdWANStatsRuleLastActiveNMinuteAgo, sdWANStatsDynamicVPathBytesSent=sdWANStatsDynamicVPathBytesSent, sdWANStatsDynamicWANRulePacketsDropped=sdWANStatsDynamicWANRulePacketsDropped, sdWANStatsDynamicWANPathBytesSent=sdWANStatsDynamicWANPathBytesSent, sdWANStatsWANRuleApplicationName=sdWANStatsWANRuleApplicationName, sdWANStatsWANPathVPathID=sdWANStatsWANPathVPathID, sdWANStatsInternetRuleApplicationName=sdWANStatsInternetRuleApplicationName, sdWANStatsInternetRulePacketsDropped=sdWANStatsInternetRulePacketsDropped, sdWANStatsIntranetsNumRules=sdWANStatsIntranetsNumRules, sdWANStatsWANRuleVPathIndex=sdWANStatsWANRuleVPathIndex, sdWANStatsNumRules=sdWANStatsNumRules, sdWANStatsDynamicVPathPacketsSent=sdWANStatsDynamicVPathPacketsSent, citrix=citrix, sdWANStatsDynamicWANRuleTable=sdWANStatsDynamicWANRuleTable, sdWANStatsDynamicVPathReceiveBytesDropped=sdWANStatsDynamicVPathReceiveBytesDropped, sdWANStatsLanGRETunnelKeepaliveRequestSent=sdWANStatsLanGRETunnelKeepaliveRequestSent, sdWANStatsWANLinkPacketsDropped=sdWANStatsWANLinkPacketsDropped, sdWANStatsDynamicWANPathBOWTms=sdWANStatsDynamicWANPathBOWTms, sdWANStatsPassthroughScalars=sdWANStatsPassthroughScalars, sdWANStatsArpTable=sdWANStatsArpTable, sdWANStatsDynamicWANPathBytesReceived=sdWANStatsDynamicWANPathBytesReceived, sdWANStatsEthernetInterfaceBytesDropped=sdWANStatsEthernetInterfaceBytesDropped, sdWANStatsDynamicWANRuleVPathID=sdWANStatsDynamicWANRuleVPathID, sdWANStatsWANPathBOWTms=sdWANStatsWANPathBOWTms, sdWANStatsIntranetsName=sdWANStatsIntranetsName, sdWANStatsRouteServiceType=sdWANStatsRouteServiceType, sdWANStatsDynamicVPathSendPacketsOOO=sdWANStatsDynamicVPathSendPacketsOOO)
