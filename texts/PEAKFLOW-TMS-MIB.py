#
# PySNMP MIB module PEAKFLOW-TMS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/arbornet/ARBORNET-PEAKFLOW-TMS-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 07:45:57 2024
# On host fv-az837-21 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
arbornetworksProducts, = mibBuilder.importSymbols("ARBOR-SMI", "arbornetworksProducts")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ifName, = mibBuilder.importSymbols("IF-MIB", "ifName")
Ipv6AddressPrefix, Ipv6Address = mibBuilder.importSymbols("IPV6-TC", "Ipv6AddressPrefix", "Ipv6Address")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
MibIdentifier, Integer32, TimeTicks, Bits, ModuleIdentity, NotificationType, Unsigned32, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, iso, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "TimeTicks", "Bits", "ModuleIdentity", "NotificationType", "Unsigned32", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "iso", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
peakflowTmsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9694, 1, 5))
peakflowTmsMIB.setRevisions(('2014-03-12 00:00', '2013-09-19 00:00', '2013-08-19 00:00', '2012-03-29 12:00', '2012-01-12 12:00', '2011-06-14 16:00', '2011-06-03 16:00', '2011-06-03 00:00', '2011-05-23 00:00', '2011-01-21 00:00', '2010-10-28 00:00', '2010-09-07 00:00', '2009-05-27 00:00', '2009-05-08 00:00', '2009-03-11 00:00', '2009-02-13 00:00', '2008-11-13 00:00', '2008-04-07 00:00', '2007-11-20 00:00', '2007-04-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: peakflowTmsMIB.setRevisionsDescriptions(('Added entry for tmsTrapGreName field', 'Added entry for tmsSpCommunicationDegraded trap', 'Updated contact information', 'Bug#50908: Fix reversed tmsSpCommunication enumerations.', 'Added tmsSystemPrefixesOk and tmsSystemPrefixesMissing\n                    traps.', 'Fix stray quote that was causing a syntax error.', 'Added performnace traps.', 'Fixed some typos and grammar problems.', 'Added IPv6 versions of existing IPv4 objects.', 'Added new traps (tmsAutomitigationBgp\n                    {Enabled/Disabled/Suspended}) for traffic-triggered\n                    automitigation BGP announcements.', 'Added new traps (tmsSpCommunicationDown and\n                    tmsSpCommunicationUp) for alerting about failed\n                    communication with Peakflow SP.', 'Added new traps (tmsFilesystemCritical and\n                    tmsFilesystemNominal) for new filesystem monitoring\n                    feature.', 'The March 11 2009 revision had accidentally obsoleted the\n                    tmsHostFault OID, rather than the hostFault trap. This\n                    is now fixed. The tmsHostFault OID is restored to current\n                    status and the hostFault trap is marked obsolete.', 'Update contact group name and company address.', 'Obsoleted the tmsHostFault trap.', 'Added new objects to support TMS 5.0', 'Update contact info.', "Prefixed Textual Conventions with 'Tms' for uniqueness", 'Removed unused Textual Conventions, added display hints', 'Initial revision',))
if mibBuilder.loadTexts: peakflowTmsMIB.setLastUpdated('201403120000Z')
if mibBuilder.loadTexts: peakflowTmsMIB.setOrganization('Arbor Networks, Inc.')
if mibBuilder.loadTexts: peakflowTmsMIB.setContactInfo('       Arbor Networks, Inc.\n                        Arbor Technical Assistance Center\n\n                        Postal: 76 Blanchard Road\n                                Burlington, MA 01803\n                                USA\n\n                        Tel: +1 866 212 7267 (toll free)\n                             +1 781 362 4300\n                        Email: support@arbor.net ')
if mibBuilder.loadTexts: peakflowTmsMIB.setDescription('Peakflow TMS MIB')
class TmsTableIndex(TextualConvention, Integer32):
    description = 'Used for an index into a table'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class TmsTableIndexOrZero(TextualConvention, Integer32):
    description = 'The number of items in a table.\n                May be zero if the table is empty.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class TmsPercentage(TextualConvention, Integer32):
    description = 'A percentage value (0% - 100%)'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 100)

class TmsHundredths(TextualConvention, Integer32):
    description = 'An integer representing hundredths of a unit'
    status = 'current'
    displayHint = 'd-2'

peakflowTmsMgr = MibIdentifier((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2))
tmsHostFault = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsHostFault.setStatus('current')
if mibBuilder.loadTexts: tmsHostFault.setDescription('state of faults within a TMS device')
tmsHostUpTime = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsHostUpTime.setStatus('current')
if mibBuilder.loadTexts: tmsHostUpTime.setDescription('uptime of this host')
deviceCpuLoadAvg1min = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 3), TmsHundredths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceCpuLoadAvg1min.setStatus('current')
if mibBuilder.loadTexts: deviceCpuLoadAvg1min.setDescription('Average number of processes in run queue during last 1 min.')
deviceCpuLoadAvg5min = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 4), TmsHundredths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceCpuLoadAvg5min.setStatus('current')
if mibBuilder.loadTexts: deviceCpuLoadAvg5min.setDescription('Average number of processes in run queue during last 5 min.')
deviceCpuLoadAvg15min = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 5), TmsHundredths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceCpuLoadAvg15min.setStatus('current')
if mibBuilder.loadTexts: deviceCpuLoadAvg15min.setDescription('Average number of processes in run queue during last 15 min.')
deviceDiskUsage = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 6), TmsPercentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceDiskUsage.setStatus('current')
if mibBuilder.loadTexts: deviceDiskUsage.setDescription('Percentage of primary data partition used.')
devicePhysicalMemoryUsage = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 7), TmsPercentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devicePhysicalMemoryUsage.setStatus('current')
if mibBuilder.loadTexts: devicePhysicalMemoryUsage.setDescription('Percentage of physical memory used.')
deviceSwapSpaceUsage = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 8), TmsPercentage()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceSwapSpaceUsage.setStatus('current')
if mibBuilder.loadTexts: deviceSwapSpaceUsage.setDescription('Percentage of swap space used.')
tmsTrapString = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapString.setStatus('current')
if mibBuilder.loadTexts: tmsTrapString.setDescription('Temporary string for reporting information in traps')
tmsTrapDetail = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapDetail.setStatus('current')
if mibBuilder.loadTexts: tmsTrapDetail.setDescription('Temporary string for reporting additional detail (if any)\n                about a trap')
tmsTrapSubhostName = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapSubhostName.setStatus('current')
if mibBuilder.loadTexts: tmsTrapSubhostName.setDescription('Temporary string for reporting the name of a subhost')
tmsTrapComponentName = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapComponentName.setStatus('current')
if mibBuilder.loadTexts: tmsTrapComponentName.setDescription('Temporary string for reporting the name of a program or device')
tmsTrapBgpPeer = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapBgpPeer.setStatus('current')
if mibBuilder.loadTexts: tmsTrapBgpPeer.setDescription('IP address of a BGP peer')
tmsTrapGreSource = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapGreSource.setStatus('current')
if mibBuilder.loadTexts: tmsTrapGreSource.setDescription('GRE source IP address')
tmsTrapGreDestination = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapGreDestination.setStatus('current')
if mibBuilder.loadTexts: tmsTrapGreDestination.setDescription('GRE destination IP address')
tmsTrapNexthop = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapNexthop.setStatus('current')
if mibBuilder.loadTexts: tmsTrapNexthop.setDescription('Nexthop IP address')
tmsTrapIpv6BgpPeer = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 17), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapIpv6BgpPeer.setStatus('current')
if mibBuilder.loadTexts: tmsTrapIpv6BgpPeer.setDescription('IPv6 address of a BGP peer')
tmsTrapIpv6GreSource = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 18), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapIpv6GreSource.setStatus('current')
if mibBuilder.loadTexts: tmsTrapIpv6GreSource.setDescription('GRE source IPv6 address')
tmsTrapIpv6GreDestination = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 19), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapIpv6GreDestination.setStatus('current')
if mibBuilder.loadTexts: tmsTrapIpv6GreDestination.setDescription('GRE destination IPv6 address')
tmsTrapIpv6Nexthop = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 20), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapIpv6Nexthop.setStatus('current')
if mibBuilder.loadTexts: tmsTrapIpv6Nexthop.setDescription('Nexthop IPv6 address')
tmsTrapGreName = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 2, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsTrapGreName.setStatus('current')
if mibBuilder.loadTexts: tmsTrapGreName.setDescription('User-defined tunnel name')
peakflowTmsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3))
peakflowTmsTrapsEnumerate = MibIdentifier((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0))
hostFault = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 1)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsHostFault"))
if mibBuilder.loadTexts: hostFault.setStatus('obsolete')
if mibBuilder.loadTexts: hostFault.setDescription('Obsolete; replaced by a number of more specific traps.')
greTunnelDown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 2)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapGreSource"), ("PEAKFLOW-TMS-MIB", "tmsTrapGreDestination"))
if mibBuilder.loadTexts: greTunnelDown.setStatus('current')
if mibBuilder.loadTexts: greTunnelDown.setDescription('The greTunnelDown/greTunnelUp traps are generated when a GRE\n                tunnel changes state.')
greTunnelUp = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 3)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapGreSource"), ("PEAKFLOW-TMS-MIB", "tmsTrapGreDestination"))
if mibBuilder.loadTexts: greTunnelUp.setStatus('current')
if mibBuilder.loadTexts: greTunnelUp.setDescription('The greTunnelDown/greTunnelUp traps are generated when a GRE\n                tunnel changes state.')
tmsLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 4)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"))
if mibBuilder.loadTexts: tmsLinkUp.setStatus('obsolete')
if mibBuilder.loadTexts: tmsLinkUp.setDescription('Obsolete; IF-MIB::linkUp is now used instead')
tmsLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 5)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"))
if mibBuilder.loadTexts: tmsLinkDown.setStatus('obsolete')
if mibBuilder.loadTexts: tmsLinkDown.setDescription('Obsolete; IF-MIB::linkDown is now used instead')
subHostUp = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 6)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapSubhostName"))
if mibBuilder.loadTexts: subHostUp.setStatus('current')
if mibBuilder.loadTexts: subHostUp.setDescription('Generated when a subhost transitions to active')
subHostDown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 7)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapSubhostName"))
if mibBuilder.loadTexts: subHostDown.setStatus('current')
if mibBuilder.loadTexts: subHostDown.setDescription('Generated when a subhost transitions to inactive')
tmsBgpNeighborDown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 8)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapBgpPeer"))
if mibBuilder.loadTexts: tmsBgpNeighborDown.setStatus('current')
if mibBuilder.loadTexts: tmsBgpNeighborDown.setDescription('Generated when a BGP neighbor transitions out of\n                the ESTABLISHED state')
tmsBgpNeighborUp = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 9)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapBgpPeer"))
if mibBuilder.loadTexts: tmsBgpNeighborUp.setStatus('current')
if mibBuilder.loadTexts: tmsBgpNeighborUp.setDescription('Generated when a BGP neighbor transitions into\n                the ESTABLISHED state')
tmsNexthopDown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 10)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapNexthop"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: tmsNexthopDown.setStatus('current')
if mibBuilder.loadTexts: tmsNexthopDown.setDescription('Generated when the nexthop host cannot be contacted')
tmsNexthopUp = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 11)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapNexthop"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: tmsNexthopUp.setStatus('current')
if mibBuilder.loadTexts: tmsNexthopUp.setDescription('Generated when the nexthop host cannot be contacted')
tmsMitigationError = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 12)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsMitigationIndex"), ("PEAKFLOW-TMS-MIB", "tmsMitigationName"))
if mibBuilder.loadTexts: tmsMitigationError.setStatus('current')
if mibBuilder.loadTexts: tmsMitigationError.setDescription('A mitigation cannot run because of a configuration error')
tmsMitigationSuspended = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 13)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsMitigationIndex"), ("PEAKFLOW-TMS-MIB", "tmsMitigationName"))
if mibBuilder.loadTexts: tmsMitigationSuspended.setStatus('current')
if mibBuilder.loadTexts: tmsMitigationSuspended.setDescription('A mitigation has been suspended due to some external problem\n                (nexthop not reachable, BGP down, etc.)')
tmsMitigationRunning = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 14)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsMitigationIndex"), ("PEAKFLOW-TMS-MIB", "tmsMitigationName"))
if mibBuilder.loadTexts: tmsMitigationRunning.setStatus('current')
if mibBuilder.loadTexts: tmsMitigationRunning.setDescription('A previously-detected mitigation problem has been cleared and\n                the mitigation is now running')
tmsConfigMissing = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 15)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsConfigMissing.setStatus('current')
if mibBuilder.loadTexts: tmsConfigMissing.setDescription('Generated when a TMS configuration file cannot be found.')
tmsConfigError = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 16)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsConfigError.setStatus('current')
if mibBuilder.loadTexts: tmsConfigError.setDescription('Generated when an error in a TMS configuration file\n                is detected.')
tmsConfigOk = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 17)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsConfigOk.setStatus('current')
if mibBuilder.loadTexts: tmsConfigOk.setDescription('All configuration problems have been corrected.')
tmsHwDeviceDown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 18)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsHwDeviceDown.setStatus('current')
if mibBuilder.loadTexts: tmsHwDeviceDown.setDescription('A hardware device has failed.')
tmsHwDeviceUp = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 19)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsHwDeviceUp.setStatus('current')
if mibBuilder.loadTexts: tmsHwDeviceUp.setDescription('A hardware device failure has been corrected.')
tmsHwSensorCritical = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 20)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsHwSensorCritical.setStatus('current')
if mibBuilder.loadTexts: tmsHwSensorCritical.setDescription('A hardware sensor is reading an alarm condition.')
tmsHwSensorOk = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 21)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsHwSensorOk.setStatus('current')
if mibBuilder.loadTexts: tmsHwSensorOk.setDescription('A hardware sensor is no longer reading an alarm condition.')
tmsSwComponentDown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 22)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapSubhostName"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsSwComponentDown.setStatus('current')
if mibBuilder.loadTexts: tmsSwComponentDown.setDescription('A software program has failed.')
tmsSwComponentUp = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 23)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapSubhostName"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsSwComponentUp.setStatus('current')
if mibBuilder.loadTexts: tmsSwComponentUp.setDescription('A software program failure has been corrected.')
tmsSystemStatusCritical = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 24)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsSystemStatusCritical.setStatus('current')
if mibBuilder.loadTexts: tmsSystemStatusCritical.setDescription('The TMS system is experiencing a critical failure.')
tmsSystemStatusDegraded = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 25)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsSystemStatusDegraded.setStatus('current')
if mibBuilder.loadTexts: tmsSystemStatusDegraded.setDescription('The TMS system is experiencing degraded performance.')
tmsSystemStatusNominal = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 26)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsSystemStatusNominal.setStatus('current')
if mibBuilder.loadTexts: tmsSystemStatusNominal.setDescription('The TMS system has returned to normal behavior.')
tmsFilesystemCritical = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 27)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsFilesystemCritical.setStatus('current')
if mibBuilder.loadTexts: tmsFilesystemCritical.setDescription('A filesystem is near capacity.')
tmsFilesystemNominal = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 28)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsFilesystemNominal.setStatus('current')
if mibBuilder.loadTexts: tmsFilesystemNominal.setDescription('A filesystem is back below capacity alarm threshold.')
tmsHwSensorUnknown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 29)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsHwSensorUnknown.setStatus('current')
if mibBuilder.loadTexts: tmsHwSensorUnknown.setDescription('A hardware sensor is in an unknown state.')
tmsSpCommunicationUp = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 30)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsSpCommunicationUp.setStatus('current')
if mibBuilder.loadTexts: tmsSpCommunicationUp.setDescription('Communication with SP host is up.')
tmsSpCommunicationDown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 31)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsSpCommunicationDown.setStatus('current')
if mibBuilder.loadTexts: tmsSpCommunicationDown.setDescription('Communication with SP host is down.')
tmsSystemStatusError = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 32)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsSystemStatusError.setStatus('current')
if mibBuilder.loadTexts: tmsSystemStatusError.setDescription('The TMS system is experiencing an error.')
tmsAutomitigationBgpEnabled = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 33)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsAutomitigationBgpEnabled.setStatus('current')
if mibBuilder.loadTexts: tmsAutomitigationBgpEnabled.setDescription('A previously-detected automitigation problem has been cleared\n                and the automitigation BGP announcements have resumed.')
tmsAutomitigationBgpDisabled = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 34)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsAutomitigationBgpDisabled.setStatus('current')
if mibBuilder.loadTexts: tmsAutomitigationBgpDisabled.setDescription('Automitigation BGP announcements have been administratively\n                disabled.')
tmsAutomitigationBgpSuspended = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 35)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsAutomitigationBgpSuspended.setStatus('current')
if mibBuilder.loadTexts: tmsAutomitigationBgpSuspended.setDescription('Automitigation BGP announcements have been suspended due to\n                some external problem (nexthop not reachable, BGP down, etc.)')
tmsIpv6GreTunnelDown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 36)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapIpv6GreSource"), ("PEAKFLOW-TMS-MIB", "tmsTrapIpv6GreDestination"))
if mibBuilder.loadTexts: tmsIpv6GreTunnelDown.setStatus('current')
if mibBuilder.loadTexts: tmsIpv6GreTunnelDown.setDescription('The greTunnelDown/greTunnelUp traps are generated when a GRE\n                tunnel changes state.')
tmsIpv6GreTunnelUp = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 37)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapIpv6GreSource"), ("PEAKFLOW-TMS-MIB", "tmsTrapIpv6GreDestination"))
if mibBuilder.loadTexts: tmsIpv6GreTunnelUp.setStatus('current')
if mibBuilder.loadTexts: tmsIpv6GreTunnelUp.setDescription('The greTunnelDown/greTunnelUp traps are generated when a GRE\n                tunnel changes state.')
tmsIpv6BgpNeighborDown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 38)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapIpv6BgpPeer"))
if mibBuilder.loadTexts: tmsIpv6BgpNeighborDown.setStatus('current')
if mibBuilder.loadTexts: tmsIpv6BgpNeighborDown.setDescription('Generated when a BGP neighbor transitions out of\n                the ESTABLISHED state.')
tmsIpv6BgpNeighborUp = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 39)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapIpv6BgpPeer"))
if mibBuilder.loadTexts: tmsIpv6BgpNeighborUp.setStatus('current')
if mibBuilder.loadTexts: tmsIpv6BgpNeighborUp.setDescription('Generated when a BGP neighbor transitions into\n                the ESTABLISHED state.')
tmsIpv6NexthopDown = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 40)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapIpv6Nexthop"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: tmsIpv6NexthopDown.setStatus('current')
if mibBuilder.loadTexts: tmsIpv6NexthopDown.setDescription('Generated when the nexthop host becomes unreachable.')
tmsIpv6NexthopUp = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 41)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapIpv6Nexthop"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: tmsIpv6NexthopUp.setStatus('current')
if mibBuilder.loadTexts: tmsIpv6NexthopUp.setDescription('Generated when the nexthop host becomes reachable.')
tmsPerformanceOk = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 42)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsPerformanceOk.setStatus('current')
if mibBuilder.loadTexts: tmsPerformanceOk.setDescription('Generated when the processed traffic rate matches the offered\n                traffic rate.')
tmsPerformanceLossy = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 43)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsPerformanceLossy.setStatus('current')
if mibBuilder.loadTexts: tmsPerformanceLossy.setDescription('Generated when the processed traffic rate is lower than the\n                offered traffic rate.')
tmsSystemPrefixesOk = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 44)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsSystemPrefixesOk.setStatus('current')
if mibBuilder.loadTexts: tmsSystemPrefixesOk.setDescription('BGP is currently advertising all mitigation prefixes.')
tmsSystemPrefixesMissing = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 45)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsSystemPrefixesMissing.setStatus('current')
if mibBuilder.loadTexts: tmsSystemPrefixesMissing.setDescription('BGP is not currently advertising all mitigation prefixes.')
tmsSpCommunicationDegraded = NotificationType((1, 3, 6, 1, 4, 1, 9694, 1, 5, 3, 0, 46)).setObjects(("SNMPv2-MIB", "sysName"), ("PEAKFLOW-TMS-MIB", "tmsTrapString"), ("PEAKFLOW-TMS-MIB", "tmsTrapDetail"), ("PEAKFLOW-TMS-MIB", "tmsTrapComponentName"))
if mibBuilder.loadTexts: tmsSpCommunicationDegraded.setStatus('current')
if mibBuilder.loadTexts: tmsSpCommunicationDegraded.setDescription('Communication with SP host is degraded.')
peakflowTmsObj = MibIdentifier((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5))
tmsDpiConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 1))
tmsVersion = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsVersion.setStatus('current')
if mibBuilder.loadTexts: tmsVersion.setDescription('TMS software version')
tmsLastUpdate = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsLastUpdate.setStatus('current')
if mibBuilder.loadTexts: tmsLastUpdate.setDescription('Time of the last configuration change')
tmsMitigationConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2))
tmsMitigationLastUpdate = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsMitigationLastUpdate.setStatus('current')
if mibBuilder.loadTexts: tmsMitigationLastUpdate.setDescription('Last time Mitigation configuration was updated')
tmsMitigationNumber = MibScalar((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2, 2), TmsTableIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsMitigationNumber.setStatus('current')
if mibBuilder.loadTexts: tmsMitigationNumber.setDescription('Number of entries in the tmsMitigation table')
tmsMitigationTable = MibTable((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2, 3), )
if mibBuilder.loadTexts: tmsMitigationTable.setStatus('current')
if mibBuilder.loadTexts: tmsMitigationTable.setDescription('Table of all mitigations in the TMS system')
tmsMitigationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2, 3, 1), ).setIndexNames((0, "PEAKFLOW-TMS-MIB", "tmsMitigationIndex"))
if mibBuilder.loadTexts: tmsMitigationEntry.setStatus('current')
if mibBuilder.loadTexts: tmsMitigationEntry.setDescription('Information about a single mitigation')
tmsMitigationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2, 3, 1, 1), TmsTableIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsMitigationIndex.setStatus('current')
if mibBuilder.loadTexts: tmsMitigationIndex.setDescription('Index in the tmsMitigation table. As of release 5.0 this is\n                the same as the tmsMitigationId.')
tmsMitigationId = MibTableColumn((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsMitigationId.setStatus('current')
if mibBuilder.loadTexts: tmsMitigationId.setDescription('ID number of this mitigation')
tmsDestinationPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsDestinationPrefix.setStatus('current')
if mibBuilder.loadTexts: tmsDestinationPrefix.setDescription('Destination IPv4 prefix to which this mitigation applies. The\n                value 0.0.0.0/32 indicates that the mitigation has no IPv4\n                prefix.')
tmsDestinationPrefixMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsDestinationPrefixMask.setStatus('current')
if mibBuilder.loadTexts: tmsDestinationPrefixMask.setDescription('Destination IPv4 prefix to which this mitigation applies. The\n                value 0.0.0.0/32 indicates that the mitigation has no IPv4\n                prefix.')
tmsMitigationName = MibTableColumn((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsMitigationName.setStatus('current')
if mibBuilder.loadTexts: tmsMitigationName.setDescription('Name of this mitigation')
tmsIpv6DestinationPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2, 3, 1, 6), Ipv6AddressPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsIpv6DestinationPrefix.setStatus('current')
if mibBuilder.loadTexts: tmsIpv6DestinationPrefix.setDescription('Destination IPv6 prefix to which this mitigation applies. The\n                value 0::/128 indicates that the mitigation has no IPv6 prefix.')
tmsIpv6DestinationPrefixMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9694, 1, 5, 5, 2, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmsIpv6DestinationPrefixMask.setStatus('current')
if mibBuilder.loadTexts: tmsIpv6DestinationPrefixMask.setDescription('Destination IPv6 prefix to which this mitigation applies. The\n                value 0::/128 indicates that the mitigation has no IPv6 prefix.')
mibBuilder.exportSymbols("PEAKFLOW-TMS-MIB", deviceCpuLoadAvg15min=deviceCpuLoadAvg15min, tmsIpv6DestinationPrefixMask=tmsIpv6DestinationPrefixMask, tmsIpv6GreTunnelDown=tmsIpv6GreTunnelDown, tmsIpv6NexthopDown=tmsIpv6NexthopDown, tmsPerformanceLossy=tmsPerformanceLossy, tmsLastUpdate=tmsLastUpdate, peakflowTmsTraps=peakflowTmsTraps, greTunnelDown=greTunnelDown, tmsIpv6DestinationPrefix=tmsIpv6DestinationPrefix, tmsIpv6GreTunnelUp=tmsIpv6GreTunnelUp, tmsTrapIpv6Nexthop=tmsTrapIpv6Nexthop, greTunnelUp=greTunnelUp, tmsSpCommunicationUp=tmsSpCommunicationUp, TmsHundredths=TmsHundredths, tmsNexthopDown=tmsNexthopDown, tmsIpv6NexthopUp=tmsIpv6NexthopUp, PYSNMP_MODULE_ID=peakflowTmsMIB, hostFault=hostFault, tmsPerformanceOk=tmsPerformanceOk, tmsMitigationError=tmsMitigationError, tmsMitigationTable=tmsMitigationTable, deviceCpuLoadAvg1min=deviceCpuLoadAvg1min, tmsHwSensorCritical=tmsHwSensorCritical, tmsIpv6BgpNeighborDown=tmsIpv6BgpNeighborDown, tmsMitigationLastUpdate=tmsMitigationLastUpdate, tmsHostUpTime=tmsHostUpTime, tmsFilesystemCritical=tmsFilesystemCritical, tmsDestinationPrefixMask=tmsDestinationPrefixMask, tmsSystemStatusError=tmsSystemStatusError, deviceSwapSpaceUsage=deviceSwapSpaceUsage, tmsTrapIpv6GreSource=tmsTrapIpv6GreSource, tmsMitigationIndex=tmsMitigationIndex, tmsSystemStatusNominal=tmsSystemStatusNominal, tmsFilesystemNominal=tmsFilesystemNominal, tmsMitigationName=tmsMitigationName, tmsSystemPrefixesMissing=tmsSystemPrefixesMissing, TmsPercentage=TmsPercentage, tmsHostFault=tmsHostFault, tmsMitigationConfig=tmsMitigationConfig, deviceCpuLoadAvg5min=deviceCpuLoadAvg5min, tmsAutomitigationBgpSuspended=tmsAutomitigationBgpSuspended, tmsSwComponentUp=tmsSwComponentUp, tmsNexthopUp=tmsNexthopUp, tmsHwSensorOk=tmsHwSensorOk, tmsIpv6BgpNeighborUp=tmsIpv6BgpNeighborUp, tmsLinkUp=tmsLinkUp, peakflowTmsObj=peakflowTmsObj, tmsTrapGreSource=tmsTrapGreSource, tmsSpCommunicationDegraded=tmsSpCommunicationDegraded, tmsSpCommunicationDown=tmsSpCommunicationDown, tmsTrapNexthop=tmsTrapNexthop, tmsSystemStatusCritical=tmsSystemStatusCritical, tmsTrapIpv6BgpPeer=tmsTrapIpv6BgpPeer, tmsMitigationSuspended=tmsMitigationSuspended, tmsTrapComponentName=tmsTrapComponentName, tmsConfigMissing=tmsConfigMissing, tmsHwDeviceUp=tmsHwDeviceUp, tmsBgpNeighborUp=tmsBgpNeighborUp, tmsHwDeviceDown=tmsHwDeviceDown, peakflowTmsTrapsEnumerate=peakflowTmsTrapsEnumerate, tmsTrapIpv6GreDestination=tmsTrapIpv6GreDestination, tmsSystemStatusDegraded=tmsSystemStatusDegraded, tmsAutomitigationBgpEnabled=tmsAutomitigationBgpEnabled, tmsSystemPrefixesOk=tmsSystemPrefixesOk, TmsTableIndex=TmsTableIndex, tmsMitigationRunning=tmsMitigationRunning, tmsConfigOk=tmsConfigOk, peakflowTmsMIB=peakflowTmsMIB, tmsTrapGreName=tmsTrapGreName, tmsTrapDetail=tmsTrapDetail, devicePhysicalMemoryUsage=devicePhysicalMemoryUsage, tmsTrapString=tmsTrapString, tmsConfigError=tmsConfigError, tmsTrapGreDestination=tmsTrapGreDestination, tmsLinkDown=tmsLinkDown, TmsTableIndexOrZero=TmsTableIndexOrZero, tmsDpiConfig=tmsDpiConfig, subHostDown=subHostDown, tmsVersion=tmsVersion, tmsTrapSubhostName=tmsTrapSubhostName, tmsAutomitigationBgpDisabled=tmsAutomitigationBgpDisabled, tmsTrapBgpPeer=tmsTrapBgpPeer, tmsMitigationId=tmsMitigationId, deviceDiskUsage=deviceDiskUsage, tmsHwSensorUnknown=tmsHwSensorUnknown, tmsMitigationEntry=tmsMitigationEntry, tmsMitigationNumber=tmsMitigationNumber, tmsSwComponentDown=tmsSwComponentDown, tmsBgpNeighborDown=tmsBgpNeighborDown, subHostUp=subHostUp, peakflowTmsMgr=peakflowTmsMgr, tmsDestinationPrefix=tmsDestinationPrefix)
