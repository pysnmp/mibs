#
# PySNMP MIB module CMM4-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/cambium/CMM4-MIB
# Produced by pysmi-1.1.12 at Wed May 29 06:43:25 2024
# On host fv-az1776-875 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ModuleIdentity, NotificationType, iso, Gauge32, TimeTicks, Bits, MibIdentifier, IpAddress, ObjectIdentity, Counter32, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "iso", "Gauge32", "TimeTicks", "Bits", "MibIdentifier", "IpAddress", "ObjectIdentity", "Counter32", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
whispBox, whispModules, whispCMM4 = mibBuilder.importSymbols("WHISP-GLOBAL-REG-MIB", "whispBox", "whispModules", "whispCMM4")
WhispLUID, EventString, WhispMACAddress = mibBuilder.importSymbols("WHISP-TCV2-MIB", "WhispLUID", "EventString", "WhispMACAddress")
cmm4MibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 161, 19, 1, 1, 15))
if mibBuilder.loadTexts: cmm4MibModule.setLastUpdated('200603290000Z')
if mibBuilder.loadTexts: cmm4MibModule.setOrganization('Cambium Networks')
if mibBuilder.loadTexts: cmm4MibModule.setContactInfo('\n            Canopy Technical Support\n            email: technical-support@canopywireless.com')
if mibBuilder.loadTexts: cmm4MibModule.setDescription('This module contains CMM4 MIB definitions.')
cmm4Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 1))
cmm4Config = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2))
cmm4Status = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3))
cmm4Gps = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4))
cmm4EventLog = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 5))
cmm4Controls = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 6))
cmm4Snmp = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7))
cmm4Event = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 8))
cmm4GPSEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 8, 1))
cmm4PortCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 1, 1)).setObjects(("CMM4-MIB", "portCfgIndex"), ("CMM4-MIB", "cmm4PortText"), ("CMM4-MIB", "cmm4PortDevType"), ("CMM4-MIB", "cmm4PortPowerCfg"), ("CMM4-MIB", "cmm4PortResetCfg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmm4PortCfgGroup = cmm4PortCfgGroup.setStatus('current')
if mibBuilder.loadTexts: cmm4PortCfgGroup.setDescription('CMM4 Port Configuration Table.')
cmm4ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 1, 2)).setObjects(("CMM4-MIB", "gpsTimingPulse"), ("CMM4-MIB", "lan1Ip"), ("CMM4-MIB", "lan1SubnetMask"), ("CMM4-MIB", "defaultGateway"), ("CMM4-MIB", "cmm4WebAutoUpdate"), ("CMM4-MIB", "cmm4ExtEthPowerReset"), ("CMM4-MIB", "cmm4IpAccessFilter"), ("CMM4-MIB", "cmm4IpAccess1"), ("CMM4-MIB", "cmm4IpAccess2"), ("CMM4-MIB", "cmm4IpAccess3"), ("CMM4-MIB", "cmm4MgmtPortSpeed"), ("CMM4-MIB", "cmm4NTPServerIp"), ("CMM4-MIB", "sessionTimeout"), ("CMM4-MIB", "vlanEnable"), ("CMM4-MIB", "managementVID"), ("CMM4-MIB", "siteInfoViewable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmm4ConfigGroup = cmm4ConfigGroup.setStatus('current')
if mibBuilder.loadTexts: cmm4ConfigGroup.setDescription('CMM4 configuration group.')
cmm4PortStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 1, 3)).setObjects(("CMM4-MIB", "portStatusIndex"), ("CMM4-MIB", "cmm4PortPowerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmm4PortStatusGroup = cmm4PortStatusGroup.setStatus('current')
if mibBuilder.loadTexts: cmm4PortStatusGroup.setDescription('CMM4 Port Configuration Status Table.')
cmm4StatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 1, 4)).setObjects(("CMM4-MIB", "deviceType"), ("CMM4-MIB", "cmm4pldVersion"), ("CMM4-MIB", "cmm4SoftwareVersion"), ("CMM4-MIB", "cmm4SystemTime"), ("CMM4-MIB", "cmm4UpTime"), ("CMM4-MIB", "satellitesVisible"), ("CMM4-MIB", "satellitesTracked"), ("CMM4-MIB", "latitude"), ("CMM4-MIB", "longitude"), ("CMM4-MIB", "height"), ("CMM4-MIB", "trackingMode"), ("CMM4-MIB", "syncStatus"), ("CMM4-MIB", "cmm4MacAddress"), ("CMM4-MIB", "cmm4ExtEthPwrStat"), ("CMM4-MIB", "cmm4FPGAVersion"), ("CMM4-MIB", "cmm4FPGAPlatform"), ("CMM4-MIB", "defaultStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmm4StatusGroup = cmm4StatusGroup.setStatus('current')
if mibBuilder.loadTexts: cmm4StatusGroup.setDescription('CMM4 Status group.')
cmm4GPSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 1, 5)).setObjects(("CMM4-MIB", "gpsTrackingMode"), ("CMM4-MIB", "gpsTime"), ("CMM4-MIB", "gpsDate"), ("CMM4-MIB", "gpsSatellitesVisible"), ("CMM4-MIB", "gpsSatellitesTracked"), ("CMM4-MIB", "gpsHeight"), ("CMM4-MIB", "gpsAntennaConnection"), ("CMM4-MIB", "gpsLatitude"), ("CMM4-MIB", "gpsLongitude"), ("CMM4-MIB", "gpsInvalidMsg"), ("CMM4-MIB", "gpsRestartCount"), ("CMM4-MIB", "gpsReceiverInfo"), ("CMM4-MIB", "gpsSyncStatus"), ("CMM4-MIB", "gpsSyncMasterSlave"), ("CMM4-MIB", "gpsLog"), ("CMM4-MIB", "gpsReInitCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmm4GPSGroup = cmm4GPSGroup.setStatus('current')
if mibBuilder.loadTexts: cmm4GPSGroup.setDescription('CMM4 GPS status group.')
cmm4ControlsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 1, 6)).setObjects(("CMM4-MIB", "cmm4Reboot"), ("CMM4-MIB", "cmm4ClearEventLog"), ("CMM4-MIB", "cmm4RebootIfRequired"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmm4ControlsGroup = cmm4ControlsGroup.setStatus('current')
if mibBuilder.loadTexts: cmm4ControlsGroup.setDescription('CMM4 Controls group.')
cmm4SNMPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 1, 7)).setObjects(("CMM4-MIB", "cmm4SnmpComString"), ("CMM4-MIB", "cmm4SnmpAccessSubnet"), ("CMM4-MIB", "cmm4SnmpTrapIp1"), ("CMM4-MIB", "cmm4SnmpTrapIp2"), ("CMM4-MIB", "cmm4SnmpTrapIp3"), ("CMM4-MIB", "cmm4SnmpTrapIp4"), ("CMM4-MIB", "cmm4SnmpTrapIp5"), ("CMM4-MIB", "cmm4SnmpTrapIp6"), ("CMM4-MIB", "cmm4SnmpTrapIp7"), ("CMM4-MIB", "cmm4SnmpTrapIp8"), ("CMM4-MIB", "cmm4SnmpTrapIp9"), ("CMM4-MIB", "cmm4SnmpTrapIp10"), ("CMM4-MIB", "cmm4SnmpReadOnly"), ("CMM4-MIB", "cmm4SnmpGPSSyncTrapEnable"), ("CMM4-MIB", "cmm4SnmpAccessSubnet2"), ("CMM4-MIB", "cmm4SnmpAccessSubnet3"), ("CMM4-MIB", "cmm4SnmpAccessSubnet4"), ("CMM4-MIB", "cmm4SnmpAccessSubnet5"), ("CMM4-MIB", "cmm4SnmpAccessSubnet6"), ("CMM4-MIB", "cmm4SnmpAccessSubnet7"), ("CMM4-MIB", "cmm4SnmpAccessSubnet8"), ("CMM4-MIB", "cmm4SnmpAccessSubnet9"), ("CMM4-MIB", "cmm4SnmpAccessSubnet10"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmm4SNMPGroup = cmm4SNMPGroup.setStatus('current')
if mibBuilder.loadTexts: cmm4SNMPGroup.setDescription('CMM4 SNMP group.')
cmm4UserTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 1, 8)).setObjects(("CMM4-MIB", "entryIndex"), ("CMM4-MIB", "userLoginName"), ("CMM4-MIB", "userPswd"), ("CMM4-MIB", "accessLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmm4UserTableGroup = cmm4UserTableGroup.setStatus('current')
if mibBuilder.loadTexts: cmm4UserTableGroup.setDescription('CMM4 User Information Table group.')
gpsTimingPulse = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("master", 1), ("slave", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gpsTimingPulse.setStatus('current')
if mibBuilder.loadTexts: gpsTimingPulse.setDescription('(1) -- Master.\n            (0) -- Slave.')
lan1Ip = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lan1Ip.setStatus('current')
if mibBuilder.loadTexts: lan1Ip.setDescription('LAN 1 IP address')
lan1SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lan1SubnetMask.setStatus('current')
if mibBuilder.loadTexts: lan1SubnetMask.setDescription('LAN 1 subnet mask.')
defaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultGateway.setStatus('current')
if mibBuilder.loadTexts: defaultGateway.setDescription('Default gateway')
cmm4WebAutoUpdate = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 5), Integer32()).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4WebAutoUpdate.setStatus('current')
if mibBuilder.loadTexts: cmm4WebAutoUpdate.setDescription('Web page auto update in seconds. 0 means disabled.')
cmm4ExtEthPowerReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4ExtEthPowerReset.setStatus('current')
if mibBuilder.loadTexts: cmm4ExtEthPowerReset.setDescription('Resets power to external ethernet switch.\n            (0) Reset Complete.\n            (1) Reset Switch.')
cmm4IpAccessFilter = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4IpAccessFilter.setStatus('current')
if mibBuilder.loadTexts: cmm4IpAccessFilter.setDescription('IP Access filtering.\n            (0) Filtering Disabled - All IPs will be allowed access.\n            (1) Filtering Enabled - Only allow IPs in the allowed access list.')
cmm4IpAccess1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4IpAccess1.setStatus('current')
if mibBuilder.loadTexts: cmm4IpAccess1.setDescription('IP Access list entry 1.')
cmm4IpAccess2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4IpAccess2.setStatus('current')
if mibBuilder.loadTexts: cmm4IpAccess2.setDescription('IP Access list entry 2.')
cmm4IpAccess3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4IpAccess3.setStatus('current')
if mibBuilder.loadTexts: cmm4IpAccess3.setDescription('IP Access list entry 3.')
cmm4MgmtPortSpeed = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("autoNegotiate", 1), ("force10Half", 2), ("force10Full", 3), ("force100Half", 4), ("force100Full", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4MgmtPortSpeed.setStatus('current')
if mibBuilder.loadTexts: cmm4MgmtPortSpeed.setDescription('Management Port Speed Configuration.\n            (1) autoNegotiate - Auto negotiate to best speed and duplex setting.\n            (2) force10Half - Set port to 10 Mbit/s half-duplex.\n            (3) force10Full - Set port to 10 Mbit/s full-duplex.\n            (4) force100Half - Set port to 100 Mbit/s half-duplex.\n            (5) force100Full - Set port to 100 Mbit/s full-duplex.')
cmm4NTPServerIp = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4NTPServerIp.setStatus('current')
if mibBuilder.loadTexts: cmm4NTPServerIp.setDescription('IP address for NTP server for CMM4 GPS Slave.')
sessionTimeout = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionTimeout.setStatus('current')
if mibBuilder.loadTexts: sessionTimeout.setDescription('Timer for Telnet, Web and FTP sessions.')
vlanEnable = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanEnable.setStatus('current')
if mibBuilder.loadTexts: vlanEnable.setDescription('To enable or disable VLAN tagging')
managementVID = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: managementVID.setStatus('current')
if mibBuilder.loadTexts: managementVID.setDescription('Management VLAN VID')
siteInfoViewable = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteInfoViewable.setStatus('current')
if mibBuilder.loadTexts: siteInfoViewable.setDescription('Enable non login users the ability to view Site Information')
cmm4PortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 7), )
if mibBuilder.loadTexts: cmm4PortCfgTable.setStatus('current')
if mibBuilder.loadTexts: cmm4PortCfgTable.setDescription('A list of CMM 4 port configuration entries.')
cmm4PortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 7, 1), ).setIndexNames((0, "CMM4-MIB", "portCfgIndex"))
if mibBuilder.loadTexts: cmm4PortCfgEntry.setStatus('current')
if mibBuilder.loadTexts: cmm4PortCfgEntry.setDescription('A CMM4 port entry containing objects with\n            port status.')
portCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portCfgIndex.setStatus('current')
if mibBuilder.loadTexts: portCfgIndex.setDescription('A unique value for each CMM port.')
cmm4PortText = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4PortText.setStatus('current')
if mibBuilder.loadTexts: cmm4PortText.setDescription('Port Description.')
cmm4PortDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("canopy", 1), ("canopy56V", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4PortDevType.setStatus('current')
if mibBuilder.loadTexts: cmm4PortDevType.setDescription('Type of Device configured for each port.')
cmm4PortPowerCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4PortPowerCfg.setStatus('current')
if mibBuilder.loadTexts: cmm4PortPowerCfg.setDescription('Port power status indicates power on or power off.')
cmm4PortResetCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("resetPort", 1), ("resetComplete", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4PortResetCfg.setStatus('current')
if mibBuilder.loadTexts: cmm4PortResetCfg.setDescription('Reset power to port if and only if port is currently powered.')
deviceType = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceType.setStatus('current')
if mibBuilder.loadTexts: deviceType.setDescription('A textual string containing information about device \n            type.')
cmm4pldVersion = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmm4pldVersion.setStatus('current')
if mibBuilder.loadTexts: cmm4pldVersion.setDescription('Version of CMM4 PLD code.')
cmm4SoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmm4SoftwareVersion.setStatus('current')
if mibBuilder.loadTexts: cmm4SoftwareVersion.setDescription('CMM4 software version. It includes the operating system\n            and software build time.')
cmm4SystemTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmm4SystemTime.setStatus('current')
if mibBuilder.loadTexts: cmm4SystemTime.setDescription('The current time.')
cmm4UpTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmm4UpTime.setStatus('current')
if mibBuilder.loadTexts: cmm4UpTime.setDescription('Time since last system reboot.')
satellitesVisible = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satellitesVisible.setStatus('current')
if mibBuilder.loadTexts: satellitesVisible.setDescription('Number of satellites the GPS sees.')
satellitesTracked = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satellitesTracked.setStatus('current')
if mibBuilder.loadTexts: satellitesTracked.setDescription('Current number of satellites that GPS actually tracks.')
latitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latitude.setStatus('current')
if mibBuilder.loadTexts: latitude.setDescription('CMM4 latitude.')
longitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: longitude.setStatus('current')
if mibBuilder.loadTexts: longitude.setDescription('CMM4 longitude.')
height = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: height.setStatus('current')
if mibBuilder.loadTexts: height.setDescription('The height of CMM4 unit.')
trackingMode = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trackingMode.setStatus('current')
if mibBuilder.loadTexts: trackingMode.setDescription('CMM4 GPS tracking mode.')
syncStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syncStatus.setStatus('current')
if mibBuilder.loadTexts: syncStatus.setDescription('CMM4 GPS sync pulse status.')
cmm4MacAddress = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 14), WhispMACAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmm4MacAddress.setStatus('current')
if mibBuilder.loadTexts: cmm4MacAddress.setDescription('MAC address of the unit.')
cmm4ExtEthPwrStat = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmm4ExtEthPwrStat.setStatus('current')
if mibBuilder.loadTexts: cmm4ExtEthPwrStat.setDescription('Current Live value of external Ethernet switch power.')
cmm4FPGAVersion = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmm4FPGAVersion.setStatus('current')
if mibBuilder.loadTexts: cmm4FPGAVersion.setDescription('CMM4 FPGA Version.')
cmm4FPGAPlatform = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmm4FPGAPlatform.setStatus('current')
if mibBuilder.loadTexts: cmm4FPGAPlatform.setDescription('CMM4 FPGA Revision.')
defaultStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("defaultPlugInserted", 1), ("defaultSwitchActive", 2), ("defaultPlugInsertedAndDefaultSwitchActive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defaultStatus.setStatus('current')
if mibBuilder.loadTexts: defaultStatus.setDescription('Current Status of the Default Plug and switch.  \n                            If either is active the next boot will be a default boot.\n                            0: None, Default Plug not inserted, Default Switch not active\n                            1: Plug inserted\n                            2: Switch Active\n                            3: Plug inserted and Switch active')
cmm4PortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 1), )
if mibBuilder.loadTexts: cmm4PortStatusTable.setStatus('current')
if mibBuilder.loadTexts: cmm4PortStatusTable.setDescription('A list of Live CMM 4 port status entries.')
cmm4PortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 1, 1), ).setIndexNames((0, "CMM4-MIB", "portStatusIndex"))
if mibBuilder.loadTexts: cmm4PortStatusEntry.setStatus('current')
if mibBuilder.loadTexts: cmm4PortStatusEntry.setDescription('A CMM4 port entry containing port status.')
portStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portStatusIndex.setStatus('current')
if mibBuilder.loadTexts: portStatusIndex.setDescription('A unique value for each CMM port.')
cmm4PortPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, -1))).clone(namedValues=NamedValues(("on", 1), ("off", 0), ("powerOverEthernetFault", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmm4PortPowerStatus.setStatus('current')
if mibBuilder.loadTexts: cmm4PortPowerStatus.setDescription('Port power status indicates power on, off or Power over Ethernet fault.')
gpsTrackingMode = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsTrackingMode.setStatus('current')
if mibBuilder.loadTexts: gpsTrackingMode.setDescription('CMM4 GPS tracking mode.')
gpsTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsTime.setStatus('current')
if mibBuilder.loadTexts: gpsTime.setDescription('CMM4 GPS time.')
gpsDate = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsDate.setStatus('current')
if mibBuilder.loadTexts: gpsDate.setDescription('CMM4 GPS date.')
gpsSatellitesVisible = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSatellitesVisible.setStatus('current')
if mibBuilder.loadTexts: gpsSatellitesVisible.setDescription('Number of satellites the GPS sees')
gpsSatellitesTracked = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSatellitesTracked.setStatus('current')
if mibBuilder.loadTexts: gpsSatellitesTracked.setDescription('Current number of satellites GPS is tracking.')
gpsHeight = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsHeight.setStatus('current')
if mibBuilder.loadTexts: gpsHeight.setDescription('CMM4 height.')
gpsAntennaConnection = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsAntennaConnection.setStatus('current')
if mibBuilder.loadTexts: gpsAntennaConnection.setDescription('Antenna Connection status.')
gpsLatitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsLatitude.setStatus('current')
if mibBuilder.loadTexts: gpsLatitude.setDescription('CMM4 Latitude.')
gpsLongitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsLongitude.setStatus('current')
if mibBuilder.loadTexts: gpsLongitude.setDescription('CMM4 longitude.')
gpsInvalidMsg = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsInvalidMsg.setStatus('current')
if mibBuilder.loadTexts: gpsInvalidMsg.setDescription('Number of invalid messages.')
gpsRestartCount = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsRestartCount.setStatus('current')
if mibBuilder.loadTexts: gpsRestartCount.setDescription('Number of unit restarts.')
gpsReceiverInfo = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsReceiverInfo.setStatus('current')
if mibBuilder.loadTexts: gpsReceiverInfo.setDescription('A textual string contains information on GPS receiver.')
gpsSyncStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("syncOK", 1), ("noSync", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSyncStatus.setStatus('current')
if mibBuilder.loadTexts: gpsSyncStatus.setDescription('Current Live value of GPS Sync Status.')
gpsSyncMasterSlave = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("cmmIsGPSMaster", 1), ("cmmIsGPSSlave", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSyncMasterSlave.setStatus('current')
if mibBuilder.loadTexts: gpsSyncMasterSlave.setDescription('Current Live value of GPS Sync Master/Slave Setting.')
gpsLog = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 15), EventString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsLog.setStatus('current')
if mibBuilder.loadTexts: gpsLog.setDescription('GPS log.  Includes times of sync detected and sync lost.')
gpsReInitCount = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 4, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsReInitCount.setStatus('current')
if mibBuilder.loadTexts: gpsReInitCount.setDescription('GPS ReInit counts.  The number of times we have done a complete re-initialization of the GPS device.')
eventLog = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 5, 1), EventString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventLog.setStatus('current')
if mibBuilder.loadTexts: eventLog.setDescription('CMM4 Event log.')
ntpLog = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 5, 2), EventString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpLog.setStatus('current')
if mibBuilder.loadTexts: ntpLog.setDescription('CMM4 NTP Log')
cmm4Reboot = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("reboot", 1), ("finishedReboot", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4Reboot.setStatus('current')
if mibBuilder.loadTexts: cmm4Reboot.setDescription('Setting the variable to 1 will reboot the unit. When the\n            unit finishes rebooting, it will be in finishedReboot state.')
cmm4ClearEventLog = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("clear", 1), ("notClear", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4ClearEventLog.setStatus('current')
if mibBuilder.loadTexts: cmm4ClearEventLog.setDescription('Setting the variable to 1 will clear the event log.')
cmm4RebootIfRequired = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("rebootifrquired", 1), ("rebootcomplete", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4RebootIfRequired.setStatus('current')
if mibBuilder.loadTexts: cmm4RebootIfRequired.setDescription('Setting this to 1 will reboot the CMM4 IF and ONLY IF it is required\n            due to configuration updates.  If a reboot is NOT required, setting\n            this value to 1 will have no affect.  If a reboot IS required, setting \n            this value to 1 will reboot the CMM.  Writing 0 has no affect.')
cmm4SnmpComString = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpComString.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpComString.setDescription('SNMP Community String')
cmm4SnmpAccessSubnet = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet.setDescription('SNMP Accessing Subnet.  In x.x.x.x/y form where x.x.x.x is network and y is mask length.')
cmm4SnmpTrapIp1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpTrapIp1.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpTrapIp1.setDescription('SNMP Trap IP 1.')
cmm4SnmpTrapIp2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpTrapIp2.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpTrapIp2.setDescription('SNMP Trap IP 2.')
cmm4SnmpTrapIp3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpTrapIp3.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpTrapIp3.setDescription('SNMP Trap IP 3.')
cmm4SnmpTrapIp4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpTrapIp4.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpTrapIp4.setDescription('SNMP Trap IP 4.')
cmm4SnmpTrapIp5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpTrapIp5.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpTrapIp5.setDescription('SNMP Trap IP 5.')
cmm4SnmpTrapIp6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpTrapIp6.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpTrapIp6.setDescription('SNMP Trap IP 6.')
cmm4SnmpTrapIp7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpTrapIp7.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpTrapIp7.setDescription('SNMP Trap IP 7.')
cmm4SnmpTrapIp8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpTrapIp8.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpTrapIp8.setDescription('SNMP Trap IP 8.')
cmm4SnmpTrapIp9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpTrapIp9.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpTrapIp9.setDescription('SNMP Trap IP 9.')
cmm4SnmpTrapIp10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpTrapIp10.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpTrapIp10.setDescription('SNMP Trap IP 10.')
cmm4SnmpReadOnly = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("readOnlyPermissions", 1), ("readWritePermissions", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpReadOnly.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpReadOnly.setDescription('SNMP Permissions\n                1 - Read Only\n                0 - Read/Write.')
cmm4SnmpGPSSyncTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("gpsSyncTrapDisabled", 0), ("gpsSyncTrapEnabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpGPSSyncTrapEnable.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpGPSSyncTrapEnable.setDescription('Variable to enable/disable GPS sync/out-sync traps.')
cmm4SnmpAccessSubnet2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet2.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet2.setDescription('SNMP Accessing Subnet 2.  In x.x.x.x/y form where x.x.x.x is network and y is mask length.')
cmm4SnmpAccessSubnet3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet3.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet3.setDescription('SNMP Accessing Subnet 3.  In x.x.x.x/y form where x.x.x.x is network and y is mask length.')
cmm4SnmpAccessSubnet4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet4.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet4.setDescription('SNMP Accessing Subnet 4.  In x.x.x.x/y form where x.x.x.x is network and y is mask length.')
cmm4SnmpAccessSubnet5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet5.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet5.setDescription('SNMP Accessing Subnet 5.  In x.x.x.x/y form where x.x.x.x is network and y is mask length.')
cmm4SnmpAccessSubnet6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet6.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet6.setDescription('SNMP Accessing Subnet 6.  In x.x.x.x/y form where x.x.x.x is network and y is mask length.')
cmm4SnmpAccessSubnet7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet7.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet7.setDescription('SNMP Accessing Subnet 7.  In x.x.x.x/y form where x.x.x.x is network and y is mask length.')
cmm4SnmpAccessSubnet8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet8.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet8.setDescription('SNMP Accessing Subnet 8.  In x.x.x.x/y form where x.x.x.x is network and y is mask length.')
cmm4SnmpAccessSubnet9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet9.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet9.setDescription('SNMP Accessing Subnet 9.  In x.x.x.x/y form where x.x.x.x is network and y is mask length.')
cmm4SnmpAccessSubnet10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 7, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet10.setStatus('current')
if mibBuilder.loadTexts: cmm4SnmpAccessSubnet10.setDescription('SNMP Accessing Subnet 10.  In x.x.x.x/y form where x.x.x.x is network and y is mask length.')
cmm4GPSInSync = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 8, 1, 1)).setObjects(("CMM4-MIB", "gpsSyncStatus"), ("CMM4-MIB", "cmm4MacAddress"))
if mibBuilder.loadTexts: cmm4GPSInSync.setStatus('current')
if mibBuilder.loadTexts: cmm4GPSInSync.setDescription('Signals a transition from No Sync to Sync OK.')
cmm4GPSNoSync = NotificationType((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 8, 1, 2)).setObjects(("CMM4-MIB", "gpsSyncStatus"), ("CMM4-MIB", "cmm4MacAddress"))
if mibBuilder.loadTexts: cmm4GPSNoSync.setStatus('current')
if mibBuilder.loadTexts: cmm4GPSNoSync.setDescription('Signals a transition from Sync OK to No Sync.')
cmm4UserTable = MibTable((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 9), )
if mibBuilder.loadTexts: cmm4UserTable.setStatus('current')
if mibBuilder.loadTexts: cmm4UserTable.setDescription('User information table.')
cmm4UserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 9, 1), ).setIndexNames((0, "CMM4-MIB", "entryIndex"))
if mibBuilder.loadTexts: cmm4UserEntry.setStatus('current')
if mibBuilder.loadTexts: cmm4UserEntry.setDescription('User entry.')
entryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: entryIndex.setStatus('current')
if mibBuilder.loadTexts: entryIndex.setDescription('User information table index.')
userLoginName = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userLoginName.setStatus('current')
if mibBuilder.loadTexts: userLoginName.setDescription('User name.')
userPswd = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 9, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userPswd.setStatus('current')
if mibBuilder.loadTexts: userPswd.setDescription('User password.')
accessLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 6, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noAdmin", 0), ("guest", 1), ("installer", 2), ("administrator", 3), ("technician", 4), ("engineering", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: accessLevel.setStatus('current')
if mibBuilder.loadTexts: accessLevel.setDescription('User access level.')
mibBuilder.exportSymbols("CMM4-MIB", gpsDate=gpsDate, trackingMode=trackingMode, cmm4ClearEventLog=cmm4ClearEventLog, cmm4Snmp=cmm4Snmp, cmm4RebootIfRequired=cmm4RebootIfRequired, cmm4PortStatusGroup=cmm4PortStatusGroup, cmm4MibModule=cmm4MibModule, cmm4SnmpAccessSubnet=cmm4SnmpAccessSubnet, cmm4SnmpTrapIp9=cmm4SnmpTrapIp9, cmm4Config=cmm4Config, cmm4StatusGroup=cmm4StatusGroup, cmm4ControlsGroup=cmm4ControlsGroup, gpsLongitude=gpsLongitude, gpsInvalidMsg=gpsInvalidMsg, latitude=latitude, cmm4SnmpAccessSubnet7=cmm4SnmpAccessSubnet7, gpsTimingPulse=gpsTimingPulse, cmm4WebAutoUpdate=cmm4WebAutoUpdate, cmm4FPGAPlatform=cmm4FPGAPlatform, cmm4GPSInSync=cmm4GPSInSync, managementVID=managementVID, defaultGateway=defaultGateway, cmm4UserTableGroup=cmm4UserTableGroup, cmm4PortCfgGroup=cmm4PortCfgGroup, cmm4IpAccess3=cmm4IpAccess3, cmm4Controls=cmm4Controls, cmm4PortResetCfg=cmm4PortResetCfg, cmm4Groups=cmm4Groups, cmm4SoftwareVersion=cmm4SoftwareVersion, cmm4SnmpTrapIp4=cmm4SnmpTrapIp4, userLoginName=userLoginName, accessLevel=accessLevel, gpsLatitude=gpsLatitude, cmm4SnmpAccessSubnet5=cmm4SnmpAccessSubnet5, cmm4SnmpTrapIp10=cmm4SnmpTrapIp10, cmm4SnmpAccessSubnet6=cmm4SnmpAccessSubnet6, gpsReceiverInfo=gpsReceiverInfo, cmm4SnmpTrapIp8=cmm4SnmpTrapIp8, cmm4SnmpTrapIp2=cmm4SnmpTrapIp2, cmm4IpAccessFilter=cmm4IpAccessFilter, cmm4SnmpReadOnly=cmm4SnmpReadOnly, cmm4UserTable=cmm4UserTable, cmm4ConfigGroup=cmm4ConfigGroup, cmm4IpAccess1=cmm4IpAccess1, cmm4MacAddress=cmm4MacAddress, cmm4ExtEthPwrStat=cmm4ExtEthPwrStat, cmm4SystemTime=cmm4SystemTime, cmm4SnmpAccessSubnet3=cmm4SnmpAccessSubnet3, lan1SubnetMask=lan1SubnetMask, portStatusIndex=portStatusIndex, deviceType=deviceType, sessionTimeout=sessionTimeout, cmm4pldVersion=cmm4pldVersion, cmm4Event=cmm4Event, cmm4PortStatusTable=cmm4PortStatusTable, cmm4SnmpTrapIp5=cmm4SnmpTrapIp5, height=height, gpsSatellitesVisible=gpsSatellitesVisible, cmm4EventLog=cmm4EventLog, siteInfoViewable=siteInfoViewable, cmm4PortDevType=cmm4PortDevType, syncStatus=syncStatus, cmm4SnmpComString=cmm4SnmpComString, gpsHeight=gpsHeight, defaultStatus=defaultStatus, gpsTrackingMode=gpsTrackingMode, gpsReInitCount=gpsReInitCount, cmm4GPSNoSync=cmm4GPSNoSync, gpsAntennaConnection=gpsAntennaConnection, gpsRestartCount=gpsRestartCount, cmm4SnmpTrapIp7=cmm4SnmpTrapIp7, cmm4PortPowerCfg=cmm4PortPowerCfg, cmm4GPSGroup=cmm4GPSGroup, gpsSyncStatus=gpsSyncStatus, gpsTime=gpsTime, gpsSatellitesTracked=gpsSatellitesTracked, cmm4PortText=cmm4PortText, cmm4SnmpAccessSubnet4=cmm4SnmpAccessSubnet4, cmm4ExtEthPowerReset=cmm4ExtEthPowerReset, cmm4SnmpTrapIp6=cmm4SnmpTrapIp6, cmm4FPGAVersion=cmm4FPGAVersion, lan1Ip=lan1Ip, cmm4IpAccess2=cmm4IpAccess2, cmm4PortPowerStatus=cmm4PortPowerStatus, entryIndex=entryIndex, cmm4UserEntry=cmm4UserEntry, cmm4Status=cmm4Status, gpsLog=gpsLog, cmm4NTPServerIp=cmm4NTPServerIp, cmm4Gps=cmm4Gps, cmm4SnmpTrapIp3=cmm4SnmpTrapIp3, ntpLog=ntpLog, PYSNMP_MODULE_ID=cmm4MibModule, cmm4SNMPGroup=cmm4SNMPGroup, longitude=longitude, cmm4PortStatusEntry=cmm4PortStatusEntry, cmm4PortCfgEntry=cmm4PortCfgEntry, cmm4UpTime=cmm4UpTime, vlanEnable=vlanEnable, userPswd=userPswd, cmm4SnmpAccessSubnet2=cmm4SnmpAccessSubnet2, portCfgIndex=portCfgIndex, cmm4MgmtPortSpeed=cmm4MgmtPortSpeed, cmm4PortCfgTable=cmm4PortCfgTable, satellitesTracked=satellitesTracked, eventLog=eventLog, gpsSyncMasterSlave=gpsSyncMasterSlave, satellitesVisible=satellitesVisible, cmm4Reboot=cmm4Reboot, cmm4SnmpTrapIp1=cmm4SnmpTrapIp1, cmm4SnmpAccessSubnet8=cmm4SnmpAccessSubnet8, cmm4SnmpGPSSyncTrapEnable=cmm4SnmpGPSSyncTrapEnable, cmm4SnmpAccessSubnet9=cmm4SnmpAccessSubnet9, cmm4SnmpAccessSubnet10=cmm4SnmpAccessSubnet10, cmm4GPSEvent=cmm4GPSEvent)
