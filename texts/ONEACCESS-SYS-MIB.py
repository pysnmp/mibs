#
# PySNMP MIB module ONEACCESS-SYS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/oneaccess/ONEACCESS-SYS-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 12:06:03 2024
# On host fv-az1433-299 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
oacExpIMSystem, oacMIBModules = mibBuilder.importSymbols("ONEACCESS-GLOBAL-REG", "oacExpIMSystem", "oacMIBModules")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, IpAddress, MibIdentifier, Unsigned32, NotificationType, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, Integer32, ObjectIdentity, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "MibIdentifier", "Unsigned32", "NotificationType", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "Integer32", "ObjectIdentity", "iso", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
oacSysMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 13191, 1, 100, 671))
oacSysMIBModule.setRevisions(('2014-05-05 00:01', '2011-06-15 00:00', '2010-12-14 00:01', '2010-08-11 10:00', '2010-07-08 10:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: oacSysMIBModule.setRevisionsDescriptions(('Contact updated', 'oacExpIMSysFactory OID updated', 'Add objects for Factory area  description.', 'Fixed minor corrections. changed oacExpIMSysHwcDescription\n\t\t\ttype from OCTET STRING to DisplayString.', 'This MIB module describes system Management objects.',))
if mibBuilder.loadTexts: oacSysMIBModule.setLastUpdated('201405050001Z')
if mibBuilder.loadTexts: oacSysMIBModule.setOrganization(' OneAccess ')
if mibBuilder.loadTexts: oacSysMIBModule.setContactInfo('Pascal KESTELOOT\n            Postal: ONE ACCESS\n                    381 Avenue du General de Gaulle\n                    92140 Clamart, France\n\t\t    FRANCE\n\n            Tel: (+33) 01 41 87 70 00\n            Fax: (+33) 01 41 87 74 00\n\n            E-mail: pascal.kesteloot@oneaccess-net.com')
if mibBuilder.loadTexts: oacSysMIBModule.setDescription('Add Cpu usage table for multicore HW')
class OASysHwcClass(TextualConvention, Integer32):
    description = 'The object specify the class of OASysHwc'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("board", 0), ("cpu", 1), ("slot", 2))

class OASysHwcType(TextualConvention, Integer32):
    description = 'The object specify the type of OASysHwc'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("mainboard", 0), ("microprocessor", 1), ("ram", 2), ("flash", 3), ("dsp", 4), ("uplink", 5), ("module", 6))

class OASysCoreType(TextualConvention, Integer32):
    description = 'The object specify the type of Core usage'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("controlplane", 0), ("dataforwarding", 1), ("application", 2), ("mixed", 3))

oacExpIMSysStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1))
oacExpIMSysHardwareDescription = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2))
oacSysMemStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 1))
oacSysCpuStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 2))
oacSysSecureCrashlogCount = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysSecureCrashlogCount.setStatus('current')
if mibBuilder.loadTexts: oacSysSecureCrashlogCount.setDescription('The number of avaiable crash logs')
oacSysStartCaused = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 200), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysStartCaused.setStatus('current')
if mibBuilder.loadTexts: oacSysStartCaused.setDescription('Cause of system start')
oacSysIMSysMainBoard = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 1))
oacExpIMSysHwComponents = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2))
oacExpIMSysFactory = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 3))
oacSysIMSysMainIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 1, 1), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysIMSysMainIdentifier.setStatus('current')
if mibBuilder.loadTexts: oacSysIMSysMainIdentifier.setDescription("The vendor's authoritative identification of\n\t\t\tthe main board. This value is allocated within \n\t\t\tthe SMI enterprise subtree")
oacSysIMSysMainManufacturedIdentity = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysIMSysMainManufacturedIdentity.setStatus('current')
if mibBuilder.loadTexts: oacSysIMSysMainManufacturedIdentity.setDescription("Unique ID string self to each equipment. \n\t\t\t By default, it is retrieved from the \n\t\t\t manufacturer of the equipment. Can also be \n\t\t\t configure by CLI ( see command  'snmp chassis-id')\n\t\t\t for customer purposes")
oacSysIMSysMainManufacturedDate = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysIMSysMainManufacturedDate.setStatus('current')
if mibBuilder.loadTexts: oacSysIMSysMainManufacturedDate.setDescription('the date of the manufacturing of\n\t\t\tthe equipment')
oacSysIMSysMainCPU = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysIMSysMainCPU.setStatus('current')
if mibBuilder.loadTexts: oacSysIMSysMainCPU.setDescription('Description of the main CPU used\n\t\t\ton the main board')
oacSysIMSysMainBSPVersion = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysIMSysMainBSPVersion.setStatus('current')
if mibBuilder.loadTexts: oacSysIMSysMainBSPVersion.setDescription('the current BSP version supported\n\t\t\ton the equipment')
oacSysIMSysMainBootVersion = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysIMSysMainBootVersion.setStatus('current')
if mibBuilder.loadTexts: oacSysIMSysMainBootVersion.setDescription('the current boot version supported\n\t\t\ton the equipment')
oacSysIMSysMainBootDateCreation = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysIMSysMainBootDateCreation.setStatus('current')
if mibBuilder.loadTexts: oacSysIMSysMainBootDateCreation.setDescription('the date the current boot version\n\t\t\thas been generated')
oacSysMemoryFree = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysMemoryFree.setStatus('current')
if mibBuilder.loadTexts: oacSysMemoryFree.setDescription('The number of bytes in free memory ')
oacSysMemoryAllocated = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysMemoryAllocated.setStatus('current')
if mibBuilder.loadTexts: oacSysMemoryAllocated.setDescription('The number of bytes in allocated memory ')
oacSysMemoryTotal = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysMemoryTotal.setStatus('current')
if mibBuilder.loadTexts: oacSysMemoryTotal.setDescription('Total number of bytes in the system memory partition ')
oacSysMemoryUsed = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysMemoryUsed.setStatus('current')
if mibBuilder.loadTexts: oacSysMemoryUsed.setDescription('Used memory expressed in percent of the total memory size ')
oacSysCpuUsed = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysCpuUsed.setStatus('current')
if mibBuilder.loadTexts: oacSysCpuUsed.setDescription('Used cpu in percent ')
oacSysCpuUsedCoresCount = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysCpuUsedCoresCount.setStatus('current')
if mibBuilder.loadTexts: oacSysCpuUsedCoresCount.setDescription('The number of Cores for the equipment')
oacSysCpuUsedCoresTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 2, 3), )
if mibBuilder.loadTexts: oacSysCpuUsedCoresTable.setStatus('current')
if mibBuilder.loadTexts: oacSysCpuUsedCoresTable.setDescription('Table for Oneaccess hardware Cores')
oacSysCpuUsedCoresEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 2, 3, 1), ).setIndexNames((0, "ONEACCESS-SYS-MIB", "oacSysCpuUsedIndex"))
if mibBuilder.loadTexts: oacSysCpuUsedCoresEntry.setStatus('current')
if mibBuilder.loadTexts: oacSysCpuUsedCoresEntry.setDescription('Table entry for a hardware Core')
oacSysCpuUsedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysCpuUsedIndex.setStatus('current')
if mibBuilder.loadTexts: oacSysCpuUsedIndex.setDescription('Core index')
oacSysCpuUsedCoreType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 2, 3, 1, 2), OASysCoreType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysCpuUsedCoreType.setStatus('current')
if mibBuilder.loadTexts: oacSysCpuUsedCoreType.setDescription('Type of the core')
oacSysCpuUsedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysCpuUsedValue.setStatus('current')
if mibBuilder.loadTexts: oacSysCpuUsedValue.setDescription('Used cpu in percent : equivalent for core 0 to the oacSysCpuUsed object. This is the current value')
oacSysCpuUsedOneMinuteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysCpuUsedOneMinuteValue.setStatus('current')
if mibBuilder.loadTexts: oacSysCpuUsedOneMinuteValue.setDescription('Cpu load for the last minute period')
oacSysLastRebootCause = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacSysLastRebootCause.setStatus('current')
if mibBuilder.loadTexts: oacSysLastRebootCause.setDescription('To display the cause for the last reboot.')
oacExpIMSysHwComponentsCount = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysHwComponentsCount.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysHwComponentsCount.setDescription('The number of components for the equipment')
oacExpIMSysHwComponentsTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2, 2), )
if mibBuilder.loadTexts: oacExpIMSysHwComponentsTable.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysHwComponentsTable.setDescription('Table for Oneaccess hardware components')
oacExpIMSysHwComponentsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2, 2, 1), ).setIndexNames((0, "ONEACCESS-SYS-MIB", "oacExpIMSysHwcIndex"))
if mibBuilder.loadTexts: oacExpIMSysHwComponentsEntry.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysHwComponentsEntry.setDescription('Table entry for a hardware component')
oacExpIMSysHwcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysHwcIndex.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysHwcIndex.setDescription('Component index')
oacExpIMSysHwcClass = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2, 2, 1, 2), OASysHwcClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysHwcClass.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysHwcClass.setDescription('Class of the component')
oacExpIMSysHwcType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2, 2, 1, 3), OASysHwcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysHwcType.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysHwcType.setDescription('Type of the component')
oacExpIMSysHwcDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysHwcDescription.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysHwcDescription.setDescription('Component description, identifies the component')
oacExpIMSysHwcSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysHwcSerialNumber.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysHwcSerialNumber.setDescription("Component's serial number")
oacExpIMSysHwcManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysHwcManufacturer.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysHwcManufacturer.setDescription('Component manufacturer')
oacExpIMSysHwcManufacturedDate = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysHwcManufacturedDate.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysHwcManufacturedDate.setDescription("Component's manufacturing date")
oacExpIMSysHwcProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 2, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysHwcProductName.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysHwcProductName.setDescription('The Product name')
oacExpIMSysFactorySupplierID = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysFactorySupplierID.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysFactorySupplierID.setDescription('Supplier ID. Mapped to Mid field of product-info-area.\n\tString is empty if Mid field is not included in\n\tproduct-info-area.')
oacExpIMSysFactoryProductSalesCode = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysFactoryProductSalesCode.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysFactoryProductSalesCode.setDescription('OA Product Sales Code. Mapped to Mcode field of\n\tproduct-info-area. String is empty if Mcode field\n\tis not included in product-info-area.')
oacExpIMSysFactoryHwRevision = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 3, 2, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacExpIMSysFactoryHwRevision.setStatus('current')
if mibBuilder.loadTexts: oacExpIMSysFactoryHwRevision.setDescription('Hardware Revision. Mapped to Mrevision field of\n\tproduct-info-area. String is empty if Mrevision\n\tfield is not included in product-info-area.')
mibBuilder.exportSymbols("ONEACCESS-SYS-MIB", oacSysMemoryAllocated=oacSysMemoryAllocated, oacExpIMSysHwcClass=oacExpIMSysHwcClass, oacSysMIBModule=oacSysMIBModule, oacSysIMSysMainIdentifier=oacSysIMSysMainIdentifier, oacSysMemoryFree=oacSysMemoryFree, oacSysSecureCrashlogCount=oacSysSecureCrashlogCount, oacSysCpuUsedCoreType=oacSysCpuUsedCoreType, oacExpIMSysHwcDescription=oacExpIMSysHwcDescription, oacExpIMSysHwComponents=oacExpIMSysHwComponents, oacSysCpuUsedValue=oacSysCpuUsedValue, oacSysIMSysMainManufacturedIdentity=oacSysIMSysMainManufacturedIdentity, oacExpIMSysHwcSerialNumber=oacExpIMSysHwcSerialNumber, oacExpIMSysHwcProductName=oacExpIMSysHwcProductName, OASysHwcType=OASysHwcType, oacSysIMSysMainBoard=oacSysIMSysMainBoard, oacSysLastRebootCause=oacSysLastRebootCause, oacSysMemoryUsed=oacSysMemoryUsed, oacSysCpuUsedCoresTable=oacSysCpuUsedCoresTable, OASysCoreType=OASysCoreType, oacExpIMSysHwComponentsEntry=oacExpIMSysHwComponentsEntry, oacExpIMSysHwcIndex=oacExpIMSysHwcIndex, oacSysCpuUsed=oacSysCpuUsed, oacSysCpuStatistics=oacSysCpuStatistics, oacSysIMSysMainBSPVersion=oacSysIMSysMainBSPVersion, oacSysIMSysMainCPU=oacSysIMSysMainCPU, oacSysMemoryTotal=oacSysMemoryTotal, oacSysCpuUsedCoresCount=oacSysCpuUsedCoresCount, oacSysCpuUsedCoresEntry=oacSysCpuUsedCoresEntry, oacSysCpuUsedIndex=oacSysCpuUsedIndex, oacExpIMSysFactory=oacExpIMSysFactory, oacExpIMSysHwcType=oacExpIMSysHwcType, oacSysMemStatistics=oacSysMemStatistics, PYSNMP_MODULE_ID=oacSysMIBModule, oacExpIMSysHwComponentsTable=oacExpIMSysHwComponentsTable, oacExpIMSysFactoryProductSalesCode=oacExpIMSysFactoryProductSalesCode, oacExpIMSysHwcManufacturer=oacExpIMSysHwcManufacturer, oacSysIMSysMainManufacturedDate=oacSysIMSysMainManufacturedDate, oacSysIMSysMainBootDateCreation=oacSysIMSysMainBootDateCreation, oacExpIMSysFactorySupplierID=oacExpIMSysFactorySupplierID, oacExpIMSysHwComponentsCount=oacExpIMSysHwComponentsCount, oacExpIMSysStatistics=oacExpIMSysStatistics, oacSysIMSysMainBootVersion=oacSysIMSysMainBootVersion, oacExpIMSysFactoryHwRevision=oacExpIMSysFactoryHwRevision, oacSysStartCaused=oacSysStartCaused, oacSysCpuUsedOneMinuteValue=oacSysCpuUsedOneMinuteValue, OASysHwcClass=OASysHwcClass, oacExpIMSysHwcManufacturedDate=oacExpIMSysHwcManufacturedDate, oacExpIMSysHardwareDescription=oacExpIMSysHardwareDescription)
