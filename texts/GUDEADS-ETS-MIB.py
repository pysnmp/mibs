#
# PySNMP MIB module GUDEADS-ETS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/gude/GUDEADS-ETS-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 15:58:25 2024
# On host fv-az1205-935 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, Integer32, Counter32, TimeTicks, iso, ModuleIdentity, Counter64, Unsigned32, enterprises, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Counter32", "TimeTicks", "iso", "ModuleIdentity", "Counter64", "Unsigned32", "enterprises", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "NotificationType", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
gudeads = ModuleIdentity((1, 3, 6, 1, 4, 1, 28507))
gudeads.setRevisions(('2007-05-23 12:44',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: gudeads.setRevisionsDescriptions(('Initial version.',))
if mibBuilder.loadTexts: gudeads.setLastUpdated('200705231244Z')
if mibBuilder.loadTexts: gudeads.setOrganization('Gude Analog- und Digitalsysteme GmbH')
if mibBuilder.loadTexts: gudeads.setContactInfo('http://www.gudeads.com/')
if mibBuilder.loadTexts: gudeads.setDescription('')
etsPrimaryPowerChangeEvt = NotificationType((1, 3, 6, 1, 4, 1, 28507, 4, 0, 1)).setObjects(("GUDEADS-ETS-MIB", "etsPrimPowAvail"))
if mibBuilder.loadTexts: etsPrimaryPowerChangeEvt.setStatus('current')
if mibBuilder.loadTexts: etsPrimaryPowerChangeEvt.setDescription('Event is triggered when a primary power\n  changes')
etsSecondaryPowerChangeEvt = NotificationType((1, 3, 6, 1, 4, 1, 28507, 4, 0, 2)).setObjects(("GUDEADS-ETS-MIB", "etsSecPowAvail"))
if mibBuilder.loadTexts: etsSecondaryPowerChangeEvt.setStatus('current')
if mibBuilder.loadTexts: etsSecondaryPowerChangeEvt.setDescription('Event is triggered when a secondary power\n  changes')
etsSNMPaccess = MibIdentifier((1, 3, 6, 1, 4, 1, 28507, 4, 1, 1))
etsTrapCtrl = MibScalar((1, 3, 6, 1, 4, 1, 28507, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsTrapCtrl.setStatus('current')
if mibBuilder.loadTexts: etsTrapCtrl.setDescription('0 = off\n  1 = Ver. 1\n  2 = Ver. 2c')
etsTrapIPTable = MibTable((1, 3, 6, 1, 4, 1, 28507, 4, 1, 1, 2), )
if mibBuilder.loadTexts: etsTrapIPTable.setStatus('current')
if mibBuilder.loadTexts: etsTrapIPTable.setDescription('list of all Trap receiver')
etsTrapIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 28507, 4, 1, 1, 2, 1), ).setIndexNames((0, "GUDEADS-ETS-MIB", "etsTrapIPIndex"))
if mibBuilder.loadTexts: etsTrapIPEntry.setStatus('current')
if mibBuilder.loadTexts: etsTrapIPEntry.setDescription('an entry containing management\n  informations regarding the list of trap\n  receivers')
etsTrapIPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 28507, 4, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: etsTrapIPIndex.setStatus('current')
if mibBuilder.loadTexts: etsTrapIPIndex.setDescription('A unique value, greater than zero, for each receiver slot.')
etsTrapIPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 28507, 4, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024)).clone(162)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsTrapIPPort.setStatus('current')
if mibBuilder.loadTexts: etsTrapIPPort.setDescription('IP Port specifying one Trap receiver slot.\n  A value of  0 disables this slot.')
etsTrapIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 28507, 4, 1, 1, 2, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsTrapIPAddr.setStatus('current')
if mibBuilder.loadTexts: etsTrapIPAddr.setDescription("IP Address specifying one Trap receiver slot.\n  A value of '00000000'H disables this slot.")
gadsETS = MibIdentifier((1, 3, 6, 1, 4, 1, 28507, 4))
etsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28507, 4, 1))
etsPrimPowAvail = MibScalar((1, 3, 6, 1, 4, 1, 28507, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsPrimPowAvail.setStatus('current')
if mibBuilder.loadTexts: etsPrimPowAvail.setDescription('not zero if primary Power available')
etsSecPowAvail = MibScalar((1, 3, 6, 1, 4, 1, 28507, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsSecPowAvail.setStatus('current')
if mibBuilder.loadTexts: etsSecPowAvail.setDescription('not zero if secondary Power available')
etsSecManualSelect = MibScalar((1, 3, 6, 1, 4, 1, 28507, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsSecManualSelect.setStatus('current')
if mibBuilder.loadTexts: etsSecManualSelect.setDescription('not zero if secondary Power is manually selected')
etsEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 28507, 4, 0))
etsPowerSelect = MibScalar((1, 3, 6, 1, 4, 1, 28507, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsPowerSelect.setStatus('current')
if mibBuilder.loadTexts: etsPowerSelect.setDescription('if 1, power is primary\n  if 2, power is secondary')
etsConf = MibIdentifier((1, 3, 6, 1, 4, 1, 28507, 4, 3))
etsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 28507, 4, 3, 1))
etsCompls = MibIdentifier((1, 3, 6, 1, 4, 1, 28507, 4, 3, 2))
etsManualSelectEvt = NotificationType((1, 3, 6, 1, 4, 1, 28507, 4, 0, 3)).setObjects(("GUDEADS-ETS-MIB", "etsSecManualSelect"))
if mibBuilder.loadTexts: etsManualSelectEvt.setStatus('current')
if mibBuilder.loadTexts: etsManualSelectEvt.setDescription('triggered when secondary power is manually\n  selected')
etsPowerSelectEvt = NotificationType((1, 3, 6, 1, 4, 1, 28507, 4, 0, 4)).setObjects(("GUDEADS-ETS-MIB", "etsPowerSelect"))
if mibBuilder.loadTexts: etsPowerSelectEvt.setStatus('current')
if mibBuilder.loadTexts: etsPowerSelectEvt.setDescription('Event is triggered when power changes\n  between primary and secondary')
etsBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28507, 4, 3, 1, 1)).setObjects(("GUDEADS-ETS-MIB", "etsPrimPowAvail"), ("GUDEADS-ETS-MIB", "etsSecPowAvail"), ("GUDEADS-ETS-MIB", "etsSecManualSelect"), ("GUDEADS-ETS-MIB", "etsPowerSelect"), ("GUDEADS-ETS-MIB", "etsTrapCtrl"), ("GUDEADS-ETS-MIB", "etsTrapIPAddr"), ("GUDEADS-ETS-MIB", "etsTrapIPPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsBasicGroup = etsBasicGroup.setStatus('current')
if mibBuilder.loadTexts: etsBasicGroup.setDescription('Basic objects.')
etsNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 28507, 4, 3, 1, 2)).setObjects(("GUDEADS-ETS-MIB", "etsPrimaryPowerChangeEvt"), ("GUDEADS-ETS-MIB", "etsSecondaryPowerChangeEvt"), ("GUDEADS-ETS-MIB", "etsManualSelectEvt"), ("GUDEADS-ETS-MIB", "etsPowerSelectEvt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsNotificationGroup = etsNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: etsNotificationGroup.setDescription('')
mibBuilder.exportSymbols("GUDEADS-ETS-MIB", etsCompls=etsCompls, etsPowerSelect=etsPowerSelect, PYSNMP_MODULE_ID=gudeads, etsPrimPowAvail=etsPrimPowAvail, etsSecondaryPowerChangeEvt=etsSecondaryPowerChangeEvt, etsEvents=etsEvents, gudeads=gudeads, etsPrimaryPowerChangeEvt=etsPrimaryPowerChangeEvt, etsTrapIPAddr=etsTrapIPAddr, etsObjects=etsObjects, etsBasicGroup=etsBasicGroup, etsSNMPaccess=etsSNMPaccess, etsManualSelectEvt=etsManualSelectEvt, etsTrapIPTable=etsTrapIPTable, etsTrapIPPort=etsTrapIPPort, etsSecPowAvail=etsSecPowAvail, etsNotificationGroup=etsNotificationGroup, etsGroups=etsGroups, gadsETS=gadsETS, etsTrapCtrl=etsTrapCtrl, etsPowerSelectEvt=etsPowerSelectEvt, etsConf=etsConf, etsSecManualSelect=etsSecManualSelect, etsTrapIPEntry=etsTrapIPEntry, etsTrapIPIndex=etsTrapIPIndex)
