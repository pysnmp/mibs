#
# PySNMP MIB module NBS-FAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/mrv/NBS-FAN-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 16:01:00 2024
# On host fv-az1205-935 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NbsTcPartIndex, NbsTcStatusSimple, nbs = mibBuilder.importSymbols("NBS-MIB", "NbsTcPartIndex", "NbsTcStatusSimple", "nbs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Bits, ObjectIdentity, Counter32, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32, ModuleIdentity, Integer32, Unsigned32, Counter64, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "ObjectIdentity", "Counter32", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32", "ModuleIdentity", "Integer32", "Unsigned32", "Counter64", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nbsFanMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 629, 226))
if mibBuilder.loadTexts: nbsFanMib.setLastUpdated('201306270000Z')
if mibBuilder.loadTexts: nbsFanMib.setOrganization('NBS')
if mibBuilder.loadTexts: nbsFanMib.setContactInfo('For technical support, please contact your service channel')
if mibBuilder.loadTexts: nbsFanMib.setDescription('For managing cooling systems')
nbsFanFanGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 226, 1))
if mibBuilder.loadTexts: nbsFanFanGrp.setStatus('current')
if mibBuilder.loadTexts: nbsFanFanGrp.setDescription('Fans in trays and power supplies')
nbsFanEventsGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 226, 100))
if mibBuilder.loadTexts: nbsFanEventsGrp.setStatus('current')
if mibBuilder.loadTexts: nbsFanEventsGrp.setDescription('')
nbsFanEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 226, 100, 0))
if mibBuilder.loadTexts: nbsFanEvents.setStatus('current')
if mibBuilder.loadTexts: nbsFanEvents.setDescription('Event NOTIFICATIONS')
nbsFanFanTable = MibTable((1, 3, 6, 1, 4, 1, 629, 226, 1, 1), )
if mibBuilder.loadTexts: nbsFanFanTable.setStatus('current')
if mibBuilder.loadTexts: nbsFanFanTable.setDescription('Includes all fans in power supplies or fan trays')
nbsFanFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 226, 1, 1, 1), ).setIndexNames((0, "NBS-FAN-MIB", "nbsFanFanParentIfIndex"), (0, "NBS-FAN-MIB", "nbsFanFanParentPartIndex"), (0, "NBS-FAN-MIB", "nbsFanFanIndex"))
if mibBuilder.loadTexts: nbsFanFanEntry.setStatus('current')
if mibBuilder.loadTexts: nbsFanFanEntry.setDescription('A particular fan')
nbsFanFanParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 226, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsFanFanParentIfIndex.setStatus('current')
if mibBuilder.loadTexts: nbsFanFanParentIfIndex.setDescription('The ifIndex of the component where this fan is installed')
nbsFanFanParentPartIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 226, 1, 1, 1, 2), NbsTcPartIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsFanFanParentPartIndex.setStatus('current')
if mibBuilder.loadTexts: nbsFanFanParentPartIndex.setDescription('The nbsPartHardPartIndex of the component where this fan is installed')
nbsFanFanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 226, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsFanFanIndex.setStatus('current')
if mibBuilder.loadTexts: nbsFanFanIndex.setDescription('The ordinal Id of this fan, unique within its parent part.')
nbsFanFanDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 226, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsFanFanDescription.setStatus('current')
if mibBuilder.loadTexts: nbsFanFanDescription.setDescription('The nbsPartHardDescription of this fan')
nbsFanFanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 226, 1, 1, 1, 30), NbsTcStatusSimple()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsFanFanStatus.setStatus('current')
if mibBuilder.loadTexts: nbsFanFanStatus.setDescription('The operational status of this fan')
nbsFanFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 226, 1, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("low", 3), ("medium", 4), ("high", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsFanFanSpeed.setStatus('current')
if mibBuilder.loadTexts: nbsFanFanSpeed.setDescription('The speed level of this fan')
nbsFanFanTableSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 226, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsFanFanTableSize.setStatus('current')
if mibBuilder.loadTexts: nbsFanFanTableSize.setDescription('The number of rows in nbsFanFanTable')
nbsFanTrapFanStatusBad = NotificationType((1, 3, 6, 1, 4, 1, 629, 226, 100, 0, 30)).setObjects(("NBS-FAN-MIB", "nbsFanFanParentIfIndex"), ("NBS-FAN-MIB", "nbsFanFanParentPartIndex"), ("NBS-FAN-MIB", "nbsFanFanIndex"), ("NBS-FAN-MIB", "nbsFanFanDescription"), ("NBS-FAN-MIB", "nbsFanFanStatus"))
if mibBuilder.loadTexts: nbsFanTrapFanStatusBad.setStatus('current')
if mibBuilder.loadTexts: nbsFanTrapFanStatusBad.setDescription("Sent when fan's nbsFanFanStatus changes to bad (2)")
nbsFanTrapFanStatusOk = NotificationType((1, 3, 6, 1, 4, 1, 629, 226, 100, 0, 31)).setObjects(("NBS-FAN-MIB", "nbsFanFanParentIfIndex"), ("NBS-FAN-MIB", "nbsFanFanParentPartIndex"), ("NBS-FAN-MIB", "nbsFanFanIndex"), ("NBS-FAN-MIB", "nbsFanFanDescription"), ("NBS-FAN-MIB", "nbsFanFanStatus"))
if mibBuilder.loadTexts: nbsFanTrapFanStatusOk.setStatus('current')
if mibBuilder.loadTexts: nbsFanTrapFanStatusOk.setDescription("Sent when fan's nbsFanFanStatus changes to good (3)")
nbsFanTrapFanSpeedChanged = NotificationType((1, 3, 6, 1, 4, 1, 629, 226, 100, 0, 40)).setObjects(("NBS-FAN-MIB", "nbsFanFanParentIfIndex"), ("NBS-FAN-MIB", "nbsFanFanParentPartIndex"), ("NBS-FAN-MIB", "nbsFanFanIndex"), ("NBS-FAN-MIB", "nbsFanFanDescription"), ("NBS-FAN-MIB", "nbsFanFanSpeed"))
if mibBuilder.loadTexts: nbsFanTrapFanSpeedChanged.setStatus('current')
if mibBuilder.loadTexts: nbsFanTrapFanSpeedChanged.setDescription("Sent when fan's nbsFanFanSpeed changes")
mibBuilder.exportSymbols("NBS-FAN-MIB", nbsFanEventsGrp=nbsFanEventsGrp, PYSNMP_MODULE_ID=nbsFanMib, nbsFanFanTable=nbsFanFanTable, nbsFanFanIndex=nbsFanFanIndex, nbsFanFanTableSize=nbsFanFanTableSize, nbsFanTrapFanStatusOk=nbsFanTrapFanStatusOk, nbsFanTrapFanStatusBad=nbsFanTrapFanStatusBad, nbsFanEvents=nbsFanEvents, nbsFanFanSpeed=nbsFanFanSpeed, nbsFanFanGrp=nbsFanFanGrp, nbsFanFanEntry=nbsFanFanEntry, nbsFanFanParentIfIndex=nbsFanFanParentIfIndex, nbsFanFanDescription=nbsFanFanDescription, nbsFanMib=nbsFanMib, nbsFanFanStatus=nbsFanFanStatus, nbsFanTrapFanSpeedChanged=nbsFanTrapFanSpeedChanged, nbsFanFanParentPartIndex=nbsFanFanParentPartIndex)
