#
# PySNMP MIB module RS-COMMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/rs/RS-COMMON-MIB
# Produced by pysmi-1.1.12 at Wed Nov  6 08:35:19 2024
# On host fv-az984-999 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, NotificationType, ModuleIdentity, Integer32, Unsigned32, IpAddress, enterprises, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso, Counter32, Counter64, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "ModuleIdentity", "Integer32", "Unsigned32", "IpAddress", "enterprises", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso", "Counter32", "Counter64", "MibIdentifier", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rsRoot = ModuleIdentity((1, 3, 6, 1, 4, 1, 2566))
rsRoot.setRevisions(('2010-08-09 08:03',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rsRoot.setRevisionsDescriptions(('MODULE-IDENTITY added to RS-COMMON-MIB',))
if mibBuilder.loadTexts: rsRoot.setLastUpdated('201008090803Z')
if mibBuilder.loadTexts: rsRoot.setOrganization('Rohde&Schwarz GmbH & Co.KG')
if mibBuilder.loadTexts: rsRoot.setContactInfo('Rohde & Schwarz GmbH & Co. KG\n\t\t         Muehldorfstrasse 15\n\t\t         81671 Munich\n\t\t         Germany')
if mibBuilder.loadTexts: rsRoot.setDescription('The root OID of Rohde&Schwarz GmbH & Co.KG')
rsCommon = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 113))
if mibBuilder.loadTexts: rsCommon.setStatus('current')
if mibBuilder.loadTexts: rsCommon.setDescription('Sub-tree for common object and event definitions')
rsProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127))
if mibBuilder.loadTexts: rsProducts.setStatus('current')
if mibBuilder.loadTexts: rsProducts.setDescription('Sub-tree for products.')
rsProdBroadcast = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1))
if mibBuilder.loadTexts: rsProdBroadcast.setStatus('current')
if mibBuilder.loadTexts: rsProdBroadcast.setDescription('Sub-tree for broadcast products.')
rsProdBroadcastMeasurement = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 1))
if mibBuilder.loadTexts: rsProdBroadcastMeasurement.setStatus('current')
if mibBuilder.loadTexts: rsProdBroadcastMeasurement.setDescription('Sub-tree for broadcast measurement products.')
rsProdBroadcastTransmitter = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2))
if mibBuilder.loadTexts: rsProdBroadcastTransmitter.setStatus('current')
if mibBuilder.loadTexts: rsProdBroadcastTransmitter.setDescription('Sub-tree for broadcast transmitter products.')
rsProdBroadcastHeadend = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 3))
if mibBuilder.loadTexts: rsProdBroadcastHeadend.setStatus('current')
if mibBuilder.loadTexts: rsProdBroadcastHeadend.setDescription('Sub-tree for broadcast headend products.')
rsProdRadioCommunications = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 2))
if mibBuilder.loadTexts: rsProdRadioCommunications.setStatus('current')
if mibBuilder.loadTexts: rsProdRadioCommunications.setDescription('Sub-tree for radio communication products.')
rsProdRadioCommCommon = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 2, 1))
if mibBuilder.loadTexts: rsProdRadioCommCommon.setStatus('current')
if mibBuilder.loadTexts: rsProdRadioCommCommon.setDescription('Sub-tree for radio communication product common features.')
rsProdRadioCommSeries4200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 2, 2))
if mibBuilder.loadTexts: rsProdRadioCommSeries4200.setStatus('current')
if mibBuilder.loadTexts: rsProdRadioCommSeries4200.setDescription('Sub-tree for radio communication series 4200.')
rsProdRadioCommSystems = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 2, 3))
if mibBuilder.loadTexts: rsProdRadioCommSystems.setStatus('current')
if mibBuilder.loadTexts: rsProdRadioCommSystems.setDescription('Sub-tree for radio communication systems.')
rsProdRadioCommEquipment = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 2, 4))
if mibBuilder.loadTexts: rsProdRadioCommEquipment.setStatus('current')
if mibBuilder.loadTexts: rsProdRadioCommEquipment.setDescription('Sub-tree for radio communication equipment.')
rsRequirements = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 131))
if mibBuilder.loadTexts: rsRequirements.setStatus('current')
if mibBuilder.loadTexts: rsRequirements.setDescription('Sub-tree for management application requirements')
rsExperimental = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 137))
if mibBuilder.loadTexts: rsExperimental.setStatus('current')
if mibBuilder.loadTexts: rsExperimental.setDescription('Sub-tree for experimental definitions')
rsCapabilities = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 139))
if mibBuilder.loadTexts: rsCapabilities.setStatus('current')
if mibBuilder.loadTexts: rsCapabilities.setDescription('Sub-tree for agent capabilities')
rsRegistration = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 149))
if mibBuilder.loadTexts: rsRegistration.setStatus('current')
if mibBuilder.loadTexts: rsRegistration.setDescription('Sub-tree for registrations')
rsRegModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 1))
if mibBuilder.loadTexts: rsRegModules.setStatus('current')
if mibBuilder.loadTexts: rsRegModules.setDescription('Sub-tree for modules registrations')
rsRegBroadcast = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 2))
if mibBuilder.loadTexts: rsRegBroadcast.setStatus('current')
if mibBuilder.loadTexts: rsRegBroadcast.setDescription('Description.')
rsRegBroadcastMeasurement = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 2, 1))
if mibBuilder.loadTexts: rsRegBroadcastMeasurement.setStatus('current')
if mibBuilder.loadTexts: rsRegBroadcastMeasurement.setDescription('Description.')
rsRegBroadcastTransmitter = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 2, 2))
if mibBuilder.loadTexts: rsRegBroadcastTransmitter.setStatus('current')
if mibBuilder.loadTexts: rsRegBroadcastTransmitter.setDescription('Description.')
rsCrypto = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 151))
if mibBuilder.loadTexts: rsCrypto.setStatus('current')
if mibBuilder.loadTexts: rsCrypto.setDescription('Sub-tree for crypto algorithms')
mibBuilder.exportSymbols("RS-COMMON-MIB", rsExperimental=rsExperimental, rsRegModules=rsRegModules, rsRoot=rsRoot, rsRequirements=rsRequirements, rsCrypto=rsCrypto, rsCommon=rsCommon, rsProdRadioCommSeries4200=rsProdRadioCommSeries4200, PYSNMP_MODULE_ID=rsRoot, rsProdBroadcastHeadend=rsProdBroadcastHeadend, rsRegBroadcastMeasurement=rsRegBroadcastMeasurement, rsRegistration=rsRegistration, rsProdBroadcastMeasurement=rsProdBroadcastMeasurement, rsProducts=rsProducts, rsProdBroadcast=rsProdBroadcast, rsRegBroadcast=rsRegBroadcast, rsProdBroadcastTransmitter=rsProdBroadcastTransmitter, rsProdRadioCommCommon=rsProdRadioCommCommon, rsProdRadioCommSystems=rsProdRadioCommSystems, rsProdRadioCommEquipment=rsProdRadioCommEquipment, rsRegBroadcastTransmitter=rsRegBroadcastTransmitter, rsProdRadioCommunications=rsProdRadioCommunications, rsCapabilities=rsCapabilities)
