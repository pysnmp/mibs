#
# PySNMP MIB module VMWARE-VRNI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/vmware/VMWARE-VRNI-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 16:06:27 2024
# On host fv-az1245-338 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, NotificationType, ModuleIdentity, Counter64, Bits, Unsigned32, IpAddress, ObjectIdentity, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "ModuleIdentity", "Counter64", "Bits", "Unsigned32", "IpAddress", "ObjectIdentity", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32", "MibIdentifier")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
vmwNetworkInsight, = mibBuilder.importSymbols("VMWARE-ROOT-MIB", "vmwNetworkInsight")
VmwLongSnmpAdminString, = mibBuilder.importSymbols("VMWARE-TC-MIB", "VmwLongSnmpAdminString")
vmwNetworkInsightMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6876, 100, 1))
vmwNetworkInsightMIB.setRevisions(('2020-05-20 00:00', '2019-08-19 00:00', '2019-06-06 00:00', '2019-03-22 00:00', '2018-11-27 00:00', '2018-09-12 00:00', '2017-09-05 00:00', '2017-06-01 00:00', '2017-02-20 00:00', '2016-10-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: vmwNetworkInsightMIB.setRevisionsDescriptions(('This is the tenth revision of VMware vRealize Network Insight Manager SNMP notifications.\n    It adds fifty two new notifications, see vmwNetworkInsightNotificationGroup10.\n    ', 'This is the ninth revision of VMware vRealize Network Insight Manager SNMP notifications.\n    It adds two new notifications, see vmwNetworkInsightNotificationGroup9.\n    ', 'This is the eighth revision of VMware vRealize Network Insight Manager SNMP notifications.\n    It adds two new notifications, see vmwNetworkInsightNotificationGroup8.\n    ', 'This is the seventh revision of VMware vRealize Network Insight Manager SNMP notifications.\n    It adds seventeen new notifications, see vmwNetworkInsightNotificationGroup7.\n    ', 'This is the sixth revision of VMware vRealize Network Insight Manager SNMP notifications.\n    It adds fourteen new notifications, see vmwNetworkInsightNotificationGroup6.\n    ', 'This is the fifth revision of VMware vRealize Network Insight Manager SNMP notifications.\n    This revision introduces below changes, some of which are non backward compatible.\n      a. All event notifications have their varbind contents changed\n        from : OBJECTS { vmwAffectedObject, vmwEventSeverity, vmwVrniUrl, vmwTimestamp, vmwOperatorDesc, vmwEventName}\n        to : OBJECTS { vmwEventSeverity, vmwAffectedObject, vmwOperatorDesc, vmwVrniUrl, vmwTimestamp, vmwEventName }\n\n      b. Syntax changes for TC - VmwVrniSeverity\n        was { cleared(0), info(1), major(2) }\n        is now VmwVrniSeverity {Critical, Moderate, Warning, Info and CLEARED}\n\n      c. Support for new events added, see vmwNetworkInsightNotificationGroup5\n      ', 'This is the fourth revision of VMware vRealize Network Insight Manager SNMP notifications.\n    It adds fourteen new notifications, see vmwNetworkInsightNotificationGroup4.\n    ', 'This is the third revision of VMware vRealize Network Insight Manager SNMP notifications.\n     This version added nineteen new notifications, see vmwNetworkInsightNotificationGroup3\n     for complete listing.', 'This is the second revision of VMware vRealize Network Insight Manager SNMP notifications.\n     It introduces new notifications, see vmwNetworkInsightNotificationGroup2,\n     and updates existing notifications to append the vmwEventName managed object.', 'This is the first revision of VMware vRealize Network Insight Manager SNMP notifications.',))
if mibBuilder.loadTexts: vmwNetworkInsightMIB.setLastUpdated('202005200000Z')
if mibBuilder.loadTexts: vmwNetworkInsightMIB.setOrganization('VMware, Inc')
if mibBuilder.loadTexts: vmwNetworkInsightMIB.setContactInfo('VMware, Inc\n    3401 Hillview Ave\n    Palo Alto, CA 94304\n    Tel: 1-877-486-9273 or 650-427-5000\n    Fax: 650-427-5001\n    Web: http://communities.vmware.com/community/developer/forums/managementapi\n    ')
if mibBuilder.loadTexts: vmwNetworkInsightMIB.setDescription('This MIB module is for VMware vRealize Network Insight as described here:\n    https://www.vmware.com/support/pubs/vrealize-network-insight-pubs.html\n    ')
vmwVRNIEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0))
if mibBuilder.loadTexts: vmwVRNIEvents.setStatus('current')
if mibBuilder.loadTexts: vmwVRNIEvents.setDescription('All notifications from vRealize Network Insight fall under this oid.')
vmwVRNIData = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 100, 1, 1))
if mibBuilder.loadTexts: vmwVRNIData.setStatus('current')
if mibBuilder.loadTexts: vmwVRNIData.setDescription('All variables that are sent in notifications fall under this oid.')
class VmwVrniSeverity(TextualConvention, OctetString):
    description = 'Represents Event Severity, the values returned by TC are \n        Critical - All events which are critical in nature towards overall health of environment, could be show stoppers if not fixed\n        Moderate - Represents moderate severity, part of functionality could get affected\n        Warning - Event which may not represent immediate issue but could soon become one if not addressed\n        Info - Informational notifications\n        CLEARED - Event was closed by system.\n        '
    status = 'current'
    displayHint = '255t'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

vmwSnmpTrapsAreConfigured = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 101)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSnmpTrapsAreConfigured.setStatus('current')
if mibBuilder.loadTexts: vmwSnmpTrapsAreConfigured.setDescription('Initial trap to notify receiver that vRNI is now configured to send SNMP traps')
vmwSnmpTrapsAreDisabled = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 102)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSnmpTrapsAreDisabled.setStatus('current')
if mibBuilder.loadTexts: vmwSnmpTrapsAreDisabled.setDescription('Trap to notify receiver that vRNI is no longer configured to send SNMP traps')
vmwTestTrap = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 103)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwTestTrap.setStatus('current')
if mibBuilder.loadTexts: vmwTestTrap.setDescription('Test Trap')
vmwEntityDiscoveryChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20001)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEntityDiscoveryChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEntityDiscoveryChangeEvent.setDescription('Discovery Event')
vmwEntityPropertiesChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20002)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEntityPropertiesChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEntityPropertiesChangeEvent.setDescription('Property Change Event')
vmwFirewallNotInstalledOnHostEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20003)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFirewallNotInstalledOnHostEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFirewallNotInstalledOnHostEvent.setDescription('Firewall Not Installed On Host Event')
vmwHostWithStaleFirewallRulesEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20004)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostWithStaleFirewallRulesEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostWithStaleFirewallRulesEvent.setDescription('Host With Stale Firewall Rules Event')
vmwIpAddressChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20005)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwIpAddressChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwIpAddressChangeEvent.setDescription('Ip Address Change')
vmwL2GatewayAnomalyEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20006)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwL2GatewayAnomalyEvent.setStatus('current')
if mibBuilder.loadTexts: vmwL2GatewayAnomalyEvent.setDescription('L2 Gateway Anomaly Event')
vmwL2NetworkAddressAnomalyEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20007)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwL2NetworkAddressAnomalyEvent.setStatus('current')
if mibBuilder.loadTexts: vmwL2NetworkAddressAnomalyEvent.setDescription('L2 Network Address Anomaly Event')
vmwL2NetworkDiameterExceededEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20008)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwL2NetworkDiameterExceededEvent.setStatus('current')
if mibBuilder.loadTexts: vmwL2NetworkDiameterExceededEvent.setDescription('L2 Network Diameter Exceeded Event')
vmwL2NetworkUplinkMissingEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20009)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwL2NetworkUplinkMissingEvent.setStatus('current')
if mibBuilder.loadTexts: vmwL2NetworkUplinkMissingEvent.setDescription('L2 Network Uplink Missing Event')
vmwL2NetworkWithNoVMsEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20010)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwL2NetworkWithNoVMsEvent.setStatus('current')
if mibBuilder.loadTexts: vmwL2NetworkWithNoVMsEvent.setDescription('L2 Network With No VMs Event')
vmwLayer2NetworkDiameterChangedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20011)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwLayer2NetworkDiameterChangedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwLayer2NetworkDiameterChangedEvent.setDescription('Layer2 Network Diameter Changed Event')
vmwMTUMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20012)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwMTUMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwMTUMismatchEvent.setDescription('MTU Mismatch Event')
vmwNetworkIsolationEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20013)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNetworkIsolationEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkIsolationEvent.setDescription('Network Isolation Event')
vmwNoPathEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20014)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNoPathEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNoPathEvent.setDescription('No Path Event')
vmwSpoofguardDisabledEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20015)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSpoofguardDisabledEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSpoofguardDisabledEvent.setDescription('Spoofguard Disabled Event')
vmwVMotionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20018)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMotionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMotionEvent.setDescription('VMotion Event')
vmwVMWithDisconnectedVnicsEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20019)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMWithDisconnectedVnicsEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMWithDisconnectedVnicsEvent.setDescription('VM With Disconnected Vnics Event')
vmwVMWithMulipleVnicsOnDifferentVxlansEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20020)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMWithMulipleVnicsOnDifferentVxlansEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMWithMulipleVnicsOnDifferentVxlansEvent.setDescription('VM With Multiple Vnics On Different Vxlans Event')
vmwVMWithMulipleVnicsOnSameL2Event = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20021)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMWithMulipleVnicsOnSameL2Event.setStatus('current')
if mibBuilder.loadTexts: vmwVMWithMulipleVnicsOnSameL2Event.setDescription('VM With Multiple Vnics On Same L2 Event')
vmwVMWithNoIpAddressEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20022)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMWithNoIpAddressEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMWithNoIpAddressEvent.setDescription('VM With No Ip Address Event')
vmwVTEPMissingEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20023)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVTEPMissingEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVTEPMissingEvent.setDescription('VTEP Missing Event')
vmwL2Event = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20024)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwL2Event.setStatus('current')
if mibBuilder.loadTexts: vmwL2Event.setDescription('L2 Event')
vmwMembershipChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20025)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwMembershipChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwMembershipChangeEvent.setDescription('Membership Change')
vmwSecurityGroupMembershipChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20026)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSecurityGroupMembershipChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSecurityGroupMembershipChangeEvent.setDescription('Security Group Membership Change')
vmwFirewallRuleMembershipChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20027)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFirewallRuleMembershipChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFirewallRuleMembershipChangeEvent.setDescription('Firewall Rule Membership Change')
vmwVlanMembershipChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20028)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVlanMembershipChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVlanMembershipChangeEvent.setDescription('Vlan Membership Change')
vmwVxlanMembershipChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20029)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVxlanMembershipChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVxlanMembershipChangeEvent.setDescription('Vxlan Membership Change')
vmwDeleteChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20030)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDeleteChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDeleteChangeEvent.setDescription('Delete Event')
vmwVtepFailedPingEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20031)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVtepFailedPingEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVtepFailedPingEvent.setDescription('VTEP Ping Failure Event')
vmwEmptySearchStreamChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20034)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEmptySearchStreamChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEmptySearchStreamChangeEvent.setDescription('Search with no results')
vmwSearchStreamMembershipChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20035)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSearchStreamMembershipChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSearchStreamMembershipChangeEvent.setDescription('Search results changed')
vmwEmptySearchStreamProblemEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20036)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEmptySearchStreamProblemEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEmptySearchStreamProblemEvent.setDescription('Search with no results (Problem)')
vmwSearchStreamMembershipProblemEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20037)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSearchStreamMembershipProblemEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSearchStreamMembershipProblemEvent.setDescription('Search results changed (Problem)')
vmwOspfConfigurationMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20038)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwOspfConfigurationMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwOspfConfigurationMismatchEvent.setDescription('OSPF Mismatch Event')
vmwServiceVMNotHealthyEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20039)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwServiceVMNotHealthyEvent.setStatus('current')
if mibBuilder.loadTexts: vmwServiceVMNotHealthyEvent.setDescription('Service VM Not Healthy Event')
vmwServiceVMNotPoweredOnEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20040)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwServiceVMNotPoweredOnEvent.setStatus('current')
if mibBuilder.loadTexts: vmwServiceVMNotPoweredOnEvent.setDescription('Service VM Not Powered On Event')
vmwServiceVMHighCPUUsageEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20041)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwServiceVMHighCPUUsageEvent.setStatus('current')
if mibBuilder.loadTexts: vmwServiceVMHighCPUUsageEvent.setDescription('Service VM High CPU Usage Event')
vmwServiceVMHighMemoryUsageEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20042)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwServiceVMHighMemoryUsageEvent.setStatus('current')
if mibBuilder.loadTexts: vmwServiceVMHighMemoryUsageEvent.setDescription('Service VM High Memory Usage Event')
vmwServiceVMHighDiskUsageEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20043)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwServiceVMHighDiskUsageEvent.setStatus('current')
if mibBuilder.loadTexts: vmwServiceVMHighDiskUsageEvent.setDescription('Service VM High Disk Usage Event')
vmwIPSetPropertiesChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20050)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwIPSetPropertiesChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwIPSetPropertiesChangeEvent.setDescription('IPSet Change')
vmwFirewallRulePropertiesChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20051)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFirewallRulePropertiesChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFirewallRulePropertiesChangeEvent.setDescription('Firewall Rule Change')
vmwSecurityGroupPropertiesChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20052)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSecurityGroupPropertiesChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSecurityGroupPropertiesChangeEvent.setDescription('Security Group Change')
vmwIPSetMembershipChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20053)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwIPSetMembershipChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwIPSetMembershipChangeEvent.setDescription('IPSet Membership Change')
vmwFirewallRuleMaskEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20054)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFirewallRuleMaskEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFirewallRuleMaskEvent.setDescription('Firewall Rule Masked Event')
vmwSecurityMembershipChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20056)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSecurityMembershipChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSecurityMembershipChangeEvent.setDescription('Security Membership Change')
vmwSecurityTagPropertiesChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20057)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSecurityTagPropertiesChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSecurityTagPropertiesChangeEvent.setDescription('Security Tag Change')
vmwSecurityTagMembershipChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20058)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSecurityTagMembershipChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSecurityTagMembershipChangeEvent.setDescription('Security Tag Membership Change')
vmwHostDatastoreChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20059)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostDatastoreChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostDatastoreChangeEvent.setDescription('Host datastores changed')
vmwVMDatastoreChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20060)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMDatastoreChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMDatastoreChangeEvent.setDescription('VM datastores changed')
vmwVMSnapshotChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20061)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMSnapshotChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMSnapshotChangeEvent.setDescription('VM snapshot changed')
vmwVMVirtualDiskChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20062)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMVirtualDiskChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMVirtualDiskChangeEvent.setDescription('Virtual disk migrated')
vmwIPSetDefinitionMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20063)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwIPSetDefinitionMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwIPSetDefinitionMismatchEvent.setDescription('IPSET Definition Mismatch Event')
vmwSegmentMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20064)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSegmentMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSegmentMismatchEvent.setDescription('Segment Mismatch Event')
vmwVtepEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20065)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVtepEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVtepEvent.setDescription('Vtep Event')
vmwVtepConfigurationFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20066)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVtepConfigurationFaultEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVtepConfigurationFaultEvent.setDescription('Vtep Configuration Fault Event')
vmwVtepSubnetMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20068)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVtepSubnetMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVtepSubnetMismatchEvent.setDescription('Vtep Subnet Mismatch Event')
vmwVtepCountMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20069)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVtepCountMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVtepCountMismatchEvent.setDescription('Vtep Count Mismatch Event')
vmwDLRNetworksNotReachableEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20067)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDLRNetworksNotReachableEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDLRNetworksNotReachableEvent.setDescription('DLR Routing event')
vmwEdgeNetworksNotReachableEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20070)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEdgeNetworksNotReachableEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEdgeNetworksNotReachableEvent.setDescription('Edge Routing event')
vmwNiInfraChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20089)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNiInfraChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNiInfraChangeEvent.setDescription('NI Infra Change')
vmwDataSourceEnabledChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20090)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDataSourceEnabledChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDataSourceEnabledChangeEvent.setDescription('Data Source Enabled')
vmwDataSourceDisabledChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20091)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDataSourceDisabledChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDataSourceDisabledChangeEvent.setDescription('Data Source Disabled')
vmwDataSourceCreatedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20092)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDataSourceCreatedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDataSourceCreatedEvent.setDescription('Data Source Created')
vmwPlatformCpuCoreChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20093)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPlatformCpuCoreChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPlatformCpuCoreChangeEvent.setDescription('Platform CPU Change Event')
vmwPlatformDiskChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20094)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPlatformDiskChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPlatformDiskChangeEvent.setDescription('Platform Disk Change Event')
vmwPlatformMemoryChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20095)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPlatformMemoryChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPlatformMemoryChangeEvent.setDescription('Platform Memory Change Event')
vmwPlatformRebootedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20096)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPlatformRebootedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPlatformRebootedEvent.setDescription('Platform Reboot Change Event')
vmwProxyCpuCoreChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20097)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwProxyCpuCoreChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwProxyCpuCoreChangeEvent.setDescription('Collector CPU Change Event')
vmwProxyDiskChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20098)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwProxyDiskChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwProxyDiskChangeEvent.setDescription('Collector Disk Change Event')
vmwProxyMemoryChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20099)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwProxyMemoryChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwProxyMemoryChangeEvent.setDescription('Collector Memory Change Event')
vmwProxyRebootedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20100)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwProxyRebootedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwProxyRebootedEvent.setDescription('Collector Reboot Change Event')
vmwNIClusterChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20101)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNIClusterChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNIClusterChangeEvent.setDescription('Cluster Change Event')
vmwNISystemProxyChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20102)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNISystemProxyChangeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNISystemProxyChangeEvent.setDescription('System Proxy Change Event')
vmwNIClusterCreateEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 20103)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNIClusterCreateEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNIClusterCreateEvent.setDescription('Cluster Create Event')
vmwThresholdExceededEventCpuReady = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30001)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventCpuReady.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventCpuReady.setDescription('Threshold Exceeded Cpu Ready')
vmwThresholdExceededEventCpuCoStop = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30002)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventCpuCoStop.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventCpuCoStop.setDescription('Threshold Exceeded Cpu Co Stop')
vmwThresholdExceededEventDiskCommandAbortRule = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30003)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventDiskCommandAbortRule.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventDiskCommandAbortRule.setDescription('Threshold Exceeded Disk Command Abort Rule')
vmwThresholdExceededEventIODeviceLatencyRule = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30004)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventIODeviceLatencyRule.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventIODeviceLatencyRule.setDescription('Threshold Exceeded IO Device Latency Rule')
vmwThresholdExceededEventIOKernelLatencyRule = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30005)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventIOKernelLatencyRule.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventIOKernelLatencyRule.setDescription('Threshold Exceeded IO Kernel Latency Rule')
vmwThresholdExceededEventMemorySwapInRule = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30006)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventMemorySwapInRule.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventMemorySwapInRule.setDescription('Threshold Exceeded Memory Swap In Rule')
vmwThresholdExceededEventMemorySwapOutRule = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30007)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventMemorySwapOutRule.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventMemorySwapOutRule.setDescription('Threshold Exceeded Memory Swap Out Rule')
vmwThresholdExceededEventNetworkRxDropRule = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30008)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventNetworkRxDropRule.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventNetworkRxDropRule.setDescription('Threshold Exceeded Memory Rx Drop Rule')
vmwThresholdExceededEventNetworkTxDropRule = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30009)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventNetworkTxDropRule.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventNetworkTxDropRule.setDescription('Threshold Exceeded Memory Tx Drop Rule')
vmwAWSRegionSGLimitEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30010)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwAWSRegionSGLimitEvent.setStatus('current')
if mibBuilder.loadTexts: vmwAWSRegionSGLimitEvent.setDescription('AWS Region Security Group count near threshold.')
vmwAWSVPCSGLimitEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30011)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwAWSVPCSGLimitEvent.setStatus('current')
if mibBuilder.loadTexts: vmwAWSVPCSGLimitEvent.setDescription('AWS VPC Security Group count near threshold.')
vmwAWSSGInboundRuleLimitEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30012)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwAWSSGInboundRuleLimitEvent.setStatus('current')
if mibBuilder.loadTexts: vmwAWSSGInboundRuleLimitEvent.setDescription('AWS Security Group Inbound Rule count near threshold.')
vmwAWSSGOutboundRuleLimitEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30013)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwAWSSGOutboundRuleLimitEvent.setStatus('current')
if mibBuilder.loadTexts: vmwAWSSGOutboundRuleLimitEvent.setDescription('AWS Security Group Outbound Rule count near threshold.')
vmwAWSInterfaceSGLimitEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30014)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwAWSInterfaceSGLimitEvent.setStatus('current')
if mibBuilder.loadTexts: vmwAWSInterfaceSGLimitEvent.setDescription('AWS VPC Security Group count near threshold.')
vmwPacketDropEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30100)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPacketDropEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPacketDropEvent.setDescription('Packet Drop Event')
vmwSwitchPortPacketDropEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30101)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSwitchPortPacketDropEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSwitchPortPacketDropEvent.setDescription('Switch Port Packet Drop')
vmwRouterInterfacePacketDropEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30102)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwRouterInterfacePacketDropEvent.setStatus('current')
if mibBuilder.loadTexts: vmwRouterInterfacePacketDropEvent.setDescription('Router Interface Packet Drop')
vmwVnicPacketDropEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30103)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVnicPacketDropEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVnicPacketDropEvent.setDescription('Vnic Packet Drop')
vmwVTEPUnderlayPacketDropEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30104)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVTEPUnderlayPacketDropEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVTEPUnderlayPacketDropEvent.setDescription('VTEP Underlay Packet Drop')
vmwPnicUnderlyingSwitchPortPacketDropEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30105)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPnicUnderlyingSwitchPortPacketDropEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPnicUnderlyingSwitchPortPacketDropEvent.setDescription('PNIC Underlying Switch Port Packet Drop')
vmwDevicePacketDropEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30106)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDevicePacketDropEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDevicePacketDropEvent.setDescription('Device Packet Drop')
vmwThresholdExceededEventDatastoreFreeSpaceWarning = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30203)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventDatastoreFreeSpaceWarning.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventDatastoreFreeSpaceWarning.setDescription('ThresholdExceededEventDatastoreFreeSpaceWarning')
vmwThresholdExceededEventDatastoreFreeSpaceCritical = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30204)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventDatastoreFreeSpaceCritical.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventDatastoreFreeSpaceCritical.setDescription('ThresholdExceededEventDatastoreFreeSpaceCritical')
vmwThresholdExceededEventDatastoreReadLatency = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30205)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventDatastoreReadLatency.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventDatastoreReadLatency.setDescription('ThresholdExceededEventDatastoreReadLatency')
vmwThresholdExceededEventDatastoreWriteLatency = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30206)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventDatastoreWriteLatency.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventDatastoreWriteLatency.setDescription('ThresholdExceededEventDatastoreWriteLatency')
vmwDistributedFirewallApplyHostEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35001)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDistributedFirewallApplyHostEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDistributedFirewallApplyHostEvent.setDescription('Distributed Firewall Apply Host Event')
vmwDistributedFirewallApplyVMEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35002)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDistributedFirewallApplyVMEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDistributedFirewallApplyVMEvent.setDescription('Distributed Firewall Apply VM Event')
vmwNsxEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35003)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNsxEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNsxEvent.setDescription('NSX Event')
vmwFeatureImpactedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35004)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFeatureImpactedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFeatureImpactedEvent.setDescription('Feature Impacted Event')
vmwClusterFeatureVersionMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36022)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwClusterFeatureVersionMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwClusterFeatureVersionMismatchEvent.setDescription('Cluster Feature Mismatch Event')
vmwHostFeatureVersionMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36023)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostFeatureVersionMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostFeatureVersionMismatchEvent.setDescription('Host Feature Mismatch Event')
vmwFeatureVersionMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36024)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFeatureVersionMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFeatureVersionMismatchEvent.setDescription('Feature Version Mismatch Event')
vmwHostFeatureEnabledMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36025)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostFeatureEnabledMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostFeatureEnabledMismatchEvent.setDescription('Feature Enabled Mismatch Event')
vmwHostFeatureInstalledMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36026)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostFeatureInstalledMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostFeatureInstalledMismatchEvent.setDescription('Feature Installed Mismatch Event')
vmwHostVtepNotFoundEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36027)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostVtepNotFoundEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostVtepNotFoundEvent.setDescription('Host Vtep Not Found Event')
vmwHostVtepDisconnectedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36028)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostVtepDisconnectedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostVtepDisconnectedEvent.setDescription('Host Vtep Disconnected Event')
vmwHostVtepEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36029)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostVtepEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostVtepEvent.setDescription('Host Vtep Event')
vmwClusterHostsVtepMTUMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36030)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwClusterHostsVtepMTUMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwClusterHostsVtepMTUMismatchEvent.setDescription('Host Vtep Mtu Mismatch Event')
vmwFeatureUnhealthyEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36031)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFeatureUnhealthyEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFeatureUnhealthyEvent.setDescription('Feature Health Event')
vmwEdgeHANotConfiguredEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36032)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEdgeHANotConfiguredEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEdgeHANotConfiguredEvent.setDescription('NSX Edge High Availability is not enabled Event')
vmwEdgeInterfacesDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36033)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEdgeInterfacesDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEdgeInterfacesDownEvent.setDescription('One or More NSX Edge Interfaces are down Event')
vmwModuleUnhealthyEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36041)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwModuleUnhealthyEvent.setStatus('current')
if mibBuilder.loadTexts: vmwModuleUnhealthyEvent.setDescription('Module Unhealthy Event')
vmwModuleNotLoadedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36042)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwModuleNotLoadedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwModuleNotLoadedEvent.setDescription('Module Not Loaded Event')
vmwModuleNetworkConnectionFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36043)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwModuleNetworkConnectionFailureEvent.setStatus('current')
if mibBuilder.loadTexts: vmwModuleNetworkConnectionFailureEvent.setDescription('Module Network Connection Failure Event')
vmwHostNetworkControlPlaneMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36044)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostNetworkControlPlaneMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostNetworkControlPlaneMismatchEvent.setDescription('Control Plane Network Mismatch Event')
vmwHostNetworkControlPlaneConnectionFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36045)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostNetworkControlPlaneConnectionFailureEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostNetworkControlPlaneConnectionFailureEvent.setDescription('Control Plane Network Connection Failure Event')
vmwHostNetworkControlPlaneNotSyncedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36046)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostNetworkControlPlaneNotSyncedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostNetworkControlPlaneNotSyncedEvent.setDescription('Host Control Plane Sync Failure Event')
vmwNSXControllerClusterMajorityEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36047)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXControllerClusterMajorityEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXControllerClusterMajorityEvent.setDescription('NSX Controller Cluster Majority Event')
vmwNSXControllersVMOnSameHostEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36048)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXControllersVMOnSameHostEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXControllersVMOnSameHostEvent.setDescription('NSX Controllers VM On Same Host Event')
vmwVxLanRangeExhaustEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36049)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVxLanRangeExhaustEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVxLanRangeExhaustEvent.setDescription('Vxlan range exhaust  Event')
vmwNSXFirewallDefaultAllowAllRulesEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36050)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXFirewallDefaultAllowAllRulesEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXFirewallDefaultAllowAllRulesEvent.setDescription('NSX Firewall Allow All Rules Event')
vmwLogicalRouterNoUplinkEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36051)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwLogicalRouterNoUplinkEvent.setStatus('current')
if mibBuilder.loadTexts: vmwLogicalRouterNoUplinkEvent.setDescription('The NSX DLR is not configured with default route and may prevent external communication.\n      Check if the router configuration is only for routing between internal networks, or if external access is required. If external access is required, then configure an uplink interface on the NSX distributed logical router.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwEdgeNotHAEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36052)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEdgeNotHAEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEdgeNotHAEvent.setDescription('NSX Edge not Highly Available Event')
vmwEdgeNotDeployedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36053)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEdgeNotDeployedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEdgeNotDeployedEvent.setDescription('NSX Edge not deployed Event')
vmwEcmpIsEnabledAndStatefulServicesAreUpEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36054)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEcmpIsEnabledAndStatefulServicesAreUpEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEcmpIsEnabledAndStatefulServicesAreUpEvent.setDescription('NSX Edge Running with both ECMP and Stateful Edge Services Event')
vmwLogicalRouterDeployedOnEcmpEdgeHostEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36055)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwLogicalRouterDeployedOnEcmpEdgeHostEvent.setStatus('current')
if mibBuilder.loadTexts: vmwLogicalRouterDeployedOnEcmpEdgeHostEvent.setDescription('Logical Router and ECMP Edge on Same Host Event')
vmwEdgeMissingInterfaceOSPFAreaMappingEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36056)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEdgeMissingInterfaceOSPFAreaMappingEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEdgeMissingInterfaceOSPFAreaMappingEvent.setDescription('NSX Edge Interface to OSPF Area Mapping Missing Event')
vmwOspfInsecureAuthRouterEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36057)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwOspfInsecureAuthRouterEvent.setStatus('current')
if mibBuilder.loadTexts: vmwOspfInsecureAuthRouterEvent.setDescription('One or more OSPF areas on the NSX Edge are using insecure authentication Event')
vmwNSXControllersDeployedCountEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36058)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXControllersDeployedCountEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXControllersDeployedCountEvent.setDescription('NSX Controller count  Event')
vmwNSXControllerNotActiveCountEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36059)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXControllerNotActiveCountEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXControllerNotActiveCountEvent.setDescription('NSX Controller Not Active  Event')
vmwNSXControllerEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36060)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXControllerEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXControllerEvent.setDescription('NSX Controller Event')
vmwNSXEcmpEdgeDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36061)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXEcmpEdgeDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXEcmpEdgeDownEvent.setDescription('One or more NSX Edges in the ECMP Cluster are currently down')
vmwNSXMajorityEcmpEdgesDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36062)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXMajorityEcmpEdgesDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXMajorityEcmpEdgesDownEvent.setDescription('The majority of NSX Edges in the ECMP Cluster are currently down')
vmwNSXAllEcmpEdgesDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36063)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXAllEcmpEdgesDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXAllEcmpEdgesDownEvent.setDescription('All NSX Edges in the ECMP Cluster are currently down')
vmwNSXEdgeMtuMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36064)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXEdgeMtuMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXEdgeMtuMismatchEvent.setDescription('The MTU configured on one or more interfaces on the Edge does not match the MTU on the next hop router')
vmwNSXEdgeSplitBrainEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36065)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXEdgeSplitBrainEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXEdgeSplitBrainEvent.setDescription('Both VMs of Edge HA are in active state')
vmwVirtualDistributedRoutingEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36066)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVirtualDistributedRoutingEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVirtualDistributedRoutingEvent.setDescription('VDR Port Unset Event')
vmwNSXComponentEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35221)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXComponentEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXComponentEvent.setDescription('NSX Service not running event')
vmwNSXBackupEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35222)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXBackupEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXBackupEvent.setDescription('NSX Backup not configured')
vmwNSXBackupAuditLogExcludedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35223)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXBackupAuditLogExcludedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXBackupAuditLogExcludedEvent.setDescription('Audit Log excluded from NSX Backup')
vmwNSXUnsecureBackupEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35224)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXUnsecureBackupEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXUnsecureBackupEvent.setDescription('NSX Backups not using secure FTP')
vmwNSXBackupSystemEventsExcludedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35225)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXBackupSystemEventsExcludedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXBackupSystemEventsExcludedEvent.setDescription('System Event excluded from NSX Backup')
vmwNSXBackupNotScheduledEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35226)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXBackupNotScheduledEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXBackupNotScheduledEvent.setDescription('Scheduled backups are not enabled')
vmwNSXBackupNotRecordedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35227)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXBackupNotRecordedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXBackupNotRecordedEvent.setDescription('No backup of the environment has been recorded')
vmwNSXNtpServerEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35228)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXNtpServerEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXNtpServerEvent.setDescription('NTP Server not configured')
vmwNSXSysLogServerEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35229)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXSysLogServerEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXSysLogServerEvent.setDescription('Syslog Server not configured')
vmwControllerSysLogServerEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35230)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwControllerSysLogServerEvent.setStatus('current')
if mibBuilder.loadTexts: vmwControllerSysLogServerEvent.setDescription('Syslog Server not configured')
vmwNSXIpV6EnabledEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35231)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXIpV6EnabledEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXIpV6EnabledEvent.setDescription('IPv6 is enabled for NSX Manager')
vmwNSXOspfNeighborDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 35232)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXOspfNeighborDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXOspfNeighborDownEvent.setDescription('One or more OSPF Neighbors down')
vmwGenericNSXSystemEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70000)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwGenericNSXSystemEvent.setStatus('current')
if mibBuilder.loadTexts: vmwGenericNSXSystemEvent.setDescription('NSX System Event (Warning)')
vmwOtherCriticalNSXEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 71000)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwOtherCriticalNSXEvent.setStatus('current')
if mibBuilder.loadTexts: vmwOtherCriticalNSXEvent.setDescription('NSX System Event (Critical)')
vmwFilterConfigApplyOnHostFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70001)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFilterConfigApplyOnHostFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFilterConfigApplyOnHostFailedEvent.setDescription('Filter Config Apply On Host Failed Event')
vmwRulesetLoadOnHostFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70002)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwRulesetLoadOnHostFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwRulesetLoadOnHostFailedEvent.setDescription('Ruleset Load On Host Failed Event')
vmwConfigUpdateOnHostFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70003)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwConfigUpdateOnHostFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwConfigUpdateOnHostFailedEvent.setDescription('Config Update On Host Failed Event')
vmwSpoofguardConfigUpdateOnHostFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70004)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSpoofguardConfigUpdateOnHostFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSpoofguardConfigUpdateOnHostFailedEvent.setDescription('Spoofguard Config Update On Host Failed Event')
vmwApplyRuleToVnicFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70005)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwApplyRuleToVnicFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwApplyRuleToVnicFailedEvent.setDescription('Apply Rule To Vnic Failed Event')
vmwContainerConfigUpdateOnVnicFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70006)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwContainerConfigUpdateOnVnicFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwContainerConfigUpdateOnVnicFailedEvent.setDescription('Container Config Update On Vnic Failed Event')
vmwSpoofguardApplyToVnicFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70007)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSpoofguardApplyToVnicFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSpoofguardApplyToVnicFailedEvent.setDescription('Spoofguard Apply To Vnic Failed Event')
vmwHostMessagingConfigurationFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70008)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostMessagingConfigurationFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostMessagingConfigurationFailedEvent.setDescription('Host Messaging Configuration Failed Event')
vmwHostMessagingConnectionReconfigurationFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70009)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostMessagingConnectionReconfigurationFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostMessagingConnectionReconfigurationFailedEvent.setDescription('Host Messaging Connection Reconfiguration Failed Event')
vmwHostMessagingConfigurationFailedNotificationSkippedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70010)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostMessagingConfigurationFailedNotificationSkippedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostMessagingConfigurationFailedNotificationSkippedEvent.setDescription('Host Messaging Configuration Failed Notification Skipped Event')
vmwHostMessagingInfrastructureDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70011)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostMessagingInfrastructureDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostMessagingInfrastructureDownEvent.setDescription('Host Messaging Infrastructure Down Event')
vmwEdgeVMNotRespondingEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70012)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEdgeVMNotRespondingEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEdgeVMNotRespondingEvent.setDescription('Edge VM Responding Event')
vmwEdgeUnhealthyEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70013)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEdgeUnhealthyEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEdgeUnhealthyEvent.setDescription('Edge Health Event')
vmwEdgeVMCommunicationFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70014)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwEdgeVMCommunicationFailureEvent.setStatus('current')
if mibBuilder.loadTexts: vmwEdgeVMCommunicationFailureEvent.setDescription('Edge communication failure Event')
vmwNSXEdgeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 70015)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXEdgeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXEdgeEvent.setDescription('NSX Edge Event')
vmwPanEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80000)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPanEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPanEvent.setDescription('Palo Alto Event')
vmwPanNsxNotInRegisteredStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80001)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPanNsxNotInRegisteredStateEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPanNsxNotInRegisteredStateEvent.setDescription('Palo Alto NSX Registration Event')
vmwPanNsxDynamicUpdateDelayedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80002)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPanNsxDynamicUpdateDelayedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPanNsxDynamicUpdateDelayedEvent.setDescription('Palo Alto NSX Dynamic Update Event')
vmwPanDeviceInDisconnectedStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80003)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPanDeviceInDisconnectedStateEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPanDeviceInDisconnectedStateEvent.setDescription('Palo Alto Device Disconnect Event')
vmwPanNsxServiceApplianceViewMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80004)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPanNsxServiceApplianceViewMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPanNsxServiceApplianceViewMismatchEvent.setDescription('Palo Alto Service Device Mismatch Event')
vmwPanNsxFabricAgentNotFoundOnHostEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80005)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPanNsxFabricAgentNotFoundOnHostEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPanNsxFabricAgentNotFoundOnHostEvent.setDescription('NSX Fabric Agent Not Found Event')
vmwPanNsxServiceVMNotFoundOnHostEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80006)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPanNsxServiceVMNotFoundOnHostEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPanNsxServiceVMNotFoundOnHostEvent.setDescription('Palo Alto Service VM Not Found Event')
vmwCheckpointEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80100)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwCheckpointEvent.setStatus('current')
if mibBuilder.loadTexts: vmwCheckpointEvent.setDescription('Check Point Event')
vmwCheckpointNsxFabricAgentNotFoundOnHostEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80102)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwCheckpointNsxFabricAgentNotFoundOnHostEvent.setStatus('current')
if mibBuilder.loadTexts: vmwCheckpointNsxFabricAgentNotFoundOnHostEvent.setDescription('Check Point NSX Fabric Agent Not Found Event')
vmwCheckpointNsxServiceVMNotFoundOnHostEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80103)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwCheckpointNsxServiceVMNotFoundOnHostEvent.setStatus('current')
if mibBuilder.loadTexts: vmwCheckpointNsxServiceVMNotFoundOnHostEvent.setDescription('Check Point Service VM Not Found Event')
vmwCheckpointGatewaySicStatusNotCommunicatingEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80104)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwCheckpointGatewaySicStatusNotCommunicatingEvent.setStatus('current')
if mibBuilder.loadTexts: vmwCheckpointGatewaySicStatusNotCommunicatingEvent.setDescription('Check Point Gateway Sic Status Not Communicating Event')
vmwCheckpointNsxServiceApplianceViewMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80105)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwCheckpointNsxServiceApplianceViewMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwCheckpointNsxServiceApplianceViewMismatchEvent.setDescription('Check Point Service VM Mismatch Event')
vmwCriticalHostNotAccessibleEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 40001)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwCriticalHostNotAccessibleEvent.setStatus('current')
if mibBuilder.loadTexts: vmwCriticalHostNotAccessibleEvent.setDescription('Host with VMs running critical services is not accessible')
vmwIndexerLagEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80501)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwIndexerLagEvent.setStatus('current')
if mibBuilder.loadTexts: vmwIndexerLagEvent.setDescription('Index Lag Event')
vmwIPFIXFlowDPPausedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80502)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwIPFIXFlowDPPausedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwIPFIXFlowDPPausedEvent.setDescription('IPFIX Flow Data Provider Paused Event')
vmwGridProcessingStoppedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80503)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwGridProcessingStoppedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwGridProcessingStoppedEvent.setDescription('Grid Processing Stopped Event')
vmwUnableToSendEmailsEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80504)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnableToSendEmailsEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnableToSendEmailsEvent.setDescription('Unable to Send Emails Event')
vmwSMTPNotConfiguredEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80505)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSMTPNotConfiguredEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSMTPNotConfiguredEvent.setDescription('SMPT Not Configured Event')
vmwSNMPNotConfiguredEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80506)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSNMPNotConfiguredEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSNMPNotConfiguredEvent.setDescription('SNMP Not Configured Event')
vmwReindexingInProgressEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80507)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwReindexingInProgressEvent.setStatus('current')
if mibBuilder.loadTexts: vmwReindexingInProgressEvent.setDescription('Redindexing In Process Event')
vmwNodesVersionMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80508)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNodesVersionMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNodesVersionMismatchEvent.setDescription('Node Version Mismatch Event')
vmwNotAllServicesRunningEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80509)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNotAllServicesRunningEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNotAllServicesRunningEvent.setDescription('Not All Services Running Event')
vmwNotAllServicesHealthyEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80510)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNotAllServicesHealthyEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNotAllServicesHealthyEvent.setDescription('Not All Services Healthy Event')
vmwExpandPartitionFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80511)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwExpandPartitionFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwExpandPartitionFailedEvent.setDescription('Expand Partition Failed Event')
vmwDiskCleanupFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80512)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDiskCleanupFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDiskCleanupFailedEvent.setDescription('Disk Cleanup Failed Event')
vmwVaccumFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80513)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVaccumFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVaccumFailedEvent.setDescription('Vacuum Failed Event')
vmwConfigStoreCleanupFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80514)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwConfigStoreCleanupFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwConfigStoreCleanupFailedEvent.setDescription('Config Store Cleanup Failed Event')
vmwHBaseRetentionToolFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80515)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHBaseRetentionToolFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHBaseRetentionToolFailedEvent.setDescription('HBASE Retention Tool Failed Event')
vmwMetricStoreUpdaterFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80516)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwMetricStoreUpdaterFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwMetricStoreUpdaterFailedEvent.setDescription('Metric Store Updater Failed Event')
vmwCollectorLagEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80517)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwCollectorLagEvent.setStatus('current')
if mibBuilder.loadTexts: vmwCollectorLagEvent.setDescription('Collecter Lag Event')
vmwCollectionLagEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80518)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwCollectionLagEvent.setStatus('current')
if mibBuilder.loadTexts: vmwCollectionLagEvent.setDescription('Collection Lag Event')
vmwGridProcessingLagEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80519)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwGridProcessingLagEvent.setStatus('current')
if mibBuilder.loadTexts: vmwGridProcessingLagEvent.setDescription('Grid Processing Lag Event')
vmwConnectionErrorEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80520)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwConnectionErrorEvent.setStatus('current')
if mibBuilder.loadTexts: vmwConnectionErrorEvent.setDescription('Connection Error Event')
vmwNodeNotActiveEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80521)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNodeNotActiveEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNodeNotActiveEvent.setDescription('Node Not Active Event')
vmwHighDiskUtilizationEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80522)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHighDiskUtilizationEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHighDiskUtilizationEvent.setDescription('High Disk Utilization Event')
vmwIndexingAbortedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80523)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwIndexingAbortedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwIndexingAbortedEvent.setDescription('Indexing Aborted Event')
vmwUpgradeFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80524)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUpgradeFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUpgradeFailedEvent.setDescription('Upgrade Failed Event')
vmwFlowProcessingSuspendedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80525)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFlowProcessingSuspendedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFlowProcessingSuspendedEvent.setDescription('Flow Processing Suspended Event')
vmwVCNotOnSameProxyEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80643)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVCNotOnSameProxyEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVCNotOnSameProxyEvent.setDescription('VC_NOT_ON_SAME_PROXY_EVENT')
vmwNoDVSAvailableEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80642)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNoDVSAvailableEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNoDVSAvailableEvent.setDescription('NO_DVS_AVAILABLE_EVENT')
vmwUnknownInfobloxVersionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80641)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnknownInfobloxVersionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnknownInfobloxVersionEvent.setDescription('Infoblox version cannot be determined')
vmwUnsupportedInfobloxVersionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80640)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnsupportedInfobloxVersionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnsupportedInfobloxVersionEvent.setDescription('The version of Infoblox is not supported')
vmwIncorrectInfobloxCredentialEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80639)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwIncorrectInfobloxCredentialEvent.setStatus('current')
if mibBuilder.loadTexts: vmwIncorrectInfobloxCredentialEvent.setDescription('Invalid credentials or insufficient privileges')
vmwInfobloxRecordLimitExceededEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80638)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwInfobloxRecordLimitExceededEvent.setStatus('current')
if mibBuilder.loadTexts: vmwInfobloxRecordLimitExceededEvent.setDescription('The number of A records fetched from Infoblox exceeds the current limit')
vmwWebhookNotRunningEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80637)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwWebhookNotRunningEvent.setStatus('current')
if mibBuilder.loadTexts: vmwWebhookNotRunningEvent.setDescription('WEBHOOK_NOT_RUNNING_EVENT')
vmwIncorrectWebhookConfiguredOnAlertEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80636)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwIncorrectWebhookConfiguredOnAlertEvent.setStatus('current')
if mibBuilder.loadTexts: vmwIncorrectWebhookConfiguredOnAlertEvent.setDescription('INCORRECT_WEBHOOK_CONFIGURED_ON_ALERT_EVENT')
vmwWebhookNotEnabledOnAlertEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80635)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwWebhookNotEnabledOnAlertEvent.setStatus('current')
if mibBuilder.loadTexts: vmwWebhookNotEnabledOnAlertEvent.setDescription('WEBHOOK_NOT_ENABLED_ON_ALERT_EVENT')
vmwVRNIContentPackNotInstalledEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80634)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVRNIContentPackNotInstalledEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVRNIContentPackNotInstalledEvent.setDescription('vRNI_CONTENT_PACK_NOT_INSTALLED_EVENT')
vmwUnsupportedVRNIContentPackVersionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80633)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnsupportedVRNIContentPackVersionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnsupportedVRNIContentPackVersionEvent.setDescription('UNSUPPORTED_vRNI_CONTENT_PACK_VERSION_EVENT')
vmwUnsupportedLogInsightVersionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80632)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnsupportedLogInsightVersionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnsupportedLogInsightVersionEvent.setDescription('UNSUPPORTED_LOG_INSIGHT_VERSION_EVENT')
vmwComputeManagersNotAddedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80631)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwComputeManagersNotAddedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwComputeManagersNotAddedEvent.setDescription('COMPUTE_MANAGERS_NOT_ADDED_EVENT')
vmwComputeManagersNotFoundEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80630)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwComputeManagersNotFoundEvent.setStatus('current')
if mibBuilder.loadTexts: vmwComputeManagersNotFoundEvent.setDescription('COMPUTE_MANAGERS_NOT_FOUND_EVENT')
vmwUnsupportedNSXTVersionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80629)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnsupportedNSXTVersionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnsupportedNSXTVersionEvent.setDescription('UNSUPPORTED_NSXT_VERSION_EVENT')
vmwNotEmptyNodeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80628)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNotEmptyNodeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNotEmptyNodeEvent.setDescription('NOT_EMPTY_NODE_EVENT')
vmwFlowPhysicalNodeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80627)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFlowPhysicalNodeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFlowPhysicalNodeEvent.setDescription('FLOW_PHYSICAL_NODE_EVENT')
vmwFlowCollectionErrorEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 8061313)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFlowCollectionErrorEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFlowCollectionErrorEvent.setDescription('FLOW_COLLECTION_ERROR_EVENT')
vmwAWSThrottlingExceptionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 8061314)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwAWSThrottlingExceptionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwAWSThrottlingExceptionEvent.setDescription('AWS_THROTTLING_EXCEPTION_EVENT')
vmwAWSFlowLogAccessDeniedExceptionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 8061315)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwAWSFlowLogAccessDeniedExceptionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwAWSFlowLogAccessDeniedExceptionEvent.setDescription('AWS_FLOW_LOG_ACCESS_DENIED_EXCEPTION_EVENT')
vmwNSXIPFIXStatusMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80626)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXIPFIXStatusMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXIPFIXStatusMismatchEvent.setDescription('NSX_IPFIX_STATUS_MISMATCH_EVENT')
vmwNumVMsOrHostsNotFoundEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80625)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNumVMsOrHostsNotFoundEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNumVMsOrHostsNotFoundEvent.setDescription('NUM_VMS_OR_HOSTS_NOT_FOUND_EVENT')
vmwUnsupportedNSXVersionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 806100018)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnsupportedNSXVersionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnsupportedNSXVersionEvent.setDescription('UNSUPPORTED_NSX_VERSION_EVENT')
vmwPwdAuthModeDisabledAristaEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 806100012)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPwdAuthModeDisabledAristaEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPwdAuthModeDisabledAristaEvent.setDescription('PWD_AUTH_MODE_DISABLED_ARISTA_EVENT')
vmwHostnameResolutionErrorEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80624)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostnameResolutionErrorEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostnameResolutionErrorEvent.setDescription('HOSTNAME_RESOLUTION_ERROR_EVENT')
vmwPrimaryNSXNotAddedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80623)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPrimaryNSXNotAddedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPrimaryNSXNotAddedEvent.setDescription('PRIMARY_NSX_NOT_ADDED_EVENT')
vmwDataProviderNotRunningEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80622)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDataProviderNotRunningEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDataProviderNotRunningEvent.setDescription('DATA_PROVIDER_NOT_RUNNING_EVENT')
vmwInvalidResponseFromDatasourceEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80621)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwInvalidResponseFromDatasourceEvent.setStatus('current')
if mibBuilder.loadTexts: vmwInvalidResponseFromDatasourceEvent.setDescription('INVALID_RESPONSE_FROM_DATASOURCE_EVENT')
vmwHostNotReachableEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80620)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHostNotReachableEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHostNotReachableEvent.setDescription('HOST_NOT_REACHABLE_EVENT')
vmwNSXControllerNotFoundEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80619)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXControllerNotFoundEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXControllerNotFoundEvent.setDescription('NSX_CONTROLLER_NOT_FOUND_EVENT')
vmwUnexpectedDSTypeOrVersionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80618)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnexpectedDSTypeOrVersionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnexpectedDSTypeOrVersionEvent.setDescription('UNEXPECTED_DS_TYPE_OR_VERSION_EVENT')
vmwWarnConfigEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80617)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwWarnConfigEvent.setStatus('current')
if mibBuilder.loadTexts: vmwWarnConfigEvent.setDescription('WARN_CONFIG_EVENT')
vmwInvalidConfigEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80616)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwInvalidConfigEvent.setStatus('current')
if mibBuilder.loadTexts: vmwInvalidConfigEvent.setDescription('INVALID_CONFIG_EVENT')
vmwNotFoundEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80614)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNotFoundEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNotFoundEvent.setDescription('NOT_FOUND_EVENT')
vmwInsufficientPrivilegesEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80613)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwInsufficientPrivilegesEvent.setStatus('current')
if mibBuilder.loadTexts: vmwInsufficientPrivilegesEvent.setDescription('INSUFFICIENT_PRIVILEGES_EVENT')
vmwPwdAuthModeDisabledEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80612)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPwdAuthModeDisabledEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPwdAuthModeDisabledEvent.setDescription('PWD_AUTH_MODE_DISABLED_EVENT')
vmwFailedCredsEncryptEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80611)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFailedCredsEncryptEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFailedCredsEncryptEvent.setDescription('FAILED_CREDS_ENCRYPT_EVENT')
vmwSNMPConnectionInvalidEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80609)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSNMPConnectionInvalidEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSNMPConnectionInvalidEvent.setDescription('SNMP_CONNECTION_INVALID_EVENT')
vmwUnknownHostEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80608)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnknownHostEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnknownHostEvent.setDescription('UNKNOWN_HOST_EVENT')
vmwInvalidCredentialsEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80606)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwInvalidCredentialsEvent.setStatus('current')
if mibBuilder.loadTexts: vmwInvalidCredentialsEvent.setDescription('INVALID_CREDENTIALS_EVENT')
vmwIncorrectConnectionStringEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80605)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwIncorrectConnectionStringEvent.setStatus('current')
if mibBuilder.loadTexts: vmwIncorrectConnectionStringEvent.setDescription('INCORRECT_CONNECTION_STRING_EVENT')
vmwConnectionRefusedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80603)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwConnectionRefusedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwConnectionRefusedEvent.setDescription('CONNECTION_REFUSED_EVENT')
vmwTimeoutEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80602)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwTimeoutEvent.setStatus('current')
if mibBuilder.loadTexts: vmwTimeoutEvent.setDescription('TIMEOUT_EVENT')
vmwFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80601)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFailedEvent.setDescription('FAILED_EVENT')
vmwNSXTEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80200)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTEvent.setDescription('NSX-T Event')
vmwNSXTVcNotAddedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80201)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTVcNotAddedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTVcNotAddedEvent.setDescription('VC Not Added As Data Source Event')
vmwNSXTStandaloneHostsEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80202)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTStandaloneHostsEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTStandaloneHostsEvent.setDescription('Standalone hosts added in NSX-T Event')
vmwLargeSdmsDroppedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80526)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwLargeSdmsDroppedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwLargeSdmsDroppedEvent.setDescription('Data Processing Error')
vmwNSXTIPFixDFWStatusNotEnabledEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80650)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTIPFixDFWStatusNotEnabledEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTIPFixDFWStatusNotEnabledEvent.setDescription('NSXT_IPFIX_DFW_STATUS_NOT_ENABLED_EVENT')
vmwNSXTIPFixPortIncorrectEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80649)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTIPFixPortIncorrectEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTIPFixPortIncorrectEvent.setDescription('NSXT_IPFIX_PORT_INCORRECT_EVENT')
vmwNSXTIPFixCollectorAndIPFixProfileMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80648)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTIPFixCollectorAndIPFixProfileMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTIPFixCollectorAndIPFixProfileMismatchEvent.setDescription('NSXT_IPFIX_COLLECTOR_AND_IPFIX_PROFILE_MISMATCH_EVENT')
vmwNSXTIPFixIPFixProfilePriorityNotZeroEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80647)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTIPFixIPFixProfilePriorityNotZeroEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTIPFixIPFixProfilePriorityNotZeroEvent.setDescription('NSXT_IPFIX_IPFIX_PROFILE_PRIORITY_NOT_ZERO_EVENT')
vmwNSXTIPFixNoIPFixProfileEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80646)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTIPFixNoIPFixProfileEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTIPFixNoIPFixProfileEvent.setDescription('NSXT_IPFIX_NO_IPFIX_PROFILE_EVENT')
vmwNSXTIPFixNoNewCollectorProfileCanBeAddedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80645)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTIPFixNoNewCollectorProfileCanBeAddedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTIPFixNoNewCollectorProfileCanBeAddedEvent.setDescription('NSXT_IPFIX_NO_NEW_COLLECTOR_PROFILE_CAN_BE_ADDED_EVENT')
vmwNSXTIPFixNoCollectorProfileEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80644)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTIPFixNoCollectorProfileEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTIPFixNoCollectorProfileEvent.setDescription('NSXT_IPFIX_NO_COLLECTOR_PROFILE_EVENT')
vmwNSXTSystemEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80203)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTSystemEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTSystemEvent.setDescription("These are the alarms/events reported by NSX-T. 'Source Component' specifies the entity emmitting this event. \n      It can be Manager/Controller/Edge. Combination of fields like Source Component, Event Type, Severity and message can be used to troubleshoot NSX-T appliance.\n      For further information, log into NSX-T Manager UI and visit Dashboard")
vmwNSXTNoUplinkConnectivityEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80205)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTNoUplinkConnectivityEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTNoUplinkConnectivityEvent.setDescription('NSX-T Tier-1 logical router is disconnected from Tier-0 router. Networks under this router are not reachable from outside and vice versa.\n      For more details, please log into vRNI, navigate to Settings -> Events')
vmwNSXTRoutingAdvertisementEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80206)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTRoutingAdvertisementEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTRoutingAdvertisementEvent.setDescription('Routing advertisement is disabled for NSX-T Tier-1 logical router. Networks under this router are not reachable from outside.\n      For more details, please log into vRNI, navigate to Settings -> Events')
vmwNSXTManagerConnectivityDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80207)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTManagerConnectivityDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTManagerConnectivityDownEvent.setDescription('NSX-T Edge Node has lost manager connectivity.\n       For more details, please log into vRNI, navigate to Settings -> Events')
vmwNSXTControllerConnectivityDegradedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80208)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTControllerConnectivityDegradedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTControllerConnectivityDegradedEvent.setDescription('NSX-T Edge Node is not able to communicate with one or more controllers.\n      For more details, please log into vRNI, navigate to Settings -> Events')
vmwNSXTControllerConnectivityDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80209)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTControllerConnectivityDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTControllerConnectivityDownEvent.setDescription('NSX-T Edge Node is not able to communicate with any of the controllers.\n      For more details, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMtuMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80210)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMtuMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMtuMismatchEvent.setDescription('The MTU configured on interface(s) of Tier-0 logical router do not match with the interface(s) of uplink switch/router from same L2 network. This may impact network performance.\n      For more details, please log into vRNI, navigate to Settings -> Events')
vmwNSXEdgeBGPNeighbourDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 36067)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXEdgeBGPNeighbourDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXEdgeBGPNeighbourDownEvent.setDescription('One or more BGP neighbours are not in established state.\n      For more details, please log into vRNI, navigate to Settings -> Events')
vmwAnalyticsEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 37001)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwAnalyticsEvent.setStatus('current')
if mibBuilder.loadTexts: vmwAnalyticsEvent.setDescription('Meta event for Analytics Event\n      For more details, please log into vRNI, navigate to Settings -> Events')
vmwAnalyticsOutlierEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 37002)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwAnalyticsOutlierEvent.setStatus('current')
if mibBuilder.loadTexts: vmwAnalyticsOutlierEvent.setDescription('Meta event for Outlier Events\n      For more details, please log into vRNI, navigate to Settings -> Events.\n      ')
vmwAnalyticsThresholdEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 37003)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwAnalyticsThresholdEvent.setStatus('current')
if mibBuilder.loadTexts: vmwAnalyticsThresholdEvent.setDescription('Meta event for Threshold Events\n      For more details, please log into vRNI, navigate to Settings -> Events')
vmwVMCEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 38001)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMCEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMCEvent.setDescription('Meta event for VMC Events.\n      For more details, please log into vRNI, navigate to Settings -> Events')
vmwPolicyManagerVrniDfwIPFixCollectorAbsent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80652)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPolicyManagerVrniDfwIPFixCollectorAbsent.setStatus('current')
if mibBuilder.loadTexts: vmwPolicyManagerVrniDfwIPFixCollectorAbsent.setDescription('Network Insight IPFIX Collector is absent on VMC Policy Manager.\n      For more details, please log into vRNI, navigate to Settings -> Events')
vmwPolicyManagerNoDfwIPFixProfile = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80651)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPolicyManagerNoDfwIPFixProfile.setStatus('current')
if mibBuilder.loadTexts: vmwPolicyManagerNoDfwIPFixProfile.setDescription('DFW IPFIX Profile is absent on VMC Policy Manager.\n      For more details, please log into vRNI, navigate to Settings -> Events.')
vmwNSXTExcludedVmFlowEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80211)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTExcludedVmFlowEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTExcludedVmFlowEvent.setDescription('One or more VMs are not protected by NSX-T DFW firewall. Network Insight will not receive IPFIX flows for these VMs.\n      Remove the relevant logical switches, logical ports or security groups from the NSX-T firewall exclusion list to enable flows.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTDoubleVlanTaggingEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80212)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTDoubleVlanTaggingEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTDoubleVlanTaggingEvent.setDescription('Communication will be disrupted because Vlan on uplink port of Tier 0 router is different than Vlan on the external gateway.\n      Vlan is misconfigured on the tier-0 router. Make sure Vlan matches with the Vlan on the external gateway.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTNoTzAttachedOnTnEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80213)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTNoTzAttachedOnTnEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTNoTzAttachedOnTnEvent.setDescription('NSX-T Transport node is not attached to any transport zone. VMs might loose connectivity because of this.\n      Ensure that the transport node is attached to some transport zone.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTVtepDeleteEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80214)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTVtepDeleteEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTVtepDeleteEvent.setDescription('All vteps are deleted from the transport node. VMs might loose connectivity because of this.\n      Make sure vteps/vmknics are not deleted from the transport node. You may check all available vteps/vmknics in NSX-T->Fabric Nodes->Transport Node->Monitor of each of the impacted transport nodes.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwDuplicateL3SwitchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80215)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDuplicateL3SwitchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDuplicateL3SwitchEvent.setDescription('Same Switch or Router is added with different IPs. VM to VM path may not be generated.\n      Delete duplicate Switches or Routers from Data Source.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwLBPoolMemberDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80216)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwLBPoolMemberDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwLBPoolMemberDownEvent.setDescription("This event is raised when pool member of load balancer is down.\n      Ensure that pool member has not been disabled by the administrator.\n      Ensure that pool/pool-member uses the correct Health Monitors which are getting required responses from the backend server.\n      Ensure that backend server used by this pool member is functional.\n      For more details, log into Load Balancer UI, navigate to Local Traffic -> Pools -> Pools List.\n      Also check documentation at https://support.f5.com/csp/article/K12531\n      Alternatively, you can log into vRNI UI and search 'Pool Member where state = DISABLED'.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwLBPoolDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80217)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwLBPoolDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwLBPoolDownEvent.setDescription('This event is raised when pool of load balancer is down.\n      Ensure that pool has at least one functional pool member.\n      For more details, log into Load Balancer UI, navigate to Local Traffic -> Pools\n      Also check documentation at https://support.f5.com/csp/article/K12531\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwLBPoolEmptyEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80218)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwLBPoolEmptyEvent.setStatus('current')
if mibBuilder.loadTexts: vmwLBPoolEmptyEvent.setDescription("This event is raised when pool of load balancer is empty.\n      Ensure that pool has at least one pool member.\n      For more details, log into Load Balancer UI, navigate to Local Traffic -> Pools\n      Also check documentation at https://support.f5.com/csp/article/K12531\n      Alternatively, you can log into vRNI and search 'Pool where PoolMembers Count = 0'.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwLBPoolMemberVMDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80219)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwLBPoolMemberVMDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwLBPoolMemberVMDownEvent.setDescription('This event is raised when VM associated with pool member of load balancer is down.\n      Check if VM associated with pool member is powered on and running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwLBVirtualServerDisableEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80220)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwLBVirtualServerDisableEvent.setStatus('current')
if mibBuilder.loadTexts: vmwLBVirtualServerDisableEvent.setDescription('This event is raised when virtual server of load balancer is disabled.\n      To enable virtual server, open load balancer GUI and check virtual server state.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwLBServiceNodeIPNotFoundEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80221)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwLBServiceNodeIPNotFoundEvent.setStatus('current')
if mibBuilder.loadTexts: vmwLBServiceNodeIPNotFoundEvent.setDescription('This event is raised when no NIC associated with IP of service node of load balancer is found.\n      Ensure that VM which has IP of Service Node exist.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwLBServiceNodeMultipleNicFoundEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80222)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwLBServiceNodeMultipleNicFoundEvent.setStatus('current')
if mibBuilder.loadTexts: vmwLBServiceNodeMultipleNicFoundEvent.setDescription('This event is raised when multiple NICs associated with IP of service node of load balancer are found.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events.')
vmwKubernetesInsufficientPrivilegesEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80655)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwKubernetesInsufficientPrivilegesEvent.setStatus('current')
if mibBuilder.loadTexts: vmwKubernetesInsufficientPrivilegesEvent.setDescription('One or more Kubernetes Cluster Service Accounts do not have sufficient privileges.\n      Please verify that all Kubernetes Cluster Service Accounts has List and Watch privileges.\n      Refer - https://kubernetes.io/docs/reference/access-authn-authz/rbac/#service-account-permissions\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwPKSKubernetesUnknownHostEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80654)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwPKSKubernetesUnknownHostEvent.setStatus('current')
if mibBuilder.loadTexts: vmwPKSKubernetesUnknownHostEvent.setDescription('Please verify the Kubernetes Cluster API Servers are reachable from Collector VM.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwDatasourceIdentificationChangedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80653)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDatasourceIdentificationChangedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDatasourceIdentificationChangedEvent.setDescription('The data source identity information such as certificate or the key has changed.\n      Re-verify the identity information on data source page in vRNI.\n      System will auto accept the new identification. If issue persists for more than an hour, please contact support.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwArkinApplicationMemberLimitEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 568)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwArkinApplicationMemberLimitEvent.setStatus('current')
if mibBuilder.loadTexts: vmwArkinApplicationMemberLimitEvent.setDescription('Number of members in application exceeds supported limit.\n      Reduce number of members in the application.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTSwitchIpfixEnabledEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80223)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTSwitchIpfixEnabledEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTSwitchIpfixEnabledEvent.setDescription('Network Insight does not support the IPFIX flow data from NSX-T Switches. It is configured to send IPFIX data to one of the Network Insight Collector VM. It may have corrupted existing flow data in the system.\n      Remove Network Insight Collector VM IP Address from the NSX-T Switch collector profiles which are used in NSX-T Switch IPFIX profiles.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUANIFileNotProvidedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80657)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUANIFileNotProvidedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUANIFileNotProvidedEvent.setDescription('Configuration file required by Generic Routers & Switches Data Source has not been provided while data source creation. To resolve this issue, please go to vRNI web UI, under settings page, edit intended Generic Routers & Switches Data Source and add configuration file.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUANIFileDoesNotExistEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80658)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUANIFileDoesNotExistEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUANIFileDoesNotExistEvent.setDescription('Configuration file required by Generic Routers & Switches Data Source has been deleted manually or moved. To resolve this issue, please go to vRNI web UI, under settings page, edit intended Generic Routers & Switches Data Source and add configuration file.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTStandaloneHostsWithoutVcEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80224)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTStandaloneHostsWithoutVcEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTStandaloneHostsWithoutVcEvent.setDescription('vCenter managing one or more fabric nodes in NSX-T is not added as a data source in vRNI. Virtual Machines on those hosts will not be visible in vRNI.\n      Please add the vCenter server managing the standalone hosts as a datasource into vRNI at- Settings -> Accounts and Data Sources -> Add Source -> VMware vCenter\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwApplianceNotConfiguredEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80527)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwApplianceNotConfiguredEvent.setStatus('current')
if mibBuilder.loadTexts: vmwApplianceNotConfiguredEvent.setDescription("Collector VM configuration is incomplete.\n      To reconfigure proxy, please run 'setup' CLI from console mode. \n      https://docs.vmware.com/en/VMware-vRealize-Network-Insight/3.8/com.vmware.vrni.cli.doc/GUID-B48AD03A-5FC8-4396-9C27-9523307C688C.html\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwSwitchPortOperationalDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30111)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSwitchPortOperationalDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSwitchPortOperationalDownEvent.setDescription('Switchport operational status change detected. It is operationally down. This may impact the network traffic on the device.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwRouterInterfaceOperationalDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30112)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwRouterInterfaceOperationalDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwRouterInterfaceOperationalDownEvent.setDescription('Router interface operational status change detected. It is operationally down. This may impact the network traffic on the device.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUnderlayDeviceGenericEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30114)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnderlayDeviceGenericEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnderlayDeviceGenericEvent.setDescription('This is generic representation for events on Underlay device.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUnderlayDeviceFexOfflineEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30115)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnderlayDeviceFexOfflineEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnderlayDeviceFexOfflineEvent.setDescription('A FEX has gone offline on the device. Please check the FEX status on the device. This may impact the network traffic on the device.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUnderlayDeviceFanMalFunctionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30116)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnderlayDeviceFanMalFunctionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnderlayDeviceFanMalFunctionEvent.setDescription('A fan on the device is not either removed or not working. It may impact the overheating of the device.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUnderlayDeviceTemperatureThresholdExceededEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30117)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnderlayDeviceTemperatureThresholdExceededEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnderlayDeviceTemperatureThresholdExceededEvent.setDescription('A module on the device has reported major/minor temperature alarm. Please check the sensor mentioned in the event message on the device.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUnderlayDeviceFexFanMalFunctionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30118)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnderlayDeviceFexFanMalFunctionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnderlayDeviceFexFanMalFunctionEvent.setDescription('A fan on the FEX chassis is either removed or not working. It may impact the overheating of the FEX device.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUnderlayDeviceFexPsMalFunctionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30119)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnderlayDeviceFexPsMalFunctionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnderlayDeviceFexPsMalFunctionEvent.setDescription('A Power supply on the FEX chassis is either removed or not working. It may impact the FEX device functionality.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUnderlayDeviceModuleMalFunctionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30120)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnderlayDeviceModuleMalFunctionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnderlayDeviceModuleMalFunctionEvent.setDescription('A module/line card on the device is either removed or not working. This may impact the network traffic on the device.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUnderlayDevicePsMalFunctionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30121)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnderlayDevicePsMalFunctionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnderlayDevicePsMalFunctionEvent.setDescription('A Power supply on the device is either removed or not working. It may impact the device functionality.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUnderlayDeviceBfdSessionRemovedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30122)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnderlayDeviceBfdSessionRemovedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnderlayDeviceBfdSessionRemovedEvent.setDescription('A BFD session is deleted on the device. This will result in routing table changes and may impact the network traffic on the device.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwUnderlayDeviceLldpNeighbourRemovedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30123)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwUnderlayDeviceLldpNeighbourRemovedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwUnderlayDeviceLldpNeighbourRemovedEvent.setDescription('A LLDP neighbour is removed from the device. This will result in the network topology changes and may impact the network traffic on the device.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwThresholdExceededEventDataSourceCpuUsage = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30198)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventDataSourceCpuUsage.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventDataSourceCpuUsage.setDescription('A threshold-crossing CPU usage detected on host FRUs.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwThresholdExceededEventDataSourceMemoryUsage = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30199)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventDataSourceMemoryUsage.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventDataSourceMemoryUsage.setDescription('A threshold-crossing memory usage detected on host FRUs.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwThresholdExceededEventDataSourceTemperature = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30200)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwThresholdExceededEventDataSourceTemperature.setStatus('current')
if mibBuilder.loadTexts: vmwThresholdExceededEventDataSourceTemperature.setDescription('A threshold-crossing temperature detected on host FRUs.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwDeploymentDefMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80532)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDeploymentDefMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDeploymentDefMismatchEvent.setDescription('Capacity configuration is mismatched. Please reconfigure.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNsxtLatencyServiceConfigMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80669)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNsxtLatencyServiceConfigMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNsxtLatencyServiceConfigMismatchEvent.setDescription('The Latency Service Config configured on NSX-T is different from this Network Insight deployment. As a result, Network Insight is not receiving Latency information from NSX-T.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNsxtLatencyNodeGroupMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80668)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNsxtLatencyNodeGroupMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNsxtLatencyNodeGroupMismatchEvent.setDescription('The Latency Node Group configured on NSX-T is different from this Network Insight deployment. As a result, Network Insight is not receiving Latency information from NSX-T.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNsxtLatencyStatProfileMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80667)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNsxtLatencyStatProfileMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNsxtLatencyStatProfileMismatchEvent.setDescription('The Latency Stat profile configured on NSX-T is different from this Network Insight deployment. As a result, Network Insight is not receiving Latency information from NSX-T.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwHybridConnectBgpStatusDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 1279)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHybridConnectBgpStatusDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHybridConnectBgpStatusDownEvent.setDescription('This event is raised when BGP status is Down.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTClusterBackUpDisabledEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80256)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTClusterBackUpDisabledEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTClusterBackUpDisabledEvent.setDescription('NSX-T Manager backup is not scheduled.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTDFWFirewallDisabledEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80257)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTDFWFirewallDisabledEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTDFWFirewallDisabledEvent.setDescription('Distributed Firewall is disabled in the NSX-T Manager.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTComputeManagerConnectionStatusNotUpEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80255)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTComputeManagerConnectionStatusNotUpEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTComputeManagerConnectionStatusNotUpEvent.setDescription('NSX-T Compute Manager Connection status is not up. \n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTLogicalSwitchAdminStatusDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80252)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTLogicalSwitchAdminStatusDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTLogicalSwitchAdminStatusDownEvent.setDescription("NSX-T Logical Switch Admin Status is 'Down'.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTLogicalPortOperationalStatusDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80253)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTLogicalPortOperationalStatusDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTLogicalPortOperationalStatusDownEvent.setDescription("NSX-T Logical Port Operational Status is 'Down'. This could cause a communication failure between two virtual interfaces (VIFs) that are connected to the same logical switch, for example, you cannot ping one VM from another.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTLogicalPortOperationalStatusUnknownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80254)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTLogicalPortOperationalStatusUnknownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTLogicalPortOperationalStatusUnknownEvent.setDescription("NSX-T Logical Port Operational Status is 'Unknown'. This could cause a communication failure between two virtual interfaces (VIFs) that are connected to the same logical switch, for example, you cannot ping one VM from another.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTLogicalPortReceivedPacketDropEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80258)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTLogicalPortReceivedPacketDropEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTLogicalPortReceivedPacketDropEvent.setDescription('Received packets are getting dropped on the NSX-T Logical Port and associated entities might get affected.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTLogicalPortTransmittedPacketDropEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80259)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTLogicalPortTransmittedPacketDropEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTLogicalPortTransmittedPacketDropEvent.setDescription('Transmitted packets are getting dropped on the NSX-T Logical Port and associated entities might get affected.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTLogicalSwitchReceivedPacketDropEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80260)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTLogicalSwitchReceivedPacketDropEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTLogicalSwitchReceivedPacketDropEvent.setDescription('Received packets are getting dropped on the NSX-T Logical Switch and associated entities might get affected.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTLogicalSwitchTransmittedPacketDropEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80261)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTLogicalSwitchTransmittedPacketDropEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTLogicalSwitchTransmittedPacketDropEvent.setDescription('Transmitted packets are getting dropped on the NSX-T Logical Switch and associated entities might get affected.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTRxPacketDropOnMPNicEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80262)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTRxPacketDropOnMPNicEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTRxPacketDropOnMPNicEvent.setDescription("Received packets are getting dropped on NSX-T Management Node's network interface. This may impact the network traffic related to NSX-T management cluster.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTRxPacketDropOnEdgeTnNicEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80263)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTRxPacketDropOnEdgeTnNicEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTRxPacketDropOnEdgeTnNicEvent.setDescription("Received packets are getting dropped on NSX-T Edge Node's network interface. This may impact the network traffic of edge cluster.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTRxPacketDropOnHostTnNicEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80264)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTRxPacketDropOnHostTnNicEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTRxPacketDropOnHostTnNicEvent.setDescription("Received packets are getting dropped on NSX-T Host Node's network interface. This may impact the network traffic on ESXi Host.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTTxPacketDropOnMPNicEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80265)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTTxPacketDropOnMPNicEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTTxPacketDropOnMPNicEvent.setDescription("Transmitted packets are getting dropped on NSX-T Management Node's network interface. This may impact the network traffic related to NSX-T management cluster.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTTxPacketDropOnEdgeTnNicEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80266)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTTxPacketDropOnEdgeTnNicEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTTxPacketDropOnEdgeTnNicEvent.setDescription("Transmitted packets are getting dropped on NSX-T Edge Node's network interface. This may impact the network traffic of edge cluster.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTTxPacketDropOnHostTnNicEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80267)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTTxPacketDropOnHostTnNicEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTTxPacketDropOnHostTnNicEvent.setDescription("Transmitted packets are getting dropped on NSX-T Host Node's network interface. This may impact the network traffic on ESXi Host.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTMPNodeServiceClusterManagerStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80424)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceClusterManagerStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceClusterManagerStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Cluster Manager Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceCmInventoryStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80402)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceCmInventoryStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceCmInventoryStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely CM Inventory Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceControllerStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80403)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceControllerStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceControllerStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Controller Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceDataStoreStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80404)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceDataStoreStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceDataStoreStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely DataStore Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceHttpStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80405)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceHttpStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceHttpStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely HTTP Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceInstallUpgradeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80406)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceInstallUpgradeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceInstallUpgradeEvent.setDescription('One of the Services of the NSX-T Management Node, namely Install Upgrade Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceLiagentStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80407)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceLiagentStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceLiagentStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely LI Agent Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceManagerStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80408)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceManagerStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceManagerStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Manager Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceMgmtPlaneBusStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80409)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceMgmtPlaneBusStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceMgmtPlaneBusStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Management Plane Bus Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceMigrationCoordinatorStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80410)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceMigrationCoordinatorStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceMigrationCoordinatorStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Migration Co-ordinator Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceNodeMgmtStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80411)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNodeMgmtStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNodeMgmtStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Node Management Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceNodeStatsStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80412)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNodeStatsStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNodeStatsStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Node Statistics has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceNSXMessageBusStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80413)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNSXMessageBusStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNSXMessageBusStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Message Bus Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceNSXPlatformClientStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80414)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNSXPlatformClientStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNSXPlatformClientStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Platform Client Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceNSXUpgradeAgentStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80415)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNSXUpgradeAgentStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNSXUpgradeAgentStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Upgrade Agent Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceNTPStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80416)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNTPStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceNTPStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely NTP Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServicePolicyStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80417)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServicePolicyStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServicePolicyStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Policy Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceSearchStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80418)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceSearchStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceSearchStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Search Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceSNMPStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80419)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceSNMPStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceSNMPStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely SNMP Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceSSHStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80420)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceSSHStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceSSHStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely SSH Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceSyslogStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80421)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceSyslogStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceSyslogStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Syslog Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceTelemetryStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80422)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceTelemetryStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceTelemetryStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely Telemetry Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeServiceUIServiceStatusEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80423)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceUIServiceStatusEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeServiceUIServiceStatusEvent.setDescription('One of the Services of the NSX-T Management Node, namely UI Service has stopped running.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVMCHostPerClusterLimitExceededEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 100053)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMCHostPerClusterLimitExceededEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMCHostPerClusterLimitExceededEvent.setDescription('This event is raised when the number of Hosts per Cluster in a VMC SDDC exceeds limit.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVMCVMPerHostLimitExceededEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 100054)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMCVMPerHostLimitExceededEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMCVMPerHostLimitExceededEvent.setDescription('This event is raised when the number of VMs per Host in a VMC SDDC exceeds limits.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVMCClusterLimitExceededEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 100055)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMCClusterLimitExceededEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMCClusterLimitExceededEvent.setDescription('This event is raised when the number of Clusters in a VMC SDDC exceeds limits.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwProtectionEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 100061)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwProtectionEvent.setStatus('current')
if mibBuilder.loadTexts: vmwProtectionEvent.setDescription('This event is raised when any system protection limit is exceeded\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwSwitchPortUptimeThresholdRecededEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 30110)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwSwitchPortUptimeThresholdRecededEvent.setStatus('current')
if mibBuilder.loadTexts: vmwSwitchPortUptimeThresholdRecededEvent.setDescription('Up time of switch is less than expected.\n      Check the operational status of the specified switch port.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwFdbConfigStoreCleanupFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80531)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwFdbConfigStoreCleanupFailedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwFdbConfigStoreCleanupFailedEvent.setDescription('Foundation Database (FDB) Config Store Cleanup Failed Event.\n      Data Retention (Config Store Maintenance) service is not healthy.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwDiskAllocationInsufficientEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80528)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwDiskAllocationInsufficientEvent.setStatus('current')
if mibBuilder.loadTexts: vmwDiskAllocationInsufficientEvent.setDescription('Appliance Disk not configured according to Disk Guidance. \n      https://docs.vmware.com/en/VMware-vRealize-Network-Insight/5.1/com.vmware.vrni.using.doc/GUID-C96E9C78-6FA2-49EB-9791-8967A89B7698.html     \n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTControllerNodeToControlClusterConnectivityEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80225)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTControllerNodeToControlClusterConnectivityEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTControllerNodeToControlClusterConnectivityEvent.setDescription('NSX-T controller node has no control cluster connectivity.\n      Check if the node has proper network connectivity with control cluster.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTControllerNodeToMgmtPlaneConnectivityEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80226)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTControllerNodeToMgmtPlaneConnectivityEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTControllerNodeToMgmtPlaneConnectivityEvent.setDescription('NSX-T controller node has no management plane connectivity.\n      Check if the node has proper network connectivity with management plane.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTMPNodeToMgmtClusterConnectivityEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80227)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTMPNodeToMgmtClusterConnectivityEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTMPNodeToMgmtClusterConnectivityEvent.setDescription('NSX-T management node has no management cluster connectivity.\n      Check if the node has proper network connectivity with management cluster.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwBigIpInsufficientShellAccessEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80663)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwBigIpInsufficientShellAccessEvent.setStatus('current')
if mibBuilder.loadTexts: vmwBigIpInsufficientShellAccessEvent.setDescription('No access to shell(ssh port 22) for F5 Load Balancer. Network Insight will not be able to fetch any information required for visibility.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwBigIpInsufficientPartitionAccessEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80664)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwBigIpInsufficientPartitionAccessEvent.setStatus('current')
if mibBuilder.loadTexts: vmwBigIpInsufficientPartitionAccessEvent.setDescription('Insufficient Partition Access for F5 Load Balancer. Network Insight will not be able to fetch any information required for visibility.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwBigIpInsufficientRoleEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80665)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwBigIpInsufficientRoleEvent.setStatus('current')
if mibBuilder.loadTexts: vmwBigIpInsufficientRoleEvent.setDescription('Insufficient Role for F5 Load Balancer. Network Insight will not be able to fetch any information required for visibility. \n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTLatencyCollectorMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80662)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTLatencyCollectorMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTLatencyCollectorMismatchEvent.setDescription('The collector configured on NSX-T is different from this Network Insight deployment. As a result, Network Insight is not receiving Latency information from NSX-T. \n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTLatencyNoBFDProfileEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80661)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTLatencyNoBFDProfileEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTLatencyNoBFDProfileEvent.setDescription("NSX-T, no BFD profile configured Event.\n      BFD profile was deleted on NSX-T Manager after 'Virtual infrastructure Latency' was enabled at Network Insight. As a result, Network Insight is not assigning BFD profile on Transport zone. Network Insight will not receive Latency information from new transport zones.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTLatencyMoreBFDProfileEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80660)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTLatencyMoreBFDProfileEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTLatencyMoreBFDProfileEvent.setDescription('NSX-T, more than one BFD profile configured Event.\n      There are multiple BFD profiles in the NSX-T Manager. As a result, Network Insight is not assigning correct BFD profile on Transport zone. Network Insight will not receive Latency information from new Transport zones.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTLatencyNotEnabledEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80659)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTLatencyNotEnabledEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTLatencyNotEnabledEvent.setDescription('NSX-T latency collection is not enabled.\n      Latency collection was disabled in the NSX-T Manager after it was enabled by Network Insight. As a result, Network Insight is not receiving latency information from the NSX-T.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwHardwareVTEPMismatchEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80301)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHardwareVTEPMismatchEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHardwareVTEPMismatchEvent.setDescription('Hardware Gateway Bindings Mismatch between NSX and switch.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwHardwareVTEPPortDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80302)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwHardwareVTEPPortDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwHardwareVTEPPortDownEvent.setDescription('Hardware Gateway Binding Switch Port is down.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXVLatencyNoDataEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 100001)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXVLatencyNoDataEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXVLatencyNoDataEvent.setDescription('Network Insight Collector VM is not receiving network latency metrics from host.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwKubernetesBaseEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 1510)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwKubernetesBaseEvent.setStatus('current')
if mibBuilder.loadTexts: vmwKubernetesBaseEvent.setDescription('Event reported by kubernetes cluster. This is Kubernetes System Event.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVMCVMLimitExceededEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 100051)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMCVMLimitExceededEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMCVMLimitExceededEvent.setDescription('Number of VMs in VMC SDDC exceeds limit.\n      This event is raised when the number of VMs in a VMC SDDC exceeds limits.\n      Delete VMs that are not in use.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVMCHostLimitExceededEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 100052)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVMCHostLimitExceededEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVMCHostLimitExceededEvent.setDescription('Number of Hosts in VMC SDDC exceeds limit.\n      This event is raised when the number of Hosts in a VMC SDDC exceeds limits.\n      Contact VMC Support to increase the host limit within the VMC SDDC.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVeloCloudEdgeDegradedTransQoeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 90012)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVeloCloudEdgeDegradedTransQoeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVeloCloudEdgeDegradedTransQoeEvent.setDescription('VeloCloud Edge Transactional QOE has degraded.\n      Verify that the Edge is in healthy state.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVeloCloudEdgeDegradedVideoQoeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 90011)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVeloCloudEdgeDegradedVideoQoeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVeloCloudEdgeDegradedVideoQoeEvent.setDescription('VeloCloud Edge Video QOE has Degraded.\n      Verify that the Edge is in healthy state.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVeloCloudEdgeDegradedVoiceQoeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 90010)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVeloCloudEdgeDegradedVoiceQoeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVeloCloudEdgeDegradedVoiceQoeEvent.setDescription('VeloCloud Edge Voice QOE has Degraded.\n      Verify that the Edge is in healthy state.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVeloCloudEdgeDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 90001)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVeloCloudEdgeDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVeloCloudEdgeDownEvent.setDescription('VeloCloud Edge is not connected.\n      Verify that the VeloCloud Edge is UP.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVeloCloudLinkLostPacketEventRx = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 90013)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVeloCloudLinkLostPacketEventRx.setStatus('current')
if mibBuilder.loadTexts: vmwVeloCloudLinkLostPacketEventRx.setDescription('Received Packet Loss observed on VeloCloud Link.\n      Verify that the Link is in healthy state.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVeloCloudLinkDegradedTransQoeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 90009)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVeloCloudLinkDegradedTransQoeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVeloCloudLinkDegradedTransQoeEvent.setDescription('VeloCloud Link Transactional QOE has Degraded.\n      Verify that the Link is in healthy state.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVeloCloudLinkLostPacketEventTx = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 90005)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVeloCloudLinkLostPacketEventTx.setStatus('current')
if mibBuilder.loadTexts: vmwVeloCloudLinkLostPacketEventTx.setDescription('Transmitted Packet Loss observed on VeloCloud Link.\n      Verify that the Link is in healthy state.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVeloCloudLinkDegradedVideoQoeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 90008)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVeloCloudLinkDegradedVideoQoeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVeloCloudLinkDegradedVideoQoeEvent.setDescription('VeloCloud Link Video QOE has Degraded.\n      Verify that the Link is in healthy state.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVeloCloudLinkDegradedVoiceQoeEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 90007)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVeloCloudLinkDegradedVoiceQoeEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVeloCloudLinkDegradedVoiceQoeEvent.setDescription('VeloCloud Link Voice QOE has Degraded.\n      Verify that the Link is in healthy state.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwVeloCloudLinkDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 90002)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwVeloCloudLinkDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwVeloCloudLinkDownEvent.setDescription('VeloCloud Edge is not connected.\n      Verify that the VeloCloud Link is UP.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTHostNodeMgmtConnectivityStatusDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80246)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodeMgmtConnectivityStatusDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodeMgmtConnectivityStatusDownEvent.setDescription('NSX-T Host Transport Node has lost connectivity with NSX-T Manager node.\n      Please ensure all the interfaces connecting the NSX-T Transport Node to manager are up.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTEdgeNodeCtlrConnectivityStatusUnknownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80247)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTEdgeNodeCtlrConnectivityStatusUnknownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTEdgeNodeCtlrConnectivityStatusUnknownEvent.setDescription("NSX-T Edge Node Controller connectivity is Unknown.\n      NSX-T Manager can't determine the status of the Edge Transport Node's connectivity with controller nodes\n      Please ensure all the interfaces connecting the NSX-T Transport Node to manager are up.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTHostNodeCtlrConnectivityStatusDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80248)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodeCtlrConnectivityStatusDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodeCtlrConnectivityStatusDownEvent.setDescription('NSX-T Host Node is not able to communicate with any of the controllers.\n      NSX-T Host Transport Node has lost connectivity with all the controller nodes\n      Please ensure all the interfaces connecting the NSX-T Transport Node to controller nodes are up.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTHostNodeCtlrConnectivityStatusDegradedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80249)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodeCtlrConnectivityStatusDegradedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodeCtlrConnectivityStatusDegradedEvent.setDescription('NSX-T Host Node is not able to to communicate with one or more controllers.\n      NSX-T Host Transport Node has lost connectivity with some (but not all) of the controller nodes\n      Please ensure all the interfaces connecting the NSX-T Transport Node to controller nodes are up.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events')
vmwNSXTHostNodeCtlrConnectivityStatusUnknownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80250)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodeCtlrConnectivityStatusUnknownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodeCtlrConnectivityStatusUnknownEvent.setDescription("NSX-T Host Node Controller connectivity is Unknown.\n      NSX-T Manager can't determine the status of the Host Transport Node's connectivity with controller nodes\n      Please ensure all the interfaces connecting the NSX-T Transport Node to controller nodes are up.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTHostNodePnicStatusDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80228)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodePnicStatusDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodePnicStatusDownEvent.setDescription("NSX-T Host Transport Node Pnic Status is 'Down'.\n      All the pNICs of the NSX-T Host transport Node are down.\n      Please check if all the pNICs are properly connected.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTHostNodePnicStatusDegradedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80229)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodePnicStatusDegradedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodePnicStatusDegradedEvent.setDescription("NSX-T Host Transport Node Pnic Status is 'Degraded'\n      Some of the pNICs of the NSX-T Host transport Node are down.\n      Please check if all the pNICs are properly connected.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTHostNodePnicStatusUnknownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80230)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodePnicStatusUnknownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodePnicStatusUnknownEvent.setDescription("NSX-T Host Transport Node Pnic Status is 'Unknown'.\n      NSX-T Manager can't determine the status of some or all of the pNICs of the NSX-T Host Transport Node\n      Please check if all the pNICs are properly connected.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTEdgeNodePnicStatusDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80237)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTEdgeNodePnicStatusDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTEdgeNodePnicStatusDownEvent.setDescription("NSX-T Edge Transport Node Pnic Status is 'Down'.\n      All the pNICs of the NSX-T Edge transport Node are down.\n      Please check if all the pNICs are properly connected.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTEdgeNodePnicStatusDegradedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80238)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTEdgeNodePnicStatusDegradedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTEdgeNodePnicStatusDegradedEvent.setDescription("NSX-T Edge Transport Node Pnic Status is 'Degraded'.\n      Some of the pNICs of the NSX-T Edge transport Node are down.\n      Please check if all the pNICs are properly connected.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTEdgeNodePnicStatusUnknownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80239)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTEdgeNodePnicStatusUnknownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTEdgeNodePnicStatusUnknownEvent.setDescription("NSX-T Edge Transport Node Pnic Status is 'Unknown'.\n      NSX-T Manager can't determine the status of some or all of the pNICs of the NSX-T Edge Transport Node\n      Please check if all the pNICs are properly connected.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTHostNodeTunnelStatusDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80231)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodeTunnelStatusDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodeTunnelStatusDownEvent.setDescription("NSX-T Host Transport Node Tunnel Status is 'Down'.\n      All the tunnel interfaces associated to the NSX-T Host transport Node are down.\n      Please check the status of the tunnel interfaces for this NSX-T Transport Node\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTHostNodeTunnelStatusDegradedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80232)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodeTunnelStatusDegradedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodeTunnelStatusDegradedEvent.setDescription("NSX-T Host Transport Node Tunnel Status is 'Degraded'.\n      Some of the tunnel interfaces associated to the NSX-T Host transport Node are down.\n      Please check the status of the tunnel interfaces for this NSX-T Transport Node\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTHostNodeTunnelStatusUnknownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80233)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodeTunnelStatusUnknownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodeTunnelStatusUnknownEvent.setDescription("NSX-T Host Transport Node Tunnel Status is 'Unknown'.\n      NSX-T Manager can't determine the status of some or all of the tunnel interfaces associated to the NSX-T Host Transport Node.\n      Please check the status of the tunnel interfaces for this NSX-T Transport Node\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTEdgeNodeTunnelStatusDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80240)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTEdgeNodeTunnelStatusDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTEdgeNodeTunnelStatusDownEvent.setDescription("NSX-T Edge Transport Node Tunnel Status is 'Down'.\n      All the tunnel interfaces associated to the NSX-T Edge transport Node are down.\n      Please check the status of the tunnel interfaces for this NSX-T Transport Node\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTEdgeNodeTunnelStatusDegradedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80241)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTEdgeNodeTunnelStatusDegradedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTEdgeNodeTunnelStatusDegradedEvent.setDescription("NSX-T Edge Transport Node Tunnel Status is 'Degraded'.\n      Some of the tunnel interfaces associated to the NSX-T Edge transport Node are down.\n      Please check the status of the tunnel interfaces for this NSX-T Transport Node\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTEdgeNodeTunnelStatusUnknownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80242)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTEdgeNodeTunnelStatusUnknownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTEdgeNodeTunnelStatusUnknownEvent.setDescription("NSX-T Edge Transport Node Tunnel Status is 'Unknown'.\n      NSX-T Manager can't determine the status of some or all of the tunnel interfaces associated to the NSX-T Edge Transport Node\n      Please check the status of the tunnel interfaces for this NSX-T Transport Node\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTHostNodeStatusDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80234)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodeStatusDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodeStatusDownEvent.setDescription("NSX-T Host Transport Node Roll-up Status is 'Down'.\n      Some or all of the pNICs, management connection, control connections, tunnel statuses, agent statuses of NSX-T Host Transport Node are down.\n      Please check the status of the pNICs, management & control connections, tunnels and agents for this NSX-T Transport Node.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTHostNodeStatusDegradedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80235)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodeStatusDegradedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodeStatusDegradedEvent.setDescription("NSX-T Host Transport Node Roll-up Status is 'Degraded'.\n      Some or all of the pNICs, management connection, control connections, tunnel statuses, agent statuses of NSX-T Host Transport Node are in degraded state.\n      Please check the status of the pNICs, management & control connections, tunnels and agents for this NSX-T Transport Node.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTHostNodeStatusUnknownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80236)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTHostNodeStatusUnknownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTHostNodeStatusUnknownEvent.setDescription("NSX-T Host Transport Node Roll-up Status is 'Unknown'.\n      NSX-T Manager can't determine the status of some or all of the pNICs, management connection, control connections, tunnel statuses, agent statuses of NSX-T Host Transport Node.\n      Please check the status of the pNICs, management & control connections, tunnels and agents for this NSX-T Transport Node.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTEdgeNodeStatusDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80243)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTEdgeNodeStatusDownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTEdgeNodeStatusDownEvent.setDescription("NSX-T Edge Transport Node Roll-up Status is 'Down'.\n      Some or all of the pNICs, management connection, control connections, tunnel statuses, agent statuses of NSX-T Edge Transport Node are down.\n      Please check the status of the pNICs, management & control connections, tunnels and agents for this NSX-T Transport Node.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTEdgeNodeStatusDegradedEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80244)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTEdgeNodeStatusDegradedEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTEdgeNodeStatusDegradedEvent.setDescription("NSX-T Edge Transport Node Roll-up Status is 'Degraded'.\n      Some or all of the pNICs, management connection, control connections, tunnel statuses, agent statuses of NSX-T Edge Transport Node are in degraded state.\n      Please check the status of the pNICs, management & control connections, tunnels and agents for this NSX-T Transport Node.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwNSXTEdgeNodeStatusUnknownEvent = NotificationType((1, 3, 6, 1, 4, 1, 6876, 100, 1, 0, 80245)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if mibBuilder.loadTexts: vmwNSXTEdgeNodeStatusUnknownEvent.setStatus('current')
if mibBuilder.loadTexts: vmwNSXTEdgeNodeStatusUnknownEvent.setDescription("NSX-T Edge Transport Node Roll-up Status is 'Unknown'.\n      NSX-T Manager can't determine the status of some or all of the pNICs, management connection, control connections, tunnel statuses, agent statuses of NSX-T Edge Transport Node.\n      Please check the status of the pNICs, management & control connections, tunnels and agents for this NSX-T Transport Node.\n      For more details about this event, please log into vRNI, navigate to Settings -> Events")
vmwAffectedObject = MibScalar((1, 3, 6, 1, 4, 1, 6876, 100, 1, 1, 102), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vmwAffectedObject.setStatus('current')
if mibBuilder.loadTexts: vmwAffectedObject.setDescription('Object affected by this event')
vmwEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 6876, 100, 1, 1, 103), VmwVrniSeverity()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vmwEventSeverity.setStatus('current')
if mibBuilder.loadTexts: vmwEventSeverity.setDescription('vRNI Event Severity')
vmwVrniUrl = MibScalar((1, 3, 6, 1, 4, 1, 6876, 100, 1, 1, 104), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vmwVrniUrl.setStatus('current')
if mibBuilder.loadTexts: vmwVrniUrl.setDescription('URL to vRNI for this exact event')
vmwTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 6876, 100, 1, 1, 105), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vmwTimestamp.setStatus('current')
if mibBuilder.loadTexts: vmwTimestamp.setDescription('Time of first detection of event')
vmwOperatorDesc = MibScalar((1, 3, 6, 1, 4, 1, 6876, 100, 1, 1, 106), VmwLongSnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vmwOperatorDesc.setStatus('current')
if mibBuilder.loadTexts: vmwOperatorDesc.setDescription('Human readable message of the event')
vmwEventName = MibScalar((1, 3, 6, 1, 4, 1, 6876, 100, 1, 1, 107), VmwLongSnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vmwEventName.setStatus('current')
if mibBuilder.loadTexts: vmwEventName.setDescription('Event name')
vmwNetworkInsightMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99))
vmwNetworkInsightMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 1))
vmwNetworkInsightMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2))
vmwNetworkInsightMIBBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 1, 3)).setObjects(("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationInfoGroup1"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightMIBBasicCompliance = vmwNetworkInsightMIBBasicCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: vmwNetworkInsightMIBBasicCompliance.setDescription('The compliance statement for entities which implement\n        VMWARE-NSX-MANAGER-MIB.')
vmwNetworkInsightNotificationInfoGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 2)).setObjects(("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationInfoGroup1 = vmwNetworkInsightNotificationInfoGroup1.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationInfoGroup1.setDescription('These objects provide details in NSX Manager notifications.')
vmwNetworkInsightNotificationGroup1 = NotificationGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 3)).setObjects(("VMWARE-VRNI-MIB", "vmwSnmpTrapsAreConfigured"), ("VMWARE-VRNI-MIB", "vmwSnmpTrapsAreDisabled"), ("VMWARE-VRNI-MIB", "vmwTestTrap"), ("VMWARE-VRNI-MIB", "vmwEntityDiscoveryChangeEvent"), ("VMWARE-VRNI-MIB", "vmwEntityPropertiesChangeEvent"), ("VMWARE-VRNI-MIB", "vmwFirewallNotInstalledOnHostEvent"), ("VMWARE-VRNI-MIB", "vmwHostWithStaleFirewallRulesEvent"), ("VMWARE-VRNI-MIB", "vmwIpAddressChangeEvent"), ("VMWARE-VRNI-MIB", "vmwL2GatewayAnomalyEvent"), ("VMWARE-VRNI-MIB", "vmwL2NetworkAddressAnomalyEvent"), ("VMWARE-VRNI-MIB", "vmwL2NetworkDiameterExceededEvent"), ("VMWARE-VRNI-MIB", "vmwL2NetworkUplinkMissingEvent"), ("VMWARE-VRNI-MIB", "vmwL2NetworkWithNoVMsEvent"), ("VMWARE-VRNI-MIB", "vmwLayer2NetworkDiameterChangedEvent"), ("VMWARE-VRNI-MIB", "vmwMTUMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwNetworkIsolationEvent"), ("VMWARE-VRNI-MIB", "vmwNoPathEvent"), ("VMWARE-VRNI-MIB", "vmwSpoofguardDisabledEvent"), ("VMWARE-VRNI-MIB", "vmwVMotionEvent"), ("VMWARE-VRNI-MIB", "vmwVMWithDisconnectedVnicsEvent"), ("VMWARE-VRNI-MIB", "vmwVMWithMulipleVnicsOnDifferentVxlansEvent"), ("VMWARE-VRNI-MIB", "vmwVMWithMulipleVnicsOnSameL2Event"), ("VMWARE-VRNI-MIB", "vmwVMWithNoIpAddressEvent"), ("VMWARE-VRNI-MIB", "vmwVTEPMissingEvent"), ("VMWARE-VRNI-MIB", "vmwL2Event"), ("VMWARE-VRNI-MIB", "vmwMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwSecurityGroupMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwFirewallRuleMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwVlanMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwVxlanMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwDeleteChangeEvent"), ("VMWARE-VRNI-MIB", "vmwVtepFailedPingEvent"), ("VMWARE-VRNI-MIB", "vmwEmptySearchStreamChangeEvent"), ("VMWARE-VRNI-MIB", "vmwSearchStreamMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwEmptySearchStreamProblemEvent"), ("VMWARE-VRNI-MIB", "vmwSearchStreamMembershipProblemEvent"), ("VMWARE-VRNI-MIB", "vmwOspfConfigurationMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwServiceVMNotHealthyEvent"), ("VMWARE-VRNI-MIB", "vmwServiceVMNotPoweredOnEvent"), ("VMWARE-VRNI-MIB", "vmwServiceVMHighCPUUsageEvent"), ("VMWARE-VRNI-MIB", "vmwServiceVMHighMemoryUsageEvent"), ("VMWARE-VRNI-MIB", "vmwServiceVMHighDiskUsageEvent"), ("VMWARE-VRNI-MIB", "vmwIPSetPropertiesChangeEvent"), ("VMWARE-VRNI-MIB", "vmwFirewallRulePropertiesChangeEvent"), ("VMWARE-VRNI-MIB", "vmwSecurityGroupPropertiesChangeEvent"), ("VMWARE-VRNI-MIB", "vmwIPSetMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwFirewallRuleMaskEvent"), ("VMWARE-VRNI-MIB", "vmwSecurityMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwSecurityTagPropertiesChangeEvent"), ("VMWARE-VRNI-MIB", "vmwSecurityTagMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwHostDatastoreChangeEvent"), ("VMWARE-VRNI-MIB", "vmwVMDatastoreChangeEvent"), ("VMWARE-VRNI-MIB", "vmwVMSnapshotChangeEvent"), ("VMWARE-VRNI-MIB", "vmwVMVirtualDiskChangeEvent"), ("VMWARE-VRNI-MIB", "vmwIPSetDefinitionMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwSegmentMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwVtepEvent"), ("VMWARE-VRNI-MIB", "vmwVtepConfigurationFaultEvent"), ("VMWARE-VRNI-MIB", "vmwVtepSubnetMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwVtepCountMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwDLRNetworksNotReachableEvent"), ("VMWARE-VRNI-MIB", "vmwEdgeNetworksNotReachableEvent"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventCpuReady"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventCpuCoStop"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventDiskCommandAbortRule"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventIODeviceLatencyRule"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventIOKernelLatencyRule"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventMemorySwapInRule"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventMemorySwapOutRule"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventNetworkRxDropRule"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventNetworkTxDropRule"), ("VMWARE-VRNI-MIB", "vmwPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwSwitchPortPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwRouterInterfacePacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwVnicPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwVTEPUnderlayPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwPnicUnderlyingSwitchPortPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwDevicePacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventDatastoreFreeSpaceWarning"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventDatastoreFreeSpaceCritical"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventDatastoreReadLatency"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventDatastoreWriteLatency"), ("VMWARE-VRNI-MIB", "vmwDistributedFirewallApplyHostEvent"), ("VMWARE-VRNI-MIB", "vmwDistributedFirewallApplyVMEvent"), ("VMWARE-VRNI-MIB", "vmwNsxEvent"), ("VMWARE-VRNI-MIB", "vmwFeatureImpactedEvent"), ("VMWARE-VRNI-MIB", "vmwClusterFeatureVersionMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwHostFeatureVersionMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwFeatureVersionMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwHostFeatureEnabledMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwHostFeatureInstalledMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwHostVtepNotFoundEvent"), ("VMWARE-VRNI-MIB", "vmwHostVtepDisconnectedEvent"), ("VMWARE-VRNI-MIB", "vmwHostVtepEvent"), ("VMWARE-VRNI-MIB", "vmwClusterHostsVtepMTUMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwFeatureUnhealthyEvent"), ("VMWARE-VRNI-MIB", "vmwEdgeHANotConfiguredEvent"), ("VMWARE-VRNI-MIB", "vmwEdgeInterfacesDownEvent"), ("VMWARE-VRNI-MIB", "vmwModuleUnhealthyEvent"), ("VMWARE-VRNI-MIB", "vmwModuleNotLoadedEvent"), ("VMWARE-VRNI-MIB", "vmwModuleNetworkConnectionFailureEvent"), ("VMWARE-VRNI-MIB", "vmwHostNetworkControlPlaneMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwHostNetworkControlPlaneConnectionFailureEvent"), ("VMWARE-VRNI-MIB", "vmwHostNetworkControlPlaneNotSyncedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXControllerClusterMajorityEvent"), ("VMWARE-VRNI-MIB", "vmwNSXControllersVMOnSameHostEvent"), ("VMWARE-VRNI-MIB", "vmwVxLanRangeExhaustEvent"), ("VMWARE-VRNI-MIB", "vmwNSXFirewallDefaultAllowAllRulesEvent"), ("VMWARE-VRNI-MIB", "vmwEdgeNotHAEvent"), ("VMWARE-VRNI-MIB", "vmwEdgeNotDeployedEvent"), ("VMWARE-VRNI-MIB", "vmwEcmpIsEnabledAndStatefulServicesAreUpEvent"), ("VMWARE-VRNI-MIB", "vmwLogicalRouterDeployedOnEcmpEdgeHostEvent"), ("VMWARE-VRNI-MIB", "vmwEdgeMissingInterfaceOSPFAreaMappingEvent"), ("VMWARE-VRNI-MIB", "vmwOspfInsecureAuthRouterEvent"), ("VMWARE-VRNI-MIB", "vmwNSXControllersDeployedCountEvent"), ("VMWARE-VRNI-MIB", "vmwNSXControllerNotActiveCountEvent"), ("VMWARE-VRNI-MIB", "vmwNSXControllerEvent"), ("VMWARE-VRNI-MIB", "vmwNSXBackupEvent"), ("VMWARE-VRNI-MIB", "vmwNSXUnsecureBackupEvent"), ("VMWARE-VRNI-MIB", "vmwNSXBackupSystemEventsExcludedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXBackupNotScheduledEvent"), ("VMWARE-VRNI-MIB", "vmwNSXBackupNotRecordedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXNtpServerEvent"), ("VMWARE-VRNI-MIB", "vmwNSXSysLogServerEvent"), ("VMWARE-VRNI-MIB", "vmwControllerSysLogServerEvent"), ("VMWARE-VRNI-MIB", "vmwGenericNSXSystemEvent"), ("VMWARE-VRNI-MIB", "vmwOtherCriticalNSXEvent"), ("VMWARE-VRNI-MIB", "vmwFilterConfigApplyOnHostFailedEvent"), ("VMWARE-VRNI-MIB", "vmwRulesetLoadOnHostFailedEvent"), ("VMWARE-VRNI-MIB", "vmwConfigUpdateOnHostFailedEvent"), ("VMWARE-VRNI-MIB", "vmwSpoofguardConfigUpdateOnHostFailedEvent"), ("VMWARE-VRNI-MIB", "vmwApplyRuleToVnicFailedEvent"), ("VMWARE-VRNI-MIB", "vmwContainerConfigUpdateOnVnicFailedEvent"), ("VMWARE-VRNI-MIB", "vmwSpoofguardApplyToVnicFailedEvent"), ("VMWARE-VRNI-MIB", "vmwHostMessagingConfigurationFailedEvent"), ("VMWARE-VRNI-MIB", "vmwHostMessagingConnectionReconfigurationFailedEvent"), ("VMWARE-VRNI-MIB", "vmwHostMessagingConfigurationFailedNotificationSkippedEvent"), ("VMWARE-VRNI-MIB", "vmwHostMessagingInfrastructureDownEvent"), ("VMWARE-VRNI-MIB", "vmwEdgeVMNotRespondingEvent"), ("VMWARE-VRNI-MIB", "vmwEdgeUnhealthyEvent"), ("VMWARE-VRNI-MIB", "vmwEdgeVMCommunicationFailureEvent"), ("VMWARE-VRNI-MIB", "vmwNSXEdgeEvent"), ("VMWARE-VRNI-MIB", "vmwPanEvent"), ("VMWARE-VRNI-MIB", "vmwPanNsxNotInRegisteredStateEvent"), ("VMWARE-VRNI-MIB", "vmwPanNsxDynamicUpdateDelayedEvent"), ("VMWARE-VRNI-MIB", "vmwPanDeviceInDisconnectedStateEvent"), ("VMWARE-VRNI-MIB", "vmwPanNsxServiceApplianceViewMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwPanNsxFabricAgentNotFoundOnHostEvent"), ("VMWARE-VRNI-MIB", "vmwPanNsxServiceVMNotFoundOnHostEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationGroup1 = vmwNetworkInsightNotificationGroup1.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationGroup1.setDescription('Set of notifications (traps, informs) supported in this version.')
vmwNetworkInsightMIBBasicCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 1, 30)).setObjects(("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationInfoGroup2"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup1"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightMIBBasicCompliance2 = vmwNetworkInsightMIBBasicCompliance2.setStatus('deprecated')
if mibBuilder.loadTexts: vmwNetworkInsightMIBBasicCompliance2.setDescription('The compliance statement for entities which implement\n         VMWARE-VRNI-MIB second version.')
vmwNetworkInsightNotificationInfoGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 20)).setObjects(("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationInfoGroup2 = vmwNetworkInsightNotificationInfoGroup2.setStatus('deprecated')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationInfoGroup2.setDescription('These events provide details in NSX Manager notifications.')
vmwNetworkInsightNotificationGroup2 = NotificationGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 30)).setObjects(("VMWARE-VRNI-MIB", "vmwLogicalRouterNoUplinkEvent"), ("VMWARE-VRNI-MIB", "vmwNSXComponentEvent"), ("VMWARE-VRNI-MIB", "vmwNSXBackupEvent"), ("VMWARE-VRNI-MIB", "vmwNSXBackupAuditLogExcludedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXUnsecureBackupEvent"), ("VMWARE-VRNI-MIB", "vmwNSXBackupSystemEventsExcludedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXBackupNotScheduledEvent"), ("VMWARE-VRNI-MIB", "vmwNSXBackupNotRecordedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXNtpServerEvent"), ("VMWARE-VRNI-MIB", "vmwNSXSysLogServerEvent"), ("VMWARE-VRNI-MIB", "vmwControllerSysLogServerEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationGroup2 = vmwNetworkInsightNotificationGroup2.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationGroup2.setDescription('Set of added notifications (traps, informs) since last revision.')
vmwNetworkInsightMIBBasicCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 1, 35)).setObjects(("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationInfoGroup2"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup1"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup2"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightMIBBasicCompliance3 = vmwNetworkInsightMIBBasicCompliance3.setStatus('deprecated')
if mibBuilder.loadTexts: vmwNetworkInsightMIBBasicCompliance3.setDescription('The compliance statement for entities which implement\n         VMWARE-VRNI-MIB second version.')
vmwNetworkInsightNotificationGroup3 = NotificationGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 40)).setObjects(("VMWARE-VRNI-MIB", "vmwMTUMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwVMWithMulipleVnicsOnSameL2Event"), ("VMWARE-VRNI-MIB", "vmwMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwSecurityGroupMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwFirewallRuleMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwVlanMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwVxlanMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwSearchStreamMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwIPSetMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwSecurityMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwVtepEvent"), ("VMWARE-VRNI-MIB", "vmwPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwSwitchPortPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwRouterInterfacePacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwVnicPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwVTEPUnderlayPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwPnicUnderlyingSwitchPortPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwHostFeatureVersionMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwSpoofguardConfigUpdateOnHostFailedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXEcmpEdgeDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXMajorityEcmpEdgesDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXAllEcmpEdgesDownEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationGroup3 = vmwNetworkInsightNotificationGroup3.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationGroup3.setDescription('Set of added notifications (traps, informs) since last revision.')
vmwNetworkInsightMIBBasicCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 1, 45)).setObjects(("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationInfoGroup2"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup1"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup2"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup4"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightMIBBasicCompliance4 = vmwNetworkInsightMIBBasicCompliance4.setStatus('deprecated')
if mibBuilder.loadTexts: vmwNetworkInsightMIBBasicCompliance4.setDescription('The compliance statement for entities which implement\n         VMWARE-VRNI-MIB second version.')
vmwNetworkInsightNotificationGroup4 = NotificationGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 50)).setObjects(("VMWARE-VRNI-MIB", "vmwNSXEdgeSplitBrainEvent"), ("VMWARE-VRNI-MIB", "vmwNSXIpV6EnabledEvent"), ("VMWARE-VRNI-MIB", "vmwNSXOspfNeighborDownEvent"), ("VMWARE-VRNI-MIB", "vmwCheckpointEvent"), ("VMWARE-VRNI-MIB", "vmwNSXEdgeMtuMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwCheckpointNsxFabricAgentNotFoundOnHostEvent"), ("VMWARE-VRNI-MIB", "vmwCheckpointNsxServiceVMNotFoundOnHostEvent"), ("VMWARE-VRNI-MIB", "vmwCheckpointGatewaySicStatusNotCommunicatingEvent"), ("VMWARE-VRNI-MIB", "vmwCheckpointNsxServiceApplianceViewMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwCriticalHostNotAccessibleEvent"), ("VMWARE-VRNI-MIB", "vmwVlanMembershipChangeEvent"), ("VMWARE-VRNI-MIB", "vmwClusterFeatureVersionMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwHostFeatureVersionMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwConfigUpdateOnHostFailedEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationGroup4 = vmwNetworkInsightNotificationGroup4.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationGroup4.setDescription('Set of added notifications (traps, informs) since last revision.')
vmwNetworkInsightNotificationInfoGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 55)).setObjects(("VMWARE-VRNI-MIB", "vmwEventSeverity"), ("VMWARE-VRNI-MIB", "vmwAffectedObject"), ("VMWARE-VRNI-MIB", "vmwOperatorDesc"), ("VMWARE-VRNI-MIB", "vmwVrniUrl"), ("VMWARE-VRNI-MIB", "vmwTimestamp"), ("VMWARE-VRNI-MIB", "vmwEventName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationInfoGroup3 = vmwNetworkInsightNotificationInfoGroup3.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationInfoGroup3.setDescription('These objects provide details in VRNI notifications.')
vmwNetworkInsightMIBBasicCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 1, 60)).setObjects(("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationInfoGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup1"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup2"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup4"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup5"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightMIBBasicCompliance5 = vmwNetworkInsightMIBBasicCompliance5.setStatus('deprecated')
if mibBuilder.loadTexts: vmwNetworkInsightMIBBasicCompliance5.setDescription('The compliance statement for entities which implement\n         VMWARE-VRNI-MIB latest version.')
vmwNetworkInsightMIBBasicCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 1, 70)).setObjects(("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationInfoGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup1"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup2"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup4"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup5"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup6"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightMIBBasicCompliance6 = vmwNetworkInsightMIBBasicCompliance6.setStatus('deprecated')
if mibBuilder.loadTexts: vmwNetworkInsightMIBBasicCompliance6.setDescription('The compliance statement for entities which implement\n         VMWARE-VRNI-MIB latest version.')
vmwNetworkInsightMIBBasicCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 1, 80)).setObjects(("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationInfoGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup1"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup2"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup4"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup5"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup6"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup7"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightMIBBasicCompliance7 = vmwNetworkInsightMIBBasicCompliance7.setStatus('deprecated')
if mibBuilder.loadTexts: vmwNetworkInsightMIBBasicCompliance7.setDescription('The compliance statement for entities which implement\n         VMWARE-VRNI-MIB latest version.')
vmwNetworkInsightMIBBasicCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 1, 90)).setObjects(("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationInfoGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup1"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup2"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup4"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup5"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup6"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup7"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup8"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightMIBBasicCompliance8 = vmwNetworkInsightMIBBasicCompliance8.setStatus('deprecated')
if mibBuilder.loadTexts: vmwNetworkInsightMIBBasicCompliance8.setDescription('The compliance statement for entities which implement\n         VMWARE-VRNI-MIB latest version.')
vmwNetworkInsightMIBBasicCompliance9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 1, 100)).setObjects(("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationInfoGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup1"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup2"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup4"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup5"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup6"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup7"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup8"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup9"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightMIBBasicCompliance9 = vmwNetworkInsightMIBBasicCompliance9.setStatus('deprecated')
if mibBuilder.loadTexts: vmwNetworkInsightMIBBasicCompliance9.setDescription('The compliance statement for entities which implement\n         VMWARE-VRNI-MIB latest version.')
vmwNetworkInsightMIBBasicCompliance10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 1, 110)).setObjects(("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationInfoGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup1"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup2"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup3"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup4"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup5"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup6"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup7"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup8"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup9"), ("VMWARE-VRNI-MIB", "vmwNetworkInsightNotificationGroup10"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightMIBBasicCompliance10 = vmwNetworkInsightMIBBasicCompliance10.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightMIBBasicCompliance10.setDescription('The compliance statement for entities which implement\n         VMWARE-VRNI-MIB latest version.')
vmwNetworkInsightNotificationGroup5 = NotificationGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 65)).setObjects(("VMWARE-VRNI-MIB", "vmwNiInfraChangeEvent"), ("VMWARE-VRNI-MIB", "vmwDataSourceEnabledChangeEvent"), ("VMWARE-VRNI-MIB", "vmwDataSourceDisabledChangeEvent"), ("VMWARE-VRNI-MIB", "vmwDataSourceCreatedEvent"), ("VMWARE-VRNI-MIB", "vmwPlatformCpuCoreChangeEvent"), ("VMWARE-VRNI-MIB", "vmwPlatformDiskChangeEvent"), ("VMWARE-VRNI-MIB", "vmwPlatformMemoryChangeEvent"), ("VMWARE-VRNI-MIB", "vmwPlatformRebootedEvent"), ("VMWARE-VRNI-MIB", "vmwProxyCpuCoreChangeEvent"), ("VMWARE-VRNI-MIB", "vmwProxyDiskChangeEvent"), ("VMWARE-VRNI-MIB", "vmwProxyMemoryChangeEvent"), ("VMWARE-VRNI-MIB", "vmwProxyRebootedEvent"), ("VMWARE-VRNI-MIB", "vmwNIClusterChangeEvent"), ("VMWARE-VRNI-MIB", "vmwNISystemProxyChangeEvent"), ("VMWARE-VRNI-MIB", "vmwNIClusterCreateEvent"), ("VMWARE-VRNI-MIB", "vmwAWSRegionSGLimitEvent"), ("VMWARE-VRNI-MIB", "vmwAWSVPCSGLimitEvent"), ("VMWARE-VRNI-MIB", "vmwAWSSGInboundRuleLimitEvent"), ("VMWARE-VRNI-MIB", "vmwAWSSGOutboundRuleLimitEvent"), ("VMWARE-VRNI-MIB", "vmwAWSInterfaceSGLimitEvent"), ("VMWARE-VRNI-MIB", "vmwVirtualDistributedRoutingEvent"), ("VMWARE-VRNI-MIB", "vmwIndexerLagEvent"), ("VMWARE-VRNI-MIB", "vmwIPFIXFlowDPPausedEvent"), ("VMWARE-VRNI-MIB", "vmwGridProcessingStoppedEvent"), ("VMWARE-VRNI-MIB", "vmwUnableToSendEmailsEvent"), ("VMWARE-VRNI-MIB", "vmwSMTPNotConfiguredEvent"), ("VMWARE-VRNI-MIB", "vmwSNMPNotConfiguredEvent"), ("VMWARE-VRNI-MIB", "vmwReindexingInProgressEvent"), ("VMWARE-VRNI-MIB", "vmwNodesVersionMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwNotAllServicesRunningEvent"), ("VMWARE-VRNI-MIB", "vmwNotAllServicesHealthyEvent"), ("VMWARE-VRNI-MIB", "vmwExpandPartitionFailedEvent"), ("VMWARE-VRNI-MIB", "vmwDiskCleanupFailedEvent"), ("VMWARE-VRNI-MIB", "vmwVaccumFailedEvent"), ("VMWARE-VRNI-MIB", "vmwConfigStoreCleanupFailedEvent"), ("VMWARE-VRNI-MIB", "vmwHBaseRetentionToolFailedEvent"), ("VMWARE-VRNI-MIB", "vmwMetricStoreUpdaterFailedEvent"), ("VMWARE-VRNI-MIB", "vmwCollectorLagEvent"), ("VMWARE-VRNI-MIB", "vmwCollectionLagEvent"), ("VMWARE-VRNI-MIB", "vmwGridProcessingLagEvent"), ("VMWARE-VRNI-MIB", "vmwConnectionErrorEvent"), ("VMWARE-VRNI-MIB", "vmwNodeNotActiveEvent"), ("VMWARE-VRNI-MIB", "vmwHighDiskUtilizationEvent"), ("VMWARE-VRNI-MIB", "vmwIndexingAbortedEvent"), ("VMWARE-VRNI-MIB", "vmwUpgradeFailedEvent"), ("VMWARE-VRNI-MIB", "vmwFlowProcessingSuspendedEvent"), ("VMWARE-VRNI-MIB", "vmwVCNotOnSameProxyEvent"), ("VMWARE-VRNI-MIB", "vmwNoDVSAvailableEvent"), ("VMWARE-VRNI-MIB", "vmwUnknownInfobloxVersionEvent"), ("VMWARE-VRNI-MIB", "vmwUnsupportedInfobloxVersionEvent"), ("VMWARE-VRNI-MIB", "vmwIncorrectInfobloxCredentialEvent"), ("VMWARE-VRNI-MIB", "vmwInfobloxRecordLimitExceededEvent"), ("VMWARE-VRNI-MIB", "vmwWebhookNotRunningEvent"), ("VMWARE-VRNI-MIB", "vmwIncorrectWebhookConfiguredOnAlertEvent"), ("VMWARE-VRNI-MIB", "vmwWebhookNotEnabledOnAlertEvent"), ("VMWARE-VRNI-MIB", "vmwVRNIContentPackNotInstalledEvent"), ("VMWARE-VRNI-MIB", "vmwUnsupportedVRNIContentPackVersionEvent"), ("VMWARE-VRNI-MIB", "vmwUnsupportedLogInsightVersionEvent"), ("VMWARE-VRNI-MIB", "vmwComputeManagersNotAddedEvent"), ("VMWARE-VRNI-MIB", "vmwComputeManagersNotFoundEvent"), ("VMWARE-VRNI-MIB", "vmwUnsupportedNSXTVersionEvent"), ("VMWARE-VRNI-MIB", "vmwNotEmptyNodeEvent"), ("VMWARE-VRNI-MIB", "vmwFlowPhysicalNodeEvent"), ("VMWARE-VRNI-MIB", "vmwFlowCollectionErrorEvent"), ("VMWARE-VRNI-MIB", "vmwAWSThrottlingExceptionEvent"), ("VMWARE-VRNI-MIB", "vmwAWSFlowLogAccessDeniedExceptionEvent"), ("VMWARE-VRNI-MIB", "vmwNSXIPFIXStatusMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwNumVMsOrHostsNotFoundEvent"), ("VMWARE-VRNI-MIB", "vmwUnsupportedNSXVersionEvent"), ("VMWARE-VRNI-MIB", "vmwPwdAuthModeDisabledAristaEvent"), ("VMWARE-VRNI-MIB", "vmwHostnameResolutionErrorEvent"), ("VMWARE-VRNI-MIB", "vmwPrimaryNSXNotAddedEvent"), ("VMWARE-VRNI-MIB", "vmwDataProviderNotRunningEvent"), ("VMWARE-VRNI-MIB", "vmwInvalidResponseFromDatasourceEvent"), ("VMWARE-VRNI-MIB", "vmwHostNotReachableEvent"), ("VMWARE-VRNI-MIB", "vmwNSXControllerNotFoundEvent"), ("VMWARE-VRNI-MIB", "vmwUnexpectedDSTypeOrVersionEvent"), ("VMWARE-VRNI-MIB", "vmwWarnConfigEvent"), ("VMWARE-VRNI-MIB", "vmwInvalidConfigEvent"), ("VMWARE-VRNI-MIB", "vmwNotFoundEvent"), ("VMWARE-VRNI-MIB", "vmwInsufficientPrivilegesEvent"), ("VMWARE-VRNI-MIB", "vmwPwdAuthModeDisabledEvent"), ("VMWARE-VRNI-MIB", "vmwFailedCredsEncryptEvent"), ("VMWARE-VRNI-MIB", "vmwSNMPConnectionInvalidEvent"), ("VMWARE-VRNI-MIB", "vmwUnknownHostEvent"), ("VMWARE-VRNI-MIB", "vmwInvalidCredentialsEvent"), ("VMWARE-VRNI-MIB", "vmwIncorrectConnectionStringEvent"), ("VMWARE-VRNI-MIB", "vmwConnectionRefusedEvent"), ("VMWARE-VRNI-MIB", "vmwTimeoutEvent"), ("VMWARE-VRNI-MIB", "vmwFailedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTVcNotAddedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTStandaloneHostsEvent"), ("VMWARE-VRNI-MIB", "vmwLargeSdmsDroppedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTIPFixDFWStatusNotEnabledEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTIPFixPortIncorrectEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTIPFixCollectorAndIPFixProfileMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTIPFixIPFixProfilePriorityNotZeroEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTIPFixNoIPFixProfileEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTIPFixNoNewCollectorProfileCanBeAddedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTIPFixNoCollectorProfileEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationGroup5 = vmwNetworkInsightNotificationGroup5.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationGroup5.setDescription('Set of added notifications (traps, informs) since last revision.')
vmwNetworkInsightNotificationGroup6 = NotificationGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 75)).setObjects(("VMWARE-VRNI-MIB", "vmwNSXTSystemEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTNoUplinkConnectivityEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTRoutingAdvertisementEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTManagerConnectivityDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTControllerConnectivityDegradedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTControllerConnectivityDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMtuMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwNSXEdgeBGPNeighbourDownEvent"), ("VMWARE-VRNI-MIB", "vmwAnalyticsEvent"), ("VMWARE-VRNI-MIB", "vmwAnalyticsOutlierEvent"), ("VMWARE-VRNI-MIB", "vmwAnalyticsThresholdEvent"), ("VMWARE-VRNI-MIB", "vmwVMCEvent"), ("VMWARE-VRNI-MIB", "vmwPolicyManagerVrniDfwIPFixCollectorAbsent"), ("VMWARE-VRNI-MIB", "vmwPolicyManagerNoDfwIPFixProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationGroup6 = vmwNetworkInsightNotificationGroup6.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationGroup6.setDescription('Set of added notifications (traps, informs) for 4.0.0 release.')
vmwNetworkInsightNotificationGroup7 = NotificationGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 85)).setObjects(("VMWARE-VRNI-MIB", "vmwNSXTDoubleVlanTaggingEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTVtepDeleteEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTNoTzAttachedOnTnEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTExcludedVmFlowEvent"), ("VMWARE-VRNI-MIB", "vmwKubernetesInsufficientPrivilegesEvent"), ("VMWARE-VRNI-MIB", "vmwPKSKubernetesUnknownHostEvent"), ("VMWARE-VRNI-MIB", "vmwDatasourceIdentificationChangedEvent"), ("VMWARE-VRNI-MIB", "vmwLBPoolMemberDownEvent"), ("VMWARE-VRNI-MIB", "vmwLBPoolDownEvent"), ("VMWARE-VRNI-MIB", "vmwLBPoolMemberVMDownEvent"), ("VMWARE-VRNI-MIB", "vmwLBServiceNodeIPNotFoundEvent"), ("VMWARE-VRNI-MIB", "vmwLBServiceNodeMultipleNicFoundEvent"), ("VMWARE-VRNI-MIB", "vmwLBVirtualServerDisableEvent"), ("VMWARE-VRNI-MIB", "vmwLBPoolEmptyEvent"), ("VMWARE-VRNI-MIB", "vmwDuplicateL3SwitchEvent"), ("VMWARE-VRNI-MIB", "vmwArkinApplicationMemberLimitEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTSwitchIpfixEnabledEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationGroup7 = vmwNetworkInsightNotificationGroup7.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationGroup7.setDescription('Set of added notifications (traps, informs) for 4.1.0 release.')
vmwNetworkInsightNotificationGroup8 = NotificationGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 95)).setObjects(("VMWARE-VRNI-MIB", "vmwUANIFileNotProvidedEvent"), ("VMWARE-VRNI-MIB", "vmwUANIFileDoesNotExistEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationGroup8 = vmwNetworkInsightNotificationGroup8.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationGroup8.setDescription('Set of added notifications (traps, informs) for 4.2.0 release.')
vmwNetworkInsightNotificationGroup9 = NotificationGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 105)).setObjects(("VMWARE-VRNI-MIB", "vmwNSXTStandaloneHostsWithoutVcEvent"), ("VMWARE-VRNI-MIB", "vmwApplianceNotConfiguredEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationGroup9 = vmwNetworkInsightNotificationGroup9.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationGroup9.setDescription('Set of added notifications (traps, informs) for 5.0.0 release.')
vmwNetworkInsightNotificationGroup10 = NotificationGroup((1, 3, 6, 1, 4, 1, 6876, 100, 1, 99, 2, 115)).setObjects(("VMWARE-VRNI-MIB", "vmwSwitchPortUptimeThresholdRecededEvent"), ("VMWARE-VRNI-MIB", "vmwFdbConfigStoreCleanupFailedEvent"), ("VMWARE-VRNI-MIB", "vmwDiskAllocationInsufficientEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTControllerNodeToControlClusterConnectivityEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTControllerNodeToMgmtPlaneConnectivityEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeToMgmtClusterConnectivityEvent"), ("VMWARE-VRNI-MIB", "vmwBigIpInsufficientShellAccessEvent"), ("VMWARE-VRNI-MIB", "vmwBigIpInsufficientPartitionAccessEvent"), ("VMWARE-VRNI-MIB", "vmwBigIpInsufficientRoleEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTLatencyCollectorMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTLatencyNoBFDProfileEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTLatencyMoreBFDProfileEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTLatencyNotEnabledEvent"), ("VMWARE-VRNI-MIB", "vmwHardwareVTEPMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwHardwareVTEPPortDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXVLatencyNoDataEvent"), ("VMWARE-VRNI-MIB", "vmwKubernetesBaseEvent"), ("VMWARE-VRNI-MIB", "vmwVMCVMLimitExceededEvent"), ("VMWARE-VRNI-MIB", "vmwVMCHostLimitExceededEvent"), ("VMWARE-VRNI-MIB", "vmwVeloCloudEdgeDegradedTransQoeEvent"), ("VMWARE-VRNI-MIB", "vmwVeloCloudEdgeDegradedVideoQoeEvent"), ("VMWARE-VRNI-MIB", "vmwVeloCloudEdgeDegradedVoiceQoeEvent"), ("VMWARE-VRNI-MIB", "vmwVeloCloudEdgeDownEvent"), ("VMWARE-VRNI-MIB", "vmwVeloCloudLinkLostPacketEventRx"), ("VMWARE-VRNI-MIB", "vmwVeloCloudLinkDegradedTransQoeEvent"), ("VMWARE-VRNI-MIB", "vmwVeloCloudLinkLostPacketEventTx"), ("VMWARE-VRNI-MIB", "vmwVeloCloudLinkDegradedVideoQoeEvent"), ("VMWARE-VRNI-MIB", "vmwVeloCloudLinkDegradedVoiceQoeEvent"), ("VMWARE-VRNI-MIB", "vmwVeloCloudLinkDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodeMgmtConnectivityStatusDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTEdgeNodeCtlrConnectivityStatusUnknownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodeCtlrConnectivityStatusDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodeCtlrConnectivityStatusDegradedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodeCtlrConnectivityStatusUnknownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodePnicStatusDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodePnicStatusDegradedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodePnicStatusUnknownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTEdgeNodePnicStatusDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTEdgeNodePnicStatusDegradedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTEdgeNodePnicStatusUnknownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodeTunnelStatusDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodeTunnelStatusDegradedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodeTunnelStatusUnknownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTEdgeNodeTunnelStatusDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTEdgeNodeTunnelStatusDegradedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTEdgeNodeTunnelStatusUnknownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodeStatusDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodeStatusDegradedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTHostNodeStatusUnknownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTEdgeNodeStatusDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTEdgeNodeStatusDegradedEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTEdgeNodeStatusUnknownEvent"), ("VMWARE-VRNI-MIB", "vmwSwitchPortOperationalDownEvent"), ("VMWARE-VRNI-MIB", "vmwRouterInterfaceOperationalDownEvent"), ("VMWARE-VRNI-MIB", "vmwUnderlayDeviceGenericEvent"), ("VMWARE-VRNI-MIB", "vmwUnderlayDeviceFexOfflineEvent"), ("VMWARE-VRNI-MIB", "vmwUnderlayDeviceFanMalFunctionEvent"), ("VMWARE-VRNI-MIB", "vmwUnderlayDeviceTemperatureThresholdExceededEvent"), ("VMWARE-VRNI-MIB", "vmwUnderlayDeviceFexFanMalFunctionEvent"), ("VMWARE-VRNI-MIB", "vmwUnderlayDeviceFexPsMalFunctionEvent"), ("VMWARE-VRNI-MIB", "vmwUnderlayDeviceModuleMalFunctionEvent"), ("VMWARE-VRNI-MIB", "vmwUnderlayDevicePsMalFunctionEvent"), ("VMWARE-VRNI-MIB", "vmwUnderlayDeviceBfdSessionRemovedEvent"), ("VMWARE-VRNI-MIB", "vmwUnderlayDeviceLldpNeighbourRemovedEvent"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventDataSourceCpuUsage"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventDataSourceMemoryUsage"), ("VMWARE-VRNI-MIB", "vmwThresholdExceededEventDataSourceTemperature"), ("VMWARE-VRNI-MIB", "vmwDeploymentDefMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwNsxtLatencyServiceConfigMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwNsxtLatencyNodeGroupMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwNsxtLatencyStatProfileMismatchEvent"), ("VMWARE-VRNI-MIB", "vmwHybridConnectBgpStatusDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTClusterBackUpDisabledEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTDFWFirewallDisabledEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTComputeManagerConnectionStatusNotUpEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTLogicalSwitchAdminStatusDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTLogicalPortOperationalStatusDownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTLogicalPortOperationalStatusUnknownEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTLogicalPortReceivedPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTLogicalPortTransmittedPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTLogicalSwitchReceivedPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTLogicalSwitchTransmittedPacketDropEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTRxPacketDropOnMPNicEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTRxPacketDropOnEdgeTnNicEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTRxPacketDropOnHostTnNicEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTTxPacketDropOnMPNicEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTTxPacketDropOnEdgeTnNicEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTTxPacketDropOnHostTnNicEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceClusterManagerStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceCmInventoryStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceControllerStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceDataStoreStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceHttpStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceInstallUpgradeEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceLiagentStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceManagerStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceMgmtPlaneBusStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceMigrationCoordinatorStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceNodeMgmtStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceNodeStatsStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceNSXMessageBusStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceNSXPlatformClientStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceNSXUpgradeAgentStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceNTPStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServicePolicyStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceSearchStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceSNMPStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceSSHStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceSyslogStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceTelemetryStatusEvent"), ("VMWARE-VRNI-MIB", "vmwNSXTMPNodeServiceUIServiceStatusEvent"), ("VMWARE-VRNI-MIB", "vmwVMCHostPerClusterLimitExceededEvent"), ("VMWARE-VRNI-MIB", "vmwVMCVMPerHostLimitExceededEvent"), ("VMWARE-VRNI-MIB", "vmwVMCClusterLimitExceededEvent"), ("VMWARE-VRNI-MIB", "vmwProtectionEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwNetworkInsightNotificationGroup10 = vmwNetworkInsightNotificationGroup10.setStatus('current')
if mibBuilder.loadTexts: vmwNetworkInsightNotificationGroup10.setDescription('Set of added notifications (traps, informs) for 5.2.0 release.')
mibBuilder.exportSymbols("VMWARE-VRNI-MIB", vmwNSXControllerNotActiveCountEvent=vmwNSXControllerNotActiveCountEvent, vmwPanNsxServiceVMNotFoundOnHostEvent=vmwPanNsxServiceVMNotFoundOnHostEvent, vmwNSXTMPNodeServiceNTPStatusEvent=vmwNSXTMPNodeServiceNTPStatusEvent, vmwNSXTMPNodeServiceSNMPStatusEvent=vmwNSXTMPNodeServiceSNMPStatusEvent, vmwVeloCloudLinkDegradedVideoQoeEvent=vmwVeloCloudLinkDegradedVideoQoeEvent, vmwPanNsxServiceApplianceViewMismatchEvent=vmwPanNsxServiceApplianceViewMismatchEvent, vmwUnableToSendEmailsEvent=vmwUnableToSendEmailsEvent, vmwBigIpInsufficientShellAccessEvent=vmwBigIpInsufficientShellAccessEvent, vmwNSXControllerNotFoundEvent=vmwNSXControllerNotFoundEvent, vmwNoPathEvent=vmwNoPathEvent, vmwThresholdExceededEventDataSourceTemperature=vmwThresholdExceededEventDataSourceTemperature, vmwNsxEvent=vmwNsxEvent, vmwUnknownInfobloxVersionEvent=vmwUnknownInfobloxVersionEvent, vmwNSXTMPNodeToMgmtClusterConnectivityEvent=vmwNSXTMPNodeToMgmtClusterConnectivityEvent, vmwHostnameResolutionErrorEvent=vmwHostnameResolutionErrorEvent, vmwNSXTLatencyMoreBFDProfileEvent=vmwNSXTLatencyMoreBFDProfileEvent, vmwNSXTMPNodeServiceSSHStatusEvent=vmwNSXTMPNodeServiceSSHStatusEvent, vmwNetworkIsolationEvent=vmwNetworkIsolationEvent, vmwFlowProcessingSuspendedEvent=vmwFlowProcessingSuspendedEvent, vmwWebhookNotEnabledOnAlertEvent=vmwWebhookNotEnabledOnAlertEvent, vmwHostNotReachableEvent=vmwHostNotReachableEvent, vmwThresholdExceededEventMemorySwapOutRule=vmwThresholdExceededEventMemorySwapOutRule, vmwVeloCloudLinkLostPacketEventTx=vmwVeloCloudLinkLostPacketEventTx, vmwNSXTHostNodePnicStatusUnknownEvent=vmwNSXTHostNodePnicStatusUnknownEvent, vmwIncorrectConnectionStringEvent=vmwIncorrectConnectionStringEvent, vmwNSXTRxPacketDropOnEdgeTnNicEvent=vmwNSXTRxPacketDropOnEdgeTnNicEvent, vmwDatasourceIdentificationChangedEvent=vmwDatasourceIdentificationChangedEvent, vmwUnderlayDeviceFexPsMalFunctionEvent=vmwUnderlayDeviceFexPsMalFunctionEvent, vmwNSXTLatencyNotEnabledEvent=vmwNSXTLatencyNotEnabledEvent, vmwFdbConfigStoreCleanupFailedEvent=vmwFdbConfigStoreCleanupFailedEvent, vmwNSXOspfNeighborDownEvent=vmwNSXOspfNeighborDownEvent, vmwApplianceNotConfiguredEvent=vmwApplianceNotConfiguredEvent, vmwHostFeatureVersionMismatchEvent=vmwHostFeatureVersionMismatchEvent, vmwNSXTMPNodeServiceClusterManagerStatusEvent=vmwNSXTMPNodeServiceClusterManagerStatusEvent, vmwNSXTIPFixDFWStatusNotEnabledEvent=vmwNSXTIPFixDFWStatusNotEnabledEvent, vmwNSXTIPFixIPFixProfilePriorityNotZeroEvent=vmwNSXTIPFixIPFixProfilePriorityNotZeroEvent, vmwNSXTHostNodeStatusUnknownEvent=vmwNSXTHostNodeStatusUnknownEvent, vmwNsxtLatencyStatProfileMismatchEvent=vmwNsxtLatencyStatProfileMismatchEvent, vmwSNMPConnectionInvalidEvent=vmwSNMPConnectionInvalidEvent, vmwSecurityTagMembershipChangeEvent=vmwSecurityTagMembershipChangeEvent, vmwNetworkInsightMIBBasicCompliance=vmwNetworkInsightMIBBasicCompliance, vmwFirewallRulePropertiesChangeEvent=vmwFirewallRulePropertiesChangeEvent, vmwMetricStoreUpdaterFailedEvent=vmwMetricStoreUpdaterFailedEvent, vmwVRNIEvents=vmwVRNIEvents, vmwEdgeNotDeployedEvent=vmwEdgeNotDeployedEvent, vmwUnexpectedDSTypeOrVersionEvent=vmwUnexpectedDSTypeOrVersionEvent, vmwApplyRuleToVnicFailedEvent=vmwApplyRuleToVnicFailedEvent, vmwNetworkInsightNotificationInfoGroup3=vmwNetworkInsightNotificationInfoGroup3, vmwNSXTHostNodeMgmtConnectivityStatusDownEvent=vmwNSXTHostNodeMgmtConnectivityStatusDownEvent, vmwHostMessagingConnectionReconfigurationFailedEvent=vmwHostMessagingConnectionReconfigurationFailedEvent, vmwVeloCloudEdgeDegradedVideoQoeEvent=vmwVeloCloudEdgeDegradedVideoQoeEvent, vmwAWSThrottlingExceptionEvent=vmwAWSThrottlingExceptionEvent, vmwDataSourceCreatedEvent=vmwDataSourceCreatedEvent, vmwEntityDiscoveryChangeEvent=vmwEntityDiscoveryChangeEvent, vmwPwdAuthModeDisabledAristaEvent=vmwPwdAuthModeDisabledAristaEvent, vmwNSXTStandaloneHostsWithoutVcEvent=vmwNSXTStandaloneHostsWithoutVcEvent, vmwSecurityGroupPropertiesChangeEvent=vmwSecurityGroupPropertiesChangeEvent, vmwVtepCountMismatchEvent=vmwVtepCountMismatchEvent, vmwNSXTEdgeNodeTunnelStatusUnknownEvent=vmwNSXTEdgeNodeTunnelStatusUnknownEvent, vmwNSXTMPNodeServiceLiagentStatusEvent=vmwNSXTMPNodeServiceLiagentStatusEvent, vmwNSXTVcNotAddedEvent=vmwNSXTVcNotAddedEvent, vmwHostVtepDisconnectedEvent=vmwHostVtepDisconnectedEvent, vmwNSXTDoubleVlanTaggingEvent=vmwNSXTDoubleVlanTaggingEvent, vmwSecurityTagPropertiesChangeEvent=vmwSecurityTagPropertiesChangeEvent, vmwIndexingAbortedEvent=vmwIndexingAbortedEvent, vmwFirewallRuleMaskEvent=vmwFirewallRuleMaskEvent, vmwNSXTSystemEvent=vmwNSXTSystemEvent, vmwSecurityMembershipChangeEvent=vmwSecurityMembershipChangeEvent, vmwNSXTRxPacketDropOnHostTnNicEvent=vmwNSXTRxPacketDropOnHostTnNicEvent, vmwNSXTLogicalSwitchReceivedPacketDropEvent=vmwNSXTLogicalSwitchReceivedPacketDropEvent, vmwProxyCpuCoreChangeEvent=vmwProxyCpuCoreChangeEvent, vmwNetworkInsightMIBBasicCompliance6=vmwNetworkInsightMIBBasicCompliance6, vmwNSXTHostNodeCtlrConnectivityStatusDegradedEvent=vmwNSXTHostNodeCtlrConnectivityStatusDegradedEvent, vmwVMCVMLimitExceededEvent=vmwVMCVMLimitExceededEvent, vmwVeloCloudEdgeDegradedVoiceQoeEvent=vmwVeloCloudEdgeDegradedVoiceQoeEvent, vmwUANIFileNotProvidedEvent=vmwUANIFileNotProvidedEvent, vmwProtectionEvent=vmwProtectionEvent, vmwPanEvent=vmwPanEvent, vmwNSXTIPFixCollectorAndIPFixProfileMismatchEvent=vmwNSXTIPFixCollectorAndIPFixProfileMismatchEvent, vmwLBServiceNodeMultipleNicFoundEvent=vmwLBServiceNodeMultipleNicFoundEvent, vmwNSXTHostNodeCtlrConnectivityStatusDownEvent=vmwNSXTHostNodeCtlrConnectivityStatusDownEvent, vmwGenericNSXSystemEvent=vmwGenericNSXSystemEvent, vmwNSXTSwitchIpfixEnabledEvent=vmwNSXTSwitchIpfixEnabledEvent, vmwL2GatewayAnomalyEvent=vmwL2GatewayAnomalyEvent, vmwNSXTMPNodeServiceSyslogStatusEvent=vmwNSXTMPNodeServiceSyslogStatusEvent, vmwIndexerLagEvent=vmwIndexerLagEvent, vmwEmptySearchStreamChangeEvent=vmwEmptySearchStreamChangeEvent, vmwHybridConnectBgpStatusDownEvent=vmwHybridConnectBgpStatusDownEvent, vmwVeloCloudLinkLostPacketEventRx=vmwVeloCloudLinkLostPacketEventRx, vmwVaccumFailedEvent=vmwVaccumFailedEvent, vmwNSXTMPNodeServiceNSXPlatformClientStatusEvent=vmwNSXTMPNodeServiceNSXPlatformClientStatusEvent, vmwSearchStreamMembershipChangeEvent=vmwSearchStreamMembershipChangeEvent, vmwNSXTLogicalPortReceivedPacketDropEvent=vmwNSXTLogicalPortReceivedPacketDropEvent, vmwConnectionErrorEvent=vmwConnectionErrorEvent, vmwNSXTHostNodeStatusDownEvent=vmwNSXTHostNodeStatusDownEvent, vmwLayer2NetworkDiameterChangedEvent=vmwLayer2NetworkDiameterChangedEvent, vmwSwitchPortOperationalDownEvent=vmwSwitchPortOperationalDownEvent, vmwOperatorDesc=vmwOperatorDesc, vmwNsxtLatencyNodeGroupMismatchEvent=vmwNsxtLatencyNodeGroupMismatchEvent, vmwPlatformCpuCoreChangeEvent=vmwPlatformCpuCoreChangeEvent, vmwOspfConfigurationMismatchEvent=vmwOspfConfigurationMismatchEvent, vmwSpoofguardApplyToVnicFailedEvent=vmwSpoofguardApplyToVnicFailedEvent, vmwSpoofguardConfigUpdateOnHostFailedEvent=vmwSpoofguardConfigUpdateOnHostFailedEvent, vmwIPSetDefinitionMismatchEvent=vmwIPSetDefinitionMismatchEvent, vmwNetworkInsightNotificationGroup2=vmwNetworkInsightNotificationGroup2, vmwPacketDropEvent=vmwPacketDropEvent, vmwFlowCollectionErrorEvent=vmwFlowCollectionErrorEvent, vmwNSXTMPNodeServiceMgmtPlaneBusStatusEvent=vmwNSXTMPNodeServiceMgmtPlaneBusStatusEvent, vmwEdgeVMCommunicationFailureEvent=vmwEdgeVMCommunicationFailureEvent, vmwHostDatastoreChangeEvent=vmwHostDatastoreChangeEvent, vmwUnderlayDeviceGenericEvent=vmwUnderlayDeviceGenericEvent, vmwRulesetLoadOnHostFailedEvent=vmwRulesetLoadOnHostFailedEvent, vmwNSXTHostNodeTunnelStatusUnknownEvent=vmwNSXTHostNodeTunnelStatusUnknownEvent, vmwVMotionEvent=vmwVMotionEvent, vmwNSXFirewallDefaultAllowAllRulesEvent=vmwNSXFirewallDefaultAllowAllRulesEvent, vmwNSXTMPNodeServiceManagerStatusEvent=vmwNSXTMPNodeServiceManagerStatusEvent, vmwAWSFlowLogAccessDeniedExceptionEvent=vmwAWSFlowLogAccessDeniedExceptionEvent, vmwEcmpIsEnabledAndStatefulServicesAreUpEvent=vmwEcmpIsEnabledAndStatefulServicesAreUpEvent, vmwPanDeviceInDisconnectedStateEvent=vmwPanDeviceInDisconnectedStateEvent, vmwNSXTEdgeNodePnicStatusUnknownEvent=vmwNSXTEdgeNodePnicStatusUnknownEvent, vmwVirtualDistributedRoutingEvent=vmwVirtualDistributedRoutingEvent, vmwPolicyManagerNoDfwIPFixProfile=vmwPolicyManagerNoDfwIPFixProfile, vmwHostMessagingConfigurationFailedEvent=vmwHostMessagingConfigurationFailedEvent, vmwInvalidResponseFromDatasourceEvent=vmwInvalidResponseFromDatasourceEvent, vmwVeloCloudLinkDegradedTransQoeEvent=vmwVeloCloudLinkDegradedTransQoeEvent, vmwNetworkInsightMIBBasicCompliance3=vmwNetworkInsightMIBBasicCompliance3, vmwHighDiskUtilizationEvent=vmwHighDiskUtilizationEvent, vmwNetworkInsightMIBBasicCompliance7=vmwNetworkInsightMIBBasicCompliance7, vmwIPSetPropertiesChangeEvent=vmwIPSetPropertiesChangeEvent, vmwAnalyticsEvent=vmwAnalyticsEvent, vmwNetworkInsightNotificationGroup8=vmwNetworkInsightNotificationGroup8, vmwAWSInterfaceSGLimitEvent=vmwAWSInterfaceSGLimitEvent, vmwHardwareVTEPMismatchEvent=vmwHardwareVTEPMismatchEvent, vmwRouterInterfacePacketDropEvent=vmwRouterInterfacePacketDropEvent, vmwNSXVLatencyNoDataEvent=vmwNSXVLatencyNoDataEvent, vmwDuplicateL3SwitchEvent=vmwDuplicateL3SwitchEvent, vmwEdgeNotHAEvent=vmwEdgeNotHAEvent, vmwNetworkInsightMIBCompliances=vmwNetworkInsightMIBCompliances, vmwNSXNtpServerEvent=vmwNSXNtpServerEvent, vmwInvalidCredentialsEvent=vmwInvalidCredentialsEvent, vmwUnderlayDeviceLldpNeighbourRemovedEvent=vmwUnderlayDeviceLldpNeighbourRemovedEvent, vmwNSXTHostNodeTunnelStatusDegradedEvent=vmwNSXTHostNodeTunnelStatusDegradedEvent, vmwIpAddressChangeEvent=vmwIpAddressChangeEvent, vmwNetworkInsightMIBBasicCompliance8=vmwNetworkInsightMIBBasicCompliance8, vmwNSXTLogicalPortOperationalStatusUnknownEvent=vmwNSXTLogicalPortOperationalStatusUnknownEvent, vmwDevicePacketDropEvent=vmwDevicePacketDropEvent, vmwAffectedObject=vmwAffectedObject, vmwThresholdExceededEventNetworkRxDropRule=vmwThresholdExceededEventNetworkRxDropRule, vmwNSXTHostNodeTunnelStatusDownEvent=vmwNSXTHostNodeTunnelStatusDownEvent, vmwPanNsxDynamicUpdateDelayedEvent=vmwPanNsxDynamicUpdateDelayedEvent, vmwNSXTControllerNodeToMgmtPlaneConnectivityEvent=vmwNSXTControllerNodeToMgmtPlaneConnectivityEvent, vmwIncorrectWebhookConfiguredOnAlertEvent=vmwIncorrectWebhookConfiguredOnAlertEvent, vmwAnalyticsOutlierEvent=vmwAnalyticsOutlierEvent, vmwEdgeMissingInterfaceOSPFAreaMappingEvent=vmwEdgeMissingInterfaceOSPFAreaMappingEvent, vmwVTEPUnderlayPacketDropEvent=vmwVTEPUnderlayPacketDropEvent, vmwDiskCleanupFailedEvent=vmwDiskCleanupFailedEvent, vmwLargeSdmsDroppedEvent=vmwLargeSdmsDroppedEvent, vmwEventName=vmwEventName, vmwPlatformDiskChangeEvent=vmwPlatformDiskChangeEvent, vmwNSXTMPNodeServiceTelemetryStatusEvent=vmwNSXTMPNodeServiceTelemetryStatusEvent, vmwFirewallRuleMembershipChangeEvent=vmwFirewallRuleMembershipChangeEvent, vmwL2NetworkDiameterExceededEvent=vmwL2NetworkDiameterExceededEvent, vmwVeloCloudEdgeDegradedTransQoeEvent=vmwVeloCloudEdgeDegradedTransQoeEvent, vmwSwitchPortUptimeThresholdRecededEvent=vmwSwitchPortUptimeThresholdRecededEvent, vmwNSXAllEcmpEdgesDownEvent=vmwNSXAllEcmpEdgesDownEvent, vmwNetworkInsightNotificationGroup10=vmwNetworkInsightNotificationGroup10, vmwBigIpInsufficientPartitionAccessEvent=vmwBigIpInsufficientPartitionAccessEvent, vmwSwitchPortPacketDropEvent=vmwSwitchPortPacketDropEvent, vmwEntityPropertiesChangeEvent=vmwEntityPropertiesChangeEvent, vmwControllerSysLogServerEvent=vmwControllerSysLogServerEvent, vmwNSXTEdgeNodeTunnelStatusDownEvent=vmwNSXTEdgeNodeTunnelStatusDownEvent, vmwExpandPartitionFailedEvent=vmwExpandPartitionFailedEvent, vmwNSXTMPNodeServiceDataStoreStatusEvent=vmwNSXTMPNodeServiceDataStoreStatusEvent, vmwOspfInsecureAuthRouterEvent=vmwOspfInsecureAuthRouterEvent, vmwFeatureUnhealthyEvent=vmwFeatureUnhealthyEvent, vmwVxlanMembershipChangeEvent=vmwVxlanMembershipChangeEvent, vmwVeloCloudLinkDegradedVoiceQoeEvent=vmwVeloCloudLinkDegradedVoiceQoeEvent, vmwNSXTTxPacketDropOnMPNicEvent=vmwNSXTTxPacketDropOnMPNicEvent, vmwNISystemProxyChangeEvent=vmwNISystemProxyChangeEvent, vmwHostVtepEvent=vmwHostVtepEvent, vmwAWSSGInboundRuleLimitEvent=vmwAWSSGInboundRuleLimitEvent, vmwHostNetworkControlPlaneConnectionFailureEvent=vmwHostNetworkControlPlaneConnectionFailureEvent, vmwNetworkInsightMIBBasicCompliance2=vmwNetworkInsightMIBBasicCompliance2, vmwNSXTControllerConnectivityDownEvent=vmwNSXTControllerConnectivityDownEvent, vmwVtepConfigurationFaultEvent=vmwVtepConfigurationFaultEvent, vmwNSXTTxPacketDropOnHostTnNicEvent=vmwNSXTTxPacketDropOnHostTnNicEvent, vmwLogicalRouterNoUplinkEvent=vmwLogicalRouterNoUplinkEvent, vmwSMTPNotConfiguredEvent=vmwSMTPNotConfiguredEvent, vmwNSXTEdgeNodePnicStatusDegradedEvent=vmwNSXTEdgeNodePnicStatusDegradedEvent, vmwVMCVMPerHostLimitExceededEvent=vmwVMCVMPerHostLimitExceededEvent, vmwEdgeHANotConfiguredEvent=vmwEdgeHANotConfiguredEvent, vmwProxyDiskChangeEvent=vmwProxyDiskChangeEvent, vmwNSXTEdgeNodeCtlrConnectivityStatusUnknownEvent=vmwNSXTEdgeNodeCtlrConnectivityStatusUnknownEvent, vmwFirewallNotInstalledOnHostEvent=vmwFirewallNotInstalledOnHostEvent, vmwEdgeVMNotRespondingEvent=vmwEdgeVMNotRespondingEvent, vmwNetworkInsightMIBConformance=vmwNetworkInsightMIBConformance, vmwNSXTHostNodePnicStatusDownEvent=vmwNSXTHostNodePnicStatusDownEvent, vmwNiInfraChangeEvent=vmwNiInfraChangeEvent, vmwCheckpointGatewaySicStatusNotCommunicatingEvent=vmwCheckpointGatewaySicStatusNotCommunicatingEvent, vmwNSXComponentEvent=vmwNSXComponentEvent, vmwVlanMembershipChangeEvent=vmwVlanMembershipChangeEvent, vmwIPFIXFlowDPPausedEvent=vmwIPFIXFlowDPPausedEvent, vmwNetworkInsightMIBBasicCompliance9=vmwNetworkInsightMIBBasicCompliance9, vmwNSXTHostNodeCtlrConnectivityStatusUnknownEvent=vmwNSXTHostNodeCtlrConnectivityStatusUnknownEvent, vmwConfigStoreCleanupFailedEvent=vmwConfigStoreCleanupFailedEvent, vmwVtepSubnetMismatchEvent=vmwVtepSubnetMismatchEvent, vmwUnderlayDeviceFexFanMalFunctionEvent=vmwUnderlayDeviceFexFanMalFunctionEvent, vmwPanNsxFabricAgentNotFoundOnHostEvent=vmwPanNsxFabricAgentNotFoundOnHostEvent, vmwVxLanRangeExhaustEvent=vmwVxLanRangeExhaustEvent, vmwVnicPacketDropEvent=vmwVnicPacketDropEvent, vmwNIClusterCreateEvent=vmwNIClusterCreateEvent, vmwVMWithMulipleVnicsOnDifferentVxlansEvent=vmwVMWithMulipleVnicsOnDifferentVxlansEvent, vmwNotEmptyNodeEvent=vmwNotEmptyNodeEvent, vmwServiceVMNotHealthyEvent=vmwServiceVMNotHealthyEvent, vmwNetworkInsightNotificationGroup3=vmwNetworkInsightNotificationGroup3, vmwOtherCriticalNSXEvent=vmwOtherCriticalNSXEvent, vmwUnknownHostEvent=vmwUnknownHostEvent, vmwLBVirtualServerDisableEvent=vmwLBVirtualServerDisableEvent, vmwIncorrectInfobloxCredentialEvent=vmwIncorrectInfobloxCredentialEvent, vmwDiskAllocationInsufficientEvent=vmwDiskAllocationInsufficientEvent, vmwNSXTEdgeNodeTunnelStatusDegradedEvent=vmwNSXTEdgeNodeTunnelStatusDegradedEvent, vmwNSXControllersDeployedCountEvent=vmwNSXControllersDeployedCountEvent, vmwNSXTIPFixNoIPFixProfileEvent=vmwNSXTIPFixNoIPFixProfileEvent, vmwPlatformRebootedEvent=vmwPlatformRebootedEvent, vmwNSXTClusterBackUpDisabledEvent=vmwNSXTClusterBackUpDisabledEvent, vmwKubernetesBaseEvent=vmwKubernetesBaseEvent, vmwFailedEvent=vmwFailedEvent, vmwLBPoolEmptyEvent=vmwLBPoolEmptyEvent, vmwNSXTMPNodeServiceNodeStatsStatusEvent=vmwNSXTMPNodeServiceNodeStatsStatusEvent, vmwNSXTIPFixNoNewCollectorProfileCanBeAddedEvent=vmwNSXTIPFixNoNewCollectorProfileCanBeAddedEvent, vmwAnalyticsThresholdEvent=vmwAnalyticsThresholdEvent, vmwNSXTMPNodeServiceHttpStatusEvent=vmwNSXTMPNodeServiceHttpStatusEvent, vmwNSXTControllerConnectivityDegradedEvent=vmwNSXTControllerConnectivityDegradedEvent, vmwNSXTMPNodeServiceMigrationCoordinatorStatusEvent=vmwNSXTMPNodeServiceMigrationCoordinatorStatusEvent, vmwFailedCredsEncryptEvent=vmwFailedCredsEncryptEvent, vmwThresholdExceededEventDataSourceMemoryUsage=vmwThresholdExceededEventDataSourceMemoryUsage, vmwVMCHostLimitExceededEvent=vmwVMCHostLimitExceededEvent, vmwNetworkInsightNotificationInfoGroup2=vmwNetworkInsightNotificationInfoGroup2, vmwComputeManagersNotAddedEvent=vmwComputeManagersNotAddedEvent, vmwNSXTEdgeNodeStatusUnknownEvent=vmwNSXTEdgeNodeStatusUnknownEvent, vmwNSXTManagerConnectivityDownEvent=vmwNSXTManagerConnectivityDownEvent, vmwNsxtLatencyServiceConfigMismatchEvent=vmwNsxtLatencyServiceConfigMismatchEvent, vmwThresholdExceededEventDiskCommandAbortRule=vmwThresholdExceededEventDiskCommandAbortRule, vmwNetworkInsightMIB=vmwNetworkInsightMIB, PYSNMP_MODULE_ID=vmwNetworkInsightMIB, vmwSnmpTrapsAreConfigured=vmwSnmpTrapsAreConfigured, vmwDataSourceEnabledChangeEvent=vmwDataSourceEnabledChangeEvent, VmwVrniSeverity=VmwVrniSeverity, vmwThresholdExceededEventDatastoreFreeSpaceCritical=vmwThresholdExceededEventDatastoreFreeSpaceCritical, vmwNetworkInsightMIBBasicCompliance4=vmwNetworkInsightMIBBasicCompliance4, vmwThresholdExceededEventIODeviceLatencyRule=vmwThresholdExceededEventIODeviceLatencyRule, vmwUnderlayDeviceFexOfflineEvent=vmwUnderlayDeviceFexOfflineEvent, vmwReindexingInProgressEvent=vmwReindexingInProgressEvent, vmwNSXTIPFixNoCollectorProfileEvent=vmwNSXTIPFixNoCollectorProfileEvent)
mibBuilder.exportSymbols("VMWARE-VRNI-MIB", vmwNetworkInsightNotificationGroup6=vmwNetworkInsightNotificationGroup6, vmwUnderlayDeviceModuleMalFunctionEvent=vmwUnderlayDeviceModuleMalFunctionEvent, vmwNSXSysLogServerEvent=vmwNSXSysLogServerEvent, vmwNSXTHostNodePnicStatusDegradedEvent=vmwNSXTHostNodePnicStatusDegradedEvent, vmwVCNotOnSameProxyEvent=vmwVCNotOnSameProxyEvent, vmwPKSKubernetesUnknownHostEvent=vmwPKSKubernetesUnknownHostEvent, vmwVtepEvent=vmwVtepEvent, vmwDeploymentDefMismatchEvent=vmwDeploymentDefMismatchEvent, vmwUpgradeFailedEvent=vmwUpgradeFailedEvent, vmwFeatureImpactedEvent=vmwFeatureImpactedEvent, vmwHostNetworkControlPlaneNotSyncedEvent=vmwHostNetworkControlPlaneNotSyncedEvent, vmwNoDVSAvailableEvent=vmwNoDVSAvailableEvent, vmwInvalidConfigEvent=vmwInvalidConfigEvent, vmwNSXBackupEvent=vmwNSXBackupEvent, vmwNetworkInsightNotificationGroup1=vmwNetworkInsightNotificationGroup1, vmwNIClusterChangeEvent=vmwNIClusterChangeEvent, vmwHostMessagingConfigurationFailedNotificationSkippedEvent=vmwHostMessagingConfigurationFailedNotificationSkippedEvent, vmwProxyRebootedEvent=vmwProxyRebootedEvent, vmwLBServiceNodeIPNotFoundEvent=vmwLBServiceNodeIPNotFoundEvent, vmwNSXTHostNodeStatusDegradedEvent=vmwNSXTHostNodeStatusDegradedEvent, vmwServiceVMHighCPUUsageEvent=vmwServiceVMHighCPUUsageEvent, vmwVMWithMulipleVnicsOnSameL2Event=vmwVMWithMulipleVnicsOnSameL2Event, vmwFeatureVersionMismatchEvent=vmwFeatureVersionMismatchEvent, vmwModuleNotLoadedEvent=vmwModuleNotLoadedEvent, vmwNSXTControllerNodeToControlClusterConnectivityEvent=vmwNSXTControllerNodeToControlClusterConnectivityEvent, vmwNSXTMPNodeServiceNSXMessageBusStatusEvent=vmwNSXTMPNodeServiceNSXMessageBusStatusEvent, vmwContainerConfigUpdateOnVnicFailedEvent=vmwContainerConfigUpdateOnVnicFailedEvent, vmwVtepFailedPingEvent=vmwVtepFailedPingEvent, vmwCriticalHostNotAccessibleEvent=vmwCriticalHostNotAccessibleEvent, vmwAWSRegionSGLimitEvent=vmwAWSRegionSGLimitEvent, vmwLBPoolDownEvent=vmwLBPoolDownEvent, vmwFlowPhysicalNodeEvent=vmwFlowPhysicalNodeEvent, vmwNSXTMPNodeServiceControllerStatusEvent=vmwNSXTMPNodeServiceControllerStatusEvent, vmwHostNetworkControlPlaneMismatchEvent=vmwHostNetworkControlPlaneMismatchEvent, vmwNSXTIPFixPortIncorrectEvent=vmwNSXTIPFixPortIncorrectEvent, vmwDataSourceDisabledChangeEvent=vmwDataSourceDisabledChangeEvent, vmwSpoofguardDisabledEvent=vmwSpoofguardDisabledEvent, vmwPanNsxNotInRegisteredStateEvent=vmwPanNsxNotInRegisteredStateEvent, vmwThresholdExceededEventDatastoreWriteLatency=vmwThresholdExceededEventDatastoreWriteLatency, vmwComputeManagersNotFoundEvent=vmwComputeManagersNotFoundEvent, vmwNSXTEdgeNodeStatusDownEvent=vmwNSXTEdgeNodeStatusDownEvent, vmwHostVtepNotFoundEvent=vmwHostVtepNotFoundEvent, vmwNSXTVtepDeleteEvent=vmwNSXTVtepDeleteEvent, vmwThresholdExceededEventMemorySwapInRule=vmwThresholdExceededEventMemorySwapInRule, vmwNSXTMPNodeServicePolicyStatusEvent=vmwNSXTMPNodeServicePolicyStatusEvent, vmwNetworkInsightNotificationInfoGroup1=vmwNetworkInsightNotificationInfoGroup1, vmwLBPoolMemberDownEvent=vmwLBPoolMemberDownEvent, vmwNodesVersionMismatchEvent=vmwNodesVersionMismatchEvent, vmwNSXMajorityEcmpEdgesDownEvent=vmwNSXMajorityEcmpEdgesDownEvent, vmwConnectionRefusedEvent=vmwConnectionRefusedEvent, vmwNSXTRxPacketDropOnMPNicEvent=vmwNSXTRxPacketDropOnMPNicEvent, vmwLogicalRouterDeployedOnEcmpEdgeHostEvent=vmwLogicalRouterDeployedOnEcmpEdgeHostEvent, vmwEdgeInterfacesDownEvent=vmwEdgeInterfacesDownEvent, vmwNetworkInsightNotificationGroup9=vmwNetworkInsightNotificationGroup9, vmwWebhookNotRunningEvent=vmwWebhookNotRunningEvent, vmwVrniUrl=vmwVrniUrl, vmwHostMessagingInfrastructureDownEvent=vmwHostMessagingInfrastructureDownEvent, vmwThresholdExceededEventDatastoreReadLatency=vmwThresholdExceededEventDatastoreReadLatency, vmwNSXEdgeEvent=vmwNSXEdgeEvent, vmwSecurityGroupMembershipChangeEvent=vmwSecurityGroupMembershipChangeEvent, vmwVRNIContentPackNotInstalledEvent=vmwVRNIContentPackNotInstalledEvent, vmwVMCClusterLimitExceededEvent=vmwVMCClusterLimitExceededEvent, vmwNSXTMPNodeServiceUIServiceStatusEvent=vmwNSXTMPNodeServiceUIServiceStatusEvent, vmwNSXTMPNodeServiceNSXUpgradeAgentStatusEvent=vmwNSXTMPNodeServiceNSXUpgradeAgentStatusEvent, vmwMTUMismatchEvent=vmwMTUMismatchEvent, vmwCollectorLagEvent=vmwCollectorLagEvent, vmwNetworkInsightMIBGroups=vmwNetworkInsightMIBGroups, vmwNetworkInsightNotificationGroup5=vmwNetworkInsightNotificationGroup5, vmwUnderlayDeviceFanMalFunctionEvent=vmwUnderlayDeviceFanMalFunctionEvent, vmwNSXIPFIXStatusMismatchEvent=vmwNSXIPFIXStatusMismatchEvent, vmwSegmentMismatchEvent=vmwSegmentMismatchEvent, vmwUnsupportedNSXVersionEvent=vmwUnsupportedNSXVersionEvent, vmwPwdAuthModeDisabledEvent=vmwPwdAuthModeDisabledEvent, vmwPolicyManagerVrniDfwIPFixCollectorAbsent=vmwPolicyManagerVrniDfwIPFixCollectorAbsent, vmwSearchStreamMembershipProblemEvent=vmwSearchStreamMembershipProblemEvent, vmwHostFeatureInstalledMismatchEvent=vmwHostFeatureInstalledMismatchEvent, vmwNumVMsOrHostsNotFoundEvent=vmwNumVMsOrHostsNotFoundEvent, vmwNSXTEvent=vmwNSXTEvent, vmwNSXTNoUplinkConnectivityEvent=vmwNSXTNoUplinkConnectivityEvent, vmwThresholdExceededEventIOKernelLatencyRule=vmwThresholdExceededEventIOKernelLatencyRule, vmwConfigUpdateOnHostFailedEvent=vmwConfigUpdateOnHostFailedEvent, vmwNSXTLogicalPortTransmittedPacketDropEvent=vmwNSXTLogicalPortTransmittedPacketDropEvent, vmwHostFeatureEnabledMismatchEvent=vmwHostFeatureEnabledMismatchEvent, vmwHardwareVTEPPortDownEvent=vmwHardwareVTEPPortDownEvent, vmwNetworkInsightMIBBasicCompliance10=vmwNetworkInsightMIBBasicCompliance10, vmwFilterConfigApplyOnHostFailedEvent=vmwFilterConfigApplyOnHostFailedEvent, vmwHBaseRetentionToolFailedEvent=vmwHBaseRetentionToolFailedEvent, vmwGridProcessingStoppedEvent=vmwGridProcessingStoppedEvent, vmwNSXTLogicalSwitchAdminStatusDownEvent=vmwNSXTLogicalSwitchAdminStatusDownEvent, vmwThresholdExceededEventNetworkTxDropRule=vmwThresholdExceededEventNetworkTxDropRule, vmwUnderlayDevicePsMalFunctionEvent=vmwUnderlayDevicePsMalFunctionEvent, vmwModuleUnhealthyEvent=vmwModuleUnhealthyEvent, vmwNSXEdgeSplitBrainEvent=vmwNSXEdgeSplitBrainEvent, vmwTimestamp=vmwTimestamp, vmwNSXEdgeMtuMismatchEvent=vmwNSXEdgeMtuMismatchEvent, vmwCheckpointEvent=vmwCheckpointEvent, vmwPlatformMemoryChangeEvent=vmwPlatformMemoryChangeEvent, vmwBigIpInsufficientRoleEvent=vmwBigIpInsufficientRoleEvent, vmwSNMPNotConfiguredEvent=vmwSNMPNotConfiguredEvent, vmwNSXControllersVMOnSameHostEvent=vmwNSXControllersVMOnSameHostEvent, vmwNSXTLatencyCollectorMismatchEvent=vmwNSXTLatencyCollectorMismatchEvent, vmwL2NetworkAddressAnomalyEvent=vmwL2NetworkAddressAnomalyEvent, vmwL2Event=vmwL2Event, vmwVTEPMissingEvent=vmwVTEPMissingEvent, vmwNSXBackupSystemEventsExcludedEvent=vmwNSXBackupSystemEventsExcludedEvent, vmwThresholdExceededEventCpuReady=vmwThresholdExceededEventCpuReady, vmwDistributedFirewallApplyVMEvent=vmwDistributedFirewallApplyVMEvent, vmwNSXIpV6EnabledEvent=vmwNSXIpV6EnabledEvent, vmwKubernetesInsufficientPrivilegesEvent=vmwKubernetesInsufficientPrivilegesEvent, vmwNSXTMPNodeServiceSearchStatusEvent=vmwNSXTMPNodeServiceSearchStatusEvent, vmwUnsupportedInfobloxVersionEvent=vmwUnsupportedInfobloxVersionEvent, vmwNSXTMPNodeServiceCmInventoryStatusEvent=vmwNSXTMPNodeServiceCmInventoryStatusEvent, vmwWarnConfigEvent=vmwWarnConfigEvent, vmwDataProviderNotRunningEvent=vmwDataProviderNotRunningEvent, vmwNSXTEdgeNodeStatusDegradedEvent=vmwNSXTEdgeNodeStatusDegradedEvent, vmwVMWithDisconnectedVnicsEvent=vmwVMWithDisconnectedVnicsEvent, vmwNSXTExcludedVmFlowEvent=vmwNSXTExcludedVmFlowEvent, vmwNotFoundEvent=vmwNotFoundEvent, vmwL2NetworkWithNoVMsEvent=vmwL2NetworkWithNoVMsEvent, vmwServiceVMHighDiskUsageEvent=vmwServiceVMHighDiskUsageEvent, vmwNetworkInsightNotificationGroup7=vmwNetworkInsightNotificationGroup7, vmwNSXTNoTzAttachedOnTnEvent=vmwNSXTNoTzAttachedOnTnEvent, vmwLBPoolMemberVMDownEvent=vmwLBPoolMemberVMDownEvent, vmwNetworkInsightNotificationGroup4=vmwNetworkInsightNotificationGroup4, vmwVMCHostPerClusterLimitExceededEvent=vmwVMCHostPerClusterLimitExceededEvent, vmwPnicUnderlyingSwitchPortPacketDropEvent=vmwPnicUnderlyingSwitchPortPacketDropEvent, vmwHostWithStaleFirewallRulesEvent=vmwHostWithStaleFirewallRulesEvent, vmwNodeNotActiveEvent=vmwNodeNotActiveEvent, vmwVMVirtualDiskChangeEvent=vmwVMVirtualDiskChangeEvent, vmwThresholdExceededEventDataSourceCpuUsage=vmwThresholdExceededEventDataSourceCpuUsage, vmwVMCEvent=vmwVMCEvent, vmwNSXTStandaloneHostsEvent=vmwNSXTStandaloneHostsEvent, vmwNotAllServicesRunningEvent=vmwNotAllServicesRunningEvent, vmwEdgeNetworksNotReachableEvent=vmwEdgeNetworksNotReachableEvent, vmwVMSnapshotChangeEvent=vmwVMSnapshotChangeEvent, vmwNSXTTxPacketDropOnEdgeTnNicEvent=vmwNSXTTxPacketDropOnEdgeTnNicEvent, vmwEmptySearchStreamProblemEvent=vmwEmptySearchStreamProblemEvent, vmwRouterInterfaceOperationalDownEvent=vmwRouterInterfaceOperationalDownEvent, vmwCheckpointNsxServiceApplianceViewMismatchEvent=vmwCheckpointNsxServiceApplianceViewMismatchEvent, vmwCheckpointNsxFabricAgentNotFoundOnHostEvent=vmwCheckpointNsxFabricAgentNotFoundOnHostEvent, vmwL2NetworkUplinkMissingEvent=vmwL2NetworkUplinkMissingEvent, vmwUnsupportedLogInsightVersionEvent=vmwUnsupportedLogInsightVersionEvent, vmwUnderlayDeviceBfdSessionRemovedEvent=vmwUnderlayDeviceBfdSessionRemovedEvent, vmwUnsupportedVRNIContentPackVersionEvent=vmwUnsupportedVRNIContentPackVersionEvent, vmwNSXBackupAuditLogExcludedEvent=vmwNSXBackupAuditLogExcludedEvent, vmwInfobloxRecordLimitExceededEvent=vmwInfobloxRecordLimitExceededEvent, vmwVRNIData=vmwVRNIData, vmwThresholdExceededEventDatastoreFreeSpaceWarning=vmwThresholdExceededEventDatastoreFreeSpaceWarning, vmwNSXBackupNotScheduledEvent=vmwNSXBackupNotScheduledEvent, vmwServiceVMNotPoweredOnEvent=vmwServiceVMNotPoweredOnEvent, vmwNSXControllerEvent=vmwNSXControllerEvent, vmwUnderlayDeviceTemperatureThresholdExceededEvent=vmwUnderlayDeviceTemperatureThresholdExceededEvent, vmwModuleNetworkConnectionFailureEvent=vmwModuleNetworkConnectionFailureEvent, vmwNSXControllerClusterMajorityEvent=vmwNSXControllerClusterMajorityEvent, vmwNSXTComputeManagerConnectionStatusNotUpEvent=vmwNSXTComputeManagerConnectionStatusNotUpEvent, vmwNetworkInsightMIBBasicCompliance5=vmwNetworkInsightMIBBasicCompliance5, vmwNSXEdgeBGPNeighbourDownEvent=vmwNSXEdgeBGPNeighbourDownEvent, vmwProxyMemoryChangeEvent=vmwProxyMemoryChangeEvent, vmwThresholdExceededEventCpuCoStop=vmwThresholdExceededEventCpuCoStop, vmwNSXTMPNodeServiceInstallUpgradeEvent=vmwNSXTMPNodeServiceInstallUpgradeEvent, vmwClusterHostsVtepMTUMismatchEvent=vmwClusterHostsVtepMTUMismatchEvent, vmwNSXTLogicalSwitchTransmittedPacketDropEvent=vmwNSXTLogicalSwitchTransmittedPacketDropEvent, vmwUnsupportedNSXTVersionEvent=vmwUnsupportedNSXTVersionEvent, vmwUANIFileDoesNotExistEvent=vmwUANIFileDoesNotExistEvent, vmwMembershipChangeEvent=vmwMembershipChangeEvent, vmwNSXUnsecureBackupEvent=vmwNSXUnsecureBackupEvent, vmwTestTrap=vmwTestTrap, vmwNSXTDFWFirewallDisabledEvent=vmwNSXTDFWFirewallDisabledEvent, vmwVMWithNoIpAddressEvent=vmwVMWithNoIpAddressEvent, vmwArkinApplicationMemberLimitEvent=vmwArkinApplicationMemberLimitEvent, vmwNotAllServicesHealthyEvent=vmwNotAllServicesHealthyEvent, vmwNSXTMPNodeServiceNodeMgmtStatusEvent=vmwNSXTMPNodeServiceNodeMgmtStatusEvent, vmwPrimaryNSXNotAddedEvent=vmwPrimaryNSXNotAddedEvent, vmwServiceVMHighMemoryUsageEvent=vmwServiceVMHighMemoryUsageEvent, vmwDistributedFirewallApplyHostEvent=vmwDistributedFirewallApplyHostEvent, vmwTimeoutEvent=vmwTimeoutEvent, vmwInsufficientPrivilegesEvent=vmwInsufficientPrivilegesEvent, vmwAWSSGOutboundRuleLimitEvent=vmwAWSSGOutboundRuleLimitEvent, vmwDLRNetworksNotReachableEvent=vmwDLRNetworksNotReachableEvent, vmwDeleteChangeEvent=vmwDeleteChangeEvent, vmwNSXTRoutingAdvertisementEvent=vmwNSXTRoutingAdvertisementEvent, vmwVMDatastoreChangeEvent=vmwVMDatastoreChangeEvent, vmwIPSetMembershipChangeEvent=vmwIPSetMembershipChangeEvent, vmwCollectionLagEvent=vmwCollectionLagEvent, vmwNSXTLatencyNoBFDProfileEvent=vmwNSXTLatencyNoBFDProfileEvent, vmwVeloCloudEdgeDownEvent=vmwVeloCloudEdgeDownEvent, vmwAWSVPCSGLimitEvent=vmwAWSVPCSGLimitEvent, vmwNSXBackupNotRecordedEvent=vmwNSXBackupNotRecordedEvent, vmwNSXTLogicalPortOperationalStatusDownEvent=vmwNSXTLogicalPortOperationalStatusDownEvent, vmwGridProcessingLagEvent=vmwGridProcessingLagEvent, vmwEventSeverity=vmwEventSeverity, vmwSnmpTrapsAreDisabled=vmwSnmpTrapsAreDisabled, vmwVeloCloudLinkDownEvent=vmwVeloCloudLinkDownEvent, vmwNSXEcmpEdgeDownEvent=vmwNSXEcmpEdgeDownEvent, vmwNSXTEdgeNodePnicStatusDownEvent=vmwNSXTEdgeNodePnicStatusDownEvent, vmwNSXTMtuMismatchEvent=vmwNSXTMtuMismatchEvent, vmwEdgeUnhealthyEvent=vmwEdgeUnhealthyEvent, vmwClusterFeatureVersionMismatchEvent=vmwClusterFeatureVersionMismatchEvent, vmwCheckpointNsxServiceVMNotFoundOnHostEvent=vmwCheckpointNsxServiceVMNotFoundOnHostEvent)
