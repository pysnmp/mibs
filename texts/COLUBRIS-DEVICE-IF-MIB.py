#
# PySNMP MIB module COLUBRIS-DEVICE-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/hpmsm/COLUBRIS-DEVICE-IF-MIB.my
# Produced by pysmi-1.1.12 at Tue Sep 17 12:03:29 2024
# On host fv-az888-540 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
coDevDisIndex, = mibBuilder.importSymbols("COLUBRIS-DEVICE-MIB", "coDevDisIndex")
colubrisMgmtV2, = mibBuilder.importSymbols("COLUBRIS-SMI", "colubrisMgmtV2")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, ObjectIdentity, iso, IpAddress, TimeTicks, Unsigned32, Counter64, NotificationType, Bits, MibIdentifier, Counter32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "iso", "IpAddress", "TimeTicks", "Unsigned32", "Counter64", "NotificationType", "Bits", "MibIdentifier", "Counter32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
colubrisDeviceIfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 8744, 5, 24))
if mibBuilder.loadTexts: colubrisDeviceIfMIB.setLastUpdated('200607050000Z')
if mibBuilder.loadTexts: colubrisDeviceIfMIB.setOrganization('Colubris Networks, Inc.')
if mibBuilder.loadTexts: colubrisDeviceIfMIB.setContactInfo('Colubris Networks\n                     Postal: 200 West Street Ste 300\n                             Waltham, Massachusetts 02451-1121\n                             UNITED STATES\n                     Phone:  +1 781 684 0001\n                     Fax:    +1 781 684 0009\n\n                     E-mail: cn-snmp@colubris.com')
if mibBuilder.loadTexts: colubrisDeviceIfMIB.setDescription('Colubris Device Interface MIB.')
colubrisDeviceIfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1))
coDeviceIfStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1))
coDeviceIfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2))
coDeviceIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1), )
if mibBuilder.loadTexts: coDeviceIfStatusTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceIfStatusTable.setDescription('Device interface status attributes.')
coDeviceIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1), ).setIndexNames((0, "COLUBRIS-DEVICE-MIB", "coDevDisIndex"), (0, "COLUBRIS-DEVICE-IF-MIB", "coDevIfStaIfIndex"))
if mibBuilder.loadTexts: coDeviceIfStatusEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceIfStatusEntry.setDescription('An entry in the coDeviceIfStatusTable.\n                 coDevDisIndex - Uniquely identifies a device ion the\n                                 MultiService Controller.\n                 coDevIfStaIfIndex - Uniquely identifies an interface on\n                                     the device.')
coDevIfStaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDevIfStaIfIndex.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaIfIndex.setDescription('Specifies the index of an interface on the\n                 device.')
coDevIfStaFriendlyInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaFriendlyInterfaceName.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaFriendlyInterfaceName.setDescription('The friendly name associated with the interface.')
coDevIfStaType = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("l2vlan", 3), ("bridge", 4), ("ieee80211", 5), ("ieee80211Wds", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaType.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaType.setDescription('The current state of the interface.')
coDevIfStaVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaVLAN.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaVLAN.setDescription('Specifies the VLAN associated with the interface.\n                 The value 0 is used when coDevIfStaType is not set to\n                 l2vlan.')
coDevIfStaIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaIpAddress.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaIpAddress.setDescription('The IP address assigned to the interface.')
coDevIfStaNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaNetworkMask.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaNetworkMask.setDescription('The network mask assigned to the interface.')
coDevIfStaMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaMACAddress.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaMACAddress.setDescription('The MAC address assigned to the interface.')
coDevIfStaState = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaState.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaState.setDescription('The current state of the interface.')
coDeviceIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1), )
if mibBuilder.loadTexts: coDeviceIfStatsTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceIfStatsTable.setDescription('Device interface statistic attributes.')
coDeviceIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1), )
coDeviceIfStatusEntry.registerAugmentions(("COLUBRIS-DEVICE-IF-MIB", "coDeviceIfStatsEntry"))
coDeviceIfStatsEntry.setIndexNames(*coDeviceIfStatusEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceIfStatsEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceIfStatsEntry.setDescription('An entry in the coDeviceIfStatsTable.\n                 coDevDisIndex - Uniquely identify a device in the\n                                 MultiService Controller.\n                 coDevIfStaIfIndex - Uniquely identify an interface on\n                                     the device.')
coDevIfStsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxBytes.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsRxBytes.setDescription('The total number of octets received on the interface.')
coDevIfStsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxPackets.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsRxPackets.setDescription('The number of packets delivered by this sub-layer to a\n                 higher (sub-)layer.')
coDevIfStsRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxErrors.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsRxErrors.setDescription('The number of inbound packets that contained errors\n                 preventing them from being deliverable to a\n                 higher-layer protocol.')
coDevIfStsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxBytes.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsTxBytes.setDescription('The total number of octets transmitted by the\n                 interface.')
coDevIfStsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxPackets.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsTxPackets.setDescription('The total number of packets that higher-level protocols\n                 requested to be transmitted.')
coDevIfStsTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 24, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxErrors.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsTxErrors.setDescription('The number of outbound packets that could not be\n                 transmitted because of errors.')
colubrisDeviceIfMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 2))
colubrisDeviceIfMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 2, 0))
colubrisDeviceIfMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3))
colubrisDeviceIfMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 1))
colubrisDeviceIfMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 2))
colubrisDeviceIfMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 1, 1)).setObjects(("COLUBRIS-DEVICE-IF-MIB", "colubrisDeviceIfStatusMIBGroup"), ("COLUBRIS-DEVICE-IF-MIB", "colubrisDeviceIfStatsMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisDeviceIfMIBCompliance = colubrisDeviceIfMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: colubrisDeviceIfMIBCompliance.setDescription('The compliance statement for the device Interface MIB.')
colubrisDeviceIfStatusMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 2, 1)).setObjects(("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaFriendlyInterfaceName"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaType"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaVLAN"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaIpAddress"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaNetworkMask"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaMACAddress"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStaState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisDeviceIfStatusMIBGroup = colubrisDeviceIfStatusMIBGroup.setStatus('current')
if mibBuilder.loadTexts: colubrisDeviceIfStatusMIBGroup.setDescription('A collection of objects for the device Interface\n                 Status group.')
colubrisDeviceIfStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 24, 3, 2, 2)).setObjects(("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsRxBytes"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsRxPackets"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsRxErrors"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsTxBytes"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsTxPackets"), ("COLUBRIS-DEVICE-IF-MIB", "coDevIfStsTxErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisDeviceIfStatsMIBGroup = colubrisDeviceIfStatsMIBGroup.setStatus('current')
if mibBuilder.loadTexts: colubrisDeviceIfStatsMIBGroup.setDescription('A collection of objects for the device Interface\n                 Stats group.')
mibBuilder.exportSymbols("COLUBRIS-DEVICE-IF-MIB", coDevIfStaIfIndex=coDevIfStaIfIndex, colubrisDeviceIfMIBCompliances=colubrisDeviceIfMIBCompliances, coDeviceIfStatsEntry=coDeviceIfStatsEntry, coDevIfStaVLAN=coDevIfStaVLAN, coDevIfStsTxBytes=coDevIfStsTxBytes, coDevIfStsRxErrors=coDevIfStsRxErrors, coDeviceIfStatsTable=coDeviceIfStatsTable, colubrisDeviceIfStatusMIBGroup=colubrisDeviceIfStatusMIBGroup, coDeviceIfStatusTable=coDeviceIfStatusTable, coDevIfStsTxErrors=coDevIfStsTxErrors, colubrisDeviceIfMIB=colubrisDeviceIfMIB, colubrisDeviceIfStatsMIBGroup=colubrisDeviceIfStatsMIBGroup, coDevIfStaNetworkMask=coDevIfStaNetworkMask, colubrisDeviceIfMIBConformance=colubrisDeviceIfMIBConformance, coDevIfStsRxPackets=coDevIfStsRxPackets, coDevIfStaState=coDevIfStaState, coDeviceIfStatusEntry=coDeviceIfStatusEntry, colubrisDeviceIfMIBObjects=colubrisDeviceIfMIBObjects, coDeviceIfStatsGroup=coDeviceIfStatsGroup, coDevIfStsTxPackets=coDevIfStsTxPackets, coDevIfStaType=coDevIfStaType, colubrisDeviceIfMIBGroups=colubrisDeviceIfMIBGroups, coDevIfStaMACAddress=coDevIfStaMACAddress, coDevIfStsRxBytes=coDevIfStsRxBytes, PYSNMP_MODULE_ID=colubrisDeviceIfMIB, colubrisDeviceIfMIBCompliance=colubrisDeviceIfMIBCompliance, coDeviceIfStatusGroup=coDeviceIfStatusGroup, colubrisDeviceIfMIBNotificationPrefix=colubrisDeviceIfMIBNotificationPrefix, colubrisDeviceIfMIBNotifications=colubrisDeviceIfMIBNotifications, coDevIfStaIpAddress=coDevIfStaIpAddress, coDevIfStaFriendlyInterfaceName=coDevIfStaFriendlyInterfaceName)
