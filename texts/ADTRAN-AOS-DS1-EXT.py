#
# PySNMP MIB module ADTRAN-AOS-DS1-EXT (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adtran/ADTRAN-AOS-DS1-EXT
# Produced by pysmi-1.1.12 at Tue Sep 17 12:18:23 2024
# On host fv-az1019-803 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
adGenAOSWan, adGenAOSConformance = mibBuilder.importSymbols("ADTRAN-AOS", "adGenAOSWan", "adGenAOSConformance")
adIdentity, = mibBuilder.importSymbols("ADTRAN-MIB", "adIdentity")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter32, ObjectIdentity, Gauge32, Integer32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, Bits, TimeTicks, NotificationType, ModuleIdentity, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "Gauge32", "Integer32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "Bits", "TimeTicks", "NotificationType", "ModuleIdentity", "MibIdentifier", "iso")
TextualConvention, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "DisplayString")
adGenAOSDs1ThresholdsMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 664, 6, 10000, 53, 6, 1))
if mibBuilder.loadTexts: adGenAOSDs1ThresholdsMib.setLastUpdated('200507060000Z')
if mibBuilder.loadTexts: adGenAOSDs1ThresholdsMib.setOrganization('ADTRAN, Inc.')
if mibBuilder.loadTexts: adGenAOSDs1ThresholdsMib.setContactInfo('Technical Support Dept.\n                Postal: ADTRAN, Inc.\n                        901 Explorer Blvd.\n                        Huntsville, AL 35806\n\n                        Tel: +1 800 726-8663\n                        Fax: +1 256 963 6217\n                        E-mail: support@adtran.com')
if mibBuilder.loadTexts: adGenAOSDs1ThresholdsMib.setDescription('A MIB module for checking different thresholds of DS1 line statistics.')
adGenAOSDs1Threshold = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1))
adGenAOSDs1ThresholdTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 0))
if mibBuilder.loadTexts: adGenAOSDs1ThresholdTraps.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1ThresholdTraps.setDescription('This trap indicates that a DS1 threshold status has changed.')
adGenAOSDs1ThresholdsReachedTable = MibTable((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 1), )
if mibBuilder.loadTexts: adGenAOSDs1ThresholdsReachedTable.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1ThresholdsReachedTable.setDescription('This table contains a bitmap showing which thresholds have been exceeded.')
adGenAOSDs1ThresholdsReachedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: adGenAOSDs1ThresholdsReachedEntry.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1ThresholdsReachedEntry.setDescription('This entry specifies which DS1 Thresholds have been exceeded.')
adGenAOSDs1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSDs1Index.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Index.setDescription('This value for this object is equal to the value\n \t\t  of ifIndex from the Interfaces table of MIB II\n \t\t  (RFC 1213).')
adGenAOSDs1ThresholdAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 1, 1, 2), Bits().clone(namedValues=NamedValues(("ds1ThresholdReached15MinBES", 0), ("ds1ThresholdReached15MinCSS", 1), ("ds1ThresholdReached15MinDM", 2), ("ds1ThresholdReached15MinES", 3), ("ds1ThresholdReached15MinLCV", 4), ("ds1ThresholdReached15MinLES", 5), ("ds1ThresholdReached15MinPCV", 6), ("ds1ThresholdReached15MinSES", 7), ("ds1ThresholdReached15MinSEFS", 8), ("ds1ThresholdReached15MinUAS", 9), ("ds1ThresholdReached24HrBES", 10), ("ds1ThresholdReached24HrCSS", 11), ("ds1ThresholdReached24HrDM", 12), ("ds1ThresholdReached24HrES", 13), ("ds1ThresholdReached24HrLCV", 14), ("ds1ThresholdReached24HrLES", 15), ("ds1ThresholdReached24HrPCV", 16), ("ds1ThresholdReached24HrSES", 17), ("ds1ThresholdReached24HrSEFS", 18), ("ds1ThresholdReached24HrUAS", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSDs1ThresholdAlarms.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1ThresholdAlarms.setDescription("This object describes the various DS1 error thresholds that are presently crossed.\n\n\t\tThe bit 'ds1ThresholdReached15MinBES(0)' indicates that the 15 minute threshold for\n\t\tbursty errored seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached15MinCSS(1)' indicates that the 15 minute threshold for\n\t\tcontrolled slip seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached15MinDM(2)' indicates that the 15 minute threshold for\n\t\tdegraded minutes has been reached\n\n\t\tThe bit 'ds1ThresholdReached15MinES(3)' indicates that the 15 minute threshold for\n\t\terrored seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached15MinLCV(4)' indicates that the 15 minute threshold for\n\t\tline code violations has been reached.\n\n        \tThe bit 'ds1ThresholdReached15MinLES(5)' indicates that the 15 minute threshold for\n\t\tline errored seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached15MinPCV(6)' indicates that the 15 minute threshold for\n\t\tpath coding violations has been reached.\n\n        \tThe bit 'ds1ThresholdReached15MinSES(7)' indicates that the 15 minute threshold for\n\t\tseverely errored seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached15MinSEFS(8)' indicates that the 15 minute threshold for\n\t\tserverly errored framing seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached15MinUAS(9)' indicates that the 15 minute threshold for\n\t\tunavailable seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrBES(10)' indicates that the 24 hour threshold for\n\t\tbursty errored seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached24HrCSS(11)' indicates that the 24 hour threshold for\n\t\tcontrolled slip seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached24HrDM(12)' indicates that the 24 hour threshold for\n\t\tdegraded minutes has been reached.\n\n \t\tThe bit 'ds1ThresholdReached24HrES(13)' indicates that the 24 hour threshold for\n\t\terrored seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrLCV(14)' indicates that the 24 hour threshold for\n\t\tline code violations has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrLES(15)' indicates that the 24 hour threshold for\n\t\tline errored seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrPCV(16)' indicates that the 24 hour threshold for\n\t\tpath code violations has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrSES(17)' indicates that the 24 hour threshold for\n\t\tseverely errored seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrSEFS(18)' indicates that the 24 hour threshold for\n\t\tseverely errored framing seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrUAS(19)' indicates that the 24 hour threshold for\n\t\tunavailable seconds has been reached.")
adGenAOSDs1PreviousThresholdAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 1, 1, 3), Bits().clone(namedValues=NamedValues(("ds1ThresholdReached15MinBES", 0), ("ds1ThresholdReached15MinCSS", 1), ("ds1ThresholdReached15MinDM", 2), ("ds1ThresholdReached15MinES", 3), ("ds1ThresholdReached15MinLCV", 4), ("ds1ThresholdReached15MinLES", 5), ("ds1ThresholdReached15MinPCV", 6), ("ds1ThresholdReached15MinSES", 7), ("ds1ThresholdReached15MinSEFS", 8), ("ds1ThresholdReached15MinUAS", 9), ("ds1ThresholdReached24HrBES", 10), ("ds1ThresholdReached24HrCSS", 11), ("ds1ThresholdReached24HrDM", 12), ("ds1ThresholdReached24HrES", 13), ("ds1ThresholdReached24HrLCV", 14), ("ds1ThresholdReached24HrLES", 15), ("ds1ThresholdReached24HrPCV", 16), ("ds1ThresholdReached24HrSES", 17), ("ds1ThresholdReached24HrSEFS", 18), ("ds1ThresholdReached24HrUAS", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSDs1PreviousThresholdAlarms.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1PreviousThresholdAlarms.setDescription("This object describes the various DS1 error thresholds that were crossed before the last threshold change.\n\n\t\tThe bit 'ds1ThresholdReached15MinBES(0)' indicates that the 15 minute threshold for\n\t\tbursty errored seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached15MinCSS(1)' indicates that the 15 minute threshold for\n\t\tcontrolled slip seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached15MinDM(2)' indicates that the 15 minute threshold for\n\t\tdegraded minutes has been reached\n\n\t\tThe bit 'ds1ThresholdReached15MinES(3)' indicates that the 15 minute threshold for\n\t\terrored seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached15MinLCV(4)' indicates that the 15 minute threshold for\n\t\tline code violations has been reached.\n\n       \t \tThe bit 'ds1ThresholdReached15MinLES(5)' indicates that the 15 minute threshold for\n\t\tline errored seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached15MinPCV(6)' indicates that the 15 minute threshold for\n\t\tpath coding violations has been reached.\n\n        \tThe bit 'ds1ThresholdReached15MinSES(7)' indicates that the 15 minute threshold for\n\t\tseverely errored seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached15MinSEFS(8)' indicates that the 15 minute threshold for\n\t\tserverly errored framing seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached15MinUAS(9)' indicates that the 15 minute threshold for\n\t\tunavailable seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrBES(10)' indicates that the 24 hour threshold for\n\t\tbursty errored seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached24HrCSS(11)' indicates that the 24 hour threshold for\n\t\tcontrolled slip seconds has been reached.\n\n        \tThe bit 'ds1ThresholdReached24HrDM(12)' indicates that the 24 hour threshold for\n\t\tdegraded minutes has been reached.\n\n \t\tThe bit 'ds1ThresholdReached24HrES(13)' indicates that the 24 hour threshold for\n\t\terrored seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrLCV(14)' indicates that the 24 hour threshold for\n\t\tline code violations has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrLES(15)' indicates that the 24 hour threshold for\n\t\tline errored seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrPCV(16)' indicates that the 24 hour threshold for\n\t\tpath code violations has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrSES(17)' indicates that the 24 hour threshold for\n\t\tseverely errored seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrSEFS(18)' indicates that the 24 hour threshold for\n\t\tseverely errored framing seconds has been reached.\n\n\t\tThe bit 'ds1ThresholdReached24HrUAS(19)' indicates that the 24 hour threshold for\n\t\tunavailable seconds has been reached.")
adGenAOSDs1LastThresholdChange = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adGenAOSDs1LastThresholdChange.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1LastThresholdChange.setDescription('Amount of time router had been up when the threshold status last changed.')
adGenAOSDs1Threshold15MinBES = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinBES.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinBES.setDescription('BES 15 minute threshold.')
adGenAOSDs1Threshold15MinCSS = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinCSS.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinCSS.setDescription('CSS 15 minute threshold.')
adGenAOSDs1Threshold15MinDM = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinDM.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinDM.setDescription('DM 15 minute threshold.')
adGenAOSDs1Threshold15MinES = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinES.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinES.setDescription('ES 15 minute threshold.')
adGenAOSDs1Threshold15MinLCV = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(13340)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinLCV.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinLCV.setDescription('LCV 15 minute threshold.')
adGenAOSDs1Threshold15MinLES = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinLES.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinLES.setDescription('LES 15 minute threshold.')
adGenAOSDs1Threshold15MinPCV = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(72)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinPCV.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinPCV.setDescription('PCV 15 minute threshold.')
adGenAOSDs1Threshold15MinSES = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinSES.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinSES.setDescription('SES 15 minute threshold.')
adGenAOSDs1Threshold15MinSEFS = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinSEFS.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinSEFS.setDescription('SEFS 15 minute threshold.')
adGenAOSDs1Threshold15MinUAS = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinUAS.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold15MinUAS.setDescription('UAS 15 minute threshold.')
adGenAOSDs1Threshold24HrBES = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrBES.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrBES.setDescription('BES 24 hour threshold.')
adGenAOSDs1Threshold24HrCSS = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrCSS.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrCSS.setDescription('CSS 24 hour threshold.')
adGenAOSDs1Threshold24HrDM = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrDM.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrDM.setDescription('DM 24 hour threshold.')
adGenAOSDs1Threshold24HrES = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrES.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrES.setDescription('ES 24 hour threshold.')
adGenAOSDs1Threshold24HrLCV = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(133400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrLCV.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrLCV.setDescription('LCV 24 hour threshold.')
adGenAOSDs1Threshold24HrLES = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrLES.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrLES.setDescription('LES 24 hour threshold.')
adGenAOSDs1Threshold24HrPCV = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(691)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrPCV.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrPCV.setDescription('PCV 24 hour threshold.')
adGenAOSDs1Threshold24HrSES = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrSES.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrSES.setDescription('SES 24 hour threshold.')
adGenAOSDs1Threshold24HrSEFS = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(17)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrSEFS.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrSEFS.setDescription('SEFS 24 hour threshold.')
adGenAOSDs1Threshold24HrUAS = MibScalar((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrUAS.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1Threshold24HrUAS.setDescription('UAS 24 hour threshold.')
adGenAOSDs1ThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 664, 5, 53, 6, 1, 0, 1)).setObjects(("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1ThresholdAlarms"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1PreviousThresholdAlarms"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1LastThresholdChange"))
if mibBuilder.loadTexts: adGenAOSDs1ThresholdReached.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1ThresholdReached.setDescription('This trap indicates that a DS1 threshold status has changed.')
adGenAOSDs1ThresholdConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 6))
adAOSDs1ThresholdCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 6, 1))
adAOSDs1ThresholdGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 6, 2))
adAOSDs1ThresholdCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 6, 1, 1)).setObjects(("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1ThresholdGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adAOSDs1ThresholdCompliance = adAOSDs1ThresholdCompliance.setStatus('current')
if mibBuilder.loadTexts: adAOSDs1ThresholdCompliance.setDescription('The compliance statement for SNMPv2 entities which\n\t            implement the AOS Unit MIB.')
adGenAOSDs1ThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 5, 53, 99, 6, 2, 1)).setObjects(("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Index"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1PreviousThresholdAlarms"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1LastThresholdChange"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1ThresholdAlarms"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold15MinBES"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold15MinCSS"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold15MinDM"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold15MinES"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold15MinLCV"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold15MinLES"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold15MinPCV"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold15MinSES"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold15MinSEFS"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold15MinUAS"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold24HrBES"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold24HrCSS"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold24HrDM"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold24HrES"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold24HrLCV"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold24HrLES"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold24HrPCV"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold24HrSES"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold24HrSEFS"), ("ADTRAN-AOS-DS1-EXT", "adGenAOSDs1Threshold24HrUAS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adGenAOSDs1ThresholdGroup = adGenAOSDs1ThresholdGroup.setStatus('current')
if mibBuilder.loadTexts: adGenAOSDs1ThresholdGroup.setDescription('The DS1 Threshold Group.')
mibBuilder.exportSymbols("ADTRAN-AOS-DS1-EXT", adGenAOSDs1ThresholdsMib=adGenAOSDs1ThresholdsMib, adGenAOSDs1Threshold15MinBES=adGenAOSDs1Threshold15MinBES, adGenAOSDs1Threshold15MinDM=adGenAOSDs1Threshold15MinDM, adGenAOSDs1Threshold15MinSEFS=adGenAOSDs1Threshold15MinSEFS, adGenAOSDs1Threshold24HrES=adGenAOSDs1Threshold24HrES, adGenAOSDs1Threshold24HrLCV=adGenAOSDs1Threshold24HrLCV, adGenAOSDs1ThresholdTraps=adGenAOSDs1ThresholdTraps, adGenAOSDs1ThresholdReached=adGenAOSDs1ThresholdReached, adGenAOSDs1Threshold24HrUAS=adGenAOSDs1Threshold24HrUAS, adGenAOSDs1Threshold15MinCSS=adGenAOSDs1Threshold15MinCSS, adGenAOSDs1Threshold15MinLES=adGenAOSDs1Threshold15MinLES, adGenAOSDs1Threshold24HrPCV=adGenAOSDs1Threshold24HrPCV, adAOSDs1ThresholdGroups=adAOSDs1ThresholdGroups, adGenAOSDs1PreviousThresholdAlarms=adGenAOSDs1PreviousThresholdAlarms, adGenAOSDs1Index=adGenAOSDs1Index, adGenAOSDs1ThresholdGroup=adGenAOSDs1ThresholdGroup, adGenAOSDs1Threshold24HrLES=adGenAOSDs1Threshold24HrLES, adGenAOSDs1Threshold24HrCSS=adGenAOSDs1Threshold24HrCSS, adAOSDs1ThresholdCompliance=adAOSDs1ThresholdCompliance, adGenAOSDs1Threshold24HrSES=adGenAOSDs1Threshold24HrSES, adGenAOSDs1ThresholdsReachedTable=adGenAOSDs1ThresholdsReachedTable, adGenAOSDs1Threshold15MinPCV=adGenAOSDs1Threshold15MinPCV, adGenAOSDs1ThresholdConformance=adGenAOSDs1ThresholdConformance, adGenAOSDs1Threshold15MinLCV=adGenAOSDs1Threshold15MinLCV, PYSNMP_MODULE_ID=adGenAOSDs1ThresholdsMib, adGenAOSDs1ThresholdsReachedEntry=adGenAOSDs1ThresholdsReachedEntry, adGenAOSDs1ThresholdAlarms=adGenAOSDs1ThresholdAlarms, adGenAOSDs1Threshold24HrBES=adGenAOSDs1Threshold24HrBES, adGenAOSDs1Threshold=adGenAOSDs1Threshold, adGenAOSDs1LastThresholdChange=adGenAOSDs1LastThresholdChange, adGenAOSDs1Threshold15MinUAS=adGenAOSDs1Threshold15MinUAS, adAOSDs1ThresholdCompliances=adAOSDs1ThresholdCompliances, adGenAOSDs1Threshold15MinSES=adGenAOSDs1Threshold15MinSES, adGenAOSDs1Threshold24HrSEFS=adGenAOSDs1Threshold24HrSEFS, adGenAOSDs1Threshold24HrDM=adGenAOSDs1Threshold24HrDM, adGenAOSDs1Threshold15MinES=adGenAOSDs1Threshold15MinES)
