#
# PySNMP MIB module ALTEON-ROOT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/alteonos/ALTEON-ROOT-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 09:57:00 2024
# On host fv-az1427-100 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Counter64, Counter32, Integer32, ObjectIdentity, iso, Bits, TimeTicks, IpAddress, enterprises, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Counter64", "Counter32", "Integer32", "ObjectIdentity", "iso", "Bits", "TimeTicks", "IpAddress", "enterprises", "NotificationType", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
alteon = MibIdentifier((1, 3, 6, 1, 4, 1, 1872))
registration2 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1))
private_mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2)).setLabel("private-mibs")
personalContentCache = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 3))
ics = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 3, 1))
switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 1))
gs_switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 2)).setLabel("gs-switch")
isd = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3))
switch_chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 4)).setLabel("switch-chassis")
aws_switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5)).setLabel("aws-switch")
chassis_8600 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 4, 1)).setLabel("chassis-8600")
wsm4Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 4, 1, 2))
platform = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 1))
sslOffload = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 2))
firewall = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 3))
contentDirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 3, 4))
aceswitch110 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 1))
acedirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 2))
aceswitch180 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 3))
acedirector2 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 4))
aceswitch180e = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 5))
acedirector3 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 6))
cachedirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 7))
gs_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8)).setLabel("gs-switches")
aceswitch184 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 9))
acedirector4 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 10))
isd_reg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11)).setLabel("isd-reg")
webswitch_module = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 12)).setLabel("webswitch-module")
aws_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13)).setLabel("aws-switches")
alteonLinkOptimizer = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 14))
wsm_BladeCenter = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 15)).setLabel("wsm-BladeCenter")
alteonLinkOptimizer143 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 16))
alteonLinkOptimizer150 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 17))
ibm_BladeCenterL3 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 18)).setLabel("ibm-BladeCenterL3")
copperModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 18, 1))
fiberModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 18, 2))
aws2000_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1)).setLabel("aws2000-switches")
aws3000_switches = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2)).setLabel("aws3000-switches")
aws2424 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 1))
aws2448 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 2))
aws2224 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 3))
aas2424s = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 4))
aas2208 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 5))
aas2216 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 6))
aws2424E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 7))
aas2424sE5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 8))
aas2208E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 9))
aas2216E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 1, 10))
aws3408 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2, 1))
aws3416 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2, 2))
aws3408E5 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 13, 2, 3))
chas_switch = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1)).setLabel("chas-switch")
chas_switch_reg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 1)).setLabel("chas-switch-reg")
alteon708 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 1, 1))
chas_switch_comp_reg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2)).setLabel("chas-switch-comp-reg")
alteonACPowerSupply7xx = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 1))
alteonDCPowerSupply7xx = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 2))
alteonFan708 = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 3))
alteonModuleMP = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 5))
alteonModuleSF = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 6))
alteonModuleFE_UTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 7)).setLabel("alteonModuleFE-UTP")
alteonModuleGE_SX = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 8)).setLabel("alteonModuleGE-SX")
alteonModuleGE_UTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 8, 1, 2, 9)).setLabel("alteonModuleGE-UTP")
alteonContentDirector = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 1))
alteonSSLOffload = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 2))
alteonPersonalContentCache = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 3))
alteonFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 4))
alteonWSS = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 1, 11, 5))
mibBuilder.exportSymbols("ALTEON-ROOT-MIB", aas2424s=aas2424s, alteonWSS=alteonWSS, alteonModuleSF=alteonModuleSF, alteon=alteon, acedirector3=acedirector3, fiberModule=fiberModule, personalContentCache=personalContentCache, aws_switch=aws_switch, gs_switches=gs_switches, aws3408=aws3408, chas_switch=chas_switch, alteonSSLOffload=alteonSSLOffload, alteonModuleGE_SX=alteonModuleGE_SX, aws2224=aws2224, aws_switches=aws_switches, alteonModuleFE_UTP=alteonModuleFE_UTP, aws3416=aws3416, ics=ics, alteonModuleGE_UTP=alteonModuleGE_UTP, cachedirector=cachedirector, copperModule=copperModule, isd=isd, wsm_BladeCenter=wsm_BladeCenter, aws2000_switches=aws2000_switches, aceswitch110=aceswitch110, aws2448=aws2448, alteon708=alteon708, alteonContentDirector=alteonContentDirector, aws3000_switches=aws3000_switches, alteonACPowerSupply7xx=alteonACPowerSupply7xx, aas2216E5=aas2216E5, aceswitch180e=aceswitch180e, alteonModuleMP=alteonModuleMP, private_mibs=private_mibs, acedirector2=acedirector2, aceswitch184=aceswitch184, aas2216=aas2216, switch=switch, acedirector=acedirector, aws3408E5=aws3408E5, alteonDCPowerSupply7xx=alteonDCPowerSupply7xx, wsm4Traps=wsm4Traps, ibm_BladeCenterL3=ibm_BladeCenterL3, alteonFan708=alteonFan708, aceswitch180=aceswitch180, alteonLinkOptimizer=alteonLinkOptimizer, contentDirector=contentDirector, alteonPersonalContentCache=alteonPersonalContentCache, chas_switch_comp_reg=chas_switch_comp_reg, switch_chassis=switch_chassis, platform=platform, gs_switch=gs_switch, aas2424sE5=aas2424sE5, firewall=firewall, aws2424=aws2424, alteonLinkOptimizer143=alteonLinkOptimizer143, acedirector4=acedirector4, chas_switch_reg=chas_switch_reg, chassis_8600=chassis_8600, webswitch_module=webswitch_module, isd_reg=isd_reg, aas2208=aas2208, alteonLinkOptimizer150=alteonLinkOptimizer150, sslOffload=sslOffload, aas2208E5=aas2208E5, alteonFirewall=alteonFirewall, registration2=registration2, aws2424E5=aws2424E5)
