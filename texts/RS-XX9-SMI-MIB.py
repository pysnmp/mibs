#
# PySNMP MIB module RS-XX9-SMI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/rs/RS-XX9-SMI-MIB
# Produced by pysmi-1.1.12 at Thu Nov 28 03:02:49 2024
# On host fv-az885-149 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
rsProdBroadcastTransmitter, rsRegModules = mibBuilder.importSymbols("RS-COMMON-MIB", "rsProdBroadcastTransmitter", "rsRegModules")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Gauge32, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, ModuleIdentity, Unsigned32, Bits, NotificationType, ObjectIdentity, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "ModuleIdentity", "Unsigned32", "Bits", "NotificationType", "ObjectIdentity", "MibIdentifier", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rsXx9MibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 1, 216))
rsXx9MibModule.setRevisions(('2013-05-29 15:21', '2011-08-16 08:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rsXx9MibModule.setRevisionsDescriptions(('rsXx9Dtmb added', 'Initial revision.',))
if mibBuilder.loadTexts: rsXx9MibModule.setLastUpdated('201305291521Z')
if mibBuilder.loadTexts: rsXx9MibModule.setOrganization('Rohde&Schwarz GmbH & Co. KG')
if mibBuilder.loadTexts: rsXx9MibModule.setContactInfo('Rohde & Schwarz GmbH & Co. KG\n                Broadcasting Division\n                \n                Muehldorfstrasse 15\n                81671 Munich\n                Germany\n                \n                customersupport@rohde-schwarz.com')
if mibBuilder.loadTexts: rsXx9MibModule.setDescription("This MIB defines high level nodes for the organization of all RS-XX9 MIBs.\n                It is intended to be IMPORT'ed by all other RS-XX9 MIBs.\n                \n                The following MIBs are related to this:\n                - RS-COMMON-MIB         - mandatory for this MIB.")
rsXx9Mib = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216))
if mibBuilder.loadTexts: rsXx9Mib.setStatus('current')
if mibBuilder.loadTexts: rsXx9Mib.setDescription('All RS-XX9 MIBs are organized under this node.')
rsXx9Common = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 2))
if mibBuilder.loadTexts: rsXx9Common.setStatus('current')
if mibBuilder.loadTexts: rsXx9Common.setDescription('Root node for the RS-XX9-COMMON-MIB.')
rsXx9Tx = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3))
if mibBuilder.loadTexts: rsXx9Tx.setStatus('current')
if mibBuilder.loadTexts: rsXx9Tx.setDescription('Root node for the RS-XX9-TX-MIB.')
rsXx9MTx = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4))
if mibBuilder.loadTexts: rsXx9MTx.setStatus('current')
if mibBuilder.loadTexts: rsXx9MTx.setDescription('Root node for the RS-XX9-MTX-MIB.')
rsXx9DvbT2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 5))
if mibBuilder.loadTexts: rsXx9DvbT2.setStatus('current')
if mibBuilder.loadTexts: rsXx9DvbT2.setDescription('Root node for the RS-XX9-DVBT2-MIB.')
rsXx9DvbT = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6))
if mibBuilder.loadTexts: rsXx9DvbT.setStatus('current')
if mibBuilder.loadTexts: rsXx9DvbT.setDescription('Root node for the RS-XX9-DVBT-MIB.')
rsXx9Atsc = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 7))
if mibBuilder.loadTexts: rsXx9Atsc.setStatus('current')
if mibBuilder.loadTexts: rsXx9Atsc.setDescription('Root node for the RS-XX9-ATSC-MIB.')
rsXx9IsdbT = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 8))
if mibBuilder.loadTexts: rsXx9IsdbT.setStatus('current')
if mibBuilder.loadTexts: rsXx9IsdbT.setDescription('Root node for the RS-XX9-ISDBT-MIB.')
rsXx9Atv = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 9))
if mibBuilder.loadTexts: rsXx9Atv.setStatus('current')
if mibBuilder.loadTexts: rsXx9Atv.setDescription('Root node for the RS-XX9-ATV-MIB.')
rsXx9Dab = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 10))
if mibBuilder.loadTexts: rsXx9Dab.setStatus('current')
if mibBuilder.loadTexts: rsXx9Dab.setDescription('Root node for the RS-XX9-DAB-MIB.')
rsXx9Fm = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11))
if mibBuilder.loadTexts: rsXx9Fm.setStatus('current')
if mibBuilder.loadTexts: rsXx9Fm.setDescription('Root node for the RS-XX9-FM-MIB.')
rsXx9Dtmb = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12))
if mibBuilder.loadTexts: rsXx9Dtmb.setStatus('current')
if mibBuilder.loadTexts: rsXx9Dtmb.setDescription('Root node for the RS-XX9-DTMB-MIB.')
rsXx9LiquidCooling = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 100))
if mibBuilder.loadTexts: rsXx9LiquidCooling.setStatus('current')
if mibBuilder.loadTexts: rsXx9LiquidCooling.setDescription('Root node for the RS-XX9-LIQUID-COOLING-MIB.')
rsXx9AirCooling = ObjectIdentity((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101))
if mibBuilder.loadTexts: rsXx9AirCooling.setStatus('current')
if mibBuilder.loadTexts: rsXx9AirCooling.setDescription('Root node for the RS-XX9-AIR-COOLING-MIB.')
mibBuilder.exportSymbols("RS-XX9-SMI-MIB", rsXx9Mib=rsXx9Mib, rsXx9Common=rsXx9Common, rsXx9DvbT=rsXx9DvbT, rsXx9AirCooling=rsXx9AirCooling, rsXx9IsdbT=rsXx9IsdbT, rsXx9Atv=rsXx9Atv, rsXx9Dtmb=rsXx9Dtmb, rsXx9Atsc=rsXx9Atsc, rsXx9Fm=rsXx9Fm, rsXx9DvbT2=rsXx9DvbT2, rsXx9LiquidCooling=rsXx9LiquidCooling, rsXx9Tx=rsXx9Tx, rsXx9MibModule=rsXx9MibModule, rsXx9MTx=rsXx9MTx, PYSNMP_MODULE_ID=rsXx9MibModule, rsXx9Dab=rsXx9Dab)
