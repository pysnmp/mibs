#
# PySNMP MIB module IRT-FM-SINGLETRANSMITTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/irt/IRT-FM-SINGLETRANSMITTER-MIB
# Produced by pysmi-1.1.12 at Tue Dec  3 09:44:42 2024
# On host fv-az566-8 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
eventCounter, mibRelease, eventPriority, eventTimeStamp = mibBuilder.importSymbols("IRT-COMMONVARBINDS-MIB", "eventCounter", "mibRelease", "eventPriority", "eventTimeStamp")
fm, SelectOnOff, PresentNotPresent, LocalRemote, FaultOK, WarningOK = mibBuilder.importSymbols("IRT-TRANSMITTER-SMI-MIB", "fm", "SelectOnOff", "PresentNotPresent", "LocalRemote", "FaultOK", "WarningOK")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
sysName, sysDescr, sysLocation = mibBuilder.importSymbols("SNMPv2-MIB", "sysName", "sysDescr", "sysLocation")
IpAddress, Unsigned32, Counter64, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32, Gauge32, NotificationType, Bits, ModuleIdentity, MibIdentifier, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Unsigned32", "Counter64", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32", "Gauge32", "NotificationType", "Bits", "ModuleIdentity", "MibIdentifier", "Integer32")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
fmSingleTransmitter = ModuleIdentity((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1))
fmSingleTransmitter.setRevisions(('2007-05-04 14:00', '2006-12-20 14:00', '2006-09-21 14:00', '2006-09-19 14:00', '2006-09-07 14:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fmSingleTransmitter.setRevisionsDescriptions(('change LocalMode (description) and Module-COMPLIANCE', 'corrections', 'Adding Compliance Statement', 'Correcting Imports', 'Relocation of the TC-MIB from the standard OID area at IEC into the private OID area of the IRT',))
if mibBuilder.loadTexts: fmSingleTransmitter.setLastUpdated('200705041400Z')
if mibBuilder.loadTexts: fmSingleTransmitter.setOrganization('IRT for WORKING-GROUP-TC-MIB')
if mibBuilder.loadTexts: fmSingleTransmitter.setContactInfo('Contact-info.\n\t\t\t\t\n\t\t\t\tAndreas Metz\n\t\t\t\t\n\t\t\t\tInstitut fuer Rundfunktechnik GmbH\n\t\t\t\tBroadcast Networks and Servers (SN)\n\t\t\t\t\n\t\t\t\tFloriansmuehlstr.60\n\t\t\t\t80939 Munich\n\t\t\t\tGermany\n\t\t\t\t\n\t\t\t\tPhone: +49 89 32399 325\n\t\t\t\tFax: +49 89 32399 354\n\t\t\t\t')
if mibBuilder.loadTexts: fmSingleTransmitter.setDescription('Description.\n\t\t\t\t\n\t\t\t\tFM Single Transmitter\n\t\t\t\t\n\t\t\t\tbranch definition\n\t\t\t\t\n\t\t\t\t1st level\n\t\t\t\t\n\t\t\t\tevents              OBJECT IDENTIFIER ::= { fmSingleTransmitter 0 }\n\t\t\t\tfmSTGeneral         OBJECT IDENTIFIER ::= { fmSingleTransmitter 1 }\n\t\t\t\tfmSTEventEnable     OBJECT IDENTIFIER ::= { fmSingleTransmitter 2 }\n\t\t\t\tfmSTEventPriority   OBJECT IDENTIFIER ::= { fmSingleTransmitter 3 }\n\t\t\t\tgroups              OBJECT IDENTIFIER ::= { fmSingleTransmitter 4 }\n\t\t\t\t\n\t\t\t\t2nd level\n\t\t\t\t\n\t\t\t\tfmSTEventEnableGeneral     OBJECT IDENTIFIER ::= { fmSTEventEnable 1 }\n\t\t\t\tfmSTEventPriorityGeneral   OBJECT IDENTIFIER ::= { fmSTEventPriority 1 }\n\t\t\t\t\n\t\t\t\tend branch\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t')
fmEventsST = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 0))
fmSTTransmitterOpModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 0, 1)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTTransmitterOpMode"))
if mibBuilder.loadTexts: fmSTTransmitterOpModeEvent.setStatus('current')
if mibBuilder.loadTexts: fmSTTransmitterOpModeEvent.setDescription('Description. fmSTTransmitterOpMode notification')
fmSTRFPresentEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 0, 2)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTRFPresent"))
if mibBuilder.loadTexts: fmSTRFPresentEvent.setStatus('current')
if mibBuilder.loadTexts: fmSTRFPresentEvent.setDescription('Description. fmSTRFPresent notification')
fmSTFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 0, 3)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTFault"))
if mibBuilder.loadTexts: fmSTFaultEvent.setStatus('current')
if mibBuilder.loadTexts: fmSTFaultEvent.setDescription('Description. fmSTFault notification')
fmSTWarningEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 0, 4)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTWarning"))
if mibBuilder.loadTexts: fmSTWarningEvent.setStatus('current')
if mibBuilder.loadTexts: fmSTWarningEvent.setDescription('Description. fmSTWarning notification')
fmSTLocalModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 0, 5)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTLocalMode"))
if mibBuilder.loadTexts: fmSTLocalModeEvent.setStatus('current')
if mibBuilder.loadTexts: fmSTLocalModeEvent.setDescription('Description. fmSTLocalMode notification')
fmSTGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 1))
fmSTTransmitterOpMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 1, 1), SelectOnOff()).setUnits(' ').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSTTransmitterOpMode.setStatus('current')
if mibBuilder.loadTexts: fmSTTransmitterOpMode.setDescription('Single transmitter. Transmitter control of single  transmitter\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ON\n\t\t\t\t(2) OFF')
fmSTRFPresent = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 1, 2), PresentNotPresent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSTRFPresent.setStatus('current')
if mibBuilder.loadTexts: fmSTRFPresent.setDescription('Single  transmitter. Describes if  the output power is present\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) present\n\t\t\t\t(2) not present\n\t\t\t\t')
fmSTFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 1, 3), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSTFault.setStatus('current')
if mibBuilder.loadTexts: fmSTFault.setDescription('Single transmitter. Fault state of transmitter\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
fmSTWarning = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 1, 4), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSTWarning.setStatus('current')
if mibBuilder.loadTexts: fmSTWarning.setDescription('Single transmitter. Warning state of single transmitter\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
fmSTLocalMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 1, 5), LocalRemote()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSTLocalMode.setStatus('current')
if mibBuilder.loadTexts: fmSTLocalMode.setDescription('Single transmitter. Local  mode\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) local\n\t\t\t\t(2) remote')
fmSTEventEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 2))
fmSTEventEnableGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 2, 1))
fmSTTransmitterOpModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 2, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSTTransmitterOpModeEnable.setStatus('current')
if mibBuilder.loadTexts: fmSTTransmitterOpModeEnable.setDescription('Description.Enable/Disable switch for fmSTTransmitterOpMode event')
fmSTFRFPresentEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSTFRFPresentEnable.setStatus('current')
if mibBuilder.loadTexts: fmSTFRFPresentEnable.setDescription('Description.Enable/Disable switch for fmSTRFPresent event')
fmSTFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 2, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSTFaultEnable.setStatus('current')
if mibBuilder.loadTexts: fmSTFaultEnable.setDescription('Description.Enable/Disable switch for fmSTRFPresent event')
fmSTWarningEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 2, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSTWarningEnable.setStatus('current')
if mibBuilder.loadTexts: fmSTWarningEnable.setDescription('Description.Enable/Disable switch for fmSTWarning event')
fmSTLocalModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSTLocalModeEnable.setStatus('current')
if mibBuilder.loadTexts: fmSTLocalModeEnable.setDescription('Description.Enable/Disable switch for fmSTLocalMode event')
fmSTEventPriority = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 3))
fmSTEventPriorityGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 3, 1))
fmSTTransmitterOpModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSTTransmitterOpModePriority.setStatus('current')
if mibBuilder.loadTexts: fmSTTransmitterOpModePriority.setDescription('Description.Priority for fmSTTransmitterOpMode event')
fmSTRFPresentPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSTRFPresentPriority.setStatus('current')
if mibBuilder.loadTexts: fmSTRFPresentPriority.setDescription('Description.Priority for fmSTRFPresent event')
fmSTFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSTFaultPriority.setStatus('current')
if mibBuilder.loadTexts: fmSTFaultPriority.setDescription('Description.Priority for fmSTFault event')
fmSTWarningPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSTWarningPriority.setStatus('current')
if mibBuilder.loadTexts: fmSTWarningPriority.setDescription('Description.Priority for fmSTWarning event')
fmSTLocalModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSTLocalModePriority.setStatus('current')
if mibBuilder.loadTexts: fmSTLocalModePriority.setDescription('Description.Priority for fmSTLocalMode event')
groupsST = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 4))
objectGroupST = ObjectGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 4, 1)).setObjects(("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTTransmitterOpMode"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTRFPresent"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTFault"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTWarning"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTLocalMode"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTTransmitterOpModeEnable"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTFaultEnable"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTWarningEnable"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTLocalModeEnable"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTTransmitterOpModePriority"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTRFPresentPriority"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTFaultPriority"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTWarningPriority"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTLocalModePriority"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTFRFPresentEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    objectGroupST = objectGroupST.setStatus('current')
if mibBuilder.loadTexts: objectGroupST.setDescription('Description. fm single transmitter  objects')
eventGroupST = NotificationGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 4, 2)).setObjects(("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTLocalModeEvent"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTWarningEvent"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTFaultEvent"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTRFPresentEvent"), ("IRT-FM-SINGLETRANSMITTER-MIB", "fmSTTransmitterOpModeEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eventGroupST = eventGroupST.setStatus('current')
if mibBuilder.loadTexts: eventGroupST.setDescription('Description. fm single transmitter  events')
complianceST = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 5))
fmSingleTransmitterCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 1, 5, 1)).setObjects(("IRT-FM-SINGLETRANSMITTER-MIB", "objectGroupST"), ("IRT-FM-SINGLETRANSMITTER-MIB", "eventGroupST"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fmSingleTransmitterCompliance = fmSingleTransmitterCompliance.setStatus('current')
if mibBuilder.loadTexts: fmSingleTransmitterCompliance.setDescription('Compliance Statement')
mibBuilder.exportSymbols("IRT-FM-SINGLETRANSMITTER-MIB", fmSTLocalModePriority=fmSTLocalModePriority, fmSTLocalModeEnable=fmSTLocalModeEnable, fmSingleTransmitter=fmSingleTransmitter, fmSTFaultEvent=fmSTFaultEvent, fmSTEventPriorityGeneral=fmSTEventPriorityGeneral, fmSTTransmitterOpMode=fmSTTransmitterOpMode, fmSTTransmitterOpModePriority=fmSTTransmitterOpModePriority, fmEventsST=fmEventsST, fmSTTransmitterOpModeEnable=fmSTTransmitterOpModeEnable, fmSTFRFPresentEnable=fmSTFRFPresentEnable, fmSTLocalMode=fmSTLocalMode, fmSTRFPresent=fmSTRFPresent, fmSTRFPresentPriority=fmSTRFPresentPriority, eventGroupST=eventGroupST, complianceST=complianceST, fmSingleTransmitterCompliance=fmSingleTransmitterCompliance, fmSTEventEnableGeneral=fmSTEventEnableGeneral, fmSTTransmitterOpModeEvent=fmSTTransmitterOpModeEvent, fmSTFaultPriority=fmSTFaultPriority, groupsST=groupsST, objectGroupST=objectGroupST, fmSTWarningPriority=fmSTWarningPriority, fmSTRFPresentEvent=fmSTRFPresentEvent, fmSTFault=fmSTFault, fmSTWarning=fmSTWarning, fmSTEventEnable=fmSTEventEnable, fmSTLocalModeEvent=fmSTLocalModeEvent, fmSTWarningEvent=fmSTWarningEvent, fmSTGeneral=fmSTGeneral, PYSNMP_MODULE_ID=fmSingleTransmitter, fmSTFaultEnable=fmSTFaultEnable, fmSTWarningEnable=fmSTWarningEnable, fmSTEventPriority=fmSTEventPriority)
