#
# PySNMP MIB module IRT-DAB-NPLUS1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/irt/IRT-DAB-NPLUS1-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 12:24:42 2024
# On host fv-az1019-803 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
eventTimeStamp, eventPriority, eventCounter, mibRelease = mibBuilder.importSymbols("IRT-COMMONVARBINDS-MIB", "eventTimeStamp", "eventPriority", "eventCounter", "mibRelease")
SelectOnOff, Input1Input2, OkNotOk, SFNMFN, LocalRemote, ReadyNotReady, FaultOK, SelectManualAuto, ExecutedNotExecuted, PresentNotPresent, MuteOk, WarningOK, dab = mibBuilder.importSymbols("IRT-TRANSMITTER-SMI-MIB", "SelectOnOff", "Input1Input2", "OkNotOk", "SFNMFN", "LocalRemote", "ReadyNotReady", "FaultOK", "SelectManualAuto", "ExecutedNotExecuted", "PresentNotPresent", "MuteOk", "WarningOK", "dab")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
sysName, sysLocation, sysDescr = mibBuilder.importSymbols("SNMPv2-MIB", "sysName", "sysLocation", "sysDescr")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, NotificationType, Counter32, iso, ModuleIdentity, Integer32, Unsigned32, Bits, ObjectIdentity, IpAddress, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "NotificationType", "Counter32", "iso", "ModuleIdentity", "Integer32", "Unsigned32", "Bits", "ObjectIdentity", "IpAddress", "Gauge32", "TimeTicks")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
dabnPlus1 = ModuleIdentity((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5))
dabnPlus1.setRevisions(('2007-05-04 14:00', '2006-12-20 14:00', '2006-09-21 14:00', '2006-09-19 14:00', '2006-09-07 14:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: dabnPlus1.setRevisionsDescriptions(('change SFNMode, LocalMode (description) and Module-COMPLIANCE\n\t\t\t\tchange numbering: OIDs\n\t\t\t\t1.3.6.1.4.1.19831.1.1.2.5.3.x and\n\t\t\t\t1.3.6.1.4.1.19831.1.1.2.5.5.x and\n\t\t\t\t1.3.6.1.4.1.19831.1.1.2.5.6.3.x and\n\t\t\t\t1.3.6.1.4.1.19831.1.1.2.5.6.5.x and\n\t\t\t\t1.3.6.1.4.1.19831.1.1.2.5.7.3.x and\n\t\t\t\t1.3.6.1.4.1.19831.1.1.2.5.7.5.2', 'corrections', 'Adding Compliance Statement', 'Correcting Imports', 'Relocation of the TC-MIB from the standard OID area at IEC into the private OID area of the IRT',))
if mibBuilder.loadTexts: dabnPlus1.setLastUpdated('200705041400Z')
if mibBuilder.loadTexts: dabnPlus1.setOrganization('IRT for WORKING-GROUP-TC-MIB')
if mibBuilder.loadTexts: dabnPlus1.setContactInfo('Contact-info.\n\t\t\t\t\n\t\t\t\tAndreas Metz\n\t\t\t\t\n\t\t\t\tInstitut fuer Rundfunktechnik GmbH\n\t\t\t\tBroadcast Networks and Servers (SN)\n\t\t\t\t\n\t\t\t\tFloriansmuehlstr.60\n\t\t\t\t80939 Munich\n\t\t\t\tGermany\n\t\t\t\t\n\t\t\t\tPhone: +49 89 32399 325\n\t\t\t\tFax: +49 89 32399 354\n\t\t\t\t')
if mibBuilder.loadTexts: dabnPlus1.setDescription('Description.\n\t\t\t\tbranch definition\n\t\t\t\t\n\t\t\t\t1st level\n\t\t\t\t\n\t\t\t\tevents                         OBJECT IDENTIFIER ::= { dabnPlus1 0 }\n\t\t\t\tdabnPlus1General               OBJECT IDENTIFIER ::= { dabnPlus1 1 }\n\t\t\t\t  dabnPlus1MainTransmitterTable   is defined below as dabnPlus1 2\n\t\t\t\tdabnPlus1ReserveTransmitter    OBJECT IDENTIFIER ::= { dabnPlus1 3 }\n\t\t\t\t  dabnPlus1TransmitterATable      is defined below as dabnPlus1 4\n\t\t\t\tdabnPlus1TransmitterB          OBJECT IDENTIFIER ::= { dabnPlus1 5 }\n\t\t\t\tdabnPlus1EventEnable           OBJECT IDENTIFIER ::= { dabnPlus1 6 }\n\t\t\t\tdabnPlus1EventPriority         OBJECT IDENTIFIER ::= { dabnPlus1 7 }\n\t\t\t\tgroups                         OBJECT IDENTIFIER ::= { dabnPlus1 8 }\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t2nd level\n\t\t\t\t\n\t\t\t\tdabnPlus1EventEnableGeneral                OBJECT IDENTIFIER ::= { dabnPlus1EventEnable 1 }\n\t\t\t\t  dabnPlus1EventEnableMainTransmitterTable    is defined below as dabnPlus1EventEnable 2\n\t\t\t\tdabnPlus1EventEnableReserveTransmitter     OBJECT IDENTIFIER ::= { dabnPlus1EventEnable 3 }\n\t\t\t\t  dabnPlus1EventEnableTransmitterATable       is defined below as dabnPlus1EventEnable 4 }\n\t\t\t\tdabnPlus1EventEnableTransmitterB           OBJECT IDENTIFIER ::= { dabnPlus1EventEnable 5 }\n\t\t\t\t\n\t\t\t\tdabnPlus1EventPriorityGeneral              OBJECT IDENTIFIER ::= { dabnPlus1EventPriority 1 }\n\t\t\t\t  dabnPlus1EventPriorityMainTransmitterTable  is defined below as dabnPlus1EventPriority 2\n\t\t\t\tdabnPlus1EventPriorityReserveTransmitter   OBJECT IDENTIFIER ::= { dabnPlus1EventPriority 3 }\n\t\t\t\t  dabnPlus1EventPriorityTransmitterATable     is defined below as dabnPlus1EventPriority 4\n\t\t\t\tdabnPlus1EventPriorityTransmitterB         OBJECT IDENTIFIER ::= { dabnPlus1EventPriority 5 }\n\t\t\t\t\n\t\t\t\tend branch')
class TransmitterBFreeOccupied(TextualConvention, Integer32):
    description = 'Convention is inactive!\n\t\t\t\t\n\t\t\t\tDescription. Free/Occupied message for transmitter B\n\t\t\t\t\n\t\t\t\t(1) free              \n\t\t\t\t(2) occupied          '
    status = 'obsolete'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("free", 1), ("occupied", 2))

dabEventsnPlus1 = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0))
dabnPlus1ResetFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 1)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ResetFault"))
if mibBuilder.loadTexts: dabnPlus1ResetFaultEvent.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1ResetFaultEvent.setDescription('Notification is inactive!\n\t\t\t\t\n\t\t\t\tDescription. dabnPlus1ResetFault notification')
dabnPlus1RedundancySwitchOverEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 2)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RedundancySwitchOver"))
if mibBuilder.loadTexts: dabnPlus1RedundancySwitchOverEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RedundancySwitchOverEvent.setDescription('Description. dabnPlus1RedundancySwitchOver notification')
dabnPlus1LocalModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 3)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1LocalMode"))
if mibBuilder.loadTexts: dabnPlus1LocalModeEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1LocalModeEvent.setDescription('Description. dabnPlus1LocalMode notification')
dabnPlus1ControlUnitFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 4)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ControlUnitFault"))
if mibBuilder.loadTexts: dabnPlus1ControlUnitFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1ControlUnitFaultEvent.setDescription('Description. dabnPlus1ControlUnitFault notification')
dabnPlus1SwitchOverModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 5)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverMode"))
if mibBuilder.loadTexts: dabnPlus1SwitchOverModeEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverModeEvent.setDescription('Description. dabnPlus1SwitchOverMode notification')
dabnPlus1SwitchOverReadyEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 6)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverReady"))
if mibBuilder.loadTexts: dabnPlus1SwitchOverReadyEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverReadyEvent.setDescription('Description. dabnPlus1SwitchOverReady notification')
dabnPlus1SwitchOverExecutedEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 7)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverExecuted"))
if mibBuilder.loadTexts: dabnPlus1SwitchOverExecutedEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverExecutedEvent.setDescription('Description. dabnPlus1SwitchOverExecuted notification')
dabnPlus1SwitchOverFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 8)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverFault"))
if mibBuilder.loadTexts: dabnPlus1SwitchOverFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverFaultEvent.setDescription('Description. dabnPlus1SwitchOverFault notification')
dabnPlus1ChannelSelectionEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 9)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ChannelSelection"))
if mibBuilder.loadTexts: dabnPlus1ChannelSelectionEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1ChannelSelectionEvent.setDescription('Description. dabnPlus1ChannelSelection notification')
dabnPlus1TransmitterBResetEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 10)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TransmitterBReset"))
if mibBuilder.loadTexts: dabnPlus1TransmitterBResetEvent.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1TransmitterBResetEvent.setDescription('Notification is inactive!\n\t\t\t\t\n\t\t\t\tDescription. dabnPlus1TransmitterBReset notification')
dabnPlus1TransmitterBModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 11)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TransmitterBMode"))
if mibBuilder.loadTexts: dabnPlus1TransmitterBModeEvent.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1TransmitterBModeEvent.setDescription('Notification is inactive!\n\t\t\t\t\n\t\t\t\tDescription. dabnPlus1TransmitterBMode notification')
dabnPlus1MTInputPreselectionEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 12)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTInputPreselection"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1MTInputPreselectionEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTInputPreselectionEvent.setDescription('Description. dabnPlus1MTInputPreselection notification')
dabnPlus1MTInputAutomaticEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 13)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTInputAutomatic"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1MTInputAutomaticEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTInputAutomaticEvent.setDescription('Description. dabnPlus1MTInputAutomatic notification')
dabnPlus1MTOpModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 14)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTOpMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1MTOpModeEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTOpModeEvent.setDescription('Description. dabnPlus1MTOpMode notification')
dabnPlus1MTRFProgramPresentEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 15)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTRFProgramPresent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1MTRFProgramPresentEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTRFProgramPresentEvent.setDescription('Description. dabnPlus1MTRFProgramPresent notification')
dabnPlus1RTInputPreselectionEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 16)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTInputPreselection"))
if mibBuilder.loadTexts: dabnPlus1RTInputPreselectionEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTInputPreselectionEvent.setDescription('Description. dabnPlus1RTInputPreselection notification')
dabnPlus1RTInputAutomaticEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 17)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTInputAutomatic"))
if mibBuilder.loadTexts: dabnPlus1RTInputAutomaticEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTInputAutomaticEvent.setDescription('Description. dabnPlus1RTInputAutomatic notification')
dabnPlus1RTOpModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 18)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTOpMode"))
if mibBuilder.loadTexts: dabnPlus1RTOpModeEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTOpModeEvent.setDescription('Description. dabnPlus1RTOpMode notification')
dabnPlus1RTRFProgramPresentEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 19)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTRFProgramPresent"))
if mibBuilder.loadTexts: dabnPlus1RTRFProgramPresentEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTRFProgramPresentEvent.setDescription('Description. dabnPlus1RTRFProgramPresent notification')
dabnPlus1TARFPresentEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 20)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TARFPresent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TARFPresentEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TARFPresentEvent.setDescription('Description. dabnPlus1TARFPresent notification')
dabnPlus1TAInput1OKEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 21)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInput1OK"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TAInput1OKEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInput1OKEvent.setDescription('Description. dabnPlus1TAInput1OK notification')
dabnPlus1TAInput2OKEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 22)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInput2OK"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TAInput2OKEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInput2OKEvent.setDescription('Description. dabnPlus1TAInput2OK notification')
dabnPlus1TALocalModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 23)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TALocalMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TALocalModeEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TALocalModeEvent.setDescription('Description. dabnPlus1TALocalMode notification')
dabnPlus1TAInputPreselectionEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 24)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInputPreselection"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TAInputPreselectionEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInputPreselectionEvent.setDescription('Description. dabnPlus1TAInputPreselection notification')
dabnPlus1TAInputAutomaticEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 25)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInputAutomatic"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TAInputAutomaticEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInputAutomaticEvent.setDescription('Description. dabnPlus1TAInputAutomatic notification')
dabnPlus1TAFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 26)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAFault"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TAFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAFaultEvent.setDescription('Description. dabnPlus1TAFault notification')
dabnPlus1TAWarningEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 27)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAWarning"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TAWarningEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAWarningEvent.setDescription('Description. dabnPlus1TAWarning notification')
dabnPlus1TAActiveInputEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 28)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAActiveInput"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TAActiveInputEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAActiveInputEvent.setDescription('Description. dabnPlus1TAActiveInput notification')
dabnPlus1TASFNModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 29)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TASFNMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TASFNModeEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TASFNModeEvent.setDescription('Description. dabnPlus1TASFNMode notification')
dabnPlus1TARefFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 30)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TARefFault"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TARefFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TARefFaultEvent.setDescription('Description. dabnPlus1TARefFault notification')
dabnPlus1TAMuteEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 31)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAMute"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TAMuteEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAMuteEvent.setDescription('Description. dabnPlus1TAMute notification')
dabnPlus1TAWarningTimeStampEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 32)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAWarningTimeStamp"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"))
if mibBuilder.loadTexts: dabnPlus1TAWarningTimeStampEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAWarningTimeStampEvent.setDescription('Description. dabnPlus1TAWarningTimeStamp notification')
dabnPlus1TBRFPresentEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 33)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBRFPresent"))
if mibBuilder.loadTexts: dabnPlus1TBRFPresentEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBRFPresentEvent.setDescription('Description. dabnPlus1TBRFPresent notification')
dabnPlus1TBInput1OKEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 34)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInput1OK"))
if mibBuilder.loadTexts: dabnPlus1TBInput1OKEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInput1OKEvent.setDescription('Description. dabnPlus1TBInput1OK notification')
dabnPlus1TBInput2OKEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 35)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInput2OK"))
if mibBuilder.loadTexts: dabnPlus1TBInput2OKEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInput2OKEvent.setDescription('Description. dabnPlus1TBInput2OK notification')
dabnPlus1TBLocalModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 36)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBLocalMode"))
if mibBuilder.loadTexts: dabnPlus1TBLocalModeEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBLocalModeEvent.setDescription('Description. dabnPlus1TBLocalMode notification')
dabnPlus1TBFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 37)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBFault"))
if mibBuilder.loadTexts: dabnPlus1TBFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBFaultEvent.setDescription('Description. dabnPlus1TBFault notification')
dabnPlus1TBWarningEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 38)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBWarning"))
if mibBuilder.loadTexts: dabnPlus1TBWarningEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBWarningEvent.setDescription('Description. dabnPlus1TBWarning notification')
dabnPlus1TBInputPreselectionEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 39)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInputPreselection"))
if mibBuilder.loadTexts: dabnPlus1TBInputPreselectionEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInputPreselectionEvent.setDescription('Description. dabnPlus1TBInputPreselection notification')
dabnPlus1TBInputAutomaticEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 40)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInputAutomatic"))
if mibBuilder.loadTexts: dabnPlus1TBInputAutomaticEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInputAutomaticEvent.setDescription('Description. dabnPlus1TBInputAutomatic notification')
dabnPlus1TBActiveInputEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 41)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBActiveInput"))
if mibBuilder.loadTexts: dabnPlus1TBActiveInputEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBActiveInputEvent.setDescription('Description. dabnPlus1TBActiveInput notification')
dabnPlus1TBSFNModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 42)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBSFNMode"))
if mibBuilder.loadTexts: dabnPlus1TBSFNModeEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBSFNModeEvent.setDescription('Description. dabnPlus1TBSFNMode notification')
dabnPlus1TBRefFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 43)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBRefFault"))
if mibBuilder.loadTexts: dabnPlus1TBRefFaultEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBRefFaultEvent.setDescription('Description. dabnPlus1TBRefFault notification')
dabnPlus1TBMuteEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 44)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBMute"))
if mibBuilder.loadTexts: dabnPlus1TBMuteEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBMuteEvent.setDescription('Description. dabnPlus1TBMute notification')
dabnPlus1TBWarningTimeStampEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 0, 45)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBWarningTimeStamp"))
if mibBuilder.loadTexts: dabnPlus1TBWarningTimeStampEvent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBWarningTimeStampEvent.setDescription('Description. dabnPlus1TBWarningTimeStamp notification')
dabnPlus1General = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1))
dabnPlus1ResetFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1ResetFault.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1ResetFault.setDescription('Massage is inactive!\n\t\t\t\t\n\t\t\t\tN+1 reserve. Reset fault: Trigger for reset the sum fault\n\t\t\t\t\n\t\t\t\t<1>\n\t\t\t\t\n\t\t\t\t(1) reset sum fault\n\t\t\t\t')
dabnPlus1RedundancySwitchOver = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RedundancySwitchOver.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RedundancySwitchOver.setDescription('N+1 reserve. Redundancy reserve switch over for transmitters B,A1,A2...An\n\t\t\t\t\n\t\t\t\t<-1,0,1,2,3,4,...,n>\n\t\t\t\t\n\t\t\t\t(-1) reserve transmitterB\n\t\t\t\t(0) undefined\n\t\t\t\t(1) transmitter 1\n\t\t\t\t(2) transmitter 2\n\t\t\t\t(3) transmitter 3\n\t\t\t\t(4) transmitter 4\n\t\t\t\t................\n\t\t\t\t(n) transmitter n\n\t\t\t\t')
dabnPlus1LocalMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 3), LocalRemote()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1LocalMode.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1LocalMode.setDescription('N+1 reserve. Local mode\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) local\n\t\t\t\t(2) remote')
dabnPlus1ControlUnitFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 4), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1ControlUnitFault.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1ControlUnitFault.setDescription('N+1 reserve. State of the control unit\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dabnPlus1SwitchOverMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 5), SelectManualAuto()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1SwitchOverMode.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverMode.setDescription('N+1 reserve. Switch over mode: manual or automatic\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) manual \n\t\t\t\t(2) automatic')
dabnPlus1SwitchOverReady = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 6), ReadyNotReady()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1SwitchOverReady.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverReady.setDescription('State of the N+1 reserve  switch over unit\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ready\n\t\t\t\t(2) not ready')
dabnPlus1SwitchOverExecuted = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 7), ExecutedNotExecuted()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1SwitchOverExecuted.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverExecuted.setDescription('N+1 reserve. Shows if the reserve switsch over uinit it has executed\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) executed\n\t\t\t\t(2) not executed')
dabnPlus1SwitchOverFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 8), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1SwitchOverFault.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverFault.setDescription('N+1 reserve. Fault state of the switch over unit\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) faulty\n\t\t\t\t(2) ok')
dabnPlus1ChannelSelection = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1ChannelSelection.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1ChannelSelection.setDescription('N+1 reserve. Chanel selection 1...n of reserve transmitter\n\t\t\t\t\n\t\t\t\t<1,0,2,...,n>\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) chanel 1\n\t\t\t\t(2) chanel 2\n\t\t\t\t...\n\t\t\t\t(n) chanel n\n\t\t\t\t\n\t\t\t\t')
dabnPlus1TransmitterBReset = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TransmitterBReset.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1TransmitterBReset.setDescription('Message is inactive!\n\t\t\t\t\n\t\t\t\tN+1 Reserve. Transmitter B reset: trigger for reset \n\t\t\t\t\n\t\t\t\t<1>\n\t\t\t\t\n\t\t\t\t(1) reset fault\n\t\t\t\t')
dabnPlus1TransmitterBMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 11), TransmitterBFreeOccupied()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TransmitterBMode.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1TransmitterBMode.setDescription('Message is inactive!\n\t\t\t\t\n\t\t\t\tN+1 reserve. Transmitter B redundancy state\n\t\t\t\t\n\t\t\t\t(1) free\n\t\t\t\t(2) occupied\n\t\t\t\t')
dabnPlus1EventTransmitterIndex = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1EventTransmitterIndex.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1EventTransmitterIndex.setDescription('N+1 reserve. Eventindex to be transmitted along which each trap from MaintransmitterTable or TransmitterATable')
dabnPlus1MainTransmitterTable = MibTable((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 2), )
if mibBuilder.loadTexts: dabnPlus1MainTransmitterTable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MainTransmitterTable.setDescription('Table of logical transmitters carrying programs\n\t\t\t\t')
dabnPlus1MainTransmitterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 2, 1), ).setIndexNames((0, "IRT-DAB-NPLUS1-MIB", "dabnPlus1MTIndex"))
if mibBuilder.loadTexts: dabnPlus1MainTransmitterEntry.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MainTransmitterEntry.setDescription('One logical transmitter, numbered from 1 to n')
dabnPlus1MTIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1MTIndex.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTIndex.setDescription('N+1 Reserve. Main transmitter index\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t(1) transmitter 1\n\t\t\t\t(2) transmitter 2\n\t\t\t\t(3) transmitter 3\n\t\t\t\t(4) transmitter 4\n\t\t\t\t(5) transmitter 5\n\t\t\t\t(6) transmitter 6\n\t\t\t\t')
dabnPlus1MTInputPreselection = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 2, 1, 2), Input1Input2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1MTInputPreselection.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTInputPreselection.setDescription('Important! This message (logical view) is redundant with analogue massage \n\t\t\t\tdabnPlus1TAInputPreselection OID: 1.3.6.1.4.1.19831.1.1.2.5.4.1.6\n\t\t\t\tbelow the node dabnPlus1TransmitterATable. \n\t\t\t\tIn the operation system mandatory there must be used only one of these views:\n\t\t\t\t\n\t\t\t\t logical\n\t\t\t\tor\n\t\t\t\t physical\n\t\t\t\t\n\t\t\t\tN+1 Reserve.Main transmitter preselection  input \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) Input 1\n\t\t\t\t(2) Input 2')
dabnPlus1MTInputAutomatic = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 2, 1, 3), SelectOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1MTInputAutomatic.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTInputAutomatic.setDescription('Important! This message (logical view) is redundant with analogue massage \n\t\t\t\tdabnPlus1TAInputAutomatic OID: 1.3.6.1.4.1.19831.1.1.2.5.4.1.7\n\t\t\t\tbelow the node dabnPlus1TransmitterATable. \n\t\t\t\tIn the operation system mandatory there must be used only one of these views:\n\t\t\t\t\n\t\t\t\t logical\n\t\t\t\tor\n\t\t\t\t physical\n\t\t\t\t\n\t\t\t\tN+1 Reserve. Main transmitter reserve input\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ON \n\t\t\t\t(2) OFF ')
dabnPlus1MTOpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 2, 1, 4), SelectOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1MTOpMode.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTOpMode.setDescription('N+1 Reserve. General transmitter control \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ON\n\t\t\t\t(2) OFF')
dabnPlus1MTRFProgramPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 2, 1, 5), PresentNotPresent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1MTRFProgramPresent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTRFProgramPresent.setDescription('N+1 reserve. Describes if the output power of the   main transmitter is present\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) present\n\t\t\t\t(2) not present')
dabnPlus1ReserveTransmitter = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 3))
dabnPlus1RTInputPreselection = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 3, 2), Input1Input2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RTInputPreselection.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTInputPreselection.setDescription('Important! This message (logical view) is redundant with analogue massage \n\t\t\t\tdabnPlus1TBInputPreselection OID: 1.3.6.1.4.1.19831.1.1.2.5.5.5\n\t\t\t\tbelow the node dabnPlus1Transmitter B. \n\t\t\t\tIn the operation system mandatory there must be used only one of these views:\n\t\t\t\t\n\t\t\t\t logical\n\t\t\t\tor\n\t\t\t\t physical\n\t\t\t\t\n\t\t\t\tN+1 reserve. Preselection input reserve transmitter  \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) Input 1\n\t\t\t\t(2) Input 2')
dabnPlus1RTInputAutomatic = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 3, 3), SelectOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RTInputAutomatic.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTInputAutomatic.setDescription('Important! This message (logical view) is redundant with analogue massage \n\t\t\t\tdabnPlus1TBInputAutomatic OID: 1.3.6.1.4.1.19831.1.1.2.5.5.6\n\t\t\t\tbelow the node dabnPlus1TransmitterB. \n\t\t\t\tIn the operation system mandatory there must be used only one of these views:\n\t\t\t\t\n\t\t\t\t logical\n\t\t\t\tor\n\t\t\t\t physical\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tN+1 reserve. Reserve transmitter control \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ON \n\t\t\t\t(2) OFF ')
dabnPlus1RTOpMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 3, 4), SelectOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RTOpMode.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTOpMode.setDescription('N+1 reserve. reserve transmitter control\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ON\n\t\t\t\t(2) OFF')
dabnPlus1RTRFProgramPresent = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 3, 5), PresentNotPresent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1RTRFProgramPresent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTRFProgramPresent.setDescription('N+1 reserve. Describes if the output power of the   reserve transmitter is present\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) present\n\t\t\t\t(2) not present')
dabnPlus1TransmitterATable = MibTable((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4), )
if mibBuilder.loadTexts: dabnPlus1TransmitterATable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TransmitterATable.setDescription('Table of physical transmitters ment to be on air in normal operation')
dabnPlus1TransmitterAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1), ).setIndexNames((0, "IRT-DAB-NPLUS1-MIB", "dabnPlus1TAIndex"))
if mibBuilder.loadTexts: dabnPlus1TransmitterAEntry.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TransmitterAEntry.setDescription('N+1 reserve. One physical transmitter, numbered from A1 to An')
dabnPlus1TAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TAIndex.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAIndex.setDescription('N+1 reserve. Index of the  transmitters A1,A2...An\n\t\t\t\t\n\t\t\t\t')
dabnPlus1TARFPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 2), PresentNotPresent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TARFPresent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TARFPresent.setDescription('N+1 reserve. Describes if the output power of the  transmitter A is present\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) present\n\t\t\t\t(2) not present')
dabnPlus1TAInput1OK = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 3), OkNotOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TAInput1OK.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInput1OK.setDescription('N+1 reserve. Describes if the input signal at the input 1 of  transmitter A is ok\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) signal ok\n\t\t\t\t(2) signal is not ok ')
dabnPlus1TAInput2OK = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 4), OkNotOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TAInput2OK.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInput2OK.setDescription('N+1 reserve. Describes if the input signal at the input 2 of  transmitter A is ok\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) signal ok\n\t\t\t\t(2) signal is not ok ')
dabnPlus1TALocalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 5), LocalRemote()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TALocalMode.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TALocalMode.setDescription('N+1 reserve. Local mode of the  transmitter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) local\n\t\t\t\t(2) remote')
dabnPlus1TAInputPreselection = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 6), Input1Input2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAInputPreselection.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInputPreselection.setDescription('\n\t\t\t\tImportant! This message (logical view) is redundant with analogue massage \n\t\t\t\tdabnPlus1MTInputPreselection OID: 1.3.6.1.4.1.19831.1.1.2.5.2.1.2\n\t\t\t\tbelow the node dabnPlus1MainTransmitterTable. \n\t\t\t\tIn the operation system mandatory there must be used only one of these views:\n\t\t\t\t\n\t\t\t\t logical\n\t\t\t\tor\n\t\t\t\t physical\n\t\t\t\t\n\t\t\t\tN+1 reserve. Preselection input of transmitter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) Input 1\n\t\t\t\t(2) Input 2')
dabnPlus1TAInputAutomatic = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 7), SelectManualAuto()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAInputAutomatic.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInputAutomatic.setDescription('Important! This message (logical view) is redundant with analogue massage \n\t\t\t\tdabnPlus1MTInputAutomatic OID: 1.3.6.1.4.1.19831.1.1.2.5.2.1.3\n\t\t\t\tbelow the node dabnPlus1MainTransmitterTable. \n\t\t\t\tIn the operation system mandatory there must be used only one of these views:\n\t\t\t\t\n\t\t\t\t logical\n\t\t\t\tor\n\t\t\t\t physical\n\t\t\t\t\n\t\t\t\tN+1 reserve. Input selection mode of the transmitter A:  manual or automatic\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) manual \n\t\t\t\t(2) automatic')
dabnPlus1TAFault = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 8), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TAFault.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAFault.setDescription('N+1 reserve. Fault state of the transmitter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dabnPlus1TAWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 9), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TAWarning.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAWarning.setDescription('N+1 reserve. Warning state of transmiter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
dabnPlus1TAActiveInput = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("input1", 1), ("input2", 2), ("seamless", 3), ("hmHierarchicalModulation", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TAActiveInput.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAActiveInput.setDescription('N+1 reserve. Active input of the transmitter A  \n\t\t\t\t\n\t\t\t\t')
dabnPlus1TASFNMode = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 11), SFNMFN()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TASFNMode.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TASFNMode.setDescription('N+1 reserve. SFN mode of transmitter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) SFN\n\t\t\t\t(2) MFN')
dabnPlus1TARefFault = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 12), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TARefFault.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TARefFault.setDescription('N+1 reserve. FAult state of the GPS input or reference frequency of transmitter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dabnPlus1TAMute = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 13), MuteOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TAMute.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAMute.setDescription('N+1 reserve. Mute state of transmitter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) mute\n\t\t\t\t(2) ok')
dabnPlus1TAWarningTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 4, 1, 14), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TAWarningTimeStamp.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAWarningTimeStamp.setDescription('N+1 reserve. Time stamp warning state of transmiter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
dabnPlus1TransmitterB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5))
dabnPlus1TBRFPresent = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 2), PresentNotPresent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TBRFPresent.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBRFPresent.setDescription('n+1 reserve:  Describes if the output power of the  transmitter B is present\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) present\n\t\t\t\t(2) not present')
dabnPlus1TBInput1OK = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 3), OkNotOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TBInput1OK.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInput1OK.setDescription('N+1 reserve. Describes if the input signal at the input 1 of reserve is ok\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) signal ok\n\t\t\t\t(2) signal is not ok ')
dabnPlus1TBInput2OK = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 4), OkNotOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TBInput2OK.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInput2OK.setDescription('N+1 reserve. Describes if the input signal at the input 2 of reserve is ok\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) signal ok\n\t\t\t\t(2) signal is not ok ')
dabnPlus1TBLocalMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 5), LocalRemote()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TBLocalMode.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBLocalMode.setDescription('N+1 reserve. Reserve local mode: Describes the output Power of the  transmitter B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) local\n\t\t\t\t(2) remote')
dabnPlus1TBInputPreselection = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 6), Input1Input2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBInputPreselection.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInputPreselection.setDescription('Important! This message (logical view) is redundant with analogue massage \n\t\t\t\tdabnPlus1RTInputPreselectionReserve OID: 1.3.6.1.4.1.19831.1.1.2.5.3.1\n\t\t\t\tbelow the node dabnPlus1ReserveTransmitter. \n\t\t\t\tIn the operation system mandatory there must be used only one of these views:\n\t\t\t\t\n\t\t\t\t logical\n\t\t\t\tor\n\t\t\t\t physical\n\t\t\t\t\n\t\t\t\tN+1 reserve. Preselection input reserve transmitter  \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) Input 1\n\t\t\t\t(2) Input 2\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t')
dabnPlus1TBInputAutomatic = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 7), SelectManualAuto()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBInputAutomatic.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInputAutomatic.setDescription('Important! This message (logical view) is redundant with analogue massage \n\t\t\t\tdabnPlus1RTInputAutomaticReserve OID: 1.3.6.1.4.1.19831.1.1.2.5.3.2\n\t\t\t\tbelow the node dabnPlus1TransmitterB. \n\t\t\t\tIn the operation system mandatory there must be used only one of these views:\n\t\t\t\t\n\t\t\t\t logical\n\t\t\t\tor\n\t\t\t\t physical\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tN+1 reserve. Reserve input selection mode: manual or automatic\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) manual \n\t\t\t\t(2) automatic')
dabnPlus1TBFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 8), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TBFault.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBFault.setDescription('N+1 reserve. Fault state of reserve \n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dabnPlus1TBWarning = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 9), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TBWarning.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBWarning.setDescription('n+1 reserve. Warning state of reserve\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
dabnPlus1TBActiveInput = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("input1", 1), ("input2", 2), ("seamless", 3), ("hmHierarchicalModulation", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TBActiveInput.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBActiveInput.setDescription('N+1 reserve. Active input of the reserve\n\t\t\t\t\n\t\t\t\t')
dabnPlus1TBSFNMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 11), SFNMFN()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TBSFNMode.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBSFNMode.setDescription('N+1 reserve. SFN mode of reserve\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) SFN\n\t\t\t\t(2) MFN')
dabnPlus1TBRefFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 12), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TBRefFault.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBRefFault.setDescription('N+1 reserve. Fault state of the GPS input or the reference frequency of reserve transmitter\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
dabnPlus1TBMute = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 13), MuteOk()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TBMute.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBMute.setDescription('N+1 reserve. Mute state of reserve\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) mute\n\t\t\t\t(2) ok')
dabnPlus1TBWarningTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 5, 14), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dabnPlus1TBWarningTimeStamp.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBWarningTimeStamp.setDescription('N+1 reserve. Time stamp warning state of transmiter B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
dabnPlus1EventEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6))
dabnPlus1EventEnableGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1))
dabnPlus1ResetFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1ResetFaultEnable.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1ResetFaultEnable.setDescription('Massage is inactive!\n\t\t\t\t\n\t\t\t\tDescription. Enable/Disable switch for dabnPlus1ResetFault event')
dabnPlus1RedundancySwitchOverEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RedundancySwitchOverEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RedundancySwitchOverEnable.setDescription('Description. Enable/Disable switch for dabnPlus1RedundancySwitchOve event')
dabnPlus1LocalModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1LocalModeEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1LocalModeEnable.setDescription('Description. Enable/Disable switch for dabnPlus1LocalMode event')
dabnPlus1ControlUnitFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1ControlUnitFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1ControlUnitFaultEnable.setDescription('Description. Enable/Disable switch for dabnPlus1ControlUnitFault event')
dabnPlus1SwitchOverModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1SwitchOverModeEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverModeEnable.setDescription('Description. Enable/Disable switch for dabnPlus1SwitchOverMode event')
dabnPlus1SwitchOverReadyEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1SwitchOverReadyEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverReadyEnable.setDescription('Description. Enable/Disable switch for dabnPlus1SwitchOverReady event')
dabnPlus1SwitchOverExecutedEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1SwitchOverExecutedEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverExecutedEnable.setDescription('Description. Enable/Disable switch for dabnPlus1SwitchOverExecuted event')
dabnPlus1SwitchOverFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1SwitchOverFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverFaultEnable.setDescription('Description. Enable/Disable switch for dabnPlus1SwitchOverFault event')
dabnPlus1ChannelSelectionEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1ChannelSelectionEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1ChannelSelectionEnable.setDescription('Description. Enable/Disable switch for dabnPlus1ChannelSelection event')
dabnPlus1TransmitterBResetEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TransmitterBResetEnable.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1TransmitterBResetEnable.setDescription('Message is inactive!\n\t\t\t\t\n\t\t\t\tDescription. Enable/Disable switch for dabnPlus1TransmitterBReset event')
dabnPlus1TransmitterBModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TransmitterBModeEnable.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1TransmitterBModeEnable.setDescription('Message is inactive!\n\t\t\t\t\n\t\t\t\tDescription. Enable/Disable switch for dabnPlus1TransmitterBMode event')
dabnPlus1EventEnableMainTransmitterTable = MibTable((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 2), )
if mibBuilder.loadTexts: dabnPlus1EventEnableMainTransmitterTable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1EventEnableMainTransmitterTable.setDescription('dab N+1 reserve. Transmitters main transmitter table: switch for events \n\t\t\t\t')
dabnPlus1EventEnableMainTransmitterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 2, 1), ).setIndexNames((0, "IRT-DAB-NPLUS1-MIB", "dabnPlus1MTIndex"))
if mibBuilder.loadTexts: dabnPlus1EventEnableMainTransmitterEntry.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1EventEnableMainTransmitterEntry.setDescription('One logical transmitter, numbered from 1 to n')
dabnPlus1MTInputPreselectionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1MTInputPreselectionEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTInputPreselectionEnable.setDescription('Description. Enable/Disable switch for dabnPlus1MTInputPreselection event')
dabnPlus1MTInputAutomaticEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 2, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1MTInputAutomaticEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTInputAutomaticEnable.setDescription('Description. Enable/Disable switch for dabnPlus1MTInputAutomatic event')
dabnPlus1MTOpModeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 2, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1MTOpModeEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTOpModeEnable.setDescription('Description. Enable/Disable switch for dabnPlus1MTOpMode event')
dabnPlus1MTRFProgramPresentEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1MTRFProgramPresentEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTRFProgramPresentEnable.setDescription('Description. Enable/Disable switch for dabnPlus1MTRFProgramPresent event')
dabnPlus1EventEnableReserveTransmitter = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 3))
dabnPlus1RTInputPreselectionEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 3, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RTInputPreselectionEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTInputPreselectionEnable.setDescription('Description. Enable/Disable switch for dabnPlus1RTInputPreselection event')
dabnPlus1RTInputAutomaticEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 3, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RTInputAutomaticEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTInputAutomaticEnable.setDescription('Description. Enable/Disable switch for dabnPlus1RTInputAutomatic event')
dabnPlus1RTOpModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 3, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RTOpModeEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTOpModeEnable.setDescription('Description. Enable/Disable switch for dabnPlus1RTOpMode event')
dabnPlus1RTRFProgramPresentEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 3, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RTRFProgramPresentEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTRFProgramPresentEnable.setDescription('Description. Enable/Disable switch for dabnPlus1RTRFProgramPresent event')
dabnPlus1EventEnableTransmitterATable = MibTable((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4), )
if mibBuilder.loadTexts: dabnPlus1EventEnableTransmitterATable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1EventEnableTransmitterATable.setDescription('N+1 reserve. Transmitters A table: switch for events ')
dabnPlus1EventEnableTransmitterAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1), ).setIndexNames((0, "IRT-DAB-NPLUS1-MIB", "dabnPlus1TAIndex"))
if mibBuilder.loadTexts: dabnPlus1EventEnableTransmitterAEntry.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1EventEnableTransmitterAEntry.setDescription('One physical transmitter, numbered from A1 to An')
dabnPlus1TARFPresentEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TARFPresentEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TARFPresentEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TARFPresent event')
dabnPlus1TAInput1OKEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAInput1OKEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInput1OKEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TAInput1OK event')
dabnPlus1TAInput2OKEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAInput2OKEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInput2OKEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TAInput2OK event')
dabnPlus1TALocalModeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TALocalModeEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TALocalModeEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TALocalMode event')
dabnPlus1TAInputPreselectionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAInputPreselectionEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInputPreselectionEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TAInputPreselection event')
dabnPlus1TAInputAutomaticEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAInputAutomaticEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInputAutomaticEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TAInputAutomatic event')
dabnPlus1TAFaultEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAFaultEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TAFault event')
dabnPlus1TAWarningEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAWarningEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAWarningEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TAWarning event')
dabnPlus1TAActiveInputEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAActiveInputEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAActiveInputEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TAActiveInput event')
dabnPlus1TASFNModeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TASFNModeEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TASFNModeEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TASFNMode event')
dabnPlus1TARefFaultEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TARefFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TARefFaultEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TARefFault event')
dabnPlus1TAMuteEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAMuteEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAMuteEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TAMute event')
dabnPlus1TAWarningTimeStampEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 4, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAWarningTimeStampEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAWarningTimeStampEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TAWarningTimeStamp event')
dabnPlus1EventEnableTransmitterB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5))
dabnPlus1TBRFPresentEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBRFPresentEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBRFPresentEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBRFPresent event')
dabnPlus1TBInput1OKEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBInput1OKEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInput1OKEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBInput1OK event')
dabnPlus1TBInput2OKEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBInput2OKEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInput2OKEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBInput2OK event')
dabnPlus1TBLocalModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBLocalModeEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBLocalModeEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBLocalMode event')
dabnPlus1TBFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBFaultEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBFault event')
dabnPlus1TBWarningEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBWarningEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBWarningEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBWarning event')
dabnPlus1TBInputPreselectionEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBInputPreselectionEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInputPreselectionEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBInputPreselection event')
dabnPlus1TBInputAutomaticEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBInputAutomaticEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInputAutomaticEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBInputAutomatic event')
dabnPlus1TBActiveInputEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBActiveInputEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBActiveInputEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBActiveInput event')
dabnPlus1TBSFNModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBSFNModeEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBSFNModeEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBSFNMode event')
dabnPlus1TBRefFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBRefFaultEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBRefFaultEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBRefFault event')
dabnPlus1TBMuteEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBMuteEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBMuteEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBMute event')
dabnPlus1TBWarningTimeStampEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 6, 5, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBWarningTimeStampEnable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBWarningTimeStampEnable.setDescription('Description. Enable/Disable switch for dabnPlus1TBWarningTimeStamp event')
dabnPlus1EventPriority = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7))
dabnPlus1EventPriorityGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1))
dabnPlus1ResetFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1ResetFaultPriority.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1ResetFaultPriority.setDescription('Massage is inactive!\n\t\t\t\t\n\t\t\t\tDescription. Priority for dabnPlus1ResetFault event')
dabnPlus1RedundancySwitchOverPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RedundancySwitchOverPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RedundancySwitchOverPriority.setDescription('Priority switch for dabnPlus1RedundancySwitchOver event')
dabnPlus1LocalModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1LocalModePriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1LocalModePriority.setDescription('Priority switch for dabnPlus1LocalMode event')
dabnPlus1ControlUnitFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1ControlUnitFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1ControlUnitFaultPriority.setDescription('Priority switch for dabnPlus1ControlUnitFault event')
dabnPlus1SwitchOverModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1SwitchOverModePriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverModePriority.setDescription('Priority switch for dabnPlus1SwitchOverMode event')
dabnPlus1SwitchOverReadyPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1SwitchOverReadyPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverReadyPriority.setDescription('Priority switch for dabnPlus1SwitchOverReady event')
dabnPlus1SwitchOverExecutedPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1SwitchOverExecutedPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverExecutedPriority.setDescription('Priority switch for dabnPlus1SwitchOverExecuted event')
dabnPlus1SwitchOverFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1SwitchOverFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1SwitchOverFaultPriority.setDescription('Priority switch for dabnPlus1SwitchOverFault event')
dabnPlus1ChannelSelectionPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1ChannelSelectionPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1ChannelSelectionPriority.setDescription('Priority switch for dabnPlus1RChanelSelection event')
dabnPlus1TransmitterBResetPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TransmitterBResetPriority.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1TransmitterBResetPriority.setDescription('Message is inactive!\n\t\t\t\t\n\t\t\t\tPriority switch for dabnPlus1TransmitterBReset event')
dabnPlus1TransmitterBModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TransmitterBModePriority.setStatus('obsolete')
if mibBuilder.loadTexts: dabnPlus1TransmitterBModePriority.setDescription('Message is inactive!\n\t\t\t\t\n\t\t\t\tPriority switch for dabnPlus1TransmitterBMode event')
dabnPlus1EventPriorityMainTransmitterTable = MibTable((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 2), )
if mibBuilder.loadTexts: dabnPlus1EventPriorityMainTransmitterTable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1EventPriorityMainTransmitterTable.setDescription('dab n+1 reserve. general: priority for event')
dabnPlus1EventPriorityMainTransmitterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 2, 1), ).setIndexNames((0, "IRT-DAB-NPLUS1-MIB", "dabnPlus1MTIndex"))
if mibBuilder.loadTexts: dabnPlus1EventPriorityMainTransmitterEntry.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1EventPriorityMainTransmitterEntry.setDescription('One logical transmitter, numbered from 1 to n')
dabnPlus1MTInputPreselectionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 2, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1MTInputPreselectionPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTInputPreselectionPriority.setDescription('Priority switch for dabnPlus1MTInputPreselection event')
dabnPlus1MTInputAutomaticPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 2, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1MTInputAutomaticPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTInputAutomaticPriority.setDescription('Priority switch for dabnPlus1MTInputAutomatic event')
dabnPlus1MTOpModePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1MTOpModePriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTOpModePriority.setDescription('Priority switch for dabnPlus1MTOpMode event')
dabnPlus1MTRFProgramPresentPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 2, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1MTRFProgramPresentPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1MTRFProgramPresentPriority.setDescription('Priority switch for dabnPlus1MTRFProgramPresent event')
dabnPlus1EventPriorityReserveTransmitter = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 3))
dabnPlus1RTInputPreselectionPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 3, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RTInputPreselectionPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTInputPreselectionPriority.setDescription('Priority switch for dabnPlus1RTInputPreselection event')
dabnPlus1RTInputAutomaticPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 3, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RTInputAutomaticPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTInputAutomaticPriority.setDescription('Priority switch for dabnPlus1RTInputAutomatic event')
dabnPlus1RTOpModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 3, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RTOpModePriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTOpModePriority.setDescription('Priority switch for dabnPlus1RTOpMode event')
dabnPlus1RTRFProgramPresentPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 3, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1RTRFProgramPresentPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1RTRFProgramPresentPriority.setDescription('Priority switch for dabnPlus1RTRFProgramPresent event')
dabnPlus1EventPriorityTransmitterATable = MibTable((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4), )
if mibBuilder.loadTexts: dabnPlus1EventPriorityTransmitterATable.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1EventPriorityTransmitterATable.setDescription('dab n+1 reserve. transmitter A table: priority for event')
dabnPlus1EventPriorityTransmitterAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1), ).setIndexNames((0, "IRT-DAB-NPLUS1-MIB", "dabnPlus1TAIndex"))
if mibBuilder.loadTexts: dabnPlus1EventPriorityTransmitterAEntry.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1EventPriorityTransmitterAEntry.setDescription('One physical transmitter, numbered from A1 to An')
dabnPlus1TARFPresentPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TARFPresentPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TARFPresentPriority.setDescription('Priority switch for dabnPlus1TARFPresent event')
dabnPlus1TAInput1OKPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAInput1OKPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInput1OKPriority.setDescription('Priority switch for dabnPlus1TAInput1OK event')
dabnPlus1TAInput2OKPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAInput2OKPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInput2OKPriority.setDescription('Priority switch for dabnPlus1TAInput2OK event')
dabnPlus1TALocalModePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TALocalModePriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TALocalModePriority.setDescription('Priority switch for dabnPlus1TALocalModer event')
dabnPlus1TAInputPreselectionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAInputPreselectionPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInputPreselectionPriority.setDescription('Priority switch for dabnPlus1TAInputPreselection event')
dabnPlus1TAInputAutomaticPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAInputAutomaticPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAInputAutomaticPriority.setDescription('Priority switch for dabnPlus1TAInputAutomatic event')
dabnPlus1TAFaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAFaultPriority.setDescription('Priority switch for dabnPlus1TAFaultPriority event')
dabnPlus1TAWarningPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAWarningPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAWarningPriority.setDescription('Priority switch for dabnPlus1TAWarning event')
dabnPlus1TAActiveInputPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAActiveInputPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAActiveInputPriority.setDescription('Priority switch for dabnPlus1TAActiveInput event')
dabnPlus1TASFNModePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TASFNModePriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TASFNModePriority.setDescription('Priority switch for dabnPlus1TASFNMode event')
dabnPlus1TARefFaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TARefFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TARefFaultPriority.setDescription('Priority switch for dabnPlus1TARefFault event')
dabnPlus1TAMutePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAMutePriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAMutePriority.setDescription('Priority switch for dabnPlus1TAMute event')
dabnPlus1TAWarningTimeStampPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 4, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TAWarningTimeStampPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TAWarningTimeStampPriority.setDescription('Priority switch for dabnPlus1TAWarningTimeStamp event')
dabnPlus1EventPriorityTransmitterB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5))
dabnPlus1TBRFPresentPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBRFPresentPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBRFPresentPriority.setDescription('Priority switch for dabnPlus1TBRFPresent event')
dabnPlus1TBInput1OKPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBInput1OKPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInput1OKPriority.setDescription('Priority switch for dabnPlus1TBInput1OK event')
dabnPlus1TBInput2OKPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBInput2OKPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInput2OKPriority.setDescription('Priority switch for dabnPlus1TBInput2OK event')
dabnPlus1TBLocalModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBLocalModePriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBLocalModePriority.setDescription('Priority switch for dabnPlus1TBLocalMode event')
dabnPlus1TBFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBFaultPriority.setDescription('Priority switch for dabnPlus1TBFault event')
dabnPlus1TBWarningPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBWarningPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBWarningPriority.setDescription('Priority switch for dabnPlus1TBWarning event')
dabnPlus1TBInputPreselectionPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBInputPreselectionPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInputPreselectionPriority.setDescription('Priority switch for dabnPlus1TBInputPreselection event')
dabnPlus1TBInputAutomaticPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBInputAutomaticPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBInputAutomaticPriority.setDescription('Priority switch for dabnPlus1TBInputAutomatic event')
dabnPlus1TBActiveInputPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBActiveInputPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBActiveInputPriority.setDescription('Priority switch for dabnPlus1TBActiveInput event')
dabnPlus1TBSFNModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBSFNModePriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBSFNModePriority.setDescription('NPriority switch for dabnPlus1TBSFNMode event')
dabnPlus1TBRefFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBRefFaultPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBRefFaultPriority.setDescription('Priority switch for dabnPlus1TBRefFault event')
dabnPlus1TBMutePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBMutePriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBMutePriority.setDescription('Priority switch for dabnPlus1TBMute event')
dabnPlus1TBWarningTimeStampPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 7, 5, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dabnPlus1TBWarningTimeStampPriority.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1TBWarningTimeStampPriority.setDescription('Priority switch for dabnPlus1TBWarningTimeStamp event')
groupsnPlus1 = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 8))
objectGroupnPlus1 = ObjectGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 8, 1)).setObjects(("IRT-DAB-NPLUS1-MIB", "dabnPlus1RedundancySwitchOver"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1LocalMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ControlUnitFault"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverReady"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverExecuted"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverFault"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ChannelSelection"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1EventTransmitterIndex"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTIndex"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTInputPreselection"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTInputAutomatic"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTRFProgramPresent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTInputPreselection"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTInputAutomatic"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTOpMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTRFProgramPresent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAIndex"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TARFPresent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInput1OK"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInput2OK"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TALocalMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInputPreselection"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInputAutomatic"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAFault"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAWarning"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAActiveInput"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TASFNMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TARefFault"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAMute"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAWarningTimeStamp"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBRFPresent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInput1OK"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInput2OK"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBLocalMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBFault"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBWarning"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInputPreselection"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInputAutomatic"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBActiveInput"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBSFNMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBRefFault"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBMute"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBWarningTimeStamp"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RedundancySwitchOverEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1LocalModeEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ControlUnitFaultEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverModeEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverReadyEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverExecutedEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverFaultEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ChannelSelectionEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTInputPreselectionEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTInputAutomaticEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTRFProgramPresentEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTInputPreselectionEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTInputAutomaticEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTOpModeEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTRFProgramPresentEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TARFPresentEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInput1OKEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInput2OKEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TALocalModeEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInputPreselectionEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInputAutomaticEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAFaultEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAWarningEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAActiveInputEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TASFNModeEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TARefFaultEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAMuteEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAWarningTimeStampEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBRFPresentEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInput1OKEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInput2OKEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBLocalModeEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBFaultEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBWarningEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInputPreselectionEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInputAutomaticEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBActiveInputEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBSFNModeEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBRefFaultEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBMuteEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBWarningTimeStampEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RedundancySwitchOverPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1LocalModePriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ControlUnitFaultPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverModePriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverReadyPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverExecutedPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverFaultPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ChannelSelectionPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTInputPreselectionPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTInputAutomaticPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTRFProgramPresentPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTInputPreselectionPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTInputAutomaticPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTOpModePriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTRFProgramPresentPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TARFPresentPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInput1OKPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInput2OKPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TALocalModePriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInputPreselectionPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInputAutomaticPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAFaultPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAWarningPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAActiveInputPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TASFNModePriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TARefFaultPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAMutePriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAWarningTimeStampPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBRFPresentPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInput1OKPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInput2OKPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBLocalModePriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBFaultPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBWarningPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInputPreselectionPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInputAutomaticPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBActiveInputPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBSFNModePriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBRefFaultPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBMutePriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBWarningTimeStampPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTOpMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTOpModeEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTOpModePriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    objectGroupnPlus1 = objectGroupnPlus1.setStatus('current')
if mibBuilder.loadTexts: objectGroupnPlus1.setDescription('Description.N+1 reserve: object group ')
eventGroupnPlus1 = NotificationGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 8, 2)).setObjects(("IRT-DAB-NPLUS1-MIB", "dabnPlus1RedundancySwitchOverEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1LocalModeEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ControlUnitFaultEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverModeEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverReadyEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverExecutedEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1SwitchOverFaultEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ChannelSelectionEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTInputPreselectionEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTInputAutomaticEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTRFProgramPresentEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTInputPreselectionEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTInputAutomaticEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTOpModeEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1RTRFProgramPresentEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TARFPresentEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInput1OKEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInput2OKEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TALocalModeEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInputPreselectionEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAInputAutomaticEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAFaultEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAWarningEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAActiveInputEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TASFNModeEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TARefFaultEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAMuteEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TAWarningTimeStampEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBRFPresentEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInput1OKEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInput2OKEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBLocalModeEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBFaultEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBWarningEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInputPreselectionEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBInputAutomaticEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBActiveInputEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBSFNModeEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBRefFaultEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBMuteEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TBWarningTimeStampEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1MTOpModeEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eventGroupnPlus1 = eventGroupnPlus1.setStatus('current')
if mibBuilder.loadTexts: eventGroupnPlus1.setDescription('Description.N+1 reserve:  group evets')
objectGroupnPlus1obsolete = ObjectGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 8, 3)).setObjects(("IRT-DAB-NPLUS1-MIB", "dabnPlus1ResetFault"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ResetFaultEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1ResetFaultPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TransmitterBReset"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TransmitterBMode"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TransmitterBResetEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TransmitterBModeEnable"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TransmitterBResetPriority"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TransmitterBModePriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    objectGroupnPlus1obsolete = objectGroupnPlus1obsolete.setStatus('obsolete')
if mibBuilder.loadTexts: objectGroupnPlus1obsolete.setDescription('Description.Inactive objects')
eventGroupnPlus1obsolete = NotificationGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 8, 4)).setObjects(("IRT-DAB-NPLUS1-MIB", "dabnPlus1ResetFaultEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TransmitterBResetEvent"), ("IRT-DAB-NPLUS1-MIB", "dabnPlus1TransmitterBModeEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eventGroupnPlus1obsolete = eventGroupnPlus1obsolete.setStatus('obsolete')
if mibBuilder.loadTexts: eventGroupnPlus1obsolete.setDescription('Description. Inactive notifications')
compliancenPlus1 = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 9))
dabnPlus1Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 19831, 1, 1, 2, 5, 9, 1)).setObjects(("IRT-DAB-NPLUS1-MIB", "objectGroupnPlus1"), ("IRT-DAB-NPLUS1-MIB", "eventGroupnPlus1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dabnPlus1Compliance = dabnPlus1Compliance.setStatus('current')
if mibBuilder.loadTexts: dabnPlus1Compliance.setDescription('Compliance Statement')
mibBuilder.exportSymbols("IRT-DAB-NPLUS1-MIB", dabnPlus1TAWarningEvent=dabnPlus1TAWarningEvent, dabnPlus1TAInput1OKPriority=dabnPlus1TAInput1OKPriority, dabnPlus1TBInput1OK=dabnPlus1TBInput1OK, dabnPlus1TBRefFaultEnable=dabnPlus1TBRefFaultEnable, objectGroupnPlus1=objectGroupnPlus1, dabnPlus1ChannelSelection=dabnPlus1ChannelSelection, dabnPlus1TBWarningTimeStampEnable=dabnPlus1TBWarningTimeStampEnable, dabnPlus1TBWarningEnable=dabnPlus1TBWarningEnable, dabnPlus1TBInputAutomatic=dabnPlus1TBInputAutomatic, dabnPlus1TBActiveInput=dabnPlus1TBActiveInput, objectGroupnPlus1obsolete=objectGroupnPlus1obsolete, dabnPlus1LocalModeEvent=dabnPlus1LocalModeEvent, dabnPlus1MTInputPreselection=dabnPlus1MTInputPreselection, dabnPlus1SwitchOverExecutedPriority=dabnPlus1SwitchOverExecutedPriority, dabnPlus1ResetFault=dabnPlus1ResetFault, dabnPlus1MTRFProgramPresentPriority=dabnPlus1MTRFProgramPresentPriority, dabnPlus1TBMuteEvent=dabnPlus1TBMuteEvent, dabnPlus1EventPriorityMainTransmitterTable=dabnPlus1EventPriorityMainTransmitterTable, dabnPlus1SwitchOverFaultEnable=dabnPlus1SwitchOverFaultEnable, dabnPlus1=dabnPlus1, dabnPlus1TBRefFault=dabnPlus1TBRefFault, dabnPlus1MTInputPreselectionEnable=dabnPlus1MTInputPreselectionEnable, dabnPlus1TBActiveInputEvent=dabnPlus1TBActiveInputEvent, dabnPlus1TARFPresentPriority=dabnPlus1TARFPresentPriority, dabnPlus1RTRFProgramPresent=dabnPlus1RTRFProgramPresent, dabnPlus1MTOpModePriority=dabnPlus1MTOpModePriority, dabnPlus1EventPriority=dabnPlus1EventPriority, dabnPlus1TAFaultPriority=dabnPlus1TAFaultPriority, dabnPlus1MTOpModeEvent=dabnPlus1MTOpModeEvent, dabnPlus1MTOpMode=dabnPlus1MTOpMode, dabnPlus1TAInputPreselectionPriority=dabnPlus1TAInputPreselectionPriority, dabnPlus1EventPriorityTransmitterB=dabnPlus1EventPriorityTransmitterB, dabnPlus1TBFaultPriority=dabnPlus1TBFaultPriority, dabnPlus1SwitchOverModePriority=dabnPlus1SwitchOverModePriority, dabnPlus1TARFPresent=dabnPlus1TARFPresent, dabnPlus1TBWarningPriority=dabnPlus1TBWarningPriority, eventGroupnPlus1=eventGroupnPlus1, dabnPlus1TBRFPresent=dabnPlus1TBRFPresent, dabnPlus1TBLocalModePriority=dabnPlus1TBLocalModePriority, dabnPlus1TransmitterBModeEnable=dabnPlus1TransmitterBModeEnable, dabnPlus1TAFaultEnable=dabnPlus1TAFaultEnable, dabnPlus1TransmitterBModePriority=dabnPlus1TransmitterBModePriority, dabnPlus1RTInputPreselectionEnable=dabnPlus1RTInputPreselectionEnable, dabnPlus1RTRFProgramPresentEvent=dabnPlus1RTRFProgramPresentEvent, dabnPlus1RTOpModeEnable=dabnPlus1RTOpModeEnable, dabnPlus1TASFNModeEnable=dabnPlus1TASFNModeEnable, dabnPlus1RedundancySwitchOver=dabnPlus1RedundancySwitchOver, dabnPlus1TAInputAutomatic=dabnPlus1TAInputAutomatic, dabnPlus1TBRefFaultEvent=dabnPlus1TBRefFaultEvent, dabnPlus1TBInput1OKPriority=dabnPlus1TBInput1OKPriority, dabnPlus1TAInputAutomaticPriority=dabnPlus1TAInputAutomaticPriority, dabnPlus1TBSFNModeEnable=dabnPlus1TBSFNModeEnable, dabnPlus1RedundancySwitchOverEnable=dabnPlus1RedundancySwitchOverEnable, dabnPlus1TBInput2OK=dabnPlus1TBInput2OK, dabnPlus1TAInputPreselection=dabnPlus1TAInputPreselection, dabnPlus1TBInputPreselection=dabnPlus1TBInputPreselection, dabnPlus1TALocalModePriority=dabnPlus1TALocalModePriority, dabnPlus1RTOpModePriority=dabnPlus1RTOpModePriority, dabnPlus1TAActiveInputPriority=dabnPlus1TAActiveInputPriority, dabnPlus1MTIndex=dabnPlus1MTIndex, dabnPlus1EventPriorityTransmitterAEntry=dabnPlus1EventPriorityTransmitterAEntry, dabnPlus1TBFault=dabnPlus1TBFault, dabnPlus1General=dabnPlus1General, dabnPlus1TBLocalMode=dabnPlus1TBLocalMode, dabnPlus1RTInputAutomaticEvent=dabnPlus1RTInputAutomaticEvent, dabnPlus1TransmitterBResetPriority=dabnPlus1TransmitterBResetPriority, dabnPlus1TransmitterBResetEnable=dabnPlus1TransmitterBResetEnable, dabnPlus1MTInputAutomaticEnable=dabnPlus1MTInputAutomaticEnable, dabnPlus1SwitchOverReadyEnable=dabnPlus1SwitchOverReadyEnable, dabnPlus1ChannelSelectionEvent=dabnPlus1ChannelSelectionEvent, dabnPlus1TBLocalModeEnable=dabnPlus1TBLocalModeEnable, dabnPlus1TransmitterATable=dabnPlus1TransmitterATable, dabnPlus1TBMuteEnable=dabnPlus1TBMuteEnable, dabnPlus1EventEnable=dabnPlus1EventEnable, dabnPlus1Compliance=dabnPlus1Compliance, dabnPlus1TBSFNMode=dabnPlus1TBSFNMode, dabnPlus1ResetFaultEvent=dabnPlus1ResetFaultEvent, dabnPlus1TransmitterAEntry=dabnPlus1TransmitterAEntry, dabnPlus1SwitchOverReadyPriority=dabnPlus1SwitchOverReadyPriority, dabnPlus1EventPriorityReserveTransmitter=dabnPlus1EventPriorityReserveTransmitter, dabnPlus1TBWarning=dabnPlus1TBWarning, dabnPlus1TBWarningEvent=dabnPlus1TBWarningEvent, dabnPlus1MainTransmitterTable=dabnPlus1MainTransmitterTable, TransmitterBFreeOccupied=TransmitterBFreeOccupied, dabnPlus1TBFaultEnable=dabnPlus1TBFaultEnable, dabnPlus1TBSFNModeEvent=dabnPlus1TBSFNModeEvent, dabnPlus1TAInput1OK=dabnPlus1TAInput1OK, dabnPlus1TAWarning=dabnPlus1TAWarning, dabnPlus1EventEnableMainTransmitterTable=dabnPlus1EventEnableMainTransmitterTable, dabnPlus1EventEnableTransmitterATable=dabnPlus1EventEnableTransmitterATable, dabnPlus1TAWarningTimeStamp=dabnPlus1TAWarningTimeStamp, dabnPlus1MTInputAutomaticEvent=dabnPlus1MTInputAutomaticEvent, dabnPlus1TARefFault=dabnPlus1TARefFault, dabnPlus1TBInput2OKEnable=dabnPlus1TBInput2OKEnable, dabnPlus1RedundancySwitchOverPriority=dabnPlus1RedundancySwitchOverPriority, eventGroupnPlus1obsolete=eventGroupnPlus1obsolete, dabnPlus1TAWarningTimeStampPriority=dabnPlus1TAWarningTimeStampPriority, dabnPlus1TARefFaultEnable=dabnPlus1TARefFaultEnable, dabnPlus1TAInput1OKEvent=dabnPlus1TAInput1OKEvent, dabnPlus1TAInput2OKEvent=dabnPlus1TAInput2OKEvent, compliancenPlus1=compliancenPlus1, dabnPlus1TAWarningTimeStampEvent=dabnPlus1TAWarningTimeStampEvent, dabnPlus1EventEnableTransmitterAEntry=dabnPlus1EventEnableTransmitterAEntry, dabnPlus1EventPriorityMainTransmitterEntry=dabnPlus1EventPriorityMainTransmitterEntry, dabnPlus1LocalModePriority=dabnPlus1LocalModePriority, dabnPlus1TBRFPresentPriority=dabnPlus1TBRFPresentPriority, dabnPlus1EventEnableMainTransmitterEntry=dabnPlus1EventEnableMainTransmitterEntry, dabnPlus1ControlUnitFaultEvent=dabnPlus1ControlUnitFaultEvent, dabnPlus1ControlUnitFault=dabnPlus1ControlUnitFault, dabnPlus1TBSFNModePriority=dabnPlus1TBSFNModePriority, dabnPlus1TALocalModeEvent=dabnPlus1TALocalModeEvent, dabnPlus1TransmitterB=dabnPlus1TransmitterB, dabnPlus1TAInput2OKPriority=dabnPlus1TAInput2OKPriority, dabnPlus1TBInput2OKEvent=dabnPlus1TBInput2OKEvent, dabnPlus1TAWarningEnable=dabnPlus1TAWarningEnable, dabnPlus1SwitchOverExecuted=dabnPlus1SwitchOverExecuted, dabnPlus1TAActiveInput=dabnPlus1TAActiveInput, dabnPlus1SwitchOverMode=dabnPlus1SwitchOverMode, dabnPlus1TBRefFaultPriority=dabnPlus1TBRefFaultPriority, dabnPlus1EventEnableTransmitterB=dabnPlus1EventEnableTransmitterB, dabnPlus1MTInputPreselectionPriority=dabnPlus1MTInputPreselectionPriority, dabnPlus1RTInputAutomatic=dabnPlus1RTInputAutomatic, dabnPlus1TBWarningTimeStampPriority=dabnPlus1TBWarningTimeStampPriority, dabnPlus1SwitchOverFault=dabnPlus1SwitchOverFault, dabnPlus1TAInput2OKEnable=dabnPlus1TAInput2OKEnable, dabnPlus1TBRFPresentEnable=dabnPlus1TBRFPresentEnable, dabnPlus1TBInputAutomaticEvent=dabnPlus1TBInputAutomaticEvent, dabnPlus1MTRFProgramPresentEnable=dabnPlus1MTRFProgramPresentEnable, dabnPlus1TBInput2OKPriority=dabnPlus1TBInput2OKPriority, dabnPlus1MainTransmitterEntry=dabnPlus1MainTransmitterEntry, dabnPlus1RTInputPreselectionEvent=dabnPlus1RTInputPreselectionEvent, dabnPlus1TBLocalModeEvent=dabnPlus1TBLocalModeEvent, dabnPlus1SwitchOverReady=dabnPlus1SwitchOverReady, dabnPlus1SwitchOverExecutedEnable=dabnPlus1SwitchOverExecutedEnable, dabEventsnPlus1=dabEventsnPlus1, dabnPlus1TAActiveInputEnable=dabnPlus1TAActiveInputEnable, dabnPlus1RTRFProgramPresentPriority=dabnPlus1RTRFProgramPresentPriority, dabnPlus1TBInputPreselectionEvent=dabnPlus1TBInputPreselectionEvent, dabnPlus1TALocalModeEnable=dabnPlus1TALocalModeEnable, dabnPlus1TBInputPreselectionPriority=dabnPlus1TBInputPreselectionPriority, dabnPlus1TAFaultEvent=dabnPlus1TAFaultEvent, dabnPlus1RTOpModeEvent=dabnPlus1RTOpModeEvent, dabnPlus1TBActiveInputPriority=dabnPlus1TBActiveInputPriority, dabnPlus1RTInputPreselection=dabnPlus1RTInputPreselection, dabnPlus1RTInputAutomaticPriority=dabnPlus1RTInputAutomaticPriority, dabnPlus1TARefFaultEvent=dabnPlus1TARefFaultEvent, dabnPlus1TAInput2OK=dabnPlus1TAInput2OK, dabnPlus1EventPriorityGeneral=dabnPlus1EventPriorityGeneral, dabnPlus1RedundancySwitchOverEvent=dabnPlus1RedundancySwitchOverEvent, dabnPlus1ReserveTransmitter=dabnPlus1ReserveTransmitter, dabnPlus1TBInput1OKEvent=dabnPlus1TBInput1OKEvent, dabnPlus1ControlUnitFaultPriority=dabnPlus1ControlUnitFaultPriority, dabnPlus1TBInput1OKEnable=dabnPlus1TBInput1OKEnable, dabnPlus1TAActiveInputEvent=dabnPlus1TAActiveInputEvent, dabnPlus1EventEnableGeneral=dabnPlus1EventEnableGeneral, dabnPlus1LocalModeEnable=dabnPlus1LocalModeEnable, dabnPlus1TBMute=dabnPlus1TBMute, dabnPlus1TBActiveInputEnable=dabnPlus1TBActiveInputEnable, dabnPlus1TBWarningTimeStamp=dabnPlus1TBWarningTimeStamp, dabnPlus1TASFNMode=dabnPlus1TASFNMode, dabnPlus1TBMutePriority=dabnPlus1TBMutePriority, dabnPlus1RTOpMode=dabnPlus1RTOpMode, dabnPlus1TAInputAutomaticEvent=dabnPlus1TAInputAutomaticEvent, dabnPlus1RTInputPreselectionPriority=dabnPlus1RTInputPreselectionPriority, dabnPlus1LocalMode=dabnPlus1LocalMode, dabnPlus1TAInputPreselectionEnable=dabnPlus1TAInputPreselectionEnable, dabnPlus1ControlUnitFaultEnable=dabnPlus1ControlUnitFaultEnable, dabnPlus1TASFNModePriority=dabnPlus1TASFNModePriority, dabnPlus1RTRFProgramPresentEnable=dabnPlus1RTRFProgramPresentEnable, dabnPlus1SwitchOverFaultPriority=dabnPlus1SwitchOverFaultPriority, PYSNMP_MODULE_ID=dabnPlus1, dabnPlus1MTInputAutomaticPriority=dabnPlus1MTInputAutomaticPriority, dabnPlus1TAFault=dabnPlus1TAFault, dabnPlus1TAMuteEvent=dabnPlus1TAMuteEvent, dabnPlus1TransmitterBReset=dabnPlus1TransmitterBReset, dabnPlus1TBRFPresentEvent=dabnPlus1TBRFPresentEvent, dabnPlus1MTOpModeEnable=dabnPlus1MTOpModeEnable, dabnPlus1TARFPresentEnable=dabnPlus1TARFPresentEnable, dabnPlus1TBInputPreselectionEnable=dabnPlus1TBInputPreselectionEnable, dabnPlus1TBWarningTimeStampEvent=dabnPlus1TBWarningTimeStampEvent, dabnPlus1TAInputAutomaticEnable=dabnPlus1TAInputAutomaticEnable, dabnPlus1TALocalMode=dabnPlus1TALocalMode, dabnPlus1TAWarningPriority=dabnPlus1TAWarningPriority, dabnPlus1TBInputAutomaticPriority=dabnPlus1TBInputAutomaticPriority, dabnPlus1RTInputAutomaticEnable=dabnPlus1RTInputAutomaticEnable, dabnPlus1MTRFProgramPresent=dabnPlus1MTRFProgramPresent, dabnPlus1ResetFaultEnable=dabnPlus1ResetFaultEnable, dabnPlus1ChannelSelectionPriority=dabnPlus1ChannelSelectionPriority, dabnPlus1SwitchOverReadyEvent=dabnPlus1SwitchOverReadyEvent, dabnPlus1SwitchOverFaultEvent=dabnPlus1SwitchOverFaultEvent, dabnPlus1SwitchOverModeEnable=dabnPlus1SwitchOverModeEnable, dabnPlus1TARefFaultPriority=dabnPlus1TARefFaultPriority, dabnPlus1MTRFProgramPresentEvent=dabnPlus1MTRFProgramPresentEvent, dabnPlus1TARFPresentEvent=dabnPlus1TARFPresentEvent, dabnPlus1TransmitterBMode=dabnPlus1TransmitterBMode, dabnPlus1TAInput1OKEnable=dabnPlus1TAInput1OKEnable, dabnPlus1TAMute=dabnPlus1TAMute, dabnPlus1ResetFaultPriority=dabnPlus1ResetFaultPriority, dabnPlus1EventPriorityTransmitterATable=dabnPlus1EventPriorityTransmitterATable, dabnPlus1TransmitterBModeEvent=dabnPlus1TransmitterBModeEvent, dabnPlus1SwitchOverModeEvent=dabnPlus1SwitchOverModeEvent, dabnPlus1TAWarningTimeStampEnable=dabnPlus1TAWarningTimeStampEnable, groupsnPlus1=groupsnPlus1, dabnPlus1TBFaultEvent=dabnPlus1TBFaultEvent, dabnPlus1MTInputAutomatic=dabnPlus1MTInputAutomatic, dabnPlus1TBInputAutomaticEnable=dabnPlus1TBInputAutomaticEnable, dabnPlus1TAMutePriority=dabnPlus1TAMutePriority, dabnPlus1ChannelSelectionEnable=dabnPlus1ChannelSelectionEnable, dabnPlus1TAMuteEnable=dabnPlus1TAMuteEnable, dabnPlus1TAInputPreselectionEvent=dabnPlus1TAInputPreselectionEvent, dabnPlus1TransmitterBResetEvent=dabnPlus1TransmitterBResetEvent, dabnPlus1EventTransmitterIndex=dabnPlus1EventTransmitterIndex, dabnPlus1TASFNModeEvent=dabnPlus1TASFNModeEvent, dabnPlus1EventEnableReserveTransmitter=dabnPlus1EventEnableReserveTransmitter, dabnPlus1TAIndex=dabnPlus1TAIndex, dabnPlus1MTInputPreselectionEvent=dabnPlus1MTInputPreselectionEvent, dabnPlus1SwitchOverExecutedEvent=dabnPlus1SwitchOverExecutedEvent)
