#
# PySNMP MIB module COLUBRIS-AAA-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/hpmsm/COLUBRIS-AAA-CLIENT-MIB.my
# Produced by pysmi-1.1.12 at Mon Jul  1 11:14:06 2024
# On host fv-az1493-704 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
colubrisMgmtV2, = mibBuilder.importSymbols("COLUBRIS-SMI", "colubrisMgmtV2")
ColubrisProfileIndex, ColubrisServerIndexOrZero, ColubrisServerIndex = mibBuilder.importSymbols("COLUBRIS-TC", "ColubrisProfileIndex", "ColubrisServerIndexOrZero", "ColubrisServerIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, Gauge32, Counter32, TimeTicks, iso, IpAddress, MibIdentifier, Integer32, Unsigned32, ModuleIdentity, NotificationType, ObjectIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "Counter32", "TimeTicks", "iso", "IpAddress", "MibIdentifier", "Integer32", "Unsigned32", "ModuleIdentity", "NotificationType", "ObjectIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
colubrisAAAClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 8744, 5, 5))
if mibBuilder.loadTexts: colubrisAAAClientMIB.setLastUpdated('200402200000Z')
if mibBuilder.loadTexts: colubrisAAAClientMIB.setOrganization('Colubris Networks, Inc.')
if mibBuilder.loadTexts: colubrisAAAClientMIB.setContactInfo('Colubris Networks\n                     Postal: 200 West Street Ste 300\n                             Waltham, Massachusetts 02451-1121\n                             UNITED STATES\n                     Phone:  +1 781 684 0001\n                     Fax:    +1 781 684 0009\n\n                     E-mail: cn-snmp@colubris.com')
if mibBuilder.loadTexts: colubrisAAAClientMIB.setDescription('Colubris Networks AAA Client MIB file.')
colubrisAAAClientObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1))
colubrisAAAProfileGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 1))
colubrisAAAServerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2))
colubrisAAAProfileTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 1, 1), )
if mibBuilder.loadTexts: colubrisAAAProfileTable.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAProfileTable.setDescription('A table defining the AAA server profiles currently configured\n                 on the device.')
colubrisAAAProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 1, 1, 1), ).setIndexNames((0, "COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAProfileIndex"))
if mibBuilder.loadTexts: colubrisAAAProfileEntry.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAProfileEntry.setDescription('A AAA server profile configured in the device.\n                 colubrisAAAProfileIndex - Uniquely identifies the profile\n                                           within the profile table.')
colubrisAAAProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 1, 1, 1, 1), ColubrisProfileIndex())
if mibBuilder.loadTexts: colubrisAAAProfileIndex.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAProfileIndex.setDescription('Specifies the index of the AAA server profile.')
colubrisAAAProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: colubrisAAAProfileName.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAProfileName.setDescription('Specifies the name of the AAA server profile.')
colubrisAAAProfilePrimaryServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 1, 1, 1, 3), ColubrisServerIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: colubrisAAAProfilePrimaryServerIndex.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAProfilePrimaryServerIndex.setDescription('Indicates the index number of the primary server profile in the table.\n                 A value of zero indicates that no AAA server is defined.')
colubrisAAAProfileSecondaryServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 1, 1, 1, 4), ColubrisServerIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: colubrisAAAProfileSecondaryServerIndex.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAProfileSecondaryServerIndex.setDescription('Indicates the index number of the secondary server profile in the table.\n                 A value of zero indicates that no AAA server is defined.')
colubrisAAAServerTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2, 1), )
if mibBuilder.loadTexts: colubrisAAAServerTable.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAServerTable.setDescription('A table containing the AAA servers currently configured on the\n                 device.')
colubrisAAAServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2, 1, 1), ).setIndexNames((0, "COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAServerIndex"))
if mibBuilder.loadTexts: colubrisAAAServerEntry.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAServerEntry.setDescription('An AAA server configured on the device.\n                 colubrisAAAServerIndex - Uniquely identifies a server inside\n                                          the server table.')
colubrisAAAServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2, 1, 1, 1), ColubrisServerIndex())
if mibBuilder.loadTexts: colubrisAAAServerIndex.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAServerIndex.setDescription('Specifies the index of the AAA server in the table.')
colubrisAAAAuthenProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("radius", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: colubrisAAAAuthenProtocol.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAAuthenProtocol.setDescription('Indicates the protocol used by the AAA client to communicate\n                 with the AAA server.')
colubrisAAAAuthenMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("pap", 1), ("chap", 2), ("mschap", 3), ("mschapv2", 4), ("eapMd5", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: colubrisAAAAuthenMethod.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAAuthenMethod.setDescription('Indicates the authentication method used by the AAA client\n                 to authenticate users via the AAA server.')
colubrisAAAServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: colubrisAAAServerName.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAServerName.setDescription("Specifies the IP address of the AAA server. The string \n                 must be a valid IP address in the format 'nnn.nnn.nnn.nnn'\n                 Where 'nnn' is a number in the range [0..255]. The '.' \n                 character is mandatory between the fields.")
colubrisAAASharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: colubrisAAASharedSecret.setStatus('current')
if mibBuilder.loadTexts: colubrisAAASharedSecret.setDescription('Specifies the shared secret used by the AAA client and \n                 the AAA server. This attribute should only be set if AAA \n                 traffic between the AAA client and server is sent through\n                 a VPN tunnel. Reading this attribute will always return \n                 a zero-length string.')
colubrisAAAAuthenticationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: colubrisAAAAuthenticationPort.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAAuthenticationPort.setDescription('Indicates the port number used by the AAA client to send\n                 authentication requests to the AAA server.')
colubrisAAAAccountingPort = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: colubrisAAAAccountingPort.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAAccountingPort.setDescription('Indicates the port number used by the AAA client to send\n                 accounting information to the AAA server.')
colubrisAAATimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 100))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: colubrisAAATimeout.setStatus('current')
if mibBuilder.loadTexts: colubrisAAATimeout.setDescription('Indicates how long the AAA client will wait for an answer\n                 to an authentication request.')
colubrisAAANASId = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 5, 1, 2, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: colubrisAAANASId.setStatus('current')
if mibBuilder.loadTexts: colubrisAAANASId.setDescription('Indicates the network access server ID to be sent by the\n                 AAA client in each authentication request sent to the \n                 AAA server.')
colubrisAAAClientMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 5, 2))
colubrisAAAClientMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 5, 2, 1))
colubrisAAAClientMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 5, 2, 2))
colubrisAAAClientMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 8744, 5, 5, 2, 1, 1)).setObjects(("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAProfileMIBGroup"), ("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAClientMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisAAAClientMIBCompliance = colubrisAAAClientMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAClientMIBCompliance.setDescription('The compliance statement for entities which implement\n                 the Colubris Networks AAA client MIB.')
colubrisAAAProfileMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 5, 2, 2, 1)).setObjects(("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAProfileName"), ("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAProfilePrimaryServerIndex"), ("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAProfileSecondaryServerIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisAAAProfileMIBGroup = colubrisAAAProfileMIBGroup.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAProfileMIBGroup.setDescription('A collection of objects providing the AAA profile capability.')
colubrisAAAClientMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 5, 2, 2, 2)).setObjects(("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAAuthenProtocol"), ("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAAuthenMethod"), ("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAServerName"), ("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAASharedSecret"), ("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAAuthenticationPort"), ("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAAAccountingPort"), ("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAATimeout"), ("COLUBRIS-AAA-CLIENT-MIB", "colubrisAAANASId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisAAAClientMIBGroup = colubrisAAAClientMIBGroup.setStatus('current')
if mibBuilder.loadTexts: colubrisAAAClientMIBGroup.setDescription('A collection of objects providing the AAA client MIB\n                 capability.')
mibBuilder.exportSymbols("COLUBRIS-AAA-CLIENT-MIB", colubrisAAAAuthenMethod=colubrisAAAAuthenMethod, colubrisAAAClientMIB=colubrisAAAClientMIB, colubrisAAATimeout=colubrisAAATimeout, colubrisAAAClientMIBCompliances=colubrisAAAClientMIBCompliances, colubrisAAAAuthenProtocol=colubrisAAAAuthenProtocol, colubrisAAAProfileEntry=colubrisAAAProfileEntry, colubrisAAAServerIndex=colubrisAAAServerIndex, colubrisAAAProfileSecondaryServerIndex=colubrisAAAProfileSecondaryServerIndex, colubrisAAANASId=colubrisAAANASId, colubrisAAAClientObjects=colubrisAAAClientObjects, colubrisAAAClientMIBConformance=colubrisAAAClientMIBConformance, colubrisAAAServerGroup=colubrisAAAServerGroup, colubrisAAASharedSecret=colubrisAAASharedSecret, colubrisAAAProfileMIBGroup=colubrisAAAProfileMIBGroup, colubrisAAAServerTable=colubrisAAAServerTable, colubrisAAAClientMIBCompliance=colubrisAAAClientMIBCompliance, colubrisAAAProfileGroup=colubrisAAAProfileGroup, colubrisAAAClientMIBGroups=colubrisAAAClientMIBGroups, colubrisAAAProfileTable=colubrisAAAProfileTable, colubrisAAAAccountingPort=colubrisAAAAccountingPort, colubrisAAAAuthenticationPort=colubrisAAAAuthenticationPort, colubrisAAAServerName=colubrisAAAServerName, PYSNMP_MODULE_ID=colubrisAAAClientMIB, colubrisAAAServerEntry=colubrisAAAServerEntry, colubrisAAAClientMIBGroup=colubrisAAAClientMIBGroup, colubrisAAAProfilePrimaryServerIndex=colubrisAAAProfilePrimaryServerIndex, colubrisAAAProfileName=colubrisAAAProfileName, colubrisAAAProfileIndex=colubrisAAAProfileIndex)
