#
# PySNMP MIB module IRT-FM-ACTIVERESERVE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/irt/IRT-FM-ACTIVERESERVE-MIB
# Produced by pysmi-1.1.12 at Wed Dec  4 21:17:08 2024
# On host fv-az585-169 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
eventCounter, eventTimeStamp, mibRelease, eventPriority = mibBuilder.importSymbols("IRT-COMMONVARBINDS-MIB", "eventCounter", "eventTimeStamp", "mibRelease", "eventPriority")
PresentNotPresent, WarningOK, LocalRemote, SelectManualAuto, SelectOnOff, ReadyNotReady, fm, FaultOK, ExecutedNotExecuted = mibBuilder.importSymbols("IRT-TRANSMITTER-SMI-MIB", "PresentNotPresent", "WarningOK", "LocalRemote", "SelectManualAuto", "SelectOnOff", "ReadyNotReady", "fm", "FaultOK", "ExecutedNotExecuted")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
sysLocation, sysName, sysDescr = mibBuilder.importSymbols("SNMPv2-MIB", "sysLocation", "sysName", "sysDescr")
Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, TimeTicks, Bits, ObjectIdentity, Counter64, iso, Gauge32, Integer32, MibIdentifier, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "TimeTicks", "Bits", "ObjectIdentity", "Counter64", "iso", "Gauge32", "Integer32", "MibIdentifier", "ModuleIdentity", "NotificationType")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
fmActiveReserve = ModuleIdentity((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2))
fmActiveReserve.setRevisions(('2007-05-04 14:00', '2006-12-20 14:00', '2006-09-21 14:00', '2006-09-19 14:00', '2006-09-07 14:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fmActiveReserve.setRevisionsDescriptions(('change LocalMode (description only) and Module-COMPLIANCE\n\t\t\t\tchange numbering: OIDs 1.3.6.1.4.1.19831.1.1.3.2.6.1.10-16 and \n\t\t\t\t1.3.6.1.4.1.19831.1.1.3.2.7.1.10-16!\n\t\t\t\t', 'corrections', 'Adding Compliance Statement', 'Correcting Imports', 'Relocation of the TC-MIB from the standard OID area at IEC into the private OID area of the IRT',))
if mibBuilder.loadTexts: fmActiveReserve.setLastUpdated('200705041400Z')
if mibBuilder.loadTexts: fmActiveReserve.setOrganization('IRT-WORKING-GROUP-TC-MIB')
if mibBuilder.loadTexts: fmActiveReserve.setContactInfo('Contact-info.\n\t\t\t\t\n\t\t\t\tAndreas Metz\n\t\t\t\t\n\t\t\t\tInstitut fuer Rundfunktechnik GmbH\n\t\t\t\tBroadcast Networks and Servers (SN)\n\t\t\t\t\n\t\t\t\tFloriansmuehlstr.60\n\t\t\t\t80939 Munich\n\t\t\t\tGermany\n\t\t\t\t\n\t\t\t\tPhone: +49 89 32399 325\n\t\t\t\tFax: +49 89 32399 354\n\t\t\t\t')
if mibBuilder.loadTexts: fmActiveReserve.setDescription('Description.\n\t\t\t\t\n\t\t\t\tbranch definition\n\t\t\t\t\n\t\t\t\t1st level\n\t\t\t\t\n\t\t\t\tevents              OBJECT IDENTIFIER ::= { fmActiveReserve 0 }\n\t\t\t\tfmARGeneral         OBJECT IDENTIFIER ::= { fmActiveReserve 1 }\n\t\t\t\tfmARAmplifierA      OBJECT IDENTIFIER ::= { fmActiveReserve 2 }\n\t\t\t\tfmARAmplifierB      OBJECT IDENTIFIER ::= { fmActiveReserve 3 }\n\t\t\t\tfmARExciterA        OBJECT IDENTIFIER ::= { fmActiveReserve 4 }\n\t\t\t\tfmRExciterB         OBJECT IDENTIFIER ::= { fmActiveReserve 5 }\n\t\t\t\tfmAREventEnable     OBJECT IDENTIFIER ::= { fmActiveReserve 6 }\n\t\t\t\tfmAREventPriority   OBJECT IDENTIFIER ::= { fmActiveReserve 7 }\n\t\t\t\tgroups              OBJECT IDENTIFIER ::= { fmActiveReserve 8 }\n\t\t\t\t\n\t\t\t\t2nd level\n\t\t\t\t\n\t\t\t\tfmAREventEnableGeneral     OBJECT IDENTIFIER ::= { fmAREventEnable 1 }\n\t\t\t\tfmAREventEnableAmplifierA  OBJECT IDENTIFIER ::= { fmAREventEnable 2 }\n\t\t\t\tfmAREventEnableAmplifierB  OBJECT IDENTIFIER ::= { fmAREventEnable 3 }\n\t\t\t\tfmAREventEnableExciterA    OBJECT IDENTIFIER ::= { fmAREventEnable 4 }\n\t\t\t\tfmAREventEnableExciterB    OBJECT IDENTIFIER ::= { fmAREventEnable 5 }\n\t\t\t\t\n\t\t\t\tfmAREventPriorityGeneral     OBJECT IDENTIFIER ::= { fmAREventPriority 1 }\n\t\t\t\tfmAREventPriorityAmplifierA  OBJECT IDENTIFIER ::= { fmAREventPriority 2 }\n\t\t\t\tfmAREventPriorityAmplifierB  OBJECT IDENTIFIER ::= { fmAREventPriority 3 }\n\t\t\t\tfmAREventPriorityExciterA    OBJECT IDENTIFIER ::= { fmAREventPriority 4 }\n\t\t\t\tfmAREventPriorityExciterB    OBJECT IDENTIFIER ::= { fmAREventPriority 5 }\n\t\t\t\t\n\t\t\t\tend branch')
fmEventsAR = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0))
fmARPreselectionExciterEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 1)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARPreselectionExciter"))
if mibBuilder.loadTexts: fmARPreselectionExciterEvent.setStatus('current')
if mibBuilder.loadTexts: fmARPreselectionExciterEvent.setDescription('Description. fmARPreselectionExciter notification')
fmARPreselectionAmplifierEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 2)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARPreselectionAmplifier"))
if mibBuilder.loadTexts: fmARPreselectionAmplifierEvent.setStatus('current')
if mibBuilder.loadTexts: fmARPreselectionAmplifierEvent.setDescription('Description. fmARPreselectionAmplifier notification')
fmARTransmitterOpModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 3)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARTransmitterOpMode"))
if mibBuilder.loadTexts: fmARTransmitterOpModeEvent.setStatus('current')
if mibBuilder.loadTexts: fmARTransmitterOpModeEvent.setDescription('Description. fmARTransmitterOpMode notification')
fmARReserveControlEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 4)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARReserveControl"))
if mibBuilder.loadTexts: fmARReserveControlEvent.setStatus('current')
if mibBuilder.loadTexts: fmARReserveControlEvent.setDescription('Description. fmARReserveControl notification')
fmARActiveAmplifierEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 5)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARActiveAmplifier"))
if mibBuilder.loadTexts: fmARActiveAmplifierEvent.setStatus('current')
if mibBuilder.loadTexts: fmARActiveAmplifierEvent.setDescription('Description. fmARActiveAmplifier notification')
fmARActiveExciterEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 6)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARActiveExciter"))
if mibBuilder.loadTexts: fmARActiveExciterEvent.setStatus('current')
if mibBuilder.loadTexts: fmARActiveExciterEvent.setDescription('Description. fmARActiveExciter notification')
fmARLocalModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 7)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARLocalMode"))
if mibBuilder.loadTexts: fmARLocalModeEvent.setStatus('current')
if mibBuilder.loadTexts: fmARLocalModeEvent.setDescription('Description. fmARLocalMode notification')
fmARControlUnitFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 8)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARControlUnitFault"))
if mibBuilder.loadTexts: fmARControlUnitFaultEvent.setStatus('current')
if mibBuilder.loadTexts: fmARControlUnitFaultEvent.setDescription('Description. fmARControlUnitFault notification')
fmARExciterSwitchOverModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 9)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverMode"))
if mibBuilder.loadTexts: fmARExciterSwitchOverModeEvent.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverModeEvent.setDescription('Description. fmARExciterSwitchOverMode notification')
fmARExciterSwitchOverReadyEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 10)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverReady"))
if mibBuilder.loadTexts: fmARExciterSwitchOverReadyEvent.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverReadyEvent.setDescription('Description. fmARExciterSwitchOverReady notification')
fmARExciterSwitchOverExecutedEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 11)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverExecuted"))
if mibBuilder.loadTexts: fmARExciterSwitchOverExecutedEvent.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverExecutedEvent.setDescription('Description. fmARExciterSwitchOverExecuted notification')
fmARExciterSwitchOverFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 12)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverFault"))
if mibBuilder.loadTexts: fmARExciterSwitchOverFaultEvent.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverFaultEvent.setDescription('Description. fmARExciterSwitchOverFault notification')
fmARAmplifierSwitchOverModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 13)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverMode"))
if mibBuilder.loadTexts: fmARAmplifierSwitchOverModeEvent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverModeEvent.setDescription('Description. fmARAmplifierSwitchOverMode notification')
fmARAmplifierSwitchOverReadyEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 14)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverReady"))
if mibBuilder.loadTexts: fmARAmplifierSwitchOverReadyEvent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverReadyEvent.setDescription('Description. fmARAmplifierSwitchOverReady notification')
fmARAmplifierSwitchOverExecutedEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 15)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverExecuted"))
if mibBuilder.loadTexts: fmARAmplifierSwitchOverExecutedEvent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverExecutedEvent.setDescription('Description. fmARAmplifierSwitchOverExecuted notification')
fmARAmplifierSwitchOverFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 16)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverFault"))
if mibBuilder.loadTexts: fmARAmplifierSwitchOverFaultEvent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverFaultEvent.setDescription('Description. fmARAmplifierSwitchOverFault notification')
fmARAmplifierARFPresentEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 17)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierARFPresent"))
if mibBuilder.loadTexts: fmARAmplifierARFPresentEvent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierARFPresentEvent.setDescription('Description. fmARAmplifierARFPresent notification')
fmARAmplifierAFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 18)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierAFault"))
if mibBuilder.loadTexts: fmARAmplifierAFaultEvent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierAFaultEvent.setDescription('Description. fmARAmplifierAFault notification')
fmARAmplifierAWarningEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 19)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierAWarning"))
if mibBuilder.loadTexts: fmARAmplifierAWarningEvent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierAWarningEvent.setDescription('Description. fmARAmplifierAWarning notification')
fmARAmplifierBRFPresentEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 20)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBRFPresent"))
if mibBuilder.loadTexts: fmARAmplifierBRFPresentEvent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBRFPresentEvent.setDescription('Description. fmARAmplifierBRFPresent notification')
fmARAmplifierBFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 21)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBFault"))
if mibBuilder.loadTexts: fmARAmplifierBFaultEvent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBFaultEvent.setDescription('Description. fmARAmplifierBFault notification')
fmARAmplifierBWarningEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 22)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBWarning"))
if mibBuilder.loadTexts: fmARAmplifierBWarningEvent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBWarningEvent.setDescription('Description. fmARAmplifierBWarning notification')
fmARExciterALocalModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 23)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterALocalMode"))
if mibBuilder.loadTexts: fmARExciterALocalModeEvent.setStatus('current')
if mibBuilder.loadTexts: fmARExciterALocalModeEvent.setDescription('Description. fmARExciterALocalMode notification')
fmARExciterAFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 24)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterAFault"))
if mibBuilder.loadTexts: fmARExciterAFaultEvent.setStatus('current')
if mibBuilder.loadTexts: fmARExciterAFaultEvent.setDescription('Description. fmARExciterAFault notification')
fmARExciterAWarningEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 25)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterAWarning"))
if mibBuilder.loadTexts: fmARExciterAWarningEvent.setStatus('current')
if mibBuilder.loadTexts: fmARExciterAWarningEvent.setDescription('Description. fmARExciterAWarning notification')
fmARExciterBLocalModeEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 26)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBLocalMode"))
if mibBuilder.loadTexts: fmARExciterBLocalModeEvent.setStatus('current')
if mibBuilder.loadTexts: fmARExciterBLocalModeEvent.setDescription('Description. fmARExciterBLocalMode notification')
fmARExciterBFaultEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 27)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBFault"))
if mibBuilder.loadTexts: fmARExciterBFaultEvent.setStatus('current')
if mibBuilder.loadTexts: fmARExciterBFaultEvent.setDescription('Description. fmARExciterBFault notification')
fmARExciterBWarningEvent = NotificationType((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 0, 28)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("IRT-COMMONVARBINDS-MIB", "eventTimeStamp"), ("IRT-COMMONVARBINDS-MIB", "eventPriority"), ("IRT-COMMONVARBINDS-MIB", "eventCounter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBWarning"))
if mibBuilder.loadTexts: fmARExciterBWarningEvent.setStatus('current')
if mibBuilder.loadTexts: fmARExciterBWarningEvent.setDescription('Description. fmARExciterBWarning notification')
fmARGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1))
fmARPreselectionExciter = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("exciterA", 1), ("exciterB", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARPreselectionExciter.setStatus('current')
if mibBuilder.loadTexts: fmARPreselectionExciter.setDescription('Aktive reserve. Preselection of the exciter\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t')
fmARPreselectionAmplifier = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("amplifierA", 1), ("amplifierB", 2), ("amplifierAB", 3), ("amplifierABtodummyload", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARPreselectionAmplifier.setStatus('current')
if mibBuilder.loadTexts: fmARPreselectionAmplifier.setDescription('Aktive reserve. Preselection amplifier \n\t\t\t\t\n\t\t\t\t')
fmARTransmitterOpMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 3), SelectOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARTransmitterOpMode.setStatus('current')
if mibBuilder.loadTexts: fmARTransmitterOpMode.setDescription('General transmitter control of aktive reserve\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ON\n\t\t\t\t(2) OFF')
fmARReserveControl = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 4), SelectOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARReserveControl.setStatus('current')
if mibBuilder.loadTexts: fmARReserveControl.setDescription('Reserve control of aktive reserve\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ON \n\t\t\t\t(2) OFF ')
fmARActiveAmplifier = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("amplifierA", 1), ("amplifierB", 2), ("amplifierAB", 3), ("amplifierABtoDummyload", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARActiveAmplifier.setStatus('current')
if mibBuilder.loadTexts: fmARActiveAmplifier.setDescription('Active amplifier  of aktive reserve\n\t\t\t\t\n\t\t\t\t')
fmARActiveExciter = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("exciterA", 1), ("exciterB", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARActiveExciter.setStatus('current')
if mibBuilder.loadTexts: fmARActiveExciter.setDescription('Active exciter  of aktive reserve\n\t\t\t\t\n\t\t\t\t')
fmARLocalMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 7), LocalRemote()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARLocalMode.setStatus('current')
if mibBuilder.loadTexts: fmARLocalMode.setDescription('Active reserve. Local mode\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) local\n\t\t\t\t(2) remote')
fmARControlUnitFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 8), FaultOK()).setUnits(' ').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARControlUnitFault.setStatus('current')
if mibBuilder.loadTexts: fmARControlUnitFault.setDescription('Aktive reserve. State of the control unit\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
fmARExciterSwitchOverMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 9), SelectManualAuto()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterSwitchOverMode.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverMode.setDescription('Aktive reserve. Exciter switch over mode: manual or automatic\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) manual \n\t\t\t\t(2) automatic')
fmARExciterSwitchOverReady = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 10), ReadyNotReady()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARExciterSwitchOverReady.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverReady.setDescription('Aktive reserve. State of the exciter switch over unit\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ready\n\t\t\t\t(2) not ready')
fmARExciterSwitchOverExecuted = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 11), ExecutedNotExecuted()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARExciterSwitchOverExecuted.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverExecuted.setDescription('Aktive reserve. Shows if the exciter switch over unit it has executed\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) executed\n\t\t\t\t(2) not executed')
fmARExciterSwitchOverFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 12), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARExciterSwitchOverFault.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverFault.setDescription('Aktive reserve. Fault state of the exciter switch over unit\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) faulty\n\t\t\t\t(2) ok')
fmARAmplifierSwitchOverMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 13), SelectManualAuto()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverMode.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverMode.setDescription('Active reserve. Amplifier switch over mode: manual or automatic\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) manual\n\t\t\t\t(2) automatic')
fmARAmplifierSwitchOverReady = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 14), ReadyNotReady()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverReady.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverReady.setDescription('Active reserve. State of the amplifier switch over unit\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) ready\n\t\t\t\t(2) not ready')
fmARAmplifierSwitchOverExecuted = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 15), ExecutedNotExecuted()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverExecuted.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverExecuted.setDescription('Active reserve. Shows if the amplifier switch over unit it has executed\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) executed\n\t\t\t\t(2) not executed')
fmARAmplifierSwitchOverFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 1, 16), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverFault.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverFault.setDescription('Active reserve. Fault state of the amplifier switch over unit\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) faulty\n\t\t\t\t(2) ok')
fmARAmplifierA = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 2))
fmARAmplifierARFPresent = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 2, 1), PresentNotPresent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARAmplifierARFPresent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierARFPresent.setDescription('Active reserve. Describes if the output power of the amplifier A is present\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) present\n\t\t\t\t(2) not present')
fmARAmplifierAFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 2, 2), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARAmplifierAFault.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierAFault.setDescription('Active reserve. Fault state of amplifier A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
fmARAmplifierAWarning = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 2, 3), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARAmplifierAWarning.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierAWarning.setDescription('Active reserve. Warning state of amplifier A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
fmARAmplifierB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 3))
fmARAmplifierBRFPresent = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 3, 1), PresentNotPresent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARAmplifierBRFPresent.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBRFPresent.setDescription('Active reserve. Describes if the output power of the amplifier B is present\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) present\n\t\t\t\t(2) not present')
fmARAmplifierBFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 3, 2), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARAmplifierBFault.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBFault.setDescription('Active reserve. Fault state of amplifier B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
fmARAmplifierBWarning = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 3, 3), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARAmplifierBWarning.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBWarning.setDescription('Active reserve. Warning state of amplifier B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
fmARExciterA = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 4))
fmARExciterALocalMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 4, 1), LocalRemote()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARExciterALocalMode.setStatus('current')
if mibBuilder.loadTexts: fmARExciterALocalMode.setDescription('Active reserve. State of the local mode\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) local\n\t\t\t\t(2) remote')
fmARExciterAFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 4, 2), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARExciterAFault.setStatus('current')
if mibBuilder.loadTexts: fmARExciterAFault.setDescription('Active reserve. State of the exciter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
fmARExciterAWarning = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 4, 3), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARExciterAWarning.setStatus('current')
if mibBuilder.loadTexts: fmARExciterAWarning.setDescription('Active reserve. Warning state of the exciter A\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
fmARExciterB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 5))
fmARExciterBLocalMode = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 5, 1), LocalRemote()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARExciterBLocalMode.setStatus('current')
if mibBuilder.loadTexts: fmARExciterBLocalMode.setDescription('Active reserve. State of the local mode\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) local\n\t\t\t\t(2) remote')
fmARExciterBFault = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 5, 2), FaultOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARExciterBFault.setStatus('current')
if mibBuilder.loadTexts: fmARExciterBFault.setDescription('Active reserve. Fault state of the exciter B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) fault\n\t\t\t\t(2) ok')
fmARExciterBWarning = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 5, 3), WarningOK()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmARExciterBWarning.setStatus('current')
if mibBuilder.loadTexts: fmARExciterBWarning.setDescription('Active reserve. Warning state of the exciter B\n\t\t\t\t\n\t\t\t\t(0) undefined\n\t\t\t\t(1) warning\n\t\t\t\t(2) ok')
fmAREventEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6))
fmAREventEnableGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1))
fmARPreselectionExciterEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARPreselectionExciterEnable.setStatus('current')
if mibBuilder.loadTexts: fmARPreselectionExciterEnable.setDescription('Description.Enable/Disable switch for fmARPreselectionExciter event')
fmARPreselectionAmplifierEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARPreselectionAmplifierEnable.setStatus('current')
if mibBuilder.loadTexts: fmARPreselectionAmplifierEnable.setDescription('Description.Enable/Disable switch for fmARPreselectionAmplifier event')
fmARTransmitterOpModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARTransmitterOpModeEnable.setStatus('current')
if mibBuilder.loadTexts: fmARTransmitterOpModeEnable.setDescription('Description.Enable/Disable switch for fmARTransmitterOpMode event')
fmARReserveControlEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARReserveControlEnable.setStatus('current')
if mibBuilder.loadTexts: fmARReserveControlEnable.setDescription('Description.Enable/Disable switch for fmARReserveControl event')
fmARActiveAmplifierEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARActiveAmplifierEnable.setStatus('current')
if mibBuilder.loadTexts: fmARActiveAmplifierEnable.setDescription('Description.Enable/Disable switch for fmARActiveAmplifier event')
fmARActiveExciterEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARActiveExciterEnable.setStatus('current')
if mibBuilder.loadTexts: fmARActiveExciterEnable.setDescription('Description.Enable/Disable switch for fmARActiveExciter event')
fmARLocalModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARLocalModeEnable.setStatus('current')
if mibBuilder.loadTexts: fmARLocalModeEnable.setDescription('Description.Enable/Disable switch for fmARLocalMode event')
fmARControlUnitFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARControlUnitFaultEnable.setStatus('current')
if mibBuilder.loadTexts: fmARControlUnitFaultEnable.setDescription('Description.Enable/Disable switch for fmARControlUnitFault event')
fmARExciterSwitchOverModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterSwitchOverModeEnable.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverModeEnable.setDescription('Description.Enable/Disable switch for fmARExciterSwitchOverMode event')
fmARExciterSwitchOverReadyEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterSwitchOverReadyEnable.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverReadyEnable.setDescription('Description.Enable/Disable switch for fmARExciterSwitchOverReady event')
fmARExciterSwitchOverExecutedEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterSwitchOverExecutedEnable.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverExecutedEnable.setDescription('Description.Enable/Disable switch for fmARExciterSwitchOverExecuted event')
fmARExciterSwitchOverFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterSwitchOverFaultEnable.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverFaultEnable.setDescription('Description.Enable/Disable switch for fmARExciterSwitchOverFault event')
fmARAmplifierSwitchOverModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverModeEnable.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverModeEnable.setDescription('Description.Enable/Disable switch for fmARAmplifierSwitchOverMode event')
fmARAmplifierSwitchOverReadyEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverReadyEnable.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverReadyEnable.setDescription('Description.Enable/Disable switch for fmARAmplifierSwitchOverReady event')
fmARAmplifierSwitchOverExecutedEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverExecutedEnable.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverExecutedEnable.setDescription('Description.Enable/Disable switch for  fmARAmplifierSwitchOverExecuted event')
fmARAmplifierSwitchOverFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverFaultEnable.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverFaultEnable.setDescription('Description.Enable/Disable switch for fmARAmplifierSwitchOverFault event')
fmAREventEnableAmplifierA = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 2))
fmARAmplifierARFPresentEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierARFPresentEnable.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierARFPresentEnable.setDescription('Description.Enable/Disable switch for fmARAmplifierARFPresent event')
fmARAmplifierAFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 2, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierAFaultEnable.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierAFaultEnable.setDescription('Description.Enable/Disable switch for fmARAmplifierAFault event')
fmARAmplifierAWarningEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 2, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierAWarningEnable.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierAWarningEnable.setDescription('Description.Enable/Disable switch for fmARAmplifierAWarning event')
fmAREventEnableAmplifierB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 3))
fmARAmplifierBRFPresentEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierBRFPresentEnable.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBRFPresentEnable.setDescription('Description.Enable/Disable switch for fmARAmplifierBRFPresent event')
fmARAmplifierBFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 3, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierBFaultEnable.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBFaultEnable.setDescription('Description.Enable/Disable switch for fmARAmplifierBFault event')
fmARAmplifierBWarningEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 3, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierBWarningEnable.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBWarningEnable.setDescription('Description.Enable/Disable switch for fmARAmplifierBWarning event')
fmAREventEnableExciterA = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 4))
fmARExciterALocalModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 4, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterALocalModeEnable.setStatus('current')
if mibBuilder.loadTexts: fmARExciterALocalModeEnable.setDescription('Description.Enable/Disable switch for fmARExciterALocalMode event')
fmARExciterAFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 4, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterAFaultEnable.setStatus('current')
if mibBuilder.loadTexts: fmARExciterAFaultEnable.setDescription('Description.Enable/Disable switch for fmARExciterAFault event')
fmARExciterAWarningEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 4, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterAWarningEnable.setStatus('current')
if mibBuilder.loadTexts: fmARExciterAWarningEnable.setDescription('Description.Enable/Disable switch for fmARExciterAWarning event')
fmAREventEnableExciterB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 5))
mARExciterBLocalModeEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mARExciterBLocalModeEnable.setStatus('current')
if mibBuilder.loadTexts: mARExciterBLocalModeEnable.setDescription('Description.Enable/Disable switch for fmARExciterBLocalMode event')
fmARExciterBFaultEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 5, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterBFaultEnable.setStatus('current')
if mibBuilder.loadTexts: fmARExciterBFaultEnable.setDescription('Description.Enable/Disable switch for fmARExciterBFault event')
fmARExciterBWarningEnable = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 6, 5, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterBWarningEnable.setStatus('current')
if mibBuilder.loadTexts: fmARExciterBWarningEnable.setDescription('Description.Enable/Disable switch for fmARExciterBWarning event')
fmAREventPriority = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7))
fmAREventPriorityGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1))
fmARPreselectionExciterPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARPreselectionExciterPriority.setStatus('current')
if mibBuilder.loadTexts: fmARPreselectionExciterPriority.setDescription('Description.Priority for fmARPreselectionExciter event')
fmARPreselectionAmplifierPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARPreselectionAmplifierPriority.setStatus('current')
if mibBuilder.loadTexts: fmARPreselectionAmplifierPriority.setDescription('Description.Priority for fmARPreselectionAmplifier event')
fmARTransmitterOpModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARTransmitterOpModePriority.setStatus('current')
if mibBuilder.loadTexts: fmARTransmitterOpModePriority.setDescription('Description.Priority for fmARTransmitterOpMode event')
fmARReserveControlPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARReserveControlPriority.setStatus('current')
if mibBuilder.loadTexts: fmARReserveControlPriority.setDescription('Description.Priority for fmARReserveControl event')
fmARActiveAmplifierPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARActiveAmplifierPriority.setStatus('current')
if mibBuilder.loadTexts: fmARActiveAmplifierPriority.setDescription('Description.Priority for fmARActiveAmplifier event')
fmARActiveExciterPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARActiveExciterPriority.setStatus('current')
if mibBuilder.loadTexts: fmARActiveExciterPriority.setDescription('Description.Priority for fmARActiveExciter event')
fmARLocalModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARLocalModePriority.setStatus('current')
if mibBuilder.loadTexts: fmARLocalModePriority.setDescription('Description.Priority for fmARLocalMode event')
fmARControlUnitFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARControlUnitFaultPriority.setStatus('current')
if mibBuilder.loadTexts: fmARControlUnitFaultPriority.setDescription('Description.Priority for fmARControlUnitFault event')
fmARExciterSwitchOverModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterSwitchOverModePriority.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverModePriority.setDescription('Description.Priority for fmARExciterSwitchOverMode event')
fmARExciterSwitchOverReadyPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterSwitchOverReadyPriority.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverReadyPriority.setDescription('Description.Priority for fmARExciterSwitchOverReady event')
fmARExciterSwitchOverExecutedPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterSwitchOverExecutedPriority.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverExecutedPriority.setDescription('Description.Priority for fmARExciterSwitchOverExecuted event')
fmARExciterSwitchOverFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterSwitchOverFaultPriority.setStatus('current')
if mibBuilder.loadTexts: fmARExciterSwitchOverFaultPriority.setDescription('Description.Priority for fmARExciterSwitchOverFault event')
fmARAmplifierSwitchOverModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverModePriority.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverModePriority.setDescription('Description.Priority for fmARAmplifierSwitchOverMode event')
fmARAmplifierSwitchOverReadyPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverReadyPriority.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverReadyPriority.setDescription('Description.Priority for fmARAmplifierSwitchOverReady event')
fmARAmplifierSwitchOverExecutedPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverExecutedPriority.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverExecutedPriority.setDescription('Description.Priority for fmARAmplifierSwitchOverExecuted event')
fmARAmplifierSwitchOverFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierSwitchOverFaultPriority.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierSwitchOverFaultPriority.setDescription('Description.Priority for fmARAmplifierSwitchOverFault event')
fmAREventPriorityAmplifierA = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 2))
fmARAmplifierARFPresentPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 2, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierARFPresentPriority.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierARFPresentPriority.setDescription('Description.Priority for fmARAmplifierARFPresent event')
fmARAmplifierAFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 2, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierAFaultPriority.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierAFaultPriority.setDescription('Description.Priority for fmARAmplifierAFault event')
fmARAmplifierAWarningPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 2, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierAWarningPriority.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierAWarningPriority.setDescription('Description.Priority for fmARAmplifierAWarning event')
fmAREventPriorityAmplifierB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 3))
fmARAmplifierBRFPresentPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 3, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierBRFPresentPriority.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBRFPresentPriority.setDescription('Description.Priority for fmARAmplifierBRFPresent event')
fmARAmplifierBFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 3, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierBFaultPriority.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBFaultPriority.setDescription('Description.Priority for fmARAmplifierBFault event')
fmARAmplifierBWarningPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 3, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARAmplifierBWarningPriority.setStatus('current')
if mibBuilder.loadTexts: fmARAmplifierBWarningPriority.setDescription('Description.Priority for fmARAmplifierBWarning event')
fmAREventPriorityExciterA = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 4))
fmARExciterALocalModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 4, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterALocalModePriority.setStatus('current')
if mibBuilder.loadTexts: fmARExciterALocalModePriority.setDescription('Description. Priority for fmARExciterALocalMode event')
fmARExciterAFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 4, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterAFaultPriority.setStatus('current')
if mibBuilder.loadTexts: fmARExciterAFaultPriority.setDescription('Description.Priority for fmARExciterAFault event')
fmARExciterAWarningPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 4, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterAWarningPriority.setStatus('current')
if mibBuilder.loadTexts: fmARExciterAWarningPriority.setDescription('Description.Priority for fmARExciterAWarning event')
fmAREventPriorityExciterB = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 5))
fmARExciterBLocalModePriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 5, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterBLocalModePriority.setStatus('current')
if mibBuilder.loadTexts: fmARExciterBLocalModePriority.setDescription('Description. Priority for fmARExciterBLocalMode event')
fmARExciterBFaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 5, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterBFaultPriority.setStatus('current')
if mibBuilder.loadTexts: fmARExciterBFaultPriority.setDescription('Description.Priority for fmARExciterBFault event')
fmARExciterBWarningPriority = MibScalar((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 7, 5, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmARExciterBWarningPriority.setStatus('current')
if mibBuilder.loadTexts: fmARExciterBWarningPriority.setDescription('Description.Priority for fmARExciterBWarning event')
groupsAR = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 8))
objectGroupAR = ObjectGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 8, 1)).setObjects(("IRT-FM-ACTIVERESERVE-MIB", "fmARTransmitterOpMode"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARReserveControl"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARActiveAmplifier"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARActiveExciter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARLocalMode"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARControlUnitFault"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverMode"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverReady"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverExecuted"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverFault"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverMode"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverReady"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverExecuted"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverFault"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierARFPresent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierAFault"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierAWarning"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBRFPresent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBFault"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBWarning"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterAFault"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterAWarning"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBFault"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBWarning"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARPreselectionExciterEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARTransmitterOpModeEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARReserveControlEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARActiveAmplifierEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARActiveExciterEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARLocalModeEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARControlUnitFaultEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverModeEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverExecutedEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverFaultEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverModeEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverReadyEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverExecutedEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverFaultEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverReadyEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierARFPresentEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierAFaultEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierAWarningEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBRFPresentEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBFaultEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBWarningEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterAFaultEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterAWarningEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBFaultEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBWarningEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARTransmitterOpModePriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARReserveControlPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARActiveAmplifierPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARActiveExciterPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARLocalModePriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARControlUnitFaultPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverModePriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverExecutedPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverFaultPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverModePriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverReadyPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverExecutedPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverFaultPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierARFPresentPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierAFaultPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierAWarningPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBRFPresentPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBFaultPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBWarningPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterAFaultPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterAWarningPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBFaultPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBWarningPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARPreselectionAmplifier"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARPreselectionAmplifierPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARPreselectionAmplifierEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterALocalModePriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBLocalModePriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverReadyPriority"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARPreselectionExciter"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterALocalMode"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBLocalMode"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterALocalModeEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "mARExciterBLocalModeEnable"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARPreselectionExciterPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    objectGroupAR = objectGroupAR.setStatus('current')
if mibBuilder.loadTexts: objectGroupAR.setDescription('Description. active reserve: object group')
eventGroupAR = NotificationGroup((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 8, 2)).setObjects(("IRT-FM-ACTIVERESERVE-MIB", "fmARTransmitterOpModeEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARReserveControlEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARActiveAmplifierEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARActiveExciterEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARLocalModeEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARControlUnitFaultEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverModeEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverReadyEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverExecutedEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterSwitchOverFaultEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverModeEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverReadyEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverExecutedEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierSwitchOverFaultEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierARFPresentEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierAFaultEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierAWarningEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBRFPresentEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBFaultEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARAmplifierBWarningEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterAFaultEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterAWarningEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBFaultEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterALocalModeEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBLocalModeEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARPreselectionAmplifierEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARExciterBWarningEvent"), ("IRT-FM-ACTIVERESERVE-MIB", "fmARPreselectionExciterEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eventGroupAR = eventGroupAR.setStatus('current')
if mibBuilder.loadTexts: eventGroupAR.setDescription('Description. events')
complianceAR = MibIdentifier((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 9))
fmActiveReserveCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 19831, 1, 1, 3, 2, 9, 1)).setObjects(("IRT-FM-ACTIVERESERVE-MIB", "objectGroupAR"), ("IRT-FM-ACTIVERESERVE-MIB", "eventGroupAR"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fmActiveReserveCompliance = fmActiveReserveCompliance.setStatus('current')
if mibBuilder.loadTexts: fmActiveReserveCompliance.setDescription('Compliance Statement')
mibBuilder.exportSymbols("IRT-FM-ACTIVERESERVE-MIB", fmARReserveControl=fmARReserveControl, fmARExciterBLocalMode=fmARExciterBLocalMode, fmAREventEnableAmplifierA=fmAREventEnableAmplifierA, fmARExciterA=fmARExciterA, fmARAmplifierB=fmARAmplifierB, fmARAmplifierBRFPresentEnable=fmARAmplifierBRFPresentEnable, fmARAmplifierBFaultEnable=fmARAmplifierBFaultEnable, fmARExciterAFault=fmARExciterAFault, fmARLocalModeEvent=fmARLocalModeEvent, fmARPreselectionExciterEnable=fmARPreselectionExciterEnable, mARExciterBLocalModeEnable=mARExciterBLocalModeEnable, fmARActiveExciterEnable=fmARActiveExciterEnable, fmARAmplifierAFaultEvent=fmARAmplifierAFaultEvent, fmARExciterAFaultEvent=fmARExciterAFaultEvent, fmARAmplifierSwitchOverExecuted=fmARAmplifierSwitchOverExecuted, fmAREventEnableGeneral=fmAREventEnableGeneral, fmARExciterSwitchOverModeEnable=fmARExciterSwitchOverModeEnable, fmARActiveExciter=fmARActiveExciter, fmARAmplifierSwitchOverExecutedEvent=fmARAmplifierSwitchOverExecutedEvent, fmARAmplifierSwitchOverFaultEnable=fmARAmplifierSwitchOverFaultEnable, fmARExciterSwitchOverModePriority=fmARExciterSwitchOverModePriority, fmARAmplifierBWarning=fmARAmplifierBWarning, fmARPreselectionAmplifierPriority=fmARPreselectionAmplifierPriority, fmARPreselectionExciter=fmARPreselectionExciter, fmARExciterAFaultEnable=fmARExciterAFaultEnable, fmARAmplifierBWarningPriority=fmARAmplifierBWarningPriority, fmARExciterB=fmARExciterB, fmARExciterALocalModePriority=fmARExciterALocalModePriority, fmARExciterSwitchOverModeEvent=fmARExciterSwitchOverModeEvent, complianceAR=complianceAR, fmARAmplifierARFPresentEvent=fmARAmplifierARFPresentEvent, fmARPreselectionAmplifier=fmARPreselectionAmplifier, fmARLocalModeEnable=fmARLocalModeEnable, fmAREventPriorityExciterB=fmAREventPriorityExciterB, fmActiveReserveCompliance=fmActiveReserveCompliance, fmARExciterAWarning=fmARExciterAWarning, fmARExciterAFaultPriority=fmARExciterAFaultPriority, fmARExciterSwitchOverFaultEnable=fmARExciterSwitchOverFaultEnable, fmARExciterSwitchOverReady=fmARExciterSwitchOverReady, fmARAmplifierBFaultEvent=fmARAmplifierBFaultEvent, fmARAmplifierSwitchOverFault=fmARAmplifierSwitchOverFault, fmARAmplifierSwitchOverFaultPriority=fmARAmplifierSwitchOverFaultPriority, fmARGeneral=fmARGeneral, fmARExciterSwitchOverReadyEvent=fmARExciterSwitchOverReadyEvent, PYSNMP_MODULE_ID=fmActiveReserve, fmARAmplifierBFault=fmARAmplifierBFault, fmARAmplifierAFaultPriority=fmARAmplifierAFaultPriority, fmARTransmitterOpModeEvent=fmARTransmitterOpModeEvent, fmARActiveAmplifierEvent=fmARActiveAmplifierEvent, fmARAmplifierSwitchOverMode=fmARAmplifierSwitchOverMode, fmARExciterAWarningEvent=fmARExciterAWarningEvent, fmARActiveExciterPriority=fmARActiveExciterPriority, fmARAmplifierA=fmARAmplifierA, fmARActiveAmplifierEnable=fmARActiveAmplifierEnable, fmAREventEnableAmplifierB=fmAREventEnableAmplifierB, fmARExciterSwitchOverFaultEvent=fmARExciterSwitchOverFaultEvent, fmARExciterBLocalModeEvent=fmARExciterBLocalModeEvent, fmARAmplifierSwitchOverReadyPriority=fmARAmplifierSwitchOverReadyPriority, fmARAmplifierSwitchOverModeEnable=fmARAmplifierSwitchOverModeEnable, fmARPreselectionExciterPriority=fmARPreselectionExciterPriority, fmARTransmitterOpModeEnable=fmARTransmitterOpModeEnable, fmAREventEnableExciterA=fmAREventEnableExciterA, fmAREventPriorityGeneral=fmAREventPriorityGeneral, fmARExciterALocalModeEvent=fmARExciterALocalModeEvent, fmARControlUnitFaultPriority=fmARControlUnitFaultPriority, fmARExciterBWarningPriority=fmARExciterBWarningPriority, fmARExciterBFault=fmARExciterBFault, fmARAmplifierAFaultEnable=fmARAmplifierAFaultEnable, fmARAmplifierBRFPresentPriority=fmARAmplifierBRFPresentPriority, fmARLocalMode=fmARLocalMode, fmARAmplifierSwitchOverReady=fmARAmplifierSwitchOverReady, fmARExciterSwitchOverExecutedEvent=fmARExciterSwitchOverExecutedEvent, fmARActiveAmplifierPriority=fmARActiveAmplifierPriority, fmARExciterAWarningEnable=fmARExciterAWarningEnable, fmARLocalModePriority=fmARLocalModePriority, fmARExciterAWarningPriority=fmARExciterAWarningPriority, fmARControlUnitFault=fmARControlUnitFault, fmARAmplifierSwitchOverReadyEvent=fmARAmplifierSwitchOverReadyEvent, fmARReserveControlPriority=fmARReserveControlPriority, fmAREventPriorityExciterA=fmAREventPriorityExciterA, fmARExciterALocalMode=fmARExciterALocalMode, fmARExciterSwitchOverReadyPriority=fmARExciterSwitchOverReadyPriority, fmARExciterALocalModeEnable=fmARExciterALocalModeEnable, fmARAmplifierSwitchOverModePriority=fmARAmplifierSwitchOverModePriority, fmARAmplifierARFPresent=fmARAmplifierARFPresent, eventGroupAR=eventGroupAR, fmARExciterSwitchOverExecuted=fmARExciterSwitchOverExecuted, fmARExciterBFaultPriority=fmARExciterBFaultPriority, fmARPreselectionExciterEvent=fmARPreselectionExciterEvent, fmARAmplifierBRFPresent=fmARAmplifierBRFPresent, fmARExciterBWarningEvent=fmARExciterBWarningEvent, fmARAmplifierBRFPresentEvent=fmARAmplifierBRFPresentEvent, fmARExciterSwitchOverExecutedPriority=fmARExciterSwitchOverExecutedPriority, fmARExciterSwitchOverReadyEnable=fmARExciterSwitchOverReadyEnable, fmARControlUnitFaultEvent=fmARControlUnitFaultEvent, fmARTransmitterOpMode=fmARTransmitterOpMode, fmARAmplifierSwitchOverExecutedEnable=fmARAmplifierSwitchOverExecutedEnable, fmARExciterSwitchOverFaultPriority=fmARExciterSwitchOverFaultPriority, fmAREventEnableExciterB=fmAREventEnableExciterB, fmARReserveControlEvent=fmARReserveControlEvent, fmARAmplifierAWarning=fmARAmplifierAWarning, fmAREventPriorityAmplifierB=fmAREventPriorityAmplifierB, fmARExciterSwitchOverFault=fmARExciterSwitchOverFault, objectGroupAR=objectGroupAR, fmARAmplifierAWarningPriority=fmARAmplifierAWarningPriority, fmARAmplifierSwitchOverModeEvent=fmARAmplifierSwitchOverModeEvent, fmARAmplifierAWarningEnable=fmARAmplifierAWarningEnable, fmARControlUnitFaultEnable=fmARControlUnitFaultEnable, fmARAmplifierBWarningEvent=fmARAmplifierBWarningEvent, fmARExciterSwitchOverExecutedEnable=fmARExciterSwitchOverExecutedEnable, fmAREventPriority=fmAREventPriority, fmAREventPriorityAmplifierA=fmAREventPriorityAmplifierA, fmARExciterBWarning=fmARExciterBWarning, fmARAmplifierBFaultPriority=fmARAmplifierBFaultPriority, fmARPreselectionAmplifierEvent=fmARPreselectionAmplifierEvent, fmARAmplifierSwitchOverExecutedPriority=fmARAmplifierSwitchOverExecutedPriority, fmARAmplifierBWarningEnable=fmARAmplifierBWarningEnable, fmARTransmitterOpModePriority=fmARTransmitterOpModePriority, fmARAmplifierAWarningEvent=fmARAmplifierAWarningEvent, fmARActiveExciterEvent=fmARActiveExciterEvent, fmARExciterBFaultEvent=fmARExciterBFaultEvent, fmARExciterBWarningEnable=fmARExciterBWarningEnable, fmARActiveAmplifier=fmARActiveAmplifier, groupsAR=groupsAR, fmARExciterSwitchOverMode=fmARExciterSwitchOverMode, fmARAmplifierSwitchOverReadyEnable=fmARAmplifierSwitchOverReadyEnable, fmARAmplifierSwitchOverFaultEvent=fmARAmplifierSwitchOverFaultEvent, fmARAmplifierARFPresentEnable=fmARAmplifierARFPresentEnable, fmARAmplifierARFPresentPriority=fmARAmplifierARFPresentPriority, fmARPreselectionAmplifierEnable=fmARPreselectionAmplifierEnable, fmActiveReserve=fmActiveReserve, fmARAmplifierAFault=fmARAmplifierAFault, fmARExciterBLocalModePriority=fmARExciterBLocalModePriority, fmEventsAR=fmEventsAR, fmARReserveControlEnable=fmARReserveControlEnable, fmARExciterBFaultEnable=fmARExciterBFaultEnable, fmAREventEnable=fmAREventEnable)
