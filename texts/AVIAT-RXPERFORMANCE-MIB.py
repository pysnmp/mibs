#
# PySNMP MIB module AVIAT-RXPERFORMANCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/aviat-wtm/AVIAT-RXPERFORMANCE-MIB
# Produced by pysmi-1.1.12 at Tue Jun 25 14:09:03 2024
# On host fv-az837-278 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
AviatPowerLevel, = mibBuilder.importSymbols("AVIAT-TEXTCONVENTION-MIB", "AviatPowerLevel")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, TimeTicks, Bits, Gauge32, ModuleIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, Counter64, NotificationType, iso, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Bits", "Gauge32", "ModuleIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "Counter64", "NotificationType", "iso", "Counter32", "Unsigned32")
TruthValue, DateAndTime, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DateAndTime", "TextualConvention", "DisplayString")
aviatModules, = mibBuilder.importSymbols("STXN-GLOBALREGISTER-MIB", "aviatModules")
aviatRxPerformanceModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 15))
aviatRxPerformanceModule.setRevisions(('2014-01-21 01:57',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: aviatRxPerformanceModule.setRevisionsDescriptions(('Initial Version.',))
if mibBuilder.loadTexts: aviatRxPerformanceModule.setLastUpdated('201401210157Z')
if mibBuilder.loadTexts: aviatRxPerformanceModule.setOrganization('Aviat Networks')
if mibBuilder.loadTexts: aviatRxPerformanceModule.setContactInfo('Aviat Networks\n                         Customer Service\n\n                         Postal: 5200 Great America Parkway\n                                 Santa Clara\n                                 California 95054\n                                 United States of America\n\n                         Tel: 408 567 7000\n\n                         E-mail: mibsupport@aviatnet.com')
if mibBuilder.loadTexts: aviatRxPerformanceModule.setDescription('This MIB module supports performance monitoring of the\n                 receiver on the radio.')
class AviatPackedRxPerformData(TextualConvention, OctetString):
    description = 'This is the Rx Performance data packed into a single\n                         object. Note that these are fixed size fields. The\n                         Date and Time is padded with trailing zeros. Refer to\n                         the individual object definitions in the Rx\n                         Performance Table for details on the syntax of each\n                         object.\n\n                             Bytes 1-4:     Rx Performance Mean Receive Signal\n                                            Level Reading. Note that this is\n                                            the mean reading over a performance\n                                            period.\n                             Bytes 5-8:     Rx Performance Receive Signal Level\n                                            Reading.\n                             Bytes 9-12:    Rx Performance Maximum Receive\n                                            Signal Level Reading.\n                             Bytes 13-16:   Rx Performance Minimum Receive\n                                            Signal Level Reading.\n                             Bytes 17-24:   Rx Performance Mean Bit Error Ratio\n                                            Reading.\n                             Bytes 25-32:   Rx Performance Current Bit Error\n                                            Ratio Reading.\n                             Bytes 33-40:   Rx Performance Maximum Bit Error\n                                            Ratio Reading.\n                             Bytes 41-48:   Rx Performance Minimum Bit Error\n                                            Ratio Reading.\n                             Bytes 49-52:   Rx Performance Frame Loss Seconds.\n                             Bytes 53-63:   Date And Time.'
    status = 'current'
    displayHint = '63x'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(63, 63), )
aviatRxPerformanceConf = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 15, 1))
aviatRxPerformanceGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 15, 1, 1))
aviatRxPerformanceCompl = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 15, 1, 2))
aviatRxPerformanceMIBObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2))
aviatRxPerformControlTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 1), )
if mibBuilder.loadTexts: aviatRxPerformControlTable.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformControlTable.setDescription('A table containing the indexes and reset values for a\n                         particular entity of the system.')
aviatRxPerformControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: aviatRxPerformControlEntry.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformControlEntry.setDescription('A row in the aviatRxPerformControlTable.')
aviatRxPerformReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("all", 2), ("realtime", 3), ("quarterhour", 4), ("daily", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aviatRxPerformReset.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformReset.setDescription('This object resets Rx Performance statistics. Setting\n                         all(2) will reset realtime, quarter hourly and daily\n                         statistics. Setting realtime(3), quarterhour(4) or\n                         daily(5) will reset only the selected type of\n                         statistics. If quarter hour or daily statistics are\n                         reset, then all saved statistics data of that type\n                         will be deleted including the current bin.\n\n                         Reading this object will return none(1).')
aviatRxPerformLastQHourChangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformLastQHourChangeIndex.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformLastQHourChangeIndex.setDescription('This is the index number of the last entry in the\n                         aviatRxPerformQHourTable. This index number refers to\n                         the aviatRxPerformQHourPeriod index of the table.')
aviatRxPerformLastDayChangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformLastDayChangeIndex.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformLastDayChangeIndex.setDescription('This is the index number of the last entry in the\n                         aviatRxPerformDayTable. This index number refers to\n                         the aviatRxPerformDayPeriod index of the table.')
aviatRxPerformTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2), )
if mibBuilder.loadTexts: aviatRxPerformTable.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformTable.setDescription('This is the table containing information about the\n                         radio receive path performance of each terminal in the\n                         domain. This performance data is updated every 1\n                         second.')
aviatRxPerformEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: aviatRxPerformEntry.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformEntry.setDescription('This is an entry in the table containing the receiver\n                         performance data of an entity in the system.')
aviatRxPerformRslReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2, 1, 3), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformRslReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformRslReadingMean.setDescription('This is the mean reading of the Receive Signal Level\n                         of the radio over the period since the start of\n                         monitoring.')
aviatRxPerformRslReadingCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2, 1, 4), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformRslReadingCurrent.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformRslReadingCurrent.setDescription('This is the current reading of the Receive Signal\n                         Level of the radio.')
aviatRxPerformRslReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformRslReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformRslReadingMax.setDescription('This is the highest recorded reading of the Receive\n                         Signal Level of the radio since the start of\n                         monitoring.')
aviatRxPerformRslReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformRslReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformRslReadingMin.setDescription('This is the lowest recorded reading of the Receive\n                         Signal Level of the radio since the start of\n                         monitoring.')
aviatRxPerformBerReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformBerReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformBerReadingMean.setDescription('This is the mean reading of the Bit Error Ratio of the\n                         radio.')
aviatRxPerformBerReadingCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformBerReadingCurrent.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformBerReadingCurrent.setDescription('This is the current reading of the Bit Error Ratio of\n                         the radio.')
aviatRxPerformBerReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformBerReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformBerReadingMax.setDescription('This is the highest recorded reading of the Bit Error\n                         Ratio of the radio since the start of monitoring.')
aviatRxPerformBerReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformBerReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformBerReadingMin.setDescription('This is the lowest recorded reading of the Bit Error\n                         Ratio of the radio since the start of monitoring.')
aviatRxPerformFrameLossSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformFrameLossSeconds.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformFrameLossSeconds.setDescription('This is the number of seconds that had one or more\n                         instances of lost frames since the start of\n                         monitoring.')
aviatRxPerformPackedData = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 2, 1, 12), AviatPackedRxPerformData()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformPackedData.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformPackedData.setDescription("This is all of the Performance data for this table,\n                         updated every 1 second, packed into a single object.\n\n                         This object is provided to guarantee a 'snapshot'\n                         collection of the performance measures in an entity.\n                         Slowly stepping through the aviatRxPerformTable may\n                         result in changing information being read.")
aviatRxPerformQuarterHourTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3), )
if mibBuilder.loadTexts: aviatRxPerformQuarterHourTable.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQuarterHourTable.setDescription('This is the table containing information about the\n                         radio receive path performance of each terminal in the\n                         domain.\n\n                         The performance data recording is started at the next\n                         15 minute boundry in the hour of the time when\n                         monitoring was initiated eg: 12:00, 12:15, 12:30 or\n                         12:45.\n\n                         This performance data is recorded for 15 minute\n                         periods and the object is updated at the end of the\n                         period.')
aviatRxPerformQuarterHourEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourPeriod"))
if mibBuilder.loadTexts: aviatRxPerformQuarterHourEntry.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQuarterHourEntry.setDescription('This is an entry in the table containing the receiver\n                         performance data of an entity in the system for a 15\n                         minute period.')
aviatRxPerformQHourIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1, 1), Gauge32())
if mibBuilder.loadTexts: aviatRxPerformQHourIndex.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourIndex.setDescription('This is the row number referring to the receiver\n                         performance data of a particular entity in the system.\n                         The performance data in this table is updated every 15\n                         minutes.')
aviatRxPerformQHourPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1, 2), Gauge32())
if mibBuilder.loadTexts: aviatRxPerformQHourPeriod.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourPeriod.setDescription('This is the unique row number referencing the 15\n                         minute period during which this block of performance\n                         data was collected. This provides a unique index even\n                         if the table wraps back around.')
aviatRxPerformQHourDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourDateAndTime.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourDateAndTime.setDescription('This is the date and time at the start of the 15\n                         minute period during which this block of performance\n                         data was collected.')
aviatRxPerformQHourRslReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourRslReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourRslReadingMean.setDescription('This is the mean reading of the Receive Signal Level\n                         of the radio for the 15 minute period during which\n                         this block of performance data was collected.')
aviatRxPerformQHourRslReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourRslReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourRslReadingMax.setDescription('This is the highest recorded reading of the Receive\n                         Signal Level of the radio for the 15 minute period\n                         during which this block of performance data was\n                         collected.')
aviatRxPerformQHourRslReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1, 7), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourRslReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourRslReadingMin.setDescription('This is the lowest recorded reading of the Receive\n                         Signal Level of the radio for the 15 minute period\n                         during which this block of performance data was\n                         collected.')
aviatRxPerformQHourBerReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourBerReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourBerReadingMean.setDescription('This is the mean reading of the Bit Error Ratio of the\n                         radio for the 15 minute period during which this block\n                         of performance data was collected.')
aviatRxPerformQHourBerReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourBerReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourBerReadingMax.setDescription('This is the highest recorded reading of the Bit Error\n                         Ratio of the radio for the 15 minute period during\n                         which this block of performance data was collected.')
aviatRxPerformQHourBerReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourBerReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourBerReadingMin.setDescription('This is the lowest recorded reading of the Bit Error\n                         Ratio of the radio for the 15 minute period during\n                         which this block of performance data was collected.')
aviatRxPerformQHourFrameLossSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourFrameLossSeconds.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourFrameLossSeconds.setDescription('This is the number of seconds that had one or more\n                         instances of lost frames for the 15 minute period\n                         during which this block of performance data was\n                         collected.')
aviatRxPerformQHourInvalidEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 3, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourInvalidEntry.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformQHourInvalidEntry.setDescription('This indicates the validity of the performance data in\n                         this row of the table. It is set to TRUE when the data\n                         becomes invalid due to the interval not being within\n                         ten seconds of its nominal length. Otherwise it is set\n                         to FALSE.\n\n                         This could be a result of a time-of-day change.')
aviatRxPerformDayTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4), )
if mibBuilder.loadTexts: aviatRxPerformDayTable.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayTable.setDescription('This is a table containing a collection of information\n                         about the radio receive path performance of each\n                         terminal in the domain. Performance data in this table\n                         is recorded for 1 day periods.')
aviatRxPerformDayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayPeriod"))
if mibBuilder.loadTexts: aviatRxPerformDayEntry.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayEntry.setDescription('This is an entry in the table containing performance\n                         data of a particular entity within the agent during a\n                         1 day period.')
aviatRxPerformDayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1, 1), Gauge32())
if mibBuilder.loadTexts: aviatRxPerformDayIndex.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayIndex.setDescription('This is the row number referring to the receiver\n                         performance data of a particular entity in the system.\n                         The performance data in this table is updated every 1\n                         day period.')
aviatRxPerformDayPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1, 2), Gauge32())
if mibBuilder.loadTexts: aviatRxPerformDayPeriod.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayPeriod.setDescription('This is the unique row number referencing the 1 day\n                         period during which this block of performance data was\n                         collected.')
aviatRxPerformDayDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayDateAndTime.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayDateAndTime.setDescription('This is the date and time at the start of the Day\n                         period during which this block of performance data was\n                         collected.')
aviatRxPerformDayRslReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayRslReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayRslReadingMean.setDescription('This is the mean reading of the Receive Signal Level\n                         of the radio for the 1 day period during which this\n                         block of performance data was collected.')
aviatRxPerformDayRslReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayRslReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayRslReadingMax.setDescription('This is the highest recorded reading of the Receive\n                         Signal Level of the radio for the 1 day period during\n                         which this block of performance data was collected.')
aviatRxPerformDayRslReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1, 7), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayRslReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayRslReadingMin.setDescription('This is the lowest recorded reading of the Receive\n                         Signal Level of the radio for the 1 day period during\n                         which this block of performance data was collected.')
aviatRxPerformDayBerReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayBerReadingMean.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayBerReadingMean.setDescription('This is the mean reading of the Bit Error Ratio of the\n                         radio for the 1 day period during which this block of\n                         performance data was collected.')
aviatRxPerformDayBerReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayBerReadingMax.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayBerReadingMax.setDescription('This is the highest recorded reading of the Bit Error\n                         Ratio of the radio for the 1 Day period during which\n                         this block of performance data was collected.')
aviatRxPerformDayBerReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayBerReadingMin.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayBerReadingMin.setDescription('This is the lowest recorded reading of the Bit Error\n                         Ratio of the radio for the 1 Day period during which\n                         this block of performance data was collected.')
aviatRxPerformDayFrameLossSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayFrameLossSeconds.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayFrameLossSeconds.setDescription('This is the number of seconds that had one or more\n                         instances of lost frames for the 1 day period during\n                         which this block of performance data was collected.')
aviatRxPerformDayInvalidEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 15, 2, 4, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayInvalidEntry.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformDayInvalidEntry.setDescription('This indicates the validity of the performance data in\n                         this row of the table. It is set to TRUE when the data\n                         becomes invalid due to the interval not being within\n                         ten seconds of its nominal length. Otherwise it is set\n                         to FALSE.\n\n                         This could be a result of a time-of-day change.')
aviatRxPerformObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2509, 9, 15, 1, 1, 1)).setObjects(("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformReset"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformLastQHourChangeIndex"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformLastDayChangeIndex"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformRslReadingMean"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformRslReadingCurrent"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformRslReadingMax"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformRslReadingMin"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformBerReadingMean"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformBerReadingCurrent"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformBerReadingMax"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformBerReadingMin"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformFrameLossSeconds"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformPackedData"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourDateAndTime"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourRslReadingMean"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourRslReadingMax"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourRslReadingMin"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourBerReadingMean"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourBerReadingMax"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourBerReadingMin"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourFrameLossSeconds"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourInvalidEntry"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayDateAndTime"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayRslReadingMean"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayRslReadingMax"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayRslReadingMin"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayBerReadingMean"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayBerReadingMax"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayBerReadingMin"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayFrameLossSeconds"), ("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayInvalidEntry"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviatRxPerformObjectGroup = aviatRxPerformObjectGroup.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformObjectGroup.setDescription('These are the objects in the Receiver Performance\n                         MIB.')
aviatRxPerformanceComplV1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 2509, 9, 15, 1, 2, 1)).setObjects(("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviatRxPerformanceComplV1 = aviatRxPerformanceComplV1.setStatus('current')
if mibBuilder.loadTexts: aviatRxPerformanceComplV1.setDescription('The implementation requirements for this MIB.')
mibBuilder.exportSymbols("AVIAT-RXPERFORMANCE-MIB", aviatRxPerformanceCompl=aviatRxPerformanceCompl, AviatPackedRxPerformData=AviatPackedRxPerformData, aviatRxPerformQHourPeriod=aviatRxPerformQHourPeriod, aviatRxPerformQHourIndex=aviatRxPerformQHourIndex, aviatRxPerformanceModule=aviatRxPerformanceModule, aviatRxPerformanceComplV1=aviatRxPerformanceComplV1, aviatRxPerformQHourBerReadingMin=aviatRxPerformQHourBerReadingMin, aviatRxPerformDayEntry=aviatRxPerformDayEntry, aviatRxPerformDayRslReadingMean=aviatRxPerformDayRslReadingMean, aviatRxPerformLastDayChangeIndex=aviatRxPerformLastDayChangeIndex, aviatRxPerformDayDateAndTime=aviatRxPerformDayDateAndTime, aviatRxPerformDayRslReadingMin=aviatRxPerformDayRslReadingMin, aviatRxPerformDayFrameLossSeconds=aviatRxPerformDayFrameLossSeconds, aviatRxPerformPackedData=aviatRxPerformPackedData, aviatRxPerformQuarterHourEntry=aviatRxPerformQuarterHourEntry, aviatRxPerformBerReadingMin=aviatRxPerformBerReadingMin, aviatRxPerformQHourRslReadingMin=aviatRxPerformQHourRslReadingMin, aviatRxPerformTable=aviatRxPerformTable, aviatRxPerformEntry=aviatRxPerformEntry, aviatRxPerformDayBerReadingMax=aviatRxPerformDayBerReadingMax, aviatRxPerformObjectGroup=aviatRxPerformObjectGroup, aviatRxPerformQHourRslReadingMax=aviatRxPerformQHourRslReadingMax, aviatRxPerformControlEntry=aviatRxPerformControlEntry, aviatRxPerformDayInvalidEntry=aviatRxPerformDayInvalidEntry, aviatRxPerformDayIndex=aviatRxPerformDayIndex, aviatRxPerformanceGroups=aviatRxPerformanceGroups, aviatRxPerformFrameLossSeconds=aviatRxPerformFrameLossSeconds, aviatRxPerformQHourFrameLossSeconds=aviatRxPerformQHourFrameLossSeconds, aviatRxPerformLastQHourChangeIndex=aviatRxPerformLastQHourChangeIndex, aviatRxPerformRslReadingMin=aviatRxPerformRslReadingMin, aviatRxPerformRslReadingMax=aviatRxPerformRslReadingMax, aviatRxPerformDayTable=aviatRxPerformDayTable, aviatRxPerformReset=aviatRxPerformReset, aviatRxPerformQuarterHourTable=aviatRxPerformQuarterHourTable, aviatRxPerformBerReadingMax=aviatRxPerformBerReadingMax, PYSNMP_MODULE_ID=aviatRxPerformanceModule, aviatRxPerformControlTable=aviatRxPerformControlTable, aviatRxPerformDayBerReadingMin=aviatRxPerformDayBerReadingMin, aviatRxPerformQHourDateAndTime=aviatRxPerformQHourDateAndTime, aviatRxPerformQHourBerReadingMax=aviatRxPerformQHourBerReadingMax, aviatRxPerformBerReadingMean=aviatRxPerformBerReadingMean, aviatRxPerformanceConf=aviatRxPerformanceConf, aviatRxPerformBerReadingCurrent=aviatRxPerformBerReadingCurrent, aviatRxPerformDayRslReadingMax=aviatRxPerformDayRslReadingMax, aviatRxPerformQHourRslReadingMean=aviatRxPerformQHourRslReadingMean, aviatRxPerformQHourInvalidEntry=aviatRxPerformQHourInvalidEntry, aviatRxPerformDayPeriod=aviatRxPerformDayPeriod, aviatRxPerformRslReadingMean=aviatRxPerformRslReadingMean, aviatRxPerformRslReadingCurrent=aviatRxPerformRslReadingCurrent, aviatRxPerformDayBerReadingMean=aviatRxPerformDayBerReadingMean, aviatRxPerformanceMIBObjs=aviatRxPerformanceMIBObjs, aviatRxPerformQHourBerReadingMean=aviatRxPerformQHourBerReadingMean)
