#
# PySNMP MIB module IANA-GMPLS-TC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/iana/IANA-GMPLS-TC-MIB
# Produced by pysmi-1.1.12 at Fri Jul 19 12:36:21 2024
# On host fv-az1766-821 platform Linux version 6.5.0-1023-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, ObjectIdentity, IpAddress, MibIdentifier, Integer32, Counter32, NotificationType, Counter64, Unsigned32, Gauge32, mib_2, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "IpAddress", "MibIdentifier", "Integer32", "Counter32", "NotificationType", "Counter64", "Unsigned32", "Gauge32", "mib-2", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ianaGmpls = ModuleIdentity((1, 3, 6, 1, 2, 1, 152))
ianaGmpls.setRevisions(('2007-02-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ianaGmpls.setRevisionsDescriptions(('Initial version issued as part of RFC 4802.',))
if mibBuilder.loadTexts: ianaGmpls.setLastUpdated('200702270000Z')
if mibBuilder.loadTexts: ianaGmpls.setOrganization('IANA')
if mibBuilder.loadTexts: ianaGmpls.setContactInfo('Internet Assigned Numbers Authority\n                   Postal: 4676 Admiralty Way, Suite 330\n                           Marina del Rey, CA 90292\n                   Tel:    +1 310 823 9358\n                   E-Mail: iana@iana.org')
if mibBuilder.loadTexts: ianaGmpls.setDescription('Copyright (C) The IETF Trust (2007).  The initial version\n          of this MIB module was published in RFC 4802.  For full legal\n          notices see the RFC itself.  Supplementary information\n          may be available on:\n          http://www.ietf.org/copyrights/ianamib.html')
class IANAGmplsLSPEncodingTypeTC(TextualConvention, Integer32):
    reference = '1. Generalized Multi-Protocol Label Switching (GMPLS)\n                Signaling Functional Description, RFC 3471, section\n                3.1.1.\n             2. Generalized MPLS Signalling Extensions for G.709 Optical\n                Transport Networks Control, RFC 4328, section 3.1.1.'
    description = 'This type is used to represent and control\n             the LSP encoding type of an LSP signaled by a GMPLS\n             signaling protocol.\n\n             This textual convention is strongly tied to the LSP\n             Encoding Types sub-registry of the GMPLS Signaling\n             Parameters registry managed by IANA.  Values should be\n             assigned by IANA in step with the LSP Encoding Types\n             sub-registry and using the same registry management rules.\n             However, the actual values used in this textual convention\n             are solely within the purview of IANA and do not\n             necessarily match the values in the LSP Encoding Types\n             sub-registry.\n\n             The definition of this textual convention with the\n             addition of newly assigned values is published\n             periodically by the IANA, in either the Assigned\n             Numbers RFC, or some derivative of it specific to\n             Internet Network Management number assignments.  (The\n             latest arrangements can be obtained by contacting the\n             IANA.)\n\n             Requests for new values should be made to IANA via\n             email (iana@iana.org).'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 13))
    namedValues = NamedValues(("tunnelLspNotGmpls", 0), ("tunnelLspPacket", 1), ("tunnelLspEthernet", 2), ("tunnelLspAnsiEtsiPdh", 3), ("tunnelLspSdhSonet", 5), ("tunnelLspDigitalWrapper", 7), ("tunnelLspLambda", 8), ("tunnelLspFiber", 9), ("tunnelLspFiberChannel", 11), ("tunnelDigitalPath", 12), ("tunnelOpticalChannel", 13))

class IANAGmplsSwitchingTypeTC(TextualConvention, Integer32):
    reference = '1. Routing Extensions in Support of Generalized\n                Multi-Protocol Label Switching, RFC 4202, section 2.4.\n             2. Generalized Multi-Protocol Label Switching (GMPLS)\n                Signaling Functional Description, RFC 3471, section\n                3.1.1.'
    description = 'This type is used to represent and\n             control the LSP switching type of an LSP signaled by a\n             GMPLS signaling protocol.\n\n             This textual convention is strongly tied to the Switching\n             Types sub-registry of the GMPLS Signaling Parameters\n             registry managed by IANA.  Values should be assigned by\n             IANA in step with the Switching Types sub-registry and\n             using the same registry management rules.  However, the\n             actual values used in this textual convention are solely\n             within the purview of IANA and do not necessarily match\n             the values in the Switching Types sub-registry.\n\n             The definition of this textual convention with the\n             addition of newly assigned values is published\n             periodically by the IANA, in either the Assigned\n             Numbers RFC, or some derivative of it specific to\n             Internet Network Management number assignments.  (The\n             latest arrangements can be obtained by contacting the\n             IANA.)\n\n             Requests for new values should be made to IANA via\n             email (iana@iana.org).'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 51, 100, 150, 200))
    namedValues = NamedValues(("unknown", 0), ("psc1", 1), ("psc2", 2), ("psc3", 3), ("psc4", 4), ("l2sc", 51), ("tdm", 100), ("lsc", 150), ("fsc", 200))

class IANAGmplsGeneralizedPidTC(TextualConvention, Integer32):
    reference = '1. Generalized Multi-Protocol Label Switching (GMPLS)\n                Signaling Functional Description, RFC 3471, section\n                3.1.1.\n             2. Generalized MPLS Signalling Extensions for G.709 Optical\n                Transport Networks Control, RFC 4328, section 3.1.3.'
    description = 'This data type is used to represent and control the LSP\n             Generalized Protocol Identifier (G-PID) of an LSP\n             signaled by a GMPLS signaling protocol.\n\n             This textual convention is strongly tied to the Generalized\n             PIDs (G-PID) sub-registry of the GMPLS Signaling Parameters\n             registry managed by IANA.  Values should be assigned by\n             IANA in step with the Generalized PIDs (G-PID) sub-registry\n             and using the same registry management rules.  However, the\n             actual values used in this textual convention are solely\n             within the purview of IANA and do not necessarily match the\n             values in the Generalized PIDs (G-PID) sub-registry.\n\n             The definition of this textual convention with the\n             addition of newly assigned values is published\n             periodically by the IANA, in either the Assigned\n             Numbers RFC, or some derivative of it specific to\n             Internet Network Management number assignments.  (The\n             latest arrangements can be obtained by contacting the\n             IANA.)\n\n             Requests for new values should be made to IANA via\n             email (iana@iana.org).'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58))
    namedValues = NamedValues(("unknown", 0), ("asynchE4", 5), ("asynchDS3T3", 6), ("asynchE3", 7), ("bitsynchE3", 8), ("bytesynchE3", 9), ("asynchDS2T2", 10), ("bitsynchDS2T2", 11), ("reservedByRFC3471first", 12), ("asynchE1", 13), ("bytesynchE1", 14), ("bytesynch31ByDS0", 15), ("asynchDS1T1", 16), ("bitsynchDS1T1", 17), ("bytesynchDS1T1", 18), ("vc1vc12", 19), ("reservedByRFC3471second", 20), ("reservedByRFC3471third", 21), ("ds1SFAsynch", 22), ("ds1ESFAsynch", 23), ("ds3M23Asynch", 24), ("ds3CBitParityAsynch", 25), ("vtLovc", 26), ("stsSpeHovc", 27), ("posNoScramble16BitCrc", 28), ("posNoScramble32BitCrc", 29), ("posScramble16BitCrc", 30), ("posScramble32BitCrc", 31), ("atm", 32), ("ethernet", 33), ("sdhSonet", 34), ("digitalwrapper", 36), ("lambda", 37), ("ansiEtsiPdh", 38), ("lapsSdh", 40), ("fddi", 41), ("dqdb", 42), ("fiberChannel3", 43), ("hdlc", 44), ("ethernetV2DixOnly", 45), ("ethernet802dot3Only", 46), ("g709ODUj", 47), ("g709OTUk", 48), ("g709CBRorCBRa", 49), ("g709CBRb", 50), ("g709BSOT", 51), ("g709BSNT", 52), ("gfpIPorPPP", 53), ("gfpEthernetMAC", 54), ("gfpEthernetPHY", 55), ("g709ESCON", 56), ("g709FICON", 57), ("g709FiberChannel", 58))

class IANAGmplsAdminStatusInformationTC(TextualConvention, Bits):
    reference = '1. Generalized Multi-Protocol Label Switching (GMPLS)\n                Signaling Functional Description, RFC 3471, section 8.\n             2. Generalized MPLS Signaling - RSVP-TE Extensions,\n                RFC 3473, section 7.\n             3. GMPLS - Communication of Alarm Information,\n                RFC 4783, section 3.2.1.'
    description = 'This data type determines the setting of the\n             Admin Status flags in the Admin Status object or TLV, as\n             described in RFC 3471.  Setting this object to a non-zero\n             value will result in the inclusion of the Admin Status\n             object or TLV on signaling messages.\n\n             This textual convention is strongly tied to the\n             Administrative Status Information Flags sub-registry of\n             the GMPLS Signaling Parameters registry managed by IANA.\n             Values should be assigned by IANA in step with the\n             Administrative Status Flags sub-registry and using the\n             same registry management rules.  However, the actual\n             values used in this textual convention are solely\n             within the purview of IANA and do not necessarily match\n             the values in the Administrative Status Information\n             Flags sub-registry.\n\n             The definition of this textual convention with the\n             addition of newly assigned values is published\n             periodically by the IANA, in either the Assigned\n             Numbers RFC, or some derivative of it specific to\n             Internet Network Management number assignments.  (The\n             latest arrangements can be obtained by contacting the\n             IANA.)\n\n             Requests for new values should be made to IANA via\n             email (iana@iana.org).'
    status = 'current'
    namedValues = NamedValues(("reflect", 0), ("reserved1", 1), ("reserved2", 2), ("reserved3", 3), ("reserved4", 4), ("reserved5", 5), ("reserved6", 6), ("reserved7", 7), ("reserved8", 8), ("reserved9", 9), ("reserved10", 10), ("reserved11", 11), ("reserved12", 12), ("reserved13", 13), ("reserved14", 14), ("reserved15", 15), ("reserved16", 16), ("reserved17", 17), ("reserved18", 18), ("reserved19", 19), ("reserved20", 20), ("reserved21", 21), ("reserved22", 22), ("reserved23", 23), ("reserved24", 24), ("reserved25", 25), ("reserved26", 26), ("reserved27", 27), ("reserved28", 28), ("testing", 29), ("administrativelyDown", 30), ("deleteInProgress", 31))

mibBuilder.exportSymbols("IANA-GMPLS-TC-MIB", PYSNMP_MODULE_ID=ianaGmpls, IANAGmplsGeneralizedPidTC=IANAGmplsGeneralizedPidTC, IANAGmplsLSPEncodingTypeTC=IANAGmplsLSPEncodingTypeTC, ianaGmpls=ianaGmpls, IANAGmplsSwitchingTypeTC=IANAGmplsSwitchingTypeTC, IANAGmplsAdminStatusInformationTC=IANAGmplsAdminStatusInformationTC)
