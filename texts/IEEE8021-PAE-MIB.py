#
# PySNMP MIB module IEEE8021-PAE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/output/asn1/IEEE8021-PAE-MIB
# Produced by pysmi-1.1.12 at Wed May 29 10:21:32 2024
# On host fv-az1984-402 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibIdentifier, Counter32, iso, TimeTicks, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, NotificationType, Gauge32, Unsigned32, ObjectIdentity, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "iso", "TimeTicks", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "NotificationType", "Gauge32", "Unsigned32", "ObjectIdentity", "Bits", "IpAddress")
TextualConvention, TruthValue, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "MacAddress")
ieee8021paeMIB = ModuleIdentity((1, 0, 8802, 1, 1, 1))
ieee8021paeMIB.setRevisions(('2004-06-22 00:00', '2001-01-16 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ieee8021paeMIB.setRevisionsDescriptions(("IEEE Std. 802.1X-2004 revision:\n          - In the MODULE-IDENTITY value assignment changed\n            'iso(1)' to 'iso';\n          - Clarified original references to 802.1X-2001;\n          - Added references to 802.1X-2004;\n          - Added restart(10) to dot1xAuthPaeState;\n          - Added ignore(8) to dot1xAuthBackendAuthState;\n          - Deprecated dot1xAuthTxPeriod, dot1xSuppTimeout,\n            dotxAuthMaxReq, all of dot1xAuthDiagTable,\n            dot1xSuppEapolRespIdFramesTx,\n            dot1xSuppEapolRespFramesTx,\n            dot1xSuppEapolReqIdFramesRx,\n            dot1xSuppEapolReqFramesRx;\n          - Added restart(8), sForceAuth(9) and\n            sForceUnauth(10) to dot1xSuppPaeState;\n          - Added dot1xSuppControlledPortStatus;\n          - Added dot1xSuppAccessCtrlWithAuth;\n          - Added dot1xSuppBackendState;\n          - Bug fix to add dot1xPaePortReauthenticate and\n            dot1xAuthSessionUserName to the appropriate\n            conformance groups;\n          - Updated conformance groups for new and deprecated\n            objects;\n          - Deprecated dot1xPaeCompliance;\n          - Added dot1xPaeCompliance2.", 'IEEE Std. 802.1X-2001 initial version.',))
if mibBuilder.loadTexts: ieee8021paeMIB.setLastUpdated('200406220000Z')
if mibBuilder.loadTexts: ieee8021paeMIB.setOrganization('IEEE 802.1 Working Group')
if mibBuilder.loadTexts: ieee8021paeMIB.setContactInfo('http://grouper.ieee.org/groups/802/1/index.html')
if mibBuilder.loadTexts: ieee8021paeMIB.setDescription('The Port Access Entity module for managing IEEE\n        802.1X.')
paeMIBObjects = MibIdentifier((1, 0, 8802, 1, 1, 1, 1))
class PaeControlledDirections(TextualConvention, Integer32):
    description = 'The control mode values for the Authenticator PAE.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("both", 0), ("in", 1))

class PaeControlledPortStatus(TextualConvention, Integer32):
    description = 'The status values of the Authenticator PAE controlled\n        Port.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("authorized", 1), ("unauthorized", 2))

class PaeControlledPortControl(TextualConvention, Integer32):
    description = 'The control values of the Authenticator PAE controlled\n        Port.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("forceUnauthorized", 1), ("auto", 2), ("forceAuthorized", 3))

dot1xPaeSystem = MibIdentifier((1, 0, 8802, 1, 1, 1, 1, 1))
dot1xPaeAuthenticator = MibIdentifier((1, 0, 8802, 1, 1, 1, 1, 2))
dot1xPaeSupplicant = MibIdentifier((1, 0, 8802, 1, 1, 1, 1, 3))
dot1xPaeSystemAuthControl = MibScalar((1, 0, 8802, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xPaeSystemAuthControl.setReference('802.1X-2001 9.6.1, SystemAuthControl,\n         802.1X-2004 9.6.1, SystemAuthControl')
if mibBuilder.loadTexts: dot1xPaeSystemAuthControl.setStatus('current')
if mibBuilder.loadTexts: dot1xPaeSystemAuthControl.setDescription('The administrative enable/disable state for\n         Port Access Control in a System.')
dot1xPaePortTable = MibTable((1, 0, 8802, 1, 1, 1, 1, 1, 2), )
if mibBuilder.loadTexts: dot1xPaePortTable.setReference('802.1X-2001 9.6.1,\n         802.1X-2004 9.6.1')
if mibBuilder.loadTexts: dot1xPaePortTable.setStatus('current')
if mibBuilder.loadTexts: dot1xPaePortTable.setDescription('A table of system level information for each port\n        supported by the Port Access Entity.  An entry appears\n        in this table for each port of this system.')
dot1xPaePortEntry = MibTableRow((1, 0, 8802, 1, 1, 1, 1, 1, 2, 1), ).setIndexNames((0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"))
if mibBuilder.loadTexts: dot1xPaePortEntry.setStatus('current')
if mibBuilder.loadTexts: dot1xPaePortEntry.setDescription('The Port number, protocol version, and\n        initialization control for a Port.')
dot1xPaePortNumber = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: dot1xPaePortNumber.setReference('802.1X-2001 9.6.1, Port number,\n         802.1X-2004 9.6.1, Port number')
if mibBuilder.loadTexts: dot1xPaePortNumber.setStatus('current')
if mibBuilder.loadTexts: dot1xPaePortNumber.setDescription('The Port number associated with this Port.')
dot1xPaePortProtocolVersion = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xPaePortProtocolVersion.setReference('802.1X-2001 9.6.1, Protocol version,\n         802.1X-2004 9.6.1, Protocol version')
if mibBuilder.loadTexts: dot1xPaePortProtocolVersion.setStatus('current')
if mibBuilder.loadTexts: dot1xPaePortProtocolVersion.setDescription('The protocol version associated with this Port.')
dot1xPaePortCapabilities = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 1, 2, 1, 3), Bits().clone(namedValues=NamedValues(("dot1xPaePortAuthCapable", 0), ("dot1xPaePortSuppCapable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xPaePortCapabilities.setReference('802.1X-2001 9.6.1, PAE Capabilities,\n         802.1X-2004 9.6.1, PAE Capabilities')
if mibBuilder.loadTexts: dot1xPaePortCapabilities.setStatus('current')
if mibBuilder.loadTexts: dot1xPaePortCapabilities.setDescription('Indicates the PAE functionality that this Port\n        supports and that may be managed through this MIB.')
dot1xPaePortInitialize = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 1, 2, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xPaePortInitialize.setReference('802.1X-2001 9.6.1.3, Initialize Port,\n         802.1X-2004 9.6.1.3, Initialize Port')
if mibBuilder.loadTexts: dot1xPaePortInitialize.setStatus('current')
if mibBuilder.loadTexts: dot1xPaePortInitialize.setDescription('The initialization control for this Port. Setting this\n        attribute TRUE causes the Port to be initialized.\n        The attribute value reverts to FALSE once initialization\n        has completed.')
dot1xPaePortReauthenticate = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 1, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xPaePortReauthenticate.setReference('802.1X-2001 9.4.1.3 Reauthenticate,\n         802.1X-2004 9.4.1.3 Reauthenticate')
if mibBuilder.loadTexts: dot1xPaePortReauthenticate.setStatus('current')
if mibBuilder.loadTexts: dot1xPaePortReauthenticate.setDescription('The reauthentication control for this port. Setting\n        this attribute TRUE causes the Authenticator PAE state\n        machine for the Port to reauthenticate the Supplicant.\n        Setting this attribute FALSE has no effect.\n        This attribute always returns FALSE when it is read.')
dot1xAuthConfigTable = MibTable((1, 0, 8802, 1, 1, 1, 1, 2, 1), )
if mibBuilder.loadTexts: dot1xAuthConfigTable.setReference('802.1X-2001 9.4.1 Authenticator Configuration,\n         802.1X-2004 9.4.1 Authenticator Configuration')
if mibBuilder.loadTexts: dot1xAuthConfigTable.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthConfigTable.setDescription('A table that contains the configuration objects for the\n        Authenticator PAE associated with each port.\n        An entry appears in this table for each port that may\n        authenticate access to itself.')
dot1xAuthConfigEntry = MibTableRow((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1), ).setIndexNames((0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"))
if mibBuilder.loadTexts: dot1xAuthConfigEntry.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthConfigEntry.setDescription('The configuration information for an Authenticator\n        PAE.')
dot1xAuthPaeState = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initialize", 1), ("disconnected", 2), ("connecting", 3), ("authenticating", 4), ("authenticated", 5), ("aborting", 6), ("held", 7), ("forceAuth", 8), ("forceUnauth", 9), ("restart", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthPaeState.setReference('802.1X-2001 9.4.1, Authenticator PAE state,\n         802.1X-2004 9.4.1, Authenticator PAE state')
if mibBuilder.loadTexts: dot1xAuthPaeState.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthPaeState.setDescription('The current value of the Authenticator PAE state\n        machine.')
dot1xAuthBackendAuthState = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("request", 1), ("response", 2), ("success", 3), ("fail", 4), ("timeout", 5), ("idle", 6), ("initialize", 7), ("ignore", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthBackendAuthState.setReference('802.1X-2001 9.4.1, Backend Authentication state,\n         802.1X-2004 9.4.1, Backend Authentication state')
if mibBuilder.loadTexts: dot1xAuthBackendAuthState.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthBackendAuthState.setDescription('The current state of the Backend Authentication\n        state machine.')
dot1xAuthAdminControlledDirections = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 3), PaeControlledDirections()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthAdminControlledDirections.setReference('802.1X-2001 9.4.1, Admin Control Mode,\n         802.1X-2004 9.4.1, Admin Control Mode')
if mibBuilder.loadTexts: dot1xAuthAdminControlledDirections.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthAdminControlledDirections.setDescription('The current value of the administrative controlled\n        directions parameter for the Port.')
dot1xAuthOperControlledDirections = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 4), PaeControlledDirections()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthOperControlledDirections.setReference('802.1X-2001 9.4.1, Oper Control Mode,\n         802.1X-2004 9.4.1, Oper Control Mode')
if mibBuilder.loadTexts: dot1xAuthOperControlledDirections.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthOperControlledDirections.setDescription('The current value of the operational controlled\n        directions parameter for the Port.')
dot1xAuthAuthControlledPortStatus = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 5), PaeControlledPortStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthAuthControlledPortStatus.setReference('802.1X-2001 9.4.1, AuthControlledPortStatus,\n         802.1X-2004 9.4.1, AuthControlledPortStatus')
if mibBuilder.loadTexts: dot1xAuthAuthControlledPortStatus.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthAuthControlledPortStatus.setDescription('The current value of the controlled Port\n        status parameter for the Port.')
dot1xAuthAuthControlledPortControl = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 6), PaeControlledPortControl()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthAuthControlledPortControl.setReference('802.1X-2001 9.4.1, AuthControlledPortControl,\n         802.1X-2004 9.4.1, AuthControlledPortControl')
if mibBuilder.loadTexts: dot1xAuthAuthControlledPortControl.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthAuthControlledPortControl.setDescription('The current value of the controlled Port\n        control parameter for the Port.')
dot1xAuthQuietPeriod = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 7), Unsigned32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthQuietPeriod.setReference('802.1X-2001 9.4.1, quietPeriod,\n         802.1X-2004 9.4.1, quietPeriod')
if mibBuilder.loadTexts: dot1xAuthQuietPeriod.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthQuietPeriod.setDescription('The value, in seconds, of the quietPeriod constant\n        currently in use by the Authenticator PAE state\n        machine.')
dot1xAuthTxPeriod = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 8), Unsigned32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthTxPeriod.setReference('802.1X-2001 9.4.1, txPeriod')
if mibBuilder.loadTexts: dot1xAuthTxPeriod.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthTxPeriod.setDescription('The value, in seconds, of the txPeriod constant\n        currently in use by the Authenticator PAE state\n        machine.')
dot1xAuthSuppTimeout = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 9), Unsigned32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthSuppTimeout.setReference('802.1X-2001 9.4.1, suppTimeout,\n         802.1X-2004 9.4.1, suppTimeout')
if mibBuilder.loadTexts: dot1xAuthSuppTimeout.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthSuppTimeout.setDescription('The value, in seconds, of the suppTimeout constant\n        currently in use by the Backend Authentication state\n        machine.')
dot1xAuthServerTimeout = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 10), Unsigned32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthServerTimeout.setReference('802.1X-2001 9.4.1, serverTimeout,\n         802.1X-2004 9.4.1, serverTimeout')
if mibBuilder.loadTexts: dot1xAuthServerTimeout.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthServerTimeout.setDescription('The value, in seconds, of the serverTimeout constant\n        currently in use by the Backend Authentication state\n        machine.')
dot1xAuthMaxReq = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 11), Unsigned32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthMaxReq.setReference('802.1X-2001 9.4.1, maxReq')
if mibBuilder.loadTexts: dot1xAuthMaxReq.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthMaxReq.setDescription('The value of the maxReq constant currently in use by\n        the Backend Authentication state machine.')
dot1xAuthReAuthPeriod = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 12), Unsigned32().clone(3600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthReAuthPeriod.setReference('802.1X-2001 9.4.1, reAuthPeriod,\n         802.1X-2004 9.4.1, reAuthPeriod')
if mibBuilder.loadTexts: dot1xAuthReAuthPeriod.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthReAuthPeriod.setDescription('The value, in seconds, of the reAuthPeriod constant\n        currently in use by the Reauthentication Timer state\n        machine.')
dot1xAuthReAuthEnabled = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthReAuthEnabled.setReference('802.1X-2001 9.4.1, reAuthEnabled,\n         802.1X-2004 9.4.1, reAuthEnabled')
if mibBuilder.loadTexts: dot1xAuthReAuthEnabled.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthReAuthEnabled.setDescription('The enable/disable control used by the Reauthentication\n        Timer state machine (8.5.5.1).')
dot1xAuthKeyTxEnabled = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthKeyTxEnabled.setReference('802.1X-2001 9.4.1, keyTransmissionEnabled,\n         802.1X-2004 9.4.1, keyTransmissionEnabled')
if mibBuilder.loadTexts: dot1xAuthKeyTxEnabled.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthKeyTxEnabled.setDescription('The value of the keyTransmissionEnabled constant\n        currently in use by the Authenticator PAE state\n        machine.')
dot1xAuthStatsTable = MibTable((1, 0, 8802, 1, 1, 1, 1, 2, 2), )
if mibBuilder.loadTexts: dot1xAuthStatsTable.setReference('802.1X-2001 9.4.2 Authenticator Statistics,\n         802.1X-2004 9.4.2 Authenticator Statistics')
if mibBuilder.loadTexts: dot1xAuthStatsTable.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthStatsTable.setDescription('A table that contains the statistics objects for the\n         Authenticator PAE associated with each Port.\n         An entry appears in this table for each port that may\n         authenticate access to itself.')
dot1xAuthStatsEntry = MibTableRow((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1), ).setIndexNames((0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"))
if mibBuilder.loadTexts: dot1xAuthStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthStatsEntry.setDescription('The statistics information for an Authenticator PAE.')
dot1xAuthEapolFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEapolFramesRx.setReference('802.1X-2001 9.4.2, EAPOL frames received,\n         802.1X-2004 9.4.2, EAPOL frames received')
if mibBuilder.loadTexts: dot1xAuthEapolFramesRx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthEapolFramesRx.setDescription('The number of valid EAPOL frames of any type\n        that have been received by this Authenticator.')
dot1xAuthEapolFramesTx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEapolFramesTx.setReference('802.1X-2001 9.4.2, EAPOL frames transmitted,\n         802.1X-2004 9.4.2, EAPOL frames transmitted')
if mibBuilder.loadTexts: dot1xAuthEapolFramesTx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthEapolFramesTx.setDescription('The number of EAPOL frames of any type\n        that have been transmitted by this Authenticator.')
dot1xAuthEapolStartFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEapolStartFramesRx.setReference('802.1X-2001 9.4.2, EAPOL Start frames received,\n         802.1X-2004 9.4.2, EAPOL Start frames received')
if mibBuilder.loadTexts: dot1xAuthEapolStartFramesRx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthEapolStartFramesRx.setDescription('The number of EAPOL Start frames that have\n        been received by this Authenticator.')
dot1xAuthEapolLogoffFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEapolLogoffFramesRx.setReference('802.1X-2001 9.4.2, EAPOL Logoff frames received,\n         802.1X-2004 9.4.2, EAPOL Logoff frames received')
if mibBuilder.loadTexts: dot1xAuthEapolLogoffFramesRx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthEapolLogoffFramesRx.setDescription('The number of EAPOL Logoff frames that have\n        been received by this Authenticator.')
dot1xAuthEapolRespIdFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEapolRespIdFramesRx.setReference('802.1X-2001 9.4.2, EAPOL Resp/Id frames received,\n         802.1X-2004 9.4.2, EAPOL Resp/Id frames received')
if mibBuilder.loadTexts: dot1xAuthEapolRespIdFramesRx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthEapolRespIdFramesRx.setDescription('The number of EAP Resp/Id frames that have\n        been received by this Authenticator.')
dot1xAuthEapolRespFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEapolRespFramesRx.setReference('802.1X-2001 9.4.2, EAPOL Response frames received,\n         802.1X-2004 9.4.2, EAPOL Response frames received')
if mibBuilder.loadTexts: dot1xAuthEapolRespFramesRx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthEapolRespFramesRx.setDescription('The number of valid EAP Response frames\n        (other than Resp/Id frames) that have been\n        received by this Authenticator.')
dot1xAuthEapolReqIdFramesTx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEapolReqIdFramesTx.setReference('802.1X-2001 9.4.2, EAPOL Req/Id frames transmitted,\n         802.1X-2004 9.4.2, EAPOL Req/Id frames transmitted')
if mibBuilder.loadTexts: dot1xAuthEapolReqIdFramesTx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthEapolReqIdFramesTx.setDescription('The number of EAP Req/Id frames that have been\n        transmitted by this Authenticator.')
dot1xAuthEapolReqFramesTx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEapolReqFramesTx.setReference('802.1X-2001 9.4.2, EAPOL Request frames transmitted,\n         802.1X-2004 9.4.2, EAPOL Request frames transmitted')
if mibBuilder.loadTexts: dot1xAuthEapolReqFramesTx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthEapolReqFramesTx.setDescription('The number of EAP Request frames\n        (other than Rq/Id frames) that have been\n        transmitted by this Authenticator.')
dot1xAuthInvalidEapolFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthInvalidEapolFramesRx.setReference('802.1X-2001 9.4.2, Invalid EAPOL frames received,\n         802.1X-2004 9.4.2, Invalid EAPOL frames received')
if mibBuilder.loadTexts: dot1xAuthInvalidEapolFramesRx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthInvalidEapolFramesRx.setDescription('The number of EAPOL frames that have been\n        received by this Authenticator in which the\n        frame type is not recognized.')
dot1xAuthEapLengthErrorFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEapLengthErrorFramesRx.setReference('802.1X-2001 9.4.2, EAP length error frames received,\n         802.1X-2004 9.4.2, EAP length error frames received')
if mibBuilder.loadTexts: dot1xAuthEapLengthErrorFramesRx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthEapLengthErrorFramesRx.setDescription('The number of EAPOL frames that have been received\n        by this Authenticator in which the Packet Body\n        Length field is invalid.')
dot1xAuthLastEapolFrameVersion = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthLastEapolFrameVersion.setReference('802.1X-2001 9.4.2, Last EAPOL frame version,\n         802.1X-2004 9.4.2, Last EAPOL frame version')
if mibBuilder.loadTexts: dot1xAuthLastEapolFrameVersion.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthLastEapolFrameVersion.setDescription('The protocol version number carried in the\n        most recently received EAPOL frame.')
dot1xAuthLastEapolFrameSource = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 2, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthLastEapolFrameSource.setReference('802.1X-2001 9.4.2, Last EAPOL frame source,\n         802.1X-2004 9.4.2, Last EAPOL frame source')
if mibBuilder.loadTexts: dot1xAuthLastEapolFrameSource.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthLastEapolFrameSource.setDescription('The source MAC address carried in the\n        most recently received EAPOL frame.')
dot1xAuthDiagTable = MibTable((1, 0, 8802, 1, 1, 1, 1, 2, 3), )
if mibBuilder.loadTexts: dot1xAuthDiagTable.setReference('802.1X-2001 9.4.3 Authenticator Diagnostics')
if mibBuilder.loadTexts: dot1xAuthDiagTable.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthDiagTable.setDescription('A table that contains the diagnostics objects for the\n         Authenticator PAE associated with each Port.\n         An entry appears in this table for each port that may\n         authenticate access to itself.')
dot1xAuthDiagEntry = MibTableRow((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1), ).setIndexNames((0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"))
if mibBuilder.loadTexts: dot1xAuthDiagEntry.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthDiagEntry.setDescription('The diagnostics information for an Authenticator PAE.')
dot1xAuthEntersConnecting = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEntersConnecting.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.1')
if mibBuilder.loadTexts: dot1xAuthEntersConnecting.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthEntersConnecting.setDescription('Counts the number of times that the state machine\n        transitions to the CONNECTING state from any other\n        state.')
dot1xAuthEapLogoffsWhileConnecting = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEapLogoffsWhileConnecting.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.2')
if mibBuilder.loadTexts: dot1xAuthEapLogoffsWhileConnecting.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthEapLogoffsWhileConnecting.setDescription('Counts the number of times that the state machine\n        transitions from CONNECTING to DISCONNECTED as a result\n        of receiving an EAPOL-Logoff message.')
dot1xAuthEntersAuthenticating = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthEntersAuthenticating.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.3')
if mibBuilder.loadTexts: dot1xAuthEntersAuthenticating.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthEntersAuthenticating.setDescription('Counts the number of times that the state machine\n        transitions from CONNECTING to AUTHENTICATING, as a\n        result of an EAP-Response/Identity message being\n        received from the Supplicant.')
dot1xAuthAuthSuccessWhileAuthenticating = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthAuthSuccessWhileAuthenticating.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.4')
if mibBuilder.loadTexts: dot1xAuthAuthSuccessWhileAuthenticating.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthAuthSuccessWhileAuthenticating.setDescription('Counts the number of times that the state machine\n        transitions from AUTHENTICATING to AUTHENTICATED, as a\n        result of the Backend Authentication state machine\n        indicating successful authentication of the Supplicant\n        (authSuccess = TRUE).')
dot1xAuthAuthTimeoutsWhileAuthenticating = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthAuthTimeoutsWhileAuthenticating.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.5')
if mibBuilder.loadTexts: dot1xAuthAuthTimeoutsWhileAuthenticating.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthAuthTimeoutsWhileAuthenticating.setDescription('Counts the number of times that the state machine\n        transitions from AUTHENTICATING to ABORTING, as a result\n        of the Backend Authentication state machine indicating\n        authentication timeout (authTimeout = TRUE).')
dot1xAuthAuthFailWhileAuthenticating = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthAuthFailWhileAuthenticating.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.6')
if mibBuilder.loadTexts: dot1xAuthAuthFailWhileAuthenticating.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthAuthFailWhileAuthenticating.setDescription('Counts the number of times that the state machine\n        transitions from AUTHENTICATING to HELD, as a result\n        of the Backend Authentication state machine indicating\n        authentication failure (authFail = TRUE).')
dot1xAuthAuthReauthsWhileAuthenticating = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthAuthReauthsWhileAuthenticating.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.7')
if mibBuilder.loadTexts: dot1xAuthAuthReauthsWhileAuthenticating.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthAuthReauthsWhileAuthenticating.setDescription('Counts the number of times that the state machine\n        transitions from AUTHENTICATING to ABORTING, as a result\n        of a reauthentication request (reAuthenticate = TRUE).')
dot1xAuthAuthEapStartsWhileAuthenticating = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthAuthEapStartsWhileAuthenticating.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.8')
if mibBuilder.loadTexts: dot1xAuthAuthEapStartsWhileAuthenticating.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthAuthEapStartsWhileAuthenticating.setDescription('Counts the number of times that the state machine\n        transitions from AUTHENTICATING to ABORTING, as a result\n        of an EAPOL-Start message being received\n        from the Supplicant.')
dot1xAuthAuthEapLogoffWhileAuthenticating = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthAuthEapLogoffWhileAuthenticating.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.9')
if mibBuilder.loadTexts: dot1xAuthAuthEapLogoffWhileAuthenticating.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthAuthEapLogoffWhileAuthenticating.setDescription('Counts the number of times that the state machine\n        transitions from AUTHENTICATING to ABORTING, as a result\n        of an EAPOL-Logoff message being received\n        from the Supplicant.')
dot1xAuthAuthReauthsWhileAuthenticated = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthAuthReauthsWhileAuthenticated.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.10')
if mibBuilder.loadTexts: dot1xAuthAuthReauthsWhileAuthenticated.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthAuthReauthsWhileAuthenticated.setDescription('Counts the number of times that the state machine\n        transitions from AUTHENTICATED to CONNECTING, as a\n        result of a reauthentication request\n        (reAuthenticate = TRUE).')
dot1xAuthAuthEapStartsWhileAuthenticated = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthAuthEapStartsWhileAuthenticated.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.11')
if mibBuilder.loadTexts: dot1xAuthAuthEapStartsWhileAuthenticated.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthAuthEapStartsWhileAuthenticated.setDescription('Counts the number of times that the state machine\n        transitions from AUTHENTICATED to CONNECTING, as a\n        result of an EAPOL-Start message being received from the\n        Supplicant.')
dot1xAuthAuthEapLogoffWhileAuthenticated = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthAuthEapLogoffWhileAuthenticated.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.4.2.12')
if mibBuilder.loadTexts: dot1xAuthAuthEapLogoffWhileAuthenticated.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthAuthEapLogoffWhileAuthenticated.setDescription('Counts the number of times that the state machine\n        transitions from AUTHENTICATED to DISCONNECTED, as a\n        result of an EAPOL-Logoff message being received from\n        the Supplicant.')
dot1xAuthBackendResponses = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthBackendResponses.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.1')
if mibBuilder.loadTexts: dot1xAuthBackendResponses.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthBackendResponses.setDescription('Counts the number of times that the state machine sends\n        an initial Access-Request packet to the Authentication\n        server (i.e., executes sendRespToServer on entry to the\n        RESPONSE state). Indicates that the Authenticator\n        attempted communication with the Authentication Server.')
dot1xAuthBackendAccessChallenges = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthBackendAccessChallenges.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.2')
if mibBuilder.loadTexts: dot1xAuthBackendAccessChallenges.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthBackendAccessChallenges.setDescription('Counts the number of times that the state machine\n        receives an initial Access-Challenge packet from the\n        Authentication server (i.e., aReq becomes TRUE,\n        causing exit from the RESPONSE state). Indicates that\n        the Authentication Server has communication with\n        the Authenticator.')
dot1xAuthBackendOtherRequestsToSupplicant = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthBackendOtherRequestsToSupplicant.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.3')
if mibBuilder.loadTexts: dot1xAuthBackendOtherRequestsToSupplicant.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthBackendOtherRequestsToSupplicant.setDescription('Counts the number of times that the state machine\n        sends an EAP-Request packet (other than an Identity,\n        Notification, Failure or Success message) to the\n        Supplicant (i.e., executes txReq on entry to the\n        REQUEST state). Indicates that the Authenticator chose\n        an EAP-method.')
dot1xAuthBackendNonNakResponsesFromSupplicant = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthBackendNonNakResponsesFromSupplicant.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.4')
if mibBuilder.loadTexts: dot1xAuthBackendNonNakResponsesFromSupplicant.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthBackendNonNakResponsesFromSupplicant.setDescription("Counts the number of times that the state machine\n        receives a response from the Supplicant to an initial\n        EAP-Request, and the response is something other than\n        EAP-NAK (i.e., rxResp becomes TRUE, causing the state\n        machine to transition from REQUEST to RESPONSE,\n        and the response is not an EAP-NAK). Indicates that\n        the Supplicant can respond to the Authenticator's\n        chosen EAP-method.")
dot1xAuthBackendAuthSuccesses = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthBackendAuthSuccesses.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.5')
if mibBuilder.loadTexts: dot1xAuthBackendAuthSuccesses.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthBackendAuthSuccesses.setDescription('Counts the number of times that the state machine\n        receives an EAP-Success message from the Authentication\n        Server (i.e., aSuccess becomes TRUE, causing a\n        transition from RESPONSE to SUCCESS). Indicates that\n        the Supplicant has successfully authenticated to\n        the Authentication Server.')
dot1xAuthBackendAuthFails = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthBackendAuthFails.setReference('802.1X-2001 9.4.2, 802.1X-2001 8.5.6.2.6')
if mibBuilder.loadTexts: dot1xAuthBackendAuthFails.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xAuthBackendAuthFails.setDescription('Counts the number of times that the state machine\n        receives an EAP-Failure message from the Authentication\n        Server (i.e., aFail becomes TRUE, causing a transition\n        from RESPONSE to FAIL). Indicates that the Supplicant\n        has not authenticated to the Authentication Server.')
dot1xAuthSessionStatsTable = MibTable((1, 0, 8802, 1, 1, 1, 1, 2, 4), )
if mibBuilder.loadTexts: dot1xAuthSessionStatsTable.setReference('802.1X-2001 9.4.4,\n         802.1X-2004 9.4.4')
if mibBuilder.loadTexts: dot1xAuthSessionStatsTable.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthSessionStatsTable.setDescription('A table that contains the session statistics objects\n        for the Authenticator PAE associated with each Port.\n        An entry appears in this table for each port that may\n        authenticate access to itself.')
dot1xAuthSessionStatsEntry = MibTableRow((1, 0, 8802, 1, 1, 1, 1, 2, 4, 1), ).setIndexNames((0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"))
if mibBuilder.loadTexts: dot1xAuthSessionStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthSessionStatsEntry.setDescription('The session statistics information for an Authenticator\n        PAE.  This shows the current values being collected for\n        each session that is still in progress, or the final\n        values for the last valid session on each port where\n        there is no session currently active.')
dot1xAuthSessionOctetsRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthSessionOctetsRx.setReference('802.1X-2001 9.4.4, Session Octets Received,\n         802.1X-2004 9.4.4, Session Octets Received')
if mibBuilder.loadTexts: dot1xAuthSessionOctetsRx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthSessionOctetsRx.setDescription('The number of octets received in user data\n        frames on this Port during the session.')
dot1xAuthSessionOctetsTx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthSessionOctetsTx.setReference('802.1X-2001 9.4.4, Session Octets Transmitted,\n         802.1X-2004 9.4.4, Session Octets Transmitted')
if mibBuilder.loadTexts: dot1xAuthSessionOctetsTx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthSessionOctetsTx.setDescription('The number of octets transmitted in user data\n        frames on this Port during the session.')
dot1xAuthSessionFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthSessionFramesRx.setReference('802.1X-2001 9.4.4, Session Frames Received,\n         802.1X-2004 9.4.4, Session Frames Received')
if mibBuilder.loadTexts: dot1xAuthSessionFramesRx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthSessionFramesRx.setDescription('The number of user data frames received\n        on this Port during the session.')
dot1xAuthSessionFramesTx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthSessionFramesTx.setReference('802.1X-2001 9.4.4, Session Frames Transmitted,\n         802.1X-2004 9.4.4, Session Frames Transmitted')
if mibBuilder.loadTexts: dot1xAuthSessionFramesTx.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthSessionFramesTx.setDescription('The number of user data frames transmitted\n        on this Port during the session.')
dot1xAuthSessionId = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 4, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthSessionId.setReference('802.1X-2001 9.4.4, Session Identifier,\n         802.1X-2004 9.4.4, Session Identifier')
if mibBuilder.loadTexts: dot1xAuthSessionId.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthSessionId.setDescription('A unique identifier for the session, in the\n        form of a printable ASCII string of at least\n        three characters.')
dot1xAuthSessionAuthenticMethod = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("remoteAuthServer", 1), ("localAuthServer", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthSessionAuthenticMethod.setReference('802.1X-2001 9.4.4, Session Authentication Method,\n         802.1X-2004 9.4.4, Session Authentication Method')
if mibBuilder.loadTexts: dot1xAuthSessionAuthenticMethod.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthSessionAuthenticMethod.setDescription('The authentication method used to establish the\n        session.')
dot1xAuthSessionTime = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 4, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthSessionTime.setReference('802.1X-2001 9.4.4, Session Time,\n         802.1X-2004 9.4.4, Session Time')
if mibBuilder.loadTexts: dot1xAuthSessionTime.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthSessionTime.setDescription('The duration of the session in seconds.')
dot1xAuthSessionTerminateCause = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 999))).clone(namedValues=NamedValues(("supplicantLogoff", 1), ("portFailure", 2), ("supplicantRestart", 3), ("reauthFailed", 4), ("authControlForceUnauth", 5), ("portReInit", 6), ("portAdminDisabled", 7), ("notTerminatedYet", 999)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthSessionTerminateCause.setReference('802.1X-2001 9.4.4, Session Terminate Cause,\n         802.1X-2004 9.4.4, Session Terminate Cause')
if mibBuilder.loadTexts: dot1xAuthSessionTerminateCause.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthSessionTerminateCause.setDescription('The reason for the session termination.')
dot1xAuthSessionUserName = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 2, 4, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xAuthSessionUserName.setReference('802.1X-2001 9.4.4, Session User Name,\n         802.1X-2004 9.4.4, Session User Name')
if mibBuilder.loadTexts: dot1xAuthSessionUserName.setStatus('current')
if mibBuilder.loadTexts: dot1xAuthSessionUserName.setDescription('The User-Name representing the identity of the\n        Supplicant PAE.')
dot1xSuppConfigTable = MibTable((1, 0, 8802, 1, 1, 1, 1, 3, 1), )
if mibBuilder.loadTexts: dot1xSuppConfigTable.setReference('802.1X-2001 9.5.1,\n         802.1X-2004 9.5.1')
if mibBuilder.loadTexts: dot1xSuppConfigTable.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppConfigTable.setDescription('A table that contains the configuration objects for the\n        Supplicant PAE associated with each port.\n        An entry appears in this table for each port that may\n        authenticate itself when challenged by a remote system.')
dot1xSuppConfigEntry = MibTableRow((1, 0, 8802, 1, 1, 1, 1, 3, 1, 1), ).setIndexNames((0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"))
if mibBuilder.loadTexts: dot1xSuppConfigEntry.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppConfigEntry.setDescription('The configuration information for a Supplicant PAE.')
dot1xSuppPaeState = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("disconnected", 1), ("logoff", 2), ("connecting", 3), ("authenticating", 4), ("authenticated", 5), ("acquired", 6), ("held", 7), ("restart", 8), ("sForceAuth", 9), ("sForceUnauth", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppPaeState.setReference('802.1X-2001 9.5.1, Supplicant PAE State,\n         802.1X-2004 9.5.1, Supplicant PAE State')
if mibBuilder.loadTexts: dot1xSuppPaeState.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppPaeState.setDescription('The current state of the Supplicant PAE state\n        machine (8.5.8).')
dot1xSuppHeldPeriod = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 1, 1, 2), Unsigned32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xSuppHeldPeriod.setReference('802.1X-2001 9.5.1, heldPeriod,\n         802.1X-2004 9.5.1, heldPeriod')
if mibBuilder.loadTexts: dot1xSuppHeldPeriod.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppHeldPeriod.setDescription('The value, in seconds, of the heldPeriod\n        constant currently in use by the Supplicant\n        PAE state machine (8.5.8.1.2).')
dot1xSuppAuthPeriod = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 1, 1, 3), Unsigned32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xSuppAuthPeriod.setReference('802.1X-2001 9.5.1, authPeriod,\n         802.1X-2004 9.5.1, authPeriod')
if mibBuilder.loadTexts: dot1xSuppAuthPeriod.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppAuthPeriod.setDescription('The value, in seconds, of the authPeriod\n        constant currently in use by the Supplicant\n        PAE state machine (8.5.8.1.2).')
dot1xSuppStartPeriod = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 1, 1, 4), Unsigned32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xSuppStartPeriod.setReference('802.1X-2001 9.5.1, startPeriod,\n         802.1X-2004 9.5.1, startPeriod')
if mibBuilder.loadTexts: dot1xSuppStartPeriod.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppStartPeriod.setDescription('The value, in seconds, of the startPeriod\n        constant currently in use by the Supplicant\n        PAE state machine (8.5.8.1.2).')
dot1xSuppMaxStart = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 1, 1, 5), Unsigned32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xSuppMaxStart.setReference('802.1X-2001 9.5.1, maxStart,\n         802.1X-2004 9.5.1, maxStart')
if mibBuilder.loadTexts: dot1xSuppMaxStart.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppMaxStart.setDescription('The value of the maxStart constant currently in use by\n        the Supplicant PAE state machine (8.5.8.1.2).')
dot1xSuppControlledPortStatus = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 1, 1, 6), PaeControlledPortStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppControlledPortStatus.setReference('802.1X-2001 9.5.1, Supplicant PAE State,\n         802.1X-2004 9.5.1, Supplicant PAE State')
if mibBuilder.loadTexts: dot1xSuppControlledPortStatus.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppControlledPortStatus.setDescription('The current state of the Supplicant PAE state\n        machine (8.5.8).')
dot1xSuppAccessCtrlWithAuth = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2))).clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xSuppAccessCtrlWithAuth.setReference('802.1X-2004 9.5.1, Supplicant Access Control With\n        Authenticator')
if mibBuilder.loadTexts: dot1xSuppAccessCtrlWithAuth.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppAccessCtrlWithAuth.setDescription('The setting for the application of the Supplicant\n        authorization state when the port is operating as\n        both a Supplicant and an Authenticator.\n            inactive  indicates the port will not apply the\n                      the Supplicant authorization state, using\n                      only the Authenticator authorization \n                      state to restrict access to the port.\n            active    indicates the port will apply the\n                      the Supplicant authorization state, as\n                      well as the Authenticator\n                      authorization state.')
dot1xSuppBackendState = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("initialize", 1), ("idle", 2), ("request", 3), ("response", 4), ("receive", 5), ("fail", 6), ("success", 7), ("timeout", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppBackendState.setReference('802.1X-2004 9.5.1, Backend Supplicant state')
if mibBuilder.loadTexts: dot1xSuppBackendState.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppBackendState.setDescription('The current state of the Supplicant Backend state\n\tmachine.')
dot1xSuppStatsTable = MibTable((1, 0, 8802, 1, 1, 1, 1, 3, 2), )
if mibBuilder.loadTexts: dot1xSuppStatsTable.setReference('802.1X-2001 9.5.2,\n         802.1X-2004 9.5.2')
if mibBuilder.loadTexts: dot1xSuppStatsTable.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppStatsTable.setDescription('A table that contains the statistics objects for the\n        Supplicant PAE associated with each port.\n        An entry appears in this table for each port that may\n        authenticate itself when challenged by a remote system.')
dot1xSuppStatsEntry = MibTableRow((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1), ).setIndexNames((0, "IEEE8021-PAE-MIB", "dot1xPaePortNumber"))
if mibBuilder.loadTexts: dot1xSuppStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppStatsEntry.setDescription('The statistics information for a Supplicant PAE.')
dot1xSuppEapolFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppEapolFramesRx.setReference('802.1X-2001 9.5.2, EAPOL frames received,\n         802.1X-2004 9.5.2, EAPOL frames received')
if mibBuilder.loadTexts: dot1xSuppEapolFramesRx.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppEapolFramesRx.setDescription('The number of EAPOL frames of any type\n        that have been received by this Supplicant.')
dot1xSuppEapolFramesTx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppEapolFramesTx.setReference('802.1X-2001 9.5.2, EAPOL frames transmitted,\n         802.1X-2004 9.5.2, EAPOL frames transmitted')
if mibBuilder.loadTexts: dot1xSuppEapolFramesTx.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppEapolFramesTx.setDescription('The number of EAPOL frames of any type\n        that have been transmitted by this Supplicant.')
dot1xSuppEapolStartFramesTx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppEapolStartFramesTx.setReference('802.1X-2001 9.5.2, EAPOL Start frames transmitted,\n         802.1X-2004 9.5.2, EAPOL Start frames transmitted')
if mibBuilder.loadTexts: dot1xSuppEapolStartFramesTx.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppEapolStartFramesTx.setDescription('The number of EAPOL Start frames\n        that have been transmitted by this Supplicant.')
dot1xSuppEapolLogoffFramesTx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppEapolLogoffFramesTx.setReference('802.1X-2001 9.5.2, EAPOL Logoff frames transmitted,\n         802.1X-2004 9.5.2, EAPOL Logoff frames transmitted')
if mibBuilder.loadTexts: dot1xSuppEapolLogoffFramesTx.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppEapolLogoffFramesTx.setDescription('The number of EAPOL Logoff frames\n        that have been transmitted by this Supplicant.')
dot1xSuppEapolRespIdFramesTx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppEapolRespIdFramesTx.setReference('802.1X-2001 9.5.2, EAP Resp/Id frames transmitted,\n         802.1X-2004 9.5.2, EAP Resp/Id frames transmitted')
if mibBuilder.loadTexts: dot1xSuppEapolRespIdFramesTx.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xSuppEapolRespIdFramesTx.setDescription('The number of EAP Resp/Id frames\n        that have been transmitted by this Supplicant.')
dot1xSuppEapolRespFramesTx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppEapolRespFramesTx.setReference('802.1X-2001 9.5.2, EAP Resp frames transmitted,\n         802.1X-2004 9.5.2, EAP Resp frames transmitted')
if mibBuilder.loadTexts: dot1xSuppEapolRespFramesTx.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xSuppEapolRespFramesTx.setDescription('The number of valid EAP Response frames\n        (other than Resp/Id frames)\n        that have been transmitted by this Supplicant.')
dot1xSuppEapolReqIdFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppEapolReqIdFramesRx.setReference('802.1X-2001 9.5.2, EAP Req/Id frames received,\n         802.1X-2004 9.5.2, EAP Req/Id frames received')
if mibBuilder.loadTexts: dot1xSuppEapolReqIdFramesRx.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xSuppEapolReqIdFramesRx.setDescription('The number of EAP Req/Id frames\n        that have been received by this Supplicant.')
dot1xSuppEapolReqFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppEapolReqFramesRx.setReference('802.1X-2001 9.5.2, EAP Req frames received,\n         802.1X-2004 9.5.2, EAP Req frames received')
if mibBuilder.loadTexts: dot1xSuppEapolReqFramesRx.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xSuppEapolReqFramesRx.setDescription('The number of EAP Request frames (other than Rq/Id\n        frames) that have been received by this Supplicant.')
dot1xSuppInvalidEapolFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppInvalidEapolFramesRx.setReference('802.1X-2001 9.5.2, Invalid EAPOL frames received,\n         802.1X-2004 9.5.2, Invalid EAPOL frames received')
if mibBuilder.loadTexts: dot1xSuppInvalidEapolFramesRx.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppInvalidEapolFramesRx.setDescription('The number of EAPOL frames that have been\n        received by this Supplicant in which the\n        frame type is not recognized.')
dot1xSuppEapLengthErrorFramesRx = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppEapLengthErrorFramesRx.setReference('802.1X-2001 9.5.2, EAP length error frames received,\n         802.1X-2004 9.5.2, EAP length error frames received')
if mibBuilder.loadTexts: dot1xSuppEapLengthErrorFramesRx.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppEapLengthErrorFramesRx.setDescription('The number of EAPOL frames that have been\n        received by this Supplicant in which the Packet\n        Body Length field (7.5.5) is invalid.')
dot1xSuppLastEapolFrameVersion = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppLastEapolFrameVersion.setReference('802.1X-2001 9.5.2, Last EAPOL frame version,\n         802.1X-2004 9.5.2, Last EAPOL frame version')
if mibBuilder.loadTexts: dot1xSuppLastEapolFrameVersion.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppLastEapolFrameVersion.setDescription('The protocol version number carried in the\n        most recently received EAPOL frame.')
dot1xSuppLastEapolFrameSource = MibTableColumn((1, 0, 8802, 1, 1, 1, 1, 3, 2, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1xSuppLastEapolFrameSource.setReference('802.1X-2001 9.5.2, Last EAPOL frame source,\n         802.1X-2004 9.5.2, Last EAPOL frame source')
if mibBuilder.loadTexts: dot1xSuppLastEapolFrameSource.setStatus('current')
if mibBuilder.loadTexts: dot1xSuppLastEapolFrameSource.setDescription('The source MAC address carried in the\n        most recently received EAPOL frame.')
dot1xPaeConformance = MibIdentifier((1, 0, 8802, 1, 1, 1, 2))
dot1xPaeGroups = MibIdentifier((1, 0, 8802, 1, 1, 1, 2, 1))
dot1xPaeCompliances = MibIdentifier((1, 0, 8802, 1, 1, 1, 2, 2))
dot1xPaeSystemGroup = ObjectGroup((1, 0, 8802, 1, 1, 1, 2, 1, 1)).setObjects(("IEEE8021-PAE-MIB", "dot1xPaeSystemAuthControl"), ("IEEE8021-PAE-MIB", "dot1xPaePortProtocolVersion"), ("IEEE8021-PAE-MIB", "dot1xPaePortCapabilities"), ("IEEE8021-PAE-MIB", "dot1xPaePortInitialize"), ("IEEE8021-PAE-MIB", "dot1xPaePortReauthenticate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeSystemGroup = dot1xPaeSystemGroup.setStatus('current')
if mibBuilder.loadTexts: dot1xPaeSystemGroup.setDescription('A collection of objects providing system information\n        about, and control over, a PAE.')
dot1xPaeAuthConfigGroup = ObjectGroup((1, 0, 8802, 1, 1, 1, 2, 1, 2)).setObjects(("IEEE8021-PAE-MIB", "dot1xAuthPaeState"), ("IEEE8021-PAE-MIB", "dot1xAuthBackendAuthState"), ("IEEE8021-PAE-MIB", "dot1xAuthAdminControlledDirections"), ("IEEE8021-PAE-MIB", "dot1xAuthOperControlledDirections"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthControlledPortStatus"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthControlledPortControl"), ("IEEE8021-PAE-MIB", "dot1xAuthQuietPeriod"), ("IEEE8021-PAE-MIB", "dot1xAuthTxPeriod"), ("IEEE8021-PAE-MIB", "dot1xAuthSuppTimeout"), ("IEEE8021-PAE-MIB", "dot1xAuthServerTimeout"), ("IEEE8021-PAE-MIB", "dot1xAuthMaxReq"), ("IEEE8021-PAE-MIB", "dot1xAuthReAuthPeriod"), ("IEEE8021-PAE-MIB", "dot1xAuthReAuthEnabled"), ("IEEE8021-PAE-MIB", "dot1xAuthKeyTxEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeAuthConfigGroup = dot1xPaeAuthConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xPaeAuthConfigGroup.setDescription('A collection of objects providing configuration\n        information about an Authenticator PAE.')
dot1xPaeAuthStatsGroup = ObjectGroup((1, 0, 8802, 1, 1, 1, 2, 1, 3)).setObjects(("IEEE8021-PAE-MIB", "dot1xAuthEapolFramesRx"), ("IEEE8021-PAE-MIB", "dot1xAuthEapolFramesTx"), ("IEEE8021-PAE-MIB", "dot1xAuthEapolStartFramesRx"), ("IEEE8021-PAE-MIB", "dot1xAuthEapolLogoffFramesRx"), ("IEEE8021-PAE-MIB", "dot1xAuthEapolRespIdFramesRx"), ("IEEE8021-PAE-MIB", "dot1xAuthEapolRespFramesRx"), ("IEEE8021-PAE-MIB", "dot1xAuthEapolReqIdFramesTx"), ("IEEE8021-PAE-MIB", "dot1xAuthEapolReqFramesTx"), ("IEEE8021-PAE-MIB", "dot1xAuthInvalidEapolFramesRx"), ("IEEE8021-PAE-MIB", "dot1xAuthEapLengthErrorFramesRx"), ("IEEE8021-PAE-MIB", "dot1xAuthLastEapolFrameVersion"), ("IEEE8021-PAE-MIB", "dot1xAuthLastEapolFrameSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeAuthStatsGroup = dot1xPaeAuthStatsGroup.setStatus('current')
if mibBuilder.loadTexts: dot1xPaeAuthStatsGroup.setDescription('A collection of objects providing statistics about an\n        Authenticator PAE.')
dot1xPaeAuthDiagGroup = ObjectGroup((1, 0, 8802, 1, 1, 1, 2, 1, 4)).setObjects(("IEEE8021-PAE-MIB", "dot1xAuthEntersConnecting"), ("IEEE8021-PAE-MIB", "dot1xAuthEapLogoffsWhileConnecting"), ("IEEE8021-PAE-MIB", "dot1xAuthEntersAuthenticating"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthSuccessWhileAuthenticating"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthTimeoutsWhileAuthenticating"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthFailWhileAuthenticating"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthReauthsWhileAuthenticating"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthEapStartsWhileAuthenticating"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthEapLogoffWhileAuthenticating"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthReauthsWhileAuthenticated"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthEapStartsWhileAuthenticated"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthEapLogoffWhileAuthenticated"), ("IEEE8021-PAE-MIB", "dot1xAuthBackendResponses"), ("IEEE8021-PAE-MIB", "dot1xAuthBackendAccessChallenges"), ("IEEE8021-PAE-MIB", "dot1xAuthBackendOtherRequestsToSupplicant"), ("IEEE8021-PAE-MIB", "dot1xAuthBackendNonNakResponsesFromSupplicant"), ("IEEE8021-PAE-MIB", "dot1xAuthBackendAuthSuccesses"), ("IEEE8021-PAE-MIB", "dot1xAuthBackendAuthFails"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeAuthDiagGroup = dot1xPaeAuthDiagGroup.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xPaeAuthDiagGroup.setDescription('A collection of objects providing diagnostic statistics\n        about an Authenticator PAE.')
dot1xPaeAuthSessionStatsGroup = ObjectGroup((1, 0, 8802, 1, 1, 1, 2, 1, 5)).setObjects(("IEEE8021-PAE-MIB", "dot1xAuthSessionOctetsRx"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionOctetsTx"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionFramesRx"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionFramesTx"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionId"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionAuthenticMethod"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionTime"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionTerminateCause"), ("IEEE8021-PAE-MIB", "dot1xAuthSessionUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeAuthSessionStatsGroup = dot1xPaeAuthSessionStatsGroup.setStatus('current')
if mibBuilder.loadTexts: dot1xPaeAuthSessionStatsGroup.setDescription('A collection of objects providing statistics about the\n        current, or last session for an Authenticator PAE.')
dot1xPaeSuppConfigGroup = ObjectGroup((1, 0, 8802, 1, 1, 1, 2, 1, 6)).setObjects(("IEEE8021-PAE-MIB", "dot1xSuppPaeState"), ("IEEE8021-PAE-MIB", "dot1xSuppHeldPeriod"), ("IEEE8021-PAE-MIB", "dot1xSuppAuthPeriod"), ("IEEE8021-PAE-MIB", "dot1xSuppStartPeriod"), ("IEEE8021-PAE-MIB", "dot1xSuppMaxStart"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeSuppConfigGroup = dot1xPaeSuppConfigGroup.setStatus('current')
if mibBuilder.loadTexts: dot1xPaeSuppConfigGroup.setDescription('A collection of objects providing configuration\n        information about a Supplicant PAE.')
dot1xPaeSuppStatsGroup = ObjectGroup((1, 0, 8802, 1, 1, 1, 2, 1, 7)).setObjects(("IEEE8021-PAE-MIB", "dot1xSuppEapolFramesRx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapolFramesTx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapolStartFramesTx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapolLogoffFramesTx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapolRespIdFramesTx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapolRespFramesTx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapolReqIdFramesRx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapolReqFramesRx"), ("IEEE8021-PAE-MIB", "dot1xSuppInvalidEapolFramesRx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapLengthErrorFramesRx"), ("IEEE8021-PAE-MIB", "dot1xSuppLastEapolFrameVersion"), ("IEEE8021-PAE-MIB", "dot1xSuppLastEapolFrameSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeSuppStatsGroup = dot1xPaeSuppStatsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xPaeSuppStatsGroup.setDescription('A collection of objects providing statistics about a\n        Supplicant PAE.')
dot1xPaeAuthConfigGroup2 = ObjectGroup((1, 0, 8802, 1, 1, 1, 2, 1, 8)).setObjects(("IEEE8021-PAE-MIB", "dot1xAuthPaeState"), ("IEEE8021-PAE-MIB", "dot1xAuthBackendAuthState"), ("IEEE8021-PAE-MIB", "dot1xAuthAdminControlledDirections"), ("IEEE8021-PAE-MIB", "dot1xAuthOperControlledDirections"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthControlledPortStatus"), ("IEEE8021-PAE-MIB", "dot1xAuthAuthControlledPortControl"), ("IEEE8021-PAE-MIB", "dot1xAuthQuietPeriod"), ("IEEE8021-PAE-MIB", "dot1xAuthServerTimeout"), ("IEEE8021-PAE-MIB", "dot1xAuthReAuthPeriod"), ("IEEE8021-PAE-MIB", "dot1xAuthReAuthEnabled"), ("IEEE8021-PAE-MIB", "dot1xAuthKeyTxEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeAuthConfigGroup2 = dot1xPaeAuthConfigGroup2.setStatus('current')
if mibBuilder.loadTexts: dot1xPaeAuthConfigGroup2.setDescription('A collection of objects providing configuration\n        information about an Authenticator PAE.')
dot1xPaeSuppConfigGroup2 = ObjectGroup((1, 0, 8802, 1, 1, 1, 2, 1, 9)).setObjects(("IEEE8021-PAE-MIB", "dot1xSuppControlledPortStatus"), ("IEEE8021-PAE-MIB", "dot1xSuppAccessCtrlWithAuth"), ("IEEE8021-PAE-MIB", "dot1xSuppBackendState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeSuppConfigGroup2 = dot1xPaeSuppConfigGroup2.setStatus('current')
if mibBuilder.loadTexts: dot1xPaeSuppConfigGroup2.setDescription('A collection of objects providing configuration\n        information about a Supplicant PAE.')
dot1xPaeSuppStatsGroup2 = ObjectGroup((1, 0, 8802, 1, 1, 1, 2, 1, 10)).setObjects(("IEEE8021-PAE-MIB", "dot1xSuppEapolFramesRx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapolFramesTx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapolStartFramesTx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapolLogoffFramesTx"), ("IEEE8021-PAE-MIB", "dot1xSuppInvalidEapolFramesRx"), ("IEEE8021-PAE-MIB", "dot1xSuppEapLengthErrorFramesRx"), ("IEEE8021-PAE-MIB", "dot1xSuppLastEapolFrameVersion"), ("IEEE8021-PAE-MIB", "dot1xSuppLastEapolFrameSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeSuppStatsGroup2 = dot1xPaeSuppStatsGroup2.setStatus('current')
if mibBuilder.loadTexts: dot1xPaeSuppStatsGroup2.setDescription('A collection of objects providing statistics about a\n        Supplicant PAE.')
dot1xPaeCompliance = ModuleCompliance((1, 0, 8802, 1, 1, 1, 2, 2, 1)).setObjects(("IEEE8021-PAE-MIB", "dot1xPaeSystemGroup"), ("IEEE8021-PAE-MIB", "dot1xPaeAuthConfigGroup"), ("IEEE8021-PAE-MIB", "dot1xPaeAuthStatsGroup"), ("IEEE8021-PAE-MIB", "dot1xPaeAuthDiagGroup"), ("IEEE8021-PAE-MIB", "dot1xPaeAuthSessionStatsGroup"), ("IEEE8021-PAE-MIB", "dot1xPaeSuppConfigGroup"), ("IEEE8021-PAE-MIB", "dot1xPaeSuppStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeCompliance = dot1xPaeCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: dot1xPaeCompliance.setDescription('The compliance statement for device support of\n        Port Access Control.')
dot1xPaeCompliance2 = ModuleCompliance((1, 0, 8802, 1, 1, 1, 2, 2, 2)).setObjects(("IEEE8021-PAE-MIB", "dot1xPaeSystemGroup"), ("IEEE8021-PAE-MIB", "dot1xPaeAuthConfigGroup2"), ("IEEE8021-PAE-MIB", "dot1xPaeAuthStatsGroup"), ("IEEE8021-PAE-MIB", "dot1xPaeAuthSessionStatsGroup"), ("IEEE8021-PAE-MIB", "dot1xPaeSuppConfigGroup"), ("IEEE8021-PAE-MIB", "dot1xPaeSuppStatsGroup2"), ("IEEE8021-PAE-MIB", "dot1xPaeSuppConfigGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1xPaeCompliance2 = dot1xPaeCompliance2.setStatus('current')
if mibBuilder.loadTexts: dot1xPaeCompliance2.setDescription('The compliance statement for device support of\n        Port Access Control.')
mibBuilder.exportSymbols("IEEE8021-PAE-MIB", dot1xSuppConfigTable=dot1xSuppConfigTable, dot1xAuthBackendAccessChallenges=dot1xAuthBackendAccessChallenges, paeMIBObjects=paeMIBObjects, dot1xSuppLastEapolFrameVersion=dot1xSuppLastEapolFrameVersion, dot1xAuthDiagEntry=dot1xAuthDiagEntry, dot1xPaeConformance=dot1xPaeConformance, dot1xPaeCompliance2=dot1xPaeCompliance2, dot1xAuthLastEapolFrameVersion=dot1xAuthLastEapolFrameVersion, dot1xSuppInvalidEapolFramesRx=dot1xSuppInvalidEapolFramesRx, dot1xSuppEapolRespIdFramesTx=dot1xSuppEapolRespIdFramesTx, dot1xSuppConfigEntry=dot1xSuppConfigEntry, dot1xSuppEapolStartFramesTx=dot1xSuppEapolStartFramesTx, dot1xAuthSessionUserName=dot1xAuthSessionUserName, dot1xAuthBackendNonNakResponsesFromSupplicant=dot1xAuthBackendNonNakResponsesFromSupplicant, dot1xSuppEapolRespFramesTx=dot1xSuppEapolRespFramesTx, PaeControlledPortControl=PaeControlledPortControl, dot1xAuthEapolRespIdFramesRx=dot1xAuthEapolRespIdFramesRx, dot1xSuppEapolReqFramesRx=dot1xSuppEapolReqFramesRx, dot1xPaeAuthConfigGroup2=dot1xPaeAuthConfigGroup2, PaeControlledDirections=PaeControlledDirections, dot1xAuthInvalidEapolFramesRx=dot1xAuthInvalidEapolFramesRx, dot1xSuppEapLengthErrorFramesRx=dot1xSuppEapLengthErrorFramesRx, dot1xAuthEapolRespFramesRx=dot1xAuthEapolRespFramesRx, dot1xAuthAdminControlledDirections=dot1xAuthAdminControlledDirections, dot1xPaeAuthDiagGroup=dot1xPaeAuthDiagGroup, dot1xAuthAuthControlledPortControl=dot1xAuthAuthControlledPortControl, dot1xAuthSessionStatsTable=dot1xAuthSessionStatsTable, dot1xPaeAuthStatsGroup=dot1xPaeAuthStatsGroup, dot1xAuthOperControlledDirections=dot1xAuthOperControlledDirections, dot1xPaeSuppConfigGroup2=dot1xPaeSuppConfigGroup2, dot1xSuppEapolFramesRx=dot1xSuppEapolFramesRx, dot1xAuthConfigTable=dot1xAuthConfigTable, ieee8021paeMIB=ieee8021paeMIB, dot1xSuppAuthPeriod=dot1xSuppAuthPeriod, dot1xAuthSessionAuthenticMethod=dot1xAuthSessionAuthenticMethod, dot1xAuthSuppTimeout=dot1xAuthSuppTimeout, dot1xPaePortCapabilities=dot1xPaePortCapabilities, dot1xSuppEapolFramesTx=dot1xSuppEapolFramesTx, dot1xSuppStartPeriod=dot1xSuppStartPeriod, dot1xSuppStatsTable=dot1xSuppStatsTable, dot1xAuthEntersConnecting=dot1xAuthEntersConnecting, dot1xPaePortInitialize=dot1xPaePortInitialize, dot1xAuthAuthReauthsWhileAuthenticated=dot1xAuthAuthReauthsWhileAuthenticated, dot1xAuthDiagTable=dot1xAuthDiagTable, dot1xPaeCompliance=dot1xPaeCompliance, dot1xAuthBackendResponses=dot1xAuthBackendResponses, dot1xPaeAuthenticator=dot1xPaeAuthenticator, dot1xPaeSupplicant=dot1xPaeSupplicant, PYSNMP_MODULE_ID=ieee8021paeMIB, dot1xAuthEntersAuthenticating=dot1xAuthEntersAuthenticating, dot1xPaeGroups=dot1xPaeGroups, dot1xAuthKeyTxEnabled=dot1xAuthKeyTxEnabled, dot1xPaePortEntry=dot1xPaePortEntry, dot1xAuthAuthReauthsWhileAuthenticating=dot1xAuthAuthReauthsWhileAuthenticating, dot1xPaeAuthConfigGroup=dot1xPaeAuthConfigGroup, dot1xAuthAuthTimeoutsWhileAuthenticating=dot1xAuthAuthTimeoutsWhileAuthenticating, dot1xAuthSessionFramesRx=dot1xAuthSessionFramesRx, dot1xAuthQuietPeriod=dot1xAuthQuietPeriod, dot1xPaeSuppStatsGroup2=dot1xPaeSuppStatsGroup2, PaeControlledPortStatus=PaeControlledPortStatus, dot1xAuthBackendAuthSuccesses=dot1xAuthBackendAuthSuccesses, dot1xAuthLastEapolFrameSource=dot1xAuthLastEapolFrameSource, dot1xPaePortTable=dot1xPaePortTable, dot1xAuthEapolReqFramesTx=dot1xAuthEapolReqFramesTx, dot1xAuthBackendAuthFails=dot1xAuthBackendAuthFails, dot1xSuppControlledPortStatus=dot1xSuppControlledPortStatus, dot1xAuthEapLengthErrorFramesRx=dot1xAuthEapLengthErrorFramesRx, dot1xAuthStatsTable=dot1xAuthStatsTable, dot1xAuthTxPeriod=dot1xAuthTxPeriod, dot1xAuthServerTimeout=dot1xAuthServerTimeout, dot1xAuthEapolFramesTx=dot1xAuthEapolFramesTx, dot1xAuthSessionFramesTx=dot1xAuthSessionFramesTx, dot1xAuthSessionTime=dot1xAuthSessionTime, dot1xAuthSessionTerminateCause=dot1xAuthSessionTerminateCause, dot1xSuppMaxStart=dot1xSuppMaxStart, dot1xAuthEapLogoffsWhileConnecting=dot1xAuthEapLogoffsWhileConnecting, dot1xPaePortProtocolVersion=dot1xPaePortProtocolVersion, dot1xAuthAuthEapStartsWhileAuthenticated=dot1xAuthAuthEapStartsWhileAuthenticated, dot1xAuthEapolLogoffFramesRx=dot1xAuthEapolLogoffFramesRx, dot1xAuthBackendOtherRequestsToSupplicant=dot1xAuthBackendOtherRequestsToSupplicant, dot1xSuppBackendState=dot1xSuppBackendState, dot1xAuthConfigEntry=dot1xAuthConfigEntry, dot1xAuthPaeState=dot1xAuthPaeState, dot1xAuthSessionOctetsTx=dot1xAuthSessionOctetsTx, dot1xPaePortNumber=dot1xPaePortNumber, dot1xAuthAuthEapLogoffWhileAuthenticating=dot1xAuthAuthEapLogoffWhileAuthenticating, dot1xAuthAuthEapLogoffWhileAuthenticated=dot1xAuthAuthEapLogoffWhileAuthenticated, dot1xPaePortReauthenticate=dot1xPaePortReauthenticate, dot1xAuthEapolStartFramesRx=dot1xAuthEapolStartFramesRx, dot1xAuthAuthControlledPortStatus=dot1xAuthAuthControlledPortStatus, dot1xSuppPaeState=dot1xSuppPaeState, dot1xAuthSessionId=dot1xAuthSessionId, dot1xAuthAuthSuccessWhileAuthenticating=dot1xAuthAuthSuccessWhileAuthenticating, dot1xPaeAuthSessionStatsGroup=dot1xPaeAuthSessionStatsGroup, dot1xAuthAuthEapStartsWhileAuthenticating=dot1xAuthAuthEapStartsWhileAuthenticating, dot1xSuppEapolReqIdFramesRx=dot1xSuppEapolReqIdFramesRx, dot1xSuppLastEapolFrameSource=dot1xSuppLastEapolFrameSource, dot1xAuthAuthFailWhileAuthenticating=dot1xAuthAuthFailWhileAuthenticating, dot1xPaeSystemGroup=dot1xPaeSystemGroup, dot1xPaeSystemAuthControl=dot1xPaeSystemAuthControl, dot1xPaeCompliances=dot1xPaeCompliances, dot1xAuthEapolFramesRx=dot1xAuthEapolFramesRx, dot1xAuthReAuthPeriod=dot1xAuthReAuthPeriod, dot1xAuthEapolReqIdFramesTx=dot1xAuthEapolReqIdFramesTx, dot1xAuthBackendAuthState=dot1xAuthBackendAuthState, dot1xSuppStatsEntry=dot1xSuppStatsEntry, dot1xAuthMaxReq=dot1xAuthMaxReq, dot1xAuthReAuthEnabled=dot1xAuthReAuthEnabled, dot1xAuthSessionOctetsRx=dot1xAuthSessionOctetsRx, dot1xSuppHeldPeriod=dot1xSuppHeldPeriod, dot1xPaeSuppStatsGroup=dot1xPaeSuppStatsGroup, dot1xPaeSystem=dot1xPaeSystem, dot1xPaeSuppConfigGroup=dot1xPaeSuppConfigGroup, dot1xAuthStatsEntry=dot1xAuthStatsEntry, dot1xAuthSessionStatsEntry=dot1xAuthSessionStatsEntry, dot1xSuppEapolLogoffFramesTx=dot1xSuppEapolLogoffFramesTx, dot1xSuppAccessCtrlWithAuth=dot1xSuppAccessCtrlWithAuth)
