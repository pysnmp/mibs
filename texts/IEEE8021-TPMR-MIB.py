#
# PySNMP MIB module IEEE8021-TPMR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/iee/IEEE8021-TPMR-MIB
# Produced by pysmi-1.1.12 at Tue May 28 12:02:03 2024
# On host fv-az1490-484 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ieee8021BridgeBasePortComponentId, = mibBuilder.importSymbols("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId")
ieee802dot1mibs, IEEE8021BridgePortNumber = mibBuilder.importSymbols("IEEE8021-TC-MIB", "ieee802dot1mibs", "IEEE8021BridgePortNumber")
ifCounterDiscontinuityGroup, = mibBuilder.importSymbols("IF-MIB", "ifCounterDiscontinuityGroup")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, ObjectIdentity, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, Unsigned32, iso, ModuleIdentity, Integer32, IpAddress, Bits, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "Unsigned32", "iso", "ModuleIdentity", "Integer32", "IpAddress", "Bits", "Counter64")
TruthValue, DisplayString, TextualConvention, MacAddress, TimeInterval, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention", "MacAddress", "TimeInterval", "StorageType")
ieee8021TpmrMib = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 14))
ieee8021TpmrMib.setRevisions(('2018-06-28 00:00', '2014-12-15 00:00', '2011-02-27 00:00', '2009-09-04 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ieee8021TpmrMib.setRevisionsDescriptions(('Published as part of IEEE Std 802.1Q-2018.\n            Cross references updated and corrected.', 'Published as part of IEEE Std 802.1Q 2014 revision.\n            Cross references updated and corrected.', 'Minor edits to contact information etc. as part of \n          2011 revision of IEEE Std 802.1Q.', 'Initial version as published in IEEE Std 802.1aj',))
if mibBuilder.loadTexts: ieee8021TpmrMib.setLastUpdated('201806280000Z')
if mibBuilder.loadTexts: ieee8021TpmrMib.setOrganization('IEEE 802.1 Working Group')
if mibBuilder.loadTexts: ieee8021TpmrMib.setContactInfo('  WG-URL: http://www.ieee802.org/1/\n       WG-Email: stds-802-1-L@ieee.org\n\n          Contact: IEEE 802.1 Working Group Chair\n           Postal: C/O IEEE 802.1 Working Group\n                   IEEE Standards Association\n                   445 Hoes Lane\n                   Piscataway\n                   NJ 08854\n                   USA\n           E-mail: STDS-802-1-L@IEEE.ORG')
if mibBuilder.loadTexts: ieee8021TpmrMib.setDescription('Two-Port MAC Relay (TPMR) MIB module.\n      \n       Unless otherwise indicated, the references in this MIB    \n       module  are to IEEE Std 802.1Q.\n\n       Copyright(c) IEEE (2018)\n       This MIB module is part of IEEE Std 802.1Q; \n       refer to the document itself for full legal notices.')
ieee8021TpmrNotifications = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 14, 0))
ieee8021TpmrObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 14, 1))
ieee8021TpmrConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 14, 2))
class IEEE8021TpmrFrameDiscardErrorReason(TextualConvention, Integer32):
    reference = '12.19.3.1.1.3:h'
    description = 'A reason code for a frame discard error.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("txSduSizeExceeded", 1))

ieee8021TpmrPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 14, 1, 1), )
if mibBuilder.loadTexts: ieee8021TpmrPortTable.setReference('12.19.1.2.1, 12.19.1.2.2')
if mibBuilder.loadTexts: ieee8021TpmrPortTable.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortTable.setDescription('The TPMR port table.  Each row in the table represents a\n       TPMR port.  By definition there are two ports per TPMR.\n\n       Note that the indices of this table are equivalent to\n       those of the ieee8021BridgeBasePortTable in the\n       IEEE8021-BRIDGE-MIB, with ieee8021TpmrPortNumber having\n       a more limited value range than ieee8021BridgeBasePort.')
ieee8021TpmrPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 14, 1, 1, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId"), (0, "IEEE8021-TPMR-MIB", "ieee8021TpmrPortNumber"))
if mibBuilder.loadTexts: ieee8021TpmrPortEntry.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortEntry.setDescription('A TPMR port table entry.')
ieee8021TpmrPortNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 1, 1, 1), IEEE8021BridgePortNumber().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: ieee8021TpmrPortNumber.setReference('12.19.1.1.1.3:b,1')
if mibBuilder.loadTexts: ieee8021TpmrPortNumber.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortNumber.setDescription('The number of this TPMR port.')
ieee8021TpmrPortMgmtAddr = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrPortMgmtAddr.setReference('12.19.1.1.1.3:b,3')
if mibBuilder.loadTexts: ieee8021TpmrPortMgmtAddr.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortMgmtAddr.setDescription("Is 'true' if the TPMR port MAC address is the management\n       address of the TPMR, otheriwse 'false'.")
ieee8021TpmrPortMgmtAddrForwarding = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrPortMgmtAddrForwarding.setReference('12.19.1.2.1.3:c')
if mibBuilder.loadTexts: ieee8021TpmrPortMgmtAddrForwarding.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortMgmtAddrForwarding.setDescription("Is 'true' if forwarding is enabled for frames destined to the\n       management address of the TPMR, otherwise 'false'.")
ieee8021TpmrPortStatsTable = MibTable((1, 3, 111, 2, 802, 1, 1, 14, 1, 2), )
if mibBuilder.loadTexts: ieee8021TpmrPortStatsTable.setReference('12.19.3.1')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsTable.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsTable.setDescription('The TPMR port statistics table.  Each row in the table\n       represents a TPMR port.  By definition there are two\n       ports per TPMR.\n\n       Discontinuities in the value of counters in this table\n       can occur at re-initialization of the management system,\n       and at other times as indicated by the value of IF-MIB\n       ifCounterDiscontinuityTime.')
ieee8021TpmrPortStatsEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 14, 1, 2, 1), )
ieee8021TpmrPortEntry.registerAugmentions(("IEEE8021-TPMR-MIB", "ieee8021TpmrPortStatsEntry"))
ieee8021TpmrPortStatsEntry.setIndexNames(*ieee8021TpmrPortEntry.getIndexNames())
if mibBuilder.loadTexts: ieee8021TpmrPortStatsEntry.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsEntry.setDescription('A TPMR port counters table entry.')
ieee8021TpmrPortStatsRxFrames = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 2, 1, 1), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrPortStatsRxFrames.setReference('12.19.3.1.1.3:a')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsRxFrames.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsRxFrames.setDescription('Count of all valid frames received on this port (including\n       BPDUs, frames addressed to the TPMR as an end station, and\n       frames that were submitted to the Forwarding Process).')
ieee8021TpmrPortStatsRxOctets = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 2, 1, 2), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrPortStatsRxOctets.setReference('12.19.3.1.1.3:b')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsRxOctets.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsRxOctets.setDescription('Count of the total number of octets in all valid frames\n       received on this port (including BPDUs, frames addressed\n       to the TPMR as an end station, and frames that were\n       submitted to the Forwarding Process).')
ieee8021TpmrPortStatsFramesForwarded = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 2, 1, 3), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesForwarded.setReference('12.19.3.1.1.3:d')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesForwarded.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesForwarded.setDescription('Count of all frames that were received on this port and\n      were forwarded to the transmission port.')
ieee8021TpmrPortStatsFramesDiscarded = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 2, 1, 4), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscarded.setReference('12.19.3.1.1.3:c')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscarded.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscarded.setDescription('Count of all frames that were received on this port but\n       were discarded by the Forwarding Process for any reason.')
ieee8021TpmrPortStatsFramesDiscardedQueueFull = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 2, 1, 5), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscardedQueueFull.setReference('12.19.3.1.1.3:e')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscardedQueueFull.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscardedQueueFull.setDescription('Count of all frames received on this port that were to\n       be transmitted through the transmission port but were\n       discarded due to lack of available queue space.')
ieee8021TpmrPortStatsFramesDiscardedLifetime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 2, 1, 6), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscardedLifetime.setReference('12.19.3.1.1.3:f')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscardedLifetime.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscardedLifetime.setDescription('Count of all frames received on this port that were to\n       be transmitted through the transmission port but were\n       discarded due to their frame lifetime having been\n       exceeded.')
ieee8021TpmrPortStatsFramesDiscardedError = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 2, 1, 7), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscardedError.setReference('12.19.3.1.1.3:g')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscardedError.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsFramesDiscardedError.setDescription('Count of all frames received on this port that were to\n       be transmitted through the transmission port but could\n       not be transmitted (e.g., frame too large).')
ieee8021TpmrPortDiscardDetailsTable = MibTable((1, 3, 111, 2, 802, 1, 1, 14, 1, 3), )
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsTable.setReference('12.19.3.1.1.3:h')
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsTable.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsTable.setDescription('The TPMR frames discard details table.  Each row in\n       the table represents a discarded frame on a TPMR port.\n       By definition there are two ports per TPMR.\n\n       This table is maintained as a FIFO.  A new entry is\n       inserted in the first row, and existing entries are\n       shuffled down, with the last entry being discarded.\n\n       Because of the FIFO behavior, the relationship between\n       the index and contents will change when an entry is\n       added to the table.  This may result in apparent\n       duplication of row content during a table traversal.')
ieee8021TpmrPortDiscardDetailsEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 14, 1, 3, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId"), (0, "IEEE8021-TPMR-MIB", "ieee8021TpmrPortNumber"), (0, "IEEE8021-TPMR-MIB", "ieee8021TpmrPortDiscardDetailsIndex"))
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsEntry.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsEntry.setDescription('A TPMR frames discarded error details table entry.')
ieee8021TpmrPortDiscardDetailsIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsIndex.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsIndex.setDescription('The second index of a TPMR frames discard details\n       table entry.')
ieee8021TpmrPortDiscardDetailsSource = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsSource.setReference('12.19.3.1.1.3:h')
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsSource.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsSource.setDescription('The source MAC address of the discarded frame.')
ieee8021TpmrPortDiscardDetailsReason = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 3, 1, 3), IEEE8021TpmrFrameDiscardErrorReason()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsReason.setReference('12.19.3.1.1.3:h')
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsReason.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsReason.setDescription('The reason why the frame was discarded.')
ieee8021TpmrMspTable = MibTable((1, 3, 111, 2, 802, 1, 1, 14, 1, 4), )
if mibBuilder.loadTexts: ieee8021TpmrMspTable.setReference('12.19.4.1.1, 12.19.4.1.2')
if mibBuilder.loadTexts: ieee8021TpmrMspTable.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspTable.setDescription('The TPMR MAC status propagation performance table.  Each\n       row in the table represents a TPMR port.  By definition\n       there are two ports per TPMR.\n\n       The persistence of writable objects in a conceptual row\n       of this table is determined by the value of the\n       ieee8021TpmrMspStorageType object.')
ieee8021TpmrMspEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 14, 1, 4, 1), )
ieee8021TpmrPortEntry.registerAugmentions(("IEEE8021-TPMR-MIB", "ieee8021TpmrMspEntry"))
ieee8021TpmrMspEntry.setIndexNames(*ieee8021TpmrPortEntry.getIndexNames())
if mibBuilder.loadTexts: ieee8021TpmrMspEntry.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspEntry.setDescription('A TPMR MAC status propagation performance table entry.')
ieee8021TpmrMspLinkNotify = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 4, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021TpmrMspLinkNotify.setReference('12.19.4.1.1.3:a, 12.19.4.1.2.2:b')
if mibBuilder.loadTexts: ieee8021TpmrMspLinkNotify.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspLinkNotify.setDescription('The value of LinkNotify used by the MSP state machines.')
ieee8021TpmrMspLinkNotifyWait = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 4, 1, 2), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(20, 100)).clone(40)).setUnits('centiseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021TpmrMspLinkNotifyWait.setReference('12.19.4.1.1.3:b, 12.19.4.1.2.2:c')
if mibBuilder.loadTexts: ieee8021TpmrMspLinkNotifyWait.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspLinkNotifyWait.setDescription('The value of LinkNotifyWait used by the MSP state machines.')
ieee8021TpmrMspLinkNotifyRetry = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 4, 1, 3), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(10, 100)).clone(100)).setUnits('centiseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021TpmrMspLinkNotifyRetry.setReference('12.19.4.1.1.3:c, 12.19.4.1.2.2:d')
if mibBuilder.loadTexts: ieee8021TpmrMspLinkNotifyRetry.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspLinkNotifyRetry.setDescription('The value of LinkNotifyRetry used by the MSP state machines.')
ieee8021TpmrMspMacNotify = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 4, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021TpmrMspMacNotify.setReference('12.19.4.1.1.3:d, 12.19.4.1.2.2:e')
if mibBuilder.loadTexts: ieee8021TpmrMspMacNotify.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspMacNotify.setDescription('The value of MacNotify used by the MSP state machines.')
ieee8021TpmrMspMacNotifyTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 4, 1, 5), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(20)).setUnits('centiseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021TpmrMspMacNotifyTime.setReference('12.19.4.1.1.3:e, 12.19.4.1.2.2:f')
if mibBuilder.loadTexts: ieee8021TpmrMspMacNotifyTime.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspMacNotifyTime.setDescription('The value of MacNotifyTime used by the MSP state machines.')
ieee8021TpmrMspMacRecoverTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 4, 1, 6), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(2, 50)).clone(10)).setUnits('centiseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021TpmrMspMacRecoverTime.setReference('12.19.4.1.1.3:f, 12.19.4.1.2.2:g')
if mibBuilder.loadTexts: ieee8021TpmrMspMacRecoverTime.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspMacRecoverTime.setDescription('The value of MacRecoverTime used by the MSP state machines.')
ieee8021TpmrMspStorageType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 4, 1, 7), StorageType().clone('nonVolatile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021TpmrMspStorageType.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStorageType.setDescription("The storage type for all read-write objects within this\n         row.  Conceptual rows having the value 'permanent' need\n         not allow write access to any columnar objects in the row.\n\n         If this object has the value 'volatile', modifications\n         to read-write objects in this row are not persistent\n         across reboots or restarts.  If this object has the value\n         'nonVolatile', modifications to objects in this row\n         are persistent.")
ieee8021TpmrMspStatsTable = MibTable((1, 3, 111, 2, 802, 1, 1, 14, 1, 5), )
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTable.setReference('12.19.4.1.3')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTable.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTable.setDescription('The TPMR MAC status propagation statistics table.  Each\n       row in the table represents a TPMR port.  By definition\n       there are two ports per TPMR.\n\n       Discontinuities in the value of counters in this table\n       can occur at re-initialization of the management system,\n       and at other times as indicated by the value of IF-MIB\n       ifCounterDiscontinuityTime.')
ieee8021TpmrMspStatsEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1), )
ieee8021TpmrPortEntry.registerAugmentions(("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsEntry"))
ieee8021TpmrMspStatsEntry.setIndexNames(*ieee8021TpmrPortEntry.getIndexNames())
if mibBuilder.loadTexts: ieee8021TpmrMspStatsEntry.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsEntry.setDescription('A TPMR MAC status propagation statistics table entry.')
ieee8021TpmrMspStatsTxAcks = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 1), Counter32()).setUnits('MSPDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxAcks.setReference('12.19.4.1.3.3:a')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxAcks.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxAcks.setDescription("The number of acks transmitted by the port's Transmit\n      Process as a consequence of txAck being set.")
ieee8021TpmrMspStatsTxAddNotifications = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 2), Counter32()).setUnits('MSPDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxAddNotifications.setReference('12.19.4.1.3.3:b')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxAddNotifications.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxAddNotifications.setDescription("The number of adds transmitted by the port's Transmit\n       Process as a consequence of txAdd being set.")
ieee8021TpmrMspStatsTxAddConfirmations = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 3), Counter32()).setUnits('MSPDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxAddConfirmations.setReference('12.19.4.1.3.3:c')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxAddConfirmations.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxAddConfirmations.setDescription("The number of add confirms transmitted by the port's\n       Transmit Process as a consequence of txAddConfirm\n       being set.")
ieee8021TpmrMspStatsTxLossNotifications = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 4), Counter32()).setUnits('MSPDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxLossNotifications.setReference('12.19.4.1.3.3:d')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxLossNotifications.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxLossNotifications.setDescription("The number of losses transmitted by the port's Transmit\n       Process as a consequence of txLoss being set.")
ieee8021TpmrMspStatsTxLossConfirmations = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 5), Counter32()).setUnits('MSPDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxLossConfirmations.setReference('12.19.4.1.3.3:e')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxLossConfirmations.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsTxLossConfirmations.setDescription("The number of loss confirms transmitted by the port's\n       Transmit Process as a consequence of txLossConfirm\n       being set.")
ieee8021TpmrMspStatsRxAcks = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 6), Counter32()).setUnits('MSPDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxAcks.setReference('12.19.4.1.3.3:f')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxAcks.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxAcks.setDescription("The number of acks received by the port's Receive\n      Process.")
ieee8021TpmrMspStatsRxAddNotifications = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 7), Counter32()).setUnits('MSPDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxAddNotifications.setReference('12.19.4.1.3.3:g')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxAddNotifications.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxAddNotifications.setDescription("The number of adds received by the port's Receive\n       Process.")
ieee8021TpmrMspStatsRxAddConfirmations = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 8), Counter32()).setUnits('MSPDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxAddConfirmations.setReference('12.19.4.1.3.3:h')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxAddConfirmations.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxAddConfirmations.setDescription("The number of add confirms received by the port's\n       Receive Process.")
ieee8021TpmrMspStatsRxLossNotifications = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 9), Counter32()).setUnits('MSPDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxLossNotifications.setReference('12.19.4.1.3.3:i')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxLossNotifications.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxLossNotifications.setDescription("The number of losses received by the port's Receive\n       Process.")
ieee8021TpmrMspStatsRxLossConfirmations = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 10), Counter32()).setUnits('MSPDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxLossConfirmations.setReference('12.19.4.1.3.3:j')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxLossConfirmations.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsRxLossConfirmations.setDescription("The number of loss confirms received by the port's\n       Receive Process.")
ieee8021TpmrMspStatsAddEvents = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 11), Counter32()).setUnits('MSP transitions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsAddEvents.setReference('12.19.4.1.3.3:k')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsAddEvents.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsAddEvents.setDescription('The number of transitions to STM:ADD directly from\n       STM:DOWN or STM:LOSS.')
ieee8021TpmrMspStatsLossEvents = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 12), Counter32()).setUnits('MSP transitions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsLossEvents.setReference('12.19.4.1.3.3:l')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsLossEvents.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsLossEvents.setDescription('The number of transitions to STM:LOSS directly from\n       STM:UP or STM:ADD.')
ieee8021TpmrMspStatsMacStatusNotifications = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 14, 1, 5, 1, 13), Counter32()).setUnits('MSP transitions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TpmrMspStatsMacStatusNotifications.setReference('12.19.4.1.3.3:m')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsMacStatusNotifications.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsMacStatusNotifications.setDescription('The number of transitions to SNM:MAC_NOTIFICATION.')
ieee8021TpmrCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 14, 2, 1))
ieee8021TpmrGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 14, 2, 2))
ieee8021TpmrPortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 14, 2, 2, 1)).setObjects(("IEEE8021-TPMR-MIB", "ieee8021TpmrPortMgmtAddr"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrPortMgmtAddrForwarding"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021TpmrPortGroup = ieee8021TpmrPortGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortGroup.setDescription('TPMR port objects.')
ieee8021TpmrPortStatsGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 14, 2, 2, 2)).setObjects(("IEEE8021-TPMR-MIB", "ieee8021TpmrPortStatsRxFrames"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrPortStatsRxOctets"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrPortStatsFramesForwarded"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrPortStatsFramesDiscarded"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrPortStatsFramesDiscardedQueueFull"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrPortStatsFramesDiscardedLifetime"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrPortStatsFramesDiscardedError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021TpmrPortStatsGroup = ieee8021TpmrPortStatsGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortStatsGroup.setDescription('TPMR port statistics objects.')
ieee8021TpmrPortDiscardDetailsGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 14, 2, 2, 3)).setObjects(("IEEE8021-TPMR-MIB", "ieee8021TpmrPortDiscardDetailsSource"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrPortDiscardDetailsReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021TpmrPortDiscardDetailsGroup = ieee8021TpmrPortDiscardDetailsGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrPortDiscardDetailsGroup.setDescription('TPMR port discard details objects.')
ieee8021TpmrMspGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 14, 2, 2, 4)).setObjects(("IEEE8021-TPMR-MIB", "ieee8021TpmrMspLinkNotify"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspLinkNotifyWait"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspLinkNotifyRetry"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspMacNotify"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspMacNotifyTime"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspMacRecoverTime"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021TpmrMspGroup = ieee8021TpmrMspGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspGroup.setDescription('TPMR port MSP objects.')
ieee8021TpmrMspStatsGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 14, 2, 2, 5)).setObjects(("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsTxAcks"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsTxAddNotifications"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsTxAddConfirmations"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsTxLossNotifications"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsTxLossConfirmations"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsRxAcks"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsRxAddNotifications"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsRxAddConfirmations"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsRxLossNotifications"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsRxLossConfirmations"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsAddEvents"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsLossEvents"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsMacStatusNotifications"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021TpmrMspStatsGroup = ieee8021TpmrMspStatsGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrMspStatsGroup.setDescription('TPMR port MSP statistics objects.')
ieee8021TpmrCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 14, 2, 1, 1)).setObjects(("IF-MIB", "ifCounterDiscontinuityGroup"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrPortGroup"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrPortStatsGroup"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrPortDiscardDetailsGroup"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspGroup"), ("IEEE8021-TPMR-MIB", "ieee8021TpmrMspStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021TpmrCompliance = ieee8021TpmrCompliance.setStatus('current')
if mibBuilder.loadTexts: ieee8021TpmrCompliance.setDescription('The compliance statement for device support of TPMR.')
mibBuilder.exportSymbols("IEEE8021-TPMR-MIB", PYSNMP_MODULE_ID=ieee8021TpmrMib, ieee8021TpmrPortDiscardDetailsGroup=ieee8021TpmrPortDiscardDetailsGroup, ieee8021TpmrMspStatsTxAddNotifications=ieee8021TpmrMspStatsTxAddNotifications, ieee8021TpmrMspEntry=ieee8021TpmrMspEntry, ieee8021TpmrPortMgmtAddr=ieee8021TpmrPortMgmtAddr, ieee8021TpmrObjects=ieee8021TpmrObjects, ieee8021TpmrMspStatsTxAddConfirmations=ieee8021TpmrMspStatsTxAddConfirmations, ieee8021TpmrPortDiscardDetailsTable=ieee8021TpmrPortDiscardDetailsTable, ieee8021TpmrPortStatsRxFrames=ieee8021TpmrPortStatsRxFrames, ieee8021TpmrPortEntry=ieee8021TpmrPortEntry, ieee8021TpmrPortDiscardDetailsSource=ieee8021TpmrPortDiscardDetailsSource, ieee8021TpmrMspStatsTxLossNotifications=ieee8021TpmrMspStatsTxLossNotifications, ieee8021TpmrMspStatsEntry=ieee8021TpmrMspStatsEntry, ieee8021TpmrPortGroup=ieee8021TpmrPortGroup, ieee8021TpmrMspGroup=ieee8021TpmrMspGroup, ieee8021TpmrMspStorageType=ieee8021TpmrMspStorageType, ieee8021TpmrGroups=ieee8021TpmrGroups, ieee8021TpmrNotifications=ieee8021TpmrNotifications, ieee8021TpmrPortStatsGroup=ieee8021TpmrPortStatsGroup, ieee8021TpmrPortTable=ieee8021TpmrPortTable, ieee8021TpmrMspStatsRxAddNotifications=ieee8021TpmrMspStatsRxAddNotifications, ieee8021TpmrPortMgmtAddrForwarding=ieee8021TpmrPortMgmtAddrForwarding, ieee8021TpmrPortStatsFramesDiscarded=ieee8021TpmrPortStatsFramesDiscarded, ieee8021TpmrPortStatsFramesDiscardedError=ieee8021TpmrPortStatsFramesDiscardedError, ieee8021TpmrMspTable=ieee8021TpmrMspTable, ieee8021TpmrMspLinkNotifyWait=ieee8021TpmrMspLinkNotifyWait, ieee8021TpmrMspMacNotify=ieee8021TpmrMspMacNotify, ieee8021TpmrConformance=ieee8021TpmrConformance, ieee8021TpmrMspStatsLossEvents=ieee8021TpmrMspStatsLossEvents, ieee8021TpmrMspStatsAddEvents=ieee8021TpmrMspStatsAddEvents, ieee8021TpmrMspStatsMacStatusNotifications=ieee8021TpmrMspStatsMacStatusNotifications, ieee8021TpmrMspStatsRxAddConfirmations=ieee8021TpmrMspStatsRxAddConfirmations, ieee8021TpmrMspStatsTxAcks=ieee8021TpmrMspStatsTxAcks, ieee8021TpmrPortStatsFramesDiscardedQueueFull=ieee8021TpmrPortStatsFramesDiscardedQueueFull, ieee8021TpmrPortNumber=ieee8021TpmrPortNumber, ieee8021TpmrMspMacNotifyTime=ieee8021TpmrMspMacNotifyTime, ieee8021TpmrMspStatsRxAcks=ieee8021TpmrMspStatsRxAcks, ieee8021TpmrPortDiscardDetailsIndex=ieee8021TpmrPortDiscardDetailsIndex, ieee8021TpmrPortStatsFramesForwarded=ieee8021TpmrPortStatsFramesForwarded, ieee8021TpmrPortDiscardDetailsReason=ieee8021TpmrPortDiscardDetailsReason, ieee8021TpmrCompliances=ieee8021TpmrCompliances, ieee8021TpmrPortDiscardDetailsEntry=ieee8021TpmrPortDiscardDetailsEntry, IEEE8021TpmrFrameDiscardErrorReason=IEEE8021TpmrFrameDiscardErrorReason, ieee8021TpmrMib=ieee8021TpmrMib, ieee8021TpmrMspStatsTxLossConfirmations=ieee8021TpmrMspStatsTxLossConfirmations, ieee8021TpmrMspStatsRxLossConfirmations=ieee8021TpmrMspStatsRxLossConfirmations, ieee8021TpmrPortStatsFramesDiscardedLifetime=ieee8021TpmrPortStatsFramesDiscardedLifetime, ieee8021TpmrMspLinkNotifyRetry=ieee8021TpmrMspLinkNotifyRetry, ieee8021TpmrMspStatsGroup=ieee8021TpmrMspStatsGroup, ieee8021TpmrPortStatsTable=ieee8021TpmrPortStatsTable, ieee8021TpmrPortStatsEntry=ieee8021TpmrPortStatsEntry, ieee8021TpmrMspStatsRxLossNotifications=ieee8021TpmrMspStatsRxLossNotifications, ieee8021TpmrMspLinkNotify=ieee8021TpmrMspLinkNotify, ieee8021TpmrMspStatsTable=ieee8021TpmrMspStatsTable, ieee8021TpmrPortStatsRxOctets=ieee8021TpmrPortStatsRxOctets, ieee8021TpmrMspMacRecoverTime=ieee8021TpmrMspMacRecoverTime, ieee8021TpmrCompliance=ieee8021TpmrCompliance)
