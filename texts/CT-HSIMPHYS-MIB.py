#
# PySNMP MIB module CT-HSIMPHYS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CT-HSIMPHYS-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 13:31:19 2024
# On host fv-az975-559 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ctHSIMPhysMib, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctHSIMPhysMib")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, ModuleIdentity, ObjectIdentity, Unsigned32, Counter64, Counter32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, iso, Bits, NotificationType, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "Counter64", "Counter32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "iso", "Bits", "NotificationType", "TimeTicks", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hsimInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1))
hsimBoardRev = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hsimBoardRev.setStatus('mandatory')
if mibBuilder.loadTexts: hsimBoardRev.setDescription('The value of this object is the printed circuit board\n         revision level.')
hsimBoardId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hsimBoardId.setStatus('mandatory')
if mibBuilder.loadTexts: hsimBoardId.setDescription('The value of this object is the printed circuit board\n         idenitifer.')
hsimEpldRev = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hsimEpldRev.setStatus('mandatory')
if mibBuilder.loadTexts: hsimEpldRev.setDescription('The value of this object is the programmable\n         logic device revision level.')
hsimEpldId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hsimEpldId.setStatus('mandatory')
if mibBuilder.loadTexts: hsimEpldId.setDescription('The value of this object is the programmable\n         logic device identifier.')
hsimFsbRev = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hsimFsbRev.setStatus('mandatory')
if mibBuilder.loadTexts: hsimFsbRev.setDescription('The value of this object is the first stage\n         boot revision level.')
hsimSsbRev = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hsimSsbRev.setStatus('mandatory')
if mibBuilder.loadTexts: hsimSsbRev.setDescription('The value of this object is the second stage\n         boot revision level.')
hsimFwRev = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hsimFwRev.setStatus('mandatory')
if mibBuilder.loadTexts: hsimFwRev.setDescription('The value of this object is the HSIM firmware\n         revision level.')
hsimPeripheralMBusInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 8))
mBusNumberBoardsInstalled = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mBusNumberBoardsInstalled.setStatus('mandatory')
if mibBuilder.loadTexts: mBusNumberBoardsInstalled.setDescription('The value of this object is number of MBus boards\n         installed in this unit.')
mBusBoardTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 8, 2), )
if mibBuilder.loadTexts: mBusBoardTable.setStatus('mandatory')
if mibBuilder.loadTexts: mBusBoardTable.setDescription('A list of MBus boards present in this unit')
mBusBoardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 8, 2, 1), ).setIndexNames((0, "CT-HSIMPHYS-MIB", "mBusBoardID"))
if mibBuilder.loadTexts: mBusBoardEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mBusBoardEntry.setDescription('The value of this object is an MBus board that is\n         present in this unit')
mBusBoardID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 8, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mBusBoardID.setStatus('mandatory')
if mibBuilder.loadTexts: mBusBoardID.setDescription('The value of this object is an index that uniquely\n         identifies the physical MBus board within the system.')
mBusBoardEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("cmm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mBusBoardEntryType.setStatus('mandatory')
if mibBuilder.loadTexts: mBusBoardEntryType.setDescription('The value of this object identifies the type of MBus\n         board installed.')
mBusBoardOIDPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 8, 2, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mBusBoardOIDPointer.setStatus('mandatory')
if mibBuilder.loadTexts: mBusBoardOIDPointer.setDescription('The value of this object defines the start of a MIB that\n         can be used to determine more specific information about\n         the given MBus board.')
hsimPeripheralWpimInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 9))
wpimNumberBoardsInstalled = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wpimNumberBoardsInstalled.setStatus('mandatory')
if mibBuilder.loadTexts: wpimNumberBoardsInstalled.setDescription('The value of this object is number of WPIM boards\n         installed in this unit.')
wpimBoardTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 9, 2), )
if mibBuilder.loadTexts: wpimBoardTable.setStatus('mandatory')
if mibBuilder.loadTexts: wpimBoardTable.setDescription('A list of WPIM boards present in this unit')
wpimBoardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 9, 2, 1), ).setIndexNames((0, "CT-HSIMPHYS-MIB", "wpimBoardID"))
if mibBuilder.loadTexts: wpimBoardEntry.setStatus('mandatory')
if mibBuilder.loadTexts: wpimBoardEntry.setDescription('The value of this object is a WPIM board that is\n         present in this unit')
wpimBoardID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 9, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wpimBoardID.setStatus('mandatory')
if mibBuilder.loadTexts: wpimBoardID.setDescription('The value of this object is an index that uniquely\n         identifies this WPIM board.')
wpimBoardEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 9, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wpimBoardEntryType.setStatus('mandatory')
if mibBuilder.loadTexts: wpimBoardEntryType.setDescription('The value of this object identifies the type of WPIM\n         board installed.  This is within the portWpim branch\n         of the namingTree (1.3.6.1.4.1.52.3.8.1.2.5)')
wpimBoardOIDPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 9, 2, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wpimBoardOIDPointer.setStatus('mandatory')
if mibBuilder.loadTexts: wpimBoardOIDPointer.setDescription('The value of this object defines the start of a MIB that\n         can be used to determine more specific information about\n         the given WPIM board.')
hsimLocalHwDevicesInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 10))
localHwDevicesTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 10, 1), )
if mibBuilder.loadTexts: localHwDevicesTable.setStatus('mandatory')
if mibBuilder.loadTexts: localHwDevicesTable.setDescription('A list of specific hardware devices present in this unit')
localHwDevicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 10, 1, 1), ).setIndexNames((0, "CT-HSIMPHYS-MIB", "localHwDeviceID"))
if mibBuilder.loadTexts: localHwDevicesEntry.setStatus('mandatory')
if mibBuilder.loadTexts: localHwDevicesEntry.setDescription('The value of this object is a WPIM module that is\n         present in this unit')
localHwDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: localHwDeviceID.setStatus('mandatory')
if mibBuilder.loadTexts: localHwDeviceID.setDescription('The value of this object is an index that uniquely\n         identifies the assoicated local hardware device.')
localHwDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("siemensMunich32", 2), ("mitelMT8985", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: localHwDeviceType.setStatus('mandatory')
if mibBuilder.loadTexts: localHwDeviceType.setDescription('The value of this object identifies the type of local\n         hardware device.  These local hardware devices are those\n         specific ICs unique to this HSIM such as Siemens\n         Munich32, or Mitel MT8985.')
localHwDeviceOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: localHwDeviceOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: localHwDeviceOperStatus.setDescription('This object describes the current state of the device.')
localHwDeviceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 17, 1, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: localHwDeviceAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: localHwDeviceAdminStatus.setDescription('This object is used by the Network Management System to\n         request a change in the current state of the device.')
mibBuilder.exportSymbols("CT-HSIMPHYS-MIB", localHwDeviceID=localHwDeviceID, mBusBoardTable=mBusBoardTable, wpimNumberBoardsInstalled=wpimNumberBoardsInstalled, wpimBoardTable=wpimBoardTable, localHwDeviceOperStatus=localHwDeviceOperStatus, mBusBoardEntry=mBusBoardEntry, hsimInfo=hsimInfo, mBusBoardOIDPointer=mBusBoardOIDPointer, wpimBoardID=wpimBoardID, localHwDevicesEntry=localHwDevicesEntry, localHwDeviceAdminStatus=localHwDeviceAdminStatus, hsimPeripheralWpimInfo=hsimPeripheralWpimInfo, hsimEpldRev=hsimEpldRev, wpimBoardEntry=wpimBoardEntry, hsimPeripheralMBusInfo=hsimPeripheralMBusInfo, hsimFwRev=hsimFwRev, localHwDevicesTable=localHwDevicesTable, mBusBoardID=mBusBoardID, hsimEpldId=hsimEpldId, hsimSsbRev=hsimSsbRev, wpimBoardEntryType=wpimBoardEntryType, localHwDeviceType=localHwDeviceType, hsimBoardId=hsimBoardId, hsimFsbRev=hsimFsbRev, mBusNumberBoardsInstalled=mBusNumberBoardsInstalled, wpimBoardOIDPointer=wpimBoardOIDPointer, hsimLocalHwDevicesInfo=hsimLocalHwDevicesInfo, mBusBoardEntryType=mBusBoardEntryType, hsimBoardRev=hsimBoardRev)
