#
# PySNMP MIB module F3-SHG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/F3-SHG-MIB
# Produced by pysmi-1.1.12 at Tue May 28 13:32:45 2024
# On host fv-az973-743 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
fsp150cm, = mibBuilder.importSymbols("ADVA-MIB", "fsp150cm")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
neIndex, = mibBuilder.importSymbols("CM-ENTITY-MIB", "neIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ObjectIdentity, iso, ModuleIdentity, Gauge32, Integer32, Bits, Unsigned32, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, IpAddress, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "ModuleIdentity", "Gauge32", "Integer32", "Bits", "Unsigned32", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "IpAddress", "MibIdentifier", "Counter32")
StorageType, TextualConvention, RowStatus, DisplayString, VariablePointer = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TextualConvention", "RowStatus", "DisplayString", "VariablePointer")
f3SHGMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27))
f3SHGMIB.setRevisions(('2012-12-04 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: f3SHGMIB.setRevisionsDescriptions(('\n         Notes from release 201212040000Z,\n         (1) New f3ShgTable object:\n             f3ShgAlias\n\n         Notes from release 201210090000Z,\n         (1)MIB version ready for release FSP150CC 5.6CC.',))
if mibBuilder.loadTexts: f3SHGMIB.setLastUpdated('201212040000Z')
if mibBuilder.loadTexts: f3SHGMIB.setOrganization('ADVA Optical Networking')
if mibBuilder.loadTexts: f3SHGMIB.setContactInfo('        Jakub Zalewski\n                     ADVA Optical Networking, Inc.\n                Tel: +48 58 7716 411\n             E-mail: jzalewski@advaoptical.com\n             Postal: ul. Slaska 35/37\n                     81-310 Gdynia, Poland')
if mibBuilder.loadTexts: f3SHGMIB.setDescription('This module defines the Split Horizon Group MIB defitinions\n             used by the F3 (FSP150CM/CC) product lines.  \n             Copyright (C) ADVA Optical Networking.')
f3ShgConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1))
f3ShgConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 2))
f3ShgTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 1), )
if mibBuilder.loadTexts: f3ShgTable.setStatus('current')
if mibBuilder.loadTexts: f3ShgTable.setDescription('An entry containing information applicable to a particular\n           Shg Entity.')
f3ShgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 1, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SHG-MIB", "f3ShgIndex"))
if mibBuilder.loadTexts: f3ShgEntry.setStatus('current')
if mibBuilder.loadTexts: f3ShgEntry.setDescription('The conceptual row in f3ShgTable.')
f3ShgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: f3ShgIndex.setStatus('current')
if mibBuilder.loadTexts: f3ShgIndex.setDescription('This is the unique index for a Split Horizon Group within Network Element.')
f3ShgAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3ShgAlias.setStatus('current')
if mibBuilder.loadTexts: f3ShgAlias.setDescription('This object allows SNMP management entities to provide an \n          alias to the Split Horizon Group.')
f3ShgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 1, 1, 3), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3ShgStorageType.setStatus('current')
if mibBuilder.loadTexts: f3ShgStorageType.setDescription('The storage type for this conceptual row.')
f3ShgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3ShgRowStatus.setStatus('current')
if mibBuilder.loadTexts: f3ShgRowStatus.setDescription('The status of this row.  An entry MUST NOT exist in the \n            active state unless all objects in the entry have an \n            appropriate value, as described\n            in the description clause for each writable object.\n\n            The values of f3ShgRowStatus supported are\n            createAndGo(4) and destroy(6).  All mandatory attributes\n            must be specified in a single SNMP SET request with\n            f3ShgRowStatus value as createAndGo(4).\n            Upon successful row creation, this object has a\n            value of active(1).\n\n            The f3ShgRowStatus object may be modified if\n            the associated instance of this object is equal to active(1).')
f3ShgMemberPortTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 2), )
if mibBuilder.loadTexts: f3ShgMemberPortTable.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberPortTable.setDescription('A list of entries corresponding to Ports which are members of\n             Split Horizon Group instance.')
f3ShgMemberPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SHG-MIB", "f3ShgIndex"), (0, "F3-SHG-MIB", "f3ShgMemberPort"))
if mibBuilder.loadTexts: f3ShgMemberPortEntry.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberPortEntry.setDescription('A conceptual row in the f3ShgMemberPortTable.')
f3ShgMemberPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 2, 1, 1), VariablePointer())
if mibBuilder.loadTexts: f3ShgMemberPort.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberPort.setDescription('Pointer to a Port instance which is a member of a SHG instance.\n          The pointer must be set to cmEthernetAccPortIndex instance if the SHG \n          Port is an Access Port or to cmEthernetNetPortIndex if the SHG Port \n          is a Network Port.')
f3ShgMemberPortStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 2, 1, 2), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3ShgMemberPortStorageType.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberPortStorageType.setDescription('The storage type for this conceptual row.')
f3ShgMemberPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3ShgMemberPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberPortRowStatus.setDescription('The status of this row.  An entry MUST NOT exist in the \n            active state unless all objects in the entry have an \n            appropriate value, as described\n            in the description clause for each writable object.\n\n            The values of f3ShgMemberRowStatus supported are\n            createAndGo(4) and destroy(6).  All mandatory attributes\n            must be specified in a single SNMP SET request with\n            f3ShgMemberRowStatus value as createAndGo(4).\n            Upon successful row creation, this object has a\n            value of active(1).\n\n            The f3ShgMemberRowStatus object may be modified if\n            the associated instance of this object is equal to active(1).')
f3ShgMemberFlowTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 3), )
if mibBuilder.loadTexts: f3ShgMemberFlowTable.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberFlowTable.setDescription('A list of entries corresponding to Flows which are members of\n             Split Horizon Group instance.')
f3ShgMemberFlowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SHG-MIB", "f3ShgIndex"), (0, "F3-SHG-MIB", "f3ShgMemberFlow"))
if mibBuilder.loadTexts: f3ShgMemberFlowEntry.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberFlowEntry.setDescription('A conceptual row in the f3ShgMemberFlowTable.')
f3ShgMemberFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 3, 1, 1), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3ShgMemberFlow.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberFlow.setDescription('Pointer to a Flow instance which is a member of a SHG instance.\n          The pointer must be set to cmFlowIndex instance.')
f3ShgMemberFlowPointTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 4), )
if mibBuilder.loadTexts: f3ShgMemberFlowPointTable.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberFlowPointTable.setDescription('A list of entries corresponding to Flow Points which are members of\n             Split Horizon Group instance.')
f3ShgMemberFlowPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 4, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SHG-MIB", "f3ShgIndex"), (0, "F3-SHG-MIB", "f3ShgMemberFlowPoint"))
if mibBuilder.loadTexts: f3ShgMemberFlowPointEntry.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberFlowPointEntry.setDescription('A conceptual row in the f3ShgMemberFlowPointTable.')
f3ShgMemberFlowPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 1, 4, 1, 1), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3ShgMemberFlowPoint.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberFlowPoint.setDescription('Pointer to a Flow instance which is a member of a SHG instance.\n          The pointer must be set to cmFlowPointIndex/f3AccFlowPointAlias/f3NetFlowPointAlias instance.')
f3ShgCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 2, 1))
f3ShgGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 2, 2))
f3ShgCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 2, 1, 1)).setObjects(("F3-SHG-MIB", "f3ShgGroup"), ("F3-SHG-MIB", "f3ShgMemberPortGroup"), ("F3-SHG-MIB", "f3ShgMemberFlowGroup"), ("F3-SHG-MIB", "f3ShgMemberFlowPointGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3ShgCompliance = f3ShgCompliance.setStatus('current')
if mibBuilder.loadTexts: f3ShgCompliance.setDescription('Describes the requirements for conformance to the F3-SHG-MIB compliance.')
f3ShgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 2, 2, 1)).setObjects(("F3-SHG-MIB", "f3ShgAlias"), ("F3-SHG-MIB", "f3ShgStorageType"), ("F3-SHG-MIB", "f3ShgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3ShgGroup = f3ShgGroup.setStatus('current')
if mibBuilder.loadTexts: f3ShgGroup.setDescription('A collection of objects used to manage the Split Horizon Group.')
f3ShgMemberPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 2, 2, 2)).setObjects(("F3-SHG-MIB", "f3ShgMemberPortStorageType"), ("F3-SHG-MIB", "f3ShgMemberPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3ShgMemberPortGroup = f3ShgMemberPortGroup.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberPortGroup.setDescription('A collection of objects used to manage the Split Horizon Group Members.')
f3ShgMemberFlowGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 2, 2, 3)).setObjects(("F3-SHG-MIB", "f3ShgMemberFlow"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3ShgMemberFlowGroup = f3ShgMemberFlowGroup.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberFlowGroup.setDescription('A collection of objects used to manage the Split Horizon Group Flow \n              Members.')
f3ShgMemberFlowPointGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 27, 2, 2, 4)).setObjects(("F3-SHG-MIB", "f3ShgMemberFlowPoint"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3ShgMemberFlowPointGroup = f3ShgMemberFlowPointGroup.setStatus('current')
if mibBuilder.loadTexts: f3ShgMemberFlowPointGroup.setDescription('A collection of objects used to manage the Split Horizon Group Flow \n              Points.')
mibBuilder.exportSymbols("F3-SHG-MIB", f3ShgMemberPortStorageType=f3ShgMemberPortStorageType, f3ShgRowStatus=f3ShgRowStatus, f3ShgMemberFlowEntry=f3ShgMemberFlowEntry, f3ShgMemberFlowGroup=f3ShgMemberFlowGroup, f3ShgMemberFlow=f3ShgMemberFlow, f3ShgStorageType=f3ShgStorageType, f3ShgMemberPort=f3ShgMemberPort, f3ShgMemberFlowTable=f3ShgMemberFlowTable, f3ShgCompliances=f3ShgCompliances, f3ShgMemberPortRowStatus=f3ShgMemberPortRowStatus, PYSNMP_MODULE_ID=f3SHGMIB, f3ShgMemberFlowPointGroup=f3ShgMemberFlowPointGroup, f3ShgCompliance=f3ShgCompliance, f3ShgMemberFlowPointTable=f3ShgMemberFlowPointTable, f3ShgMemberPortGroup=f3ShgMemberPortGroup, f3ShgConfigObjects=f3ShgConfigObjects, f3ShgGroup=f3ShgGroup, f3SHGMIB=f3SHGMIB, f3ShgEntry=f3ShgEntry, f3ShgIndex=f3ShgIndex, f3ShgMemberPortTable=f3ShgMemberPortTable, f3ShgTable=f3ShgTable, f3ShgConformance=f3ShgConformance, f3ShgGroups=f3ShgGroups, f3ShgMemberPortEntry=f3ShgMemberPortEntry, f3ShgMemberFlowPointEntry=f3ShgMemberFlowPointEntry, f3ShgMemberFlowPoint=f3ShgMemberFlowPoint, f3ShgAlias=f3ShgAlias)
