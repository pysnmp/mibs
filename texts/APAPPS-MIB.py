#
# PySNMP MIB module APAPPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/oracle/APAPPS-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 16:04:07 2024
# On host fv-az1245-338 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
acmepacketMgmt, = mibBuilder.importSymbols("ACMEPACKET-SMI", "acmepacketMgmt")
ApHardwareModuleFamily, ApAclType, ApPhyPortType, ApCommMonitorState, ApServerStatus, ApPresence, ApRedundancyState = mibBuilder.importSymbols("ACMEPACKET-TC", "ApHardwareModuleFamily", "ApAclType", "ApPhyPortType", "ApCommMonitorState", "ApServerStatus", "ApPresence", "ApRedundancyState")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter64, Gauge32, Integer32, Bits, ObjectIdentity, IpAddress, TimeTicks, NotificationType, ModuleIdentity, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter64", "Gauge32", "Integer32", "Bits", "ObjectIdentity", "IpAddress", "TimeTicks", "NotificationType", "ModuleIdentity", "Counter32", "Unsigned32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
apAppsModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9148, 3, 16))
apAppsModule.setRevisions(('2012-03-07 00:00', '2014-06-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: apAppsModule.setRevisionsDescriptions(('Initial version.', 'Updated Organization and Contact info.',))
if mibBuilder.loadTexts: apAppsModule.setLastUpdated('201406260000Z')
if mibBuilder.loadTexts: apAppsModule.setOrganization('Oracle Communications')
if mibBuilder.loadTexts: apAppsModule.setContactInfo('           \tCustomer Service\n\t\t \tPostal:\t\tOracle Communications\n\t\t\t\t\t100 Crosby Drive \n\t\t\t\t\tBedford, MA 01730\n\t\t\t\t\tUS\n\t\t    \tTel:\t\t1-800-633-0738\n\t\t\tUrl:\t\twww.oracle.com\n\t\t \tE-mail:\t\tsupport@oracle.com')
if mibBuilder.loadTexts: apAppsModule.setDescription('APPS MIB for Oracle Communications Acme Packet SBCs')
apAppsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1))
apAppsMIBGeneralObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 1))
apAppsMIBTabularObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2))
apAppsENUMTabularObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1))
apAppsDNSTabularObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 2))
apAppsNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2))
apAppsNotifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 1))
apAppsNotifPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2))
apAppsEnumNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 1))
apAppsEnumNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 1, 0))
apAppsDnsNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 2))
apAppsDnsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 2, 0))
apAppsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3))
apAppsObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3, 1))
apAppsNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3, 2))
apAppsAclObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 4))
apAppsENUMServerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 1), )
if mibBuilder.loadTexts: apAppsENUMServerStatusTable.setStatus('current')
if mibBuilder.loadTexts: apAppsENUMServerStatusTable.setDescription('A read-only table to hold the status of configured ENUM servers,\n            indexed by the name of the enum server, server address type and server IP.\n\n\t    Please note this table is the replacement of apENUMServerStatusTable\n\t    defined in ap-smgmt.mib, where the table was obsoleted.')
apAppsENUMServerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 1, 1), ).setIndexNames((0, "APAPPS-MIB", "apAppsENUMConfigName"), (0, "APAPPS-MIB", "apAppsENUMServerInetAddressType"), (0, "APAPPS-MIB", "apAppsENUMServerInetAddress"))
if mibBuilder.loadTexts: apAppsENUMServerStatusEntry.setStatus('current')
if mibBuilder.loadTexts: apAppsENUMServerStatusEntry.setDescription('An entry designed to hold the status of a single ENUM server')
apAppsENUMConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAppsENUMConfigName.setStatus('current')
if mibBuilder.loadTexts: apAppsENUMConfigName.setDescription('The name of the enum-config element that contains this \n\t    ENUM server.')
apAppsENUMServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAppsENUMServerInetAddressType.setStatus('current')
if mibBuilder.loadTexts: apAppsENUMServerInetAddressType.setDescription('The IP address of this ENUM server.')
apAppsENUMServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAppsENUMServerInetAddress.setStatus('current')
if mibBuilder.loadTexts: apAppsENUMServerInetAddress.setDescription('The IP address of this ENUM server.')
apAppsENUMServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 1, 1, 4), ApServerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAppsENUMServerStatus.setStatus('current')
if mibBuilder.loadTexts: apAppsENUMServerStatus.setDescription('The status of this ENUM server.')
apAppsDnsServerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 2, 1), )
if mibBuilder.loadTexts: apAppsDnsServerStatusTable.setStatus('current')
if mibBuilder.loadTexts: apAppsDnsServerStatusTable.setDescription('A read-only table to hold the status of configured dns servers\n            indexed by dns interface name and ip address of the dns server.')
apAppsDnsServerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 2, 1, 1), ).setIndexNames((0, "APAPPS-MIB", "apAppsDnsInterfaceName"), (0, "APAPPS-MIB", "apAppsDnsServerInetAddressType"), (0, "APAPPS-MIB", "apAppsDnsServerInetAddress"))
if mibBuilder.loadTexts: apAppsDnsServerStatusEntry.setStatus('current')
if mibBuilder.loadTexts: apAppsDnsServerStatusEntry.setDescription('An entry designed to hold the status of a single dns server')
apAppsDnsInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAppsDnsInterfaceName.setStatus('current')
if mibBuilder.loadTexts: apAppsDnsInterfaceName.setDescription('The name of the dns interface that contains this\n            dns server.')
apAppsDnsServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 2, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAppsDnsServerInetAddressType.setStatus('current')
if mibBuilder.loadTexts: apAppsDnsServerInetAddressType.setDescription('The Inet address type of this dns server.')
apAppsDnsServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 2, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAppsDnsServerInetAddress.setStatus('current')
if mibBuilder.loadTexts: apAppsDnsServerInetAddress.setDescription('The IP address of this dns server.')
apAppsDnsServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 2, 1, 1, 4), ApServerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apAppsDnsServerStatus.setStatus('current')
if mibBuilder.loadTexts: apAppsDnsServerStatus.setDescription('The status of this dns server.')
apEnumServerRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 2), )
if mibBuilder.loadTexts: apEnumServerRateStatsTable.setStatus('current')
if mibBuilder.loadTexts: apEnumServerRateStatsTable.setDescription('Enum message rate stats.')
apEnumServerRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 2, 1), )
apAppsENUMServerStatusEntry.registerAugmentions(("APAPPS-MIB", "apEnumServerRateStatsEntry"))
apEnumServerRateStatsEntry.setIndexNames(*apAppsENUMServerStatusEntry.getIndexNames())
if mibBuilder.loadTexts: apEnumServerRateStatsEntry.setStatus('current')
if mibBuilder.loadTexts: apEnumServerRateStatsEntry.setDescription('Enum server message rate statistics.')
apEnumServerRateMsgRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 2, 1, 5), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apEnumServerRateMsgRcvd.setStatus('current')
if mibBuilder.loadTexts: apEnumServerRateMsgRcvd.setDescription('The rate of messages received.')
apEnumServerRateMsgSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 2, 1, 6), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apEnumServerRateMsgSent.setStatus('current')
if mibBuilder.loadTexts: apEnumServerRateMsgSent.setDescription('The rate of messages sent.')
apEnumServerRateReqRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 2, 1, 7), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apEnumServerRateReqRcvd.setStatus('current')
if mibBuilder.loadTexts: apEnumServerRateReqRcvd.setDescription('The rate of request messages received.')
apEnumServerRateReqSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 2, 1, 8), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apEnumServerRateReqSent.setStatus('current')
if mibBuilder.loadTexts: apEnumServerRateReqSent.setDescription('The rate of request messages sent.')
apEnumServerRateRspRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 2, 1, 9), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apEnumServerRateRspRcvd.setStatus('current')
if mibBuilder.loadTexts: apEnumServerRateRspRcvd.setDescription('The rate of response messages received.')
apEnumServerRateRspSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 1, 2, 1, 10), Gauge32()).setUnits('messages per 10 seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: apEnumServerRateRspSent.setStatus('current')
if mibBuilder.loadTexts: apEnumServerRateRspSent.setDescription('The rate of response messages sent.')
apAppsENUMServerStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 1, 0, 1)).setObjects(("APAPPS-MIB", "apAppsENUMConfigName"), ("APAPPS-MIB", "apAppsENUMServerInetAddressType"), ("APAPPS-MIB", "apAppsENUMServerInetAddress"), ("APAPPS-MIB", "apAppsENUMServerStatus"))
if mibBuilder.loadTexts: apAppsENUMServerStatusChangeTrap.setStatus('current')
if mibBuilder.loadTexts: apAppsENUMServerStatusChangeTrap.setDescription(' The trap will be generated if the reachability status of an ENUM\n        server changes.')
apAppsDnsServerStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 2, 0, 1)).setObjects(("APAPPS-MIB", "apAppsDnsInterfaceName"), ("APAPPS-MIB", "apAppsDnsServerInetAddressType"), ("APAPPS-MIB", "apAppsDnsServerInetAddress"), ("APAPPS-MIB", "apAppsDnsServerStatus"))
if mibBuilder.loadTexts: apAppsDnsServerStatusChangeTrap.setStatus('current')
if mibBuilder.loadTexts: apAppsDnsServerStatusChangeTrap.setDescription(' The trap will be generated if the reachability status of a dns\n        server changes.')
apAppsENUMServerStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3, 1, 1)).setObjects(("APAPPS-MIB", "apAppsENUMConfigName"), ("APAPPS-MIB", "apAppsENUMServerInetAddressType"), ("APAPPS-MIB", "apAppsENUMServerInetAddress"), ("APAPPS-MIB", "apAppsENUMServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apAppsENUMServerStatusGroup = apAppsENUMServerStatusGroup.setStatus('current')
if mibBuilder.loadTexts: apAppsENUMServerStatusGroup.setDescription('Report the status of configured ENUM servers.')
apAppsDnsServerStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3, 1, 2)).setObjects(("APAPPS-MIB", "apAppsDnsInterfaceName"), ("APAPPS-MIB", "apAppsDnsServerInetAddressType"), ("APAPPS-MIB", "apAppsDnsServerInetAddress"), ("APAPPS-MIB", "apAppsDnsServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apAppsDnsServerStatusGroup = apAppsDnsServerStatusGroup.setStatus('current')
if mibBuilder.loadTexts: apAppsDnsServerStatusGroup.setDescription('Report the status of configured DNS servers.')
apAppsENUMServerRateStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3, 1, 3)).setObjects(("APAPPS-MIB", "apEnumServerRateMsgRcvd"), ("APAPPS-MIB", "apEnumServerRateMsgSent"), ("APAPPS-MIB", "apEnumServerRateReqRcvd"), ("APAPPS-MIB", "apEnumServerRateReqSent"), ("APAPPS-MIB", "apEnumServerRateRspRcvd"), ("APAPPS-MIB", "apEnumServerRateRspSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apAppsENUMServerRateStatsGroup = apAppsENUMServerRateStatsGroup.setStatus('current')
if mibBuilder.loadTexts: apAppsENUMServerRateStatsGroup.setDescription('Report the status of configured ENUM servers.')
apAppsEnumServerNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3, 2, 1)).setObjects(("APAPPS-MIB", "apAppsENUMServerStatusChangeTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apAppsEnumServerNotificationsGroup = apAppsEnumServerNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: apAppsEnumServerNotificationsGroup.setDescription('A collection of traps to extend reporting capabilities.')
apAppsDnsServerNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3, 2, 2)).setObjects(("APAPPS-MIB", "apAppsDnsServerStatusChangeTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apAppsDnsServerNotificationsGroup = apAppsDnsServerNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: apAppsDnsServerNotificationsGroup.setDescription('A collection of traps to extend reporting capabilities.')
apAppsCommMonitorObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 3))
apCommMonitorStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 3, 1), )
if mibBuilder.loadTexts: apCommMonitorStatsTable.setStatus('current')
if mibBuilder.loadTexts: apCommMonitorStatsTable.setDescription('A table to hold the infomation of commMonitors.')
apCommMonitorStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 3, 1, 1), ).setIndexNames((0, "APAPPS-MIB", "apCommMonitorInetAddressType"), (0, "APAPPS-MIB", "apCommMonitorInetAddress"))
if mibBuilder.loadTexts: apCommMonitorStatsEntry.setStatus('current')
if mibBuilder.loadTexts: apCommMonitorStatsEntry.setDescription('An entry designed to hold the infomation of commMonitor.')
apCommMonitorInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 3, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: apCommMonitorInetAddressType.setStatus('current')
if mibBuilder.loadTexts: apCommMonitorInetAddressType.setDescription('The IPAddress type of a CommMonitor.')
apCommMonitorInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 3, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: apCommMonitorInetAddress.setStatus('current')
if mibBuilder.loadTexts: apCommMonitorInetAddress.setDescription('The IPAddress type of a CommMonitor.')
apCommMonitorState = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 16, 1, 2, 3, 1, 1, 3), ApCommMonitorState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apCommMonitorState.setStatus('current')
if mibBuilder.loadTexts: apCommMonitorState.setDescription('The state of a CommMonitor.')
apCommMonitorNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 3))
apCommMonitorNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 3, 0))
apMonitorCollectorDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 3, 0, 1)).setObjects(("APAPPS-MIB", "apCommMonitorState"))
if mibBuilder.loadTexts: apMonitorCollectorDownTrap.setStatus('current')
if mibBuilder.loadTexts: apMonitorCollectorDownTrap.setDescription('The trap will be generated when there is a disconnect \n                between a SBC and a CommMonitor.')
apMonitorCollectorClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 3, 0, 2)).setObjects(("APAPPS-MIB", "apCommMonitorState"))
if mibBuilder.loadTexts: apMonitorCollectorClearTrap.setStatus('current')
if mibBuilder.loadTexts: apMonitorCollectorClearTrap.setDescription('The trap will be generated when SBC reconnects with the \n                CommMonitor and resumes normal operation.')
apCommMonitorNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3, 2, 3))
apCommMonitorNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3, 2, 3, 1)).setObjects(("APAPPS-MIB", "apMonitorCollectorDownTrap"), ("APAPPS-MIB", "apMonitorCollectorClearTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apCommMonitorNotificationsGroup = apCommMonitorNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: apCommMonitorNotificationsGroup.setDescription('Traps to monitor  SBC - CommMonitor connection.')
apAclDropObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 4, 1))
apAclDropType = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 16, 4, 1, 1), ApAclType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apAclDropType.setStatus('current')
if mibBuilder.loadTexts: apAclDropType.setDescription('ACL drop type.')
apAclDropCount = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 16, 4, 1, 2), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apAclDropCount.setStatus('current')
if mibBuilder.loadTexts: apAclDropCount.setDescription('ACL drop count within monitor time window.')
apAclDropRatio = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 16, 4, 1, 3), Gauge32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apAclDropRatio.setStatus('current')
if mibBuilder.loadTexts: apAclDropRatio.setDescription('ACL drop ratio as permillage of current time window. Valid range 0-1000')
apAppsAclNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 4))
apAppsAclNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 4, 0))
apAclDropOverThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 4, 0, 1)).setObjects(("APAPPS-MIB", "apAclDropType"), ("APAPPS-MIB", "apAclDropCount"), ("APAPPS-MIB", "apAclDropRatio"))
if mibBuilder.loadTexts: apAclDropOverThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: apAclDropOverThresholdTrap.setDescription('The trap will be generated when acl drop ratio has \n                exceeded the configured threshold.')
apAclDropOverThresholdClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 16, 2, 2, 4, 0, 2)).setObjects(("APAPPS-MIB", "apAclDropType"), ("APAPPS-MIB", "apAclDropCount"), ("APAPPS-MIB", "apAclDropRatio"))
if mibBuilder.loadTexts: apAclDropOverThresholdClearTrap.setStatus('current')
if mibBuilder.loadTexts: apAclDropOverThresholdClearTrap.setDescription('The trap will be generated when acl drop ratio has \n                gone below the configured threshold.')
apAclNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3, 2, 4))
apAclDropNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 16, 3, 2, 4, 1)).setObjects(("APAPPS-MIB", "apAclDropOverThresholdTrap"), ("APAPPS-MIB", "apAclDropOverThresholdClearTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apAclDropNotificationsGroup = apAclDropNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: apAclDropNotificationsGroup.setDescription('Traps to monitor acl drops.')
mibBuilder.exportSymbols("APAPPS-MIB", apAppsCommMonitorObjects=apAppsCommMonitorObjects, apAppsDnsNotif=apAppsDnsNotif, apEnumServerRateStatsEntry=apEnumServerRateStatsEntry, apAppsDnsServerNotificationsGroup=apAppsDnsServerNotificationsGroup, apEnumServerRateReqRcvd=apEnumServerRateReqRcvd, apAppsENUMServerStatusChangeTrap=apAppsENUMServerStatusChangeTrap, apAclDropObjects=apAclDropObjects, apAppsAclObjects=apAppsAclObjects, apCommMonitorNotificationsGroup=apCommMonitorNotificationsGroup, apAppsDnsServerInetAddressType=apAppsDnsServerInetAddressType, apAppsENUMServerInetAddressType=apAppsENUMServerInetAddressType, apAppsAclNotifications=apAppsAclNotifications, apAppsNotifPrefix=apAppsNotifPrefix, apAppsModule=apAppsModule, apEnumServerRateMsgRcvd=apEnumServerRateMsgRcvd, apAppsENUMConfigName=apAppsENUMConfigName, apAppsENUMTabularObjects=apAppsENUMTabularObjects, apAppsENUMServerStatusEntry=apAppsENUMServerStatusEntry, apAclDropNotificationsGroup=apAclDropNotificationsGroup, apAppsDNSTabularObjects=apAppsDNSTabularObjects, apAppsEnumNotif=apAppsEnumNotif, apAppsENUMServerStatusTable=apAppsENUMServerStatusTable, apAppsNotifObjects=apAppsNotifObjects, apAppsENUMServerStatusGroup=apAppsENUMServerStatusGroup, apCommMonitorInetAddressType=apCommMonitorInetAddressType, apAppsMIBObjects=apAppsMIBObjects, apEnumServerRateRspSent=apEnumServerRateRspSent, apCommMonitorNotifications=apCommMonitorNotifications, apAppsAclNotif=apAppsAclNotif, apCommMonitorInetAddress=apCommMonitorInetAddress, apMonitorCollectorClearTrap=apMonitorCollectorClearTrap, apAppsNotificationGroups=apAppsNotificationGroups, apAppsDnsServerStatus=apAppsDnsServerStatus, apCommMonitorNotif=apCommMonitorNotif, apMonitorCollectorDownTrap=apMonitorCollectorDownTrap, PYSNMP_MODULE_ID=apAppsModule, apAppsMIBTabularObjects=apAppsMIBTabularObjects, apAclDropOverThresholdTrap=apAclDropOverThresholdTrap, apAclDropRatio=apAclDropRatio, apAppsDnsServerInetAddress=apAppsDnsServerInetAddress, apAppsENUMServerRateStatsGroup=apAppsENUMServerRateStatsGroup, apAppsEnumServerNotificationsGroup=apAppsEnumServerNotificationsGroup, apCommMonitorStatsTable=apCommMonitorStatsTable, apCommMonitorStatsEntry=apCommMonitorStatsEntry, apEnumServerRateRspRcvd=apEnumServerRateRspRcvd, apAclDropCount=apAclDropCount, apAclDropType=apAclDropType, apAppsObjectGroups=apAppsObjectGroups, apAclDropOverThresholdClearTrap=apAclDropOverThresholdClearTrap, apEnumServerRateStatsTable=apEnumServerRateStatsTable, apAppsENUMServerStatus=apAppsENUMServerStatus, apCommMonitorState=apCommMonitorState, apAclNotificationGroups=apAclNotificationGroups, apAppsDnsServerStatusTable=apAppsDnsServerStatusTable, apAppsDnsNotifications=apAppsDnsNotifications, apCommMonitorNotificationGroups=apCommMonitorNotificationGroups, apEnumServerRateMsgSent=apEnumServerRateMsgSent, apAppsDnsServerStatusChangeTrap=apAppsDnsServerStatusChangeTrap, apAppsDnsServerStatusGroup=apAppsDnsServerStatusGroup, apAppsMIBGeneralObjects=apAppsMIBGeneralObjects, apAppsNotificationObjects=apAppsNotificationObjects, apAppsEnumNotifications=apAppsEnumNotifications, apAppsConformance=apAppsConformance, apAppsDnsServerStatusEntry=apAppsDnsServerStatusEntry, apAppsDnsInterfaceName=apAppsDnsInterfaceName, apEnumServerRateReqSent=apEnumServerRateReqSent, apAppsENUMServerInetAddress=apAppsENUMServerInetAddress)
