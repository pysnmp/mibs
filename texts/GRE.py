#
# PySNMP MIB module GRE (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/peplink/GRE
# Produced by pysmi-1.1.12 at Thu Sep 26 02:17:35 2024
# On host fv-az1144-917 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, enterprises, Unsigned32, Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, MibIdentifier, Counter32, Gauge32, iso, ObjectIdentity, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "enterprises", "Unsigned32", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "MibIdentifier", "Counter32", "Gauge32", "iso", "ObjectIdentity", "Integer32", "ModuleIdentity")
TextualConvention, TruthValue, MacAddress, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "MacAddress", "DisplayString", "RowStatus")
peplink = MibIdentifier((1, 3, 6, 1, 4, 1, 23695))
productMib = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200))
generalMib = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1))
greMib = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11))
greInfo = ModuleIdentity((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1))
if mibBuilder.loadTexts: greInfo.setLastUpdated('201502110000Z')
if mibBuilder.loadTexts: greInfo.setOrganization('PEPLINK')
if mibBuilder.loadTexts: greInfo.setContactInfo('')
if mibBuilder.loadTexts: greInfo.setDescription('MIB module for GRE.')
greStatusTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 1), )
if mibBuilder.loadTexts: greStatusTable.setStatus('current')
if mibBuilder.loadTexts: greStatusTable.setDescription('GRE status table')
greStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 1, 1), ).setIndexNames((0, "GRE", "greStatusId"))
if mibBuilder.loadTexts: greStatusEntry.setStatus('current')
if mibBuilder.loadTexts: greStatusEntry.setDescription('An entry in the greStatusTable')
greStatusId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusId.setStatus('current')
if mibBuilder.loadTexts: greStatusId.setDescription('GRE ID.')
greStatusProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusProfileName.setStatus('current')
if mibBuilder.loadTexts: greStatusProfileName.setDescription('GRE profile name.')
greStatusConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disconnected", 0), ("connected", 1), ("connecting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusConnectionState.setStatus('current')
if mibBuilder.loadTexts: greStatusConnectionState.setDescription('GRE connection state.')
greStatusLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusLocalIpAddress.setStatus('current')
if mibBuilder.loadTexts: greStatusLocalIpAddress.setDescription('GRE local IP.')
greStatusRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusRemoteIpAddress.setStatus('current')
if mibBuilder.loadTexts: greStatusRemoteIpAddress.setDescription('GRE remote IP.')
greStatusTunnelLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusTunnelLocalIpAddress.setStatus('current')
if mibBuilder.loadTexts: greStatusTunnelLocalIpAddress.setDescription('GRE tunnel local IP.')
greStatusTunnelRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusTunnelRemoteIpAddress.setStatus('current')
if mibBuilder.loadTexts: greStatusTunnelRemoteIpAddress.setDescription('GRE tunnel remote IP.')
greStatusRemoteNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 2), )
if mibBuilder.loadTexts: greStatusRemoteNetworkTable.setStatus('current')
if mibBuilder.loadTexts: greStatusRemoteNetworkTable.setDescription('GRE status remote network table')
greStatusRemoteNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 2, 1), ).setIndexNames((0, "GRE", "greStatusId"), (0, "GRE", "greStatusRemoteNetworkId"))
if mibBuilder.loadTexts: greStatusRemoteNetworkEntry.setStatus('current')
if mibBuilder.loadTexts: greStatusRemoteNetworkEntry.setDescription('An entry in the greStatusRemoteNetworkTable')
greStatusRemoteNetworkId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusRemoteNetworkId.setStatus('current')
if mibBuilder.loadTexts: greStatusRemoteNetworkId.setDescription('GRE remote network ID.')
greStatusRemoteNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusRemoteNetwork.setStatus('current')
if mibBuilder.loadTexts: greStatusRemoteNetwork.setDescription('GRE remote network IP.')
greStatusRemoteSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 11, 1, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greStatusRemoteSubnet.setStatus('current')
if mibBuilder.loadTexts: greStatusRemoteSubnet.setDescription('GRE remote network subnet.')
mibBuilder.exportSymbols("GRE", greStatusId=greStatusId, greStatusRemoteSubnet=greStatusRemoteSubnet, greStatusLocalIpAddress=greStatusLocalIpAddress, PYSNMP_MODULE_ID=greInfo, greStatusProfileName=greStatusProfileName, greStatusTunnelLocalIpAddress=greStatusTunnelLocalIpAddress, greStatusRemoteIpAddress=greStatusRemoteIpAddress, greStatusConnectionState=greStatusConnectionState, greStatusEntry=greStatusEntry, greMib=greMib, greStatusRemoteNetworkEntry=greStatusRemoteNetworkEntry, productMib=productMib, greInfo=greInfo, greStatusRemoteNetworkTable=greStatusRemoteNetworkTable, greStatusRemoteNetworkId=greStatusRemoteNetworkId, generalMib=generalMib, greStatusTable=greStatusTable, peplink=peplink, greStatusTunnelRemoteIpAddress=greStatusTunnelRemoteIpAddress, greStatusRemoteNetwork=greStatusRemoteNetwork)
