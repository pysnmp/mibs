#
# PySNMP MIB module COLUBRIS-CDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/hpmsm/COLUBRIS-CDP-MIB.my
# Produced by pysmi-1.1.12 at Tue May 28 13:59:25 2024
# On host fv-az529-55 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
colubrisMgmtV2, = mibBuilder.importSymbols("COLUBRIS-SMI", "colubrisMgmtV2")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, Bits, ModuleIdentity, Counter64, Counter32, iso, Unsigned32, IpAddress, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "ModuleIdentity", "Counter64", "Counter32", "iso", "Unsigned32", "IpAddress", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "ObjectIdentity", "TimeTicks")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
colubrisCdpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 8744, 5, 9))
if mibBuilder.loadTexts: colubrisCdpMIB.setLastUpdated('200402200000Z')
if mibBuilder.loadTexts: colubrisCdpMIB.setOrganization('Colubris Networks, Inc.')
colubrisCdpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1))
coCdpCache = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1))
coCdpGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 2))
coCdpCacheTable = MibTable((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1, 1), )
if mibBuilder.loadTexts: coCdpCacheTable.setStatus('current')
coCdpCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1, 1, 1), ).setIndexNames((0, "COLUBRIS-CDP-MIB", "coCdpCacheDeviceIndex"))
if mibBuilder.loadTexts: coCdpCacheEntry.setStatus('current')
coCdpCacheDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coCdpCacheDeviceIndex.setStatus('current')
coCdpCacheLocalInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coCdpCacheLocalInterface.setStatus('current')
coCdpCacheAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coCdpCacheAddress.setStatus('current')
coCdpCacheDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coCdpCacheDeviceId.setStatus('current')
coCdpCacheTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coCdpCacheTimeToLive.setStatus('current')
coCdpCacheCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coCdpCacheCapabilities.setStatus('current')
coCdpCacheVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coCdpCacheVersion.setStatus('current')
coCdpCachePlatform = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coCdpCachePlatform.setStatus('current')
coCdpCachePortId = MibTableColumn((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coCdpCachePortId.setStatus('current')
coCdpGlobalMessageInterval = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 254)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coCdpGlobalMessageInterval.setStatus('current')
coCdpGlobalHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 9, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 255)).clone(180)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coCdpGlobalHoldTime.setStatus('current')
colubrisCdpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 9, 2))
colubrisCdpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 9, 2, 1))
colubrisCdpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 9, 2, 2))
colubrisCdpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 8744, 5, 9, 2, 1, 1)).setObjects(("COLUBRIS-CDP-MIB", "colubrisCdpMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisCdpMIBCompliance = colubrisCdpMIBCompliance.setStatus('current')
colubrisCdpMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 9, 2, 2, 1)).setObjects(("COLUBRIS-CDP-MIB", "coCdpCacheLocalInterface"), ("COLUBRIS-CDP-MIB", "coCdpCacheAddress"), ("COLUBRIS-CDP-MIB", "coCdpCacheDeviceId"), ("COLUBRIS-CDP-MIB", "coCdpCacheTimeToLive"), ("COLUBRIS-CDP-MIB", "coCdpCacheCapabilities"), ("COLUBRIS-CDP-MIB", "coCdpCacheVersion"), ("COLUBRIS-CDP-MIB", "coCdpCachePlatform"), ("COLUBRIS-CDP-MIB", "coCdpCachePortId"), ("COLUBRIS-CDP-MIB", "coCdpGlobalMessageInterval"), ("COLUBRIS-CDP-MIB", "coCdpGlobalHoldTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisCdpMIBGroup = colubrisCdpMIBGroup.setStatus('current')
mibBuilder.exportSymbols("COLUBRIS-CDP-MIB", coCdpCachePlatform=coCdpCachePlatform, coCdpGlobalMessageInterval=coCdpGlobalMessageInterval, coCdpCachePortId=coCdpCachePortId, coCdpCacheCapabilities=coCdpCacheCapabilities, colubrisCdpMIBConformance=colubrisCdpMIBConformance, coCdpCacheVersion=coCdpCacheVersion, coCdpCacheEntry=coCdpCacheEntry, coCdpCacheTimeToLive=coCdpCacheTimeToLive, colubrisCdpMIBObjects=colubrisCdpMIBObjects, coCdpGlobal=coCdpGlobal, coCdpGlobalHoldTime=coCdpGlobalHoldTime, coCdpCacheAddress=coCdpCacheAddress, colubrisCdpMIBGroups=colubrisCdpMIBGroups, colubrisCdpMIBCompliances=colubrisCdpMIBCompliances, colubrisCdpMIB=colubrisCdpMIB, coCdpCacheDeviceIndex=coCdpCacheDeviceIndex, colubrisCdpMIBGroup=colubrisCdpMIBGroup, colubrisCdpMIBCompliance=colubrisCdpMIBCompliance, coCdpCacheDeviceId=coCdpCacheDeviceId, coCdpCache=coCdpCache, coCdpCacheLocalInterface=coCdpCacheLocalInterface, PYSNMP_MODULE_ID=colubrisCdpMIB, coCdpCacheTable=coCdpCacheTable)
