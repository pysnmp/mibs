#
# PySNMP MIB module CMM3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/cambium/CMM3-MIB.txt
# Produced by pysmi-1.1.12 at Wed Jul  3 12:00:47 2024
# On host fv-az768-763 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
IpAddress, ObjectIdentity, TimeTicks, ModuleIdentity, Integer32, Counter32, MibIdentifier, NotificationType, Unsigned32, Gauge32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "Integer32", "Counter32", "MibIdentifier", "NotificationType", "Unsigned32", "Gauge32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
whispModules, whispCMM, whispBox = mibBuilder.importSymbols("WHISP-GLOBAL-REG-MIB", "whispModules", "whispCMM", "whispBox")
EventString, WhispLUID, WhispMACAddress = mibBuilder.importSymbols("WHISP-TCV2-MIB", "EventString", "WhispLUID", "WhispMACAddress")
cmmIIIMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 161, 19, 1, 1, 15))
if mibBuilder.loadTexts: cmmIIIMibModule.setLastUpdated('200305150000Z')
if mibBuilder.loadTexts: cmmIIIMibModule.setOrganization('Cambium Networks')
cmmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 1))
cmmSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2))
cmmConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3))
cmmStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4))
cmmGps = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5))
cmmEventLog = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 6))
cmmControls = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 7))
cmmSwitchGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 1, 1)).setObjects(("CMM3-MIB", "portNumber"), ("CMM3-MIB", "rxDropPkts"), ("CMM3-MIB", "rxOctets"), ("CMM3-MIB", "rxBroadcastPkts"), ("CMM3-MIB", "rxMulticastPkts"), ("CMM3-MIB", "rxSAChanges"), ("CMM3-MIB", "rxUndersizePkts"), ("CMM3-MIB", "rxOversizePkts"), ("CMM3-MIB", "rxFragments"), ("CMM3-MIB", "rxJabbers"), ("CMM3-MIB", "rxUnicastPkts"), ("CMM3-MIB", "rxAlignmentErrors"), ("CMM3-MIB", "rxFCSErrors"), ("CMM3-MIB", "rxGoodOctets"), ("CMM3-MIB", "rxExcessSizeDisc"), ("CMM3-MIB", "rxPausePkts"), ("CMM3-MIB", "rxSymbolErrors"), ("CMM3-MIB", "txDropPkts"), ("CMM3-MIB", "txOctets"), ("CMM3-MIB", "txBroadcastPkts"), ("CMM3-MIB", "txMulticastPkts"), ("CMM3-MIB", "txCollisions"), ("CMM3-MIB", "txUnicastPkts"), ("CMM3-MIB", "txSingleCollision"), ("CMM3-MIB", "txMultipleCollision"), ("CMM3-MIB", "txDeferredTransmit"), ("CMM3-MIB", "txLateCollision"), ("CMM3-MIB", "txExcessiveCollision"), ("CMM3-MIB", "txPausePkts"), ("CMM3-MIB", "txFrameInDisc"), ("CMM3-MIB", "pkts64Octets"), ("CMM3-MIB", "pkts65to127Octets"), ("CMM3-MIB", "pkts128to255Octets"), ("CMM3-MIB", "pkts256to511Octets"), ("CMM3-MIB", "pkts512to1023Octets"), ("CMM3-MIB", "pkts1024to1522Octets"), ("CMM3-MIB", "mirSrcPortNumber"), ("CMM3-MIB", "mirSrcRxEnable"), ("CMM3-MIB", "mirSrcTxEnable"), ("CMM3-MIB", "portMirrorEnable"), ("CMM3-MIB", "mirrorCapturePort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmmSwitchGroup = cmmSwitchGroup.setStatus('current')
cmmConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 1, 2)).setObjects(("CMM3-MIB", "gpsTimingPulse"), ("CMM3-MIB", "lan1Ip"), ("CMM3-MIB", "lan1SubnetMask"), ("CMM3-MIB", "defaultGateway"), ("CMM3-MIB", "port1PowerCtr"), ("CMM3-MIB", "port2PowerCtr"), ("CMM3-MIB", "port3PowerCtr"), ("CMM3-MIB", "port4PowerCtr"), ("CMM3-MIB", "port5PowerCtr"), ("CMM3-MIB", "port6PowerCtr"), ("CMM3-MIB", "port7PowerCtr"), ("CMM3-MIB", "port8PowerCtr"), ("CMM3-MIB", "displayOnlyAccess"), ("CMM3-MIB", "fullAccess"), ("CMM3-MIB", "displayOnlyStatus"), ("CMM3-MIB", "fullAccessStatus"), ("CMM3-MIB", "webAutoUpdate"), ("CMM3-MIB", "port1Config"), ("CMM3-MIB", "port2Config"), ("CMM3-MIB", "port3Config"), ("CMM3-MIB", "port4Config"), ("CMM3-MIB", "port5Config"), ("CMM3-MIB", "port6Config"), ("CMM3-MIB", "port7Config"), ("CMM3-MIB", "port8Config"), ("CMM3-MIB", "port1Description"), ("CMM3-MIB", "port2Description"), ("CMM3-MIB", "port3Description"), ("CMM3-MIB", "port4Description"), ("CMM3-MIB", "port5Description"), ("CMM3-MIB", "port6Description"), ("CMM3-MIB", "port7Description"), ("CMM3-MIB", "port8Description"), ("CMM3-MIB", "snmpTrap1"), ("CMM3-MIB", "snmpTrap2"), ("CMM3-MIB", "snmpTrap3"), ("CMM3-MIB", "snmpTrap4"), ("CMM3-MIB", "snmpTrap5"), ("CMM3-MIB", "snmpTrap6"), ("CMM3-MIB", "snmpTrap7"), ("CMM3-MIB", "snmpTrap8"), ("CMM3-MIB", "snmpTrap9"), ("CMM3-MIB", "snmpTrap10"), ("CMM3-MIB", "vlanTagEnable"), ("CMM3-MIB", "vlanTagId"), ("CMM3-MIB", "port1Uplink"), ("CMM3-MIB", "port2Uplink"), ("CMM3-MIB", "port3Uplink"), ("CMM3-MIB", "port4Uplink"), ("CMM3-MIB", "port5Uplink"), ("CMM3-MIB", "port6Uplink"), ("CMM3-MIB", "port7Uplink"), ("CMM3-MIB", "port8Uplink"), ("CMM3-MIB", "port1Management"), ("CMM3-MIB", "port2Management"), ("CMM3-MIB", "port3Management"), ("CMM3-MIB", "port4Management"), ("CMM3-MIB", "port5Management"), ("CMM3-MIB", "port6Management"), ("CMM3-MIB", "port7Management"), ("CMM3-MIB", "port8Management"), ("CMM3-MIB", "rebootIfRequired"), ("CMM3-MIB", "port1VlanConf"), ("CMM3-MIB", "port2VlanConf"), ("CMM3-MIB", "port3VlanConf"), ("CMM3-MIB", "port4VlanConf"), ("CMM3-MIB", "port5VlanConf"), ("CMM3-MIB", "port6VlanConf"), ("CMM3-MIB", "port7VlanConf"), ("CMM3-MIB", "port8VlanConf"), ("CMM3-MIB", "port1PwrReset"), ("CMM3-MIB", "port2PwrReset"), ("CMM3-MIB", "port3PwrReset"), ("CMM3-MIB", "port4PwrReset"), ("CMM3-MIB", "port5PwrReset"), ("CMM3-MIB", "port6PwrReset"), ("CMM3-MIB", "port7PwrReset"), ("CMM3-MIB", "port8PwrReset"), ("CMM3-MIB", "snmpReadOnly"), ("CMM3-MIB", "snmpCommunityString"), ("CMM3-MIB", "snmpAccessSubnet"), ("CMM3-MIB", "snmpAccessSubnet2"), ("CMM3-MIB", "snmpAccessSubnet3"), ("CMM3-MIB", "snmpAccessSubnet4"), ("CMM3-MIB", "snmpAccessSubnet5"), ("CMM3-MIB", "snmpAccessSubnet6"), ("CMM3-MIB", "snmpAccessSubnet7"), ("CMM3-MIB", "snmpAccessSubnet8"), ("CMM3-MIB", "snmpAccessSubnet9"), ("CMM3-MIB", "snmpAccessSubnet10"), ("CMM3-MIB", "sessionTimeout"), ("CMM3-MIB", "ipAccessFilterEnable"), ("CMM3-MIB", "allowedIPAccess1"), ("CMM3-MIB", "allowedIPAccess2"), ("CMM3-MIB", "allowedIPAccess3"), ("CMM3-MIB", "cmm3SnmpGPSSyncTrapEnable"), ("CMM3-MIB", "siteInfoViewable"), ("CMM3-MIB", "verifyGPSChecksum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmmConfigGroup = cmmConfigGroup.setStatus('current')
cmmStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 1, 3)).setObjects(("CMM3-MIB", "portIndex"), ("CMM3-MIB", "linkStatus"), ("CMM3-MIB", "linkSpeed"), ("CMM3-MIB", "duplexStatus"), ("CMM3-MIB", "powerStatus"), ("CMM3-MIB", "uplinkStatus"), ("CMM3-MIB", "managementStatus"), ("CMM3-MIB", "deviceType"), ("CMM3-MIB", "pldVersion"), ("CMM3-MIB", "softwareVersion"), ("CMM3-MIB", "systemTime"), ("CMM3-MIB", "upTime"), ("CMM3-MIB", "satellitesVisible"), ("CMM3-MIB", "satellitesTracked"), ("CMM3-MIB", "latitude"), ("CMM3-MIB", "longitude"), ("CMM3-MIB", "height"), ("CMM3-MIB", "trackingMode"), ("CMM3-MIB", "syncStatus"), ("CMM3-MIB", "macAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmmStatusGroup = cmmStatusGroup.setStatus('current')
cmmGPSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 1, 4)).setObjects(("CMM3-MIB", "gpsTrackingMode"), ("CMM3-MIB", "gpsTime"), ("CMM3-MIB", "gpsDate"), ("CMM3-MIB", "gpsSatellitesVisible"), ("CMM3-MIB", "gpsSatellitesTracked"), ("CMM3-MIB", "gpsHeight"), ("CMM3-MIB", "gpsAntennaConnection"), ("CMM3-MIB", "gpsLatitude"), ("CMM3-MIB", "gpsLongitude"), ("CMM3-MIB", "gpsInvalidMsg"), ("CMM3-MIB", "gpsRestartCount"), ("CMM3-MIB", "gpsReceiverInfo"), ("CMM3-MIB", "gpsReInitCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmmGPSGroup = cmmGPSGroup.setStatus('current')
cmmUserTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 1, 5)).setObjects(("CMM3-MIB", "entryIndex"), ("CMM3-MIB", "userLoginName"), ("CMM3-MIB", "userPswd"), ("CMM3-MIB", "accessLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmmUserTableGroup = cmmUserTableGroup.setStatus('current')
portMirrorEnable = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portMirrorEnable.setStatus('current')
mirrorCapturePort = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("port1", 1), ("port2", 2), ("port3", 3), ("port4", 4), ("port5", 5), ("port6", 6), ("port7", 7), ("port8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mirrorCapturePort.setStatus('current')
cmmSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1), )
if mibBuilder.loadTexts: cmmSwitchTable.setStatus('current')
cmmSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1), ).setIndexNames((0, "CMM3-MIB", "mirSrcPortNumber"))
if mibBuilder.loadTexts: cmmSwitchEntry.setStatus('current')
portNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portNumber.setStatus('current')
rxDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxDropPkts.setStatus('current')
rxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxOctets.setStatus('current')
rxBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxBroadcastPkts.setStatus('current')
rxMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxMulticastPkts.setStatus('current')
rxSAChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxSAChanges.setStatus('current')
rxUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxUndersizePkts.setStatus('current')
rxOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxOversizePkts.setStatus('current')
rxFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxFragments.setStatus('current')
rxJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxJabbers.setStatus('current')
rxUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxUnicastPkts.setStatus('current')
rxAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxAlignmentErrors.setStatus('current')
rxFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxFCSErrors.setStatus('current')
rxGoodOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxGoodOctets.setStatus('current')
rxExcessSizeDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxExcessSizeDisc.setStatus('current')
rxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxPausePkts.setStatus('current')
rxSymbolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxSymbolErrors.setStatus('current')
txDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txDropPkts.setStatus('current')
txOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txOctets.setStatus('current')
txBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txBroadcastPkts.setStatus('current')
txMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txMulticastPkts.setStatus('current')
txCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txCollisions.setStatus('current')
txUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txUnicastPkts.setStatus('current')
txSingleCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSingleCollision.setStatus('current')
txMultipleCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txMultipleCollision.setStatus('current')
txDeferredTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txDeferredTransmit.setStatus('current')
txLateCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txLateCollision.setStatus('current')
txExcessiveCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExcessiveCollision.setStatus('current')
txPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPausePkts.setStatus('current')
txFrameInDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txFrameInDisc.setStatus('current')
pkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts64Octets.setStatus('current')
pkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts65to127Octets.setStatus('current')
pkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts128to255Octets.setStatus('current')
pkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts256to511Octets.setStatus('current')
pkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts512to1023Octets.setStatus('current')
pkts1024to1522Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts1024to1522Octets.setStatus('current')
cmmSwitchMirrorSrcPortsTable = MibTable((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 4), )
if mibBuilder.loadTexts: cmmSwitchMirrorSrcPortsTable.setStatus('current')
cmmSwitchMirrorSrcPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 4, 1), ).setIndexNames((0, "CMM3-MIB", "mirSrcPortNumber"))
if mibBuilder.loadTexts: cmmSwitchMirrorSrcPortsEntry.setStatus('current')
mirSrcPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirSrcPortNumber.setStatus('current')
mirSrcRxEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mirSrcRxEnable.setStatus('current')
mirSrcTxEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mirSrcTxEnable.setStatus('current')
gpsTimingPulse = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("master", 1), ("slave", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gpsTimingPulse.setStatus('current')
lan1Ip = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lan1Ip.setStatus('current')
lan1SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lan1SubnetMask.setStatus('current')
defaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultGateway.setStatus('current')
port1PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1PowerCtr.setStatus('current')
port2PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2PowerCtr.setStatus('current')
port3PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3PowerCtr.setStatus('current')
port4PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4PowerCtr.setStatus('current')
port5PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5PowerCtr.setStatus('current')
port6PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6PowerCtr.setStatus('current')
port7PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7PowerCtr.setStatus('current')
port8PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8PowerCtr.setStatus('current')
displayOnlyAccess = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: displayOnlyAccess.setStatus('obsolete')
fullAccess = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fullAccess.setStatus('obsolete')
displayOnlyStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: displayOnlyStatus.setStatus('obsolete')
fullAccessStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fullAccessStatus.setStatus('obsolete')
webAutoUpdate = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 17), Integer32()).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: webAutoUpdate.setStatus('current')
port1Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1Config.setStatus('current')
port2Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2Config.setStatus('current')
port3Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3Config.setStatus('current')
port4Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4Config.setStatus('current')
port5Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5Config.setStatus('current')
port6Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6Config.setStatus('current')
port7Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7Config.setStatus('current')
port8Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8Config.setStatus('current')
port1Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1Description.setStatus('current')
port2Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2Description.setStatus('current')
port3Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3Description.setStatus('current')
port4Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4Description.setStatus('current')
port5Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5Description.setStatus('current')
port6Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6Description.setStatus('current')
port7Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7Description.setStatus('current')
port8Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 33), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8Description.setStatus('current')
snmpTrap1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 34), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap1.setStatus('current')
snmpTrap2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 35), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap2.setStatus('current')
snmpTrap3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 36), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap3.setStatus('current')
snmpTrap4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 37), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap4.setStatus('current')
snmpTrap5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 38), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap5.setStatus('current')
snmpTrap6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 39), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap6.setStatus('current')
snmpTrap7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 40), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap7.setStatus('current')
snmpTrap8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 41), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap8.setStatus('current')
snmpTrap9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 42), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap9.setStatus('current')
snmpTrap10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 43), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap10.setStatus('current')
vlanTagEnable = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanTagEnable.setStatus('current')
vlanTagId = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanTagId.setStatus('current')
port1Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1Uplink.setStatus('current')
port2Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2Uplink.setStatus('current')
port3Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3Uplink.setStatus('current')
port4Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4Uplink.setStatus('current')
port5Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5Uplink.setStatus('current')
port6Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6Uplink.setStatus('current')
port7Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7Uplink.setStatus('current')
port8Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8Uplink.setStatus('current')
rebootIfRequired = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rebootIfRequired.setStatus('current')
port1VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1VlanConf.setStatus('current')
port2VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2VlanConf.setStatus('current')
port3VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3VlanConf.setStatus('current')
port4VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4VlanConf.setStatus('current')
port5VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 59), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5VlanConf.setStatus('current')
port6VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6VlanConf.setStatus('current')
port7VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7VlanConf.setStatus('current')
port8VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8VlanConf.setStatus('current')
port1PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1PwrReset.setStatus('current')
port2PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2PwrReset.setStatus('current')
port3PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3PwrReset.setStatus('current')
port4PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4PwrReset.setStatus('current')
port5PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5PwrReset.setStatus('current')
port6PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6PwrReset.setStatus('current')
port7PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 69), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7PwrReset.setStatus('current')
port8PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8PwrReset.setStatus('current')
snmpReadOnly = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("readOnlyPermissions", 1), ("readWritePermissions", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpReadOnly.setStatus('current')
snmpCommunityString = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 72), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpCommunityString.setStatus('current')
snmpAccessSubnet = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 73), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAccessSubnet.setStatus('current')
snmpAccessSubnet2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 74), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAccessSubnet2.setStatus('current')
snmpAccessSubnet3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 75), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAccessSubnet3.setStatus('current')
snmpAccessSubnet4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 76), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAccessSubnet4.setStatus('current')
snmpAccessSubnet5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 77), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAccessSubnet5.setStatus('current')
snmpAccessSubnet6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 78), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAccessSubnet6.setStatus('current')
snmpAccessSubnet7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 79), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAccessSubnet7.setStatus('current')
snmpAccessSubnet8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 80), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAccessSubnet8.setStatus('current')
snmpAccessSubnet9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 81), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAccessSubnet9.setStatus('current')
snmpAccessSubnet10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 82), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAccessSubnet10.setStatus('current')
port1Management = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1Management.setStatus('current')
port2Management = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 84), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2Management.setStatus('current')
port3Management = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 85), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3Management.setStatus('current')
port4Management = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 86), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4Management.setStatus('current')
port5Management = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 87), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5Management.setStatus('current')
port6Management = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 88), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6Management.setStatus('current')
port7Management = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7Management.setStatus('current')
port8Management = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8Management.setStatus('current')
sessionTimeout = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 91), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionTimeout.setStatus('current')
siteInfoViewable = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 92), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteInfoViewable.setStatus('current')
ipAccessFilterEnable = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 93), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipAccessFilterEnable.setStatus('current')
allowedIPAccess1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 94), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: allowedIPAccess1.setStatus('current')
allowedIPAccess2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 95), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: allowedIPAccess2.setStatus('current')
allowedIPAccess3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 96), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: allowedIPAccess3.setStatus('current')
verifyGPSChecksum = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 97), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("doNotVerifyGPSMessageChecksum", 0), ("verifyGPSMessageChecksum", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: verifyGPSChecksum.setStatus('current')
cmm3SnmpGPSSyncTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 98), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmm3SnmpGPSSyncTrapEnable.setStatus('current')
deviceType = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceType.setStatus('current')
pldVersion = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pldVersion.setStatus('current')
softwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersion.setStatus('current')
systemTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTime.setStatus('current')
upTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upTime.setStatus('current')
satellitesVisible = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satellitesVisible.setStatus('current')
satellitesTracked = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satellitesTracked.setStatus('current')
latitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latitude.setStatus('current')
longitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: longitude.setStatus('current')
height = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: height.setStatus('current')
trackingMode = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trackingMode.setStatus('current')
syncStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syncStatus.setStatus('current')
macAddress = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macAddress.setStatus('current')
cmmPortTable = MibTable((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1), )
if mibBuilder.loadTexts: cmmPortTable.setStatus('current')
cmmPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1), ).setIndexNames((0, "CMM3-MIB", "portIndex"))
if mibBuilder.loadTexts: cmmPortEntry.setStatus('current')
portIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portIndex.setStatus('current')
linkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkStatus.setStatus('current')
linkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("hundredBaseT", 1), ("tenBaseT", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkSpeed.setStatus('current')
duplexStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("fullDuplex", 1), ("halfDuplex", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: duplexStatus.setStatus('current')
powerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatus.setStatus('current')
uplinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uplinkStatus.setStatus('current')
managementStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: managementStatus.setStatus('current')
gpsTrackingMode = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsTrackingMode.setStatus('current')
gpsTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsTime.setStatus('current')
gpsDate = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsDate.setStatus('current')
gpsSatellitesVisible = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSatellitesVisible.setStatus('current')
gpsSatellitesTracked = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSatellitesTracked.setStatus('current')
gpsHeight = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsHeight.setStatus('current')
gpsAntennaConnection = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsAntennaConnection.setStatus('current')
gpsLatitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsLatitude.setStatus('current')
gpsLongitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsLongitude.setStatus('current')
gpsInvalidMsg = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsInvalidMsg.setStatus('current')
gpsRestartCount = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsRestartCount.setStatus('current')
gpsReceiverInfo = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsReceiverInfo.setStatus('current')
gpsReInitCount = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsReInitCount.setStatus('current')
eventLog = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 6, 1), EventString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventLog.setStatus('current')
ntpLog = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 6, 2), EventString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpLog.setStatus('current')
reboot = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("reboot", 1), ("finishedReboot", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reboot.setStatus('current')
clearEventLog = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("clear", 1), ("notClear", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clearEventLog.setStatus('current')
cmmUserTable = MibTable((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 8), )
if mibBuilder.loadTexts: cmmUserTable.setStatus('current')
cmmUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 8, 1), ).setIndexNames((0, "CMM3-MIB", "entryIndex"))
if mibBuilder.loadTexts: cmmUserEntry.setStatus('current')
entryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: entryIndex.setStatus('current')
userLoginName = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userLoginName.setStatus('current')
userPswd = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userPswd.setStatus('current')
accessLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noAdmin", 0), ("guest", 1), ("installer", 2), ("administrator", 3), ("technician", 4), ("engineering", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: accessLevel.setStatus('current')
mibBuilder.exportSymbols("CMM3-MIB", cmmSwitchMirrorSrcPortsTable=cmmSwitchMirrorSrcPortsTable, port5Uplink=port5Uplink, cmmGps=cmmGps, snmpTrap6=snmpTrap6, ipAccessFilterEnable=ipAccessFilterEnable, gpsAntennaConnection=gpsAntennaConnection, rebootIfRequired=rebootIfRequired, port4PowerCtr=port4PowerCtr, snmpAccessSubnet=snmpAccessSubnet, cmmStatusGroup=cmmStatusGroup, txSingleCollision=txSingleCollision, entryIndex=entryIndex, port7PowerCtr=port7PowerCtr, rxAlignmentErrors=rxAlignmentErrors, port2Management=port2Management, siteInfoViewable=siteInfoViewable, rxBroadcastPkts=rxBroadcastPkts, snmpTrap2=snmpTrap2, cmmUserEntry=cmmUserEntry, txLateCollision=txLateCollision, vlanTagId=vlanTagId, port1Config=port1Config, sessionTimeout=sessionTimeout, rxMulticastPkts=rxMulticastPkts, txCollisions=txCollisions, accessLevel=accessLevel, gpsLongitude=gpsLongitude, cmmSwitchEntry=cmmSwitchEntry, gpsTime=gpsTime, port4Management=port4Management, lan1Ip=lan1Ip, port4Description=port4Description, longitude=longitude, port5Description=port5Description, port8Description=port8Description, gpsTimingPulse=gpsTimingPulse, allowedIPAccess1=allowedIPAccess1, rxExcessSizeDisc=rxExcessSizeDisc, macAddress=macAddress, snmpAccessSubnet4=snmpAccessSubnet4, port6Uplink=port6Uplink, port3Config=port3Config, port2Uplink=port2Uplink, port6Config=port6Config, snmpAccessSubnet7=snmpAccessSubnet7, cmmSwitch=cmmSwitch, displayOnlyAccess=displayOnlyAccess, port3Uplink=port3Uplink, pkts65to127Octets=pkts65to127Octets, port6VlanConf=port6VlanConf, snmpTrap7=snmpTrap7, fullAccess=fullAccess, mirSrcPortNumber=mirSrcPortNumber, gpsSatellitesVisible=gpsSatellitesVisible, gpsSatellitesTracked=gpsSatellitesTracked, port5PowerCtr=port5PowerCtr, userLoginName=userLoginName, gpsHeight=gpsHeight, reboot=reboot, cmmGroups=cmmGroups, mirSrcRxEnable=mirSrcRxEnable, port6Management=port6Management, snmpAccessSubnet6=snmpAccessSubnet6, port7Config=port7Config, gpsReceiverInfo=gpsReceiverInfo, gpsTrackingMode=gpsTrackingMode, cmmPortTable=cmmPortTable, snmpReadOnly=snmpReadOnly, port3VlanConf=port3VlanConf, rxFragments=rxFragments, rxOversizePkts=rxOversizePkts, snmpTrap9=snmpTrap9, snmpTrap10=snmpTrap10, pkts1024to1522Octets=pkts1024to1522Octets, rxOctets=rxOctets, port1Management=port1Management, port3PowerCtr=port3PowerCtr, snmpCommunityString=snmpCommunityString, snmpTrap4=snmpTrap4, port7Uplink=port7Uplink, port4Config=port4Config, port3Description=port3Description, gpsReInitCount=gpsReInitCount, userPswd=userPswd, rxSAChanges=rxSAChanges, eventLog=eventLog, PYSNMP_MODULE_ID=cmmIIIMibModule, port5VlanConf=port5VlanConf, managementStatus=managementStatus, pldVersion=pldVersion, snmpAccessSubnet2=snmpAccessSubnet2, gpsRestartCount=gpsRestartCount, port7Management=port7Management, latitude=latitude, snmpTrap1=snmpTrap1, txMulticastPkts=txMulticastPkts, cmmSwitchGroup=cmmSwitchGroup, mirSrcTxEnable=mirSrcTxEnable, rxDropPkts=rxDropPkts, cmmEventLog=cmmEventLog, trackingMode=trackingMode, txDropPkts=txDropPkts, snmpAccessSubnet5=snmpAccessSubnet5, pkts64Octets=pkts64Octets, softwareVersion=softwareVersion, txBroadcastPkts=txBroadcastPkts, port4VlanConf=port4VlanConf, snmpAccessSubnet3=snmpAccessSubnet3, cmmGPSGroup=cmmGPSGroup, port7Description=port7Description, snmpTrap5=snmpTrap5, cmmConfig=cmmConfig, port6Description=port6Description, port1Uplink=port1Uplink, snmpAccessSubnet9=snmpAccessSubnet9, linkStatus=linkStatus, uplinkStatus=uplinkStatus, port4Uplink=port4Uplink, cmmUserTable=cmmUserTable, rxGoodOctets=rxGoodOctets, port2PowerCtr=port2PowerCtr, verifyGPSChecksum=verifyGPSChecksum, port2PwrReset=port2PwrReset, cmmSwitchMirrorSrcPortsEntry=cmmSwitchMirrorSrcPortsEntry, port1VlanConf=port1VlanConf, webAutoUpdate=webAutoUpdate, cmmControls=cmmControls, portNumber=portNumber, txUnicastPkts=txUnicastPkts, allowedIPAccess2=allowedIPAccess2, snmpTrap8=snmpTrap8, rxFCSErrors=rxFCSErrors, mirrorCapturePort=mirrorCapturePort, port8Uplink=port8Uplink, port5PwrReset=port5PwrReset, snmpAccessSubnet8=snmpAccessSubnet8, ntpLog=ntpLog, port2Description=port2Description, port1PwrReset=port1PwrReset, satellitesTracked=satellitesTracked, cmmStatus=cmmStatus, syncStatus=syncStatus, port7PwrReset=port7PwrReset, clearEventLog=clearEventLog, pkts128to255Octets=pkts128to255Octets, rxSymbolErrors=rxSymbolErrors, txExcessiveCollision=txExcessiveCollision, portMirrorEnable=portMirrorEnable, allowedIPAccess3=allowedIPAccess3, duplexStatus=duplexStatus, port6PwrReset=port6PwrReset, rxUndersizePkts=rxUndersizePkts, rxJabbers=rxJabbers, txDeferredTransmit=txDeferredTransmit, pkts256to511Octets=pkts256to511Octets, satellitesVisible=satellitesVisible, systemTime=systemTime, linkSpeed=linkSpeed, txOctets=txOctets, lan1SubnetMask=lan1SubnetMask, port3PwrReset=port3PwrReset, defaultGateway=defaultGateway, port4PwrReset=port4PwrReset, cmmConfigGroup=cmmConfigGroup, port1PowerCtr=port1PowerCtr, txFrameInDisc=txFrameInDisc, snmpAccessSubnet10=snmpAccessSubnet10, rxUnicastPkts=rxUnicastPkts, port7VlanConf=port7VlanConf, port8PowerCtr=port8PowerCtr, txPausePkts=txPausePkts, height=height, powerStatus=powerStatus, portIndex=portIndex, vlanTagEnable=vlanTagEnable, cmmUserTableGroup=cmmUserTableGroup, cmmPortEntry=cmmPortEntry, cmm3SnmpGPSSyncTrapEnable=cmm3SnmpGPSSyncTrapEnable, port6PowerCtr=port6PowerCtr, displayOnlyStatus=displayOnlyStatus, cmmIIIMibModule=cmmIIIMibModule, txMultipleCollision=txMultipleCollision, port5Config=port5Config, port8PwrReset=port8PwrReset, port1Description=port1Description, gpsLatitude=gpsLatitude, port2VlanConf=port2VlanConf, port5Management=port5Management, gpsInvalidMsg=gpsInvalidMsg, rxPausePkts=rxPausePkts, port3Management=port3Management, upTime=upTime, port8Management=port8Management, port8VlanConf=port8VlanConf, cmmSwitchTable=cmmSwitchTable, port8Config=port8Config, snmpTrap3=snmpTrap3, pkts512to1023Octets=pkts512to1023Octets, deviceType=deviceType, gpsDate=gpsDate, fullAccessStatus=fullAccessStatus, port2Config=port2Config)
