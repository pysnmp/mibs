#
# PySNMP MIB module CTRON-WAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-WAN-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 10:56:33 2024
# On host fv-az1986-135 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ctWan, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctWan")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, NotificationType, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, Counter64, Unsigned32, iso, IpAddress, ObjectIdentity, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "Counter64", "Unsigned32", "iso", "IpAddress", "ObjectIdentity", "ModuleIdentity", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class Index(Integer32):
    pass

class DLCI(Integer32):
    pass

ctWanConnection = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1))
ctWanDs1 = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2))
ctWanRs232 = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 3))
ctFrDcp = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 4))
ctDDS = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5))
ctDs1Alarms = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6))
ctIPPQFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 7))
ctWanHDSLExt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8))
wanNumConnections = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanNumConnections.setStatus('mandatory')
wanConnTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 2), )
if mibBuilder.loadTexts: wanConnTable.setStatus('mandatory')
wanConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 2, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "wanConnIndex"))
if mibBuilder.loadTexts: wanConnEntry.setStatus('mandatory')
wanConnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanConnIndex.setStatus('mandatory')
wanConnNumPhysPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanConnNumPhysPorts.setStatus('mandatory')
wanConnDefaultPhysPort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanConnDefaultPhysPort.setStatus('mandatory')
wanConnActivePhysPort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanConnActivePhysPort.setStatus('mandatory')
wanPhysPortTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 3), )
if mibBuilder.loadTexts: wanPhysPortTable.setStatus('mandatory')
wanPhysPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 3, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "wanPhysPortConnectionIndex"), (0, "CTRON-WAN-MIB", "wanPhysPortIndex"))
if mibBuilder.loadTexts: wanPhysPortEntry.setStatus('mandatory')
wanPhysPortConnectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanPhysPortConnectionIndex.setStatus('mandatory')
wanPhysPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanPhysPortIndex.setStatus('mandatory')
wanPhysPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("t1", 2), ("e1", 3), ("synchronous", 4), ("dds", 5), ("di", 6), ("hdsl", 7), ("bri", 8), ("ds30", 9), ("t1DDS", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanPhysPortType.setStatus('mandatory')
wanPhysPortSpecificMib = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 3, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanPhysPortSpecificMib.setStatus('mandatory')
wanInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4), )
if mibBuilder.loadTexts: wanInterfaceTable.setStatus('mandatory')
wanInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "wanInterfaceConnectionIndex"), (0, "CTRON-WAN-MIB", "wanInterfacePhysPortIndex"), (0, "CTRON-WAN-MIB", "wanInterfaceEntryIndex"))
if mibBuilder.loadTexts: wanInterfaceEntry.setStatus('mandatory')
wanInterfaceConnectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanInterfaceConnectionIndex.setStatus('mandatory')
wanInterfacePhysPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanInterfacePhysPortIndex.setStatus('mandatory')
wanInterfaceEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanInterfaceEntryIndex.setStatus('mandatory')
wanInterfaceEntryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanInterfaceEntryIfIndex.setStatus('mandatory')
wanInterfaceEntryProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanInterfaceEntryProtocol.setStatus('mandatory')
wanInterfaceEntryCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanInterfaceEntryCompression.setStatus('mandatory')
wanInterfaceEntryMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanInterfaceEntryMTU.setStatus('mandatory')
wanInterfaceEntryLineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("jBZS", 2), ("invHDLC", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanInterfaceEntryLineCoding.setStatus('mandatory')
wanInterfaceEntryCrcLength = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sixteen-bits", 1), ("thirty-two-bits", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanInterfaceEntryCrcLength.setStatus('mandatory')
wanInterfaceEntryLexProtocolEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanInterfaceEntryLexProtocolEnable.setStatus('deprecated')
wanInterfaceEntryLexProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bound", 1), ("unbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanInterfaceEntryLexProtocolStatus.setStatus('deprecated')
wanInterfaceEntryCompRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanInterfaceEntryCompRatio.setStatus('mandatory')
wanInterfaceEntryCompStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanInterfaceEntryCompStatus.setStatus('mandatory')
wanInterfaceEntryBackUpIfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanInterfaceEntryBackUpIfEnable.setStatus('mandatory')
wanDs1ExtensionsTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1), )
if mibBuilder.loadTexts: wanDs1ExtensionsTable.setStatus('mandatory')
wanDs1ExtensionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "wanDs1ExtensionsEntryIndex"))
if mibBuilder.loadTexts: wanDs1ExtensionsEntry.setStatus('mandatory')
wanDs1ExtensionsEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDs1ExtensionsEntryIndex.setStatus('mandatory')
wanDs1ExtensionsNumInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDs1ExtensionsNumInterfaces.setStatus('mandatory')
wanDs1ExtensionsToggleFracTable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("update-table", 1), ("display-new", 2), ("display-old", 3), ("restore-old", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDs1ExtensionsToggleFracTable.setStatus('mandatory')
wanDs1ExtensionsLineBuildOut = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("zero", 2), ("minus-7point5", 3), ("minus-15", 4), ("a133to266feet", 5), ("a266to399feet", 6), ("a399to533feet", 7), ("a533to655feet", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDs1ExtensionsLineBuildOut.setStatus('mandatory')
wanDs1ExtensionsCFADuration = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDs1ExtensionsCFADuration.setStatus('mandatory')
wanDs1ExtensionsDIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("diDataEnabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDs1ExtensionsDIEnable.setStatus('mandatory')
wanDs1ExtensionsTotalValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDs1ExtensionsTotalValidIntervals.setStatus('mandatory')
wanDs1ExtensionsBertTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("internal", 2), ("manual", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDs1ExtensionsBertTestMode.setStatus('mandatory')
wanDs1ExtensionsBertRun = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDs1ExtensionsBertRun.setStatus('mandatory')
wanDs1ExtensionsBertCurrentResults = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDs1ExtensionsBertCurrentResults.setStatus('mandatory')
wanDs1ExtensionsBertCumulativeResults = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDs1ExtensionsBertCumulativeResults.setStatus('mandatory')
wanDs1ExtensionsBertPeakResults = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDs1ExtensionsBertPeakResults.setStatus('mandatory')
wanDs1ExtensionsBertAverageResult = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDs1ExtensionsBertAverageResult.setStatus('mandatory')
wanDs1ExtensionsBertTestPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("patternOther", 1), ("pattern1s", 2), ("pattern63", 3), ("pattern511", 4), ("pattern2047", 5), ("pattern3in24", 6), ("patternQRSS", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDs1ExtensionsBertTestPattern.setStatus('mandatory')
wanDs1ExtensionsBertSamplePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDs1ExtensionsBertSamplePeriod.setStatus('mandatory')
wanDs1ExtensionsBertNumPeriods = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDs1ExtensionsBertNumPeriods.setStatus('mandatory')
wanDs1ExtensionsBertTestTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDs1ExtensionsBertTestTraps.setStatus('mandatory')
wanDs1ExtensionsBertDataStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("waitingForLink", 2), ("waitingForLoopback", 3), ("running", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDs1ExtensionsBertDataStatus.setStatus('mandatory')
wanRs232ExtensionsTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 3, 1), )
if mibBuilder.loadTexts: wanRs232ExtensionsTable.setStatus('mandatory')
wanRs232ExtensionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 3, 1, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "wanRs232ExtensionsEntryIndex"))
if mibBuilder.loadTexts: wanRs232ExtensionsEntry.setStatus('mandatory')
wanRs232ExtensionsEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanRs232ExtensionsEntryIndex.setStatus('mandatory')
wanRs232ExtensionsCTSEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanRs232ExtensionsCTSEnable.setStatus('mandatory')
wanRs232ExtensionsDSREnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanRs232ExtensionsDSREnable.setStatus('mandatory')
frDcpCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 4, 1), )
if mibBuilder.loadTexts: frDcpCircuitTable.setStatus('mandatory')
frDcpCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 4, 1, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "frDcpCircuitIfIndex"), (0, "CTRON-WAN-MIB", "frDcpCircuitDlci"))
if mibBuilder.loadTexts: frDcpCircuitEntry.setStatus('mandatory')
frDcpCircuitIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 4, 1, 1, 1), Index()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDcpCircuitIfIndex.setStatus('mandatory')
frDcpCircuitDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 4, 1, 1, 2), DLCI()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDcpCircuitDlci.setStatus('mandatory')
frDcpCircuitEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frDcpCircuitEnable.setStatus('mandatory')
frDcpCircuitStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDcpCircuitStatus.setStatus('mandatory')
frDcpCircuitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frDcpCircuitRatio.setStatus('mandatory')
ddsConfigTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5, 1), )
if mibBuilder.loadTexts: ddsConfigTable.setStatus('mandatory')
ddsConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5, 1, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "ddsLineIndex"))
if mibBuilder.loadTexts: ddsConfigEntry.setStatus('mandatory')
ddsLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ddsLineIndex.setStatus('mandatory')
ddsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ddsIfIndex.setStatus('mandatory')
ddsLineMode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ddsPri", 1), ("ddsCc", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ddsLineMode.setStatus('mandatory')
ddsLineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ddsNone", 1), ("ddsJBZS", 2), ("otherLineCode", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ddsLineCoding.setStatus('mandatory')
ddsLoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ddsNoLoop", 1), ("ddsLineLoop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ddsLoopbackConfig.setStatus('mandatory')
ddsLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ddsNoAlarm", 1), ("ddsLossOfSignal", 2), ("ddsOutOfService", 3), ("ddsOutOfFrame", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ddsLineStatus.setStatus('mandatory')
ddsTxClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ddsLoopTiming", 1), ("ddsLocalTiming", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ddsTxClockSource.setStatus('mandatory')
ddsPortInSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ddsPortInSpeed.setStatus('mandatory')
ddsPortOutSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 5, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ddsPortOutSpeed.setStatus('mandatory')
ds1AlarmsGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 1))
ds1AlarmGlobalAdmin = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmGlobalAdmin.setStatus('mandatory')
ds1AlarmGlobalAutoRecovery = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmGlobalAutoRecovery.setStatus('mandatory')
ds1AlarmGlobalTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmGlobalTrapEnable.setStatus('mandatory')
ds1AlarmGlobalESCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmGlobalESCount.setStatus('mandatory')
ds1AlarmGlobalESInterval = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmGlobalESInterval.setStatus('mandatory')
ds1AlarmGlobalBPVErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmGlobalBPVErrorRate.setStatus('mandatory')
ds1AlarmGlobalBPVInterval = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmGlobalBPVInterval.setStatus('mandatory')
ds1AlarmGlobalManualRecovery = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("recover", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmGlobalManualRecovery.setStatus('mandatory')
ds1AlarmConfigTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 2), )
if mibBuilder.loadTexts: ds1AlarmConfigTable.setStatus('mandatory')
ds1AlarmConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 2, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "ds1PhysNum"))
if mibBuilder.loadTexts: ds1AlarmConfigEntry.setStatus('mandatory')
ds1PhysNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1PhysNum.setStatus('mandatory')
ds1AlarmAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmAdmin.setStatus('mandatory')
ds1AlarmAutoRecovery = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmAutoRecovery.setStatus('mandatory')
ds1AlarmTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmTrapEnable.setStatus('mandatory')
ds1AlarmESCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmESCount.setStatus('mandatory')
ds1AlarmESInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmESInterval.setStatus('mandatory')
ds1AlarmBPVErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmBPVErrorRate.setStatus('mandatory')
ds1AlarmBPVInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmBPVInterval.setStatus('mandatory')
ds1AlarmManualRecovery = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("recover", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1AlarmManualRecovery.setStatus('mandatory')
ipPQConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 7, 1))
ipPQAdmin = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipPQAdmin.setStatus('mandatory')
iPPQMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPPQMaxEntries.setStatus('mandatory')
iPPQNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPPQNumEntries.setStatus('mandatory')
iPPQAddAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 7, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iPPQAddAddress.setStatus('mandatory')
iPPQDelAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 7, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iPPQDelAddress.setStatus('mandatory')
ipPQAddressTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 7, 2), )
if mibBuilder.loadTexts: ipPQAddressTable.setStatus('mandatory')
ipPQAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 7, 2, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "ipPQAddressId"))
if mibBuilder.loadTexts: ipPQAddressEntry.setStatus('mandatory')
ipPQAddressId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipPQAddressId.setStatus('mandatory')
ipPQIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 7, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipPQIPAddress.setStatus('mandatory')
ctWanHDSLPerformance15mTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1), )
if mibBuilder.loadTexts: ctWanHDSLPerformance15mTable.setStatus('mandatory')
ctWanHDSLPerformance15mEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "ctWanHDSLPerformance15mConnIndex"), (0, "CTRON-WAN-MIB", "ctWanHDSLPerformance15mSlotIndex"))
if mibBuilder.loadTexts: ctWanHDSLPerformance15mEntry.setStatus('mandatory')
ctWanHDSLPerformance15mConnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPerformance15mConnIndex.setStatus('mandatory')
ctWanHDSLPerformance15mSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPerformance15mSlotIndex.setStatus('mandatory')
ctWanHDSLHLULoop1UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHLULoop1UAS15m.setStatus('mandatory')
ctWanHDSLHLULoop1ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHLULoop1ES15m.setStatus('mandatory')
ctWanHDSLHLULoop2UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHLULoop2UAS15m.setStatus('mandatory')
ctWanHDSLHLULoop2ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHLULoop2ES15m.setStatus('mandatory')
ctWanHDSLHRULoop1UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHRULoop1UAS15m.setStatus('mandatory')
ctWanHDSLHRULoop1ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHRULoop1ES15m.setStatus('mandatory')
ctWanHDSLHRULoop2UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHRULoop2UAS15m.setStatus('mandatory')
ctWanHDSLHRULoop2ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHRULoop2ES15m.setStatus('mandatory')
ctWanHDSLDb1NetworkLoop1UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1NetworkLoop1UAS15m.setStatus('mandatory')
ctWanHDSLDb1NetworkLoop1ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1NetworkLoop1ES15m.setStatus('mandatory')
ctWanHDSLDb1NetworkLoop2UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1NetworkLoop2UAS15m.setStatus('mandatory')
ctWanHDSLDb1NetworkLoop2ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1NetworkLoop2ES15m.setStatus('mandatory')
ctWanHDSLDb1CustomerLoop1UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1CustomerLoop1UAS15m.setStatus('mandatory')
ctWanHDSLDb1CustomerLoop1ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1CustomerLoop1ES15m.setStatus('mandatory')
ctWanHDSLDb1CustomerLoop2UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1CustomerLoop2UAS15m.setStatus('mandatory')
ctWanHDSLDb1CustomerLoop2ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1CustomerLoop2ES15m.setStatus('mandatory')
ctWanHDSLDb2NetworkLoop1UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2NetworkLoop1UAS15m.setStatus('mandatory')
ctWanHDSLDb2NetworkLoop1ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2NetworkLoop1ES15m.setStatus('mandatory')
ctWanHDSLDb2NetworkLoop2UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2NetworkLoop2UAS15m.setStatus('mandatory')
ctWanHDSLDb2NetworkLoop2ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2NetworkLoop2ES15m.setStatus('mandatory')
ctWanHDSLDb2CustomerLoop1UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2CustomerLoop1UAS15m.setStatus('mandatory')
ctWanHDSLDb2CustomerLoop1ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2CustomerLoop1ES15m.setStatus('mandatory')
ctWanHDSLDb2CustomerLoop2UAS15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2CustomerLoop2UAS15m.setStatus('mandatory')
ctWanHDSLDb2CustomerLoop2ES15m = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2CustomerLoop2ES15m.setStatus('mandatory')
ctWanHDSLPerformance24hTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2), )
if mibBuilder.loadTexts: ctWanHDSLPerformance24hTable.setStatus('mandatory')
ctWanHDSLPerformance24hEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "ctWanHDSLPerformance24hConnIndex"), (0, "CTRON-WAN-MIB", "ctWanHDSLPerformance24hSlotIndex"))
if mibBuilder.loadTexts: ctWanHDSLPerformance24hEntry.setStatus('mandatory')
ctWanHDSLPerformance24hConnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPerformance24hConnIndex.setStatus('mandatory')
ctWanHDSLPerformance24hSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPerformance24hSlotIndex.setStatus('mandatory')
ctWanHDSLHLULoop1UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHLULoop1UAS24h.setStatus('mandatory')
ctWanHDSLHLULoop1ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHLULoop1ES24h.setStatus('mandatory')
ctWanHDSLHLULoop2UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHLULoop2UAS24h.setStatus('mandatory')
ctWanHDSLHLULoop2ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHLULoop2ES24h.setStatus('mandatory')
ctWanHDSLHRULoop1UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHRULoop1UAS24h.setStatus('mandatory')
ctWanHDSLHRULoop1ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHRULoop1ES24h.setStatus('mandatory')
ctWanHDSLHRULoop2UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHRULoop2UAS24h.setStatus('mandatory')
ctWanHDSLHRULoop2ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHRULoop2ES24h.setStatus('mandatory')
ctWanHDSLDb1NetworkLoop1UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1NetworkLoop1UAS24h.setStatus('mandatory')
ctWanHDSLDb1NetworkLoop1ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1NetworkLoop1ES24h.setStatus('mandatory')
ctWanHDSLDb1NetworkLoop2UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1NetworkLoop2UAS24h.setStatus('mandatory')
ctWanHDSLDb1NetworkLoop2ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1NetworkLoop2ES24h.setStatus('mandatory')
ctWanHDSLDb1CustomerLoop1UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1CustomerLoop1UAS24h.setStatus('mandatory')
ctWanHDSLDb1CustomerLoop1ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1CustomerLoop1ES24h.setStatus('mandatory')
ctWanHDSLDb1CustomerLoop2UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1CustomerLoop2UAS24h.setStatus('mandatory')
ctWanHDSLDb1CustomerLoop2ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb1CustomerLoop2ES24h.setStatus('mandatory')
ctWanHDSLDb2NetworkLoop1UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2NetworkLoop1UAS24h.setStatus('mandatory')
ctWanHDSLDb2NetworkLoop1ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2NetworkLoop1ES24h.setStatus('mandatory')
ctWanHDSLDb2NetworkLoop2UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2NetworkLoop2UAS24h.setStatus('mandatory')
ctWanHDSLDb2NetworkLoop2ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2NetworkLoop2ES24h.setStatus('mandatory')
ctWanHDSLDb2CustomerLoop1UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2CustomerLoop1UAS24h.setStatus('mandatory')
ctWanHDSLDb2CustomerLoop1ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2CustomerLoop1ES24h.setStatus('mandatory')
ctWanHDSLDb2CustomerLoop2UAS24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2CustomerLoop2UAS24h.setStatus('mandatory')
ctWanHDSLDb2CustomerLoop2ES24h = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDb2CustomerLoop2ES24h.setStatus('mandatory')
ctWanHDSLStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3), )
if mibBuilder.loadTexts: ctWanHDSLStatisticsTable.setStatus('mandatory')
ctWanHDSLStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "ctWanHDSLStatisticsHLUConnIndex"))
if mibBuilder.loadTexts: ctWanHDSLStatisticsEntry.setStatus('mandatory')
ctWanHDSLStatisticsHLUConnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLStatisticsHLUConnIndex.setStatus('mandatory')
ctWanHDSLSNRHLULoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHLULoop1.setStatus('mandatory')
ctWanHDSLSNRLowHLULoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowHLULoop1.setStatus('mandatory')
ctWanHDSLSNRHighHLULoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighHLULoop1.setStatus('mandatory')
ctWanHDSLSNRHLULoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHLULoop2.setStatus('mandatory')
ctWanHDSLSNRLowHLULoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowHLULoop2.setStatus('mandatory')
ctWanHDSLSNRHighHLULoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighHLULoop2.setStatus('mandatory')
ctWanHDSLPulseAttenuationHLULoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationHLULoop1.setStatus('mandatory')
ctWanHDSLPulseAttenuationHLULoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationHLULoop2.setStatus('mandatory')
ctWanHDSLBitStat1HLU = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLBitStat1HLU.setStatus('mandatory')
ctWanHDSLSNRHRULoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHRULoop1.setStatus('mandatory')
ctWanHDSLSNRLowHRULoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowHRULoop1.setStatus('mandatory')
ctWanHDSLSNRHighHRULoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighHRULoop1.setStatus('mandatory')
ctWanHDSLSNRHRULoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHRULoop2.setStatus('mandatory')
ctWanHDSLSNRLowHRULoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowHRULoop2.setStatus('mandatory')
ctWanHDSLSNRHighHRULoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighHRULoop2.setStatus('mandatory')
ctWanHDSLPulseAttenuationHRULoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationHRULoop1.setStatus('mandatory')
ctWanHDSLPulseAttenuationHRULoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationHRULoop2.setStatus('mandatory')
ctWanHDSLDs1FrameHRU = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLDs1FrameHRU.setStatus('mandatory')
ctWanHDSLSNRDb1NetworkLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRDb1NetworkLoop1.setStatus('mandatory')
ctWanHDSLSNRLowDb1NetworkLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowDb1NetworkLoop1.setStatus('mandatory')
ctWanHDSLSNRHighDb1NetworkLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighDb1NetworkLoop1.setStatus('mandatory')
ctWanHDSLSNRDb1NetworkLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRDb1NetworkLoop2.setStatus('mandatory')
ctWanHDSLSNRLowDb1NetworkLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowDb1NetworkLoop2.setStatus('mandatory')
ctWanHDSLSNRHighDb1NetworkLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighDb1NetworkLoop2.setStatus('mandatory')
ctWanHDSLSNRDb1CustomerLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRDb1CustomerLoop1.setStatus('mandatory')
ctWanHDSLSNRLowDb1CustomerLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowDb1CustomerLoop1.setStatus('mandatory')
ctWanHDSLSNRHighDb1CustomerLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighDb1CustomerLoop1.setStatus('mandatory')
ctWanHDSLSNRDb1CustomerLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRDb1CustomerLoop2.setStatus('mandatory')
ctWanHDSLSNRLowDb1CustomerLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowDb1CustomerLoop2.setStatus('mandatory')
ctWanHDSLSNRHighDb1CustomerLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighDb1CustomerLoop2.setStatus('mandatory')
ctWanHDSLPulseAttenuationDb1NetworkLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationDb1NetworkLoop1.setStatus('mandatory')
ctWanHDSLPulseAttenuationDb1NetworkLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationDb1NetworkLoop2.setStatus('mandatory')
ctWanHDSLPulseAttenuationDb1CustomerLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationDb1CustomerLoop1.setStatus('mandatory')
ctWanHDSLPulseAttenuationDb1CustomerLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationDb1CustomerLoop2.setStatus('mandatory')
ctWanHDSLSNRDb2NetworkLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRDb2NetworkLoop1.setStatus('mandatory')
ctWanHDSLSNRLowDb2NetworkLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowDb2NetworkLoop1.setStatus('mandatory')
ctWanHDSLSNRHighDb2NetworkLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighDb2NetworkLoop1.setStatus('mandatory')
ctWanHDSLSNRDb2NetworkLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRDb2NetworkLoop2.setStatus('mandatory')
ctWanHDSLSNRLowDb2NetworkLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowDb2NetworkLoop2.setStatus('mandatory')
ctWanHDSLSNRHighDb2NetworkLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighDb2NetworkLoop2.setStatus('mandatory')
ctWanHDSLSNRDb2CustomerLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRDb2CustomerLoop1.setStatus('mandatory')
ctWanHDSLSNRLowDb2CustomerLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowDb2CustomerLoop1.setStatus('mandatory')
ctWanHDSLSNRHighDb2CustomerLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighDb2CustomerLoop1.setStatus('mandatory')
ctWanHDSLSNRDb2CustomerLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRDb2CustomerLoop2.setStatus('mandatory')
ctWanHDSLSNRLowDb2CustomerLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRLowDb2CustomerLoop2.setStatus('mandatory')
ctWanHDSLSNRHighDb2CustomerLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLSNRHighDb2CustomerLoop2.setStatus('mandatory')
ctWanHDSLPulseAttenuationDb2NetworkLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationDb2NetworkLoop1.setStatus('mandatory')
ctWanHDSLPulseAttenuationDb2NetworkLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationDb2NetworkLoop2.setStatus('mandatory')
ctWanHDSLPulseAttenuationDb2CustomerLoop1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationDb2CustomerLoop1.setStatus('mandatory')
ctWanHDSLPulseAttenuationDb2CustomerLoop2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 3, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLPulseAttenuationDb2CustomerLoop2.setStatus('mandatory')
ctWanHDSLTestTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 4), )
if mibBuilder.loadTexts: ctWanHDSLTestTable.setStatus('mandatory')
ctWanHDSLTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 4, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "ctWanHDSLTestHLUConnIndex"))
if mibBuilder.loadTexts: ctWanHDSLTestEntry.setStatus('mandatory')
ctWanHDSLTestHLUConnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLTestHLUConnIndex.setStatus('mandatory')
ctWanHDSLTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctWanHDSLTestMode.setStatus('mandatory')
ctWanHDSLHLUTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHLUTestResult.setStatus('mandatory')
ctWanHDSLHRUTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLHRUTestResult.setStatus('mandatory')
ctWanHDSLAlarmsTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 5), )
if mibBuilder.loadTexts: ctWanHDSLAlarmsTable.setStatus('mandatory')
ctWanHDSLAlarmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 5, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "ctWanHDSLAlarmsHLUConnIndex"))
if mibBuilder.loadTexts: ctWanHDSLAlarmsEntry.setStatus('mandatory')
ctWanHDSLAlarmsHLUConnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlarmsHLUConnIndex.setStatus('mandatory')
ctWanHDSLAlarmsBackplane = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlarmsBackplane.setStatus('mandatory')
ctWanHDSLAlarmsES = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlarmsES.setStatus('mandatory')
ctWanHDSLAlarmHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6), )
if mibBuilder.loadTexts: ctWanHDSLAlarmHistoryTable.setStatus('mandatory')
ctWanHDSLAlarmHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "ctWanHDSLAlarmHistoryConnIndex"))
if mibBuilder.loadTexts: ctWanHDSLAlarmHistoryEntry.setStatus('mandatory')
ctWanHDSLAlarmHistoryConnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlarmHistoryConnIndex.setStatus('mandatory')
ctWanHDSLAlHistLLOSFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLLOSFirst.setStatus('mandatory')
ctWanHDSLAlHistLLOSLast = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLLOSLast.setStatus('mandatory')
ctWanHDSLAlHistLLOSCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLLOSCurrent.setStatus('mandatory')
ctWanHDSLAlHistLLOSCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLLOSCount.setStatus('mandatory')
ctWanHDSLAlHistRLOSFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistRLOSFirst.setStatus('mandatory')
ctWanHDSLAlHistRLOSLast = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistRLOSLast.setStatus('mandatory')
ctWanHDSLAlHistRLOSCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistRLOSCurrent.setStatus('mandatory')
ctWanHDSLAlHistRLOSCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistRLOSCount.setStatus('mandatory')
ctWanHDSLAlHistLOSW1First = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLOSW1First.setStatus('mandatory')
ctWanHDSLAlHistLOSW1Last = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLOSW1Last.setStatus('mandatory')
ctWanHDSLAlHistLOSW1Current = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLOSW1Current.setStatus('mandatory')
ctWanHDSLAlHistLOSW1Count = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLOSW1Count.setStatus('mandatory')
ctWanHDSLAlHistLOSW2First = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLOSW2First.setStatus('mandatory')
ctWanHDSLAlHistLOSW2Last = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLOSW2Last.setStatus('mandatory')
ctWanHDSLAlHistLOSW2Current = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLOSW2Current.setStatus('mandatory')
ctWanHDSLAlHistLOSW2Count = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistLOSW2Count.setStatus('mandatory')
ctWanHDSLAlHistES1First = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistES1First.setStatus('mandatory')
ctWanHDSLAlHistES1Last = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistES1Last.setStatus('mandatory')
ctWanHDSLAlHistES1Current = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistES1Current.setStatus('mandatory')
ctWanHDSLAlHistES1Count = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistES1Count.setStatus('mandatory')
ctWanHDSLAlHistES2First = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistES2First.setStatus('mandatory')
ctWanHDSLAlHistES2Last = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistES2Last.setStatus('mandatory')
ctWanHDSLAlHistES2Current = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistES2Current.setStatus('mandatory')
ctWanHDSLAlHistES2Count = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistES2Count.setStatus('mandatory')
ctWanHDSLAlHistMargin1First = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistMargin1First.setStatus('mandatory')
ctWanHDSLAlHistMargin1Last = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistMargin1Last.setStatus('mandatory')
ctWanHDSLAlHistMargin1Current = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistMargin1Current.setStatus('mandatory')
ctWanHDSLAlHistMargin1Count = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistMargin1Count.setStatus('mandatory')
ctWanHDSLAlHistMargin2First = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistMargin2First.setStatus('mandatory')
ctWanHDSLAlHistMargin2Last = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistMargin2Last.setStatus('mandatory')
ctWanHDSLAlHistMargin2Current = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistMargin2Current.setStatus('mandatory')
ctWanHDSLAlHistMargin2Count = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistMargin2Count.setStatus('mandatory')
ctWanHDSLAlHistCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLAlHistCleared.setStatus('mandatory')
ctWanHDSLAlHistClearit = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 6, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctWanHDSLAlHistClearit.setStatus('mandatory')
ctWanHDSLLoopbacksTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 7), )
if mibBuilder.loadTexts: ctWanHDSLLoopbacksTable.setStatus('mandatory')
ctWanHDSLLoopbacksEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 7, 1), ).setIndexNames((0, "CTRON-WAN-MIB", "ctWanHDSLLoopbacksHLUConnIndex"))
if mibBuilder.loadTexts: ctWanHDSLLoopbacksEntry.setStatus('mandatory')
ctWanHDSLLoopbacksHLUConnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLLoopbacksHLUConnIndex.setStatus('mandatory')
ctWanHDSLLoopbacksAdminType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctWanHDSLLoopbacksAdminType.setStatus('mandatory')
ctWanHDSLLoopbacksOperType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 1, 8, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanHDSLLoopbacksOperType.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-WAN-MIB", ctWanHDSLTestEntry=ctWanHDSLTestEntry, wanDs1ExtensionsBertAverageResult=wanDs1ExtensionsBertAverageResult, ds1AlarmAutoRecovery=ds1AlarmAutoRecovery, ipPQIPAddress=ipPQIPAddress, ctWanDs1=ctWanDs1, ctWanHDSLAlHistES1First=ctWanHDSLAlHistES1First, ctWanHDSLDb1CustomerLoop1ES15m=ctWanHDSLDb1CustomerLoop1ES15m, frDcpCircuitTable=frDcpCircuitTable, ctWanHDSLAlHistLLOSCurrent=ctWanHDSLAlHistLLOSCurrent, wanPhysPortType=wanPhysPortType, ctWanHDSLDb1CustomerLoop2ES15m=ctWanHDSLDb1CustomerLoop2ES15m, ctWanHDSLHRULoop1ES15m=ctWanHDSLHRULoop1ES15m, ctWanHDSLDb2CustomerLoop2ES15m=ctWanHDSLDb2CustomerLoop2ES15m, wanDs1ExtensionsNumInterfaces=wanDs1ExtensionsNumInterfaces, wanInterfaceEntryBackUpIfEnable=wanInterfaceEntryBackUpIfEnable, wanPhysPortTable=wanPhysPortTable, ctWanHDSLDb2NetworkLoop2UAS15m=ctWanHDSLDb2NetworkLoop2UAS15m, ctWanHDSLAlHistMargin2Last=ctWanHDSLAlHistMargin2Last, wanConnEntry=wanConnEntry, wanRs232ExtensionsEntry=wanRs232ExtensionsEntry, ctWanHDSLPulseAttenuationDb1NetworkLoop1=ctWanHDSLPulseAttenuationDb1NetworkLoop1, ds1AlarmTrapEnable=ds1AlarmTrapEnable, ctWanHDSLPulseAttenuationHLULoop1=ctWanHDSLPulseAttenuationHLULoop1, ctWanHDSLAlHistMargin2First=ctWanHDSLAlHistMargin2First, ipPQAddressTable=ipPQAddressTable, wanInterfaceTable=wanInterfaceTable, ctWanHDSLDb1NetworkLoop1ES15m=ctWanHDSLDb1NetworkLoop1ES15m, ds1AlarmsGlobalConfigGroup=ds1AlarmsGlobalConfigGroup, wanDs1ExtensionsBertTestPattern=wanDs1ExtensionsBertTestPattern, wanInterfacePhysPortIndex=wanInterfacePhysPortIndex, frDcpCircuitEntry=frDcpCircuitEntry, ds1AlarmGlobalAdmin=ds1AlarmGlobalAdmin, ctWanHDSLHLULoop2ES15m=ctWanHDSLHLULoop2ES15m, ctWanHDSLHLULoop2UAS24h=ctWanHDSLHLULoop2UAS24h, ctWanHDSLPulseAttenuationDb1NetworkLoop2=ctWanHDSLPulseAttenuationDb1NetworkLoop2, wanRs232ExtensionsCTSEnable=wanRs232ExtensionsCTSEnable, ctWanHDSLSNRLowDb1NetworkLoop1=ctWanHDSLSNRLowDb1NetworkLoop1, ctWanHDSLTestTable=ctWanHDSLTestTable, ctWanHDSLAlHistLOSW2Count=ctWanHDSLAlHistLOSW2Count, ds1AlarmESInterval=ds1AlarmESInterval, ctWanHDSLAlHistMargin1Count=ctWanHDSLAlHistMargin1Count, ctWanHDSLStatisticsHLUConnIndex=ctWanHDSLStatisticsHLUConnIndex, ctWanHDSLSNRDb2CustomerLoop2=ctWanHDSLSNRDb2CustomerLoop2, ddsPortInSpeed=ddsPortInSpeed, iPPQAddAddress=iPPQAddAddress, ctWanHDSLPerformance15mEntry=ctWanHDSLPerformance15mEntry, ctWanHDSLDb2NetworkLoop2ES24h=ctWanHDSLDb2NetworkLoop2ES24h, ctWanHDSLPulseAttenuationDb2NetworkLoop2=ctWanHDSLPulseAttenuationDb2NetworkLoop2, ctWanHDSLSNRDb2NetworkLoop1=ctWanHDSLSNRDb2NetworkLoop1, wanInterfaceEntryCompression=wanInterfaceEntryCompression, wanInterfaceEntryLineCoding=wanInterfaceEntryLineCoding, ctWanHDSLPerformance24hConnIndex=ctWanHDSLPerformance24hConnIndex, ctWanHDSLBitStat1HLU=ctWanHDSLBitStat1HLU, ctWanHDSLAlHistLOSW1Count=ctWanHDSLAlHistLOSW1Count, ctWanHDSLAlHistMargin2Current=ctWanHDSLAlHistMargin2Current, ctWanHDSLSNRDb1CustomerLoop2=ctWanHDSLSNRDb1CustomerLoop2, ctWanHDSLLoopbacksEntry=ctWanHDSLLoopbacksEntry, wanDs1ExtensionsTable=wanDs1ExtensionsTable, ddsLineCoding=ddsLineCoding, ds1AlarmGlobalESInterval=ds1AlarmGlobalESInterval, wanInterfaceEntryCrcLength=wanInterfaceEntryCrcLength, ctWanHDSLHRULoop2ES24h=ctWanHDSLHRULoop2ES24h, Index=Index, ddsLineIndex=ddsLineIndex, DLCI=DLCI, wanDs1ExtensionsBertNumPeriods=wanDs1ExtensionsBertNumPeriods, ctWanHDSLPerformance15mTable=ctWanHDSLPerformance15mTable, ctWanHDSLStatisticsTable=ctWanHDSLStatisticsTable, ctWanHDSLSNRLowHLULoop2=ctWanHDSLSNRLowHLULoop2, ctWanHDSLSNRLowDb2CustomerLoop1=ctWanHDSLSNRLowDb2CustomerLoop1, ctWanHDSLPulseAttenuationDb2NetworkLoop1=ctWanHDSLPulseAttenuationDb2NetworkLoop1, wanInterfaceEntryCompRatio=wanInterfaceEntryCompRatio, ctWanHDSLAlHistClearit=ctWanHDSLAlHistClearit, ctWanHDSLLoopbacksTable=ctWanHDSLLoopbacksTable, ctWanHDSLAlHistLLOSCount=ctWanHDSLAlHistLLOSCount, wanInterfaceEntryIfIndex=wanInterfaceEntryIfIndex, ctDs1Alarms=ctDs1Alarms, ctWanHDSLSNRHighDb1CustomerLoop1=ctWanHDSLSNRHighDb1CustomerLoop1, ctWanHDSLSNRHighDb2CustomerLoop1=ctWanHDSLSNRHighDb2CustomerLoop1, ctWanHDSLAlHistES1Count=ctWanHDSLAlHistES1Count, ctWanHDSLDb1NetworkLoop2ES15m=ctWanHDSLDb1NetworkLoop2ES15m, frDcpCircuitRatio=frDcpCircuitRatio, ctWanHDSLAlHistLLOSLast=ctWanHDSLAlHistLLOSLast, wanDs1ExtensionsBertPeakResults=wanDs1ExtensionsBertPeakResults, ctWanHDSLDb1CustomerLoop2UAS15m=ctWanHDSLDb1CustomerLoop2UAS15m, ctWanHDSLSNRDb1NetworkLoop1=ctWanHDSLSNRDb1NetworkLoop1, wanNumConnections=wanNumConnections, ctWanHDSLDb1NetworkLoop2UAS15m=ctWanHDSLDb1NetworkLoop2UAS15m, ctWanHDSLDb1CustomerLoop1ES24h=ctWanHDSLDb1CustomerLoop1ES24h, wanDs1ExtensionsEntry=wanDs1ExtensionsEntry, ctWanHDSLDb2CustomerLoop1UAS15m=ctWanHDSLDb2CustomerLoop1UAS15m, ctWanHDSLDb2CustomerLoop2ES24h=ctWanHDSLDb2CustomerLoop2ES24h, wanInterfaceEntryMTU=wanInterfaceEntryMTU, ctWanHDSLDb1CustomerLoop1UAS15m=ctWanHDSLDb1CustomerLoop1UAS15m, ctWanHDSLDb2CustomerLoop1UAS24h=ctWanHDSLDb2CustomerLoop1UAS24h, ctWanHDSLAlHistES1Current=ctWanHDSLAlHistES1Current, ds1AlarmBPVErrorRate=ds1AlarmBPVErrorRate, ctWanHDSLHLULoop1ES15m=ctWanHDSLHLULoop1ES15m, wanDs1ExtensionsToggleFracTable=wanDs1ExtensionsToggleFracTable, ctWanHDSLHLUTestResult=ctWanHDSLHLUTestResult, wanRs232ExtensionsEntryIndex=wanRs232ExtensionsEntryIndex, ctWanHDSLLoopbacksOperType=ctWanHDSLLoopbacksOperType, ctWanHDSLDb2CustomerLoop1ES15m=ctWanHDSLDb2CustomerLoop1ES15m, ddsLineMode=ddsLineMode, ctWanHDSLHRULoop2UAS15m=ctWanHDSLHRULoop2UAS15m, ctWanHDSLHLULoop1ES24h=ctWanHDSLHLULoop1ES24h, ctWanHDSLSNRHighDb2CustomerLoop2=ctWanHDSLSNRHighDb2CustomerLoop2, wanConnDefaultPhysPort=wanConnDefaultPhysPort, wanConnTable=wanConnTable, wanPhysPortEntry=wanPhysPortEntry, wanPhysPortSpecificMib=wanPhysPortSpecificMib, ctWanHDSLAlHistRLOSFirst=ctWanHDSLAlHistRLOSFirst, ddsTxClockSource=ddsTxClockSource, ctWanHDSLAlHistMargin2Count=ctWanHDSLAlHistMargin2Count, ctWanHDSLAlHistLOSW2First=ctWanHDSLAlHistLOSW2First, ctWanHDSLHRULoop1UAS24h=ctWanHDSLHRULoop1UAS24h, wanDs1ExtensionsDIEnable=wanDs1ExtensionsDIEnable, wanConnIndex=wanConnIndex, ctWanHDSLDb1NetworkLoop2UAS24h=ctWanHDSLDb1NetworkLoop2UAS24h, ctWanHDSLSNRHighHRULoop2=ctWanHDSLSNRHighHRULoop2, ctWanHDSLSNRHLULoop1=ctWanHDSLSNRHLULoop1, wanPhysPortIndex=wanPhysPortIndex, ctWanHDSLAlarmHistoryConnIndex=ctWanHDSLAlarmHistoryConnIndex, ds1AlarmGlobalManualRecovery=ds1AlarmGlobalManualRecovery, ctWanHDSLSNRLowHRULoop2=ctWanHDSLSNRLowHRULoop2, ctWanHDSLAlarmHistoryTable=ctWanHDSLAlarmHistoryTable, ddsLoopbackConfig=ddsLoopbackConfig, ctWanHDSLHRULoop2ES15m=ctWanHDSLHRULoop2ES15m, ctWanHDSLDb2CustomerLoop2UAS24h=ctWanHDSLDb2CustomerLoop2UAS24h, ctWanHDSLPulseAttenuationHLULoop2=ctWanHDSLPulseAttenuationHLULoop2, ctWanHDSLAlHistRLOSCount=ctWanHDSLAlHistRLOSCount, ctWanHDSLPerformance24hEntry=ctWanHDSLPerformance24hEntry, wanRs232ExtensionsTable=wanRs232ExtensionsTable, ctWanHDSLAlHistLOSW1Last=ctWanHDSLAlHistLOSW1Last, ddsConfigEntry=ddsConfigEntry, ipPQAdmin=ipPQAdmin, ctWanHDSLDb1CustomerLoop2ES24h=ctWanHDSLDb1CustomerLoop2ES24h, ctWanHDSLSNRHighDb2NetworkLoop1=ctWanHDSLSNRHighDb2NetworkLoop1, wanPhysPortConnectionIndex=wanPhysPortConnectionIndex, ctWanHDSLHRUTestResult=ctWanHDSLHRUTestResult, wanInterfaceEntryIndex=wanInterfaceEntryIndex, ctWanHDSLTestHLUConnIndex=ctWanHDSLTestHLUConnIndex, ctWanHDSLAlarmsHLUConnIndex=ctWanHDSLAlarmsHLUConnIndex, ctWanHDSLSNRLowDb1CustomerLoop2=ctWanHDSLSNRLowDb1CustomerLoop2, ds1AlarmAdmin=ds1AlarmAdmin, ipPQAddressEntry=ipPQAddressEntry, ctWanHDSLSNRLowDb1NetworkLoop2=ctWanHDSLSNRLowDb1NetworkLoop2, ctWanHDSLAlHistMargin1Last=ctWanHDSLAlHistMargin1Last, ddsLineStatus=ddsLineStatus, iPPQNumEntries=iPPQNumEntries, wanDs1ExtensionsCFADuration=wanDs1ExtensionsCFADuration, wanDs1ExtensionsTotalValidIntervals=wanDs1ExtensionsTotalValidIntervals, wanInterfaceConnectionIndex=wanInterfaceConnectionIndex, ctWanHDSLAlHistES2First=ctWanHDSLAlHistES2First, ctWanHDSLAlHistES2Current=ctWanHDSLAlHistES2Current, ds1PhysNum=ds1PhysNum, wanDs1ExtensionsBertCumulativeResults=wanDs1ExtensionsBertCumulativeResults, ctWanHDSLDb1NetworkLoop2ES24h=ctWanHDSLDb1NetworkLoop2ES24h, ds1AlarmConfigTable=ds1AlarmConfigTable, ctWanHDSLSNRHRULoop1=ctWanHDSLSNRHRULoop1, ctWanHDSLSNRDb1NetworkLoop2=ctWanHDSLSNRDb1NetworkLoop2, ddsPortOutSpeed=ddsPortOutSpeed, ctWanHDSLSNRHighDb1NetworkLoop2=ctWanHDSLSNRHighDb1NetworkLoop2, wanRs232ExtensionsDSREnable=wanRs232ExtensionsDSREnable, ctWanHDSLPulseAttenuationDb1CustomerLoop1=ctWanHDSLPulseAttenuationDb1CustomerLoop1, ctWanConnection=ctWanConnection, ctWanHDSLDb2CustomerLoop1ES24h=ctWanHDSLDb2CustomerLoop1ES24h, ctWanHDSLHLULoop1UAS15m=ctWanHDSLHLULoop1UAS15m, ctWanHDSLSNRHLULoop2=ctWanHDSLSNRHLULoop2, iPPQMaxEntries=iPPQMaxEntries, ctWanHDSLSNRLowHRULoop1=ctWanHDSLSNRLowHRULoop1, ctWanHDSLHRULoop1ES24h=ctWanHDSLHRULoop1ES24h, ctWanHDSLAlHistLLOSFirst=ctWanHDSLAlHistLLOSFirst, ctWanHDSLDb1NetworkLoop1UAS15m=ctWanHDSLDb1NetworkLoop1UAS15m, ctWanHDSLAlHistLOSW1First=ctWanHDSLAlHistLOSW1First, wanConnNumPhysPorts=wanConnNumPhysPorts, ipPQAddressId=ipPQAddressId, ds1AlarmGlobalAutoRecovery=ds1AlarmGlobalAutoRecovery, ds1AlarmManualRecovery=ds1AlarmManualRecovery, ctWanHDSLAlHistLOSW1Current=ctWanHDSLAlHistLOSW1Current, ddsConfigTable=ddsConfigTable, ctWanHDSLSNRHighHRULoop1=ctWanHDSLSNRHighHRULoop1, ctWanHDSLPulseAttenuationHRULoop2=ctWanHDSLPulseAttenuationHRULoop2, ctWanHDSLDb2NetworkLoop2ES15m=ctWanHDSLDb2NetworkLoop2ES15m, wanConnActivePhysPort=wanConnActivePhysPort, ctWanHDSLPulseAttenuationDb1CustomerLoop2=ctWanHDSLPulseAttenuationDb1CustomerLoop2, ctWanHDSLSNRHighDb1NetworkLoop1=ctWanHDSLSNRHighDb1NetworkLoop1, ds1AlarmGlobalESCount=ds1AlarmGlobalESCount, ctWanHDSLSNRHighHLULoop2=ctWanHDSLSNRHighHLULoop2, ds1AlarmGlobalBPVErrorRate=ds1AlarmGlobalBPVErrorRate, ctWanHDSLDb2NetworkLoop1ES24h=ctWanHDSLDb2NetworkLoop1ES24h, ctWanHDSLAlarmsTable=ctWanHDSLAlarmsTable, ctWanHDSLSNRDb2NetworkLoop2=ctWanHDSLSNRDb2NetworkLoop2, wanDs1ExtensionsBertTestMode=wanDs1ExtensionsBertTestMode, ctWanHDSLAlHistES2Count=ctWanHDSLAlHistES2Count, ctWanHDSLTestMode=ctWanHDSLTestMode, frDcpCircuitDlci=frDcpCircuitDlci, ds1AlarmESCount=ds1AlarmESCount, wanInterfaceEntryLexProtocolStatus=wanInterfaceEntryLexProtocolStatus, wanInterfaceEntryCompStatus=wanInterfaceEntryCompStatus, frDcpCircuitStatus=frDcpCircuitStatus, ds1AlarmGlobalBPVInterval=ds1AlarmGlobalBPVInterval, ipPQConfigGroup=ipPQConfigGroup, ctWanHDSLHLULoop2UAS15m=ctWanHDSLHLULoop2UAS15m, ctWanHDSLHRULoop1UAS15m=ctWanHDSLHRULoop1UAS15m, ctWanHDSLDb2NetworkLoop1ES15m=ctWanHDSLDb2NetworkLoop1ES15m, wanDs1ExtensionsBertRun=wanDs1ExtensionsBertRun, ctWanHDSLSNRLowDb2NetworkLoop2=ctWanHDSLSNRLowDb2NetworkLoop2, ctWanHDSLAlarmsEntry=ctWanHDSLAlarmsEntry, ctWanHDSLPerformance15mConnIndex=ctWanHDSLPerformance15mConnIndex, ctWanHDSLPerformance15mSlotIndex=ctWanHDSLPerformance15mSlotIndex, ctDDS=ctDDS, ctWanHDSLDb1NetworkLoop1ES24h=ctWanHDSLDb1NetworkLoop1ES24h, ctWanHDSLAlHistRLOSLast=ctWanHDSLAlHistRLOSLast, ctWanHDSLSNRHighHLULoop1=ctWanHDSLSNRHighHLULoop1, ds1AlarmConfigEntry=ds1AlarmConfigEntry, ctWanRs232=ctWanRs232, ddsIfIndex=ddsIfIndex, ctWanHDSLDb2NetworkLoop1UAS24h=ctWanHDSLDb2NetworkLoop1UAS24h, ctWanHDSLPulseAttenuationDb2CustomerLoop2=ctWanHDSLPulseAttenuationDb2CustomerLoop2, ctWanHDSLAlarmsBackplane=ctWanHDSLAlarmsBackplane, ctWanHDSLAlHistLOSW2Current=ctWanHDSLAlHistLOSW2Current, wanDs1ExtensionsEntryIndex=wanDs1ExtensionsEntryIndex, ctWanHDSLAlHistLOSW2Last=ctWanHDSLAlHistLOSW2Last, ctWanHDSLAlHistES1Last=ctWanHDSLAlHistES1Last, ctWanHDSLDb2NetworkLoop1UAS15m=ctWanHDSLDb2NetworkLoop1UAS15m, wanInterfaceEntryProtocol=wanInterfaceEntryProtocol, ctWanHDSLSNRDb1CustomerLoop1=ctWanHDSLSNRDb1CustomerLoop1, ctWanHDSLHLULoop1UAS24h=ctWanHDSLHLULoop1UAS24h, ctWanHDSLDb2NetworkLoop2UAS24h=ctWanHDSLDb2NetworkLoop2UAS24h, frDcpCircuitIfIndex=frDcpCircuitIfIndex, wanDs1ExtensionsBertDataStatus=wanDs1ExtensionsBertDataStatus, ctWanHDSLAlHistRLOSCurrent=ctWanHDSLAlHistRLOSCurrent, ctWanHDSLDb1CustomerLoop1UAS24h=ctWanHDSLDb1CustomerLoop1UAS24h, ctWanHDSLDb1NetworkLoop1UAS24h=ctWanHDSLDb1NetworkLoop1UAS24h, ctWanHDSLAlHistES2Last=ctWanHDSLAlHistES2Last, wanDs1ExtensionsBertSamplePeriod=wanDs1ExtensionsBertSamplePeriod, ctWanHDSLSNRLowDb2NetworkLoop1=ctWanHDSLSNRLowDb2NetworkLoop1, ctWanHDSLSNRLowHLULoop1=ctWanHDSLSNRLowHLULoop1, ctWanHDSLAlHistCleared=ctWanHDSLAlHistCleared, ctWanHDSLDb2CustomerLoop2UAS15m=ctWanHDSLDb2CustomerLoop2UAS15m, wanDs1ExtensionsLineBuildOut=wanDs1ExtensionsLineBuildOut, ctWanHDSLPulseAttenuationDb2CustomerLoop1=ctWanHDSLPulseAttenuationDb2CustomerLoop1, ctWanHDSLHRULoop2UAS24h=ctWanHDSLHRULoop2UAS24h, wanInterfaceEntryLexProtocolEnable=wanInterfaceEntryLexProtocolEnable, ds1AlarmGlobalTrapEnable=ds1AlarmGlobalTrapEnable, ctWanHDSLDs1FrameHRU=ctWanHDSLDs1FrameHRU, ctIPPQFilters=ctIPPQFilters, ds1AlarmBPVInterval=ds1AlarmBPVInterval, ctWanHDSLSNRHighDb1CustomerLoop2=ctWanHDSLSNRHighDb1CustomerLoop2, ctWanHDSLLoopbacksHLUConnIndex=ctWanHDSLLoopbacksHLUConnIndex, ctWanHDSLPerformance24hTable=ctWanHDSLPerformance24hTable, ctWanHDSLSNRLowDb2CustomerLoop2=ctWanHDSLSNRLowDb2CustomerLoop2, ctWanHDSLAlHistMargin1Current=ctWanHDSLAlHistMargin1Current)
mibBuilder.exportSymbols("CTRON-WAN-MIB", ctWanHDSLAlarmsES=ctWanHDSLAlarmsES, ctWanHDSLSNRHighDb2NetworkLoop2=ctWanHDSLSNRHighDb2NetworkLoop2, ctWanHDSLDb1CustomerLoop2UAS24h=ctWanHDSLDb1CustomerLoop2UAS24h, ctWanHDSLSNRHRULoop2=ctWanHDSLSNRHRULoop2, ctWanHDSLSNRLowDb1CustomerLoop1=ctWanHDSLSNRLowDb1CustomerLoop1, ctWanHDSLAlarmHistoryEntry=ctWanHDSLAlarmHistoryEntry, ctWanHDSLHLULoop2ES24h=ctWanHDSLHLULoop2ES24h, wanDs1ExtensionsBertCurrentResults=wanDs1ExtensionsBertCurrentResults, ctWanHDSLStatisticsEntry=ctWanHDSLStatisticsEntry, ctWanHDSLSNRDb2CustomerLoop1=ctWanHDSLSNRDb2CustomerLoop1, ctWanHDSLPerformance24hSlotIndex=ctWanHDSLPerformance24hSlotIndex, ctWanHDSLPulseAttenuationHRULoop1=ctWanHDSLPulseAttenuationHRULoop1, ctFrDcp=ctFrDcp, ctWanHDSLExt=ctWanHDSLExt, wanInterfaceEntry=wanInterfaceEntry, iPPQDelAddress=iPPQDelAddress, frDcpCircuitEnable=frDcpCircuitEnable, ctWanHDSLAlHistMargin1First=ctWanHDSLAlHistMargin1First, ctWanHDSLLoopbacksAdminType=ctWanHDSLLoopbacksAdminType, wanDs1ExtensionsBertTestTraps=wanDs1ExtensionsBertTestTraps)
