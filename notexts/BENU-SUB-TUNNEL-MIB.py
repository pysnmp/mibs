#
# PySNMP MIB module BENU-SUB-TUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/benuos/BENU-SUB-TUNNEL-MIB
# Produced by pysmi-1.1.12 at Wed Oct  9 02:16:48 2024
# On host fv-az1144-128 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
benuWAG, = mibBuilder.importSymbols("BENU-WAG-MIB", "benuWAG")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, MibIdentifier, Bits, Integer32, TimeTicks, IpAddress, Counter64, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "Bits", "Integer32", "TimeTicks", "IpAddress", "Counter64", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "Gauge32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
benuWagSubTunMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2))
benuWagSubTunMIB.setRevisions(('2015-11-13 00:00', '2015-01-02 00:00', '2012-12-12 00:00',))
if mibBuilder.loadTexts: benuWagSubTunMIB.setLastUpdated('201511130000Z')
if mibBuilder.loadTexts: benuWagSubTunMIB.setOrganization('Benu Networks,Inc')
bWagSubTunnelMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 0))
if mibBuilder.loadTexts: bWagSubTunnelMIBNotifications.setStatus('current')
bWagSubMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 1))
if mibBuilder.loadTexts: bWagSubMIBObjects.setStatus('current')
bWagSubMIBNotifObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 2))
if mibBuilder.loadTexts: bWagSubMIBNotifObjects.setStatus('current')
bWagTunnelMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 3))
if mibBuilder.loadTexts: bWagTunnelMIBObjects.setStatus('current')
bWagTunnelMIBNotifObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 4))
if mibBuilder.loadTexts: bWagTunnelMIBNotifObjects.setStatus('current')
bWagSubMaxNumOfSubscribers = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bWagSubMaxNumOfSubscribers.setStatus('current')
bWagTunMaxNumOfTunnels = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bWagTunMaxNumOfTunnels.setStatus('current')
bWagSubHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 2, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bWagSubHighThreshold.setStatus('current')
bWagSubLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 2, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bWagSubLowThreshold.setStatus('current')
bWagSubHighThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 0, 1)).setObjects(("BENU-SUB-TUNNEL-MIB", "bWagSubMaxNumOfSubscribers"), ("BENU-SUB-TUNNEL-MIB", "bWagSubHighThreshold"))
if mibBuilder.loadTexts: bWagSubHighThresholdReached.setStatus('current')
bWagSubLowThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 0, 2)).setObjects(("BENU-SUB-TUNNEL-MIB", "bWagSubMaxNumOfSubscribers"), ("BENU-SUB-TUNNEL-MIB", "bWagSubLowThreshold"))
if mibBuilder.loadTexts: bWagSubLowThresholdReached.setStatus('current')
bWagTunHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 4, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bWagTunHighThreshold.setStatus('current')
bWagTunLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 4, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bWagTunLowThreshold.setStatus('current')
bWagTunHighThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 0, 3)).setObjects(("BENU-SUB-TUNNEL-MIB", "bWagTunMaxNumOfTunnels"), ("BENU-SUB-TUNNEL-MIB", "bWagTunHighThreshold"))
if mibBuilder.loadTexts: bWagTunHighThresholdReached.setStatus('current')
bWagTunLowThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 2, 0, 4)).setObjects(("BENU-SUB-TUNNEL-MIB", "bWagTunMaxNumOfTunnels"), ("BENU-SUB-TUNNEL-MIB", "bWagTunLowThreshold"))
if mibBuilder.loadTexts: bWagTunLowThresholdReached.setStatus('current')
mibBuilder.exportSymbols("BENU-SUB-TUNNEL-MIB", bWagTunMaxNumOfTunnels=bWagTunMaxNumOfTunnels, bWagTunnelMIBObjects=bWagTunnelMIBObjects, bWagSubMIBNotifObjects=bWagSubMIBNotifObjects, bWagTunHighThreshold=bWagTunHighThreshold, bWagSubHighThreshold=bWagSubHighThreshold, bWagSubMIBObjects=bWagSubMIBObjects, bWagSubLowThreshold=bWagSubLowThreshold, bWagSubHighThresholdReached=bWagSubHighThresholdReached, bWagSubLowThresholdReached=bWagSubLowThresholdReached, PYSNMP_MODULE_ID=benuWagSubTunMIB, bWagSubMaxNumOfSubscribers=bWagSubMaxNumOfSubscribers, bWagTunLowThresholdReached=bWagTunLowThresholdReached, bWagTunLowThreshold=bWagTunLowThreshold, bWagTunHighThresholdReached=bWagTunHighThresholdReached, benuWagSubTunMIB=benuWagSubTunMIB, bWagTunnelMIBNotifObjects=bWagTunnelMIBNotifObjects, bWagSubTunnelMIBNotifications=bWagSubTunnelMIBNotifications)
