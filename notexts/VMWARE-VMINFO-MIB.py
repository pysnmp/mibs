#
# PySNMP MIB module VMWARE-VMINFO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/vmware/VMWARE-VMINFO-MIB
# Produced by pysmi-1.1.12 at Fri Jul 19 09:42:01 2024
# On host fv-az1110-714 platform Linux version 6.5.0-1023-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, Bits, TimeTicks, IpAddress, iso, Counter64, Unsigned32, Gauge32, MibIdentifier, NotificationType, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Bits", "TimeTicks", "IpAddress", "iso", "Counter64", "Unsigned32", "Gauge32", "MibIdentifier", "NotificationType", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
PhysAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "DisplayString", "TextualConvention")
vmwESXNotifications, = mibBuilder.importSymbols("VMWARE-ENV-MIB", "vmwESXNotifications")
vmwVirtMachines, vmwTraps = mibBuilder.importSymbols("VMWARE-ROOT-MIB", "vmwVirtMachines", "vmwTraps")
VmwConnectedState, = mibBuilder.importSymbols("VMWARE-TC-MIB", "VmwConnectedState")
vmwVmInfoMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6876, 2, 10))
vmwVmInfoMIB.setRevisions(('2011-09-17 00:00', '2010-06-22 00:00', '2008-10-23 00:00', '2007-12-27 00:00',))
if mibBuilder.loadTexts: vmwVmInfoMIB.setLastUpdated('201109170000Z')
if mibBuilder.loadTexts: vmwVmInfoMIB.setOrganization('VMware, Inc')
vmwVmTable = MibTable((1, 3, 6, 1, 4, 1, 6876, 2, 1), )
if mibBuilder.loadTexts: vmwVmTable.setStatus('current')
vmwVmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6876, 2, 1, 1), ).setIndexNames((0, "VMWARE-VMINFO-MIB", "vmwVmIdx"))
if mibBuilder.loadTexts: vmwVmEntry.setStatus('current')
vmwVmIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vmwVmIdx.setStatus('current')
vmwVmDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmDisplayName.setStatus('current')
vmwVmConfigFile = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmConfigFile.setStatus('current')
vmwVmGuestOS = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmGuestOS.setStatus('current')
vmwVmMemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 1, 1, 5), Integer32()).setUnits('megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmMemSize.setStatus('current')
vmwVmState = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmState.setStatus('current')
vmwVmVMID = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmVMID.setStatus('obsolete')
vmwVmGuestState = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmGuestState.setStatus('current')
vmwVmCpus = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmCpus.setStatus('current')
vmwVmUUID = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(36, 72))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmUUID.setStatus('current')
vmwVmHbaTable = MibTable((1, 3, 6, 1, 4, 1, 6876, 2, 2), )
if mibBuilder.loadTexts: vmwVmHbaTable.setStatus('current')
vmwVmHbaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6876, 2, 2, 1), ).setIndexNames((0, "VMWARE-VMINFO-MIB", "vmwHbaVmIdx"), (0, "VMWARE-VMINFO-MIB", "vmwVmHbaIdx"))
if mibBuilder.loadTexts: vmwVmHbaEntry.setStatus('current')
vmwHbaVmIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vmwHbaVmIdx.setStatus('current')
vmwVmHbaIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vmwVmHbaIdx.setStatus('current')
vmwHbaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwHbaNum.setStatus('current')
vmwHbaVirtDev = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwHbaVirtDev.setStatus('current')
vmwHbaTgtTable = MibTable((1, 3, 6, 1, 4, 1, 6876, 2, 3), )
if mibBuilder.loadTexts: vmwHbaTgtTable.setStatus('current')
vmwHbaTgtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6876, 2, 3, 1), ).setIndexNames((0, "VMWARE-VMINFO-MIB", "vmwHbaTgtVmIdx"), (0, "VMWARE-VMINFO-MIB", "vmwHbaTgtIdx"))
if mibBuilder.loadTexts: vmwHbaTgtEntry.setStatus('current')
vmwHbaTgtVmIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vmwHbaTgtVmIdx.setStatus('current')
vmwHbaTgtIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vmwHbaTgtIdx.setStatus('current')
vmwHbaTgtNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwHbaTgtNum.setStatus('current')
vmwVmNetTable = MibTable((1, 3, 6, 1, 4, 1, 6876, 2, 4), )
if mibBuilder.loadTexts: vmwVmNetTable.setStatus('current')
vmwVmNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6876, 2, 4, 1), ).setIndexNames((0, "VMWARE-VMINFO-MIB", "vmwVmNetVmIdx"), (0, "VMWARE-VMINFO-MIB", "vmwVmNetIdx"))
if mibBuilder.loadTexts: vmwVmNetEntry.setStatus('current')
vmwVmNetVmIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vmwVmNetVmIdx.setStatus('current')
vmwVmNetIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vmwVmNetIdx.setStatus('current')
vmwVmNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmNetNum.setStatus('current')
vmwVmNetName = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmNetName.setStatus('current')
vmwVmNetConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmNetConnType.setStatus('obsolete')
vmwVmNetConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 4, 1, 6), VmwConnectedState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmNetConnected.setStatus('current')
vmwVmMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 4, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwVmMAC.setStatus('current')
vmwFloppyTable = MibTable((1, 3, 6, 1, 4, 1, 6876, 2, 5), )
if mibBuilder.loadTexts: vmwFloppyTable.setStatus('current')
vmwFloppyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6876, 2, 5, 1), ).setIndexNames((0, "VMWARE-VMINFO-MIB", "vmwFdVmIdx"), (0, "VMWARE-VMINFO-MIB", "vmwFdIdx"))
if mibBuilder.loadTexts: vmwFloppyEntry.setStatus('current')
vmwFdVmIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vmwFdVmIdx.setStatus('current')
vmwFdIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vmwFdIdx.setStatus('current')
vmwFdName = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwFdName.setStatus('current')
vmwFdConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 5, 1, 4), VmwConnectedState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwFdConnected.setStatus('current')
vmwCdromTable = MibTable((1, 3, 6, 1, 4, 1, 6876, 2, 6), )
if mibBuilder.loadTexts: vmwCdromTable.setStatus('current')
vmwCdromEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6876, 2, 6, 1), ).setIndexNames((0, "VMWARE-VMINFO-MIB", "vmwCdVmIdx"), (0, "VMWARE-VMINFO-MIB", "vmwCdromIdx"))
if mibBuilder.loadTexts: vmwCdromEntry.setStatus('current')
vmwCdVmIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vmwCdVmIdx.setStatus('current')
vmwCdromIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vmwCdromIdx.setStatus('current')
vmwCdromName = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwCdromName.setStatus('current')
vmwCdromConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 2, 6, 1, 4), VmwConnectedState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwCdromConnected.setStatus('current')
vmwVmID = MibScalar((1, 3, 6, 1, 4, 1, 6876, 50, 101), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vmwVmID.setStatus('current')
vmwVmConfigFilePath = MibScalar((1, 3, 6, 1, 4, 1, 6876, 50, 102), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vmwVmConfigFilePath.setStatus('current')
vmwVmPoweredOn = NotificationType((1, 3, 6, 1, 4, 1, 6876, 4, 1, 0, 1)).setObjects(("VMWARE-VMINFO-MIB", "vmwVmID"), ("VMWARE-VMINFO-MIB", "vmwVmConfigFilePath"), ("VMWARE-VMINFO-MIB", "vmwVmDisplayName"))
if mibBuilder.loadTexts: vmwVmPoweredOn.setStatus('current')
vmwVmPoweredOff = NotificationType((1, 3, 6, 1, 4, 1, 6876, 4, 1, 0, 2)).setObjects(("VMWARE-VMINFO-MIB", "vmwVmID"), ("VMWARE-VMINFO-MIB", "vmwVmConfigFilePath"), ("VMWARE-VMINFO-MIB", "vmwVmDisplayName"))
if mibBuilder.loadTexts: vmwVmPoweredOff.setStatus('current')
vmwVmHBLost = NotificationType((1, 3, 6, 1, 4, 1, 6876, 4, 1, 0, 3)).setObjects(("VMWARE-VMINFO-MIB", "vmwVmID"), ("VMWARE-VMINFO-MIB", "vmwVmConfigFilePath"), ("VMWARE-VMINFO-MIB", "vmwVmDisplayName"))
if mibBuilder.loadTexts: vmwVmHBLost.setStatus('current')
vmwVmHBDetected = NotificationType((1, 3, 6, 1, 4, 1, 6876, 4, 1, 0, 4)).setObjects(("VMWARE-VMINFO-MIB", "vmwVmID"), ("VMWARE-VMINFO-MIB", "vmwVmConfigFilePath"), ("VMWARE-VMINFO-MIB", "vmwVmDisplayName"))
if mibBuilder.loadTexts: vmwVmHBDetected.setStatus('current')
vmwVmSuspended = NotificationType((1, 3, 6, 1, 4, 1, 6876, 4, 1, 0, 5)).setObjects(("VMWARE-VMINFO-MIB", "vmwVmID"), ("VMWARE-VMINFO-MIB", "vmwVmConfigFilePath"), ("VMWARE-VMINFO-MIB", "vmwVmDisplayName"))
if mibBuilder.loadTexts: vmwVmSuspended.setStatus('current')
vmwVmInfoMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6876, 2, 10, 2))
vmwVmInfoMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6876, 2, 10, 2, 1))
vmwVmInfoMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6876, 2, 10, 2, 2))
vmwResMIBBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 2, 10, 2, 1, 2)).setObjects(("VMWARE-VMINFO-MIB", "vmwVmInfoGroup"), ("VMWARE-VMINFO-MIB", "vmwVmInfoNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwResMIBBasicCompliance = vmwResMIBBasicCompliance.setStatus('current')
vmwVmInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6876, 2, 10, 2, 2, 1)).setObjects(("VMWARE-VMINFO-MIB", "vmwVmDisplayName"), ("VMWARE-VMINFO-MIB", "vmwVmConfigFile"), ("VMWARE-VMINFO-MIB", "vmwVmGuestOS"), ("VMWARE-VMINFO-MIB", "vmwVmMemSize"), ("VMWARE-VMINFO-MIB", "vmwVmState"), ("VMWARE-VMINFO-MIB", "vmwVmGuestState"), ("VMWARE-VMINFO-MIB", "vmwHbaNum"), ("VMWARE-VMINFO-MIB", "vmwHbaVirtDev"), ("VMWARE-VMINFO-MIB", "vmwHbaTgtNum"), ("VMWARE-VMINFO-MIB", "vmwVmNetNum"), ("VMWARE-VMINFO-MIB", "vmwVmNetName"), ("VMWARE-VMINFO-MIB", "vmwVmNetConnected"), ("VMWARE-VMINFO-MIB", "vmwVmMAC"), ("VMWARE-VMINFO-MIB", "vmwFdName"), ("VMWARE-VMINFO-MIB", "vmwFdConnected"), ("VMWARE-VMINFO-MIB", "vmwCdromName"), ("VMWARE-VMINFO-MIB", "vmwCdromConnected"), ("VMWARE-VMINFO-MIB", "vmwVmID"), ("VMWARE-VMINFO-MIB", "vmwVmConfigFilePath"), ("VMWARE-VMINFO-MIB", "vmwVmCpus"), ("VMWARE-VMINFO-MIB", "vmwVmUUID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwVmInfoGroup = vmwVmInfoGroup.setStatus('current')
vmwVmInfoNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6876, 2, 10, 2, 2, 2)).setObjects(("VMWARE-VMINFO-MIB", "vmwVmPoweredOn"), ("VMWARE-VMINFO-MIB", "vmwVmPoweredOff"), ("VMWARE-VMINFO-MIB", "vmwVmHBLost"), ("VMWARE-VMINFO-MIB", "vmwVmHBDetected"), ("VMWARE-VMINFO-MIB", "vmwVmSuspended"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwVmInfoNotificationGroup = vmwVmInfoNotificationGroup.setStatus('current')
vmwVmObsoleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6876, 2, 10, 2, 2, 3)).setObjects(("VMWARE-VMINFO-MIB", "vmwVmVMID"), ("VMWARE-VMINFO-MIB", "vmwVmNetConnType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwVmObsoleteGroup = vmwVmObsoleteGroup.setStatus('obsolete')
mibBuilder.exportSymbols("VMWARE-VMINFO-MIB", vmwVmMemSize=vmwVmMemSize, vmwCdVmIdx=vmwCdVmIdx, vmwCdromIdx=vmwCdromIdx, vmwFdName=vmwFdName, vmwVmGuestOS=vmwVmGuestOS, vmwHbaNum=vmwHbaNum, vmwVmNetTable=vmwVmNetTable, vmwFdConnected=vmwFdConnected, vmwCdromEntry=vmwCdromEntry, vmwVmID=vmwVmID, vmwHbaTgtVmIdx=vmwHbaTgtVmIdx, vmwVmHbaTable=vmwVmHbaTable, vmwVmNetEntry=vmwVmNetEntry, vmwHbaVmIdx=vmwHbaVmIdx, vmwVmNetConnType=vmwVmNetConnType, vmwVmHbaEntry=vmwVmHbaEntry, vmwVmInfoMIB=vmwVmInfoMIB, vmwHbaVirtDev=vmwHbaVirtDev, vmwHbaTgtIdx=vmwHbaTgtIdx, vmwVmNetName=vmwVmNetName, vmwCdromTable=vmwCdromTable, vmwVmPoweredOn=vmwVmPoweredOn, vmwFdVmIdx=vmwFdVmIdx, vmwVmInfoMIBConformance=vmwVmInfoMIBConformance, vmwCdromConnected=vmwCdromConnected, vmwVmInfoNotificationGroup=vmwVmInfoNotificationGroup, vmwVmPoweredOff=vmwVmPoweredOff, vmwVmMAC=vmwVmMAC, vmwVmNetVmIdx=vmwVmNetVmIdx, vmwVmUUID=vmwVmUUID, vmwVmIdx=vmwVmIdx, PYSNMP_MODULE_ID=vmwVmInfoMIB, vmwVmInfoMIBGroups=vmwVmInfoMIBGroups, vmwVmNetIdx=vmwVmNetIdx, vmwResMIBBasicCompliance=vmwResMIBBasicCompliance, vmwVmCpus=vmwVmCpus, vmwVmDisplayName=vmwVmDisplayName, vmwVmTable=vmwVmTable, vmwHbaTgtNum=vmwHbaTgtNum, vmwCdromName=vmwCdromName, vmwVmEntry=vmwVmEntry, vmwVmNetNum=vmwVmNetNum, vmwVmConfigFilePath=vmwVmConfigFilePath, vmwVmHBLost=vmwVmHBLost, vmwVmConfigFile=vmwVmConfigFile, vmwFloppyTable=vmwFloppyTable, vmwVmInfoMIBCompliances=vmwVmInfoMIBCompliances, vmwFloppyEntry=vmwFloppyEntry, vmwHbaTgtTable=vmwHbaTgtTable, vmwVmInfoGroup=vmwVmInfoGroup, vmwFdIdx=vmwFdIdx, vmwVmGuestState=vmwVmGuestState, vmwVmObsoleteGroup=vmwVmObsoleteGroup, vmwVmHBDetected=vmwVmHBDetected, vmwVmSuspended=vmwVmSuspended, vmwVmState=vmwVmState, vmwVmVMID=vmwVmVMID, vmwVmNetConnected=vmwVmNetConnected, vmwHbaTgtEntry=vmwHbaTgtEntry, vmwVmHbaIdx=vmwVmHbaIdx)
