#
# PySNMP MIB module EKINOPS-MGNT2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/ekinops/EKINOPS-MGNT2-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 11:45:13 2024
# On host fv-az1427-842 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
EkiLoadState, EkiApiState, EkiLoadGWSW, EkiProtocol, EkiState, ekinops, EkiLoadPermutMethod, EkiOnOff, EkiLoadPermutMode, EkiSynchroMode = mibBuilder.importSymbols("EKINOPS-MIB", "EkiLoadState", "EkiApiState", "EkiLoadGWSW", "EkiProtocol", "EkiState", "ekinops", "EkiLoadPermutMethod", "EkiOnOff", "EkiLoadPermutMode", "EkiSynchroMode")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Integer32, TimeTicks, Counter32, ModuleIdentity, iso, Counter64, IpAddress, Gauge32, Bits, ObjectIdentity, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "TimeTicks", "Counter32", "ModuleIdentity", "iso", "Counter64", "IpAddress", "Gauge32", "Bits", "ObjectIdentity", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
mgnt2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 20044, 7))
mgnt2.setRevisions(('2005-11-24 00:00', '2006-01-24 00:00', '2006-03-10 00:00', '2006-05-10 00:00', '2006-05-23 00:00', '2006-09-28 00:00', '2006-12-13 00:00', '2007-02-09 00:00', '2007-04-24 00:00', '2007-06-19 00:00', '2007-08-27 00:00', '2007-11-27 00:00', '2008-05-20 00:00', '2008-06-18 00:00', '2008-08-18 00:00', '2008-10-07 00:00', '2008-11-19 00:00', '2009-01-05 00:00', '2009-12-15 00:00', '2010-01-04 00:00', '2010-02-16 00:00', '2010-07-16 00:00', '2010-10-27 00:00', '2011-03-17 00:00', '2011-04-07 00:00', '2011-04-13 00:00', '2011-05-27 00:00', '2011-06-08 00:00', '2011-06-30 00:00', '2011-09-12 00:00', '2012-02-08 00:00', '2012-03-19 00:00', '2012-07-16 00:00', '2013-05-28 00:00', '2013-05-30 00:00', '2013-08-29 00:00', '2013-09-04 00:00', '2013-09-11 00:00', '2013-11-06 00:00', '2014-07-30 00:00', '2014-09-01 00:00', '2015-02-11 00:00', '2015-04-01 00:00', '2015-04-14 00:00', '2015-04-14 00:00', '2015-10-09 00:00', '2015-11-05 00:00', '2016-05-27 00:00', '2016-06-15 00:00', '2016-10-12 00:00', '2017-01-10 00:00',))
if mibBuilder.loadTexts: mgnt2.setLastUpdated('201701100000Z')
if mibBuilder.loadTexts: mgnt2.setOrganization('Ekinops')
class Mgnt2CliAccessValues(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("noCliByEthernet", 0), ("cliBySSH", 1), ("cliByTelnet", 2))

class Mgnt2CraftAccessValues(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("noCraftAccess", 0), ("craftEnable", 1), ("craftEnableHttps", 2))

class Mgnt2DccAccessValues(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("mode1Slots2s4s6s8s10", 0), ("mode2Slots2s6s10s14s18", 1))

class Mgnt2TrapModeValues(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("syntheticTrap", 0), ("detailedTrap", 1), ("nmsTrap", 2))

class Mgnt2AckMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("modeA", 1), ("modeB", 2))

class Mgnt2PerfResyncValues(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("perfResyncIdle", 1), ("perfResyncSync", 2), ("perfResyncReady", 3), ("perfResyncDelete", 4))

class Mgnt2NetMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("switch", 1), ("gateway", 2))

class Mgnt2MasterEthMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("static", 1), ("dhcp", 2))

class Mgnt2SubnetEthMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("static", 1), ("dhcp", 2))

class Mgnt2AuthTypeValues(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("authLocal", 0), ("authRADIUS", 1), ("authLDAP", 2))

class Mgnt2LogFileMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("disabled", 0), ("linear", 1), ("rotary", 2))

class Mgnt2SlotStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("slotEmpty", 0), ("pmReady", 1), ("pmReset", 2), ("pmLoad", 3), ("pmPassive", 4), ("pmUnknown", 5), ("pmNotReady", 6))

mgnt2SNMPAgentData = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 1))
mgnt2Hardware = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2))
mgnt2Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 3))
mgnt2SoftwareManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 4))
mgnt2ConfigManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 5))
mgnt2RemoteInventory = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 6))
mgnt2ErrorCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 7))
mgnt2Perf = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 8))
mgnt2IPmanagment = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1))
mgnt2GigmManagerIpAddressTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1), )
if mibBuilder.loadTexts: mgnt2GigmManagerIpAddressTable.setStatus('current')
mgnt2GigmManagerIpAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2GigmManagerIpIndex"))
if mibBuilder.loadTexts: mgnt2GigmManagerIpAddressEntry.setStatus('current')
mgnt2GigmManagerIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerIpIndex.setStatus('current')
mgnt2GigmManagerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerIpAddress.setStatus('current')
mgnt2GigmManagerIpAddressTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerIpAddressTableRowStatus.setStatus('current')
mgnt2GigmManagerTrapPort = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerTrapPort.setStatus('current')
mgnt2GigmManagerEnableCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 5), EkiOnOff()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerEnableCtrl.setStatus('current')
mgnt2GigmManagerEnableConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 6), EkiOnOff()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerEnableConfig.setStatus('current')
mgnt2GigmManagerEnableEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 7), EkiOnOff()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerEnableEvent.setStatus('current')
mgnt2GigmManagerEnableAlarmCrit = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 8), EkiOnOff()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerEnableAlarmCrit.setStatus('current')
mgnt2GigmManagerEnableAlarmMajor = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 9), EkiOnOff()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerEnableAlarmMajor.setStatus('current')
mgnt2GigmManagerEnableAlarmMinor = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 10), EkiOnOff()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerEnableAlarmMinor.setStatus('current')
mgnt2GigmManagerRegistrationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerRegistrationTimeout.setStatus('current')
mgnt2GigmManagerEnableAlarmWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 12), EkiOnOff()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerEnableAlarmWarning.setStatus('current')
mgnt2GigmManagerEnableAlarmIndeterminate = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 1, 1, 13), EkiOnOff()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmManagerEnableAlarmIndeterminate.setStatus('current')
mgnt2GigmBoardIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmBoardIpAddress.setStatus('current')
mgnt2GigmIPAddresByDHCP = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 3), EkiState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmIPAddresByDHCP.setStatus('current')
mgnt2GigmNetmask = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmNetmask.setStatus('current')
mgnt2GigmGatewayAddressTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 5), )
if mibBuilder.loadTexts: mgnt2GigmGatewayAddressTable.setStatus('current')
mgnt2GigmGatewayAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 5, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2GigmGatewayIndex"))
if mibBuilder.loadTexts: mgnt2GigmGatewayAddressEntry.setStatus('current')
mgnt2GigmGatewayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmGatewayIndex.setStatus('current')
mgnt2GigmGatewayAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 5, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmGatewayAddress.setStatus('current')
mgnt2GigmGatewayOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 5, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgnt2GigmGatewayOrder.setStatus('current')
mgnt2GigmSyslog = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmSyslog.setStatus('current')
mgnt2GigmNtpServer = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmNtpServer.setStatus('current')
mgnt2GigmNodeIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmNodeIpAddress.setStatus('current')
mgnt2ModulesManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2))
mgnt2GigmBoardTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1), )
if mibBuilder.loadTexts: mgnt2GigmBoardTable.setStatus('current')
mgnt2GigmBoardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2IndexBoards"))
if mibBuilder.loadTexts: mgnt2GigmBoardEntry.setStatus('current')
mgnt2IndexBoards = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2IndexBoards.setStatus('current')
mgnt2Position = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2Position.setStatus('current')
mgnt2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2Name.setStatus('current')
mgnt2PortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2PortNumber.setStatus('current')
mgnt2LineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2LineNumber.setStatus('current')
mgnt2GroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2GroupNumber.setStatus('current')
mgnt2RootOIDInventory = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1, 1, 7), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2RootOIDInventory.setStatus('current')
mgnt2SlotOcc = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2SlotOcc.setStatus('current')
mgnt2SubFunctionLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2SubFunctionLabel.setStatus('current')
mgnt2SlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 1, 1, 10), Mgnt2SlotStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2SlotStatus.setStatus('current')
mgnt2GigmSelectedBoard = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmSelectedBoard.setStatus('current')
mgnt2GigmMibsTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 1, 4), )
if mibBuilder.loadTexts: mgnt2GigmMibsTable.setStatus('obsolete')
mgnt2GigmMibsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 1, 4, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2IndexMibs"))
if mibBuilder.loadTexts: mgnt2GigmMibsEntry.setStatus('obsolete')
mgnt2IndexMibs = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2IndexMibs.setStatus('obsolete')
mgnt2MibName = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2MibName.setStatus('obsolete')
mgnt2MibPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 1, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2MibPartNumber.setStatus('obsolete')
mgnt2GigmLogicalName = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmLogicalName.setStatus('current')
mgnt2GigmEqptType = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2GigmEqptType.setStatus('current')
mgnt2GigmTrapCount = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 1, 7))
mgnt2GigmTrapCounter = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2GigmTrapCounter.setStatus('current')
mgnt2GigmResetTrapCounter = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 7, 2), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmResetTrapCounter.setStatus('current')
mgnt2GigmSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 1, 8))
mgnt2GigmRoCommunity = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 8, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmRoCommunity.setStatus('current')
mgnt2GigmRwCommunity = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 8, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmRwCommunity.setStatus('current')
mgnt2GigmTrapCommunity = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 8, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmTrapCommunity.setStatus('current')
mgnt2GigmTime = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 1, 9))
mgnt2GigmCurrentHour = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmCurrentHour.setStatus('current')
mgnt2GigmCurrentMinute = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmCurrentMinute.setStatus('current')
mgnt2GigmCurrentYear = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 9, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1970, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmCurrentYear.setStatus('current')
mgnt2GigmCurrentMonth = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 9, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmCurrentMonth.setStatus('current')
mgnt2GigmCurrentDay = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 9, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmCurrentDay.setStatus('current')
mgnt2Authentication = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10))
mgnt2GigmRadiusServer = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmRadiusServer.setStatus('current')
mgnt2GigmRadiusPort = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmRadiusPort.setStatus('current')
mgnt2GigmRadiusSecret = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmRadiusSecret.setStatus('current')
mgnt2GigmLdapHost = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmLdapHost.setStatus('deprecated')
mgnt2GigmLdapPort = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmLdapPort.setStatus('deprecated')
mgnt2GigmLdapBase = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmLdapBase.setStatus('deprecated')
mgnt2GigmLdapVersion = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmLdapVersion.setStatus('deprecated')
mgnt2GigmLdapBindDn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmLdapBindDn.setStatus('deprecated')
mgnt2GigmLdapBindPw = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmLdapBindPw.setStatus('deprecated')
mgnt2GigmLdapScope = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmLdapScope.setStatus('deprecated')
mgnt2GigmLdapPamPasswd = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmLdapPamPasswd.setStatus('deprecated')
mgnt2GigmAuthenticationType = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 1, 10, 12), Mgnt2AuthTypeValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmAuthenticationType.setStatus('current')
mgnt2DwlUploadingTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 4, 1), )
if mibBuilder.loadTexts: mgnt2DwlUploadingTable.setStatus('deprecated')
mgnt2DwlUploadingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 4, 1, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2IndexUpload"))
if mibBuilder.loadTexts: mgnt2DwlUploadingEntry.setStatus('deprecated')
mgnt2IndexUpload = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2IndexUpload.setStatus('deprecated')
mgnt2DwlUploadFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2DwlUploadFileName.setStatus('deprecated')
mgnt2ImmediateReplacement = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 1, 1, 3), EkiState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2ImmediateReplacement.setStatus('deprecated')
mgnt2FileUpload = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 1, 1, 4), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2FileUpload.setStatus('deprecated')
mgnt2DeletePackageFromRam = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 1, 1, 5), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2DeletePackageFromRam.setStatus('deprecated')
mgnt2FlashingInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 1, 1, 6), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2FlashingInProgress.setStatus('deprecated')
mgnt2DwlPackageTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 4, 2), )
if mibBuilder.loadTexts: mgnt2DwlPackageTable.setStatus('deprecated')
mgnt2DwlPackageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 4, 2, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2IndexPackage"))
if mibBuilder.loadTexts: mgnt2DwlPackageEntry.setStatus('deprecated')
mgnt2IndexPackage = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2IndexPackage.setStatus('deprecated')
mgnt2DwlPackageFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2DwlPackageFileName.setStatus('deprecated')
mgnt2ExtractedPack = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 2, 1, 3), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2ExtractedPack.setStatus('deprecated')
mgnt2SwitchTo = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 2, 1, 4), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2SwitchTo.setStatus('deprecated')
mgnt2Immediate = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 2, 1, 5), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2Immediate.setStatus('deprecated')
mgnt2DeletePackageFromFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 2, 1, 6), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2DeletePackageFromFlash.setStatus('deprecated')
mgnt2PackageExtractionInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 2, 1, 7), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2PackageExtractionInProgress.setStatus('deprecated')
mgnt2DwlUploadingTableUpdate = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 4, 3), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2DwlUploadingTableUpdate.setStatus('deprecated')
mgnt2LoadPMTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4), )
if mibBuilder.loadTexts: mgnt2LoadPMTable.setStatus('deprecated')
mgnt2LoadPMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2LoadPMIndex"))
if mibBuilder.loadTexts: mgnt2LoadPMEntry.setStatus('deprecated')
mgnt2LoadPMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2LoadPMIndex.setStatus('deprecated')
mgnt2LoadFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2LoadFileName.setStatus('deprecated')
mgnt2LoadFileType = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1, 3), EkiLoadGWSW()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2LoadFileType.setStatus('deprecated')
mgnt2LoadState = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1, 4), EkiLoadState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2LoadState.setStatus('deprecated')
mgnt2LoadModuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2LoadModuleNumber.setStatus('deprecated')
mgnt2LoadResetMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1, 6), EkiLoadPermutMethod()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2LoadResetMethod.setStatus('deprecated')
mgnt2LoadResetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1, 7), EkiLoadPermutMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2LoadResetMode.setStatus('deprecated')
mgnt2LoadBankNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2LoadBankNumber.setStatus('deprecated')
mgnt2LoadDownloadProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2LoadDownloadProgress.setStatus('deprecated')
mgnt2LoadTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1, 10), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2LoadTransfer.setStatus('deprecated')
mgnt2LoadDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 4, 1, 11), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2LoadDelete.setStatus('deprecated')
mgnt2LoadPMTableUpdate = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 4, 5), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2LoadPMTableUpdate.setStatus('deprecated')
mgnt2DwlEkicraftPkgTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 4, 6), )
if mibBuilder.loadTexts: mgnt2DwlEkicraftPkgTable.setStatus('deprecated')
mgnt2DwlEkicraftPkgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 4, 6, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2IndexEkicraftPkg"))
if mibBuilder.loadTexts: mgnt2DwlEkicraftPkgEntry.setStatus('deprecated')
mgnt2IndexEkicraftPkg = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2IndexEkicraftPkg.setStatus('deprecated')
mgnt2DwlEkicraftPkgFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2DwlEkicraftPkgFileName.setStatus('deprecated')
mgnt2DwlEkicraftExtractedPack = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 6, 1, 3), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2DwlEkicraftExtractedPack.setStatus('deprecated')
mgnt2DwlEkicraftSwitchTo = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 6, 1, 4), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2DwlEkicraftSwitchTo.setStatus('deprecated')
mgnt2DwlEkicraftImmediate = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 6, 1, 5), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2DwlEkicraftImmediate.setStatus('deprecated')
mgnt2DeleteEkicraftPkgFromFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 6, 1, 6), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2DeleteEkicraftPkgFromFlash.setStatus('deprecated')
mgnt2EkicraftPkgExtractionInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 4, 6, 1, 7), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2EkicraftPkgExtractionInProgress.setStatus('deprecated')
mgnt2CnfUploadConfigFilesTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 5, 1), )
if mibBuilder.loadTexts: mgnt2CnfUploadConfigFilesTable.setStatus('deprecated')
mgnt2CnfUploadConfigFilesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 5, 1, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2CnfUploadConfigIndex"))
if mibBuilder.loadTexts: mgnt2CnfUploadConfigFilesEntry.setStatus('deprecated')
mgnt2CnfUploadConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2CnfUploadConfigIndex.setStatus('deprecated')
mgnt2CnfConfigFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2CnfConfigFileName.setStatus('deprecated')
mgnt2CnfConfigSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CnfConfigSlot.setStatus('deprecated')
mgnt2CnfConfigUpload = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 1, 1, 4), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CnfConfigUpload.setStatus('deprecated')
mgnt2CnfDeleteConfigFile = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 1, 1, 5), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CnfDeleteConfigFile.setStatus('deprecated')
mgnt2CnfManageConfigFilesTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 5, 2), )
if mibBuilder.loadTexts: mgnt2CnfManageConfigFilesTable.setStatus('deprecated')
mgnt2CnfManageConfigFilesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 5, 2, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2CnfManageConfigIndex"))
if mibBuilder.loadTexts: mgnt2CnfManageConfigFilesEntry.setStatus('deprecated')
mgnt2CnfManageConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2CnfManageConfigIndex.setStatus('deprecated')
mgnt2CnfManageConfigFileID = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CnfManageConfigFileID.setStatus('deprecated')
mgnt2CnfManageConfigFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CnfManageConfigFileName.setStatus('deprecated')
mgnt2CnfModuleSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CnfModuleSlotNumber.setStatus('deprecated')
mgnt2CnfBackupConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 2, 1, 5), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CnfBackupConfig.setStatus('deprecated')
mgnt2CnfRestoreConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 2, 1, 6), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CnfRestoreConfig.setStatus('deprecated')
mgnt2CnfExportConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 2, 1, 7), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CnfExportConfig.setStatus('deprecated')
mgnt2CnfDeleteConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 5, 2, 1, 8), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CnfDeleteConfig.setStatus('deprecated')
mgnt2RinvHwPlatform = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 6, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2RinvHwPlatform.setStatus('current')
mgnt2RinvSoftwarePackage = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 6, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2RinvSoftwarePackage.setStatus('current')
mgnt2RinvGateware = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 6, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2RinvGateware.setStatus('current')
mgnt2RinvAgent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 6, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2RinvAgent.setStatus('current')
mgnt2RinvCraft = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 6, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2RinvCraft.setStatus('current')
mgnt2RinvLinux = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 6, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2RinvLinux.setStatus('current')
class EkiPlugInState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("absent", 0), ("loaded", 1), ("versionError", 2), ("symbolError", 3))

mgnt2GigmPlugInTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 6, 7), )
if mibBuilder.loadTexts: mgnt2GigmPlugInTable.setStatus('current')
mgnt2GigmPlugInEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 6, 7, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2IndexPlugIns"))
if mibBuilder.loadTexts: mgnt2GigmPlugInEntry.setStatus('current')
mgnt2IndexPlugIns = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 6, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2IndexPlugIns.setStatus('current')
mgnt2PlugInRinv = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 6, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2PlugInRinv.setStatus('current')
mgnt2PollingPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 6, 7, 1, 3), EkiPlugInState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2PollingPresent.setStatus('current')
mgnt2SnmpPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 6, 7, 1, 4), EkiPlugInState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2SnmpPresent.setStatus('current')
mgnt2RinvBackpanel = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 6, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2RinvBackpanel.setStatus('current')
mgnt2RinvFan = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 6, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2RinvFan.setStatus('current')
mgnt2RinvUboot = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 6, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2RinvUboot.setStatus('current')
mgnt2GigmErrorCounterTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 7, 1), )
if mibBuilder.loadTexts: mgnt2GigmErrorCounterTable.setStatus('current')
mgnt2GigmErrorCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 7, 1, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2IndexErrorCounter"))
if mibBuilder.loadTexts: mgnt2GigmErrorCounterEntry.setStatus('current')
mgnt2IndexErrorCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2IndexErrorCounter.setStatus('current')
mgnt2ErrorCounterSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2ErrorCounterSlotNumber.setStatus('current')
mgnt2ErrorCounterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2ErrorCounterValue.setStatus('current')
mgnt2GigmResetErrorCounters = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 7, 2), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmResetErrorCounters.setStatus('current')
mgnt2PerfCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 20044, 7, 8, 1), )
if mibBuilder.loadTexts: mgnt2PerfCapabilityTable.setStatus('current')
mgnt2PerfCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20044, 7, 8, 1, 1), ).setIndexNames((0, "EKINOPS-MGNT2-MIB", "mgnt2PerfCapIndexBoards"))
if mibBuilder.loadTexts: mgnt2PerfCapabilityEntry.setStatus('current')
mgnt2PerfCapIndexBoards = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2PerfCapIndexBoards.setStatus('current')
mgnt2PerfCapPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2PerfCapPosition.setStatus('current')
mgnt2PerfCapName = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 8, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2PerfCapName.setStatus('current')
mgnt2PerfCapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 8, 1, 1, 4), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2PerfCapStatus.setStatus('current')
mgnt2PerfCapOidEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 20044, 7, 8, 1, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2PerfCapOidEnable.setStatus('current')
mgnt2GigmPerf15minSync = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 8, 2), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmPerf15minSync.setStatus('current')
mgnt2GigmPerf24hSync = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 8, 3), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2GigmPerf24hSync.setStatus('current')
mgnt2PerfResyncNMS = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 8, 4), Mgnt2PerfResyncValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2PerfResyncNMS.setStatus('current')
mgnt2alarms = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1))
mgnt2controls = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2))
mgnt2config = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3))
mgnt2AlmsynthAlm0 = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 0))
mgnt2AlmMgntDefFuseB = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 0, 16), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmMgntDefFuseB.setStatus('current')
mgnt2AlmMgntDefFuseA = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 0, 15), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmMgntDefFuseA.setStatus('current')
mgnt2AlmDef48b = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 0, 12), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmDef48b.setStatus('current')
mgnt2AlmDef48a = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 0, 11), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmDef48a.setStatus('current')
mgnt2AlmFansFailure = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 0, 10), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFansFailure.setStatus('current')
mgnt2AlmAbsFailure = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 0, 9), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmAbsFailure.setStatus('current')
mgnt2AlmsynthAlm1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 1))
mgnt2AlmAcknowledge = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 1, 16), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmAcknowledge.setStatus('current')
mgnt2AlmCritVisual = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 1, 3), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmCritVisual.setStatus('current')
mgnt2AlmUrgVisual = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 1, 2), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmUrgVisual.setStatus('current')
mgnt2AlmNurgVisual = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 1, 1), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmNurgVisual.setStatus('current')
mgnt2AlmboardMgmntSet1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16))
mgnt2AlmPmFanAbsent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 14), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmFanAbsent.setStatus('current')
mgnt2AlmPmSlot11Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 12), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot11Absent.setStatus('current')
mgnt2AlmPmSlot10Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 11), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot10Absent.setStatus('current')
mgnt2AlmPmSlot9Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 10), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot9Absent.setStatus('current')
mgnt2AlmPmSlot8Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 9), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot8Absent.setStatus('current')
mgnt2AlmPmSlot7Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 8), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot7Absent.setStatus('current')
mgnt2AlmPmSlot6Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 7), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot6Absent.setStatus('current')
mgnt2AlmPmSlot5Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 6), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot5Absent.setStatus('current')
mgnt2AlmPmSlot4Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 5), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot4Absent.setStatus('current')
mgnt2AlmPmSlot3Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 4), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot3Absent.setStatus('current')
mgnt2AlmPmSlot2Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 3), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot2Absent.setStatus('current')
mgnt2AlmPmSlot1Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 16, 2), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot1Absent.setStatus('current')
mgnt2AlmboardMgmntSet2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 17))
mgnt2AlmPmSlot20Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 17, 9), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot20Absent.setStatus('current')
mgnt2AlmPmSlot19Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 17, 8), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot19Absent.setStatus('current')
mgnt2AlmPmSlot18Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 17, 7), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot18Absent.setStatus('current')
mgnt2AlmPmSlot17Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 17, 6), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot17Absent.setStatus('current')
mgnt2AlmPmSlot16Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 17, 5), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot16Absent.setStatus('current')
mgnt2AlmPmSlot15Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 17, 4), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot15Absent.setStatus('current')
mgnt2AlmPmSlot14Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 17, 3), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot14Absent.setStatus('current')
mgnt2AlmPmSlot13Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 17, 2), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot13Absent.setStatus('current')
mgnt2AlmPmSlot12Absent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 17, 1), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPmSlot12Absent.setStatus('current')
mgnt2AlmfanMgmnt = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 20))
mgnt2AlmFanFilterAbsent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 20, 16), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFanFilterAbsent.setStatus('current')
mgnt2AlmPbFan6Fail = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 20, 7), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPbFan6Fail.setStatus('current')
mgnt2AlmPbFan5Fail = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 20, 6), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPbFan5Fail.setStatus('current')
mgnt2AlmPbFan4Fail = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 20, 5), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPbFan4Fail.setStatus('current')
mgnt2AlmPbFan3Fail = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 20, 4), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPbFan3Fail.setStatus('current')
mgnt2AlmPbFan2Fail = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 20, 3), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPbFan2Fail.setStatus('current')
mgnt2AlmPbFan1Fail = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 20, 2), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPbFan1Fail.setStatus('current')
mgnt2AlmfanPwrMgmnt = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 24))
mgnt2AlmFanDefFuseB = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 24, 16), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFanDefFuseB.setStatus('current')
mgnt2AlmFanDefFuseA = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 24, 15), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFanDefFuseA.setStatus('current')
mgnt2AlmFanPwrFail1 = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 24, 13), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFanPwrFail1.setStatus('current')
mgnt2AlmFanPwrProtOn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 24, 12), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFanPwrProtOn.setStatus('current')
mgnt2AlmremoveablefanModuleFail = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 25))
mgnt2AlmFan4ModuleAbsent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 25, 4), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFan4ModuleAbsent.setStatus('current')
mgnt2AlmFan3ModuleAbsent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 25, 3), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFan3ModuleAbsent.setStatus('current')
mgnt2AlmFan2ModuleAbsent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 25, 2), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFan2ModuleAbsent.setStatus('current')
mgnt2AlmFan1ModuleAbsent = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 25, 1), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFan1ModuleAbsent.setStatus('current')
mgnt2AlmremoveableFanModuleMgmnt = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 26))
mgnt2AlmFan4ModuleFail = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 26, 4), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFan4ModuleFail.setStatus('current')
mgnt2AlmFan3ModuleFail = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 26, 3), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFan3ModuleFail.setStatus('current')
mgnt2AlmFan2ModuleFail = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 26, 2), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFan2ModuleFail.setStatus('current')
mgnt2AlmFan1ModuleFail = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 26, 1), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFan1ModuleFail.setStatus('current')
mgnt2AlmswAlarm1 = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 32))
mgnt2AlmPollingManagerError = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 32, 3), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmPollingManagerError.setStatus('current')
mgnt2AlmFifoCmdError = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 32, 2), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmFifoCmdError.setStatus('current')
mgnt2AlmApiError = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 32, 1), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmApiError.setStatus('current')
mgnt2AlmapiErrorCode = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmapiErrorCode.setStatus('current')
mgnt2AlmlogMgmnt = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 34))
mgnt2AlmLog80Full = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 34, 2), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmLog80Full.setStatus('current')
mgnt2AlmLogFileFull = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 34, 1), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmLogFileFull.setStatus('current')
mgnt2AlmntpSyncLoss = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 35))
mgnt2AlmCpuTempOverRange = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 35, 2), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmCpuTempOverRange.setStatus('current')
mgnt2AlmNtpSyncLoss = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 1, 35, 1), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2AlmNtpSyncLoss.setStatus('current')
mgnt2Ctrlsynth5 = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 5))
mgnt2CtrlChassisColdReset = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 5, 4), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CtrlChassisColdReset.setStatus('current')
mgnt2CtrlChassisWarmReset = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 5, 3), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CtrlChassisWarmReset.setStatus('current')
mgnt2CtrlChassisShutdown = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 5, 2), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CtrlChassisShutdown.setStatus('current')
mgnt2CtrltestLed = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 18))
mgnt2CtrlLedOff = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 18, 3), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CtrlLedOff.setStatus('current')
mgnt2CtrlRedLed = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 18, 2), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CtrlRedLed.setStatus('current')
mgnt2CtrlGreenLed = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 18, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CtrlGreenLed.setStatus('current')
mgnt2CtrllogFile = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 19))
mgnt2CtrlLogFileReset = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 19, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CtrlLogFileReset.setStatus('current')
mgnt2CtrlmgntSaveConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 23))
mgnt2CtrlSaveConfig = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 23, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CtrlSaveConfig.setStatus('current')
mgnt2CtrlmgntGetGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 24))
mgnt2CtrlGetGlobalConfig = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 24, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CtrlGetGlobalConfig.setStatus('current')
mgnt2CtrlmgntPutGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 25))
mgnt2CtrlPutGlobalConfig = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 25, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CtrlPutGlobalConfig.setStatus('current')
mgnt2CtrlmgntAcknowledge = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 26))
mgnt2CtrlAcknowledge = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 2, 26, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CtrlAcknowledge.setStatus('current')
mgnt2CfgethPort2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 17))
mgnt2CfgChassisEthernetSplit = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 17, 2), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgChassisEthernetSplit.setStatus('current')
mgnt2CfgEthPort2Disable = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 17, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgEthPort2Disable.setStatus('current')
mgnt2CfgmgntDccEnable = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 18), Mgnt2DccAccessValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgmgntDccEnable.setStatus('current')
mgnt2CfgpmTrapEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 20))
mgnt2CfgPmConfigTrapEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 20, 6), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgPmConfigTrapEn.setStatus('current')
mgnt2CfgPmControlTrapEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 20, 5), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgPmControlTrapEn.setStatus('current')
mgnt2CfgPmMinorTrapEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 20, 3), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgPmMinorTrapEn.setStatus('current')
mgnt2CfgPmMajorTrapEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 20, 2), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgPmMajorTrapEn.setStatus('current')
mgnt2CfgPmCriticalTrapEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 20, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgPmCriticalTrapEn.setStatus('current')
mgnt2CfgmgntTrapEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 21))
mgnt2CfgMgntEventTrapEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 21, 7), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgMgntEventTrapEn.setStatus('current')
mgnt2CfgMgntConfigTrapEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 21, 6), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgMgntConfigTrapEn.setStatus('current')
mgnt2CfgMgntControlTrapEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 21, 5), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgMgntControlTrapEn.setStatus('current')
mgnt2CfgMgntMinorTrapEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 21, 3), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgMgntMinorTrapEn.setStatus('current')
mgnt2CfgMgntMajorTrapEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 21, 2), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgMgntMajorTrapEn.setStatus('current')
mgnt2CfgMgntCriticalTrapEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 21, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgMgntCriticalTrapEn.setStatus('current')
mgnt2CfgmgntTrapMode = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 22), Mgnt2TrapModeValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgmgntTrapMode.setStatus('current')
mgnt2CfgsyslogEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 23))
mgnt2CfgSyslogAlarmEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 23, 4), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgSyslogAlarmEn.setStatus('current')
mgnt2CfgSyslogCtrlEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 23, 3), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgSyslogCtrlEn.setStatus('current')
mgnt2CfgSyslogConfigEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 23, 2), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgSyslogConfigEn.setStatus('current')
mgnt2CfgSyslogEventEn = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 23, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgSyslogEventEn.setStatus('current')
mgnt2CfgntpTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgntpTimeZone.setStatus('current')
mgnt2CfgpmConfEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 25))
mgnt2CfgPmRestoreEnable = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 25, 2), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgPmRestoreEnable.setStatus('current')
mgnt2CfgPmBackupEnable = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 25, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgPmBackupEnable.setStatus('current')
mgnt2CfginactivityTimeout = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfginactivityTimeout.setStatus('current')
mgnt2CfgcliAccess = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 27), Mgnt2CliAccessValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgcliAccess.setStatus('current')
mgnt2CfgcraftAccess = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 28), Mgnt2CraftAccessValues()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgcraftAccess.setStatus('current')
mgnt2CfgperfModes1 = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 29), EkiSynchroMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgperfModes1.setStatus('current')
mgnt2CfgalarmModelActiv = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 30), Mgnt2AckMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgalarmModelActiv.setStatus('current')
mgnt2CfgnetworkInput = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 31), Mgnt2NetMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgnetworkInput.setStatus('current')
mgnt2CfgmasterEthMode = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 32), Mgnt2MasterEthMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgmasterEthMode.setStatus('current')
mgnt2CfgsubnetMode = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 33), Mgnt2SubnetEthMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgsubnetMode.setStatus('current')
mgnt2CfgrstpMode = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 34))
mgnt2CfgRstpEnable = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 34, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgRstpEnable.setStatus('current')
mgnt2CfglldpMode = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 35))
mgnt2CfgLldpEnable = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 35, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgLldpEnable.setStatus('current')
mgnt2CfglogMode = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 36), Mgnt2LogFileMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfglogMode.setStatus('current')
mgnt2CfgnodeMode = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 37))
mgnt2CfgNodeControllerEnable = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 37, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgNodeControllerEnable.setStatus('current')
mgnt2CfgunprivilegedUsersMode = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 38))
mgnt2CfgRestrictUnprivilegeUsers = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 38, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgRestrictUnprivilegeUsers.setStatus('current')
mgnt2CfgoscDccLinkUpThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgoscDccLinkUpThreshold.setStatus('current')
mgnt2CfgoscDccLinkDownThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgoscDccLinkDownThreshold.setStatus('current')
mgnt2CfgaccountAutoLock = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgaccountAutoLock.setStatus('current')
mgnt2CfgfailCountReset = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgfailCountReset.setStatus('current')
mgnt2CfgftpMode = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 44))
mgnt2CfgFtpEnable = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 44, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgFtpEnable.setStatus('current')
mgnt2CfgtftpMode = MibIdentifier((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 45))
mgnt2CfgTftpEnable = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 2, 3, 45, 1), EkiOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgnt2CfgTftpEnable.setStatus('current')
mgnt2TrapBoardNumber = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 3, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2TrapBoardNumber.setStatus('current')
mgnt2TrapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 3, 51), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2TrapSeverity.setStatus('current')
mgnt2TrapSourcePm = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 3, 52), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2TrapSourcePm.setStatus('current')
mgnt2TrapSourcePortType = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 3, 53), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2TrapSourcePortType.setStatus('current')
mgnt2TrapSourcePortNumber = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 3, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2TrapSourcePortNumber.setStatus('current')
mgnt2TrapSourceLabel = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 3, 55), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2TrapSourceLabel.setStatus('current')
mgnt2TrapSourceValue = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 3, 56), EkiOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2TrapSourceValue.setStatus('current')
mgnt2TrapEventLabel = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 3, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2TrapEventLabel.setStatus('current')
mgnt2TrapNodeControllerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 3, 58), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2TrapNodeControllerIpAddress.setStatus('current')
mgnt2TrapChassisId = MibScalar((1, 3, 6, 1, 4, 1, 20044, 7, 3, 59), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgnt2TrapChassisId.setStatus('current')
mgnt2TrapApi = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 1)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2TrapBoardNumber"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmapiErrorCode"))
if mibBuilder.loadTexts: mgnt2TrapApi.setStatus('current')
mgnt2TrapSwError = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 2)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2AlmFifoCmdError"))
if mibBuilder.loadTexts: mgnt2TrapSwError.setStatus('current')
mgnt2TrapBoardInserted = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 4)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2TrapBoardNumber"))
if mibBuilder.loadTexts: mgnt2TrapBoardInserted.setStatus('current')
mgnt2TrapBoardRemoved = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 5)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2TrapBoardNumber"))
if mibBuilder.loadTexts: mgnt2TrapBoardRemoved.setStatus('current')
mgnt2TrapRestoreConfDone = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 6)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2TrapBoardNumber"))
if mibBuilder.loadTexts: mgnt2TrapRestoreConfDone.setStatus('current')
mgnt2TrapGlobalPowerFail = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 8)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2AlmDef48b"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmDef48a"))
if mibBuilder.loadTexts: mgnt2TrapGlobalPowerFail.setStatus('current')
mgnt2TrapFanPowerFail = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 9)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2AlmFanDefFuseB"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmFanDefFuseA"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmFanPwrFail1"))
if mibBuilder.loadTexts: mgnt2TrapFanPowerFail.setStatus('current')
mgnt2TrapGigmPowerFail = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 10)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2AlmMgntDefFuseA"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmMgntDefFuseB"))
if mibBuilder.loadTexts: mgnt2TrapGigmPowerFail.setStatus('current')
mgnt2TrapFanFail = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 11)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2AlmPbFan1Fail"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmPbFan2Fail"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmPbFan3Fail"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmPbFan4Fail"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmPbFan5Fail"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmPbFan6Fail"))
if mibBuilder.loadTexts: mgnt2TrapFanFail.setStatus('current')
mgnt2TrapLogFileFull = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 20)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2TrapBoardNumber"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmLog80Full"), ("EKINOPS-MGNT2-MIB", "mgnt2AlmLogFileFull"))
if mibBuilder.loadTexts: mgnt2TrapLogFileFull.setStatus('current')
mgnt2TrapAlarm = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 30)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2TrapSeverity"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourcePm"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapBoardNumber"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourcePortType"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourcePortNumber"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourceLabel"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourceValue"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapNodeControllerIpAddress"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapChassisId"))
if mibBuilder.loadTexts: mgnt2TrapAlarm.setStatus('current')
mgnt2TrapEvent = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 31)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2TrapBoardNumber"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapEventLabel"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapNodeControllerIpAddress"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapChassisId"))
if mibBuilder.loadTexts: mgnt2TrapEvent.setStatus('current')
mgnt2TrapControl = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 32)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2TrapSourcePm"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapBoardNumber"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourcePortType"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourcePortNumber"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourceLabel"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourceValue"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapNodeControllerIpAddress"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapChassisId"))
if mibBuilder.loadTexts: mgnt2TrapControl.setStatus('current')
mgnt2TrapConfig = NotificationType((1, 3, 6, 1, 4, 1, 20044, 7, 3, 33)).setObjects(("EKINOPS-MGNT2-MIB", "mgnt2TrapSourcePm"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapBoardNumber"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourcePortType"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourcePortNumber"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourceLabel"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapSourceValue"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapNodeControllerIpAddress"), ("EKINOPS-MGNT2-MIB", "mgnt2TrapChassisId"))
if mibBuilder.loadTexts: mgnt2TrapConfig.setStatus('current')
mibBuilder.exportSymbols("EKINOPS-MGNT2-MIB", mgnt2CfgNodeControllerEnable=mgnt2CfgNodeControllerEnable, mgnt2GigmLdapBase=mgnt2GigmLdapBase, mgnt2AlmPbFan4Fail=mgnt2AlmPbFan4Fail, Mgnt2SubnetEthMode=Mgnt2SubnetEthMode, mgnt2TrapSourcePortType=mgnt2TrapSourcePortType, mgnt2GigmMibsEntry=mgnt2GigmMibsEntry, mgnt2TrapNodeControllerIpAddress=mgnt2TrapNodeControllerIpAddress, mgnt2EkicraftPkgExtractionInProgress=mgnt2EkicraftPkgExtractionInProgress, mgnt2CfgRestrictUnprivilegeUsers=mgnt2CfgRestrictUnprivilegeUsers, mgnt2GigmManagerIpAddressTable=mgnt2GigmManagerIpAddressTable, mgnt2RinvUboot=mgnt2RinvUboot, mgnt2SlotOcc=mgnt2SlotOcc, mgnt2CfgPmMajorTrapEn=mgnt2CfgPmMajorTrapEn, mgnt2GigmManagerEnableAlarmWarning=mgnt2GigmManagerEnableAlarmWarning, mgnt2AlmswAlarm1=mgnt2AlmswAlarm1, mgnt2AlmAbsFailure=mgnt2AlmAbsFailure, mgnt2DwlPackageTable=mgnt2DwlPackageTable, mgnt2GigmSecurity=mgnt2GigmSecurity, mgnt2GigmRadiusSecret=mgnt2GigmRadiusSecret, mgnt2Name=mgnt2Name, mgnt2AlmPmSlot9Absent=mgnt2AlmPmSlot9Absent, mgnt2CfgperfModes1=mgnt2CfgperfModes1, mgnt2GigmErrorCounterEntry=mgnt2GigmErrorCounterEntry, mgnt2alarms=mgnt2alarms, mgnt2AlmPmSlot13Absent=mgnt2AlmPmSlot13Absent, mgnt2CfgPmCriticalTrapEn=mgnt2CfgPmCriticalTrapEn, Mgnt2TrapModeValues=Mgnt2TrapModeValues, mgnt2CnfManageConfigFilesTable=mgnt2CnfManageConfigFilesTable, mgnt2DeleteEkicraftPkgFromFlash=mgnt2DeleteEkicraftPkgFromFlash, mgnt2AlmPmSlot10Absent=mgnt2AlmPmSlot10Absent, mgnt2IndexMibs=mgnt2IndexMibs, mgnt2CfgcliAccess=mgnt2CfgcliAccess, mgnt2CfgoscDccLinkDownThreshold=mgnt2CfgoscDccLinkDownThreshold, mgnt2GigmRwCommunity=mgnt2GigmRwCommunity, mgnt2ErrorCounters=mgnt2ErrorCounters, mgnt2MibName=mgnt2MibName, mgnt2AlmPmSlot11Absent=mgnt2AlmPmSlot11Absent, mgnt2CtrlChassisWarmReset=mgnt2CtrlChassisWarmReset, mgnt2AlmDef48b=mgnt2AlmDef48b, mgnt2PortNumber=mgnt2PortNumber, mgnt2TrapSourcePm=mgnt2TrapSourcePm, mgnt2GigmLdapHost=mgnt2GigmLdapHost, mgnt2CnfManageConfigFileID=mgnt2CnfManageConfigFileID, mgnt2GigmGatewayAddressTable=mgnt2GigmGatewayAddressTable, mgnt2AlmFan2ModuleFail=mgnt2AlmFan2ModuleFail, mgnt2CfgSyslogConfigEn=mgnt2CfgSyslogConfigEn, mgnt2AlmUrgVisual=mgnt2AlmUrgVisual, mgnt2GigmLdapVersion=mgnt2GigmLdapVersion, mgnt2DwlEkicraftExtractedPack=mgnt2DwlEkicraftExtractedPack, mgnt2LineNumber=mgnt2LineNumber, mgnt2AlmMgntDefFuseB=mgnt2AlmMgntDefFuseB, Mgnt2MasterEthMode=Mgnt2MasterEthMode, mgnt2DwlEkicraftPkgFileName=mgnt2DwlEkicraftPkgFileName, mgnt2CfgMgntMinorTrapEn=mgnt2CfgMgntMinorTrapEn, mgnt2DwlUploadingEntry=mgnt2DwlUploadingEntry, mgnt2DeletePackageFromFlash=mgnt2DeletePackageFromFlash, mgnt2CfgMgntMajorTrapEn=mgnt2CfgMgntMajorTrapEn, mgnt2CfginactivityTimeout=mgnt2CfginactivityTimeout, mgnt2TrapSwError=mgnt2TrapSwError, mgnt2CfgsubnetMode=mgnt2CfgsubnetMode, mgnt2CfgpmConfEnable=mgnt2CfgpmConfEnable, mgnt2AlmPmSlot5Absent=mgnt2AlmPmSlot5Absent, mgnt2AlmPmSlot17Absent=mgnt2AlmPmSlot17Absent, mgnt2PerfCapName=mgnt2PerfCapName, mgnt2TrapSourcePortNumber=mgnt2TrapSourcePortNumber, mgnt2AlmFan2ModuleAbsent=mgnt2AlmFan2ModuleAbsent, mgnt2GigmPerf24hSync=mgnt2GigmPerf24hSync, mgnt2AlmfanMgmnt=mgnt2AlmfanMgmnt, mgnt2CtrlSaveConfig=mgnt2CtrlSaveConfig, mgnt2CfgPmBackupEnable=mgnt2CfgPmBackupEnable, mgnt2CnfConfigSlot=mgnt2CnfConfigSlot, mgnt2CfgsyslogEnable=mgnt2CfgsyslogEnable, mgnt2CfgSyslogCtrlEn=mgnt2CfgSyslogCtrlEn, mgnt2GigmManagerRegistrationTimeout=mgnt2GigmManagerRegistrationTimeout, mgnt2CfgtftpMode=mgnt2CfgtftpMode, mgnt2CnfConfigFileName=mgnt2CnfConfigFileName, Mgnt2PerfResyncValues=Mgnt2PerfResyncValues, mgnt2GigmIPAddresByDHCP=mgnt2GigmIPAddresByDHCP, mgnt2CfgmgntTrapEnable=mgnt2CfgmgntTrapEnable, mgnt2CnfUploadConfigFilesEntry=mgnt2CnfUploadConfigFilesEntry, mgnt2GigmSelectedBoard=mgnt2GigmSelectedBoard, mgnt2AlmsynthAlm1=mgnt2AlmsynthAlm1, mgnt2GigmGatewayIndex=mgnt2GigmGatewayIndex, mgnt2CtrlRedLed=mgnt2CtrlRedLed, mgnt2AlmPbFan2Fail=mgnt2AlmPbFan2Fail, mgnt2CtrlGreenLed=mgnt2CtrlGreenLed, mgnt2CtrlmgntGetGlobalConfig=mgnt2CtrlmgntGetGlobalConfig, mgnt2IndexEkicraftPkg=mgnt2IndexEkicraftPkg, mgnt2GigmCurrentHour=mgnt2GigmCurrentHour, mgnt2CnfModuleSlotNumber=mgnt2CnfModuleSlotNumber, mgnt2GigmNodeIpAddress=mgnt2GigmNodeIpAddress, mgnt2AlmLog80Full=mgnt2AlmLog80Full, mgnt2CnfBackupConfig=mgnt2CnfBackupConfig, mgnt2controls=mgnt2controls, mgnt2PerfCapabilityTable=mgnt2PerfCapabilityTable, mgnt2CfglogMode=mgnt2CfglogMode, mgnt2GigmNtpServer=mgnt2GigmNtpServer, mgnt2LoadState=mgnt2LoadState, mgnt2GigmBoardTable=mgnt2GigmBoardTable, mgnt2TrapSourceValue=mgnt2TrapSourceValue, mgnt2CtrlAcknowledge=mgnt2CtrlAcknowledge, mgnt2LoadTransfer=mgnt2LoadTransfer, mgnt2AlmFifoCmdError=mgnt2AlmFifoCmdError, mgnt2MibPartNumber=mgnt2MibPartNumber, mgnt2RinvFan=mgnt2RinvFan, mgnt2LoadResetMethod=mgnt2LoadResetMethod, mgnt2CnfUploadConfigFilesTable=mgnt2CnfUploadConfigFilesTable, mgnt2PerfCapPosition=mgnt2PerfCapPosition, mgnt2GigmManagerEnableAlarmIndeterminate=mgnt2GigmManagerEnableAlarmIndeterminate, mgnt2ExtractedPack=mgnt2ExtractedPack, mgnt2AlmCpuTempOverRange=mgnt2AlmCpuTempOverRange, mgnt2AlmPmSlot8Absent=mgnt2AlmPmSlot8Absent, mgnt2AlmPmSlot14Absent=mgnt2AlmPmSlot14Absent, mgnt2CfgMgntCriticalTrapEn=mgnt2CfgMgntCriticalTrapEn, mgnt2GigmManagerIpAddressEntry=mgnt2GigmManagerIpAddressEntry, mgnt2CfgChassisEthernetSplit=mgnt2CfgChassisEthernetSplit, mgnt2AlmremoveablefanModuleFail=mgnt2AlmremoveablefanModuleFail, mgnt2CfgpmTrapEnable=mgnt2CfgpmTrapEnable, mgnt2GigmCurrentMonth=mgnt2GigmCurrentMonth, mgnt2=mgnt2, Mgnt2DccAccessValues=Mgnt2DccAccessValues, mgnt2GigmManagerEnableConfig=mgnt2GigmManagerEnableConfig, mgnt2IndexPackage=mgnt2IndexPackage, mgnt2AlmsynthAlm0=mgnt2AlmsynthAlm0, mgnt2AlmPmSlot18Absent=mgnt2AlmPmSlot18Absent, mgnt2AlmLogFileFull=mgnt2AlmLogFileFull, mgnt2PerfCapStatus=mgnt2PerfCapStatus, mgnt2LoadDelete=mgnt2LoadDelete, mgnt2GigmCurrentYear=mgnt2GigmCurrentYear, mgnt2DwlEkicraftPkgEntry=mgnt2DwlEkicraftPkgEntry, mgnt2FlashingInProgress=mgnt2FlashingInProgress, mgnt2PerfCapabilityEntry=mgnt2PerfCapabilityEntry, mgnt2DwlPackageEntry=mgnt2DwlPackageEntry, mgnt2TrapSeverity=mgnt2TrapSeverity, mgnt2GigmManagerEnableAlarmCrit=mgnt2GigmManagerEnableAlarmCrit, mgnt2GigmManagerTrapPort=mgnt2GigmManagerTrapPort, mgnt2CnfRestoreConfig=mgnt2CnfRestoreConfig, mgnt2Immediate=mgnt2Immediate, mgnt2CfgMgntControlTrapEn=mgnt2CfgMgntControlTrapEn, Mgnt2LogFileMode=Mgnt2LogFileMode, mgnt2GigmResetTrapCounter=mgnt2GigmResetTrapCounter, mgnt2AlmApiError=mgnt2AlmApiError, mgnt2GigmTime=mgnt2GigmTime, mgnt2CfgaccountAutoLock=mgnt2CfgaccountAutoLock, mgnt2AlmPbFan1Fail=mgnt2AlmPbFan1Fail, mgnt2LoadBankNumber=mgnt2LoadBankNumber, mgnt2GigmRadiusPort=mgnt2GigmRadiusPort, mgnt2LoadPMTable=mgnt2LoadPMTable, mgnt2RinvGateware=mgnt2RinvGateware, mgnt2CfgTftpEnable=mgnt2CfgTftpEnable, mgnt2CnfDeleteConfigFile=mgnt2CnfDeleteConfigFile, mgnt2CnfManageConfigFileName=mgnt2CnfManageConfigFileName, mgnt2AlmPmSlot15Absent=mgnt2AlmPmSlot15Absent, mgnt2GigmBoardIpAddress=mgnt2GigmBoardIpAddress, Mgnt2NetMode=Mgnt2NetMode, mgnt2CfgmgntTrapMode=mgnt2CfgmgntTrapMode, mgnt2RootOIDInventory=mgnt2RootOIDInventory, mgnt2GigmManagerEnableAlarmMinor=mgnt2GigmManagerEnableAlarmMinor, mgnt2SNMPAgentData=mgnt2SNMPAgentData, mgnt2LoadFileName=mgnt2LoadFileName, mgnt2CfgcraftAccess=mgnt2CfgcraftAccess, mgnt2CfgoscDccLinkUpThreshold=mgnt2CfgoscDccLinkUpThreshold, mgnt2ModulesManagement=mgnt2ModulesManagement, mgnt2GigmCurrentDay=mgnt2GigmCurrentDay, mgnt2TrapEvent=mgnt2TrapEvent, PYSNMP_MODULE_ID=mgnt2, mgnt2PlugInRinv=mgnt2PlugInRinv, mgnt2CfgrstpMode=mgnt2CfgrstpMode, mgnt2CfgPmConfigTrapEn=mgnt2CfgPmConfigTrapEn, mgnt2TrapAlarm=mgnt2TrapAlarm, mgnt2Position=mgnt2Position, mgnt2GigmLdapPort=mgnt2GigmLdapPort, mgnt2CfgSyslogEventEn=mgnt2CfgSyslogEventEn, mgnt2RemoteInventory=mgnt2RemoteInventory, mgnt2TrapRestoreConfDone=mgnt2TrapRestoreConfDone, mgnt2TrapSourceLabel=mgnt2TrapSourceLabel, mgnt2AlmPmSlot19Absent=mgnt2AlmPmSlot19Absent, mgnt2AlmFan3ModuleAbsent=mgnt2AlmFan3ModuleAbsent, mgnt2AlmboardMgmntSet1=mgnt2AlmboardMgmntSet1, mgnt2SnmpPresent=mgnt2SnmpPresent, Mgnt2CraftAccessValues=Mgnt2CraftAccessValues, mgnt2GigmRadiusServer=mgnt2GigmRadiusServer, mgnt2TrapBoardNumber=mgnt2TrapBoardNumber, mgnt2RinvHwPlatform=mgnt2RinvHwPlatform, mgnt2TrapBoardInserted=mgnt2TrapBoardInserted, mgnt2LoadResetMode=mgnt2LoadResetMode, mgnt2IPmanagment=mgnt2IPmanagment, mgnt2CfgPmControlTrapEn=mgnt2CfgPmControlTrapEn, mgnt2IndexErrorCounter=mgnt2IndexErrorCounter, mgnt2AlmMgntDefFuseA=mgnt2AlmMgntDefFuseA, mgnt2CtrlChassisColdReset=mgnt2CtrlChassisColdReset, mgnt2GigmEqptType=mgnt2GigmEqptType, mgnt2TrapBoardRemoved=mgnt2TrapBoardRemoved, mgnt2AlmCritVisual=mgnt2AlmCritVisual, mgnt2AlmPmSlot20Absent=mgnt2AlmPmSlot20Absent, mgnt2CtrlmgntSaveConfig=mgnt2CtrlmgntSaveConfig, mgnt2TrapGigmPowerFail=mgnt2TrapGigmPowerFail, mgnt2Ctrlsynth5=mgnt2Ctrlsynth5, mgnt2GigmLdapScope=mgnt2GigmLdapScope, mgnt2CfgethPort2=mgnt2CfgethPort2, Mgnt2SlotStatus=Mgnt2SlotStatus, mgnt2AlmPmSlot3Absent=mgnt2AlmPmSlot3Absent, mgnt2AlmFan3ModuleFail=mgnt2AlmFan3ModuleFail, mgnt2GigmBoardEntry=mgnt2GigmBoardEntry, mgnt2CnfUploadConfigIndex=mgnt2CnfUploadConfigIndex, mgnt2AlmremoveableFanModuleMgmnt=mgnt2AlmremoveableFanModuleMgmnt, mgnt2LoadFileType=mgnt2LoadFileType, mgnt2GigmAuthenticationType=mgnt2GigmAuthenticationType, mgnt2GigmResetErrorCounters=mgnt2GigmResetErrorCounters, mgnt2AlmPmFanAbsent=mgnt2AlmPmFanAbsent, mgnt2CtrlPutGlobalConfig=mgnt2CtrlPutGlobalConfig, mgnt2GigmManagerIpAddress=mgnt2GigmManagerIpAddress, mgnt2CtrlGetGlobalConfig=mgnt2CtrlGetGlobalConfig, mgnt2GigmGatewayAddressEntry=mgnt2GigmGatewayAddressEntry, mgnt2PerfResyncNMS=mgnt2PerfResyncNMS, mgnt2AlmNurgVisual=mgnt2AlmNurgVisual, mgnt2AlmPbFan3Fail=mgnt2AlmPbFan3Fail, mgnt2DwlPackageFileName=mgnt2DwlPackageFileName, mgnt2IndexBoards=mgnt2IndexBoards, Mgnt2CliAccessValues=Mgnt2CliAccessValues, mgnt2IndexPlugIns=mgnt2IndexPlugIns, mgnt2AlmFanDefFuseB=mgnt2AlmFanDefFuseB, mgnt2CnfDeleteConfig=mgnt2CnfDeleteConfig, mgnt2AlmFanPwrFail1=mgnt2AlmFanPwrFail1, mgnt2AlmboardMgmntSet2=mgnt2AlmboardMgmntSet2, mgnt2GigmTrapCounter=mgnt2GigmTrapCounter, mgnt2GroupNumber=mgnt2GroupNumber, mgnt2DwlEkicraftImmediate=mgnt2DwlEkicraftImmediate, mgnt2TrapFanPowerFail=mgnt2TrapFanPowerFail, mgnt2AlmNtpSyncLoss=mgnt2AlmNtpSyncLoss, mgnt2LoadModuleNumber=mgnt2LoadModuleNumber, mgnt2Perf=mgnt2Perf, mgnt2GigmGatewayAddress=mgnt2GigmGatewayAddress, mgnt2AlmFanFilterAbsent=mgnt2AlmFanFilterAbsent, mgnt2SlotStatus=mgnt2SlotStatus, mgnt2GigmPlugInEntry=mgnt2GigmPlugInEntry, mgnt2GigmTrapCount=mgnt2GigmTrapCount, mgnt2CfgftpMode=mgnt2CfgftpMode, mgnt2CnfManageConfigIndex=mgnt2CnfManageConfigIndex, mgnt2DwlUploadingTableUpdate=mgnt2DwlUploadingTableUpdate, mgnt2LoadDownloadProgress=mgnt2LoadDownloadProgress, mgnt2CtrllogFile=mgnt2CtrllogFile, mgnt2CfgPmMinorTrapEn=mgnt2CfgPmMinorTrapEn, mgnt2CfgnetworkInput=mgnt2CfgnetworkInput, mgnt2GigmLdapBindDn=mgnt2GigmLdapBindDn, mgnt2AlmPmSlot1Absent=mgnt2AlmPmSlot1Absent, mgnt2GigmGatewayOrder=mgnt2GigmGatewayOrder, mgnt2CfgmasterEthMode=mgnt2CfgmasterEthMode, mgnt2AlmFanDefFuseA=mgnt2AlmFanDefFuseA, mgnt2CfgalarmModelActiv=mgnt2CfgalarmModelActiv, mgnt2FileUpload=mgnt2FileUpload, mgnt2TrapFanFail=mgnt2TrapFanFail, mgnt2CfgmgntDccEnable=mgnt2CfgmgntDccEnable, mgnt2SubFunctionLabel=mgnt2SubFunctionLabel)
mibBuilder.exportSymbols("EKINOPS-MGNT2-MIB", mgnt2DwlEkicraftPkgTable=mgnt2DwlEkicraftPkgTable, mgnt2CtrlLogFileReset=mgnt2CtrlLogFileReset, mgnt2GigmPlugInTable=mgnt2GigmPlugInTable, mgnt2PerfCapIndexBoards=mgnt2PerfCapIndexBoards, mgnt2CnfExportConfig=mgnt2CnfExportConfig, mgnt2GigmManagerIpAddressTableRowStatus=mgnt2GigmManagerIpAddressTableRowStatus, mgnt2TrapGlobalPowerFail=mgnt2TrapGlobalPowerFail, mgnt2config=mgnt2config, Mgnt2AckMode=Mgnt2AckMode, mgnt2TrapConfig=mgnt2TrapConfig, mgnt2ImmediateReplacement=mgnt2ImmediateReplacement, mgnt2TrapApi=mgnt2TrapApi, mgnt2DwlUploadFileName=mgnt2DwlUploadFileName, mgnt2AlmPbFan6Fail=mgnt2AlmPbFan6Fail, mgnt2TrapEventLabel=mgnt2TrapEventLabel, Mgnt2AuthTypeValues=Mgnt2AuthTypeValues, mgnt2LoadPMEntry=mgnt2LoadPMEntry, mgnt2DwlEkicraftSwitchTo=mgnt2DwlEkicraftSwitchTo, mgnt2CfgunprivilegedUsersMode=mgnt2CfgunprivilegedUsersMode, mgnt2AlmFan1ModuleAbsent=mgnt2AlmFan1ModuleAbsent, mgnt2CnfConfigUpload=mgnt2CnfConfigUpload, mgnt2CfgEthPort2Disable=mgnt2CfgEthPort2Disable, mgnt2AlmPmSlot4Absent=mgnt2AlmPmSlot4Absent, mgnt2GigmLdapBindPw=mgnt2GigmLdapBindPw, mgnt2AlmPbFan5Fail=mgnt2AlmPbFan5Fail, mgnt2RinvCraft=mgnt2RinvCraft, mgnt2AlmFansFailure=mgnt2AlmFansFailure, mgnt2Traps=mgnt2Traps, mgnt2PackageExtractionInProgress=mgnt2PackageExtractionInProgress, mgnt2GigmPerf15minSync=mgnt2GigmPerf15minSync, mgnt2AlmntpSyncLoss=mgnt2AlmntpSyncLoss, mgnt2GigmLdapPamPasswd=mgnt2GigmLdapPamPasswd, mgnt2CfgntpTimeZone=mgnt2CfgntpTimeZone, mgnt2AlmFan1ModuleFail=mgnt2AlmFan1ModuleFail, mgnt2CfgfailCountReset=mgnt2CfgfailCountReset, mgnt2Hardware=mgnt2Hardware, mgnt2PerfCapOidEnable=mgnt2PerfCapOidEnable, mgnt2IndexUpload=mgnt2IndexUpload, mgnt2DwlUploadingTable=mgnt2DwlUploadingTable, mgnt2Authentication=mgnt2Authentication, mgnt2LoadPMIndex=mgnt2LoadPMIndex, mgnt2ErrorCounterSlotNumber=mgnt2ErrorCounterSlotNumber, mgnt2SwitchTo=mgnt2SwitchTo, mgnt2GigmLogicalName=mgnt2GigmLogicalName, mgnt2CtrlmgntAcknowledge=mgnt2CtrlmgntAcknowledge, mgnt2GigmMibsTable=mgnt2GigmMibsTable, mgnt2GigmTrapCommunity=mgnt2GigmTrapCommunity, mgnt2CtrlChassisShutdown=mgnt2CtrlChassisShutdown, mgnt2TrapLogFileFull=mgnt2TrapLogFileFull, mgnt2TrapControl=mgnt2TrapControl, mgnt2CtrlLedOff=mgnt2CtrlLedOff, mgnt2AlmDef48a=mgnt2AlmDef48a, mgnt2CtrlmgntPutGlobalConfig=mgnt2CtrlmgntPutGlobalConfig, mgnt2GigmNetmask=mgnt2GigmNetmask, mgnt2RinvLinux=mgnt2RinvLinux, mgnt2SoftwareManagement=mgnt2SoftwareManagement, mgnt2CfgMgntConfigTrapEn=mgnt2CfgMgntConfigTrapEn, mgnt2PollingPresent=mgnt2PollingPresent, mgnt2AlmPmSlot2Absent=mgnt2AlmPmSlot2Absent, mgnt2AlmAcknowledge=mgnt2AlmAcknowledge, mgnt2CfglldpMode=mgnt2CfglldpMode, mgnt2RinvBackpanel=mgnt2RinvBackpanel, EkiPlugInState=EkiPlugInState, mgnt2GigmManagerIpIndex=mgnt2GigmManagerIpIndex, mgnt2RinvSoftwarePackage=mgnt2RinvSoftwarePackage, mgnt2CfgnodeMode=mgnt2CfgnodeMode, mgnt2GigmRoCommunity=mgnt2GigmRoCommunity, mgnt2ErrorCounterValue=mgnt2ErrorCounterValue, mgnt2DeletePackageFromRam=mgnt2DeletePackageFromRam, mgnt2CfgLldpEnable=mgnt2CfgLldpEnable, mgnt2GigmCurrentMinute=mgnt2GigmCurrentMinute, mgnt2GigmManagerEnableEvent=mgnt2GigmManagerEnableEvent, mgnt2AlmlogMgmnt=mgnt2AlmlogMgmnt, mgnt2LoadPMTableUpdate=mgnt2LoadPMTableUpdate, mgnt2AlmFan4ModuleAbsent=mgnt2AlmFan4ModuleAbsent, mgnt2AlmPollingManagerError=mgnt2AlmPollingManagerError, mgnt2CnfManageConfigFilesEntry=mgnt2CnfManageConfigFilesEntry, mgnt2RinvAgent=mgnt2RinvAgent, mgnt2AlmapiErrorCode=mgnt2AlmapiErrorCode, mgnt2AlmFan4ModuleFail=mgnt2AlmFan4ModuleFail, mgnt2AlmfanPwrMgmnt=mgnt2AlmfanPwrMgmnt, mgnt2GigmManagerEnableAlarmMajor=mgnt2GigmManagerEnableAlarmMajor, mgnt2CfgSyslogAlarmEn=mgnt2CfgSyslogAlarmEn, mgnt2CfgFtpEnable=mgnt2CfgFtpEnable, mgnt2CfgRstpEnable=mgnt2CfgRstpEnable, mgnt2CfgPmRestoreEnable=mgnt2CfgPmRestoreEnable, mgnt2AlmPmSlot7Absent=mgnt2AlmPmSlot7Absent, mgnt2AlmFanPwrProtOn=mgnt2AlmFanPwrProtOn, mgnt2AlmPmSlot16Absent=mgnt2AlmPmSlot16Absent, mgnt2GigmSyslog=mgnt2GigmSyslog, mgnt2GigmErrorCounterTable=mgnt2GigmErrorCounterTable, mgnt2CtrltestLed=mgnt2CtrltestLed, mgnt2CfgMgntEventTrapEn=mgnt2CfgMgntEventTrapEn, mgnt2AlmPmSlot12Absent=mgnt2AlmPmSlot12Absent, mgnt2GigmManagerEnableCtrl=mgnt2GigmManagerEnableCtrl, mgnt2ConfigManagement=mgnt2ConfigManagement, mgnt2AlmPmSlot6Absent=mgnt2AlmPmSlot6Absent, mgnt2TrapChassisId=mgnt2TrapChassisId)
