#
# PySNMP MIB module ACD-CFM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/accedian/ACD-CFM-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 13:07:51 2024
# On host fv-az915-96 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
acdMibs, = mibBuilder.importSymbols("ACCEDIAN-SMI", "acdMibs")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, iso, TimeTicks, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Bits, Unsigned32, ObjectIdentity, Counter64, MibIdentifier, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "TimeTicks", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Bits", "Unsigned32", "ObjectIdentity", "Counter64", "MibIdentifier", "NotificationType", "Counter32")
DateAndTime, TextualConvention, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "TruthValue", "DisplayString", "RowStatus")
acdCfm = ModuleIdentity((1, 3, 6, 1, 4, 1, 22420, 2, 7))
acdCfm.setRevisions(('2011-12-21 01:00', '2011-12-20 01:00', '2011-09-21 01:00', '2011-03-30 01:00', '2009-11-01 01:00', '2009-02-23 01:00', '2008-05-01 01:00',))
if mibBuilder.loadTexts: acdCfm.setLastUpdated('201112210100Z')
if mibBuilder.loadTexts: acdCfm.setOrganization('Accedian Networks, Inc.')
acdCfmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 7, 0))
acdCfmMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1))
acdCfmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2))
acdCfmDelayMeasurement = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1))
acdCfmPacketLoss = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2))
acdCfmMep = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3))
acdCfmStack = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 4))
acdCfmSlm = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5))
acdCfmDmCfgTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1), )
if mibBuilder.loadTexts: acdCfmDmCfgTable.setStatus('current')
acdCfmDmCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmDmCfgID"))
if mibBuilder.loadTexts: acdCfmDmCfgEntry.setStatus('current')
acdCfmDmCfgID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmDmCfgID.setStatus('current')
acdCfmDmCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmDmCfgRowStatus.setStatus('current')
acdCfmDmCfgMepIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmDmCfgMepIdx.setStatus('current')
acdCfmDmCfgRemoteMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmDmCfgRemoteMepId.setStatus('current')
acdCfmDmCfgPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmDmCfgPriority.setStatus('current')
acdCfmDmCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmDmCfgEnable.setStatus('current')
acdCfmDmCfgInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(10000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmDmCfgInterval.setStatus('current')
acdCfmDmCfgRefPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(15)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmDmCfgRefPeriod.setStatus('current')
acdCfmDmCfgOneWayDelayEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 9), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmDmCfgOneWayDelayEnable.setStatus('current')
acdCfmDmCfgOneWayDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 10), Unsigned32().clone(50)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgOneWayDelayMax.setStatus('current')
acdCfmDmCfgOneWayDelayThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 11), Unsigned32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgOneWayDelayThresh.setStatus('current')
acdCfmDmCfgOneWayAvgDelayThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 12), Unsigned32().clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgOneWayAvgDelayThresh.setStatus('current')
acdCfmDmCfgOneWayDvEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 13), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmDmCfgOneWayDvEnable.setStatus('current')
acdCfmDmCfgOneWayDvMax = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 14), Unsigned32().clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgOneWayDvMax.setStatus('current')
acdCfmDmCfgOneWayDvThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 15), Unsigned32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgOneWayDvThresh.setStatus('current')
acdCfmDmCfgOneWayAvgDvThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 16), Unsigned32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgOneWayAvgDvThresh.setStatus('current')
acdCfmDmCfgTwoWayDelayEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 17), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmDmCfgTwoWayDelayEnable.setStatus('current')
acdCfmDmCfgTwoWayDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 18), Unsigned32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgTwoWayDelayMax.setStatus('current')
acdCfmDmCfgTwoWayDelayThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 19), Unsigned32().clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgTwoWayDelayThresh.setStatus('current')
acdCfmDmCfgTwoWayAvgDelayThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 20), Unsigned32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgTwoWayAvgDelayThresh.setStatus('current')
acdCfmDmCfgTwoWayDvEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 21), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmDmCfgTwoWayDvEnable.setStatus('current')
acdCfmDmCfgTwoWayDvMax = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 22), Unsigned32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgTwoWayDvMax.setStatus('current')
acdCfmDmCfgTwoWayDvThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 23), Unsigned32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgTwoWayDvThresh.setStatus('current')
acdCfmDmCfgTwoWayAvgDvThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 1, 1, 24), Unsigned32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmDmCfgTwoWayAvgDvThresh.setStatus('current')
acdCfmResultOneWayDelayTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2), )
if mibBuilder.loadTexts: acdCfmResultOneWayDelayTable.setStatus('current')
acdCfmResultOneWayDelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmResultOneWayDelayID"))
if mibBuilder.loadTexts: acdCfmResultOneWayDelayEntry.setStatus('current')
acdCfmResultOneWayDelayID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmResultOneWayDelayID.setStatus('current')
acdCfmResultOneWayDelayPeriodIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDelayPeriodIndex.setStatus('current')
acdCfmResultOneWayDelayIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDelayIntervalStart.setStatus('current')
acdCfmResultOneWayDelayValid = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDelayValid.setStatus('current')
acdCfmResultOneWayDelayAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDelayAlert.setStatus('current')
acdCfmResultOneWayDelayAvgAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDelayAvgAlert.setStatus('current')
acdCfmResultOneWayDelaySamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDelaySamples.setStatus('current')
acdCfmResultOneWayDelayMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 8), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDelayMinValue.setStatus('current')
acdCfmResultOneWayDelayMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 9), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDelayMaxValue.setStatus('current')
acdCfmResultOneWayDelayAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 10), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDelayAvgValue.setStatus('current')
acdCfmResultOneWayDelayThreshExc = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDelayThreshExc.setStatus('current')
acdCfmResultOneWayDelayInstValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 2, 1, 12), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDelayInstValue.setStatus('current')
acdCfmResultOneWayDvTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3), )
if mibBuilder.loadTexts: acdCfmResultOneWayDvTable.setStatus('current')
acdCfmResultOneWayDvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmResultOneWayDvID"))
if mibBuilder.loadTexts: acdCfmResultOneWayDvEntry.setStatus('current')
acdCfmResultOneWayDvID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmResultOneWayDvID.setStatus('current')
acdCfmResultOneWayDvPeriodIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDvPeriodIndex.setStatus('current')
acdCfmResultOneWayDvIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDvIntervalStart.setStatus('current')
acdCfmResultOneWayDvValid = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDvValid.setStatus('current')
acdCfmResultOneWayDvAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDvAlert.setStatus('current')
acdCfmResultOneWayDvAvgAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDvAvgAlert.setStatus('current')
acdCfmResultOneWayDvSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDvSamples.setStatus('current')
acdCfmResultOneWayDvMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 8), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDvMinValue.setStatus('current')
acdCfmResultOneWayDvMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 9), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDvMaxValue.setStatus('current')
acdCfmResultOneWayDvAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 10), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDvAvgValue.setStatus('current')
acdCfmResultOneWayDvThreshExc = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDvThreshExc.setStatus('current')
acdCfmResultOneWayDvInstValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 3, 1, 12), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultOneWayDvInstValue.setStatus('current')
acdCfmResultTwoWayDelayTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4), )
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayTable.setStatus('current')
acdCfmResultTwoWayDelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmResultTwoWayDelayID"))
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayEntry.setStatus('current')
acdCfmResultTwoWayDelayID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayID.setStatus('current')
acdCfmResultTwoWayDelayPeriodIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayPeriodIndex.setStatus('current')
acdCfmResultTwoWayDelayIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayIntervalStart.setStatus('current')
acdCfmResultTwoWayDelayValid = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayValid.setStatus('current')
acdCfmResultTwoWayDelayAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayAlert.setStatus('current')
acdCfmResultTwoWayDelayAvgAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayAvgAlert.setStatus('current')
acdCfmResultTwoWayDelaySamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDelaySamples.setStatus('current')
acdCfmResultTwoWayDelayMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 8), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayMinValue.setStatus('current')
acdCfmResultTwoWayDelayMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 9), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayMaxValue.setStatus('current')
acdCfmResultTwoWayDelayAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 10), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayAvgValue.setStatus('current')
acdCfmResultTwoWayDelayThreshExc = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayThreshExc.setStatus('current')
acdCfmResultTwoWayDelayInstValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 4, 1, 12), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDelayInstValue.setStatus('current')
acdCfmResultTwoWayDvTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5), )
if mibBuilder.loadTexts: acdCfmResultTwoWayDvTable.setStatus('current')
acdCfmResultTwoWayDvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmResultTwoWayDvID"))
if mibBuilder.loadTexts: acdCfmResultTwoWayDvEntry.setStatus('current')
acdCfmResultTwoWayDvID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmResultTwoWayDvID.setStatus('current')
acdCfmResultTwoWayDvPeriodIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDvPeriodIndex.setStatus('current')
acdCfmResultTwoWayDvIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDvIntervalStart.setStatus('current')
acdCfmResultTwoWayDvValid = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDvValid.setStatus('current')
acdCfmResultTwoWayDvAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDvAlert.setStatus('current')
acdCfmResultTwoWayDvAvgAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDvAvgAlert.setStatus('current')
acdCfmResultTwoWayDvSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDvSamples.setStatus('current')
acdCfmResultTwoWayDvMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 8), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDvMinValue.setStatus('current')
acdCfmResultTwoWayDvMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 9), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDvMaxValue.setStatus('current')
acdCfmResultTwoWayDvAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 10), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDvAvgValue.setStatus('current')
acdCfmResultTwoWayDvThreshExc = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDvThreshExc.setStatus('current')
acdCfmResultTwoWayDvInstValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 5, 1, 12), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultTwoWayDvInstValue.setStatus('current')
acdCfmHistResultOneWayDelayTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6), )
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelayTable.setStatus('current')
acdCfmHistResultOneWayDelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmHistResultOneWayDelayID"), (0, "ACD-CFM-MIB", "acdCfmHistResultOneWayDelaySampleIndex"))
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelayEntry.setStatus('current')
acdCfmHistResultOneWayDelayID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelayID.setStatus('current')
acdCfmHistResultOneWayDelaySampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6, 1, 2), Unsigned32())
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelaySampleIndex.setStatus('current')
acdCfmHistResultOneWayDelayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelayStatus.setStatus('current')
acdCfmHistResultOneWayDelayDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelayDuration.setStatus('current')
acdCfmHistResultOneWayDelayIntervalEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelayIntervalEnd.setStatus('current')
acdCfmHistResultOneWayDelaySamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelaySamples.setStatus('current')
acdCfmHistResultOneWayDelayMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6, 1, 7), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelayMinValue.setStatus('current')
acdCfmHistResultOneWayDelayMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6, 1, 8), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelayMaxValue.setStatus('current')
acdCfmHistResultOneWayDelayAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6, 1, 9), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelayAvgValue.setStatus('current')
acdCfmHistResultOneWayDelayThreshExc = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 6, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDelayThreshExc.setStatus('current')
acdCfmHistResultOneWayDvTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7), )
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvTable.setStatus('current')
acdCfmHistResultOneWayDvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmHistResultOneWayDvID"), (0, "ACD-CFM-MIB", "acdCfmHistResultOneWayDvSampleIndex"))
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvEntry.setStatus('current')
acdCfmHistResultOneWayDvID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvID.setStatus('current')
acdCfmHistResultOneWayDvSampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7, 1, 2), Unsigned32())
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvSampleIndex.setStatus('current')
acdCfmHistResultOneWayDvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvStatus.setStatus('current')
acdCfmHistResultOneWayDvDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvDuration.setStatus('current')
acdCfmHistResultOneWayDvIntervalEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvIntervalEnd.setStatus('current')
acdCfmHistResultOneWayDvSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvSamples.setStatus('current')
acdCfmHistResultOneWayDvMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7, 1, 7), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvMinValue.setStatus('current')
acdCfmHistResultOneWayDvMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7, 1, 8), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvMaxValue.setStatus('current')
acdCfmHistResultOneWayDvAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7, 1, 9), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvAvgValue.setStatus('current')
acdCfmHistResultOneWayDvThreshExc = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 7, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultOneWayDvThreshExc.setStatus('current')
acdCfmHistResultTwoWayDelayTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8), )
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelayTable.setStatus('current')
acdCfmHistResultTwoWayDelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmHistResultTwoWayDelayID"), (0, "ACD-CFM-MIB", "acdCfmHistResultTwoWayDelaySampleIndex"))
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelayEntry.setStatus('current')
acdCfmHistResultTwoWayDelayID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelayID.setStatus('current')
acdCfmHistResultTwoWayDelaySampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8, 1, 2), Unsigned32())
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelaySampleIndex.setStatus('current')
acdCfmHistResultTwoWayDelayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelayStatus.setStatus('current')
acdCfmHistResultTwoWayDelayDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelayDuration.setStatus('current')
acdCfmHistResultTwoWayDelayIntervalEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelayIntervalEnd.setStatus('current')
acdCfmHistResultTwoWayDelaySamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelaySamples.setStatus('current')
acdCfmHistResultTwoWayDelayMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8, 1, 7), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelayMinValue.setStatus('current')
acdCfmHistResultTwoWayDelayMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8, 1, 8), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelayMaxValue.setStatus('current')
acdCfmHistResultTwoWayDelayAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8, 1, 9), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelayAvgValue.setStatus('current')
acdCfmHistResultTwoWayDelayThreshExc = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 8, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDelayThreshExc.setStatus('current')
acdCfmHistResultTwoWayDvTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9), )
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvTable.setStatus('current')
acdCfmHistResultTwoWayDvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmHistResultTwoWayDvID"), (0, "ACD-CFM-MIB", "acdCfmHistResultTwoWayDvSampleIndex"))
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvEntry.setStatus('current')
acdCfmHistResultTwoWayDvID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvID.setStatus('current')
acdCfmHistResultTwoWayDvSampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9, 1, 2), Unsigned32())
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvSampleIndex.setStatus('current')
acdCfmHistResultTwoWayDvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvStatus.setStatus('current')
acdCfmHistResultTwoWayDvDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvDuration.setStatus('current')
acdCfmHistResultTwoWayDvIntervalEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvIntervalEnd.setStatus('current')
acdCfmHistResultTwoWayDvSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvSamples.setStatus('current')
acdCfmHistResultTwoWayDvMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9, 1, 7), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvMinValue.setStatus('current')
acdCfmHistResultTwoWayDvMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9, 1, 8), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvMaxValue.setStatus('current')
acdCfmHistResultTwoWayDvAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9, 1, 9), Integer32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvAvgValue.setStatus('current')
acdCfmHistResultTwoWayDvThreshExc = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 1, 9, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultTwoWayDvThreshExc.setStatus('current')
acdCfmPktLossCfgTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1), )
if mibBuilder.loadTexts: acdCfmPktLossCfgTable.setStatus('current')
acdCfmPktLossCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmPktLossCfgID"))
if mibBuilder.loadTexts: acdCfmPktLossCfgEntry.setStatus('current')
acdCfmPktLossCfgID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmPktLossCfgID.setStatus('current')
acdCfmPktLossCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmPktLossCfgRowStatus.setStatus('current')
acdCfmPktLossCfgMepIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmPktLossCfgMepIdx.setStatus('current')
acdCfmPktLossCfgRemoteMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmPktLossCfgRemoteMepId.setStatus('current')
acdCfmPktLossCfgPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmPktLossCfgPriority.setStatus('current')
acdCfmPktLossCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmPktLossCfgEnable.setStatus('current')
acdCfmPktLossCfgInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(10000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmPktLossCfgInterval.setStatus('current')
acdCfmPktLossCfgRefPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(15)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: acdCfmPktLossCfgRefPeriod.setStatus('current')
acdCfmPktLossCfgThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1, 1, 9), Unsigned32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmPktLossCfgThresh.setStatus('current')
acdCfmPktLossCfgRatioThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acdCfmPktLossCfgRatioThresh.setStatus('current')
acdCfmResultPktLossTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2), )
if mibBuilder.loadTexts: acdCfmResultPktLossTable.setStatus('current')
acdCfmResultPktLossEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmResultPktLossID"))
if mibBuilder.loadTexts: acdCfmResultPktLossEntry.setStatus('current')
acdCfmResultPktLossID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmResultPktLossID.setStatus('current')
acdCfmResultPktLossPeriodIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossPeriodIndex.setStatus('current')
acdCfmResultPktLossIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossIntervalStart.setStatus('current')
acdCfmResultPktLossValid = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossValid.setStatus('current')
acdCfmResultPktLossAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossAlert.setStatus('current')
acdCfmResultPktLossSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossSamples.setStatus('current')
acdCfmResultPktLossOverflowSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossOverflowSamples.setStatus('current')
acdCfmResultPktLossHCSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossHCSamples.setStatus('current')
acdCfmResultPktLossNbrLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossNbrLoss.setStatus('current')
acdCfmResultPktLossOverflowNbrLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossOverflowNbrLoss.setStatus('current')
acdCfmResultPktLossHCNbrLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossHCNbrLoss.setStatus('current')
acdCfmResultPktLossNbrGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossNbrGaps.setStatus('current')
acdCfmResultPktLossOverflowNbrGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossOverflowNbrGaps.setStatus('current')
acdCfmResultPktLossHCNbrGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossHCNbrGaps.setStatus('current')
acdCfmResultPktLossLargestGap = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossLargestGap.setStatus('current')
acdCfmResultPktLossOverflowLargestGap = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossOverflowLargestGap.setStatus('current')
acdCfmResultPktLossHCLargestGap = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossHCLargestGap.setStatus('current')
acdCfmResultPktLossRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 2, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmResultPktLossRatio.setStatus('current')
acdCfmHistResultPktLossTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3), )
if mibBuilder.loadTexts: acdCfmHistResultPktLossTable.setStatus('current')
acdCfmHistResultPktLossEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmHistResultPktLossID"), (0, "ACD-CFM-MIB", "acdCfmHistResultPktLossSampleIndex"))
if mibBuilder.loadTexts: acdCfmHistResultPktLossEntry.setStatus('current')
acdCfmHistResultPktLossID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmHistResultPktLossID.setStatus('current')
acdCfmHistResultPktLossSampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: acdCfmHistResultPktLossSampleIndex.setStatus('current')
acdCfmHistResultPktLossStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossStatus.setStatus('current')
acdCfmHistResultPktLossDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossDuration.setStatus('current')
acdCfmHistResultPktLossIntervalEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossIntervalEnd.setStatus('current')
acdCfmHistResultPktLossSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossSamples.setStatus('current')
acdCfmHistResultPktLossOverflowSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossOverflowSamples.setStatus('current')
acdCfmHistResultPktLossHCSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossHCSamples.setStatus('current')
acdCfmHistResultPktLossNbrLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossNbrLoss.setStatus('current')
acdCfmHistResultPktLossOverflowNbrLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossOverflowNbrLoss.setStatus('current')
acdCfmHistResultPktLossHCNbrLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossHCNbrLoss.setStatus('current')
acdCfmHistResultPktLossNbrGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossNbrGaps.setStatus('current')
acdCfmHistResultPktLossOverflowNbrGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossOverflowNbrGaps.setStatus('current')
acdCfmHistResultPktLossHCNbrGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossHCNbrGaps.setStatus('current')
acdCfmHistResultPktLossLargestGap = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossLargestGap.setStatus('current')
acdCfmHistResultPktLossOverflowLargestGap = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossOverflowLargestGap.setStatus('current')
acdCfmHistResultPktLossHCLargestGap = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossHCLargestGap.setStatus('current')
acdCfmHistResultPktLossRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 2, 3, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmHistResultPktLossRatio.setStatus('current')
acdCfmSlmCfgTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1), )
if mibBuilder.loadTexts: acdCfmSlmCfgTable.setStatus('current')
acdCfmSlmCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmSlmCfgID"))
if mibBuilder.loadTexts: acdCfmSlmCfgEntry.setStatus('current')
acdCfmSlmCfgID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmSlmCfgID.setStatus('current')
acdCfmSlmCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmCfgRowStatus.setStatus('current')
acdCfmSlmCfgMepIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmCfgMepIdx.setStatus('current')
acdCfmSlmCfgRemoteMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmCfgRemoteMepId.setStatus('current')
acdCfmSlmCfgPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmCfgPriority.setStatus('current')
acdCfmSlmCfgState = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmCfgState.setStatus('current')
acdCfmSlmCfgInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmCfgInterval.setStatus('current')
acdCfmSlmCfgRefPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(15)).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmCfgRefPeriod.setStatus('current')
acdCfmSlmCfgNearEndThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmCfgNearEndThresh.setStatus('current')
acdCfmSlmCfgFarEndThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmCfgFarEndThresh.setStatus('current')
acdCfmSlmCfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)).clone('new')).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmCfgName.setStatus('current')
acdCfmSlmResultTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2), )
if mibBuilder.loadTexts: acdCfmSlmResultTable.setStatus('current')
acdCfmSlmResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmSlmResultID"))
if mibBuilder.loadTexts: acdCfmSlmResultEntry.setStatus('current')
acdCfmSlmResultID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmSlmResultID.setStatus('current')
acdCfmSlmResultPeriodIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultPeriodIndex.setStatus('current')
acdCfmSlmResultIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultIntervalStart.setStatus('current')
acdCfmSlmResultValid = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultValid.setStatus('current')
acdCfmSlmResultNearEndAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultNearEndAlert.setStatus('current')
acdCfmSlmResultFarEndAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultFarEndAlert.setStatus('current')
acdCfmSlmResultTxSlm = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultTxSlm.setStatus('current')
acdCfmSlmResultRxSlr = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultRxSlr.setStatus('current')
acdCfmSlmResultRemoteRxSlm = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultRemoteRxSlm.setStatus('current')
acdCfmSlmResultNearEndNbrLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultNearEndNbrLoss.setStatus('current')
acdCfmSlmResultFarEndNbrLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultFarEndNbrLoss.setStatus('current')
acdCfmSlmResultNearEndRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultNearEndRatio.setStatus('current')
acdCfmSlmResultFarEndRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultFarEndRatio.setStatus('current')
acdCfmSlmResultNbrGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultNbrGaps.setStatus('current')
acdCfmSlmResultLargestGap = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmResultLargestGap.setStatus('current')
acdCfmSlmHistResultTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3), )
if mibBuilder.loadTexts: acdCfmSlmHistResultTable.setStatus('current')
acdCfmSlmHistResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmSlmHistResultInstanceIndex"), (0, "ACD-CFM-MIB", "acdCfmSlmHistResultID"))
if mibBuilder.loadTexts: acdCfmSlmHistResultEntry.setStatus('current')
acdCfmSlmHistResultID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmSlmHistResultID.setStatus('current')
acdCfmSlmHistResultPeriodIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmHistResultPeriodIndex.setStatus('current')
acdCfmSlmHistResultIntervalEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmHistResultIntervalEnd.setStatus('current')
acdCfmSlmHistResultTxSlm = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmHistResultTxSlm.setStatus('current')
acdCfmSlmHistResultRxSlr = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmHistResultRxSlr.setStatus('current')
acdCfmSlmHistResultRemoteRxSlm = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmHistResultRemoteRxSlm.setStatus('current')
acdCfmSlmHistResultNearEndRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmHistResultNearEndRatio.setStatus('current')
acdCfmSlmHistResultFarEndRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmHistResultFarEndRatio.setStatus('current')
acdCfmSlmHistResultNbrGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmHistResultNbrGaps.setStatus('current')
acdCfmSlmHistResultLargestGap = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmSlmHistResultLargestGap.setStatus('current')
acdCfmSlmHistResultInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 5, 3, 1, 11), Unsigned32())
if mibBuilder.loadTexts: acdCfmSlmHistResultInstanceIndex.setStatus('current')
acdCfmMepStatsTxTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2), )
if mibBuilder.loadTexts: acdCfmMepStatsTxTable.setStatus('current')
acdCfmMepStatsTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmMepStatsTxID"))
if mibBuilder.loadTexts: acdCfmMepStatsTxEntry.setStatus('current')
acdCfmMepStatsTxID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmMepStatsTxID.setStatus('current')
acdCfmMepStatsTxCcmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxCcmPdu.setStatus('current')
acdCfmMepStatsTxLbmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxLbmPdu.setStatus('current')
acdCfmMepStatsTxLbrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxLbrPdu.setStatus('current')
acdCfmMepStatsTxLtmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxLtmPdu.setStatus('current')
acdCfmMepStatsTxLtrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxLtrPdu.setStatus('current')
acdCfmMepStatsTxAisPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxAisPdu.setStatus('current')
acdCfmMepStatsTxLckPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxLckPdu.setStatus('current')
acdCfmMepStatsTxTstPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxTstPdu.setStatus('current')
acdCfmMepStatsTxLinearApsPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxLinearApsPdu.setStatus('current')
acdCfmMepStatsTxRingApsPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxRingApsPdu.setStatus('current')
acdCfmMepStatsTxMccPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxMccPdu.setStatus('current')
acdCfmMepStatsTxLmmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxLmmPdu.setStatus('current')
acdCfmMepStatsTxLmrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxLmrPdu.setStatus('current')
acdCfmMepStatsTx1dmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTx1dmPdu.setStatus('current')
acdCfmMepStatsTxDmmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxDmmPdu.setStatus('current')
acdCfmMepStatsTxDmrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxDmrPdu.setStatus('current')
acdCfmMepStatsTxExmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxExmPdu.setStatus('current')
acdCfmMepStatsTxExrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxExrPdu.setStatus('current')
acdCfmMepStatsTxVsmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxVsmPdu.setStatus('current')
acdCfmMepStatsTxVsrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxVsrPdu.setStatus('current')
acdCfmMepStatsTxCsfPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxCsfPdu.setStatus('current')
acdCfmMepStatsTxSlmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxSlmPdu.setStatus('current')
acdCfmMepStatsTxSlrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsTxSlrPdu.setStatus('current')
acdCfmMepStatsRxTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3), )
if mibBuilder.loadTexts: acdCfmMepStatsRxTable.setStatus('current')
acdCfmMepStatsRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmMepStatsRxID"))
if mibBuilder.loadTexts: acdCfmMepStatsRxEntry.setStatus('current')
acdCfmMepStatsRxID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmMepStatsRxID.setStatus('current')
acdCfmMepStatsRxCcmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxCcmPdu.setStatus('current')
acdCfmMepStatsRxLbmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLbmPdu.setStatus('current')
acdCfmMepStatsRxLbrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLbrPdu.setStatus('current')
acdCfmMepStatsRxLtmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLtmPdu.setStatus('current')
acdCfmMepStatsRxLtrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLtrPdu.setStatus('current')
acdCfmMepStatsRxAisPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxAisPdu.setStatus('current')
acdCfmMepStatsRxLckPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLckPdu.setStatus('current')
acdCfmMepStatsRxTstPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxTstPdu.setStatus('current')
acdCfmMepStatsRxLinearApsPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLinearApsPdu.setStatus('current')
acdCfmMepStatsRxRingApsPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxRingApsPdu.setStatus('current')
acdCfmMepStatsRxMccPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxMccPdu.setStatus('current')
acdCfmMepStatsRxLmmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLmmPdu.setStatus('current')
acdCfmMepStatsRxLmrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLmrPdu.setStatus('current')
acdCfmMepStatsRx1dmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRx1dmPdu.setStatus('current')
acdCfmMepStatsRxDmmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxDmmPdu.setStatus('current')
acdCfmMepStatsRxDmrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxDmrPdu.setStatus('current')
acdCfmMepStatsRxExmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxExmPdu.setStatus('current')
acdCfmMepStatsRxExrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxExrPdu.setStatus('current')
acdCfmMepStatsRxVsmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxVsmPdu.setStatus('current')
acdCfmMepStatsRxVsrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxVsrPdu.setStatus('current')
acdCfmMepStatsRxCcmSeqErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxCcmSeqErrors.setStatus('current')
acdCfmMepStatsRxLtrUnexpectedPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLtrUnexpectedPdu.setStatus('current')
acdCfmMepStatsRxLtrMacErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLtrMacErrors.setStatus('current')
acdCfmMepStatsRxLbrOooErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLbrOooErrors.setStatus('current')
acdCfmMepStatsRxLbrUnexpectedPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLbrUnexpectedPdu.setStatus('current')
acdCfmMepStatsRxLbrDataErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxLbrDataErrors.setStatus('current')
acdCfmMepStatsRxCsfPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxCsfPdu.setStatus('current')
acdCfmMepStatsRxSlmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxSlmPdu.setStatus('current')
acdCfmMepStatsRxSlrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 3, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepStatsRxSlrPdu.setStatus('current')
acdCfmMepDmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 4), )
if mibBuilder.loadTexts: acdCfmMepDmStatsTable.setStatus('current')
acdCfmMepDmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 4, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmMepDmStatsID"), (0, "ACD-CFM-MIB", "acdCfmMepDmStatsPriority"))
if mibBuilder.loadTexts: acdCfmMepDmStatsEntry.setStatus('current')
acdCfmMepDmStatsID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmMepDmStatsID.setStatus('current')
acdCfmMepDmStatsPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 4, 1, 2), Unsigned32())
if mibBuilder.loadTexts: acdCfmMepDmStatsPriority.setStatus('current')
acdCfmMepDmStatsTxDmmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepDmStatsTxDmmPdu.setStatus('current')
acdCfmMepDmStatsRxDmmPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepDmStatsRxDmmPdu.setStatus('current')
acdCfmMepDmStatsTxDmrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepDmStatsTxDmrPdu.setStatus('current')
acdCfmMepDmStatsRxDmrPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 3, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepDmStatsRxDmrPdu.setStatus('current')
acdCfmStackTable = MibTable((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 4, 1), )
if mibBuilder.loadTexts: acdCfmStackTable.setStatus('current')
acdCfmStackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 4, 1, 1), ).setIndexNames((0, "ACD-CFM-MIB", "acdCfmMdIdx"), (0, "ACD-CFM-MIB", "acdCfmMaIdx"), (0, "ACD-CFM-MIB", "acdCfmMepID"))
if mibBuilder.loadTexts: acdCfmStackEntry.setStatus('current')
acdCfmMdIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 4, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: acdCfmMdIdx.setStatus('current')
acdCfmMaIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 4, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: acdCfmMaIdx.setStatus('current')
acdCfmMepID = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 4, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191)))
if mibBuilder.loadTexts: acdCfmMepID.setStatus('current')
acdCfmMepIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 22420, 2, 7, 1, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acdCfmMepIdx.setStatus('current')
acdCfmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 1))
acdCfmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2))
acdCfmDmCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 1)).setObjects(("ACD-CFM-MIB", "acdCfmDmCfgRowStatus"), ("ACD-CFM-MIB", "acdCfmDmCfgMepIdx"), ("ACD-CFM-MIB", "acdCfmDmCfgRemoteMepId"), ("ACD-CFM-MIB", "acdCfmDmCfgPriority"), ("ACD-CFM-MIB", "acdCfmDmCfgEnable"), ("ACD-CFM-MIB", "acdCfmDmCfgInterval"), ("ACD-CFM-MIB", "acdCfmDmCfgRefPeriod"), ("ACD-CFM-MIB", "acdCfmDmCfgOneWayDelayEnable"), ("ACD-CFM-MIB", "acdCfmDmCfgOneWayDelayMax"), ("ACD-CFM-MIB", "acdCfmDmCfgOneWayDelayThresh"), ("ACD-CFM-MIB", "acdCfmDmCfgOneWayAvgDelayThresh"), ("ACD-CFM-MIB", "acdCfmDmCfgOneWayDvEnable"), ("ACD-CFM-MIB", "acdCfmDmCfgOneWayDvMax"), ("ACD-CFM-MIB", "acdCfmDmCfgOneWayDvThresh"), ("ACD-CFM-MIB", "acdCfmDmCfgOneWayAvgDvThresh"), ("ACD-CFM-MIB", "acdCfmDmCfgTwoWayDelayEnable"), ("ACD-CFM-MIB", "acdCfmDmCfgTwoWayDelayMax"), ("ACD-CFM-MIB", "acdCfmDmCfgTwoWayDelayThresh"), ("ACD-CFM-MIB", "acdCfmDmCfgTwoWayAvgDelayThresh"), ("ACD-CFM-MIB", "acdCfmDmCfgTwoWayDvEnable"), ("ACD-CFM-MIB", "acdCfmDmCfgTwoWayDvMax"), ("ACD-CFM-MIB", "acdCfmDmCfgTwoWayDvThresh"), ("ACD-CFM-MIB", "acdCfmDmCfgTwoWayAvgDvThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmDmCfgGroup = acdCfmDmCfgGroup.setStatus('current')
acdCfmResultOneWayDelayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 2)).setObjects(("ACD-CFM-MIB", "acdCfmResultOneWayDelayPeriodIndex"), ("ACD-CFM-MIB", "acdCfmResultOneWayDelayIntervalStart"), ("ACD-CFM-MIB", "acdCfmResultOneWayDelayValid"), ("ACD-CFM-MIB", "acdCfmResultOneWayDelayAlert"), ("ACD-CFM-MIB", "acdCfmResultOneWayDelayAvgAlert"), ("ACD-CFM-MIB", "acdCfmResultOneWayDelaySamples"), ("ACD-CFM-MIB", "acdCfmResultOneWayDelayMinValue"), ("ACD-CFM-MIB", "acdCfmResultOneWayDelayMaxValue"), ("ACD-CFM-MIB", "acdCfmResultOneWayDelayAvgValue"), ("ACD-CFM-MIB", "acdCfmResultOneWayDelayThreshExc"), ("ACD-CFM-MIB", "acdCfmResultOneWayDelayInstValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmResultOneWayDelayGroup = acdCfmResultOneWayDelayGroup.setStatus('current')
acdCfmResultOneWayDvGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 3)).setObjects(("ACD-CFM-MIB", "acdCfmResultOneWayDvPeriodIndex"), ("ACD-CFM-MIB", "acdCfmResultOneWayDvIntervalStart"), ("ACD-CFM-MIB", "acdCfmResultOneWayDvValid"), ("ACD-CFM-MIB", "acdCfmResultOneWayDvAlert"), ("ACD-CFM-MIB", "acdCfmResultOneWayDvAvgAlert"), ("ACD-CFM-MIB", "acdCfmResultOneWayDvSamples"), ("ACD-CFM-MIB", "acdCfmResultOneWayDvMinValue"), ("ACD-CFM-MIB", "acdCfmResultOneWayDvMaxValue"), ("ACD-CFM-MIB", "acdCfmResultOneWayDvAvgValue"), ("ACD-CFM-MIB", "acdCfmResultOneWayDvThreshExc"), ("ACD-CFM-MIB", "acdCfmResultOneWayDvInstValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmResultOneWayDvGroup = acdCfmResultOneWayDvGroup.setStatus('current')
acdCfmResultTwoWayDelayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 4)).setObjects(("ACD-CFM-MIB", "acdCfmResultTwoWayDelayPeriodIndex"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDelayIntervalStart"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDelayValid"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDelayAlert"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDelayAvgAlert"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDelaySamples"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDelayMinValue"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDelayMaxValue"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDelayAvgValue"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDelayThreshExc"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDelayInstValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmResultTwoWayDelayGroup = acdCfmResultTwoWayDelayGroup.setStatus('current')
acdCfmResultTwoWayDvGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 5)).setObjects(("ACD-CFM-MIB", "acdCfmResultTwoWayDvPeriodIndex"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDvIntervalStart"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDvValid"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDvAlert"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDvAvgAlert"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDvSamples"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDvMinValue"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDvMaxValue"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDvAvgValue"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDvThreshExc"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDvInstValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmResultTwoWayDvGroup = acdCfmResultTwoWayDvGroup.setStatus('current')
acdCfmHistResultOneWayDelayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 6)).setObjects(("ACD-CFM-MIB", "acdCfmHistResultOneWayDelayStatus"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDelayDuration"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDelayIntervalEnd"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDelaySamples"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDelayMinValue"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDelayMaxValue"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDelayAvgValue"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDelayThreshExc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmHistResultOneWayDelayGroup = acdCfmHistResultOneWayDelayGroup.setStatus('current')
acdCfmHistResultOneWayDvGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 7)).setObjects(("ACD-CFM-MIB", "acdCfmHistResultOneWayDvStatus"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDvDuration"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDvIntervalEnd"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDvSamples"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDvMinValue"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDvMaxValue"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDvAvgValue"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDvThreshExc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmHistResultOneWayDvGroup = acdCfmHistResultOneWayDvGroup.setStatus('current')
acdCfmHistResultTwoWayDelayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 8)).setObjects(("ACD-CFM-MIB", "acdCfmHistResultTwoWayDelayStatus"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDelayDuration"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDelayIntervalEnd"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDelaySamples"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDelayMinValue"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDelayMaxValue"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDelayAvgValue"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDelayThreshExc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmHistResultTwoWayDelayGroup = acdCfmHistResultTwoWayDelayGroup.setStatus('current')
acdCfmHistResultTwoWayDvGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 9)).setObjects(("ACD-CFM-MIB", "acdCfmHistResultTwoWayDvStatus"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDvDuration"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDvIntervalEnd"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDvSamples"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDvMinValue"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDvMaxValue"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDvAvgValue"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDvThreshExc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmHistResultTwoWayDvGroup = acdCfmHistResultTwoWayDvGroup.setStatus('current')
acdCfmPktLossCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 10)).setObjects(("ACD-CFM-MIB", "acdCfmPktLossCfgRowStatus"), ("ACD-CFM-MIB", "acdCfmPktLossCfgMepIdx"), ("ACD-CFM-MIB", "acdCfmPktLossCfgRemoteMepId"), ("ACD-CFM-MIB", "acdCfmPktLossCfgPriority"), ("ACD-CFM-MIB", "acdCfmPktLossCfgEnable"), ("ACD-CFM-MIB", "acdCfmPktLossCfgInterval"), ("ACD-CFM-MIB", "acdCfmPktLossCfgRefPeriod"), ("ACD-CFM-MIB", "acdCfmPktLossCfgThresh"), ("ACD-CFM-MIB", "acdCfmPktLossCfgRatioThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmPktLossCfgGroup = acdCfmPktLossCfgGroup.setStatus('current')
acdCfmResultPktLossGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 11)).setObjects(("ACD-CFM-MIB", "acdCfmResultPktLossPeriodIndex"), ("ACD-CFM-MIB", "acdCfmResultPktLossIntervalStart"), ("ACD-CFM-MIB", "acdCfmResultPktLossValid"), ("ACD-CFM-MIB", "acdCfmResultPktLossAlert"), ("ACD-CFM-MIB", "acdCfmResultPktLossSamples"), ("ACD-CFM-MIB", "acdCfmResultPktLossOverflowSamples"), ("ACD-CFM-MIB", "acdCfmResultPktLossHCSamples"), ("ACD-CFM-MIB", "acdCfmResultPktLossNbrLoss"), ("ACD-CFM-MIB", "acdCfmResultPktLossOverflowNbrLoss"), ("ACD-CFM-MIB", "acdCfmResultPktLossHCNbrLoss"), ("ACD-CFM-MIB", "acdCfmResultPktLossNbrGaps"), ("ACD-CFM-MIB", "acdCfmResultPktLossOverflowNbrGaps"), ("ACD-CFM-MIB", "acdCfmResultPktLossHCNbrGaps"), ("ACD-CFM-MIB", "acdCfmResultPktLossLargestGap"), ("ACD-CFM-MIB", "acdCfmResultPktLossOverflowLargestGap"), ("ACD-CFM-MIB", "acdCfmResultPktLossHCLargestGap"), ("ACD-CFM-MIB", "acdCfmResultPktLossRatio"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmResultPktLossGroup = acdCfmResultPktLossGroup.setStatus('current')
acdCfmHistResultPktLossGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 12)).setObjects(("ACD-CFM-MIB", "acdCfmHistResultPktLossStatus"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossDuration"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossIntervalEnd"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossSamples"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossOverflowSamples"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossHCSamples"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossNbrLoss"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossOverflowNbrLoss"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossHCNbrLoss"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossNbrGaps"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossOverflowNbrGaps"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossHCNbrGaps"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossLargestGap"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossOverflowLargestGap"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossHCLargestGap"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossRatio"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmHistResultPktLossGroup = acdCfmHistResultPktLossGroup.setStatus('current')
acdCfmMepStatsTxGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 13)).setObjects(("ACD-CFM-MIB", "acdCfmMepStatsTxCcmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxLbmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxLbrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxLtmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxLtrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxAisPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxLckPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxTstPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxLinearApsPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxRingApsPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxMccPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxLmmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxLmrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTx1dmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxDmmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxDmrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxExmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxExrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxVsmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxVsrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxCsfPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxSlmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxSlrPdu"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmMepStatsTxGroup = acdCfmMepStatsTxGroup.setStatus('current')
acdCfmMepStatsRxGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 14)).setObjects(("ACD-CFM-MIB", "acdCfmMepStatsRxCcmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLbmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLbrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLtmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLtrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxAisPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLckPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxTstPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLinearApsPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxRingApsPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxMccPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLmmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLmrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRx1dmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxDmmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxDmrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxExmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxExrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxVsmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxVsrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxCcmSeqErrors"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLtrUnexpectedPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLtrMacErrors"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLbrOooErrors"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLbrUnexpectedPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxLbrDataErrors"), ("ACD-CFM-MIB", "acdCfmMepStatsRxCsfPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxSlrPdu"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmMepStatsRxGroup = acdCfmMepStatsRxGroup.setStatus('current')
acdCfmMepDmStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 15)).setObjects(("ACD-CFM-MIB", "acdCfmMepDmStatsTxDmmPdu"), ("ACD-CFM-MIB", "acdCfmMepDmStatsRxDmmPdu"), ("ACD-CFM-MIB", "acdCfmMepDmStatsTxDmrPdu"), ("ACD-CFM-MIB", "acdCfmMepDmStatsRxDmrPdu"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmMepDmStatsGroup = acdCfmMepDmStatsGroup.setStatus('current')
acdCfmMepStackGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 16)).setObjects(("ACD-CFM-MIB", "acdCfmMepIdx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmMepStackGroup = acdCfmMepStackGroup.setStatus('current')
acdCfmMepSlmStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 17)).setObjects(("ACD-CFM-MIB", "acdCfmMepStatsTxSlmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxSlmPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsTxSlrPdu"), ("ACD-CFM-MIB", "acdCfmMepStatsRxSlrPdu"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmMepSlmStatsGroup = acdCfmMepSlmStatsGroup.setStatus('current')
acdCfmSlmCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 18)).setObjects(("ACD-CFM-MIB", "acdCfmSlmCfgRowStatus"), ("ACD-CFM-MIB", "acdCfmSlmCfgMepIdx"), ("ACD-CFM-MIB", "acdCfmSlmCfgRemoteMepId"), ("ACD-CFM-MIB", "acdCfmSlmCfgPriority"), ("ACD-CFM-MIB", "acdCfmSlmCfgState"), ("ACD-CFM-MIB", "acdCfmSlmCfgInterval"), ("ACD-CFM-MIB", "acdCfmSlmCfgRefPeriod"), ("ACD-CFM-MIB", "acdCfmSlmCfgNearEndThresh"), ("ACD-CFM-MIB", "acdCfmSlmCfgFarEndThresh"), ("ACD-CFM-MIB", "acdCfmSlmCfgName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmSlmCfgGroup = acdCfmSlmCfgGroup.setStatus('current')
acdCfmSlmResultGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 19)).setObjects(("ACD-CFM-MIB", "acdCfmSlmResultPeriodIndex"), ("ACD-CFM-MIB", "acdCfmSlmResultIntervalStart"), ("ACD-CFM-MIB", "acdCfmSlmResultValid"), ("ACD-CFM-MIB", "acdCfmSlmResultNearEndAlert"), ("ACD-CFM-MIB", "acdCfmSlmResultFarEndAlert"), ("ACD-CFM-MIB", "acdCfmSlmResultTxSlm"), ("ACD-CFM-MIB", "acdCfmSlmResultRxSlr"), ("ACD-CFM-MIB", "acdCfmSlmResultRemoteRxSlm"), ("ACD-CFM-MIB", "acdCfmSlmResultNearEndNbrLoss"), ("ACD-CFM-MIB", "acdCfmSlmResultFarEndNbrLoss"), ("ACD-CFM-MIB", "acdCfmSlmResultNearEndRatio"), ("ACD-CFM-MIB", "acdCfmSlmResultFarEndRatio"), ("ACD-CFM-MIB", "acdCfmSlmResultNbrGaps"), ("ACD-CFM-MIB", "acdCfmSlmResultLargestGap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmSlmResultGroup = acdCfmSlmResultGroup.setStatus('current')
acdCfmSlmHistResultGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 2, 20)).setObjects(("ACD-CFM-MIB", "acdCfmSlmHistResultPeriodIndex"), ("ACD-CFM-MIB", "acdCfmSlmHistResultIntervalEnd"), ("ACD-CFM-MIB", "acdCfmSlmHistResultTxSlm"), ("ACD-CFM-MIB", "acdCfmSlmHistResultRxSlr"), ("ACD-CFM-MIB", "acdCfmSlmHistResultRemoteRxSlm"), ("ACD-CFM-MIB", "acdCfmSlmHistResultNearEndRatio"), ("ACD-CFM-MIB", "acdCfmSlmHistResultFarEndRatio"), ("ACD-CFM-MIB", "acdCfmSlmHistResultNbrGaps"), ("ACD-CFM-MIB", "acdCfmSlmHistResultLargestGap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmSlmHistResultGroup = acdCfmSlmHistResultGroup.setStatus('current')
acdCfmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 22420, 2, 7, 2, 1, 1)).setObjects(("ACD-CFM-MIB", "acdCfmDmCfgGroup"), ("ACD-CFM-MIB", "acdCfmResultOneWayDelayGroup"), ("ACD-CFM-MIB", "acdCfmResultOneWayDvGroup"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDelayGroup"), ("ACD-CFM-MIB", "acdCfmResultTwoWayDvGroup"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDelayGroup"), ("ACD-CFM-MIB", "acdCfmHistResultOneWayDvGroup"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDelayGroup"), ("ACD-CFM-MIB", "acdCfmHistResultTwoWayDvGroup"), ("ACD-CFM-MIB", "acdCfmPktLossCfgGroup"), ("ACD-CFM-MIB", "acdCfmResultPktLossGroup"), ("ACD-CFM-MIB", "acdCfmHistResultPktLossGroup"), ("ACD-CFM-MIB", "acdCfmMepStatsTxGroup"), ("ACD-CFM-MIB", "acdCfmMepStatsRxGroup"), ("ACD-CFM-MIB", "acdCfmMepDmStatsGroup"), ("ACD-CFM-MIB", "acdCfmMepStackGroup"), ("ACD-CFM-MIB", "acdCfmMepSlmStatsGroup"), ("ACD-CFM-MIB", "acdCfmSlmCfgGroup"), ("ACD-CFM-MIB", "acdCfmSlmResultGroup"), ("ACD-CFM-MIB", "acdCfmSlmHistResultGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acdCfmCompliance = acdCfmCompliance.setStatus('current')
mibBuilder.exportSymbols("ACD-CFM-MIB", acdCfmHistResultPktLossTable=acdCfmHistResultPktLossTable, acdCfmHistResultOneWayDvStatus=acdCfmHistResultOneWayDvStatus, acdCfmResultOneWayDelayAvgAlert=acdCfmResultOneWayDelayAvgAlert, acdCfmMepStatsTxTable=acdCfmMepStatsTxTable, acdCfmResultTwoWayDelayInstValue=acdCfmResultTwoWayDelayInstValue, acdCfmSlmResultFarEndRatio=acdCfmSlmResultFarEndRatio, acdCfmDelayMeasurement=acdCfmDelayMeasurement, acdCfmMepStatsRxMccPdu=acdCfmMepStatsRxMccPdu, acdCfm=acdCfm, acdCfmDmCfgOneWayDvEnable=acdCfmDmCfgOneWayDvEnable, acdCfmConformance=acdCfmConformance, acdCfmHistResultOneWayDvGroup=acdCfmHistResultOneWayDvGroup, acdCfmSlmCfgRefPeriod=acdCfmSlmCfgRefPeriod, acdCfmMepStatsRxVsrPdu=acdCfmMepStatsRxVsrPdu, acdCfmMepStatsTxGroup=acdCfmMepStatsTxGroup, acdCfmSlmHistResultTxSlm=acdCfmSlmHistResultTxSlm, acdCfmResultOneWayDvAvgValue=acdCfmResultOneWayDvAvgValue, acdCfmMepStatsRxLbrDataErrors=acdCfmMepStatsRxLbrDataErrors, acdCfmHistResultOneWayDvAvgValue=acdCfmHistResultOneWayDvAvgValue, acdCfmHistResultOneWayDelayDuration=acdCfmHistResultOneWayDelayDuration, acdCfmResultTwoWayDvIntervalStart=acdCfmResultTwoWayDvIntervalStart, acdCfmResultPktLossPeriodIndex=acdCfmResultPktLossPeriodIndex, acdCfmMepDmStatsGroup=acdCfmMepDmStatsGroup, acdCfmHistResultPktLossGroup=acdCfmHistResultPktLossGroup, acdCfmResultPktLossNbrGaps=acdCfmResultPktLossNbrGaps, acdCfmHistResultPktLossStatus=acdCfmHistResultPktLossStatus, acdCfmMep=acdCfmMep, acdCfmHistResultTwoWayDelaySampleIndex=acdCfmHistResultTwoWayDelaySampleIndex, acdCfmHistResultPktLossID=acdCfmHistResultPktLossID, acdCfmResultTwoWayDelayIntervalStart=acdCfmResultTwoWayDelayIntervalStart, acdCfmSlmHistResultEntry=acdCfmSlmHistResultEntry, acdCfmHistResultPktLossSamples=acdCfmHistResultPktLossSamples, acdCfmResultTwoWayDelayMaxValue=acdCfmResultTwoWayDelayMaxValue, acdCfmHistResultTwoWayDvGroup=acdCfmHistResultTwoWayDvGroup, acdCfmHistResultPktLossSampleIndex=acdCfmHistResultPktLossSampleIndex, acdCfmHistResultTwoWayDelayMaxValue=acdCfmHistResultTwoWayDelayMaxValue, acdCfmResultOneWayDvMaxValue=acdCfmResultOneWayDvMaxValue, acdCfmHistResultTwoWayDvMaxValue=acdCfmHistResultTwoWayDvMaxValue, acdCfmDmCfgID=acdCfmDmCfgID, acdCfmHistResultOneWayDelayTable=acdCfmHistResultOneWayDelayTable, acdCfmMepStatsRxDmmPdu=acdCfmMepStatsRxDmmPdu, acdCfmResultTwoWayDvMinValue=acdCfmResultTwoWayDvMinValue, acdCfmHistResultOneWayDelayAvgValue=acdCfmHistResultOneWayDelayAvgValue, acdCfmPktLossCfgEnable=acdCfmPktLossCfgEnable, acdCfmResultOneWayDvGroup=acdCfmResultOneWayDvGroup, acdCfmMepStatsTxCsfPdu=acdCfmMepStatsTxCsfPdu, acdCfmMepStatsRxLbrPdu=acdCfmMepStatsRxLbrPdu, acdCfmMepStatsRxCsfPdu=acdCfmMepStatsRxCsfPdu, acdCfmSlmResultEntry=acdCfmSlmResultEntry, acdCfmMepDmStatsTable=acdCfmMepDmStatsTable, acdCfmSlmResultNearEndAlert=acdCfmSlmResultNearEndAlert, acdCfmSlmHistResultIntervalEnd=acdCfmSlmHistResultIntervalEnd, acdCfmHistResultTwoWayDvAvgValue=acdCfmHistResultTwoWayDvAvgValue, acdCfmMepStatsTxLbmPdu=acdCfmMepStatsTxLbmPdu, acdCfmHistResultOneWayDvThreshExc=acdCfmHistResultOneWayDvThreshExc, acdCfmHistResultOneWayDvDuration=acdCfmHistResultOneWayDvDuration, acdCfmResultPktLossHCNbrLoss=acdCfmResultPktLossHCNbrLoss, acdCfmMepStatsTxMccPdu=acdCfmMepStatsTxMccPdu, acdCfmSlmCfgRowStatus=acdCfmSlmCfgRowStatus, acdCfmResultPktLossSamples=acdCfmResultPktLossSamples, acdCfmResultPktLossGroup=acdCfmResultPktLossGroup, acdCfmResultPktLossOverflowNbrLoss=acdCfmResultPktLossOverflowNbrLoss, acdCfmMepDmStatsTxDmrPdu=acdCfmMepDmStatsTxDmrPdu, acdCfmSlmResultLargestGap=acdCfmSlmResultLargestGap, acdCfmDmCfgGroup=acdCfmDmCfgGroup, acdCfmSlmResultValid=acdCfmSlmResultValid, acdCfmSlmCfgInterval=acdCfmSlmCfgInterval, acdCfmMepStatsTx1dmPdu=acdCfmMepStatsTx1dmPdu, acdCfmResultPktLossHCSamples=acdCfmResultPktLossHCSamples, acdCfmMaIdx=acdCfmMaIdx, acdCfmMepStatsRxCcmPdu=acdCfmMepStatsRxCcmPdu, acdCfmDmCfgRefPeriod=acdCfmDmCfgRefPeriod, acdCfmResultOneWayDelayIntervalStart=acdCfmResultOneWayDelayIntervalStart, acdCfmMepStatsTxDmrPdu=acdCfmMepStatsTxDmrPdu, acdCfmSlmResultIntervalStart=acdCfmSlmResultIntervalStart, acdCfmResultPktLossID=acdCfmResultPktLossID, acdCfmNotifications=acdCfmNotifications, acdCfmMepStatsRxLmmPdu=acdCfmMepStatsRxLmmPdu, acdCfmResultPktLossNbrLoss=acdCfmResultPktLossNbrLoss, acdCfmHistResultPktLossOverflowNbrLoss=acdCfmHistResultPktLossOverflowNbrLoss, acdCfmSlmHistResultRxSlr=acdCfmSlmHistResultRxSlr, acdCfmDmCfgMepIdx=acdCfmDmCfgMepIdx, acdCfmDmCfgTwoWayDvMax=acdCfmDmCfgTwoWayDvMax, acdCfmHistResultTwoWayDvSamples=acdCfmHistResultTwoWayDvSamples, acdCfmHistResultTwoWayDvMinValue=acdCfmHistResultTwoWayDvMinValue, acdCfmMepStatsRxExmPdu=acdCfmMepStatsRxExmPdu, acdCfmMepStatsRxLbmPdu=acdCfmMepStatsRxLbmPdu, acdCfmResultOneWayDelayEntry=acdCfmResultOneWayDelayEntry, acdCfmResultTwoWayDvEntry=acdCfmResultTwoWayDvEntry, acdCfmGroups=acdCfmGroups, acdCfmMepStatsRxTable=acdCfmMepStatsRxTable, acdCfmHistResultOneWayDelayIntervalEnd=acdCfmHistResultOneWayDelayIntervalEnd, acdCfmPktLossCfgPriority=acdCfmPktLossCfgPriority, acdCfmDmCfgEnable=acdCfmDmCfgEnable, acdCfmResultTwoWayDvPeriodIndex=acdCfmResultTwoWayDvPeriodIndex, acdCfmHistResultOneWayDvID=acdCfmHistResultOneWayDvID, acdCfmMepStatsTxRingApsPdu=acdCfmMepStatsTxRingApsPdu, acdCfmMepStatsRxCcmSeqErrors=acdCfmMepStatsRxCcmSeqErrors, acdCfmResultTwoWayDvID=acdCfmResultTwoWayDvID, acdCfmSlmHistResultLargestGap=acdCfmSlmHistResultLargestGap, acdCfmHistResultOneWayDvEntry=acdCfmHistResultOneWayDvEntry, acdCfmResultTwoWayDelayPeriodIndex=acdCfmResultTwoWayDelayPeriodIndex, acdCfmPacketLoss=acdCfmPacketLoss, acdCfmResultOneWayDelayAvgValue=acdCfmResultOneWayDelayAvgValue, acdCfmDmCfgRowStatus=acdCfmDmCfgRowStatus, acdCfmHistResultTwoWayDvSampleIndex=acdCfmHistResultTwoWayDvSampleIndex, acdCfmHistResultTwoWayDvTable=acdCfmHistResultTwoWayDvTable, acdCfmSlmResultGroup=acdCfmSlmResultGroup, acdCfmHistResultOneWayDelayGroup=acdCfmHistResultOneWayDelayGroup, acdCfmMepStatsRxLbrUnexpectedPdu=acdCfmMepStatsRxLbrUnexpectedPdu, acdCfmResultTwoWayDelayID=acdCfmResultTwoWayDelayID, acdCfmResultOneWayDelayPeriodIndex=acdCfmResultOneWayDelayPeriodIndex, acdCfmResultTwoWayDvGroup=acdCfmResultTwoWayDvGroup, acdCfmHistResultTwoWayDelayStatus=acdCfmHistResultTwoWayDelayStatus, acdCfmMepStatsRxLtrPdu=acdCfmMepStatsRxLtrPdu, acdCfmResultOneWayDelayGroup=acdCfmResultOneWayDelayGroup, acdCfmPktLossCfgMepIdx=acdCfmPktLossCfgMepIdx, acdCfmResultTwoWayDvValid=acdCfmResultTwoWayDvValid, acdCfmHistResultOneWayDelayThreshExc=acdCfmHistResultOneWayDelayThreshExc, acdCfmSlmResultFarEndAlert=acdCfmSlmResultFarEndAlert, acdCfmMepDmStatsEntry=acdCfmMepDmStatsEntry, acdCfmMepStatsRxLtmPdu=acdCfmMepStatsRxLtmPdu, acdCfmSlmCfgTable=acdCfmSlmCfgTable, acdCfmHistResultPktLossHCNbrGaps=acdCfmHistResultPktLossHCNbrGaps, acdCfmResultPktLossValid=acdCfmResultPktLossValid, acdCfmHistResultPktLossEntry=acdCfmHistResultPktLossEntry, acdCfmResultOneWayDelayAlert=acdCfmResultOneWayDelayAlert, acdCfmDmCfgEntry=acdCfmDmCfgEntry, acdCfmHistResultOneWayDvSamples=acdCfmHistResultOneWayDvSamples, acdCfmSlmHistResultRemoteRxSlm=acdCfmSlmHistResultRemoteRxSlm, acdCfmMepStatsRxLtrMacErrors=acdCfmMepStatsRxLtrMacErrors, acdCfmSlmResultNearEndNbrLoss=acdCfmSlmResultNearEndNbrLoss, acdCfmSlmCfgGroup=acdCfmSlmCfgGroup, acdCfmHistResultOneWayDvTable=acdCfmHistResultOneWayDvTable, acdCfmPktLossCfgTable=acdCfmPktLossCfgTable, acdCfmDmCfgOneWayDelayEnable=acdCfmDmCfgOneWayDelayEnable, acdCfmHistResultTwoWayDvIntervalEnd=acdCfmHistResultTwoWayDvIntervalEnd, acdCfmHistResultTwoWayDvStatus=acdCfmHistResultTwoWayDvStatus, acdCfmHistResultOneWayDvMaxValue=acdCfmHistResultOneWayDvMaxValue, acdCfmMepStatsTxLbrPdu=acdCfmMepStatsTxLbrPdu, acdCfmResultOneWayDelayMinValue=acdCfmResultOneWayDelayMinValue, acdCfmResultTwoWayDelayMinValue=acdCfmResultTwoWayDelayMinValue, acdCfmSlmResultTable=acdCfmSlmResultTable, acdCfmHistResultPktLossOverflowSamples=acdCfmHistResultPktLossOverflowSamples, acdCfmStack=acdCfmStack, acdCfmMepStatsTxLtrPdu=acdCfmMepStatsTxLtrPdu, acdCfmMepStatsRxTstPdu=acdCfmMepStatsRxTstPdu, acdCfmHistResultTwoWayDelayMinValue=acdCfmHistResultTwoWayDelayMinValue, acdCfmMepStatsRxAisPdu=acdCfmMepStatsRxAisPdu, acdCfmDmCfgOneWayDelayMax=acdCfmDmCfgOneWayDelayMax, acdCfmMepStatsRxExrPdu=acdCfmMepStatsRxExrPdu, acdCfmResultOneWayDelaySamples=acdCfmResultOneWayDelaySamples, acdCfmSlmResultID=acdCfmSlmResultID, acdCfmResultTwoWayDvTable=acdCfmResultTwoWayDvTable, acdCfmResultOneWayDvEntry=acdCfmResultOneWayDvEntry, acdCfmDmCfgTwoWayAvgDvThresh=acdCfmDmCfgTwoWayAvgDvThresh, acdCfmSlmCfgRemoteMepId=acdCfmSlmCfgRemoteMepId, acdCfmSlmHistResultGroup=acdCfmSlmHistResultGroup, acdCfmMepSlmStatsGroup=acdCfmMepSlmStatsGroup, acdCfmHistResultOneWayDelayID=acdCfmHistResultOneWayDelayID, acdCfmSlmCfgPriority=acdCfmSlmCfgPriority, acdCfmResultTwoWayDelayValid=acdCfmResultTwoWayDelayValid, acdCfmHistResultTwoWayDvEntry=acdCfmHistResultTwoWayDvEntry, acdCfmDmCfgInterval=acdCfmDmCfgInterval, acdCfmMepStatsRxDmrPdu=acdCfmMepStatsRxDmrPdu, acdCfmResultOneWayDvPeriodIndex=acdCfmResultOneWayDvPeriodIndex, acdCfmSlmHistResultPeriodIndex=acdCfmSlmHistResultPeriodIndex, acdCfmResultPktLossAlert=acdCfmResultPktLossAlert, acdCfmDmCfgTwoWayAvgDelayThresh=acdCfmDmCfgTwoWayAvgDelayThresh, acdCfmMepStatsTxVsmPdu=acdCfmMepStatsTxVsmPdu, acdCfmDmCfgTwoWayDvThresh=acdCfmDmCfgTwoWayDvThresh, acdCfmMepStatsRxGroup=acdCfmMepStatsRxGroup, acdCfmResultTwoWayDelayTable=acdCfmResultTwoWayDelayTable, acdCfmMepStatsRxID=acdCfmMepStatsRxID, acdCfmMepDmStatsRxDmmPdu=acdCfmMepDmStatsRxDmmPdu, acdCfmHistResultTwoWayDelayAvgValue=acdCfmHistResultTwoWayDelayAvgValue, acdCfmHistResultPktLossHCLargestGap=acdCfmHistResultPktLossHCLargestGap, acdCfmResultTwoWayDvAvgValue=acdCfmResultTwoWayDvAvgValue, acdCfmMepStatsRxLckPdu=acdCfmMepStatsRxLckPdu, acdCfmResultPktLossOverflowSamples=acdCfmResultPktLossOverflowSamples, acdCfmResultTwoWayDelayGroup=acdCfmResultTwoWayDelayGroup, acdCfmResultPktLossTable=acdCfmResultPktLossTable, acdCfmMepStatsRxLbrOooErrors=acdCfmMepStatsRxLbrOooErrors, acdCfmSlmResultRxSlr=acdCfmSlmResultRxSlr, acdCfmResultOneWayDvMinValue=acdCfmResultOneWayDvMinValue, acdCfmHistResultTwoWayDvID=acdCfmHistResultTwoWayDvID, acdCfmSlmHistResultNbrGaps=acdCfmSlmHistResultNbrGaps, acdCfmHistResultTwoWayDvThreshExc=acdCfmHistResultTwoWayDvThreshExc, acdCfmResultOneWayDvID=acdCfmResultOneWayDvID, acdCfmSlmCfgMepIdx=acdCfmSlmCfgMepIdx, acdCfmHistResultTwoWayDelaySamples=acdCfmHistResultTwoWayDelaySamples, acdCfmHistResultPktLossNbrGaps=acdCfmHistResultPktLossNbrGaps, acdCfmMepStatsRxVsmPdu=acdCfmMepStatsRxVsmPdu, acdCfmMepStatsRx1dmPdu=acdCfmMepStatsRx1dmPdu, acdCfmResultPktLossHCNbrGaps=acdCfmResultPktLossHCNbrGaps, acdCfmMepID=acdCfmMepID, acdCfmHistResultTwoWayDvDuration=acdCfmHistResultTwoWayDvDuration, acdCfmHistResultOneWayDelaySampleIndex=acdCfmHistResultOneWayDelaySampleIndex, acdCfmDmCfgOneWayDvMax=acdCfmDmCfgOneWayDvMax, acdCfmMepStatsTxAisPdu=acdCfmMepStatsTxAisPdu, acdCfmResultOneWayDelayThreshExc=acdCfmResultOneWayDelayThreshExc, acdCfmDmCfgOneWayDelayThresh=acdCfmDmCfgOneWayDelayThresh, acdCfmHistResultOneWayDelayStatus=acdCfmHistResultOneWayDelayStatus, acdCfmResultTwoWayDvThreshExc=acdCfmResultTwoWayDvThreshExc, acdCfmMdIdx=acdCfmMdIdx, acdCfmMepStatsRxRingApsPdu=acdCfmMepStatsRxRingApsPdu, acdCfmMepStatsRxSlmPdu=acdCfmMepStatsRxSlmPdu, acdCfmHistResultPktLossHCNbrLoss=acdCfmHistResultPktLossHCNbrLoss, acdCfmPktLossCfgGroup=acdCfmPktLossCfgGroup, acdCfmResultPktLossLargestGap=acdCfmResultPktLossLargestGap, acdCfmSlmResultFarEndNbrLoss=acdCfmSlmResultFarEndNbrLoss, acdCfmSlmCfgEntry=acdCfmSlmCfgEntry, acdCfmMepStatsTxEntry=acdCfmMepStatsTxEntry, acdCfmDmCfgTwoWayDvEnable=acdCfmDmCfgTwoWayDvEnable, acdCfmDmCfgPriority=acdCfmDmCfgPriority, acdCfmMepStatsTxDmmPdu=acdCfmMepStatsTxDmmPdu, acdCfmSlmResultNbrGaps=acdCfmSlmResultNbrGaps, acdCfmMepStackGroup=acdCfmMepStackGroup, acdCfmResultTwoWayDvSamples=acdCfmResultTwoWayDvSamples, acdCfmStackTable=acdCfmStackTable, acdCfmMepStatsTxSlmPdu=acdCfmMepStatsTxSlmPdu, acdCfmMepStatsTxExrPdu=acdCfmMepStatsTxExrPdu, acdCfmHistResultTwoWayDelayThreshExc=acdCfmHistResultTwoWayDelayThreshExc, acdCfmResultPktLossOverflowNbrGaps=acdCfmResultPktLossOverflowNbrGaps, acdCfmHistResultOneWayDelaySamples=acdCfmHistResultOneWayDelaySamples, acdCfmHistResultOneWayDelayEntry=acdCfmHistResultOneWayDelayEntry, acdCfmHistResultOneWayDvMinValue=acdCfmHistResultOneWayDvMinValue, acdCfmSlmCfgNearEndThresh=acdCfmSlmCfgNearEndThresh, acdCfmCompliance=acdCfmCompliance, acdCfmDmCfgTable=acdCfmDmCfgTable, acdCfmResultOneWayDvAvgAlert=acdCfmResultOneWayDvAvgAlert, acdCfmHistResultPktLossIntervalEnd=acdCfmHistResultPktLossIntervalEnd, acdCfmResultTwoWayDvAvgAlert=acdCfmResultTwoWayDvAvgAlert, acdCfmResultOneWayDvSamples=acdCfmResultOneWayDvSamples, acdCfmMepDmStatsID=acdCfmMepDmStatsID, acdCfmResultTwoWayDelayAlert=acdCfmResultTwoWayDelayAlert, acdCfmResultPktLossOverflowLargestGap=acdCfmResultPktLossOverflowLargestGap, acdCfmMepStatsRxLinearApsPdu=acdCfmMepStatsRxLinearApsPdu, acdCfmSlmResultNearEndRatio=acdCfmSlmResultNearEndRatio, acdCfmResultTwoWayDvMaxValue=acdCfmResultTwoWayDvMaxValue, acdCfmResultOneWayDelayValid=acdCfmResultOneWayDelayValid, acdCfmMepStatsTxTstPdu=acdCfmMepStatsTxTstPdu, acdCfmPktLossCfgInterval=acdCfmPktLossCfgInterval, acdCfmSlm=acdCfmSlm, acdCfmDmCfgOneWayAvgDvThresh=acdCfmDmCfgOneWayAvgDvThresh, acdCfmSlmCfgState=acdCfmSlmCfgState, acdCfmSlmHistResultTable=acdCfmSlmHistResultTable, acdCfmMepStatsRxEntry=acdCfmMepStatsRxEntry, acdCfmMepStatsRxSlrPdu=acdCfmMepStatsRxSlrPdu, acdCfmMepStatsTxVsrPdu=acdCfmMepStatsTxVsrPdu, acdCfmMepStatsTxSlrPdu=acdCfmMepStatsTxSlrPdu, acdCfmResultOneWayDvThreshExc=acdCfmResultOneWayDvThreshExc, acdCfmHistResultOneWayDvIntervalEnd=acdCfmHistResultOneWayDvIntervalEnd, acdCfmResultTwoWayDvAlert=acdCfmResultTwoWayDvAlert)
mibBuilder.exportSymbols("ACD-CFM-MIB", acdCfmHistResultPktLossNbrLoss=acdCfmHistResultPktLossNbrLoss, acdCfmResultOneWayDelayTable=acdCfmResultOneWayDelayTable, acdCfmHistResultPktLossDuration=acdCfmHistResultPktLossDuration, acdCfmHistResultPktLossOverflowNbrGaps=acdCfmHistResultPktLossOverflowNbrGaps, acdCfmMepStatsRxLmrPdu=acdCfmMepStatsRxLmrPdu, acdCfmHistResultPktLossLargestGap=acdCfmHistResultPktLossLargestGap, acdCfmDmCfgTwoWayDelayMax=acdCfmDmCfgTwoWayDelayMax, acdCfmResultTwoWayDelayAvgValue=acdCfmResultTwoWayDelayAvgValue, acdCfmResultTwoWayDelaySamples=acdCfmResultTwoWayDelaySamples, acdCfmResultPktLossRatio=acdCfmResultPktLossRatio, acdCfmResultOneWayDelayInstValue=acdCfmResultOneWayDelayInstValue, acdCfmPktLossCfgRowStatus=acdCfmPktLossCfgRowStatus, acdCfmMepStatsRxLtrUnexpectedPdu=acdCfmMepStatsRxLtrUnexpectedPdu, acdCfmSlmCfgID=acdCfmSlmCfgID, acdCfmSlmHistResultInstanceIndex=acdCfmSlmHistResultInstanceIndex, acdCfmHistResultTwoWayDelayIntervalEnd=acdCfmHistResultTwoWayDelayIntervalEnd, acdCfmDmCfgOneWayDvThresh=acdCfmDmCfgOneWayDvThresh, PYSNMP_MODULE_ID=acdCfm, acdCfmHistResultTwoWayDelayDuration=acdCfmHistResultTwoWayDelayDuration, acdCfmResultTwoWayDelayAvgAlert=acdCfmResultTwoWayDelayAvgAlert, acdCfmDmCfgTwoWayDelayEnable=acdCfmDmCfgTwoWayDelayEnable, acdCfmHistResultPktLossOverflowLargestGap=acdCfmHistResultPktLossOverflowLargestGap, acdCfmResultPktLossHCLargestGap=acdCfmResultPktLossHCLargestGap, acdCfmMepDmStatsRxDmrPdu=acdCfmMepDmStatsRxDmrPdu, acdCfmSlmResultTxSlm=acdCfmSlmResultTxSlm, acdCfmDmCfgRemoteMepId=acdCfmDmCfgRemoteMepId, acdCfmResultTwoWayDelayThreshExc=acdCfmResultTwoWayDelayThreshExc, acdCfmStackEntry=acdCfmStackEntry, acdCfmHistResultPktLossHCSamples=acdCfmHistResultPktLossHCSamples, acdCfmSlmHistResultID=acdCfmSlmHistResultID, acdCfmHistResultTwoWayDelayEntry=acdCfmHistResultTwoWayDelayEntry, acdCfmResultPktLossIntervalStart=acdCfmResultPktLossIntervalStart, acdCfmHistResultPktLossRatio=acdCfmHistResultPktLossRatio, acdCfmResultTwoWayDvInstValue=acdCfmResultTwoWayDvInstValue, acdCfmMepStatsTxLtmPdu=acdCfmMepStatsTxLtmPdu, acdCfmDmCfgTwoWayDelayThresh=acdCfmDmCfgTwoWayDelayThresh, acdCfmCompliances=acdCfmCompliances, acdCfmPktLossCfgRemoteMepId=acdCfmPktLossCfgRemoteMepId, acdCfmMIBObjects=acdCfmMIBObjects, acdCfmMepStatsTxLmmPdu=acdCfmMepStatsTxLmmPdu, acdCfmDmCfgOneWayAvgDelayThresh=acdCfmDmCfgOneWayAvgDelayThresh, acdCfmSlmCfgName=acdCfmSlmCfgName, acdCfmSlmHistResultNearEndRatio=acdCfmSlmHistResultNearEndRatio, acdCfmSlmResultRemoteRxSlm=acdCfmSlmResultRemoteRxSlm, acdCfmResultPktLossEntry=acdCfmResultPktLossEntry, acdCfmResultOneWayDvAlert=acdCfmResultOneWayDvAlert, acdCfmResultOneWayDelayMaxValue=acdCfmResultOneWayDelayMaxValue, acdCfmHistResultOneWayDelayMinValue=acdCfmHistResultOneWayDelayMinValue, acdCfmHistResultTwoWayDelayID=acdCfmHistResultTwoWayDelayID, acdCfmResultOneWayDvInstValue=acdCfmResultOneWayDvInstValue, acdCfmPktLossCfgRatioThresh=acdCfmPktLossCfgRatioThresh, acdCfmMepStatsTxLmrPdu=acdCfmMepStatsTxLmrPdu, acdCfmSlmResultPeriodIndex=acdCfmSlmResultPeriodIndex, acdCfmPktLossCfgThresh=acdCfmPktLossCfgThresh, acdCfmHistResultTwoWayDelayTable=acdCfmHistResultTwoWayDelayTable, acdCfmResultOneWayDelayID=acdCfmResultOneWayDelayID, acdCfmResultOneWayDvTable=acdCfmResultOneWayDvTable, acdCfmMepStatsTxExmPdu=acdCfmMepStatsTxExmPdu, acdCfmHistResultOneWayDvSampleIndex=acdCfmHistResultOneWayDvSampleIndex, acdCfmMepStatsTxLckPdu=acdCfmMepStatsTxLckPdu, acdCfmMepStatsTxID=acdCfmMepStatsTxID, acdCfmPktLossCfgRefPeriod=acdCfmPktLossCfgRefPeriod, acdCfmHistResultTwoWayDelayGroup=acdCfmHistResultTwoWayDelayGroup, acdCfmResultOneWayDvIntervalStart=acdCfmResultOneWayDvIntervalStart, acdCfmPktLossCfgID=acdCfmPktLossCfgID, acdCfmSlmHistResultFarEndRatio=acdCfmSlmHistResultFarEndRatio, acdCfmMepStatsTxLinearApsPdu=acdCfmMepStatsTxLinearApsPdu, acdCfmMepDmStatsPriority=acdCfmMepDmStatsPriority, acdCfmMepDmStatsTxDmmPdu=acdCfmMepDmStatsTxDmmPdu, acdCfmResultTwoWayDelayEntry=acdCfmResultTwoWayDelayEntry, acdCfmMepIdx=acdCfmMepIdx, acdCfmHistResultOneWayDelayMaxValue=acdCfmHistResultOneWayDelayMaxValue, acdCfmResultOneWayDvValid=acdCfmResultOneWayDvValid, acdCfmPktLossCfgEntry=acdCfmPktLossCfgEntry, acdCfmSlmCfgFarEndThresh=acdCfmSlmCfgFarEndThresh, acdCfmMepStatsTxCcmPdu=acdCfmMepStatsTxCcmPdu)
