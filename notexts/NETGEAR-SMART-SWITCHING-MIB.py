#
# PySNMP MIB module NETGEAR-SMART-SWITCHING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/netgear/NETGEAR-SMART-SWITCHING-MIB
# Produced by pysmi-1.1.12 at Tue May 28 12:09:54 2024
# On host fv-az1490-484 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ng700smartswitch, = mibBuilder.importSymbols("NETGEAR-REF-MIB", "ng700smartswitch")
dot1qTpFdbAddress, VlanIndex, dot1qFdbId, dot1qVlanIndex = mibBuilder.importSymbols("Q-BRIDGE-MIB", "dot1qTpFdbAddress", "VlanIndex", "dot1qFdbId", "dot1qVlanIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, IpAddress, ModuleIdentity, Unsigned32, Integer32, Gauge32, ObjectIdentity, Counter32, Counter64, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "IpAddress", "ModuleIdentity", "Unsigned32", "Integer32", "Gauge32", "ObjectIdentity", "Counter32", "Counter64", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks", "NotificationType")
DisplayString, PhysAddress, RowStatus, MacAddress, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "RowStatus", "MacAddress", "TextualConvention", "DateAndTime")
agentSwitching = ModuleIdentity((1, 3, 6, 1, 4, 1, 4526, 11, 1))
agentSwitching.setRevisions(('2008-03-17 00:00',))
if mibBuilder.loadTexts: agentSwitching.setLastUpdated('200803170000Z')
if mibBuilder.loadTexts: agentSwitching.setOrganization('Netgear')
class PortList(TextualConvention, OctetString):
    status = 'current'

class VlanList(TextualConvention, OctetString):
    status = 'current'

class AgentPortMask(TextualConvention, OctetString):
    status = 'current'

class Ipv6Address(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

class Ipv6AddressPrefix(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

class Ipv6AddressIfIdentifier(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 8)

class Ipv6IfIndex(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class Ipv6IfIndexOrZero(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

agentInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1))
agentInventoryGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1))
agentInventorySysDescription = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySysDescription.setStatus('current')
agentInventoryMachineType = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryMachineType.setStatus('current')
agentInventoryMachineModel = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryMachineModel.setStatus('current')
agentInventorySerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySerialNumber.setStatus('current')
agentInventoryFRUNumber = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryFRUNumber.setStatus('current')
agentInventoryMaintenanceLevel = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryMaintenanceLevel.setStatus('current')
agentInventoryPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryPartNumber.setStatus('current')
agentInventoryManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryManufacturer.setStatus('current')
agentInventoryBurnedInMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 9), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryBurnedInMacAddress.setStatus('current')
agentInventoryOperatingSystem = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryOperatingSystem.setStatus('current')
agentInventoryNetworkProcessingDevice = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryNetworkProcessingDevice.setStatus('current')
agentInventoryAdditionalPackages = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryAdditionalPackages.setStatus('current')
agentInventorySoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySoftwareVersion.setStatus('current')
agentTrapLogGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 2))
agentTrapLogTotal = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogTotal.setStatus('current')
agentTrapLogTotalSinceLastViewed = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogTotalSinceLastViewed.setStatus('current')
agentTrapLogTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 2, 4), )
if mibBuilder.loadTexts: agentTrapLogTable.setStatus('current')
agentTrapLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 2, 4, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentTrapLogIndex"))
if mibBuilder.loadTexts: agentTrapLogEntry.setStatus('current')
agentTrapLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogIndex.setStatus('current')
agentTrapLogSystemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 2, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogSystemTime.setStatus('current')
agentTrapLogTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 2, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogTrap.setStatus('current')
agentSupportedMibTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 3), )
if mibBuilder.loadTexts: agentSupportedMibTable.setStatus('current')
agentSupportedMibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 3, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentSupportedMibIndex"))
if mibBuilder.loadTexts: agentSupportedMibEntry.setStatus('current')
agentSupportedMibIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSupportedMibIndex.setStatus('current')
agentSupportedMibName = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSupportedMibName.setStatus('current')
agentSupportedMibDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSupportedMibDescription.setStatus('current')
agentConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2))
agentCLIConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1))
agentLoginSessionTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 1), )
if mibBuilder.loadTexts: agentLoginSessionTable.setStatus('current')
agentLoginSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 1, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentLoginSessionIndex"))
if mibBuilder.loadTexts: agentLoginSessionEntry.setStatus('current')
agentLoginSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionIndex.setStatus('current')
agentLoginSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionUserName.setStatus('current')
agentLoginSessionIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionIPAddress.setStatus('obsolete')
agentLoginSessionConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("serial", 1), ("telnet", 2), ("ssh", 3), ("http", 4), ("https", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionConnectionType.setStatus('current')
agentLoginSessionIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionIdleTime.setStatus('current')
agentLoginSessionSessionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionSessionTime.setStatus('current')
agentLoginSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 1, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLoginSessionStatus.setStatus('current')
agentLoginSessionInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 1, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionInetAddressType.setStatus('current')
agentLoginSessionInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 1, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionInetAddress.setStatus('current')
agentTelnetConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 2))
agentTelnetLoginTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTelnetLoginTimeout.setStatus('current')
agentTelnetMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTelnetMaxSessions.setStatus('current')
agentTelnetAllowNewMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTelnetAllowNewMode.setStatus('current')
agentUserConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3))
agentUserConfigCreate = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserConfigCreate.setStatus('current')
agentUserConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 2), )
if mibBuilder.loadTexts: agentUserConfigTable.setStatus('current')
agentUserConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 2, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentUserIndex"))
if mibBuilder.loadTexts: agentUserConfigEntry.setStatus('current')
agentUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: agentUserIndex.setStatus('current')
agentUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUserName.setStatus('current')
agentUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserPassword.setStatus('current')
agentUserAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("read", 1), ("write", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUserAccessMode.setStatus('current')
agentUserAuthenticationType = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("hmacmd5", 2), ("hmacsha", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserAuthenticationType.setStatus('current')
agentUserEncryptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("des", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserEncryptionType.setStatus('current')
agentUserEncryptionPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserEncryptionPassword.setStatus('current')
agentUserLockoutStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUserLockoutStatus.setStatus('current')
agentUserPasswordExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 3, 2, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUserPasswordExpireTime.setStatus('current')
agentSerialGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 5))
agentSerialTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSerialTimeout.setStatus('current')
agentSerialBaudrate = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("baud-1200", 1), ("baud-2400", 2), ("baud-4800", 3), ("baud-9600", 4), ("baud-19200", 5), ("baud-38400", 6), ("baud-57600", 7), ("baud-115200", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSerialBaudrate.setStatus('current')
agentSerialCharacterSize = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialCharacterSize.setStatus('current')
agentSerialHWFlowControlMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialHWFlowControlMode.setStatus('current')
agentSerialStopBits = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialStopBits.setStatus('current')
agentSerialParityType = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("even", 1), ("odd", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialParityType.setStatus('current')
agentPasswordManagementConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 6))
agentPasswordManagementMinLength = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementMinLength.setStatus('current')
agentPasswordManagementHistory = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementHistory.setStatus('current')
agentPasswordManagementAging = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 365))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementAging.setStatus('current')
agentPasswordManagementLockAttempts = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 1, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementLockAttempts.setStatus('current')
agentLagConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2))
agentLagConfigCreate = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagConfigCreate.setStatus('current')
agentLagSummaryConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2), )
if mibBuilder.loadTexts: agentLagSummaryConfigTable.setStatus('current')
agentLagSummaryConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentLagSummaryLagIndex"))
if mibBuilder.loadTexts: agentLagSummaryConfigEntry.setStatus('current')
agentLagSummaryLagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagSummaryLagIndex.setStatus('current')
agentLagSummaryName = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryName.setStatus('current')
agentLagSummaryFlushTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryFlushTimer.setStatus('obsolete')
agentLagSummaryLinkTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryLinkTrap.setStatus('current')
agentLagSummaryAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryAdminMode.setStatus('current')
agentLagSummaryStpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dot1d", 1), ("fast", 2), ("off", 3), ("dot1s", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryStpMode.setStatus('current')
agentLagSummaryAddPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryAddPort.setStatus('current')
agentLagSummaryDeletePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryDeletePort.setStatus('current')
agentLagSummaryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryStatus.setStatus('current')
agentLagSummaryType = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagSummaryType.setStatus('current')
agentLagSummaryStaticCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryStaticCapability.setStatus('current')
agentLagDetailedConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 3), )
if mibBuilder.loadTexts: agentLagDetailedConfigTable.setStatus('current')
agentLagDetailedConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 3, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentLagDetailedLagIndex"), (0, "NETGEAR-SMART-SWITCHING-MIB", "agentLagDetailedIfIndex"))
if mibBuilder.loadTexts: agentLagDetailedConfigEntry.setStatus('current')
agentLagDetailedLagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedLagIndex.setStatus('current')
agentLagDetailedIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedIfIndex.setStatus('current')
agentLagDetailedPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 3, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedPortSpeed.setStatus('current')
agentLagDetailedPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedPortStatus.setStatus('current')
agentLagConfigStaticCapability = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagConfigStaticCapability.setStatus('obsolete')
agentNetworkConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3))
agentNetworkIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIPAddress.setStatus('current')
agentNetworkSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkSubnetMask.setStatus('current')
agentNetworkDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkDefaultGateway.setStatus('current')
agentNetworkBurnedInMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkBurnedInMacAddress.setStatus('current')
agentNetworkLocalAdminMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 5), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkLocalAdminMacAddress.setStatus('current')
agentNetworkMacAddressType = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("burned-in", 1), ("local", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkMacAddressType.setStatus('current')
agentNetworkConfigProtocol = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("bootp", 2), ("dhcp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkConfigProtocol.setStatus('current')
agentNetworkWebMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkWebMode.setStatus('obsolete')
agentNetworkJavaMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkJavaMode.setStatus('obsolete')
agentNetworkMgmtVlan = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkMgmtVlan.setStatus('current')
agentNetworkIpv6AdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIpv6AdminMode.setStatus('current')
agentNetworkIpv6Gateway = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 12), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIpv6Gateway.setStatus('current')
agentNetworkIpv6AddrTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 13), )
if mibBuilder.loadTexts: agentNetworkIpv6AddrTable.setStatus('current')
agentNetworkIpv6AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 13, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentNetworkIpv6AddrPrefix"))
if mibBuilder.loadTexts: agentNetworkIpv6AddrEntry.setStatus('current')
agentNetworkIpv6AddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 13, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: agentNetworkIpv6AddrPrefix.setStatus('current')
agentNetworkIpv6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentNetworkIpv6AddrPrefixLength.setStatus('current')
agentNetworkIpv6AddrEuiFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentNetworkIpv6AddrEuiFlag.setStatus('current')
agentNetworkIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 3, 13, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentNetworkIpv6AddrStatus.setStatus('current')
agentServicePortConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4))
agentServicePortIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortIPAddress.setStatus('current')
agentServicePortSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortSubnetMask.setStatus('current')
agentServicePortDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortDefaultGateway.setStatus('current')
agentServicePortBurnedInMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortBurnedInMacAddress.setStatus('current')
agentServicePortConfigProtocol = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("bootp", 2), ("dhcp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortConfigProtocol.setStatus('current')
agentServicePortIpv6AdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortIpv6AdminMode.setStatus('current')
agentServicePortIpv6Gateway = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 7), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortIpv6Gateway.setStatus('current')
agentServicePortIpv6AddrTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 8), )
if mibBuilder.loadTexts: agentServicePortIpv6AddrTable.setStatus('current')
agentServicePortIpv6AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 8, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentServicePortIpv6AddrPrefix"))
if mibBuilder.loadTexts: agentServicePortIpv6AddrEntry.setStatus('current')
agentServicePortIpv6AddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 8, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: agentServicePortIpv6AddrPrefix.setStatus('current')
agentServicePortIpv6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentServicePortIpv6AddrPrefixLength.setStatus('current')
agentServicePortIpv6AddrEuiFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentServicePortIpv6AddrEuiFlag.setStatus('current')
agentServicePortIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 4, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentServicePortIpv6AddrStatus.setStatus('current')
agentSnmpConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6))
agentSnmpCommunityCreate = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityCreate.setStatus('current')
agentSnmpCommunityConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 2), )
if mibBuilder.loadTexts: agentSnmpCommunityConfigTable.setStatus('current')
agentSnmpCommunityConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 2, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentSnmpCommunityIndex"))
if mibBuilder.loadTexts: agentSnmpCommunityConfigEntry.setStatus('current')
agentSnmpCommunityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSnmpCommunityIndex.setStatus('current')
agentSnmpCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityName.setStatus('current')
agentSnmpCommunityIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityIPAddress.setStatus('current')
agentSnmpCommunityIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityIPMask.setStatus('current')
agentSnmpCommunityAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("read-only", 1), ("read-write", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityAccessMode.setStatus('current')
agentSnmpCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("config", 3), ("destroy", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityStatus.setStatus('current')
agentSnmpTrapReceiverCreate = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverCreate.setStatus('current')
agentSnmpTrapReceiverConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 4), )
if mibBuilder.loadTexts: agentSnmpTrapReceiverConfigTable.setStatus('current')
agentSnmpTrapReceiverConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 4, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentSnmpTrapReceiverIndex"))
if mibBuilder.loadTexts: agentSnmpTrapReceiverConfigEntry.setStatus('current')
agentSnmpTrapReceiverIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSnmpTrapReceiverIndex.setStatus('current')
agentSnmpTrapReceiverCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverCommunityName.setStatus('current')
agentSnmpTrapReceiverIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverIPAddress.setStatus('current')
agentSnmpTrapReceiverStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("config", 3), ("destroy", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverStatus.setStatus('current')
agentSnmpTrapReceiverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("snmpv1", 1), ("snmpv2c", 2))).clone('snmpv2c')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverVersion.setStatus('current')
agentSnmpTrapReceiverIpv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 4, 1, 6), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverIpv6Address.setStatus('current')
agentSnmpTrapFlagsConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 5))
agentSnmpAuthenticationTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpAuthenticationTrapFlag.setStatus('current')
agentSnmpLinkUpDownTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpLinkUpDownTrapFlag.setStatus('current')
agentSnmpMultipleUsersTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpMultipleUsersTrapFlag.setStatus('current')
agentSnmpSpanningTreeTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpSpanningTreeTrapFlag.setStatus('current')
agentSnmpBroadcastStormTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 6, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpBroadcastStormTrapFlag.setStatus('obsolete')
agentSpanningTreeConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 7))
agentSpanningTreeMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSpanningTreeMode.setStatus('current')
agentSwitchConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8))
agentSwitchAddressAgingTimeoutTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 4), )
if mibBuilder.loadTexts: agentSwitchAddressAgingTimeoutTable.setStatus('current')
agentSwitchAddressAgingTimeoutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 4, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qFdbId"))
if mibBuilder.loadTexts: agentSwitchAddressAgingTimeoutEntry.setStatus('current')
agentSwitchAddressAgingTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchAddressAgingTimeout.setStatus('current')
agentSwitchStaticMacFilteringTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 5), )
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringTable.setStatus('current')
agentSwitchStaticMacFilteringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 5, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchStaticMacFilteringVlanId"), (0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchStaticMacFilteringAddress"))
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringEntry.setStatus('current')
agentSwitchStaticMacFilteringVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringVlanId.setStatus('current')
agentSwitchStaticMacFilteringAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringAddress.setStatus('current')
agentSwitchStaticMacFilteringSourcePortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 5, 1, 3), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringSourcePortMask.setStatus('current')
agentSwitchStaticMacFilteringDestPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 5, 1, 4), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringDestPortMask.setStatus('current')
agentSwitchStaticMacFilteringStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringStatus.setStatus('current')
agentSwitchStormControlGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 12))
agentSwitchDot3FlowControlMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchDot3FlowControlMode.setStatus('current')
agentSwitchBroadcastControlMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 12, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchBroadcastControlMode.setStatus('current')
agentSwitchBroadcastControlThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 12, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchBroadcastControlThreshold.setStatus('current')
agentSwitchMulticastControlMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 12, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchMulticastControlMode.setStatus('current')
agentSwitchMulticastControlThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 12, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchMulticastControlThreshold.setStatus('current')
agentSwitchUnicastControlMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 12, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchUnicastControlMode.setStatus('current')
agentSwitchUnicastControlThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 12, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchUnicastControlThreshold.setStatus('current')
agentSwitchSnoopingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 6))
agentSwitchSnoopingCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 6, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingCfgTable.setStatus('current')
agentSwitchSnoopingCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 6, 1, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingCfgEntry.setStatus('current')
agentSwitchSnoopingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 6, 1, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingProtocol.setStatus('current')
agentSwitchSnoopingAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingAdminMode.setStatus('current')
agentSwitchSnoopingPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 6, 1, 1, 3), AgentPortMask().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingPortMask.setStatus('current')
agentSwitchSnoopingMulticastControlFramesProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingMulticastControlFramesProcessed.setStatus('current')
agentSwitchSnoopingIntfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 7))
agentSwitchSnoopingIntfTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 7, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingIntfTable.setStatus('current')
agentSwitchSnoopingIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 7, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingIntfEntry.setStatus('current')
agentSwitchSnoopingIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 7, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfIndex.setStatus('current')
agentSwitchSnoopingIntfAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfAdminMode.setStatus('current')
agentSwitchSnoopingIntfGroupMembershipInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 3600)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfGroupMembershipInterval.setStatus('current')
agentSwitchSnoopingIntfMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3599)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfMaxResponseTime.setStatus('current')
agentSwitchSnoopingIntfMRPExpirationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfMRPExpirationTime.setStatus('current')
agentSwitchSnoopingIntfFastLeaveAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfFastLeaveAdminMode.setStatus('current')
agentSwitchSnoopingIntfMulticastRouterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfMulticastRouterMode.setStatus('current')
agentSwitchSnoopingIntfVlanIDs = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 7, 1, 1, 8), VlanList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfVlanIDs.setStatus('current')
agentSwitchSnoopingVlanGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 8))
agentSwitchSnoopingVlanTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 8, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingVlanTable.setStatus('current')
agentSwitchSnoopingVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 8, 1, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qVlanIndex"), (0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingVlanEntry.setStatus('current')
agentSwitchSnoopingVlanAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanAdminMode.setStatus('current')
agentSwitchSnoopingVlanGroupMembershipInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 3600)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanGroupMembershipInterval.setStatus('current')
agentSwitchSnoopingVlanMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3599)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanMaxResponseTime.setStatus('current')
agentSwitchSnoopingVlanFastLeaveAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanFastLeaveAdminMode.setStatus('current')
agentSwitchSnoopingVlanMRPExpirationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanMRPExpirationTime.setStatus('current')
agentSwitchVlanStaticMrouterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 9))
agentSwitchVlanStaticMrouterTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 9, 1), )
if mibBuilder.loadTexts: agentSwitchVlanStaticMrouterTable.setStatus('current')
agentSwitchVlanStaticMrouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 9, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "Q-BRIDGE-MIB", "dot1qVlanIndex"), (0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchVlanStaticMrouterEntry.setStatus('current')
agentSwitchVlanStaticMrouterAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchVlanStaticMrouterAdminMode.setStatus('current')
agentSwitchMFDBGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10))
agentSwitchMFDBTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 1), )
if mibBuilder.loadTexts: agentSwitchMFDBTable.setStatus('current')
agentSwitchMFDBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 1, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchMFDBVlanId"), (0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchMFDBMacAddress"), (0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchMFDBProtocolType"))
if mibBuilder.loadTexts: agentSwitchMFDBEntry.setStatus('current')
agentSwitchMFDBVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 1, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBVlanId.setStatus('current')
agentSwitchMFDBMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBMacAddress.setStatus('current')
agentSwitchMFDBProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("static", 1), ("gmrp", 2), ("igmp", 3), ("mld", 4), ("mmrp", 5), ("msrp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBProtocolType.setStatus('current')
agentSwitchMFDBType = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBType.setStatus('current')
agentSwitchMFDBDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBDescription.setStatus('current')
agentSwitchMFDBForwardingPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 1, 1, 6), AgentPortMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBForwardingPortMask.setStatus('current')
agentSwitchMFDBFilteringPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 1, 1, 7), AgentPortMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBFilteringPortMask.setStatus('current')
agentSwitchMFDBSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 2), )
if mibBuilder.loadTexts: agentSwitchMFDBSummaryTable.setStatus('current')
agentSwitchMFDBSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 2, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchMFDBSummaryVlanId"), (0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchMFDBSummaryMacAddress"))
if mibBuilder.loadTexts: agentSwitchMFDBSummaryEntry.setStatus('current')
agentSwitchMFDBSummaryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 2, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBSummaryVlanId.setStatus('current')
agentSwitchMFDBSummaryMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBSummaryMacAddress.setStatus('current')
agentSwitchMFDBSummaryForwardingPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 2, 1, 3), AgentPortMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBSummaryForwardingPortMask.setStatus('current')
agentSwitchMFDBMaxTableEntries = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBMaxTableEntries.setStatus('current')
agentSwitchMFDBMostEntriesUsed = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBMostEntriesUsed.setStatus('current')
agentSwitchMFDBCurrentEntries = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 10, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBCurrentEntries.setStatus('current')
agentDhcpFilteringGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 15))
agentDhcpFilteringAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpFilteringAdminMode.setStatus('current')
agentDhcpFilteringPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 15, 2), )
if mibBuilder.loadTexts: agentDhcpFilteringPortConfigTable.setStatus('current')
agentDhcpFilteringPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 15, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDhcpFilteringPortConfigEntry.setStatus('current')
agentDhcpFilteringPortTrustedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 15, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trusted", 1), ("untrusted", 2))).clone('untrusted')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpFilteringPortTrustedMode.setStatus('current')
agentSwitchProtectedPortConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 18))
agentSwitchProtectedPortTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 18, 1), )
if mibBuilder.loadTexts: agentSwitchProtectedPortTable.setStatus('current')
agentSwitchProtectedPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 18, 1, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchProtectedPortGroupId"))
if mibBuilder.loadTexts: agentSwitchProtectedPortEntry.setStatus('current')
agentSwitchProtectedPortGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 18, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: agentSwitchProtectedPortGroupId.setStatus('current')
agentSwitchProtectedPortGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 18, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchProtectedPortGroupName.setStatus('current')
agentSwitchProtectedPortPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 18, 1, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchProtectedPortPortList.setStatus('current')
agentSwitchSnoopingQuerierGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20))
agentSwitchSnoopingQuerierCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierCfgTable.setStatus('current')
agentSwitchSnoopingQuerierCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 1, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierCfgEntry.setStatus('current')
agentSwitchSnoopingQuerierAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierAdminMode.setStatus('current')
agentSwitchSnoopingQuerierVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVersion.setStatus('current')
agentSwitchSnoopingQuerierAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 1, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierAddress.setStatus('current')
agentSwitchSnoopingQuerierQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierQueryInterval.setStatus('current')
agentSwitchSnoopingQuerierExpiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 300)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierExpiryInterval.setStatus('current')
agentSwitchSnoopingQuerierVlanTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 2), )
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanTable.setStatus('current')
agentSwitchSnoopingQuerierVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 2, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qVlanIndex"), (0, "NETGEAR-SMART-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanEntry.setStatus('current')
agentSwitchSnoopingQuerierVlanAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanAdminMode.setStatus('current')
agentSwitchSnoopingQuerierVlanOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("querier", 1), ("non-querier", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanOperMode.setStatus('current')
agentSwitchSnoopingQuerierElectionParticipateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierElectionParticipateMode.setStatus('current')
agentSwitchSnoopingQuerierVlanAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 2, 1, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanAddress.setStatus('current')
agentSwitchSnoopingQuerierOperVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierOperVersion.setStatus('current')
agentSwitchSnoopingQuerierOperMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierOperMaxResponseTime.setStatus('current')
agentSwitchSnoopingQuerierLastQuerierAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 2, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierLastQuerierAddress.setStatus('current')
agentSwitchSnoopingQuerierLastQuerierVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 8, 20, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierLastQuerierVersion.setStatus('current')
agentTransferConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9))
agentTransferUploadGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1))
agentTransferUploadMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("tftp", 1), ("xmodem", 2), ("ymodem", 3), ("zmodem", 4), ("sftp", 5), ("scp", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadMode.setStatus('current')
agentTransferUploadServerIP = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadServerIP.setStatus('deprecated')
agentTransferUploadPath = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadPath.setStatus('current')
agentTransferUploadFilename = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadFilename.setStatus('current')
agentTransferUploadDataType = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("config", 2), ("errorlog", 3), ("messagelog", 4), ("traplog", 5), ("clibanner", 6), ("code", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadDataType.setStatus('current')
agentTransferUploadStart = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadStart.setStatus('current')
agentTransferUploadStatus = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("notInitiated", 1), ("transferStarting", 2), ("errorStarting", 3), ("wrongFileType", 4), ("updatingConfig", 5), ("invalidConfigFile", 6), ("writingToFlash", 7), ("failureWritingToFlash", 8), ("checkingCRC", 9), ("failedCRC", 10), ("unknownDirection", 11), ("transferSuccessful", 12), ("transferFailed", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTransferUploadStatus.setStatus('current')
agentTransferUploadServerAddressType = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 8), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadServerAddressType.setStatus('current')
agentTransferUploadServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 9), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadServerAddress.setStatus('current')
agentTransferUploadImagename = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("image1", 2), ("image2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadImagename.setStatus('current')
agentTransferUploadUsername = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadUsername.setStatus('current')
agentTransferUploadPassword = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadPassword.setStatus('current')
agentTransferDownloadGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2))
agentTransferDownloadMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("tftp", 1), ("xmodem", 2), ("ymodem", 3), ("zmodem", 4), ("sftp", 5), ("scp", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadMode.setStatus('current')
agentTransferDownloadServerIP = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadServerIP.setStatus('deprecated')
agentTransferDownloadPath = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadPath.setStatus('current')
agentTransferDownloadFilename = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadFilename.setStatus('current')
agentTransferDownloadDataType = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("code", 2), ("config", 3), ("sshkey-rsa1", 4), ("sshkey-rsa2", 5), ("sshkey-dsa", 6), ("sslpem-root", 7), ("sslpem-server", 8), ("sslpem-dhweak", 9), ("sslpem-dhstrong", 10), ("clibanner", 11), ("kernel", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadDataType.setStatus('current')
agentTransferDownloadStart = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadStart.setStatus('current')
agentTransferDownloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("notInitiated", 1), ("transferStarting", 2), ("errorStarting", 3), ("wrongFileType", 4), ("updatingConfig", 5), ("invalidConfigFile", 6), ("writingToFlash", 7), ("failureWritingToFlash", 8), ("checkingCRC", 9), ("failedCRC", 10), ("unknownDirection", 11), ("transferSuccessful", 12), ("transferFailed", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTransferDownloadStatus.setStatus('current')
agentTransferDownloadServerAddressType = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 8), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadServerAddressType.setStatus('current')
agentTransferDownloadServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 9), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadServerAddress.setStatus('current')
agentTransferDownloadImagename = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("image1", 2), ("image2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadImagename.setStatus('current')
agentTransferDownloadUsername = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadUsername.setStatus('current')
agentTransferDownloadPassword = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 2, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadPassword.setStatus('current')
agentImageConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 3))
agentImage1 = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentImage1.setStatus('current')
agentImage2 = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentImage2.setStatus('current')
agentActiveImage = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentActiveImage.setStatus('current')
agentNextActiveImage = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 9, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNextActiveImage.setStatus('current')
agentPortMirroringGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10))
agentMirroredPortIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMirroredPortIfIndex.setStatus('obsolete')
agentProbePortIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProbePortIfIndex.setStatus('obsolete')
agentPortMirroringMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirroringMode.setStatus('obsolete')
agentPortMirrorTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 4), )
if mibBuilder.loadTexts: agentPortMirrorTable.setStatus('current')
agentPortMirrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 4, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentPortMirrorSessionNum"))
if mibBuilder.loadTexts: agentPortMirrorEntry.setStatus('current')
agentPortMirrorSessionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentPortMirrorSessionNum.setStatus('current')
agentPortMirrorDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 4, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorDestinationPort.setStatus('current')
agentPortMirrorSourcePortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 4, 1, 3), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorSourcePortMask.setStatus('current')
agentPortMirrorAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorAdminMode.setStatus('current')
agentPortMirrorTypeTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 5), )
if mibBuilder.loadTexts: agentPortMirrorTypeTable.setStatus('current')
agentPortMirrorTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 5, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentPortMirrorSessionNum"), (0, "NETGEAR-SMART-SWITCHING-MIB", "agentPortMirrorTypeSourcePort"))
if mibBuilder.loadTexts: agentPortMirrorTypeEntry.setStatus('current')
agentPortMirrorTypeSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentPortMirrorTypeSourcePort.setStatus('current')
agentPortMirrorTypeType = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 10, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tx", 1), ("rx", 2), ("txrx", 3))).clone('txrx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorTypeType.setStatus('current')
agentDot3adAggPortTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 12), )
if mibBuilder.loadTexts: agentDot3adAggPortTable.setStatus('current')
agentDot3adAggPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 12, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentDot3adAggPort"))
if mibBuilder.loadTexts: agentDot3adAggPortEntry.setStatus('current')
agentDot3adAggPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDot3adAggPort.setStatus('current')
agentDot3adAggPortLACPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDot3adAggPortLACPMode.setStatus('current')
agentPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13), )
if mibBuilder.loadTexts: agentPortConfigTable.setStatus('current')
agentPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentPortDot1dBasePort"))
if mibBuilder.loadTexts: agentPortConfigEntry.setStatus('current')
agentPortDot1dBasePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortDot1dBasePort.setStatus('current')
agentPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortIfIndex.setStatus('current')
agentPortIanaType = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 3), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortIanaType.setStatus('current')
agentPortSTPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dot1d", 1), ("fast", 2), ("off", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSTPMode.setStatus('current')
agentPortSTPState = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("blocking", 1), ("listening", 2), ("learning", 3), ("forwarding", 4), ("disabled", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortSTPState.setStatus('current')
agentPortAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortAdminMode.setStatus('current')
agentPortPhysicalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("auto-negotiate", 1), ("half-10", 2), ("full-10", 3), ("half-100", 4), ("full-100", 5), ("half-100fx", 6), ("full-100fx", 7), ("full-1000sx", 8), ("full-10gsx", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortPhysicalMode.setStatus('obsolete')
agentPortPhysicalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("auto-negotiate", 1), ("half-10", 2), ("full-10", 3), ("half-100", 4), ("full-100", 5), ("half-100fx", 6), ("full-100fx", 7), ("full-1000sx", 8), ("full-10gsx", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortPhysicalStatus.setStatus('obsolete')
agentPortLinkTrapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortLinkTrapMode.setStatus('current')
agentPortClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortClearStats.setStatus('current')
agentPortDefaultType = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 11), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortDefaultType.setStatus('current')
agentPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 12), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortType.setStatus('current')
agentPortAutoNegAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortAutoNegAdminStatus.setStatus('current')
agentPortDot3FlowControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortDot3FlowControlMode.setStatus('current')
agentPortMaxFrameSizeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortMaxFrameSizeLimit.setStatus('current')
agentPortMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMaxFrameSize.setStatus('current')
agentPortBroadcastControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortBroadcastControlMode.setStatus('current')
agentPortBroadcastControlThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortBroadcastControlThreshold.setStatus('current')
agentPortMulticastControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMulticastControlMode.setStatus('current')
agentPortMulticastControlThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMulticastControlThreshold.setStatus('current')
agentPortUnicastControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortUnicastControlMode.setStatus('current')
agentPortUnicastControlThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 13, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortUnicastControlThreshold.setStatus('current')
agentStpSwitchConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15))
agentStpConfigDigestKey = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpConfigDigestKey.setStatus('current')
agentStpConfigFormatSelector = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpConfigFormatSelector.setStatus('current')
agentStpConfigName = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpConfigName.setStatus('current')
agentStpConfigRevision = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpConfigRevision.setStatus('current')
agentStpForceVersion = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dot1d", 1), ("dot1w", 2), ("dot1s", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpForceVersion.setStatus('current')
agentStpAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpAdminMode.setStatus('current')
agentStpBpduGuardMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpBpduGuardMode.setStatus('current')
agentStpBpduFilterDefault = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpBpduFilterDefault.setStatus('current')
agentStpPortTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9), )
if mibBuilder.loadTexts: agentStpPortTable.setStatus('current')
agentStpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentStpPortEntry.setStatus('current')
agentStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpPortState.setStatus('current')
agentStpPortStatsMstpBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsMstpBpduRx.setStatus('current')
agentStpPortStatsMstpBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsMstpBpduTx.setStatus('current')
agentStpPortStatsRstpBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsRstpBpduRx.setStatus('current')
agentStpPortStatsRstpBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsRstpBpduTx.setStatus('current')
agentStpPortStatsStpBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsStpBpduRx.setStatus('current')
agentStpPortStatsStpBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsStpBpduTx.setStatus('current')
agentStpPortUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortUpTime.setStatus('current')
agentStpPortMigrationCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpPortMigrationCheck.setStatus('current')
agentStpPortHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 9, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpPortHelloTime.setStatus('current')
agentStpCstConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10))
agentStpCstHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstHelloTime.setStatus('current')
agentStpCstMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstMaxAge.setStatus('current')
agentStpCstRegionalRootId = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstRegionalRootId.setStatus('current')
agentStpCstRegionalRootPathCost = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstRegionalRootPathCost.setStatus('current')
agentStpCstRootFwdDelay = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstRootFwdDelay.setStatus('current')
agentStpCstBridgeFwdDelay = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 30)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeFwdDelay.setStatus('current')
agentStpCstBridgeHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstBridgeHelloTime.setStatus('current')
agentStpCstBridgeHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstBridgeHoldTime.setStatus('current')
agentStpCstBridgeMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeMaxAge.setStatus('current')
agentStpCstBridgeMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeMaxHops.setStatus('current')
agentStpCstBridgePriority = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgePriority.setStatus('current')
agentStpCstBridgeHoldCount = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeHoldCount.setStatus('current')
agentStpCstTimeSinceTopologyChange = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstTimeSinceTopologyChange.setStatus('current')
agentStpCstTopologyChangeCount = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 10, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstTopologyChangeCount.setStatus('current')
agentStpCstPortTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11), )
if mibBuilder.loadTexts: agentStpCstPortTable.setStatus('current')
agentStpCstPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentStpCstPortEntry.setStatus('current')
agentStpCstPortOperEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortOperEdge.setStatus('current')
agentStpCstPortOperPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortOperPointToPoint.setStatus('current')
agentStpCstPortTopologyChangeAck = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortTopologyChangeAck.setStatus('current')
agentStpCstPortEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortEdge.setStatus('current')
agentStpCstPortForwardingState = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("discarding", 1), ("learning", 2), ("forwarding", 3), ("disabled", 4), ("manualFwd", 5), ("notParticipate", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortForwardingState.setStatus('current')
agentStpCstPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortId.setStatus('current')
agentStpCstPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortPathCost.setStatus('current')
agentStpCstPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortPriority.setStatus('current')
agentStpCstDesignatedBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstDesignatedBridgeId.setStatus('current')
agentStpCstDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstDesignatedCost.setStatus('current')
agentStpCstDesignatedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstDesignatedPortId.setStatus('current')
agentStpCstExtPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstExtPortPathCost.setStatus('current')
agentStpCstPortBpduGuardEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortBpduGuardEffect.setStatus('current')
agentStpCstPortBpduFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortBpduFilter.setStatus('current')
agentStpCstPortBpduFlood = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortBpduFlood.setStatus('current')
agentStpCstPortAutoEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortAutoEdge.setStatus('current')
agentStpCstPortRootGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortRootGuard.setStatus('current')
agentStpCstPortTCNGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 11, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortTCNGuard.setStatus('current')
agentStpMstTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12), )
if mibBuilder.loadTexts: agentStpMstTable.setStatus('current')
agentStpMstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentStpMstId"))
if mibBuilder.loadTexts: agentStpMstEntry.setStatus('current')
agentStpMstId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstId.setStatus('current')
agentStpMstBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpMstBridgePriority.setStatus('current')
agentStpMstBridgeIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstBridgeIdentifier.setStatus('current')
agentStpMstDesignatedRootId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedRootId.setStatus('current')
agentStpMstRootPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstRootPathCost.setStatus('current')
agentStpMstRootPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstRootPortId.setStatus('current')
agentStpMstTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstTimeSinceTopologyChange.setStatus('current')
agentStpMstTopologyChangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstTopologyChangeCount.setStatus('current')
agentStpMstTopologyChangeParm = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstTopologyChangeParm.setStatus('current')
agentStpMstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 12, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStpMstRowStatus.setStatus('current')
agentStpMstPortTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 13), )
if mibBuilder.loadTexts: agentStpMstPortTable.setStatus('current')
agentStpMstPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 13, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentStpMstId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentStpMstPortEntry.setStatus('current')
agentStpMstPortForwardingState = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("discarding", 1), ("learning", 2), ("forwarding", 3), ("disabled", 4), ("manualFwd", 5), ("notParticipate", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortForwardingState.setStatus('current')
agentStpMstPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 13, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortId.setStatus('current')
agentStpMstPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpMstPortPathCost.setStatus('current')
agentStpMstPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpMstPortPriority.setStatus('current')
agentStpMstDesignatedBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 13, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedBridgeId.setStatus('current')
agentStpMstDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 13, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedCost.setStatus('current')
agentStpMstDesignatedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 13, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedPortId.setStatus('current')
agentStpMstVlanTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 14), )
if mibBuilder.loadTexts: agentStpMstVlanTable.setStatus('current')
agentStpMstVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 14, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentStpMstId"), (0, "Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: agentStpMstVlanEntry.setStatus('current')
agentStpMstVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 15, 14, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStpMstVlanRowStatus.setStatus('current')
agentAuthenticationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16))
agentAuthenticationListCreate = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListCreate.setStatus('current')
agentAuthenticationListTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 2), )
if mibBuilder.loadTexts: agentAuthenticationListTable.setStatus('current')
agentAuthenticationListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 2, 1), ).setIndexNames((0, "NETGEAR-SMART-SWITCHING-MIB", "agentAuthenticationListIndex"))
if mibBuilder.loadTexts: agentAuthenticationListEntry.setStatus('current')
agentAuthenticationListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentAuthenticationListIndex.setStatus('current')
agentAuthenticationListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentAuthenticationListName.setStatus('current')
agentAuthenticationListMethod1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("local", 1), ("radius", 2), ("reject", 3), ("tacacs", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod1.setStatus('current')
agentAuthenticationListMethod2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("local", 2), ("radius", 3), ("reject", 4), ("tacacs", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod2.setStatus('current')
agentAuthenticationListMethod3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("local", 2), ("radius", 3), ("reject", 4), ("tacacs", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod3.setStatus('current')
agentAuthenticationListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 2, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListStatus.setStatus('current')
agentAuthenticationListMethod4 = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("local", 2), ("radius", 3), ("reject", 4), ("tacacs", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod4.setStatus('current')
agentUserConfigDefaultAuthenticationList = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserConfigDefaultAuthenticationList.setStatus('current')
agentUserAuthenticationConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 4), )
if mibBuilder.loadTexts: agentUserAuthenticationConfigTable.setStatus('current')
agentUserAuthenticationConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 4, 1), )
agentUserConfigEntry.registerAugmentions(("NETGEAR-SMART-SWITCHING-MIB", "agentUserAuthenticationConfigEntry"))
agentUserAuthenticationConfigEntry.setIndexNames(*agentUserConfigEntry.getIndexNames())
if mibBuilder.loadTexts: agentUserAuthenticationConfigEntry.setStatus('current')
agentUserAuthenticationList = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserAuthenticationList.setStatus('current')
agentUserPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 5), )
if mibBuilder.loadTexts: agentUserPortConfigTable.setStatus('current')
agentUserPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 5, 1), )
agentUserConfigEntry.registerAugmentions(("NETGEAR-SMART-SWITCHING-MIB", "agentUserPortConfigEntry"))
agentUserPortConfigEntry.setIndexNames(*agentUserConfigEntry.getIndexNames())
if mibBuilder.loadTexts: agentUserPortConfigEntry.setStatus('current')
agentUserPortSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 16, 5, 1, 1), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserPortSecurity.setStatus('current')
agentClassOfServiceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 17))
agentClassOfServicePortTable = MibTable((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 17, 1), )
if mibBuilder.loadTexts: agentClassOfServicePortTable.setStatus('current')
agentClassOfServicePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 17, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "NETGEAR-SMART-SWITCHING-MIB", "agentClassOfServicePortPriority"))
if mibBuilder.loadTexts: agentClassOfServicePortEntry.setStatus('current')
agentClassOfServicePortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 17, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: agentClassOfServicePortPriority.setStatus('current')
agentClassOfServicePortClass = MibTableColumn((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClassOfServicePortClass.setStatus('current')
agentHTTPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 18))
agentHTTPWebMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPWebMode.setStatus('current')
agentHTTPJavaMode = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPJavaMode.setStatus('current')
agentHTTPMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 18, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPMaxSessions.setStatus('current')
agentHTTPHardTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 18, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 168))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPHardTimeout.setStatus('current')
agentHTTPSoftTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 2, 18, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPSoftTimeout.setStatus('current')
agentSystemGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3))
agentSaveConfig = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSaveConfig.setStatus('current')
agentClearConfig = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearConfig.setStatus('current')
agentClearLags = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearLags.setStatus('current')
agentClearLoginSessions = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearLoginSessions.setStatus('current')
agentClearPasswords = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearPasswords.setStatus('current')
agentClearPortStats = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearPortStats.setStatus('current')
agentClearSwitchStats = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearSwitchStats.setStatus('current')
agentClearTrapLog = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearTrapLog.setStatus('current')
agentClearVlan = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearVlan.setStatus('current')
agentResetSystem = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentResetSystem.setStatus('current')
agentSaveConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notInitiated", 1), ("savingInProcess", 2), ("savingComplete", 3), ("savingFailed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSaveConfigStatus.setStatus('current')
agentCableTesterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 4))
agentCableTesterStatus = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("success", 2), ("failure", 3), ("uninitialized", 4))).clone('uninitialized')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCableTesterStatus.setStatus('current')
agentCableTesterIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 4, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCableTesterIfIndex.setStatus('current')
agentCableTesterCableStatus = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("open", 2), ("short", 3), ("unknown", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCableTesterCableStatus.setStatus('current')
agentCableTesterMinimumCableLength = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 4, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCableTesterMinimumCableLength.setStatus('current')
agentCableTesterMaximumCableLength = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 4, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCableTesterMaximumCableLength.setStatus('current')
agentCableTesterCableFailureLocation = MibScalar((1, 3, 6, 1, 4, 1, 4526, 11, 1, 4, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCableTesterCableFailureLocation.setStatus('current')
agentSwitchingTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0))
multipleUsersTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 1))
if mibBuilder.loadTexts: multipleUsersTrap.setStatus('current')
broadcastStormStartTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 2))
if mibBuilder.loadTexts: broadcastStormStartTrap.setStatus('obsolete')
broadcastStormEndTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 3))
if mibBuilder.loadTexts: broadcastStormEndTrap.setStatus('obsolete')
linkFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 4))
if mibBuilder.loadTexts: linkFailureTrap.setStatus('obsolete')
vlanRequestFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 5)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanRequestFailureTrap.setStatus('obsolete')
vlanDeleteLastTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 6)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanDeleteLastTrap.setStatus('current')
vlanDefaultCfgFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 7)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanDefaultCfgFailureTrap.setStatus('current')
vlanRestoreFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 8)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanRestoreFailureTrap.setStatus('obsolete')
fanFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 9))
if mibBuilder.loadTexts: fanFailureTrap.setStatus('obsolete')
stpInstanceNewRootTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 10)).setObjects(("NETGEAR-SMART-SWITCHING-MIB", "agentStpMstId"))
if mibBuilder.loadTexts: stpInstanceNewRootTrap.setStatus('current')
stpInstanceTopologyChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 11)).setObjects(("NETGEAR-SMART-SWITCHING-MIB", "agentStpMstId"))
if mibBuilder.loadTexts: stpInstanceTopologyChangeTrap.setStatus('current')
powerSupplyStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 12))
if mibBuilder.loadTexts: powerSupplyStatusChangeTrap.setStatus('obsolete')
failedUserLoginTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 13))
if mibBuilder.loadTexts: failedUserLoginTrap.setStatus('current')
userLockoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 14))
if mibBuilder.loadTexts: userLockoutTrap.setStatus('current')
macAddrLearnTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 15)).setObjects(("IF-MIB", "ifIndex"), ("Q-BRIDGE-MIB", "dot1qVlanIndex"), ("Q-BRIDGE-MIB", "dot1qTpFdbAddress"))
if mibBuilder.loadTexts: macAddrLearnTrap.setStatus('current')
macAddrAgeoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 4526, 11, 1, 0, 16)).setObjects(("IF-MIB", "ifIndex"), ("Q-BRIDGE-MIB", "dot1qVlanIndex"), ("Q-BRIDGE-MIB", "dot1qTpFdbAddress"))
if mibBuilder.loadTexts: macAddrAgeoutTrap.setStatus('current')
mibBuilder.exportSymbols("NETGEAR-SMART-SWITCHING-MIB", agentInfoGroup=agentInfoGroup, agentPortPhysicalStatus=agentPortPhysicalStatus, agentPortLinkTrapMode=agentPortLinkTrapMode, agentSwitchStaticMacFilteringTable=agentSwitchStaticMacFilteringTable, agentSwitchMFDBType=agentSwitchMFDBType, agentTransferUploadPath=agentTransferUploadPath, agentSwitchProtectedPortTable=agentSwitchProtectedPortTable, agentServicePortIpv6AddrPrefixLength=agentServicePortIpv6AddrPrefixLength, agentPortDot1dBasePort=agentPortDot1dBasePort, agentStpCstPortOperEdge=agentStpCstPortOperEdge, agentSupportedMibEntry=agentSupportedMibEntry, agentCableTesterCableFailureLocation=agentCableTesterCableFailureLocation, agentTransferUploadDataType=agentTransferUploadDataType, agentLoginSessionSessionTime=agentLoginSessionSessionTime, agentStpPortStatsStpBpduTx=agentStpPortStatsStpBpduTx, agentSwitchSnoopingQuerierElectionParticipateMode=agentSwitchSnoopingQuerierElectionParticipateMode, agentTransferDownloadFilename=agentTransferDownloadFilename, agentUserIndex=agentUserIndex, agentTrapLogTotalSinceLastViewed=agentTrapLogTotalSinceLastViewed, agentPortMirrorEntry=agentPortMirrorEntry, agentTransferUploadMode=agentTransferUploadMode, agentSnmpSpanningTreeTrapFlag=agentSnmpSpanningTreeTrapFlag, agentPortPhysicalMode=agentPortPhysicalMode, agentSwitchSnoopingQuerierGroup=agentSwitchSnoopingQuerierGroup, agentSnmpTrapReceiverConfigTable=agentSnmpTrapReceiverConfigTable, agentSwitchMFDBMacAddress=agentSwitchMFDBMacAddress, agentSwitchStaticMacFilteringSourcePortMask=agentSwitchStaticMacFilteringSourcePortMask, agentPortSTPMode=agentPortSTPMode, agentStpCstBridgeHelloTime=agentStpCstBridgeHelloTime, agentSwitchProtectedPortGroupName=agentSwitchProtectedPortGroupName, agentStpCstExtPortPathCost=agentStpCstExtPortPathCost, agentInventorySysDescription=agentInventorySysDescription, agentPortMirroringGroup=agentPortMirroringGroup, agentSnmpTrapReceiverStatus=agentSnmpTrapReceiverStatus, agentClearTrapLog=agentClearTrapLog, agentSnmpTrapReceiverVersion=agentSnmpTrapReceiverVersion, agentNetworkIpv6AddrPrefix=agentNetworkIpv6AddrPrefix, macAddrLearnTrap=macAddrLearnTrap, agentTrapLogEntry=agentTrapLogEntry, agentLagSummaryStaticCapability=agentLagSummaryStaticCapability, agentSnmpCommunityIPMask=agentSnmpCommunityIPMask, agentStpForceVersion=agentStpForceVersion, agentStpMstRootPortId=agentStpMstRootPortId, agentClassOfServiceGroup=agentClassOfServiceGroup, Ipv6IfIndexOrZero=Ipv6IfIndexOrZero, agentPortMirroringMode=agentPortMirroringMode, agentHTTPJavaMode=agentHTTPJavaMode, AgentPortMask=AgentPortMask, agentSwitchSnoopingQuerierVersion=agentSwitchSnoopingQuerierVersion, agentStpConfigDigestKey=agentStpConfigDigestKey, agentInventoryFRUNumber=agentInventoryFRUNumber, agentStpCstPortTopologyChangeAck=agentStpCstPortTopologyChangeAck, agentHTTPMaxSessions=agentHTTPMaxSessions, agentSwitchBroadcastControlMode=agentSwitchBroadcastControlMode, agentLagSummaryAdminMode=agentLagSummaryAdminMode, agentPortClearStats=agentPortClearStats, agentSwitchVlanStaticMrouterTable=agentSwitchVlanStaticMrouterTable, Ipv6AddressIfIdentifier=Ipv6AddressIfIdentifier, agentLagSummaryFlushTimer=agentLagSummaryFlushTimer, macAddrAgeoutTrap=macAddrAgeoutTrap, agentNetworkWebMode=agentNetworkWebMode, agentHTTPWebMode=agentHTTPWebMode, agentSwitchSnoopingIntfVlanIDs=agentSwitchSnoopingIntfVlanIDs, agentPortMulticastControlThreshold=agentPortMulticastControlThreshold, agentInventoryPartNumber=agentInventoryPartNumber, agentInventoryMachineModel=agentInventoryMachineModel, agentLoginSessionIndex=agentLoginSessionIndex, agentStpPortStatsRstpBpduRx=agentStpPortStatsRstpBpduRx, agentClearPortStats=agentClearPortStats, agentLagDetailedConfigTable=agentLagDetailedConfigTable, agentSwitchStaticMacFilteringEntry=agentSwitchStaticMacFilteringEntry, agentPortType=agentPortType, agentPortMirrorTypeTable=agentPortMirrorTypeTable, agentStpSwitchConfigGroup=agentStpSwitchConfigGroup, agentTransferConfigGroup=agentTransferConfigGroup, agentServicePortIpv6AddrEntry=agentServicePortIpv6AddrEntry, agentLagDetailedConfigEntry=agentLagDetailedConfigEntry, agentTransferDownloadGroup=agentTransferDownloadGroup, powerSupplyStatusChangeTrap=powerSupplyStatusChangeTrap, agentLagSummaryStpMode=agentLagSummaryStpMode, agentNetworkIpv6AddrEuiFlag=agentNetworkIpv6AddrEuiFlag, agentClassOfServicePortClass=agentClassOfServicePortClass, broadcastStormEndTrap=broadcastStormEndTrap, agentConfigGroup=agentConfigGroup, agentUserPortSecurity=agentUserPortSecurity, agentStpMstTable=agentStpMstTable, agentStpCstPortBpduFilter=agentStpCstPortBpduFilter, agentSwitchSnoopingVlanEntry=agentSwitchSnoopingVlanEntry, agentSwitchMFDBSummaryMacAddress=agentSwitchMFDBSummaryMacAddress, agentCableTesterGroup=agentCableTesterGroup, agentStpMstVlanRowStatus=agentStpMstVlanRowStatus, agentLagSummaryConfigTable=agentLagSummaryConfigTable, agentSwitchSnoopingQuerierLastQuerierVersion=agentSwitchSnoopingQuerierLastQuerierVersion, agentSwitchMFDBProtocolType=agentSwitchMFDBProtocolType, agentStpBpduGuardMode=agentStpBpduGuardMode, agentAuthenticationListMethod1=agentAuthenticationListMethod1, PYSNMP_MODULE_ID=agentSwitching, agentStpMstPortTable=agentStpMstPortTable, agentHTTPHardTimeout=agentHTTPHardTimeout, agentNextActiveImage=agentNextActiveImage, agentInventoryOperatingSystem=agentInventoryOperatingSystem, agentSerialCharacterSize=agentSerialCharacterSize, agentStpMstVlanTable=agentStpMstVlanTable, agentSwitchSnoopingVlanMRPExpirationTime=agentSwitchSnoopingVlanMRPExpirationTime, agentSnmpTrapReceiverConfigEntry=agentSnmpTrapReceiverConfigEntry, agentSpanningTreeConfigGroup=agentSpanningTreeConfigGroup, agentPortUnicastControlThreshold=agentPortUnicastControlThreshold, agentStpMstBridgeIdentifier=agentStpMstBridgeIdentifier, agentSwitchProtectedPortPortList=agentSwitchProtectedPortPortList, fanFailureTrap=fanFailureTrap, agentStpCstBridgeHoldTime=agentStpCstBridgeHoldTime, agentSwitchSnoopingQuerierVlanOperMode=agentSwitchSnoopingQuerierVlanOperMode, agentPortUnicastControlMode=agentPortUnicastControlMode, agentPortMirrorDestinationPort=agentPortMirrorDestinationPort, multipleUsersTrap=multipleUsersTrap, agentNetworkBurnedInMacAddress=agentNetworkBurnedInMacAddress, agentStpPortHelloTime=agentStpPortHelloTime, agentProbePortIfIndex=agentProbePortIfIndex, agentSwitchVlanStaticMrouterGroup=agentSwitchVlanStaticMrouterGroup, agentCableTesterMaximumCableLength=agentCableTesterMaximumCableLength, agentSwitchSnoopingIntfGroup=agentSwitchSnoopingIntfGroup, Ipv6IfIndex=Ipv6IfIndex, agentCableTesterIfIndex=agentCableTesterIfIndex, agentLagDetailedPortSpeed=agentLagDetailedPortSpeed, agentSwitchVlanStaticMrouterEntry=agentSwitchVlanStaticMrouterEntry, agentSwitchAddressAgingTimeout=agentSwitchAddressAgingTimeout, agentInventoryAdditionalPackages=agentInventoryAdditionalPackages, agentTransferDownloadStart=agentTransferDownloadStart, agentAuthenticationListEntry=agentAuthenticationListEntry, agentSupportedMibName=agentSupportedMibName, agentSwitchSnoopingIntfGroupMembershipInterval=agentSwitchSnoopingIntfGroupMembershipInterval, agentUserAuthenticationConfigEntry=agentUserAuthenticationConfigEntry, agentLagConfigCreate=agentLagConfigCreate, agentSwitchSnoopingQuerierQueryInterval=agentSwitchSnoopingQuerierQueryInterval, agentSwitchMFDBMostEntriesUsed=agentSwitchMFDBMostEntriesUsed, agentStpPortStatsMstpBpduTx=agentStpPortStatsMstpBpduTx, agentInventoryBurnedInMacAddress=agentInventoryBurnedInMacAddress, agentNetworkConfigGroup=agentNetworkConfigGroup, agentStpConfigRevision=agentStpConfigRevision, agentStpPortMigrationCheck=agentStpPortMigrationCheck, agentSwitchStaticMacFilteringStatus=agentSwitchStaticMacFilteringStatus, agentUserPortConfigEntry=agentUserPortConfigEntry, agentSwitchSnoopingMulticastControlFramesProcessed=agentSwitchSnoopingMulticastControlFramesProcessed, agentDot3adAggPortEntry=agentDot3adAggPortEntry, agentSwitchSnoopingQuerierExpiryInterval=agentSwitchSnoopingQuerierExpiryInterval, agentSwitchProtectedPortConfigGroup=agentSwitchProtectedPortConfigGroup, agentSnmpCommunityIndex=agentSnmpCommunityIndex, agentInventorySoftwareVersion=agentInventorySoftwareVersion, failedUserLoginTrap=failedUserLoginTrap, agentSwitchDot3FlowControlMode=agentSwitchDot3FlowControlMode, agentAuthenticationListName=agentAuthenticationListName, agentLagConfigStaticCapability=agentLagConfigStaticCapability, agentLoginSessionUserName=agentLoginSessionUserName, agentStpMstTopologyChangeCount=agentStpMstTopologyChangeCount, agentLagConfigGroup=agentLagConfigGroup, agentPortAutoNegAdminStatus=agentPortAutoNegAdminStatus, agentSwitchSnoopingIntfIndex=agentSwitchSnoopingIntfIndex, agentServicePortIpv6AdminMode=agentServicePortIpv6AdminMode, agentPortMirrorTypeType=agentPortMirrorTypeType, agentAuthenticationGroup=agentAuthenticationGroup, agentSwitchStaticMacFilteringDestPortMask=agentSwitchStaticMacFilteringDestPortMask, agentSwitchMFDBSummaryVlanId=agentSwitchMFDBSummaryVlanId, agentStpCstRootFwdDelay=agentStpCstRootFwdDelay, agentSwitchMFDBMaxTableEntries=agentSwitchMFDBMaxTableEntries, agentStpCstPortBpduGuardEffect=agentStpCstPortBpduGuardEffect, agentPortDefaultType=agentPortDefaultType, agentStpCstBridgeMaxAge=agentStpCstBridgeMaxAge, agentPasswordManagementConfigGroup=agentPasswordManagementConfigGroup, agentServicePortIpv6AddrTable=agentServicePortIpv6AddrTable, agentCableTesterStatus=agentCableTesterStatus, PortList=PortList, agentSwitchMFDBSummaryEntry=agentSwitchMFDBSummaryEntry, agentSwitchingTraps=agentSwitchingTraps, agentSwitchMFDBGroup=agentSwitchMFDBGroup, agentSwitchSnoopingVlanMaxResponseTime=agentSwitchSnoopingVlanMaxResponseTime, agentPortDot3FlowControlMode=agentPortDot3FlowControlMode, agentSnmpBroadcastStormTrapFlag=agentSnmpBroadcastStormTrapFlag, agentSwitchSnoopingVlanGroup=agentSwitchSnoopingVlanGroup, agentDot3adAggPortLACPMode=agentDot3adAggPortLACPMode, agentStpPortStatsMstpBpduRx=agentStpPortStatsMstpBpduRx, agentStpCstPortForwardingState=agentStpCstPortForwardingState, agentStpCstPortId=agentStpCstPortId, agentServicePortIPAddress=agentServicePortIPAddress, agentMirroredPortIfIndex=agentMirroredPortIfIndex, agentStpCstBridgeHoldCount=agentStpCstBridgeHoldCount, agentDhcpFilteringPortConfigEntry=agentDhcpFilteringPortConfigEntry, agentSwitchSnoopingCfgEntry=agentSwitchSnoopingCfgEntry, agentLagSummaryAddPort=agentLagSummaryAddPort, agentStpMstVlanEntry=agentStpMstVlanEntry, agentCLIConfigGroup=agentCLIConfigGroup, agentLagSummaryLinkTrap=agentLagSummaryLinkTrap, agentSwitchSnoopingQuerierCfgEntry=agentSwitchSnoopingQuerierCfgEntry, agentServicePortConfigGroup=agentServicePortConfigGroup, agentSwitchMulticastControlThreshold=agentSwitchMulticastControlThreshold, Ipv6Address=Ipv6Address, agentImage2=agentImage2, agentNetworkConfigProtocol=agentNetworkConfigProtocol, agentStpPortStatsRstpBpduTx=agentStpPortStatsRstpBpduTx, agentSwitchSnoopingQuerierVlanAdminMode=agentSwitchSnoopingQuerierVlanAdminMode, agentClearVlan=agentClearVlan, agentTransferDownloadServerAddress=agentTransferDownloadServerAddress, agentStpCstPortTCNGuard=agentStpCstPortTCNGuard, agentStpCstPortEntry=agentStpCstPortEntry, agentSpanningTreeMode=agentSpanningTreeMode, agentNetworkSubnetMask=agentNetworkSubnetMask, agentPortMulticastControlMode=agentPortMulticastControlMode, agentSerialGroup=agentSerialGroup, agentStpCstBridgeFwdDelay=agentStpCstBridgeFwdDelay, agentPasswordManagementAging=agentPasswordManagementAging, agentStpConfigName=agentStpConfigName, agentSnmpCommunityAccessMode=agentSnmpCommunityAccessMode, agentStpPortTable=agentStpPortTable, agentPortConfigEntry=agentPortConfigEntry, agentStpCstMaxAge=agentStpCstMaxAge, agentTrapLogTrap=agentTrapLogTrap, agentTransferUploadStart=agentTransferUploadStart, agentNetworkLocalAdminMacAddress=agentNetworkLocalAdminMacAddress, agentStpCstPortPriority=agentStpCstPortPriority, agentStpCstRegionalRootId=agentStpCstRegionalRootId, agentSwitchVlanStaticMrouterAdminMode=agentSwitchVlanStaticMrouterAdminMode, agentClassOfServicePortTable=agentClassOfServicePortTable, agentNetworkIpv6AddrEntry=agentNetworkIpv6AddrEntry, agentSnmpTrapReceiverCommunityName=agentSnmpTrapReceiverCommunityName, agentTransferUploadImagename=agentTransferUploadImagename, agentSwitchSnoopingProtocol=agentSwitchSnoopingProtocol, agentDhcpFilteringPortTrustedMode=agentDhcpFilteringPortTrustedMode, linkFailureTrap=linkFailureTrap, agentStpMstBridgePriority=agentStpMstBridgePriority, agentAuthenticationListMethod2=agentAuthenticationListMethod2, agentPortIanaType=agentPortIanaType, agentTransferUploadGroup=agentTransferUploadGroup, agentSnmpTrapReceiverCreate=agentSnmpTrapReceiverCreate, agentAuthenticationListMethod3=agentAuthenticationListMethod3, agentSerialParityType=agentSerialParityType, agentTransferUploadStatus=agentTransferUploadStatus, agentTrapLogGroup=agentTrapLogGroup, agentUserAuthenticationConfigTable=agentUserAuthenticationConfigTable, agentStpPortEntry=agentStpPortEntry, agentTransferDownloadMode=agentTransferDownloadMode, agentTransferDownloadStatus=agentTransferDownloadStatus, agentStpCstPortBpduFlood=agentStpCstPortBpduFlood, agentSwitchSnoopingIntfEntry=agentSwitchSnoopingIntfEntry, agentPortAdminMode=agentPortAdminMode, agentServicePortSubnetMask=agentServicePortSubnetMask, agentStpCstBridgePriority=agentStpCstBridgePriority, agentDhcpFilteringGroup=agentDhcpFilteringGroup, agentTrapLogIndex=agentTrapLogIndex, agentSwitchStaticMacFilteringVlanId=agentSwitchStaticMacFilteringVlanId, agentSwitchSnoopingIntfMRPExpirationTime=agentSwitchSnoopingIntfMRPExpirationTime, agentTelnetLoginTimeout=agentTelnetLoginTimeout, agentStpMstEntry=agentStpMstEntry, agentStpCstPortAutoEdge=agentStpCstPortAutoEdge, agentStpCstTopologyChangeCount=agentStpCstTopologyChangeCount, agentStpCstHelloTime=agentStpCstHelloTime)
mibBuilder.exportSymbols("NETGEAR-SMART-SWITCHING-MIB", agentLoginSessionConnectionType=agentLoginSessionConnectionType, agentServicePortDefaultGateway=agentServicePortDefaultGateway, agentSwitchMFDBFilteringPortMask=agentSwitchMFDBFilteringPortMask, agentSwitchMulticastControlMode=agentSwitchMulticastControlMode, agentTransferDownloadUsername=agentTransferDownloadUsername, agentPortMirrorSourcePortMask=agentPortMirrorSourcePortMask, agentLoginSessionIdleTime=agentLoginSessionIdleTime, agentSwitchSnoopingQuerierOperMaxResponseTime=agentSwitchSnoopingQuerierOperMaxResponseTime, agentResetSystem=agentResetSystem, agentSupportedMibDescription=agentSupportedMibDescription, agentUserConfigDefaultAuthenticationList=agentUserConfigDefaultAuthenticationList, agentStpMstDesignatedCost=agentStpMstDesignatedCost, agentSwitchProtectedPortEntry=agentSwitchProtectedPortEntry, agentSnmpConfigGroup=agentSnmpConfigGroup, agentSnmpTrapFlagsConfigGroup=agentSnmpTrapFlagsConfigGroup, agentInventoryManufacturer=agentInventoryManufacturer, agentSupportedMibTable=agentSupportedMibTable, agentSwitchAddressAgingTimeoutEntry=agentSwitchAddressAgingTimeoutEntry, agentPortIfIndex=agentPortIfIndex, agentLagSummaryName=agentLagSummaryName, agentStpCstPortRootGuard=agentStpCstPortRootGuard, agentSwitchSnoopingCfgTable=agentSwitchSnoopingCfgTable, agentHTTPConfigGroup=agentHTTPConfigGroup, agentSnmpMultipleUsersTrapFlag=agentSnmpMultipleUsersTrapFlag, agentTransferUploadUsername=agentTransferUploadUsername, agentSwitchSnoopingVlanFastLeaveAdminMode=agentSwitchSnoopingVlanFastLeaveAdminMode, agentSwitchMFDBVlanId=agentSwitchMFDBVlanId, agentSwitchMFDBDescription=agentSwitchMFDBDescription, agentSwitchBroadcastControlThreshold=agentSwitchBroadcastControlThreshold, agentClearLoginSessions=agentClearLoginSessions, agentStpCstBridgeMaxHops=agentStpCstBridgeMaxHops, agentSwitchMFDBCurrentEntries=agentSwitchMFDBCurrentEntries, agentSerialHWFlowControlMode=agentSerialHWFlowControlMode, agentStpPortState=agentStpPortState, agentLoginSessionEntry=agentLoginSessionEntry, agentUserAccessMode=agentUserAccessMode, agentSwitchSnoopingQuerierVlanTable=agentSwitchSnoopingQuerierVlanTable, agentSnmpAuthenticationTrapFlag=agentSnmpAuthenticationTrapFlag, agentSwitchSnoopingQuerierOperVersion=agentSwitchSnoopingQuerierOperVersion, agentNetworkIpv6Gateway=agentNetworkIpv6Gateway, agentSupportedMibIndex=agentSupportedMibIndex, agentSwitchSnoopingQuerierAddress=agentSwitchSnoopingQuerierAddress, agentPortMaxFrameSize=agentPortMaxFrameSize, agentServicePortIpv6AddrEuiFlag=agentServicePortIpv6AddrEuiFlag, agentStpMstPortForwardingState=agentStpMstPortForwardingState, agentSnmpLinkUpDownTrapFlag=agentSnmpLinkUpDownTrapFlag, agentSnmpCommunityName=agentSnmpCommunityName, agentSwitchMFDBForwardingPortMask=agentSwitchMFDBForwardingPortMask, agentClearLags=agentClearLags, agentPortSTPState=agentPortSTPState, agentSaveConfig=agentSaveConfig, agentSnmpCommunityCreate=agentSnmpCommunityCreate, agentPortBroadcastControlThreshold=agentPortBroadcastControlThreshold, agentTransferDownloadPassword=agentTransferDownloadPassword, stpInstanceTopologyChangeTrap=stpInstanceTopologyChangeTrap, userLockoutTrap=userLockoutTrap, agentClassOfServicePortPriority=agentClassOfServicePortPriority, agentUserName=agentUserName, agentTransferUploadServerAddress=agentTransferUploadServerAddress, agentTransferDownloadServerIP=agentTransferDownloadServerIP, agentLagDetailedLagIndex=agentLagDetailedLagIndex, agentStpCstDesignatedPortId=agentStpCstDesignatedPortId, vlanRequestFailureTrap=vlanRequestFailureTrap, agentServicePortIpv6Gateway=agentServicePortIpv6Gateway, agentSwitchStormControlGroup=agentSwitchStormControlGroup, agentUserAuthenticationList=agentUserAuthenticationList, agentNetworkIpv6AddrStatus=agentNetworkIpv6AddrStatus, agentSwitchSnoopingIntfMaxResponseTime=agentSwitchSnoopingIntfMaxResponseTime, agentTrapLogSystemTime=agentTrapLogSystemTime, agentPasswordManagementLockAttempts=agentPasswordManagementLockAttempts, agentTransferDownloadImagename=agentTransferDownloadImagename, agentTelnetConfigGroup=agentTelnetConfigGroup, vlanDeleteLastTrap=vlanDeleteLastTrap, agentLagDetailedIfIndex=agentLagDetailedIfIndex, agentUserConfigTable=agentUserConfigTable, agentSwitchSnoopingAdminMode=agentSwitchSnoopingAdminMode, agentStpMstId=agentStpMstId, agentSwitchSnoopingIntfFastLeaveAdminMode=agentSwitchSnoopingIntfFastLeaveAdminMode, agentPortMirrorTypeEntry=agentPortMirrorTypeEntry, agentClearPasswords=agentClearPasswords, agentUserEncryptionPassword=agentUserEncryptionPassword, agentSerialStopBits=agentSerialStopBits, agentNetworkIPAddress=agentNetworkIPAddress, agentCableTesterMinimumCableLength=agentCableTesterMinimumCableLength, vlanRestoreFailureTrap=vlanRestoreFailureTrap, agentActiveImage=agentActiveImage, agentDot3adAggPort=agentDot3adAggPort, agentLagSummaryLagIndex=agentLagSummaryLagIndex, agentNetworkIpv6AdminMode=agentNetworkIpv6AdminMode, agentStpCstTimeSinceTopologyChange=agentStpCstTimeSinceTopologyChange, agentStpAdminMode=agentStpAdminMode, agentSnmpCommunityConfigEntry=agentSnmpCommunityConfigEntry, agentTrapLogTable=agentTrapLogTable, agentDhcpFilteringPortConfigTable=agentDhcpFilteringPortConfigTable, agentTelnetAllowNewMode=agentTelnetAllowNewMode, agentImage1=agentImage1, agentStpMstPortEntry=agentStpMstPortEntry, agentLoginSessionStatus=agentLoginSessionStatus, agentStpMstRootPathCost=agentStpMstRootPathCost, agentTransferDownloadDataType=agentTransferDownloadDataType, agentSwitchSnoopingQuerierVlanAddress=agentSwitchSnoopingQuerierVlanAddress, agentSwitchUnicastControlThreshold=agentSwitchUnicastControlThreshold, agentNetworkIpv6AddrTable=agentNetworkIpv6AddrTable, agentInventoryGroup=agentInventoryGroup, agentSwitching=agentSwitching, agentStpMstDesignatedBridgeId=agentStpMstDesignatedBridgeId, agentPortMirrorTypeSourcePort=agentPortMirrorTypeSourcePort, agentSystemGroup=agentSystemGroup, agentStpMstPortId=agentStpMstPortId, agentServicePortIpv6AddrStatus=agentServicePortIpv6AddrStatus, agentPortMirrorAdminMode=agentPortMirrorAdminMode, agentStpMstPortPathCost=agentStpMstPortPathCost, agentLoginSessionTable=agentLoginSessionTable, agentTrapLogTotal=agentTrapLogTotal, agentUserConfigGroup=agentUserConfigGroup, agentUserPasswordExpireTime=agentUserPasswordExpireTime, agentSwitchMFDBSummaryTable=agentSwitchMFDBSummaryTable, agentStpPortUpTime=agentStpPortUpTime, agentInventoryMaintenanceLevel=agentInventoryMaintenanceLevel, agentStpMstTimeSinceTopologyChange=agentStpMstTimeSinceTopologyChange, agentSwitchSnoopingIntfAdminMode=agentSwitchSnoopingIntfAdminMode, agentSwitchSnoopingQuerierAdminMode=agentSwitchSnoopingQuerierAdminMode, agentHTTPSoftTimeout=agentHTTPSoftTimeout, agentStpPortStatsStpBpduRx=agentStpPortStatsStpBpduRx, agentSwitchSnoopingGroup=agentSwitchSnoopingGroup, agentSwitchMFDBEntry=agentSwitchMFDBEntry, agentSwitchMFDBTable=agentSwitchMFDBTable, agentDot3adAggPortTable=agentDot3adAggPortTable, agentCableTesterCableStatus=agentCableTesterCableStatus, agentClearSwitchStats=agentClearSwitchStats, agentSnmpCommunityConfigTable=agentSnmpCommunityConfigTable, agentTransferDownloadPath=agentTransferDownloadPath, agentPortMaxFrameSizeLimit=agentPortMaxFrameSizeLimit, agentStpCstPortEdge=agentStpCstPortEdge, agentInventoryMachineType=agentInventoryMachineType, agentUserEncryptionType=agentUserEncryptionType, agentInventorySerialNumber=agentInventorySerialNumber, agentSwitchSnoopingQuerierLastQuerierAddress=agentSwitchSnoopingQuerierLastQuerierAddress, stpInstanceNewRootTrap=stpInstanceNewRootTrap, agentStpCstDesignatedBridgeId=agentStpCstDesignatedBridgeId, agentClassOfServicePortEntry=agentClassOfServicePortEntry, Ipv6AddressPrefix=Ipv6AddressPrefix, agentLagSummaryType=agentLagSummaryType, agentStpCstRegionalRootPathCost=agentStpCstRegionalRootPathCost, agentSwitchAddressAgingTimeoutTable=agentSwitchAddressAgingTimeoutTable, agentLagSummaryConfigEntry=agentLagSummaryConfigEntry, agentUserConfigCreate=agentUserConfigCreate, agentSwitchUnicastControlMode=agentSwitchUnicastControlMode, agentSwitchSnoopingIntfTable=agentSwitchSnoopingIntfTable, agentNetworkDefaultGateway=agentNetworkDefaultGateway, agentSwitchProtectedPortGroupId=agentSwitchProtectedPortGroupId, agentLoginSessionInetAddressType=agentLoginSessionInetAddressType, agentStpCstDesignatedCost=agentStpCstDesignatedCost, agentLagDetailedPortStatus=agentLagDetailedPortStatus, agentUserPortConfigTable=agentUserPortConfigTable, agentSwitchSnoopingVlanTable=agentSwitchSnoopingVlanTable, agentUserLockoutStatus=agentUserLockoutStatus, agentServicePortBurnedInMacAddress=agentServicePortBurnedInMacAddress, agentAuthenticationListCreate=agentAuthenticationListCreate, agentLagSummaryStatus=agentLagSummaryStatus, agentUserPassword=agentUserPassword, agentPasswordManagementMinLength=agentPasswordManagementMinLength, agentSwitchStaticMacFilteringAddress=agentSwitchStaticMacFilteringAddress, agentTelnetMaxSessions=agentTelnetMaxSessions, agentSwitchSnoopingIntfMulticastRouterMode=agentSwitchSnoopingIntfMulticastRouterMode, VlanList=VlanList, agentSwitchConfigGroup=agentSwitchConfigGroup, agentStpMstRowStatus=agentStpMstRowStatus, agentTransferUploadServerAddressType=agentTransferUploadServerAddressType, agentPasswordManagementHistory=agentPasswordManagementHistory, agentStpMstPortPriority=agentStpMstPortPriority, agentSnmpTrapReceiverIpv6Address=agentSnmpTrapReceiverIpv6Address, agentServicePortConfigProtocol=agentServicePortConfigProtocol, agentStpMstDesignatedRootId=agentStpMstDesignatedRootId, agentNetworkIpv6AddrPrefixLength=agentNetworkIpv6AddrPrefixLength, agentStpCstPortTable=agentStpCstPortTable, agentLoginSessionInetAddress=agentLoginSessionInetAddress, agentStpMstDesignatedPortId=agentStpMstDesignatedPortId, agentUserAuthenticationType=agentUserAuthenticationType, agentStpCstConfigGroup=agentStpCstConfigGroup, agentInventoryNetworkProcessingDevice=agentInventoryNetworkProcessingDevice, agentSerialBaudrate=agentSerialBaudrate, agentAuthenticationListMethod4=agentAuthenticationListMethod4, agentSnmpCommunityIPAddress=agentSnmpCommunityIPAddress, agentSnmpTrapReceiverIndex=agentSnmpTrapReceiverIndex, agentSwitchSnoopingQuerierVlanEntry=agentSwitchSnoopingQuerierVlanEntry, agentPortMirrorSessionNum=agentPortMirrorSessionNum, agentUserConfigEntry=agentUserConfigEntry, agentSwitchSnoopingQuerierCfgTable=agentSwitchSnoopingQuerierCfgTable, agentPortConfigTable=agentPortConfigTable, agentServicePortIpv6AddrPrefix=agentServicePortIpv6AddrPrefix, agentSaveConfigStatus=agentSaveConfigStatus, agentDhcpFilteringAdminMode=agentDhcpFilteringAdminMode, agentNetworkMacAddressType=agentNetworkMacAddressType, agentTransferUploadFilename=agentTransferUploadFilename, agentStpBpduFilterDefault=agentStpBpduFilterDefault, agentPortBroadcastControlMode=agentPortBroadcastControlMode, agentAuthenticationListTable=agentAuthenticationListTable, agentNetworkMgmtVlan=agentNetworkMgmtVlan, agentLagSummaryDeletePort=agentLagSummaryDeletePort, agentAuthenticationListStatus=agentAuthenticationListStatus, agentSnmpTrapReceiverIPAddress=agentSnmpTrapReceiverIPAddress, agentSnmpCommunityStatus=agentSnmpCommunityStatus, agentSwitchSnoopingVlanAdminMode=agentSwitchSnoopingVlanAdminMode, agentTransferUploadPassword=agentTransferUploadPassword, agentAuthenticationListIndex=agentAuthenticationListIndex, agentSerialTimeout=agentSerialTimeout, agentStpConfigFormatSelector=agentStpConfigFormatSelector, agentSwitchMFDBSummaryForwardingPortMask=agentSwitchMFDBSummaryForwardingPortMask, agentStpCstPortPathCost=agentStpCstPortPathCost, agentPortMirrorTable=agentPortMirrorTable, agentClearConfig=agentClearConfig, agentStpCstPortOperPointToPoint=agentStpCstPortOperPointToPoint, vlanDefaultCfgFailureTrap=vlanDefaultCfgFailureTrap, broadcastStormStartTrap=broadcastStormStartTrap, agentTransferUploadServerIP=agentTransferUploadServerIP, agentTransferDownloadServerAddressType=agentTransferDownloadServerAddressType, agentNetworkJavaMode=agentNetworkJavaMode, agentStpMstTopologyChangeParm=agentStpMstTopologyChangeParm, agentSwitchSnoopingPortMask=agentSwitchSnoopingPortMask, agentSwitchSnoopingVlanGroupMembershipInterval=agentSwitchSnoopingVlanGroupMembershipInterval, agentImageConfigGroup=agentImageConfigGroup, agentLoginSessionIPAddress=agentLoginSessionIPAddress)
