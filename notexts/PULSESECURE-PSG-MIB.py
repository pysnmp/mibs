#
# PySNMP MIB module PULSESECURE-PSG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/pulse/PULSESECURE-PSG-MIB
# Produced by pysmi-1.1.12 at Tue Dec  3 12:39:53 2024
# On host fv-az658-333 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, iso, Bits, TimeTicks, ModuleIdentity, Gauge32, IpAddress, Counter64, enterprises, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "Bits", "TimeTicks", "ModuleIdentity", "Gauge32", "IpAddress", "Counter64", "enterprises", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pulsesecure_gateway = ModuleIdentity((1, 3, 6, 1, 4, 1, 12532)).setLabel("pulsesecure-gateway")
pulsesecure_gateway.setRevisions(('2016-07-07 16:10',))
if mibBuilder.loadTexts: pulsesecure_gateway.setLastUpdated('201607071610Z')
if mibBuilder.loadTexts: pulsesecure_gateway.setOrganization('Pulse Secure')
logFullPercent = MibScalar((1, 3, 6, 1, 4, 1, 12532, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logFullPercent.setStatus('current')
signedInWebUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signedInWebUsers.setStatus('current')
signedInMailUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signedInMailUsers.setStatus('current')
blockedIP = MibScalar((1, 3, 6, 1, 4, 1, 12532, 4), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: blockedIP.setStatus('current')
authServerName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 5), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: authServerName.setStatus('current')
productName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productName.setStatus('current')
productVersion = MibScalar((1, 3, 6, 1, 4, 1, 12532, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productVersion.setStatus('current')
fileName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 8), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: fileName.setStatus('current')
meetingUserCount = MibScalar((1, 3, 6, 1, 4, 1, 12532, 9), Gauge32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: meetingUserCount.setStatus('current')
iveCpuUtil = MibScalar((1, 3, 6, 1, 4, 1, 12532, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveCpuUtil.setStatus('current')
iveMemoryUtil = MibScalar((1, 3, 6, 1, 4, 1, 12532, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveMemoryUtil.setStatus('current')
iveConcurrentUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveConcurrentUsers.setStatus('current')
clusterConcurrentUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusterConcurrentUsers.setStatus('current')
iveTotalHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveTotalHits.setStatus('current')
iveFileHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveFileHits.setStatus('current')
iveWebHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveWebHits.setStatus('current')
iveAppletHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveAppletHits.setStatus('current')
ivetermHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ivetermHits.setStatus('current')
iveSAMHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveSAMHits.setStatus('current')
iveNCHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveNCHits.setStatus('current')
meetingHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: meetingHits.setStatus('current')
meetingCount = MibScalar((1, 3, 6, 1, 4, 1, 12532, 22), Gauge32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: meetingCount.setStatus('current')
logName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 23), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: logName.setStatus('current')
iveSwapUtil = MibScalar((1, 3, 6, 1, 4, 1, 12532, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveSwapUtil.setStatus('current')
diskFullPercent = MibScalar((1, 3, 6, 1, 4, 1, 12532, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskFullPercent.setStatus('current')
blockedIPList = MibTable((1, 3, 6, 1, 4, 1, 12532, 26), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: blockedIPList.setStatus('current')
ipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12532, 26, 1), ).setIndexNames((0, "PULSESECURE-PSG-MIB", "ipIndex"))
if mibBuilder.loadTexts: ipEntry.setStatus('current')
ipIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12532, 26, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipIndex.setStatus('current')
ipValue = MibTableColumn((1, 3, 6, 1, 4, 1, 12532, 26, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipValue.setStatus('current')
logID = MibScalar((1, 3, 6, 1, 4, 1, 12532, 27), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: logID.setStatus('current')
logType = MibScalar((1, 3, 6, 1, 4, 1, 12532, 28), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: logType.setStatus('current')
logDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 29), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: logDescription.setStatus('current')
ivsName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 30), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ivsName.setStatus('deprecated')
ocspResponderURL = MibScalar((1, 3, 6, 1, 4, 1, 12532, 31), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ocspResponderURL.setStatus('current')
fanDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 32), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: fanDescription.setStatus('current')
psDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 33), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: psDescription.setStatus('current')
raidDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 34), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raidDescription.setStatus('current')
clusterName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 35), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: clusterName.setStatus('current')
nodeList = MibScalar((1, 3, 6, 1, 4, 1, 12532, 36), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nodeList.setStatus('current')
vipType = MibScalar((1, 3, 6, 1, 4, 1, 12532, 37), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vipType.setStatus('current')
currentVIP = MibScalar((1, 3, 6, 1, 4, 1, 12532, 38), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: currentVIP.setStatus('current')
newVIP = MibScalar((1, 3, 6, 1, 4, 1, 12532, 39), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: newVIP.setStatus('current')
nicEvent = MibScalar((1, 3, 6, 1, 4, 1, 12532, 40), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nicEvent.setStatus('current')
nodeName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 41), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nodeName.setStatus('current')
iveTemperature = MibScalar((1, 3, 6, 1, 4, 1, 12532, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveTemperature.setStatus('current')
iveVPNTunnels = MibScalar((1, 3, 6, 1, 4, 1, 12532, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveVPNTunnels.setStatus('current')
iveSSLConnections = MibScalar((1, 3, 6, 1, 4, 1, 12532, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveSSLConnections.setStatus('current')
esapVersion = MibScalar((1, 3, 6, 1, 4, 1, 12532, 45), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esapVersion.setStatus('current')
vipChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 12532, 46), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vipChangeReason.setStatus('current')
processName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 47), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: processName.setStatus('current')
iveTotalSignedInUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveTotalSignedInUsers.setStatus('current')
vpnACLSPercentage = MibScalar((1, 3, 6, 1, 4, 1, 12532, 49), Gauge32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vpnACLSPercentage.setStatus('current')
vpnACLSCount = MibScalar((1, 3, 6, 1, 4, 1, 12532, 50), Gauge32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vpnACLSCount.setStatus('current')
blockedIPv6 = MibScalar((1, 3, 6, 1, 4, 1, 12532, 51), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: blockedIPv6.setStatus('current')
iveTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 251))
iveLogNearlyFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 4)).setObjects(("PULSESECURE-PSG-MIB", "logFullPercent"), ("PULSESECURE-PSG-MIB", "logName"))
if mibBuilder.loadTexts: iveLogNearlyFull.setStatus('current')
iveLogFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 5)).setObjects(("PULSESECURE-PSG-MIB", "logName"))
if mibBuilder.loadTexts: iveLogFull.setStatus('current')
iveMaxConcurrentUsersSignedIn = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 6)).setObjects(("PULSESECURE-PSG-MIB", "iveConcurrentUsers"))
if mibBuilder.loadTexts: iveMaxConcurrentUsersSignedIn.setStatus('current')
iveTooManyFailedLoginAttempts = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 7)).setObjects(("PULSESECURE-PSG-MIB", "blockedIP"))
if mibBuilder.loadTexts: iveTooManyFailedLoginAttempts.setStatus('current')
externalAuthServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 8)).setObjects(("PULSESECURE-PSG-MIB", "authServerName"))
if mibBuilder.loadTexts: externalAuthServerUnreachable.setStatus('current')
iveStart = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 9))
if mibBuilder.loadTexts: iveStart.setStatus('current')
iveShutdown = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 10))
if mibBuilder.loadTexts: iveShutdown.setStatus('current')
iveReboot = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 11))
if mibBuilder.loadTexts: iveReboot.setStatus('current')
archiveServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 12))
if mibBuilder.loadTexts: archiveServerUnreachable.setStatus('current')
archiveServerLoginFailed = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 13))
if mibBuilder.loadTexts: archiveServerLoginFailed.setStatus('current')
archiveFileTransferFailed = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 14)).setObjects(("PULSESECURE-PSG-MIB", "fileName"))
if mibBuilder.loadTexts: archiveFileTransferFailed.setStatus('current')
meetingUserLimit = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 15)).setObjects(("PULSESECURE-PSG-MIB", "meetingUserCount"))
if mibBuilder.loadTexts: meetingUserLimit.setStatus('current')
iveRestart = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 16))
if mibBuilder.loadTexts: iveRestart.setStatus('current')
meetingLimit = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 17)).setObjects(("PULSESECURE-PSG-MIB", "meetingCount"))
if mibBuilder.loadTexts: meetingLimit.setStatus('current')
iveDiskNearlyFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 18)).setObjects(("PULSESECURE-PSG-MIB", "diskFullPercent"))
if mibBuilder.loadTexts: iveDiskNearlyFull.setStatus('current')
iveDiskFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 19))
if mibBuilder.loadTexts: iveDiskFull.setStatus('current')
logMessageTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 20)).setObjects(("PULSESECURE-PSG-MIB", "logID"), ("PULSESECURE-PSG-MIB", "logType"), ("PULSESECURE-PSG-MIB", "logDescription"))
if mibBuilder.loadTexts: logMessageTrap.setStatus('current')
memUtilNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 21)).setObjects(("PULSESECURE-PSG-MIB", "iveMemoryUtil"))
if mibBuilder.loadTexts: memUtilNotify.setStatus('current')
cpuUtilNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 22)).setObjects(("PULSESECURE-PSG-MIB", "iveCpuUtil"))
if mibBuilder.loadTexts: cpuUtilNotify.setStatus('current')
swapUtilNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 23)).setObjects(("PULSESECURE-PSG-MIB", "iveSwapUtil"))
if mibBuilder.loadTexts: swapUtilNotify.setStatus('current')
iveMaxConcurrentUsersVirtualSystem = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 24)).setObjects(("PULSESECURE-PSG-MIB", "ivsName"))
if mibBuilder.loadTexts: iveMaxConcurrentUsersVirtualSystem.setStatus('deprecated')
ocspResponderConnectionFailed = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 25)).setObjects(("PULSESECURE-PSG-MIB", "ocspResponderURL"))
if mibBuilder.loadTexts: ocspResponderConnectionFailed.setStatus('current')
iveFanNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 26)).setObjects(("PULSESECURE-PSG-MIB", "fanDescription"))
if mibBuilder.loadTexts: iveFanNotify.setStatus('current')
ivePowerSupplyNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 27)).setObjects(("PULSESECURE-PSG-MIB", "psDescription"))
if mibBuilder.loadTexts: ivePowerSupplyNotify.setStatus('current')
iveRaidNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 28)).setObjects(("PULSESECURE-PSG-MIB", "raidDescription"))
if mibBuilder.loadTexts: iveRaidNotify.setStatus('current')
iveClusterDisableNodeTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 29)).setObjects(("PULSESECURE-PSG-MIB", "clusterName"), ("PULSESECURE-PSG-MIB", "nodeList"))
if mibBuilder.loadTexts: iveClusterDisableNodeTrap.setStatus('current')
iveClusterChangedVIPTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 30)).setObjects(("PULSESECURE-PSG-MIB", "vipType"), ("PULSESECURE-PSG-MIB", "currentVIP"), ("PULSESECURE-PSG-MIB", "newVIP"))
if mibBuilder.loadTexts: iveClusterChangedVIPTrap.setStatus('current')
iveNetExternalInterfaceDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 31)).setObjects(("PULSESECURE-PSG-MIB", "nicEvent"))
if mibBuilder.loadTexts: iveNetExternalInterfaceDownTrap.setStatus('current')
iveClusterDeleteTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 32)).setObjects(("PULSESECURE-PSG-MIB", "nodeName"))
if mibBuilder.loadTexts: iveClusterDeleteTrap.setStatus('current')
iveNetInternalInterfaceDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 33)).setObjects(("PULSESECURE-PSG-MIB", "nicEvent"))
if mibBuilder.loadTexts: iveNetInternalInterfaceDownTrap.setStatus('current')
iveNetManagementInterfaceDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 34)).setObjects(("PULSESECURE-PSG-MIB", "nicEvent"))
if mibBuilder.loadTexts: iveNetManagementInterfaceDownTrap.setStatus('current')
iveTemperatureNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 35)).setObjects(("PULSESECURE-PSG-MIB", "iveTemperature"))
if mibBuilder.loadTexts: iveTemperatureNotify.setStatus('current')
iveVIPNodeChanged = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 36)).setObjects(("PULSESECURE-PSG-MIB", "nodeName"), ("PULSESECURE-PSG-MIB", "vipChangeReason"))
if mibBuilder.loadTexts: iveVIPNodeChanged.setStatus('current')
iveProcessesNearMaxLimit = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 37)).setObjects(("PULSESECURE-PSG-MIB", "processName"))
if mibBuilder.loadTexts: iveProcessesNearMaxLimit.setStatus('current')
iveProcessesReachedMaxLimit = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 38)).setObjects(("PULSESECURE-PSG-MIB", "processName"))
if mibBuilder.loadTexts: iveProcessesReachedMaxLimit.setStatus('current')
iveACLsNearMaxLimit = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 39)).setObjects(("PULSESECURE-PSG-MIB", "vpnACLSPercentage"))
if mibBuilder.loadTexts: iveACLsNearMaxLimit.setStatus('current')
iveACLsCrossedMaxLimit = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 40)).setObjects(("PULSESECURE-PSG-MIB", "vpnACLSCount"))
if mibBuilder.loadTexts: iveACLsCrossedMaxLimit.setStatus('current')
iveTooManyFailedLoginAttemptsIPv6 = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 41)).setObjects(("PULSESECURE-PSG-MIB", "blockedIPv6"))
if mibBuilder.loadTexts: iveTooManyFailedLoginAttemptsIPv6.setStatus('current')
iveSAProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252))
iveICProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253))
iveMAGProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254))
iveVAProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 255))
ivePSAProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256))
iveProductMAG2600 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 1))
iveProductMAG4610 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 2))
iveProductSM160 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 3))
iveProductSM360 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 4))
iveProductVASPE = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 255, 1))
iveProductVADTE = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 255, 2))
iveProductPSA300 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 1))
iveProductPSA3000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 2))
iveProductPSA5000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 3))
iveProductPSA7000f = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 4))
iveProductPSA7000c = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 5))
iveProductPSA10000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 6))
iveMAG2600 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 1, 1))
iveMAG4610 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 2, 1))
iveMAGSM160 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 3, 1))
iveMAGSM360 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 4, 1))
iveVASPE = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 255, 1, 1))
iveVADTE = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 255, 2, 1))
ivePSA300 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 1, 1))
ivePSA3000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 2, 1))
ivePSA5000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 3, 1))
ivePSA7000f = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 4, 1))
ivePSA7000c = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 5, 1))
ivePSA10000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 256, 6, 1))
mibBuilder.exportSymbols("PULSESECURE-PSG-MIB", iveMAGSM160=iveMAGSM160, iveVASPE=iveVASPE, iveProductPSA3000=iveProductPSA3000, iveProductSM360=iveProductSM360, iveACLsNearMaxLimit=iveACLsNearMaxLimit, iveProcessesReachedMaxLimit=iveProcessesReachedMaxLimit, vipChangeReason=vipChangeReason, nodeList=nodeList, raidDescription=raidDescription, iveStart=iveStart, iveProductPSA300=iveProductPSA300, iveSAMHits=iveSAMHits, iveMAG4610=iveMAG4610, meetingCount=meetingCount, iveMAGSM360=iveMAGSM360, authServerName=authServerName, PYSNMP_MODULE_ID=pulsesecure_gateway, meetingUserCount=meetingUserCount, blockedIPv6=blockedIPv6, iveNetInternalInterfaceDownTrap=iveNetInternalInterfaceDownTrap, newVIP=newVIP, vipType=vipType, iveMaxConcurrentUsersVirtualSystem=iveMaxConcurrentUsersVirtualSystem, iveNCHits=iveNCHits, ivePowerSupplyNotify=ivePowerSupplyNotify, meetingUserLimit=meetingUserLimit, iveProductPSA5000=iveProductPSA5000, fanDescription=fanDescription, iveMAG2600=iveMAG2600, iveSAProduct=iveSAProduct, currentVIP=currentVIP, iveTotalSignedInUsers=iveTotalSignedInUsers, iveProductPSA7000c=iveProductPSA7000c, iveTemperature=iveTemperature, archiveServerLoginFailed=archiveServerLoginFailed, iveMAGProduct=iveMAGProduct, iveICProduct=iveICProduct, iveNetManagementInterfaceDownTrap=iveNetManagementInterfaceDownTrap, ivePSA7000f=ivePSA7000f, logFullPercent=logFullPercent, diskFullPercent=diskFullPercent, iveTooManyFailedLoginAttempts=iveTooManyFailedLoginAttempts, iveProductVASPE=iveProductVASPE, fileName=fileName, ipIndex=ipIndex, ivePSA10000=ivePSA10000, productVersion=productVersion, iveVIPNodeChanged=iveVIPNodeChanged, iveClusterDisableNodeTrap=iveClusterDisableNodeTrap, meetingHits=meetingHits, externalAuthServerUnreachable=externalAuthServerUnreachable, psDescription=psDescription, iveWebHits=iveWebHits, iveProductPSA7000f=iveProductPSA7000f, blockedIPList=blockedIPList, iveTotalHits=iveTotalHits, iveProductVADTE=iveProductVADTE, ivePSA3000=ivePSA3000, iveClusterChangedVIPTrap=iveClusterChangedVIPTrap, blockedIP=blockedIP, ivePSA300=ivePSA300, iveAppletHits=iveAppletHits, iveCpuUtil=iveCpuUtil, iveLogNearlyFull=iveLogNearlyFull, iveACLsCrossedMaxLimit=iveACLsCrossedMaxLimit, logMessageTrap=logMessageTrap, cpuUtilNotify=cpuUtilNotify, iveClusterDeleteTrap=iveClusterDeleteTrap, clusterName=clusterName, ivePSAProduct=ivePSAProduct, iveReboot=iveReboot, iveMemoryUtil=iveMemoryUtil, iveMaxConcurrentUsersSignedIn=iveMaxConcurrentUsersSignedIn, iveDiskFull=iveDiskFull, logDescription=logDescription, esapVersion=esapVersion, archiveServerUnreachable=archiveServerUnreachable, iveSSLConnections=iveSSLConnections, signedInWebUsers=signedInWebUsers, ivsName=ivsName, logType=logType, meetingLimit=meetingLimit, iveTooManyFailedLoginAttemptsIPv6=iveTooManyFailedLoginAttemptsIPv6, iveConcurrentUsers=iveConcurrentUsers, iveLogFull=iveLogFull, iveProductSM160=iveProductSM160, iveShutdown=iveShutdown, iveTemperatureNotify=iveTemperatureNotify, iveFileHits=iveFileHits, iveRaidNotify=iveRaidNotify, iveNetExternalInterfaceDownTrap=iveNetExternalInterfaceDownTrap, memUtilNotify=memUtilNotify, ivePSA7000c=ivePSA7000c, clusterConcurrentUsers=clusterConcurrentUsers, iveProductPSA10000=iveProductPSA10000, processName=processName, iveSwapUtil=iveSwapUtil, pulsesecure_gateway=pulsesecure_gateway, iveProductMAG4610=iveProductMAG4610, ocspResponderConnectionFailed=ocspResponderConnectionFailed, iveProcessesNearMaxLimit=iveProcessesNearMaxLimit, ocspResponderURL=ocspResponderURL, nicEvent=nicEvent, productName=productName, logName=logName, logID=logID, iveProductMAG2600=iveProductMAG2600, nodeName=nodeName, archiveFileTransferFailed=archiveFileTransferFailed, vpnACLSPercentage=vpnACLSPercentage, ivePSA5000=ivePSA5000, ipEntry=ipEntry, iveRestart=iveRestart, iveVADTE=iveVADTE, signedInMailUsers=signedInMailUsers, ivetermHits=ivetermHits, iveDiskNearlyFull=iveDiskNearlyFull, ipValue=ipValue, swapUtilNotify=swapUtilNotify, iveVAProduct=iveVAProduct, vpnACLSCount=vpnACLSCount, iveFanNotify=iveFanNotify, iveVPNTunnels=iveVPNTunnels, iveTraps=iveTraps)
