#
# PySNMP MIB module SAEUROPE-MESSAGES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/saeurope/SAEUROPE-MESSAGES-MIB
# Produced by pysmi-1.1.12 at Wed Oct  9 02:24:31 2024
# On host fv-az1144-128 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
messagesMIBGroups, messages = mibBuilder.importSymbols("SAEUROPE-ROOT-MIB", "messagesMIBGroups", "messages")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Gauge32, ModuleIdentity, TimeTicks, ObjectIdentity, MibIdentifier, Unsigned32, IpAddress, Integer32, iso, NotificationType, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Gauge32", "ModuleIdentity", "TimeTicks", "ObjectIdentity", "MibIdentifier", "Unsigned32", "IpAddress", "Integer32", "iso", "NotificationType", "Bits", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
saEuropeMessages = ModuleIdentity((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1))
saEuropeMessages.setRevisions(('2015-11-10 13:00', '2005-09-07 09:00', '2002-11-30 14:00', '2002-07-01 17:30', '2002-06-21 13:30', '2001-08-31 13:30',))
if mibBuilder.loadTexts: saEuropeMessages.setLastUpdated('201511101300Z')
if mibBuilder.loadTexts: saEuropeMessages.setOrganization('Synamedia')
msgOldestNumber = MibScalar((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgOldestNumber.setStatus('current')
msgNewestNumber = MibScalar((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgNewestNumber.setStatus('current')
msgMaxSequenceNumber = MibScalar((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgMaxSequenceNumber.setStatus('current')
messageTable = MibTable((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4), )
if mibBuilder.loadTexts: messageTable.setStatus('current')
messageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1), ).setIndexNames((0, "SAEUROPE-MESSAGES-MIB", "msgSequenceNumber"))
if mibBuilder.loadTexts: messageEntry.setStatus('current')
msgSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgSequenceNumber.setStatus('current')
msgId = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgId.setStatus('current')
msgSourceName = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgSourceName.setStatus('current')
msgText = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgText.setStatus('current')
msgSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgSubject.setStatus('current')
msgGenerationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgGenerationTime.setStatus('current')
msgBehaviour = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notPending", 0), ("clearedByUser", 1), ("clearedBySystem", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgBehaviour.setStatus('current')
msgClass = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("communication", 0), ("quality", 1), ("processing", 2), ("equipment", 3), ("environmental", 4), ("indeterminate", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgClass.setStatus('current')
msgSubClass = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgSubClass.setStatus('current')
msgSubClassNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgSubClassNbr.setStatus('current')
msgDetailPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgDetailPresent.setStatus('current')
msgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("open", 0), ("closed", 1), ("openMinorUpper", 2), ("openMinorLower", 3), ("openMajorUpper", 4), ("openMajorLower", 5), ("closedMinorUpper", 6), ("closedMinorLower", 7), ("closedMajorUpper", 8), ("closedMajorLower", 9), ("notDefined", 10), ("notValid", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgStatus.setStatus('current')
msgSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("indeterminate", 0), ("critical", 1), ("major", 2), ("minor", 3), ("warning", 4), ("cleared", 5), ("information", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgSeverity.setStatus('current')
msgDetail = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(320, 320)).setFixedLength(320)).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgDetail.setStatus('current')
msgPhysicalEntity = MibTableColumn((1, 3, 6, 1, 4, 1, 1482, 20, 1, 2, 1, 4, 1, 15), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msgPhysicalEntity.setStatus('current')
messagesModuleCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1482, 1, 1, 2, 1)).setObjects(("SAEUROPE-MESSAGES-MIB", "messagesObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    messagesModuleCompliance = messagesModuleCompliance.setStatus('current')
messagesObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1482, 1, 1, 2, 2)).setObjects(("SAEUROPE-MESSAGES-MIB", "msgOldestNumber"), ("SAEUROPE-MESSAGES-MIB", "msgNewestNumber"), ("SAEUROPE-MESSAGES-MIB", "msgSourceName"), ("SAEUROPE-MESSAGES-MIB", "msgMaxSequenceNumber"), ("SAEUROPE-MESSAGES-MIB", "msgId"), ("SAEUROPE-MESSAGES-MIB", "msgSourceName"), ("SAEUROPE-MESSAGES-MIB", "msgText"), ("SAEUROPE-MESSAGES-MIB", "msgSubject"), ("SAEUROPE-MESSAGES-MIB", "msgGenerationTime"), ("SAEUROPE-MESSAGES-MIB", "msgBehaviour"), ("SAEUROPE-MESSAGES-MIB", "msgClass"), ("SAEUROPE-MESSAGES-MIB", "msgSubClass"), ("SAEUROPE-MESSAGES-MIB", "msgSubClassNbr"), ("SAEUROPE-MESSAGES-MIB", "msgDetailPresent"), ("SAEUROPE-MESSAGES-MIB", "msgStatus"), ("SAEUROPE-MESSAGES-MIB", "msgSeverity"), ("SAEUROPE-MESSAGES-MIB", "msgSequenceNumber"), ("SAEUROPE-MESSAGES-MIB", "msgDetail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    messagesObjectGroup = messagesObjectGroup.setStatus('current')
msgPhysicalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1482, 1, 1, 2, 3)).setObjects(("SAEUROPE-MESSAGES-MIB", "msgPhysicalEntity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    msgPhysicalGroup = msgPhysicalGroup.setStatus('current')
mibBuilder.exportSymbols("SAEUROPE-MESSAGES-MIB", msgText=msgText, msgOldestNumber=msgOldestNumber, PYSNMP_MODULE_ID=saEuropeMessages, msgNewestNumber=msgNewestNumber, msgSubject=msgSubject, msgDetail=msgDetail, msgDetailPresent=msgDetailPresent, msgPhysicalEntity=msgPhysicalEntity, msgId=msgId, msgStatus=msgStatus, msgSubClassNbr=msgSubClassNbr, msgPhysicalGroup=msgPhysicalGroup, msgBehaviour=msgBehaviour, messageEntry=messageEntry, msgSequenceNumber=msgSequenceNumber, msgSeverity=msgSeverity, msgGenerationTime=msgGenerationTime, msgSourceName=msgSourceName, saEuropeMessages=saEuropeMessages, msgClass=msgClass, msgSubClass=msgSubClass, messagesModuleCompliance=messagesModuleCompliance, msgMaxSequenceNumber=msgMaxSequenceNumber, messageTable=messageTable, messagesObjectGroup=messagesObjectGroup)
