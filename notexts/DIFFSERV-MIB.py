#
# PySNMP MIB module DIFFSERV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source https://pysnmp.github.io:443/mibs/asn1/DIFFSERV-MIB
# Produced by pysmi-1.1.12 at Tue Dec  3 10:03:37 2024
# On host fv-az575-513 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
Dscp, DscpOrAny = mibBuilder.importSymbols("DIFFSERV-DSCP-TC", "Dscp", "DscpOrAny")
InterfaceIndexOrZero, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex")
InetPortNumber, InetAddressPrefixLength, InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddressPrefixLength", "InetAddressType", "InetAddress")
BurstSize, = mibBuilder.importSymbols("INTEGRATED-SERVICES-MIB", "BurstSize")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, Unsigned32, mib_2, iso, Bits, Counter64, zeroDotZero, TimeTicks, Gauge32, ModuleIdentity, Counter32, ObjectIdentity, NotificationType, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Unsigned32", "mib-2", "iso", "Bits", "Counter64", "zeroDotZero", "TimeTicks", "Gauge32", "ModuleIdentity", "Counter32", "ObjectIdentity", "NotificationType", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowPointer, StorageType, TextualConvention, DisplayString, RowStatus, AutonomousType = mibBuilder.importSymbols("SNMPv2-TC", "RowPointer", "StorageType", "TextualConvention", "DisplayString", "RowStatus", "AutonomousType")
diffServMib = ModuleIdentity((1, 3, 6, 1, 2, 1, 97))
diffServMib.setRevisions(('2002-02-07 00:00',))
if mibBuilder.loadTexts: diffServMib.setLastUpdated('200202070000Z')
if mibBuilder.loadTexts: diffServMib.setOrganization('IETF Differentiated Services WG')
diffServMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 1))
diffServMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 2))
diffServMIBAdmin = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 3))
class IndexInteger(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class IndexIntegerNextFree(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class IfDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

diffServDataPath = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 1, 1))
diffServDataPathTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 1, 1), )
if mibBuilder.loadTexts: diffServDataPathTable.setStatus('current')
diffServDataPathEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DIFFSERV-MIB", "diffServDataPathIfDirection"))
if mibBuilder.loadTexts: diffServDataPathEntry.setStatus('current')
diffServDataPathIfDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 1, 1, 1, 1), IfDirection())
if mibBuilder.loadTexts: diffServDataPathIfDirection.setStatus('current')
diffServDataPathStart = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 1, 1, 1, 2), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServDataPathStart.setStatus('current')
diffServDataPathStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 1, 1, 1, 3), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServDataPathStorage.setStatus('current')
diffServDataPathStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServDataPathStatus.setStatus('current')
diffServClassifier = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 1, 2))
diffServClfrNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 2, 1), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServClfrNextFree.setStatus('current')
diffServClfrTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 2, 2), )
if mibBuilder.loadTexts: diffServClfrTable.setStatus('current')
diffServClfrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 2, 2, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServClfrId"))
if mibBuilder.loadTexts: diffServClfrEntry.setStatus('current')
diffServClfrId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 2, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServClfrId.setStatus('current')
diffServClfrStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 2, 1, 2), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServClfrStorage.setStatus('current')
diffServClfrStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServClfrStatus.setStatus('current')
diffServClfrElementNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 2, 3), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServClfrElementNextFree.setStatus('current')
diffServClfrElementTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 2, 4), )
if mibBuilder.loadTexts: diffServClfrElementTable.setStatus('current')
diffServClfrElementEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 2, 4, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServClfrId"), (0, "DIFFSERV-MIB", "diffServClfrElementId"))
if mibBuilder.loadTexts: diffServClfrElementEntry.setStatus('current')
diffServClfrElementId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 4, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServClfrElementId.setStatus('current')
diffServClfrElementPrecedence = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServClfrElementPrecedence.setStatus('current')
diffServClfrElementNext = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 4, 1, 3), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServClfrElementNext.setStatus('current')
diffServClfrElementSpecific = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 4, 1, 4), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServClfrElementSpecific.setStatus('current')
diffServClfrElementStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 4, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServClfrElementStorage.setStatus('current')
diffServClfrElementStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServClfrElementStatus.setStatus('current')
diffServMultiFieldClfrNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 2, 5), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServMultiFieldClfrNextFree.setStatus('current')
diffServMultiFieldClfrTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 2, 6), )
if mibBuilder.loadTexts: diffServMultiFieldClfrTable.setStatus('current')
diffServMultiFieldClfrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServMultiFieldClfrId"))
if mibBuilder.loadTexts: diffServMultiFieldClfrEntry.setStatus('current')
diffServMultiFieldClfrId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServMultiFieldClfrId.setStatus('current')
diffServMultiFieldClfrAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrAddrType.setStatus('current')
diffServMultiFieldClfrDstAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrDstAddr.setStatus('current')
diffServMultiFieldClfrDstPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 4), InetAddressPrefixLength()).setUnits('bits').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrDstPrefixLength.setStatus('current')
diffServMultiFieldClfrSrcAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrSrcAddr.setStatus('current')
diffServMultiFieldClfrSrcPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 6), InetAddressPrefixLength()).setUnits('bits').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrSrcPrefixLength.setStatus('current')
diffServMultiFieldClfrDscp = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 7), DscpOrAny().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrDscp.setStatus('current')
diffServMultiFieldClfrFlowId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrFlowId.setStatus('current')
diffServMultiFieldClfrProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrProtocol.setStatus('current')
diffServMultiFieldClfrDstL4PortMin = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 10), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrDstL4PortMin.setStatus('current')
diffServMultiFieldClfrDstL4PortMax = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 11), InetPortNumber().clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrDstL4PortMax.setStatus('current')
diffServMultiFieldClfrSrcL4PortMin = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 12), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrSrcL4PortMin.setStatus('current')
diffServMultiFieldClfrSrcL4PortMax = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 13), InetPortNumber().clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrSrcL4PortMax.setStatus('current')
diffServMultiFieldClfrStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 14), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrStorage.setStatus('current')
diffServMultiFieldClfrStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 2, 6, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMultiFieldClfrStatus.setStatus('current')
diffServMeter = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 1, 3))
diffServMeterNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 3, 1), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServMeterNextFree.setStatus('current')
diffServMeterTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 3, 2), )
if mibBuilder.loadTexts: diffServMeterTable.setStatus('current')
diffServMeterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 3, 2, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServMeterId"))
if mibBuilder.loadTexts: diffServMeterEntry.setStatus('current')
diffServMeterId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 3, 2, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServMeterId.setStatus('current')
diffServMeterSucceedNext = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 3, 2, 1, 2), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMeterSucceedNext.setStatus('current')
diffServMeterFailNext = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 3, 2, 1, 3), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMeterFailNext.setStatus('current')
diffServMeterSpecific = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 3, 2, 1, 4), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMeterSpecific.setStatus('current')
diffServMeterStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 3, 2, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMeterStorage.setStatus('current')
diffServMeterStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 3, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMeterStatus.setStatus('current')
diffServTBParam = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 1, 4))
diffServTBParamNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 4, 1), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServTBParamNextFree.setStatus('current')
diffServTBParamTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 4, 2), )
if mibBuilder.loadTexts: diffServTBParamTable.setStatus('current')
diffServTBParamEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 4, 2, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServTBParamId"))
if mibBuilder.loadTexts: diffServTBParamEntry.setStatus('current')
diffServTBParamId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 4, 2, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServTBParamId.setStatus('current')
diffServTBParamType = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 4, 2, 1, 2), AutonomousType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServTBParamType.setStatus('current')
diffServTBParamRate = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 4, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServTBParamRate.setStatus('current')
diffServTBParamBurstSize = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 4, 2, 1, 4), BurstSize()).setUnits('Bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServTBParamBurstSize.setStatus('current')
diffServTBParamInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 4, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServTBParamInterval.setStatus('current')
diffServTBParamStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 4, 2, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServTBParamStorage.setStatus('current')
diffServTBParamStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 4, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServTBParamStatus.setStatus('current')
diffServTBMeters = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 3, 1))
diffServTBParamSimpleTokenBucket = ObjectIdentity((1, 3, 6, 1, 2, 1, 97, 3, 1, 1))
if mibBuilder.loadTexts: diffServTBParamSimpleTokenBucket.setStatus('current')
diffServTBParamAvgRate = ObjectIdentity((1, 3, 6, 1, 2, 1, 97, 3, 1, 2))
if mibBuilder.loadTexts: diffServTBParamAvgRate.setStatus('current')
diffServTBParamSrTCMBlind = ObjectIdentity((1, 3, 6, 1, 2, 1, 97, 3, 1, 3))
if mibBuilder.loadTexts: diffServTBParamSrTCMBlind.setStatus('current')
diffServTBParamSrTCMAware = ObjectIdentity((1, 3, 6, 1, 2, 1, 97, 3, 1, 4))
if mibBuilder.loadTexts: diffServTBParamSrTCMAware.setStatus('current')
diffServTBParamTrTCMBlind = ObjectIdentity((1, 3, 6, 1, 2, 1, 97, 3, 1, 5))
if mibBuilder.loadTexts: diffServTBParamTrTCMBlind.setStatus('current')
diffServTBParamTrTCMAware = ObjectIdentity((1, 3, 6, 1, 2, 1, 97, 3, 1, 6))
if mibBuilder.loadTexts: diffServTBParamTrTCMAware.setStatus('current')
diffServTBParamTswTCM = ObjectIdentity((1, 3, 6, 1, 2, 1, 97, 3, 1, 7))
if mibBuilder.loadTexts: diffServTBParamTswTCM.setStatus('current')
diffServAction = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 1, 5))
diffServActionNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 5, 1), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServActionNextFree.setStatus('current')
diffServActionTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 5, 2), )
if mibBuilder.loadTexts: diffServActionTable.setStatus('current')
diffServActionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 5, 2, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServActionId"))
if mibBuilder.loadTexts: diffServActionEntry.setStatus('current')
diffServActionId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 2, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServActionId.setStatus('current')
diffServActionInterface = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 2, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServActionInterface.setStatus('current')
diffServActionNext = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 2, 1, 3), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServActionNext.setStatus('current')
diffServActionSpecific = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 2, 1, 4), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServActionSpecific.setStatus('current')
diffServActionStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 2, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServActionStorage.setStatus('current')
diffServActionStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServActionStatus.setStatus('current')
diffServDscpMarkActTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 5, 3), )
if mibBuilder.loadTexts: diffServDscpMarkActTable.setStatus('current')
diffServDscpMarkActEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 5, 3, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServDscpMarkActDscp"))
if mibBuilder.loadTexts: diffServDscpMarkActEntry.setStatus('current')
diffServDscpMarkActDscp = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 3, 1, 1), Dscp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServDscpMarkActDscp.setStatus('current')
diffServCountActNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 5, 4), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServCountActNextFree.setStatus('current')
diffServCountActTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 5, 5), )
if mibBuilder.loadTexts: diffServCountActTable.setStatus('current')
diffServCountActEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 5, 5, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServCountActId"))
if mibBuilder.loadTexts: diffServCountActEntry.setStatus('current')
diffServCountActId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 5, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServCountActId.setStatus('current')
diffServCountActOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServCountActOctets.setStatus('current')
diffServCountActPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServCountActPkts.setStatus('current')
diffServCountActStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 5, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServCountActStorage.setStatus('current')
diffServCountActStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 5, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServCountActStatus.setStatus('current')
diffServAlgDrop = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 1, 6))
diffServAlgDropNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 6, 1), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServAlgDropNextFree.setStatus('current')
diffServAlgDropTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 6, 2), )
if mibBuilder.loadTexts: diffServAlgDropTable.setStatus('current')
diffServAlgDropEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServAlgDropId"))
if mibBuilder.loadTexts: diffServAlgDropEntry.setStatus('current')
diffServAlgDropId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServAlgDropId.setStatus('current')
diffServAlgDropType = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("tailDrop", 2), ("headDrop", 3), ("randomDrop", 4), ("alwaysDrop", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropType.setStatus('current')
diffServAlgDropNext = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 3), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropNext.setStatus('current')
diffServAlgDropQMeasure = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 4), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropQMeasure.setStatus('current')
diffServAlgDropQThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('Bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropQThreshold.setStatus('current')
diffServAlgDropSpecific = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 6), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropSpecific.setStatus('current')
diffServAlgDropOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServAlgDropOctets.setStatus('current')
diffServAlgDropPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServAlgDropPkts.setStatus('current')
diffServAlgRandomDropOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServAlgRandomDropOctets.setStatus('current')
diffServAlgRandomDropPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServAlgRandomDropPkts.setStatus('current')
diffServAlgDropStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 11), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropStorage.setStatus('current')
diffServAlgDropStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 2, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServAlgDropStatus.setStatus('current')
diffServRandomDropNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 6, 3), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServRandomDropNextFree.setStatus('current')
diffServRandomDropTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 6, 4), )
if mibBuilder.loadTexts: diffServRandomDropTable.setStatus('current')
diffServRandomDropEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 6, 4, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServRandomDropId"))
if mibBuilder.loadTexts: diffServRandomDropEntry.setStatus('current')
diffServRandomDropId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 4, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServRandomDropId.setStatus('current')
diffServRandomDropMinThreshBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropMinThreshBytes.setStatus('current')
diffServRandomDropMinThreshPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropMinThreshPkts.setStatus('current')
diffServRandomDropMaxThreshBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropMaxThreshBytes.setStatus('current')
diffServRandomDropMaxThreshPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropMaxThreshPkts.setStatus('current')
diffServRandomDropProbMax = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropProbMax.setStatus('current')
diffServRandomDropWeight = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropWeight.setStatus('current')
diffServRandomDropSamplingRate = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropSamplingRate.setStatus('current')
diffServRandomDropStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 4, 1, 9), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropStorage.setStatus('current')
diffServRandomDropStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 6, 4, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServRandomDropStatus.setStatus('current')
diffServQueue = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 1, 7))
diffServQNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 7, 1), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServQNextFree.setStatus('current')
diffServQTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 7, 2), )
if mibBuilder.loadTexts: diffServQTable.setStatus('current')
diffServQEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 7, 2, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServQId"))
if mibBuilder.loadTexts: diffServQEntry.setStatus('current')
diffServQId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 7, 2, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServQId.setStatus('current')
diffServQNext = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 7, 2, 1, 2), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQNext.setStatus('current')
diffServQMinRate = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 7, 2, 1, 3), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQMinRate.setStatus('current')
diffServQMaxRate = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 7, 2, 1, 4), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQMaxRate.setStatus('current')
diffServQStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 7, 2, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQStorage.setStatus('current')
diffServQStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 7, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServQStatus.setStatus('current')
diffServScheduler = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 1, 8))
diffServSchedulerNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 8, 1), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServSchedulerNextFree.setStatus('current')
diffServSchedulerTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 8, 2), )
if mibBuilder.loadTexts: diffServSchedulerTable.setStatus('current')
diffServSchedulerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 8, 2, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServSchedulerId"))
if mibBuilder.loadTexts: diffServSchedulerEntry.setStatus('current')
diffServSchedulerId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 2, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServSchedulerId.setStatus('current')
diffServSchedulerNext = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 2, 1, 2), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSchedulerNext.setStatus('current')
diffServSchedulerMethod = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 2, 1, 3), AutonomousType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSchedulerMethod.setStatus('current')
diffServSchedulerMinRate = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 2, 1, 4), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSchedulerMinRate.setStatus('current')
diffServSchedulerMaxRate = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 2, 1, 5), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSchedulerMaxRate.setStatus('current')
diffServSchedulerStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 2, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSchedulerStorage.setStatus('current')
diffServSchedulerStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServSchedulerStatus.setStatus('current')
diffServSchedulers = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 3, 2))
diffServSchedulerPriority = ObjectIdentity((1, 3, 6, 1, 2, 1, 97, 3, 2, 1))
if mibBuilder.loadTexts: diffServSchedulerPriority.setStatus('current')
diffServSchedulerWRR = ObjectIdentity((1, 3, 6, 1, 2, 1, 97, 3, 2, 2))
if mibBuilder.loadTexts: diffServSchedulerWRR.setStatus('current')
diffServSchedulerWFQ = ObjectIdentity((1, 3, 6, 1, 2, 1, 97, 3, 2, 3))
if mibBuilder.loadTexts: diffServSchedulerWFQ.setStatus('current')
diffServMinRateNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 8, 3), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServMinRateNextFree.setStatus('current')
diffServMinRateTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 8, 4), )
if mibBuilder.loadTexts: diffServMinRateTable.setStatus('current')
diffServMinRateEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 8, 4, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServMinRateId"))
if mibBuilder.loadTexts: diffServMinRateEntry.setStatus('current')
diffServMinRateId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 4, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServMinRateId.setStatus('current')
diffServMinRatePriority = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMinRatePriority.setStatus('current')
diffServMinRateAbsolute = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMinRateAbsolute.setStatus('current')
diffServMinRateRelative = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMinRateRelative.setStatus('current')
diffServMinRateStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 4, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMinRateStorage.setStatus('current')
diffServMinRateStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMinRateStatus.setStatus('current')
diffServMaxRateNextFree = MibScalar((1, 3, 6, 1, 2, 1, 97, 1, 8, 5), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diffServMaxRateNextFree.setStatus('current')
diffServMaxRateTable = MibTable((1, 3, 6, 1, 2, 1, 97, 1, 8, 6), )
if mibBuilder.loadTexts: diffServMaxRateTable.setStatus('current')
diffServMaxRateEntry = MibTableRow((1, 3, 6, 1, 2, 1, 97, 1, 8, 6, 1), ).setIndexNames((0, "DIFFSERV-MIB", "diffServMaxRateId"), (0, "DIFFSERV-MIB", "diffServMaxRateLevel"))
if mibBuilder.loadTexts: diffServMaxRateEntry.setStatus('current')
diffServMaxRateId = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 6, 1, 1), IndexInteger())
if mibBuilder.loadTexts: diffServMaxRateId.setStatus('current')
diffServMaxRateLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: diffServMaxRateLevel.setStatus('current')
diffServMaxRateAbsolute = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMaxRateAbsolute.setStatus('current')
diffServMaxRateRelative = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMaxRateRelative.setStatus('current')
diffServMaxRateThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 6, 1, 5), BurstSize()).setUnits('Bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMaxRateThreshold.setStatus('current')
diffServMaxRateStorage = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 6, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMaxRateStorage.setStatus('current')
diffServMaxRateStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 97, 1, 8, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: diffServMaxRateStatus.setStatus('current')
diffServMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 2, 1))
diffServMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 97, 2, 2))
diffServMIBFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 97, 2, 1, 1)).setObjects(("IF-MIB", "ifCounterDiscontinuityGroup"), ("DIFFSERV-MIB", "diffServMIBDataPathGroup"), ("DIFFSERV-MIB", "diffServMIBClfrGroup"), ("DIFFSERV-MIB", "diffServMIBClfrElementGroup"), ("DIFFSERV-MIB", "diffServMIBMultiFieldClfrGroup"), ("DIFFSERV-MIB", "diffServMIBActionGroup"), ("DIFFSERV-MIB", "diffServMIBAlgDropGroup"), ("DIFFSERV-MIB", "diffServMIBQGroup"), ("DIFFSERV-MIB", "diffServMIBSchedulerGroup"), ("DIFFSERV-MIB", "diffServMIBMaxRateGroup"), ("DIFFSERV-MIB", "diffServMIBMinRateGroup"), ("DIFFSERV-MIB", "diffServMIBCounterGroup"), ("DIFFSERV-MIB", "diffServMIBMeterGroup"), ("DIFFSERV-MIB", "diffServMIBTBParamGroup"), ("DIFFSERV-MIB", "diffServMIBDscpMarkActGroup"), ("DIFFSERV-MIB", "diffServMIBRandomDropGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBFullCompliance = diffServMIBFullCompliance.setStatus('current')
diffServMIBReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 97, 2, 1, 2)).setObjects(("IF-MIB", "ifCounterDiscontinuityGroup"), ("DIFFSERV-MIB", "diffServMIBDataPathGroup"), ("DIFFSERV-MIB", "diffServMIBClfrGroup"), ("DIFFSERV-MIB", "diffServMIBClfrElementGroup"), ("DIFFSERV-MIB", "diffServMIBMultiFieldClfrGroup"), ("DIFFSERV-MIB", "diffServMIBActionGroup"), ("DIFFSERV-MIB", "diffServMIBAlgDropGroup"), ("DIFFSERV-MIB", "diffServMIBQGroup"), ("DIFFSERV-MIB", "diffServMIBSchedulerGroup"), ("DIFFSERV-MIB", "diffServMIBMaxRateGroup"), ("DIFFSERV-MIB", "diffServMIBMinRateGroup"), ("DIFFSERV-MIB", "diffServMIBCounterGroup"), ("DIFFSERV-MIB", "diffServMIBMeterGroup"), ("DIFFSERV-MIB", "diffServMIBTBParamGroup"), ("DIFFSERV-MIB", "diffServMIBDscpMarkActGroup"), ("DIFFSERV-MIB", "diffServMIBRandomDropGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBReadOnlyCompliance = diffServMIBReadOnlyCompliance.setStatus('current')
diffServMIBDataPathGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 1)).setObjects(("DIFFSERV-MIB", "diffServDataPathStart"), ("DIFFSERV-MIB", "diffServDataPathStorage"), ("DIFFSERV-MIB", "diffServDataPathStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBDataPathGroup = diffServMIBDataPathGroup.setStatus('current')
diffServMIBClfrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 2)).setObjects(("DIFFSERV-MIB", "diffServClfrNextFree"), ("DIFFSERV-MIB", "diffServClfrStorage"), ("DIFFSERV-MIB", "diffServClfrStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBClfrGroup = diffServMIBClfrGroup.setStatus('current')
diffServMIBClfrElementGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 3)).setObjects(("DIFFSERV-MIB", "diffServClfrElementNextFree"), ("DIFFSERV-MIB", "diffServClfrElementPrecedence"), ("DIFFSERV-MIB", "diffServClfrElementNext"), ("DIFFSERV-MIB", "diffServClfrElementSpecific"), ("DIFFSERV-MIB", "diffServClfrElementStorage"), ("DIFFSERV-MIB", "diffServClfrElementStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBClfrElementGroup = diffServMIBClfrElementGroup.setStatus('current')
diffServMIBMultiFieldClfrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 4)).setObjects(("DIFFSERV-MIB", "diffServMultiFieldClfrNextFree"), ("DIFFSERV-MIB", "diffServMultiFieldClfrAddrType"), ("DIFFSERV-MIB", "diffServMultiFieldClfrDstAddr"), ("DIFFSERV-MIB", "diffServMultiFieldClfrDstPrefixLength"), ("DIFFSERV-MIB", "diffServMultiFieldClfrFlowId"), ("DIFFSERV-MIB", "diffServMultiFieldClfrSrcAddr"), ("DIFFSERV-MIB", "diffServMultiFieldClfrSrcPrefixLength"), ("DIFFSERV-MIB", "diffServMultiFieldClfrDscp"), ("DIFFSERV-MIB", "diffServMultiFieldClfrProtocol"), ("DIFFSERV-MIB", "diffServMultiFieldClfrDstL4PortMin"), ("DIFFSERV-MIB", "diffServMultiFieldClfrDstL4PortMax"), ("DIFFSERV-MIB", "diffServMultiFieldClfrSrcL4PortMin"), ("DIFFSERV-MIB", "diffServMultiFieldClfrSrcL4PortMax"), ("DIFFSERV-MIB", "diffServMultiFieldClfrStorage"), ("DIFFSERV-MIB", "diffServMultiFieldClfrStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBMultiFieldClfrGroup = diffServMIBMultiFieldClfrGroup.setStatus('current')
diffServMIBMeterGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 5)).setObjects(("DIFFSERV-MIB", "diffServMeterNextFree"), ("DIFFSERV-MIB", "diffServMeterSucceedNext"), ("DIFFSERV-MIB", "diffServMeterFailNext"), ("DIFFSERV-MIB", "diffServMeterSpecific"), ("DIFFSERV-MIB", "diffServMeterStorage"), ("DIFFSERV-MIB", "diffServMeterStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBMeterGroup = diffServMIBMeterGroup.setStatus('current')
diffServMIBTBParamGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 6)).setObjects(("DIFFSERV-MIB", "diffServTBParamNextFree"), ("DIFFSERV-MIB", "diffServTBParamType"), ("DIFFSERV-MIB", "diffServTBParamRate"), ("DIFFSERV-MIB", "diffServTBParamBurstSize"), ("DIFFSERV-MIB", "diffServTBParamInterval"), ("DIFFSERV-MIB", "diffServTBParamStorage"), ("DIFFSERV-MIB", "diffServTBParamStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBTBParamGroup = diffServMIBTBParamGroup.setStatus('current')
diffServMIBActionGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 7)).setObjects(("DIFFSERV-MIB", "diffServActionNextFree"), ("DIFFSERV-MIB", "diffServActionNext"), ("DIFFSERV-MIB", "diffServActionSpecific"), ("DIFFSERV-MIB", "diffServActionStorage"), ("DIFFSERV-MIB", "diffServActionInterface"), ("DIFFSERV-MIB", "diffServActionStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBActionGroup = diffServMIBActionGroup.setStatus('current')
diffServMIBDscpMarkActGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 8)).setObjects(("DIFFSERV-MIB", "diffServDscpMarkActDscp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBDscpMarkActGroup = diffServMIBDscpMarkActGroup.setStatus('current')
diffServMIBCounterGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 9)).setObjects(("DIFFSERV-MIB", "diffServCountActOctets"), ("DIFFSERV-MIB", "diffServCountActPkts"), ("DIFFSERV-MIB", "diffServAlgDropOctets"), ("DIFFSERV-MIB", "diffServAlgDropPkts"), ("DIFFSERV-MIB", "diffServAlgRandomDropOctets"), ("DIFFSERV-MIB", "diffServAlgRandomDropPkts"), ("DIFFSERV-MIB", "diffServCountActStorage"), ("DIFFSERV-MIB", "diffServCountActStatus"), ("DIFFSERV-MIB", "diffServCountActNextFree"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBCounterGroup = diffServMIBCounterGroup.setStatus('current')
diffServMIBAlgDropGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 10)).setObjects(("DIFFSERV-MIB", "diffServAlgDropNextFree"), ("DIFFSERV-MIB", "diffServAlgDropType"), ("DIFFSERV-MIB", "diffServAlgDropNext"), ("DIFFSERV-MIB", "diffServAlgDropQMeasure"), ("DIFFSERV-MIB", "diffServAlgDropQThreshold"), ("DIFFSERV-MIB", "diffServAlgDropSpecific"), ("DIFFSERV-MIB", "diffServAlgDropStorage"), ("DIFFSERV-MIB", "diffServAlgDropStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBAlgDropGroup = diffServMIBAlgDropGroup.setStatus('current')
diffServMIBRandomDropGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 11)).setObjects(("DIFFSERV-MIB", "diffServRandomDropNextFree"), ("DIFFSERV-MIB", "diffServRandomDropMinThreshBytes"), ("DIFFSERV-MIB", "diffServRandomDropMinThreshPkts"), ("DIFFSERV-MIB", "diffServRandomDropMaxThreshBytes"), ("DIFFSERV-MIB", "diffServRandomDropMaxThreshPkts"), ("DIFFSERV-MIB", "diffServRandomDropProbMax"), ("DIFFSERV-MIB", "diffServRandomDropWeight"), ("DIFFSERV-MIB", "diffServRandomDropSamplingRate"), ("DIFFSERV-MIB", "diffServRandomDropStorage"), ("DIFFSERV-MIB", "diffServRandomDropStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBRandomDropGroup = diffServMIBRandomDropGroup.setStatus('current')
diffServMIBQGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 12)).setObjects(("DIFFSERV-MIB", "diffServQNextFree"), ("DIFFSERV-MIB", "diffServQNext"), ("DIFFSERV-MIB", "diffServQMinRate"), ("DIFFSERV-MIB", "diffServQMaxRate"), ("DIFFSERV-MIB", "diffServQStorage"), ("DIFFSERV-MIB", "diffServQStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBQGroup = diffServMIBQGroup.setStatus('current')
diffServMIBSchedulerGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 13)).setObjects(("DIFFSERV-MIB", "diffServSchedulerNextFree"), ("DIFFSERV-MIB", "diffServSchedulerNext"), ("DIFFSERV-MIB", "diffServSchedulerMethod"), ("DIFFSERV-MIB", "diffServSchedulerMinRate"), ("DIFFSERV-MIB", "diffServSchedulerMaxRate"), ("DIFFSERV-MIB", "diffServSchedulerStorage"), ("DIFFSERV-MIB", "diffServSchedulerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBSchedulerGroup = diffServMIBSchedulerGroup.setStatus('current')
diffServMIBMinRateGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 14)).setObjects(("DIFFSERV-MIB", "diffServMinRateNextFree"), ("DIFFSERV-MIB", "diffServMinRatePriority"), ("DIFFSERV-MIB", "diffServMinRateAbsolute"), ("DIFFSERV-MIB", "diffServMinRateRelative"), ("DIFFSERV-MIB", "diffServMinRateStorage"), ("DIFFSERV-MIB", "diffServMinRateStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBMinRateGroup = diffServMIBMinRateGroup.setStatus('current')
diffServMIBMaxRateGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 97, 2, 2, 15)).setObjects(("DIFFSERV-MIB", "diffServMaxRateNextFree"), ("DIFFSERV-MIB", "diffServMaxRateAbsolute"), ("DIFFSERV-MIB", "diffServMaxRateRelative"), ("DIFFSERV-MIB", "diffServMaxRateThreshold"), ("DIFFSERV-MIB", "diffServMaxRateStorage"), ("DIFFSERV-MIB", "diffServMaxRateStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    diffServMIBMaxRateGroup = diffServMIBMaxRateGroup.setStatus('current')
mibBuilder.exportSymbols("DIFFSERV-MIB", diffServTBParamStorage=diffServTBParamStorage, diffServSchedulerWRR=diffServSchedulerWRR, diffServAlgDropNextFree=diffServAlgDropNextFree, diffServClassifier=diffServClassifier, diffServTBParamNextFree=diffServTBParamNextFree, diffServTBParamTswTCM=diffServTBParamTswTCM, diffServRandomDropEntry=diffServRandomDropEntry, diffServSchedulerNextFree=diffServSchedulerNextFree, diffServMinRateStorage=diffServMinRateStorage, diffServMultiFieldClfrDstAddr=diffServMultiFieldClfrDstAddr, diffServMultiFieldClfrDstL4PortMin=diffServMultiFieldClfrDstL4PortMin, diffServRandomDropStatus=diffServRandomDropStatus, diffServCountActTable=diffServCountActTable, diffServMaxRateNextFree=diffServMaxRateNextFree, diffServDataPathTable=diffServDataPathTable, diffServRandomDropMaxThreshPkts=diffServRandomDropMaxThreshPkts, diffServTBParamTrTCMBlind=diffServTBParamTrTCMBlind, diffServAlgDropEntry=diffServAlgDropEntry, diffServMeterSpecific=diffServMeterSpecific, diffServClfrElementId=diffServClfrElementId, diffServDataPathStorage=diffServDataPathStorage, diffServClfrElementSpecific=diffServClfrElementSpecific, diffServDataPathEntry=diffServDataPathEntry, diffServMeterNextFree=diffServMeterNextFree, diffServAlgDropId=diffServAlgDropId, diffServMultiFieldClfrId=diffServMultiFieldClfrId, diffServMIBTBParamGroup=diffServMIBTBParamGroup, diffServRandomDropMaxThreshBytes=diffServRandomDropMaxThreshBytes, diffServMinRateTable=diffServMinRateTable, diffServMaxRateThreshold=diffServMaxRateThreshold, diffServClfrElementTable=diffServClfrElementTable, diffServMIBMeterGroup=diffServMIBMeterGroup, diffServTBParamSrTCMBlind=diffServTBParamSrTCMBlind, diffServDscpMarkActTable=diffServDscpMarkActTable, diffServAlgDrop=diffServAlgDrop, diffServMinRateStatus=diffServMinRateStatus, diffServMIBAlgDropGroup=diffServMIBAlgDropGroup, diffServDscpMarkActDscp=diffServDscpMarkActDscp, diffServClfrElementPrecedence=diffServClfrElementPrecedence, diffServTBParamSrTCMAware=diffServTBParamSrTCMAware, diffServDataPath=diffServDataPath, diffServClfrElementNext=diffServClfrElementNext, diffServMultiFieldClfrSrcPrefixLength=diffServMultiFieldClfrSrcPrefixLength, diffServMIBRandomDropGroup=diffServMIBRandomDropGroup, diffServSchedulerTable=diffServSchedulerTable, diffServRandomDropStorage=diffServRandomDropStorage, diffServTBParamRate=diffServTBParamRate, diffServMaxRateLevel=diffServMaxRateLevel, diffServTBParamAvgRate=diffServTBParamAvgRate, diffServMIBDscpMarkActGroup=diffServMIBDscpMarkActGroup, diffServRandomDropTable=diffServRandomDropTable, diffServMultiFieldClfrProtocol=diffServMultiFieldClfrProtocol, diffServMinRateAbsolute=diffServMinRateAbsolute, diffServMinRateId=diffServMinRateId, diffServMeterFailNext=diffServMeterFailNext, diffServSchedulers=diffServSchedulers, diffServMultiFieldClfrEntry=diffServMultiFieldClfrEntry, diffServMIBObjects=diffServMIBObjects, diffServMinRateEntry=diffServMinRateEntry, diffServAlgDropQMeasure=diffServAlgDropQMeasure, diffServSchedulerNext=diffServSchedulerNext, diffServMeter=diffServMeter, diffServQueue=diffServQueue, diffServMIBConformance=diffServMIBConformance, diffServClfrEntry=diffServClfrEntry, diffServCountActId=diffServCountActId, diffServCountActStatus=diffServCountActStatus, diffServAlgDropQThreshold=diffServAlgDropQThreshold, diffServSchedulerId=diffServSchedulerId, diffServMaxRateId=diffServMaxRateId, diffServMultiFieldClfrDstL4PortMax=diffServMultiFieldClfrDstL4PortMax, diffServActionStatus=diffServActionStatus, diffServMIBGroups=diffServMIBGroups, diffServMIBDataPathGroup=diffServMIBDataPathGroup, diffServQTable=diffServQTable, diffServMaxRateStorage=diffServMaxRateStorage, diffServMultiFieldClfrTable=diffServMultiFieldClfrTable, diffServCountActNextFree=diffServCountActNextFree, diffServMIBCompliances=diffServMIBCompliances, diffServMIBCounterGroup=diffServMIBCounterGroup, diffServAlgDropTable=diffServAlgDropTable, diffServMinRateRelative=diffServMinRateRelative, diffServRandomDropNextFree=diffServRandomDropNextFree, diffServMIBFullCompliance=diffServMIBFullCompliance, diffServRandomDropId=diffServRandomDropId, diffServMIBQGroup=diffServMIBQGroup, diffServTBParamTrTCMAware=diffServTBParamTrTCMAware, diffServAlgDropOctets=diffServAlgDropOctets, diffServMaxRateRelative=diffServMaxRateRelative, diffServTBParamSimpleTokenBucket=diffServTBParamSimpleTokenBucket, diffServClfrStorage=diffServClfrStorage, diffServMultiFieldClfrSrcL4PortMax=diffServMultiFieldClfrSrcL4PortMax, diffServQStorage=diffServQStorage, diffServMinRateNextFree=diffServMinRateNextFree, diffServSchedulerMinRate=diffServSchedulerMinRate, diffServRandomDropMinThreshBytes=diffServRandomDropMinThreshBytes, diffServAlgDropStorage=diffServAlgDropStorage, diffServClfrNextFree=diffServClfrNextFree, diffServRandomDropSamplingRate=diffServRandomDropSamplingRate, diffServSchedulerStorage=diffServSchedulerStorage, diffServMeterStatus=diffServMeterStatus, diffServActionTable=diffServActionTable, diffServTBParamTable=diffServTBParamTable, diffServQMaxRate=diffServQMaxRate, diffServMeterTable=diffServMeterTable, diffServSchedulerMethod=diffServSchedulerMethod, diffServMaxRateStatus=diffServMaxRateStatus, diffServCountActOctets=diffServCountActOctets, diffServDataPathStatus=diffServDataPathStatus, diffServCountActPkts=diffServCountActPkts, diffServAlgRandomDropOctets=diffServAlgRandomDropOctets, diffServMIBAdmin=diffServMIBAdmin, PYSNMP_MODULE_ID=diffServMib, diffServActionEntry=diffServActionEntry, diffServMultiFieldClfrDstPrefixLength=diffServMultiFieldClfrDstPrefixLength, diffServTBParamType=diffServTBParamType, IndexInteger=IndexInteger, diffServQEntry=diffServQEntry, diffServActionNext=diffServActionNext, diffServMIBClfrGroup=diffServMIBClfrGroup, diffServClfrElementStorage=diffServClfrElementStorage, diffServQStatus=diffServQStatus, diffServMeterStorage=diffServMeterStorage, diffServMIBMultiFieldClfrGroup=diffServMIBMultiFieldClfrGroup, diffServActionInterface=diffServActionInterface, diffServMultiFieldClfrStorage=diffServMultiFieldClfrStorage, diffServActionId=diffServActionId, diffServSchedulerEntry=diffServSchedulerEntry, diffServActionSpecific=diffServActionSpecific, diffServMeterId=diffServMeterId, diffServMultiFieldClfrStatus=diffServMultiFieldClfrStatus, diffServMultiFieldClfrNextFree=diffServMultiFieldClfrNextFree, diffServSchedulerStatus=diffServSchedulerStatus, diffServMIBMinRateGroup=diffServMIBMinRateGroup, diffServSchedulerPriority=diffServSchedulerPriority, diffServQId=diffServQId, diffServMaxRateAbsolute=diffServMaxRateAbsolute, diffServClfrId=diffServClfrId, diffServClfrElementNextFree=diffServClfrElementNextFree, diffServTBParamInterval=diffServTBParamInterval, diffServMultiFieldClfrAddrType=diffServMultiFieldClfrAddrType, diffServMIBMaxRateGroup=diffServMIBMaxRateGroup, diffServAlgDropPkts=diffServAlgDropPkts, diffServQMinRate=diffServQMinRate, diffServMultiFieldClfrFlowId=diffServMultiFieldClfrFlowId, diffServMaxRateTable=diffServMaxRateTable, diffServMIBReadOnlyCompliance=diffServMIBReadOnlyCompliance, diffServMinRatePriority=diffServMinRatePriority, IfDirection=IfDirection, diffServSchedulerWFQ=diffServSchedulerWFQ, diffServMultiFieldClfrDscp=diffServMultiFieldClfrDscp, diffServTBParamEntry=diffServTBParamEntry, diffServTBParamBurstSize=diffServTBParamBurstSize, diffServAction=diffServAction, diffServMultiFieldClfrSrcL4PortMin=diffServMultiFieldClfrSrcL4PortMin, diffServMeterEntry=diffServMeterEntry, diffServAlgRandomDropPkts=diffServAlgRandomDropPkts, diffServQNextFree=diffServQNextFree, diffServClfrTable=diffServClfrTable, diffServDscpMarkActEntry=diffServDscpMarkActEntry, diffServActionNextFree=diffServActionNextFree, diffServAlgDropNext=diffServAlgDropNext, diffServSchedulerMaxRate=diffServSchedulerMaxRate, diffServClfrElementStatus=diffServClfrElementStatus, diffServAlgDropType=diffServAlgDropType, diffServTBParamStatus=diffServTBParamStatus, diffServClfrStatus=diffServClfrStatus, diffServMultiFieldClfrSrcAddr=diffServMultiFieldClfrSrcAddr, diffServActionStorage=diffServActionStorage, diffServTBMeters=diffServTBMeters, diffServRandomDropMinThreshPkts=diffServRandomDropMinThreshPkts, diffServDataPathStart=diffServDataPathStart, diffServTBParamId=diffServTBParamId, diffServQNext=diffServQNext, diffServDataPathIfDirection=diffServDataPathIfDirection, diffServMIBSchedulerGroup=diffServMIBSchedulerGroup, diffServRandomDropProbMax=diffServRandomDropProbMax, diffServAlgDropStatus=diffServAlgDropStatus, diffServRandomDropWeight=diffServRandomDropWeight, diffServMaxRateEntry=diffServMaxRateEntry, IndexIntegerNextFree=IndexIntegerNextFree, diffServCountActStorage=diffServCountActStorage, diffServMeterSucceedNext=diffServMeterSucceedNext, diffServClfrElementEntry=diffServClfrElementEntry, diffServCountActEntry=diffServCountActEntry, diffServAlgDropSpecific=diffServAlgDropSpecific, diffServScheduler=diffServScheduler, diffServMib=diffServMib, diffServTBParam=diffServTBParam, diffServMIBClfrElementGroup=diffServMIBClfrElementGroup, diffServMIBActionGroup=diffServMIBActionGroup)
