#
# PySNMP MIB module AVIAT-G826-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/aviat-wtm/AVIAT-G826-MIB
# Produced by pysmi-1.1.12 at Wed May 29 10:19:14 2024
# On host fv-az1984-402 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, Integer32, Bits, Counter32, NotificationType, Counter64, IpAddress, Unsigned32, iso, Gauge32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "Integer32", "Bits", "Counter32", "NotificationType", "Counter64", "IpAddress", "Unsigned32", "iso", "Gauge32", "ModuleIdentity")
DateAndTime, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "DisplayString", "TextualConvention")
aviatModules, = mibBuilder.importSymbols("STXN-GLOBALREGISTER-MIB", "aviatModules")
aviatG826Module = ModuleIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 14))
aviatG826Module.setRevisions(('2014-01-21 01:57',))
if mibBuilder.loadTexts: aviatG826Module.setLastUpdated('201401210157Z')
if mibBuilder.loadTexts: aviatG826Module.setOrganization('Aviat Networks')
class AviatPackedG826Data(TextualConvention, OctetString):
    status = 'current'
    displayHint = '55x'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(47, 47), )
aviatG826Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 14, 1))
aviatG826Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 14, 1, 1))
aviatG826Compliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 14, 1, 2))
aviatG826MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2))
aviatG826ControlTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 1), )
if mibBuilder.loadTexts: aviatG826ControlTable.setStatus('current')
aviatG826ControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: aviatG826ControlEntry.setStatus('current')
aviatG826LastQHourChangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826LastQHourChangeIndex.setStatus('current')
aviatG826LastDayChangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826LastDayChangeIndex.setStatus('current')
aviatG826Reset = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("all", 2), ("realtime", 3), ("quarterhour", 4), ("daily", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aviatG826Reset.setStatus('current')
aviatG826PerformTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2), )
if mibBuilder.loadTexts: aviatG826PerformTable.setStatus('current')
aviatG826PerformEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: aviatG826PerformEntry.setStatus('current')
aviatG826ErroredBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826ErroredBlocks.setStatus('current')
aviatG826ErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826ErroredSeconds.setStatus('current')
aviatG826ErroredSecondsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826ErroredSecondsRatio.setStatus('current')
aviatG826SeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826SeverelyErroredSeconds.setStatus('current')
aviatG826SeverelyErroredSecsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826SeverelyErroredSecsRatio.setStatus('current')
aviatG826BackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826BackgroundBlockErrors.setStatus('current')
aviatG826BackgroundBlockErrorsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826BackgroundBlockErrorsRatio.setStatus('current')
aviatG826AvailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826AvailableSeconds.setStatus('current')
aviatG826UnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826UnavailableSeconds.setStatus('current')
aviatG826PackedData = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 2, 1, 12), AviatPackedG826Data()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826PackedData.setStatus('current')
aviatG826QuarterHourTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3), )
if mibBuilder.loadTexts: aviatG826QuarterHourTable.setStatus('current')
aviatG826QuarterHourEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "AVIAT-G826-MIB", "aviatG826QHourIndex"), (0, "AVIAT-G826-MIB", "aviatG826QHourPeriod"))
if mibBuilder.loadTexts: aviatG826QuarterHourEntry.setStatus('current')
aviatG826QHourIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 1), Gauge32())
if mibBuilder.loadTexts: aviatG826QHourIndex.setStatus('current')
aviatG826QHourPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 2), Gauge32())
if mibBuilder.loadTexts: aviatG826QHourPeriod.setStatus('current')
aviatG826QHourDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826QHourDateAndTime.setStatus('current')
aviatG826QHourErroredBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826QHourErroredBlocks.setStatus('current')
aviatG826QHourErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826QHourErroredSeconds.setStatus('current')
aviatG826QHourErroredSecondsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826QHourErroredSecondsRatio.setStatus('current')
aviatG826QHourSeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826QHourSeverelyErroredSeconds.setStatus('current')
aviatG826QHourSeverelyErroredSecsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826QHourSeverelyErroredSecsRatio.setStatus('current')
aviatG826QHourBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826QHourBackgroundBlockErrors.setStatus('current')
aviatG826QHourBackgroundBlockErrorsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826QHourBackgroundBlockErrorsRatio.setStatus('current')
aviatG826QHourAvailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826QHourAvailableSeconds.setStatus('current')
aviatG826QHourUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826QHourUnavailableSeconds.setStatus('current')
aviatG826QHourInvalidEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 3, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826QHourInvalidEntry.setStatus('current')
aviatG826DayTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4), )
if mibBuilder.loadTexts: aviatG826DayTable.setStatus('current')
aviatG826DayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "AVIAT-G826-MIB", "aviatG826DayIndex"), (0, "AVIAT-G826-MIB", "aviatG826DayPeriod"))
if mibBuilder.loadTexts: aviatG826DayEntry.setStatus('current')
aviatG826DayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 1), Gauge32())
if mibBuilder.loadTexts: aviatG826DayIndex.setStatus('current')
aviatG826DayPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 2), Gauge32())
if mibBuilder.loadTexts: aviatG826DayPeriod.setStatus('current')
aviatG826DayDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826DayDateAndTime.setStatus('current')
aviatG826DayErroredBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826DayErroredBlocks.setStatus('current')
aviatG826DayErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826DayErroredSeconds.setStatus('current')
aviatG826DayErroredSecondsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826DayErroredSecondsRatio.setStatus('current')
aviatG826DaySeverelyErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826DaySeverelyErroredSeconds.setStatus('current')
aviatG826DaySeverelyErroredSecsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826DaySeverelyErroredSecsRatio.setStatus('current')
aviatG826DayBackgroundBlockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826DayBackgroundBlockErrors.setStatus('current')
aviatG826DayBackgroundBlockErrorsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826DayBackgroundBlockErrorsRatio.setStatus('current')
aviatG826DayAvailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826DayAvailableSeconds.setStatus('current')
aviatG826DayUnavailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826DayUnavailableSeconds.setStatus('current')
aviatG826DayInvalidEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 14, 2, 4, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatG826DayInvalidEntry.setStatus('current')
aviatG826ObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2509, 9, 14, 1, 1, 1)).setObjects(("AVIAT-G826-MIB", "aviatG826LastQHourChangeIndex"), ("AVIAT-G826-MIB", "aviatG826LastDayChangeIndex"), ("AVIAT-G826-MIB", "aviatG826Reset"), ("AVIAT-G826-MIB", "aviatG826ErroredBlocks"), ("AVIAT-G826-MIB", "aviatG826ErroredSeconds"), ("AVIAT-G826-MIB", "aviatG826ErroredSecondsRatio"), ("AVIAT-G826-MIB", "aviatG826SeverelyErroredSeconds"), ("AVIAT-G826-MIB", "aviatG826SeverelyErroredSecsRatio"), ("AVIAT-G826-MIB", "aviatG826BackgroundBlockErrors"), ("AVIAT-G826-MIB", "aviatG826BackgroundBlockErrorsRatio"), ("AVIAT-G826-MIB", "aviatG826AvailableSeconds"), ("AVIAT-G826-MIB", "aviatG826UnavailableSeconds"), ("AVIAT-G826-MIB", "aviatG826PackedData"), ("AVIAT-G826-MIB", "aviatG826QHourDateAndTime"), ("AVIAT-G826-MIB", "aviatG826QHourErroredBlocks"), ("AVIAT-G826-MIB", "aviatG826QHourErroredSeconds"), ("AVIAT-G826-MIB", "aviatG826QHourErroredSecondsRatio"), ("AVIAT-G826-MIB", "aviatG826QHourSeverelyErroredSeconds"), ("AVIAT-G826-MIB", "aviatG826QHourSeverelyErroredSecsRatio"), ("AVIAT-G826-MIB", "aviatG826QHourBackgroundBlockErrors"), ("AVIAT-G826-MIB", "aviatG826QHourBackgroundBlockErrorsRatio"), ("AVIAT-G826-MIB", "aviatG826QHourAvailableSeconds"), ("AVIAT-G826-MIB", "aviatG826QHourUnavailableSeconds"), ("AVIAT-G826-MIB", "aviatG826QHourInvalidEntry"), ("AVIAT-G826-MIB", "aviatG826DayDateAndTime"), ("AVIAT-G826-MIB", "aviatG826DayErroredBlocks"), ("AVIAT-G826-MIB", "aviatG826DayErroredSeconds"), ("AVIAT-G826-MIB", "aviatG826DayErroredSecondsRatio"), ("AVIAT-G826-MIB", "aviatG826DaySeverelyErroredSeconds"), ("AVIAT-G826-MIB", "aviatG826DaySeverelyErroredSecsRatio"), ("AVIAT-G826-MIB", "aviatG826DayBackgroundBlockErrors"), ("AVIAT-G826-MIB", "aviatG826DayBackgroundBlockErrorsRatio"), ("AVIAT-G826-MIB", "aviatG826DayAvailableSeconds"), ("AVIAT-G826-MIB", "aviatG826DayUnavailableSeconds"), ("AVIAT-G826-MIB", "aviatG826DayInvalidEntry"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviatG826ObjectGroup = aviatG826ObjectGroup.setStatus('current')
aviatG826ComplV1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 2509, 9, 14, 1, 2, 1)).setObjects(("AVIAT-G826-MIB", "aviatG826ObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviatG826ComplV1 = aviatG826ComplV1.setStatus('current')
mibBuilder.exportSymbols("AVIAT-G826-MIB", aviatG826QHourAvailableSeconds=aviatG826QHourAvailableSeconds, aviatG826Conformance=aviatG826Conformance, aviatG826QHourPeriod=aviatG826QHourPeriod, PYSNMP_MODULE_ID=aviatG826Module, aviatG826DayErroredSecondsRatio=aviatG826DayErroredSecondsRatio, aviatG826DayBackgroundBlockErrors=aviatG826DayBackgroundBlockErrors, aviatG826QHourErroredSeconds=aviatG826QHourErroredSeconds, aviatG826Compliance=aviatG826Compliance, aviatG826QHourSeverelyErroredSeconds=aviatG826QHourSeverelyErroredSeconds, aviatG826ControlTable=aviatG826ControlTable, aviatG826DayErroredBlocks=aviatG826DayErroredBlocks, aviatG826Module=aviatG826Module, AviatPackedG826Data=AviatPackedG826Data, aviatG826QuarterHourTable=aviatG826QuarterHourTable, aviatG826PackedData=aviatG826PackedData, aviatG826ErroredSeconds=aviatG826ErroredSeconds, aviatG826DayPeriod=aviatG826DayPeriod, aviatG826Groups=aviatG826Groups, aviatG826DayIndex=aviatG826DayIndex, aviatG826QHourInvalidEntry=aviatG826QHourInvalidEntry, aviatG826DayEntry=aviatG826DayEntry, aviatG826DayBackgroundBlockErrorsRatio=aviatG826DayBackgroundBlockErrorsRatio, aviatG826LastDayChangeIndex=aviatG826LastDayChangeIndex, aviatG826BackgroundBlockErrorsRatio=aviatG826BackgroundBlockErrorsRatio, aviatG826DayTable=aviatG826DayTable, aviatG826DayAvailableSeconds=aviatG826DayAvailableSeconds, aviatG826LastQHourChangeIndex=aviatG826LastQHourChangeIndex, aviatG826QHourIndex=aviatG826QHourIndex, aviatG826QHourBackgroundBlockErrorsRatio=aviatG826QHourBackgroundBlockErrorsRatio, aviatG826ComplV1=aviatG826ComplV1, aviatG826ControlEntry=aviatG826ControlEntry, aviatG826MIBObjects=aviatG826MIBObjects, aviatG826ObjectGroup=aviatG826ObjectGroup, aviatG826DaySeverelyErroredSecsRatio=aviatG826DaySeverelyErroredSecsRatio, aviatG826DayUnavailableSeconds=aviatG826DayUnavailableSeconds, aviatG826SeverelyErroredSecsRatio=aviatG826SeverelyErroredSecsRatio, aviatG826QHourErroredBlocks=aviatG826QHourErroredBlocks, aviatG826PerformTable=aviatG826PerformTable, aviatG826ErroredBlocks=aviatG826ErroredBlocks, aviatG826SeverelyErroredSeconds=aviatG826SeverelyErroredSeconds, aviatG826QHourErroredSecondsRatio=aviatG826QHourErroredSecondsRatio, aviatG826ErroredSecondsRatio=aviatG826ErroredSecondsRatio, aviatG826PerformEntry=aviatG826PerformEntry, aviatG826QHourSeverelyErroredSecsRatio=aviatG826QHourSeverelyErroredSecsRatio, aviatG826AvailableSeconds=aviatG826AvailableSeconds, aviatG826DayErroredSeconds=aviatG826DayErroredSeconds, aviatG826DaySeverelyErroredSeconds=aviatG826DaySeverelyErroredSeconds, aviatG826DayDateAndTime=aviatG826DayDateAndTime, aviatG826QHourDateAndTime=aviatG826QHourDateAndTime, aviatG826Reset=aviatG826Reset, aviatG826QHourBackgroundBlockErrors=aviatG826QHourBackgroundBlockErrors, aviatG826QHourUnavailableSeconds=aviatG826QHourUnavailableSeconds, aviatG826DayInvalidEntry=aviatG826DayInvalidEntry, aviatG826BackgroundBlockErrors=aviatG826BackgroundBlockErrors, aviatG826QuarterHourEntry=aviatG826QuarterHourEntry, aviatG826UnavailableSeconds=aviatG826UnavailableSeconds)
