#
# PySNMP MIB module BTI8xx-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/bti/BTI8xx-SYSTEM-MIB
# Produced by pysmi-1.1.12 at Tue May 28 13:38:23 2024
# On host fv-az768-311 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
mainSystem, = mibBuilder.importSymbols("BTI8xx-TC-MIB", "mainSystem")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
PerfCurrentCount, PerfIntervalCount, PerfTotalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfCurrentCount", "PerfIntervalCount", "PerfTotalCount")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
NotificationType, ObjectIdentity, Counter64, Unsigned32, IpAddress, MibIdentifier, Counter32, ModuleIdentity, Bits, Gauge32, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Counter64", "Unsigned32", "IpAddress", "MibIdentifier", "Counter32", "ModuleIdentity", "Bits", "Gauge32", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
TruthValue, RowStatus, DisplayString, TextualConvention, DateAndTime, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TextualConvention", "DateAndTime", "MacAddress")
systemConfig = ModuleIdentity((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1))
systemConfig.setRevisions(('2015-11-30 12:00', '2015-11-20 12:00', '2015-09-07 13:00', '2014-10-29 12:00', '2014-08-11 12:00', '2014-07-15 12:00', '2014-06-18 12:00', '2013-12-27 12:00',))
if mibBuilder.loadTexts: systemConfig.setLastUpdated('201511301200Z')
if mibBuilder.loadTexts: systemConfig.setOrganization('Actus Networks Ltd.')
systemManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1))
accessInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 2))
consoleInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 3))
systemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 1))
configAndImageMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2))
miscellaneous = MibIdentifier((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3))
mgmtVlanConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 5))
systemName = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemName.setStatus('current')
autoLogoutTime = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 35791))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoLogoutTime.setStatus('current')
systemUpTime = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemUpTime.setStatus('current')
systemHWVersion = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHWVersion.setStatus('current')
systemSWVersion = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSWVersion.setStatus('current')
systemSWDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSWDateAndTime.setStatus('current')
systemTemperature = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTemperature.setStatus('current')
systemProductName = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemProductName.setStatus('current')
serverConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 1))
configMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 2))
imageMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3))
serverIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serverIpAddr.setStatus('current')
ftpUserName = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpUserName.setStatus('current')
ftpUserPasswd = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpUserPasswd.setStatus('current')
serverInterfaceType = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("oob", 0), ("inBand", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serverInterfaceType.setStatus('current')
cfgFileName = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfgFileName.setStatus('current')
cfgFileControl = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("backUpByFtp", 1), ("restoreByFtp", 2), ("backupByTftp", 3), ("restoreByTftp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfgFileControl.setStatus('current')
cfgFileStatus = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 0), ("backupSuccess", 1), ("restoreSuccess", 2), ("inProgress", 3), ("fileNotFound", 4), ("connnectionFail", 5), ("logInFail", 6), ("diskFull", 7), ("otherError", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfgFileStatus.setStatus('current')
upgradeImageSWFileName = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upgradeImageSWFileName.setStatus('current')
upgradeImageSW = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("updateImageFile", 1), ("upgradeImage", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upgradeImageSW.setStatus('current')
upgradeImageSWStatus = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115))).clone(namedValues=NamedValues(("none", 0), ("success", 1), ("inProgress", 2), ("diskIsFull", 3), ("fileSizeError", 4), ("fileOpenError", 5), ("fileCRCError", 6), ("flashEraseError", 7), ("flashWriteError", 8), ("unknownError", 9), ("upgradeDeliveryInProgress", 101), ("upgradeDeliveryFailed", 102), ("upgradeDeliverySuccess", 103), ("upgradeCheckInProgress", 104), ("upgradeCheckFailed", 105), ("upgradeCheckSuccess", 106), ("upgradeLoadInProgress", 107), ("upgradeLoadFailed", 108), ("upgradeLoadSuccess1stDone", 109), ("upgradeInvokeInProgress", 110), ("upgradeInvokeFailed", 111), ("upgradeInvokeSuccess2ndDone", 112), ("upgradeCommitInProgress", 113), ("upgradeCommitFailed", 114), ("upgradeImagelatestVersion", 115)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upgradeImageSWStatus.setStatus('current')
upgradeImageSWDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upgradeImageSWDateAndTime.setStatus('current')
imageInfoTable = MibTable((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3, 10), )
if mibBuilder.loadTexts: imageInfoTable.setStatus('current')
imageInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3, 10, 1), ).setIndexNames((0, "BTI8xx-SYSTEM-MIB", "imageInfoIndex"))
if mibBuilder.loadTexts: imageInfoEntry.setStatus('current')
imageInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imageInfoIndex.setStatus('current')
imageInfoVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3, 10, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imageInfoVersion.setStatus('current')
imageInfoCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imageInfoCreated.setStatus('current')
imageInfoSize = MibTableColumn((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imageInfoSize.setStatus('current')
imageInfoCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 2, 3, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("active", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: imageInfoCurrent.setStatus('current')
reboot = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reboot.setStatus('current')
save = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("save", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: save.setStatus('current')
lastSaveTime = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lastSaveTime.setStatus('current')
timezone = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timezone.setStatus('current')
systemTime = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemTime.setStatus('current')
lastCommand = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lastCommand.setStatus('current')
fanCtrlStartTemp = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fanCtrlStartTemp.setStatus('current')
fanCtrlStopTemp = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-30, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fanCtrlStopTemp.setStatus('current')
fanRpmConfig = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5000, 20000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanRpmConfig.setStatus('current')
fanLowTolerance = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fanLowTolerance.setStatus('current')
fanLowToleranceValue = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanLowToleranceValue.setStatus('current')
fanHighTolerance = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fanHighTolerance.setStatus('current')
fanHighToleranceValue = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanHighToleranceValue.setStatus('current')
tempHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempHighThreshold.setStatus('current')
tempLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 3, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-30, -1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempLowThreshold.setStatus('current')
mgmtOuterVlan = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtOuterVlan.setStatus('current')
mgmtOuterVlanPriority = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtOuterVlanPriority.setStatus('current')
mgmtInnerVlan = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtInnerVlan.setStatus('current')
mgmtInnerVlanPriority = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 1, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtInnerVlanPriority.setStatus('current')
pInbandIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pInbandIPAddress.setStatus('current')
pInbandNetMask = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pInbandNetMask.setStatus('current')
pInbandNetworkAddress = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 2, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pInbandNetworkAddress.setStatus('current')
pInbandMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 2, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pInbandMACAddress.setStatus('current')
pOOBIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 2, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOOBIPAddress.setStatus('current')
pOOBNetMask = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 2, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOOBNetMask.setStatus('current')
pOOBNetworkAddress = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 2, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOOBNetworkAddress.setStatus('current')
pOOBMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 2, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pOOBMACAddress.setStatus('current')
pDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 2, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pDefaultGateway.setStatus('current')
consoleBaudRate = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("bps9600", 1), ("bps19200", 2), ("bps38400", 3), ("bps57600", 4), ("bps115200", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: consoleBaudRate.setStatus('current')
consoleCharSize = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8))).clone(namedValues=NamedValues(("sevenBits", 7), ("eightBits", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: consoleCharSize.setStatus('current')
consoleParityBits = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noParity", 1), ("evenParity", 2), ("oddParity", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: consoleParityBits.setStatus('current')
consoleStopBits = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("one", 1), ("two", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: consoleStopBits.setStatus('current')
consoleFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 30005, 1, 7, 100, 1, 2, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("hardware", 2), ("xonXoff", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: consoleFlowControl.setStatus('current')
mibBuilder.exportSymbols("BTI8xx-SYSTEM-MIB", consoleFlowControl=consoleFlowControl, accessInfo=accessInfo, mgmtVlanConfig=mgmtVlanConfig, ftpUserName=ftpUserName, systemSWVersion=systemSWVersion, systemConfig=systemConfig, miscellaneous=miscellaneous, systemManagement=systemManagement, imageInfoCurrent=imageInfoCurrent, save=save, mgmtOuterVlan=mgmtOuterVlan, consoleInformation=consoleInformation, autoLogoutTime=autoLogoutTime, systemProductName=systemProductName, PYSNMP_MODULE_ID=systemConfig, consoleCharSize=consoleCharSize, fanLowTolerance=fanLowTolerance, tempLowThreshold=tempLowThreshold, mgmtInnerVlan=mgmtInnerVlan, fanRpmConfig=fanRpmConfig, lastCommand=lastCommand, fanHighTolerance=fanHighTolerance, timezone=timezone, fanCtrlStartTemp=fanCtrlStartTemp, consoleParityBits=consoleParityBits, ftpUserPasswd=ftpUserPasswd, cfgFileControl=cfgFileControl, pInbandIPAddress=pInbandIPAddress, imageMgmt=imageMgmt, systemName=systemName, cfgFileName=cfgFileName, cfgFileStatus=cfgFileStatus, imageInfoSize=imageInfoSize, pOOBIPAddress=pOOBIPAddress, systemHWVersion=systemHWVersion, imageInfoVersion=imageInfoVersion, serverIpAddr=serverIpAddr, pOOBMACAddress=pOOBMACAddress, systemInfo=systemInfo, upgradeImageSWStatus=upgradeImageSWStatus, systemTime=systemTime, systemTemperature=systemTemperature, serverInterfaceType=serverInterfaceType, imageInfoEntry=imageInfoEntry, imageInfoCreated=imageInfoCreated, fanCtrlStopTemp=fanCtrlStopTemp, mgmtOuterVlanPriority=mgmtOuterVlanPriority, lastSaveTime=lastSaveTime, imageInfoTable=imageInfoTable, pInbandMACAddress=pInbandMACAddress, imageInfoIndex=imageInfoIndex, consoleBaudRate=consoleBaudRate, upgradeImageSWDateAndTime=upgradeImageSWDateAndTime, fanHighToleranceValue=fanHighToleranceValue, upgradeImageSWFileName=upgradeImageSWFileName, mgmtInnerVlanPriority=mgmtInnerVlanPriority, serverConfig=serverConfig, fanLowToleranceValue=fanLowToleranceValue, systemSWDateAndTime=systemSWDateAndTime, pInbandNetMask=pInbandNetMask, pInbandNetworkAddress=pInbandNetworkAddress, pOOBNetMask=pOOBNetMask, consoleStopBits=consoleStopBits, reboot=reboot, configMgmt=configMgmt, pOOBNetworkAddress=pOOBNetworkAddress, configAndImageMgmt=configAndImageMgmt, upgradeImageSW=upgradeImageSW, tempHighThreshold=tempHighThreshold, systemUpTime=systemUpTime, pDefaultGateway=pDefaultGateway)
