#
# PySNMP MIB module NBS-REDUNDANCY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/mrv/NBS-REDUNDANCY-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 12:20:55 2024
# On host fv-az1385-751 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
nbsCmmcSlotIndex, nbsCmmcChassisIndex, nbsCmmcPortIndex = mibBuilder.importSymbols("NBS-CMMC-MIB", "nbsCmmcSlotIndex", "nbsCmmcChassisIndex", "nbsCmmcPortIndex")
nbs, = mibBuilder.importSymbols("NBS-MIB", "nbs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ObjectIdentity, Integer32, ModuleIdentity, IpAddress, TimeTicks, MibIdentifier, Unsigned32, NotificationType, iso, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ObjectIdentity", "Integer32", "ModuleIdentity", "IpAddress", "TimeTicks", "MibIdentifier", "Unsigned32", "NotificationType", "iso", "Counter32", "Counter64")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
nbsRedundancyMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 629, 221))
if mibBuilder.loadTexts: nbsRedundancyMib.setLastUpdated('201505010000Z')
if mibBuilder.loadTexts: nbsRedundancyMib.setOrganization('NBS')
nbsRedundCfgGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 221, 1))
if mibBuilder.loadTexts: nbsRedundCfgGrp.setStatus('current')
nbsRedundEventGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 221, 100))
if mibBuilder.loadTexts: nbsRedundEventGrp.setStatus('current')
nbsYcableTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 221, 100, 0))
if mibBuilder.loadTexts: nbsYcableTraps.setStatus('current')
nbsRedundCfgTableSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 221, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsRedundCfgTableSize.setStatus('current')
nbsRedundCfgTable = MibTable((1, 3, 6, 1, 4, 1, 629, 221, 1, 2), )
if mibBuilder.loadTexts: nbsRedundCfgTable.setStatus('current')
nbsRedundCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1), ).setIndexNames((0, "NBS-REDUNDANCY-MIB", "nbsRedundCfgNdx"))
if mibBuilder.loadTexts: nbsRedundCfgEntry.setStatus('current')
nbsRedundCfgNdx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: nbsRedundCfgNdx.setStatus('current')
nbsRedundCfgPartnerNdxAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 2), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsRedundCfgPartnerNdxAdmin.setStatus('current')
nbsRedundCfgPartnerNdxOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsRedundCfgPartnerNdxOper.setStatus('current')
nbsRedundCfgStatusAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("standby", 2), ("active", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsRedundCfgStatusAdmin.setStatus('current')
nbsRedundCfgStatusOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("standby", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsRedundCfgStatusOper.setStatus('current')
nbsRedundCfgPreferredAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("preferNot", 2), ("preferActive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsRedundCfgPreferredAdmin.setStatus('current')
nbsRedundCfgStandbyTxAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("standbyCold", 2), ("standbyHot", 3))).clone('standbyHot')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsRedundCfgStandbyTxAdmin.setStatus('current')
nbsRedundCfgStandbyTxToggle = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("txOff", 2), ("txToggle", 3))).clone('txOff')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsRedundCfgStandbyTxToggle.setStatus('current')
nbsRedundCfgIfTypeAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("access", 2), ("trunk", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsRedundCfgIfTypeAdmin.setStatus('current')
nbsRedundCfgIfTypeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("access", 2), ("trunk", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsRedundCfgIfTypeOper.setStatus('current')
nbsRedundCfgGroupNumberAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 60), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsRedundCfgGroupNumberAdmin.setStatus('current')
nbsRedundCfgGroupNumberOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 2, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsRedundCfgGroupNumberOper.setStatus('current')
nbsRedundGroupCfgTableSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 221, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsRedundGroupCfgTableSize.setStatus('current')
nbsRedundGroupCfgTable = MibTable((1, 3, 6, 1, 4, 1, 629, 221, 1, 4), )
if mibBuilder.loadTexts: nbsRedundGroupCfgTable.setStatus('current')
nbsRedundGroupCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 221, 1, 4, 1), ).setIndexNames((0, "NBS-REDUNDANCY-MIB", "nbsRedundGroupCfgNdx"), (0, "NBS-REDUNDANCY-MIB", "nbsRedundGroupCfgNumber"))
if mibBuilder.loadTexts: nbsRedundGroupCfgEntry.setStatus('current')
nbsRedundGroupCfgNdx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: nbsRedundGroupCfgNdx.setStatus('current')
nbsRedundGroupCfgNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: nbsRedundGroupCfgNumber.setStatus('current')
nbsRedundGroupCfgOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 4, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsRedundGroupCfgOper.setStatus('current')
nbsRedundGroupCfgModeAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("modeA", 2), ("modeB", 3))).clone('modeB')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsRedundGroupCfgModeAdmin.setStatus('current')
nbsRedundGroupCfgModeOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("modeA", 2), ("modeB", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsRedundGroupCfgModeOper.setStatus('current')
nbsRedundGroupCfgYcableAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 4, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsRedundGroupCfgYcableAdmin.setStatus('current')
nbsRedundGroupCfgYcableOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsRedundGroupCfgYcableOper.setStatus('current')
nbsRedundGroupCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 221, 1, 4, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsRedundGroupCfgRowStatus.setStatus('current')
nbsYcableTrapsStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 629, 221, 100, 0, 10)).setObjects(("NBS-CMMC-MIB", "nbsCmmcChassisIndex"), ("NBS-CMMC-MIB", "nbsCmmcSlotIndex"), ("NBS-CMMC-MIB", "nbsCmmcPortIndex"), ("NBS-REDUNDANCY-MIB", "nbsRedundCfgStatusOper"))
if mibBuilder.loadTexts: nbsYcableTrapsStatusChanged.setStatus('current')
mibBuilder.exportSymbols("NBS-REDUNDANCY-MIB", nbsRedundGroupCfgRowStatus=nbsRedundGroupCfgRowStatus, nbsRedundGroupCfgNdx=nbsRedundGroupCfgNdx, nbsRedundancyMib=nbsRedundancyMib, nbsRedundCfgStandbyTxAdmin=nbsRedundCfgStandbyTxAdmin, nbsRedundCfgIfTypeAdmin=nbsRedundCfgIfTypeAdmin, nbsRedundGroupCfgYcableOper=nbsRedundGroupCfgYcableOper, nbsRedundGroupCfgNumber=nbsRedundGroupCfgNumber, nbsRedundGroupCfgYcableAdmin=nbsRedundGroupCfgYcableAdmin, nbsRedundGroupCfgEntry=nbsRedundGroupCfgEntry, nbsRedundCfgStatusOper=nbsRedundCfgStatusOper, nbsRedundCfgGroupNumberOper=nbsRedundCfgGroupNumberOper, nbsRedundCfgStatusAdmin=nbsRedundCfgStatusAdmin, nbsRedundGroupCfgModeAdmin=nbsRedundGroupCfgModeAdmin, nbsRedundCfgStandbyTxToggle=nbsRedundCfgStandbyTxToggle, nbsRedundGroupCfgOper=nbsRedundGroupCfgOper, nbsRedundCfgTableSize=nbsRedundCfgTableSize, nbsRedundCfgGrp=nbsRedundCfgGrp, nbsRedundGroupCfgTable=nbsRedundGroupCfgTable, nbsYcableTrapsStatusChanged=nbsYcableTrapsStatusChanged, nbsRedundCfgPartnerNdxAdmin=nbsRedundCfgPartnerNdxAdmin, nbsRedundEventGrp=nbsRedundEventGrp, PYSNMP_MODULE_ID=nbsRedundancyMib, nbsRedundCfgIfTypeOper=nbsRedundCfgIfTypeOper, nbsRedundCfgGroupNumberAdmin=nbsRedundCfgGroupNumberAdmin, nbsRedundCfgPartnerNdxOper=nbsRedundCfgPartnerNdxOper, nbsRedundCfgTable=nbsRedundCfgTable, nbsYcableTraps=nbsYcableTraps, nbsRedundCfgNdx=nbsRedundCfgNdx, nbsRedundGroupCfgModeOper=nbsRedundGroupCfgModeOper, nbsRedundCfgEntry=nbsRedundCfgEntry, nbsRedundGroupCfgTableSize=nbsRedundGroupCfgTableSize, nbsRedundCfgPreferredAdmin=nbsRedundCfgPreferredAdmin)
