#
# PySNMP MIB module F3-DATAEXPORT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/F3-DATAEXPORT-MIB
# Produced by pysmi-1.1.12 at Tue Dec  3 12:31:26 2024
# On host fv-az658-333 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
fsp150cm, = mibBuilder.importSymbols("ADVA-MIB", "fsp150cm")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
PerfCounter64, IpVersion = mibBuilder.importSymbols("CM-COMMON-MIB", "PerfCounter64", "IpVersion")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Gauge32, iso, NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, IpAddress, ModuleIdentity, MibIdentifier, Counter32, Bits, ObjectIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "IpAddress", "ModuleIdentity", "MibIdentifier", "Counter32", "Bits", "ObjectIdentity", "Unsigned32")
TextualConvention, RowStatus, VariablePointer, DisplayString, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "VariablePointer", "DisplayString", "StorageType")
f3DataExportMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30))
f3DataExportMIB.setRevisions(('2013-10-31 00:00',))
if mibBuilder.loadTexts: f3DataExportMIB.setLastUpdated('201310310000Z')
if mibBuilder.loadTexts: f3DataExportMIB.setOrganization('ADVA Optical Networking')
f3DataExportConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1))
f3DataExportCounterObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 2))
f3DataExportActionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 3))
f3DataExportConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 4))
class DataExportType(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("esal3pm", 1), ("twamppm", 2), ("flowbyteratepm", 3))

f3DataExportTypes = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 1), DataExportType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3DataExportTypes.setStatus('current')
f3DataExportReportInterval = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3DataExportReportInterval.setStatus('current')
f3DataExportIpVersion = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 3), IpVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3DataExportIpVersion.setStatus('current')
f3DataExportServerIpv4Addr = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3DataExportServerIpv4Addr.setStatus('current')
f3DataExportServerIpv6Addr = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 5), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3DataExportServerIpv6Addr.setStatus('current')
f3DataExportUserName = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3DataExportUserName.setStatus('current')
f3DataExportPassword = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3DataExportPassword.setStatus('current')
f3DataExportPath = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3DataExportPath.setStatus('current')
f3DataExportConfigObjectTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 9), )
if mibBuilder.loadTexts: f3DataExportConfigObjectTable.setStatus('current')
f3DataExportConfigObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 9, 1), ).setIndexNames((0, "F3-DATAEXPORT-MIB", "f3DataExportConfigObjectEntity"))
if mibBuilder.loadTexts: f3DataExportConfigObjectEntry.setStatus('current')
f3DataExportConfigObjectEntity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 9, 1, 1), VariablePointer())
if mibBuilder.loadTexts: f3DataExportConfigObjectEntity.setStatus('current')
f3DataExportConfigObjectStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 9, 1, 2), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3DataExportConfigObjectStorageType.setStatus('current')
f3DataExportConfigObjectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 1, 9, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3DataExportConfigObjectRowStatus.setStatus('current')
f3DataExportServerXferPass = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 2, 1), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3DataExportServerXferPass.setStatus('current')
f3DataExportServerXferFail = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 2, 2), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3DataExportServerXferFail.setStatus('current')
f3DataExportClearStatsAction = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-applicable", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3DataExportClearStatsAction.setStatus('current')
f3DataExportCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 4, 1))
f3DataExportGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 4, 2))
f3DataExportCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 4, 1, 1)).setObjects(("F3-DATAEXPORT-MIB", "f3DataExportConfigGroup"), ("F3-DATAEXPORT-MIB", "f3DataExportCounterGroup"), ("F3-DATAEXPORT-MIB", "f3DataExportActionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3DataExportCompliance = f3DataExportCompliance.setStatus('current')
f3DataExportConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 4, 2, 1)).setObjects(("F3-DATAEXPORT-MIB", "f3DataExportTypes"), ("F3-DATAEXPORT-MIB", "f3DataExportReportInterval"), ("F3-DATAEXPORT-MIB", "f3DataExportIpVersion"), ("F3-DATAEXPORT-MIB", "f3DataExportServerIpv4Addr"), ("F3-DATAEXPORT-MIB", "f3DataExportServerIpv6Addr"), ("F3-DATAEXPORT-MIB", "f3DataExportUserName"), ("F3-DATAEXPORT-MIB", "f3DataExportPassword"), ("F3-DATAEXPORT-MIB", "f3DataExportPath"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3DataExportConfigGroup = f3DataExportConfigGroup.setStatus('current')
f3DataExportCounterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 4, 2, 2)).setObjects(("F3-DATAEXPORT-MIB", "f3DataExportServerXferPass"), ("F3-DATAEXPORT-MIB", "f3DataExportServerXferFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3DataExportCounterGroup = f3DataExportCounterGroup.setStatus('current')
f3DataExportActionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 30, 4, 2, 3)).setObjects(("F3-DATAEXPORT-MIB", "f3DataExportClearStatsAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3DataExportActionGroup = f3DataExportActionGroup.setStatus('current')
mibBuilder.exportSymbols("F3-DATAEXPORT-MIB", PYSNMP_MODULE_ID=f3DataExportMIB, f3DataExportConformance=f3DataExportConformance, f3DataExportServerXferPass=f3DataExportServerXferPass, f3DataExportActionGroup=f3DataExportActionGroup, f3DataExportConfigGroup=f3DataExportConfigGroup, f3DataExportConfigObjectStorageType=f3DataExportConfigObjectStorageType, f3DataExportPassword=f3DataExportPassword, f3DataExportServerIpv4Addr=f3DataExportServerIpv4Addr, DataExportType=DataExportType, f3DataExportMIB=f3DataExportMIB, f3DataExportConfigObjectTable=f3DataExportConfigObjectTable, f3DataExportUserName=f3DataExportUserName, f3DataExportServerIpv6Addr=f3DataExportServerIpv6Addr, f3DataExportCounterObjects=f3DataExportCounterObjects, f3DataExportReportInterval=f3DataExportReportInterval, f3DataExportGroups=f3DataExportGroups, f3DataExportConfigObjects=f3DataExportConfigObjects, f3DataExportConfigObjectRowStatus=f3DataExportConfigObjectRowStatus, f3DataExportTypes=f3DataExportTypes, f3DataExportCompliances=f3DataExportCompliances, f3DataExportIpVersion=f3DataExportIpVersion, f3DataExportClearStatsAction=f3DataExportClearStatsAction, f3DataExportCompliance=f3DataExportCompliance, f3DataExportConfigObjectEntry=f3DataExportConfigObjectEntry, f3DataExportConfigObjectEntity=f3DataExportConfigObjectEntity, f3DataExportServerXferFail=f3DataExportServerXferFail, f3DataExportPath=f3DataExportPath, f3DataExportActionObjects=f3DataExportActionObjects, f3DataExportCounterGroup=f3DataExportCounterGroup)
