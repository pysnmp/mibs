#
# PySNMP MIB module RS-XX9-MTX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/rs/RS-XX9-MTX-MIB
# Produced by pysmi-1.1.12 at Mon Sep 16 15:00:27 2024
# On host fv-az1272-448 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
commonNotificationAlarmClass, = mibBuilder.importSymbols("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass")
rsXx9MTx, rsXx9MibModule = mibBuilder.importSymbols("RS-XX9-SMI-MIB", "rsXx9MTx", "rsXx9MibModule")
NotificationMask, SwitchOnOff, Trigger, NotificationPriority, NotificationState, IndexTransmitter = mibBuilder.importSymbols("RS-XX9-TC-MIB", "NotificationMask", "SwitchOnOff", "Trigger", "NotificationPriority", "NotificationState", "IndexTransmitter")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, Counter32, Integer32, Unsigned32, MibIdentifier, Bits, ObjectIdentity, IpAddress, Counter64, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "Integer32", "Unsigned32", "MibIdentifier", "Bits", "ObjectIdentity", "IpAddress", "Counter64", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rsXx9MtxMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 1, 216, 4))
rsXx9MtxMibModule.setRevisions(('2016-03-03 11:00', '2016-02-03 09:00', '2015-10-20 12:00', '2014-12-22 16:00', '2014-10-07 14:00', '2014-03-03 16:00', '2014-02-06 14:00', '2012-10-04 08:00',))
if mibBuilder.loadTexts: rsXx9MtxMibModule.setLastUpdated('201603031100Z')
if mibBuilder.loadTexts: rsXx9MtxMibModule.setOrganization('Rohde&Schwarz GmbH & Co. KG')
rsXx9MtxNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0))
mtxNp1AutomaticSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 1)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "mtxNotificationPriority"), ("RS-XX9-MTX-MIB", "mtxNotificationState"))
if mibBuilder.loadTexts: mtxNp1AutomaticSummary.setStatus('current')
mtxNp1AutomaticReady = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 2)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "mtxNotificationPriority"), ("RS-XX9-MTX-MIB", "mtxNotificationState"))
if mibBuilder.loadTexts: mtxNp1AutomaticReady.setStatus('current')
mtxNp1AutomaticRfSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 3)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "mtxNotificationPriority"), ("RS-XX9-MTX-MIB", "mtxNotificationState"))
if mibBuilder.loadTexts: mtxNp1AutomaticRfSwitch.setStatus('current')
mtxNp1AutomaticInputChannel = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 4)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "mtxNotificationPriority"), ("RS-XX9-MTX-MIB", "mtxNotificationState"))
if mibBuilder.loadTexts: mtxNp1AutomaticInputChannel.setStatus('current')
mtxNp1AutomaticChangeOver = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 5)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "mtxNotificationPriority"), ("RS-XX9-MTX-MIB", "mtxNotificationState"))
if mibBuilder.loadTexts: mtxNp1AutomaticChangeOver.setStatus('current')
mtxLocal = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 6)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "mtxNotificationPriority"), ("RS-XX9-MTX-MIB", "mtxNotificationState"))
if mibBuilder.loadTexts: mtxLocal.setStatus('current')
mtxNp1AutomaticProgramRf = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 7)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "mtxNotificationPriority"), ("RS-XX9-MTX-MIB", "mtxNotificationState"))
if mibBuilder.loadTexts: mtxNp1AutomaticProgramRf.setStatus('current')
mtxMultiTxSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 100)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "mtxNotificationPriority"), ("RS-XX9-MTX-MIB", "mtxNotificationState"))
if mibBuilder.loadTexts: mtxMultiTxSummary.setStatus('current')
mtxMultiTxRfSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 101)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "mtxNotificationPriority"), ("RS-XX9-MTX-MIB", "mtxNotificationState"))
if mibBuilder.loadTexts: mtxMultiTxRfSwitch.setStatus('current')
mtxBackupTxSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 200)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "btxAutoNotificationPriority"), ("RS-XX9-MTX-MIB", "btxAutoNotificationState"))
if mibBuilder.loadTexts: mtxBackupTxSummary.setStatus('current')
mtxBackupTxReady = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 201)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "btxAutoNotificationPriority"), ("RS-XX9-MTX-MIB", "btxAutoNotificationState"))
if mibBuilder.loadTexts: mtxBackupTxReady.setStatus('current')
mtxBackupTxLink = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 202)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "btxAutoNotificationPriority"), ("RS-XX9-MTX-MIB", "btxAutoNotificationState"))
if mibBuilder.loadTexts: mtxBackupTxLink.setStatus('current')
mtxBackupTxRfSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 203)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "btxAutoNotificationPriority"), ("RS-XX9-MTX-MIB", "btxAutoNotificationState"))
if mibBuilder.loadTexts: mtxBackupTxRfSwitch.setStatus('current')
mtxBackupTxSwitchedOver = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 0, 204)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-MTX-MIB", "btxAutoNotificationPriority"), ("RS-XX9-MTX-MIB", "btxAutoNotificationState"))
if mibBuilder.loadTexts: mtxBackupTxSwitchedOver.setStatus('current')
rsXx9MtxObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1))
mtxNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 1), )
if mibBuilder.loadTexts: mtxNotificationTable.setStatus('current')
mtxNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 1, 1), ).setIndexNames((0, "RS-XX9-MTX-MIB", "mtxNotificationIdx"))
if mibBuilder.loadTexts: mtxNotificationEntry.setStatus('current')
mtxNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 6), ValueRangeConstraint(100, 101), )))
if mibBuilder.loadTexts: mtxNotificationIdx.setStatus('current')
mtxNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 100, 101))).clone(namedValues=NamedValues(("mtxNp1AutomaticSummary", 1), ("mtxNp1AutomaticReady", 2), ("mtxNp1AutomaticRfSwitch", 3), ("mtxNp1AutomaticInputChannel", 4), ("mtxNp1AutomaticChangeOver", 5), ("mtxLocal", 6), ("mtxMultiTxSummary", 100), ("mtxMultiTxRfSwitch", 101)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxNotificationName.setStatus('current')
mtxNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 1, 1, 3), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtxNotificationMask.setStatus('current')
mtxNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 1, 1, 4), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mtxNotificationPriority.setStatus('current')
mtxNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 1, 1, 5), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtxNotificationState.setStatus('current')
mtxSystemControl = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 2))
mtxNplus1 = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3))
nplus1AutomaticStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 1))
np1AutomaticLoadedTx = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("txA1", 1), ("txA2", 2), ("txA3", 3), ("txA4", 4), ("txA5", 5), ("txA6", 6), ("txA7", 7), ("txA8", 8), ("none", 9), ("undefined", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: np1AutomaticLoadedTx.setStatus('current')
np1AutomaticReserveRf = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 1, 2), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: np1AutomaticReserveRf.setStatus('current')
np1AutoSwitchesTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 1, 100), )
if mibBuilder.loadTexts: np1AutoSwitchesTable.setStatus('current')
np1AutoSwitchesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 1, 100, 1), ).setIndexNames((0, "RS-XX9-MTX-MIB", "np1AutoSwitchIdx"))
if mibBuilder.loadTexts: np1AutoSwitchesEntry.setStatus('current')
np1AutoSwitchIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 1, 100, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: np1AutoSwitchIdx.setStatus('current')
np1AutoSwitchPos = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 1, 100, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("pos1", 1), ("pos2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: np1AutoSwitchPos.setStatus('current')
nplus1AutomaticConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2))
np1AutomaticOperationMode = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 1), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutomaticOperationMode.setStatus('current')
np1AutoSwitchoverGuardTime = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoSwitchoverGuardTime.setStatus('current')
np1AutoSwitchMode = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("severalTimes", 1), ("singleShot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoSwitchMode.setStatus('current')
np1AutoProgramPreset = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknownPreset", 0), ("txA1", 1), ("txA2", 2), ("txA3", 3), ("txA4", 4), ("txA5", 5), ("txA6", 6), ("txA7", 7), ("txA8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoProgramPreset.setStatus('current')
np1AutoInputPreset = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("channel1", 1), ("channel2", 2), ("channel3", 3), ("channel4", 4), ("channel5", 5), ("channel6", 6), ("channel7", 7), ("channel8", 8), ("channel9", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoInputPreset.setStatus('current')
np1AutoPriorityEnable = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 7), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoPriorityEnable.setStatus('current')
np1AutoToLoad = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 8), IndexTransmitter()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoToLoad.setStatus('current')
np1AutoReserveOperationMode = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 9), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoReserveOperationMode.setStatus('current')
np1AutoProgramTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 10), )
if mibBuilder.loadTexts: np1AutoProgramTable.setStatus('current')
np1AutoProgramEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 10, 1), ).setIndexNames((0, "RS-XX9-MTX-MIB", "np1AutoProgramIdx"))
if mibBuilder.loadTexts: np1AutoProgramEntry.setStatus('current')
np1AutoProgramIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: np1AutoProgramIdx.setStatus('current')
np1AutoProgramOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 10, 1, 2), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoProgramOperationMode.setStatus('current')
np1AutoProgramPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoProgramPriority.setStatus('current')
np1AutoProgramChangeover = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 10, 1, 4), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoProgramChangeover.setStatus('current')
np1AutoProgramRf = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 10, 1, 5), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: np1AutoProgramRf.setStatus('current')
np1AutoReset = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 11), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoReset.setStatus('current')
np1AutoWhenTxBLocal = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automaticAvailable", 1), ("automaticNotAvailable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoWhenTxBLocal.setStatus('current')
np1AutoProgramNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 3), )
if mibBuilder.loadTexts: np1AutoProgramNotificationTable.setStatus('current')
np1AutoProgramNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 3, 1), ).setIndexNames((0, "RS-XX9-MTX-MIB", "np1AutoProgramNotificationProgramIdx"), (0, "RS-XX9-MTX-MIB", "np1AutoProgramNotificationIdx"))
if mibBuilder.loadTexts: np1AutoProgramNotificationEntry.setStatus('current')
np1AutoProgramNotificationProgramIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: np1AutoProgramNotificationProgramIdx.setStatus('current')
np1AutoProgramNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(7, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: np1AutoProgramNotificationIdx.setStatus('current')
np1AutoProgramNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7))).clone(namedValues=NamedValues(("mtxNp1AutomaticProgramRf", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: np1AutoProgramNotificationName.setStatus('current')
np1AutoProgramNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 3, 1, 4), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoProgramNotificationMask.setStatus('current')
np1AutoProgramNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 3, 1, 5), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: np1AutoProgramNotificationPriority.setStatus('current')
np1AutoProgramNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 3, 3, 1, 6), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: np1AutoProgramNotificationState.setStatus('current')
mtxMultiTx = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 4))
multiTxTransmitterTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 4, 1), )
if mibBuilder.loadTexts: multiTxTransmitterTable.setStatus('current')
multiTxTransmitterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 4, 1, 1), ).setIndexNames((0, "RS-XX9-MTX-MIB", "multiTxTxIdx"))
if mibBuilder.loadTexts: multiTxTransmitterEntry.setStatus('current')
multiTxTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 4, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: multiTxTxIdx.setStatus('current')
multiTxLoadedOrAntenna = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("antenna", 2), ("load", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: multiTxLoadedOrAntenna.setStatus('current')
multiTxToLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 4, 1, 1, 3), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: multiTxToLoad.setStatus('current')
multiTxToAntenna = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 4, 1, 1, 4), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: multiTxToAntenna.setStatus('current')
multiTxConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 4, 2))
multiTxReset = MibScalar((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 4, 2, 1), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: multiTxReset.setStatus('current')
mtxBackupTx = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5))
btxAutoNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 1), )
if mibBuilder.loadTexts: btxAutoNotificationTable.setStatus('current')
btxAutoNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 1, 1), ).setIndexNames((0, "RS-XX9-MTX-MIB", "btxAutoNotificationAutomaticIdx"), (0, "RS-XX9-MTX-MIB", "btxAutoNotificationIdx"))
if mibBuilder.loadTexts: btxAutoNotificationEntry.setStatus('current')
btxAutoNotificationAutomaticIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: btxAutoNotificationAutomaticIdx.setStatus('current')
btxAutoNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 204)))
if mibBuilder.loadTexts: btxAutoNotificationIdx.setStatus('current')
btxAutoNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(200, 201, 202, 203, 204))).clone(namedValues=NamedValues(("mtxBackupTxSummary", 200), ("mtxBackupTxReady", 201), ("mtxBackupTxLink", 202), ("mtxBackupTxRfSwitch", 203), ("mtxBackupTxSwitchedOver", 204)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: btxAutoNotificationName.setStatus('current')
btxAutoNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 1, 1, 4), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: btxAutoNotificationMask.setStatus('current')
btxAutoNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 1, 1, 5), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: btxAutoNotificationPriority.setStatus('current')
btxAutoNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 1, 1, 6), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: btxAutoNotificationState.setStatus('current')
btxAutoStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 2), )
if mibBuilder.loadTexts: btxAutoStatusTable.setStatus('current')
btxAutoStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 2, 1), ).setIndexNames((0, "RS-XX9-MTX-MIB", "btxAutoNotificationAutomaticIdx"))
if mibBuilder.loadTexts: btxAutoStatusEntry.setStatus('current')
btxAutoStActiveTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("txA", 2), ("txB", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: btxAutoStActiveTx.setStatus('current')
btxAutoConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 3), )
if mibBuilder.loadTexts: btxAutoConfigurationTable.setStatus('current')
btxAutoConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 3, 1), ).setIndexNames((0, "RS-XX9-MTX-MIB", "btxAutoNotificationAutomaticIdx"))
if mibBuilder.loadTexts: btxAutoConfigurationEntry.setStatus('current')
btxAutoCfgReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 3, 1, 1), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: btxAutoCfgReset.setStatus('current')
btxAutoCfgOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 3, 1, 2), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: btxAutoCfgOperationMode.setStatus('current')
btxAutoCfgMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("multipleShot", 1), ("singleShot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: btxAutoCfgMode.setStatus('current')
btxAutoCfgGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: btxAutoCfgGuardTime.setStatus('current')
btxAutoCfgPreselectTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 1, 5, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("txA", 2), ("txB", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: btxAutoCfgPreselectTx.setStatus('current')
rsXx9MtxConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2))
rsXx9MtxCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 1))
mtxSystemControlCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 1, 1)).setObjects(("RS-XX9-MTX-MIB", "mtxNotifySystemControl"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxSystemControlCompliance = mtxSystemControlCompliance.setStatus('current')
mtxNplus1Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 1, 2)).setObjects(("RS-XX9-MTX-MIB", "mtxObjsNplus1"), ("RS-XX9-MTX-MIB", "mtxNotifyNplus1"), ("RS-XX9-MTX-MIB", "mtxObjsNotificationTable"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxNplus1Compliance = mtxNplus1Compliance.setStatus('current')
rsXx9MtxGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2))
mtxObjsNotificationTable = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2, 1)).setObjects(("RS-XX9-MTX-MIB", "mtxNotificationName"), ("RS-XX9-MTX-MIB", "mtxNotificationMask"), ("RS-XX9-MTX-MIB", "mtxNotificationPriority"), ("RS-XX9-MTX-MIB", "mtxNotificationState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxObjsNotificationTable = mtxObjsNotificationTable.setStatus('current')
mtxObjsNplus1 = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2, 2)).setObjects(("RS-XX9-MTX-MIB", "np1AutoPriorityEnable"), ("RS-XX9-MTX-MIB", "np1AutoSwitchoverGuardTime"), ("RS-XX9-MTX-MIB", "np1AutoProgramPreset"), ("RS-XX9-MTX-MIB", "np1AutoInputPreset"), ("RS-XX9-MTX-MIB", "np1AutoProgramOperationMode"), ("RS-XX9-MTX-MIB", "np1AutoProgramPriority"), ("RS-XX9-MTX-MIB", "np1AutoProgramChangeover"), ("RS-XX9-MTX-MIB", "np1AutoToLoad"), ("RS-XX9-MTX-MIB", "np1AutoReset"), ("RS-XX9-MTX-MIB", "np1AutoWhenTxBLocal"), ("RS-XX9-MTX-MIB", "np1AutomaticReserveRf"), ("RS-XX9-MTX-MIB", "np1AutoProgramRf"), ("RS-XX9-MTX-MIB", "np1AutoSwitchPos"), ("RS-XX9-MTX-MIB", "np1AutoSwitchIdx"), ("RS-XX9-MTX-MIB", "np1AutoSwitchMode"), ("RS-XX9-MTX-MIB", "np1AutomaticLoadedTx"), ("RS-XX9-MTX-MIB", "np1AutomaticOperationMode"), ("RS-XX9-MTX-MIB", "np1AutoReserveOperationMode"), ("RS-XX9-MTX-MIB", "np1AutoProgramNotificationState"), ("RS-XX9-MTX-MIB", "np1AutoProgramNotificationPriority"), ("RS-XX9-MTX-MIB", "np1AutoProgramNotificationMask"), ("RS-XX9-MTX-MIB", "np1AutoProgramNotificationName"), ("RS-XX9-MTX-MIB", "np1AutoProgramNotificationIdx"), ("RS-XX9-MTX-MIB", "np1AutoProgramNotificationProgramIdx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxObjsNplus1 = mtxObjsNplus1.setStatus('current')
mtxNotifyNplus1 = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2, 3)).setObjects(("RS-XX9-MTX-MIB", "mtxNp1AutomaticProgramRf"), ("RS-XX9-MTX-MIB", "mtxNp1AutomaticReady"), ("RS-XX9-MTX-MIB", "mtxNp1AutomaticSummary"), ("RS-XX9-MTX-MIB", "mtxNp1AutomaticRfSwitch"), ("RS-XX9-MTX-MIB", "mtxNp1AutomaticInputChannel"), ("RS-XX9-MTX-MIB", "mtxNp1AutomaticChangeOver"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxNotifyNplus1 = mtxNotifyNplus1.setStatus('current')
mtxNotifySystemControl = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2, 4)).setObjects(("RS-XX9-MTX-MIB", "mtxLocal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxNotifySystemControl = mtxNotifySystemControl.setStatus('current')
mtxObsMultiTx = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2, 100)).setObjects(("RS-XX9-MTX-MIB", "multiTxReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxObsMultiTx = mtxObsMultiTx.setStatus('current')
mtxObjsMultiTxDummyLoads = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2, 101)).setObjects(("RS-XX9-MTX-MIB", "multiTxLoadedOrAntenna"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxObjsMultiTxDummyLoads = mtxObjsMultiTxDummyLoads.setStatus('current')
mtxObjsMultiTxDummyLoadSwitches = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2, 102)).setObjects(("RS-XX9-MTX-MIB", "multiTxToLoad"), ("RS-XX9-MTX-MIB", "multiTxToAntenna"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxObjsMultiTxDummyLoadSwitches = mtxObjsMultiTxDummyLoadSwitches.setStatus('current')
mtxNotifyMultiTx = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2, 150)).setObjects(("RS-XX9-MTX-MIB", "mtxMultiTxSummary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxNotifyMultiTx = mtxNotifyMultiTx.setStatus('current')
mtxNotifyMultiTxSwitches = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2, 151)).setObjects(("RS-XX9-MTX-MIB", "mtxMultiTxRfSwitch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxNotifyMultiTxSwitches = mtxNotifyMultiTxSwitches.setStatus('current')
mtxObjsBackupTx = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2, 152)).setObjects(("RS-XX9-MTX-MIB", "btxAutoNotificationName"), ("RS-XX9-MTX-MIB", "btxAutoNotificationMask"), ("RS-XX9-MTX-MIB", "btxAutoNotificationPriority"), ("RS-XX9-MTX-MIB", "btxAutoNotificationState"), ("RS-XX9-MTX-MIB", "btxAutoStActiveTx"), ("RS-XX9-MTX-MIB", "btxAutoCfgOperationMode"), ("RS-XX9-MTX-MIB", "btxAutoCfgMode"), ("RS-XX9-MTX-MIB", "btxAutoCfgGuardTime"), ("RS-XX9-MTX-MIB", "btxAutoCfgPreselectTx"), ("RS-XX9-MTX-MIB", "btxAutoCfgReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxObjsBackupTx = mtxObjsBackupTx.setStatus('current')
mtxNotifyBackupTx = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 4, 2, 2, 153)).setObjects(("RS-XX9-MTX-MIB", "mtxBackupTxSummary"), ("RS-XX9-MTX-MIB", "mtxBackupTxLink"), ("RS-XX9-MTX-MIB", "mtxBackupTxSwitchedOver"), ("RS-XX9-MTX-MIB", "mtxBackupTxRfSwitch"), ("RS-XX9-MTX-MIB", "mtxBackupTxReady"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mtxNotifyBackupTx = mtxNotifyBackupTx.setStatus('current')
mibBuilder.exportSymbols("RS-XX9-MTX-MIB", mtxNotifySystemControl=mtxNotifySystemControl, btxAutoNotificationAutomaticIdx=btxAutoNotificationAutomaticIdx, mtxNotifyMultiTx=mtxNotifyMultiTx, np1AutoSwitchPos=np1AutoSwitchPos, np1AutoSwitchesTable=np1AutoSwitchesTable, np1AutoProgramChangeover=np1AutoProgramChangeover, np1AutoProgramNotificationTable=np1AutoProgramNotificationTable, mtxNotificationPriority=mtxNotificationPriority, np1AutoInputPreset=np1AutoInputPreset, np1AutoSwitchMode=np1AutoSwitchMode, np1AutoProgramPriority=np1AutoProgramPriority, np1AutoProgramOperationMode=np1AutoProgramOperationMode, np1AutoProgramNotificationProgramIdx=np1AutoProgramNotificationProgramIdx, mtxObjsBackupTx=mtxObjsBackupTx, btxAutoCfgPreselectTx=btxAutoCfgPreselectTx, btxAutoNotificationPriority=btxAutoNotificationPriority, mtxNplus1Compliance=mtxNplus1Compliance, np1AutoProgramNotificationMask=np1AutoProgramNotificationMask, mtxNotifyBackupTx=mtxNotifyBackupTx, np1AutoProgramEntry=np1AutoProgramEntry, mtxObjsMultiTxDummyLoads=mtxObjsMultiTxDummyLoads, np1AutoProgramNotificationPriority=np1AutoProgramNotificationPriority, mtxObjsNotificationTable=mtxObjsNotificationTable, np1AutoSwitchoverGuardTime=np1AutoSwitchoverGuardTime, rsXx9MtxGroups=rsXx9MtxGroups, mtxBackupTxReady=mtxBackupTxReady, mtxNotifyNplus1=mtxNotifyNplus1, mtxNp1AutomaticProgramRf=mtxNp1AutomaticProgramRf, rsXx9MtxCompliances=rsXx9MtxCompliances, np1AutoWhenTxBLocal=np1AutoWhenTxBLocal, mtxNotificationTable=mtxNotificationTable, np1AutoProgramNotificationIdx=np1AutoProgramNotificationIdx, nplus1AutomaticStatus=nplus1AutomaticStatus, mtxNp1AutomaticChangeOver=mtxNp1AutomaticChangeOver, np1AutoReset=np1AutoReset, mtxObsMultiTx=mtxObsMultiTx, multiTxLoadedOrAntenna=multiTxLoadedOrAntenna, mtxNp1AutomaticInputChannel=mtxNp1AutomaticInputChannel, mtxBackupTxSummary=mtxBackupTxSummary, multiTxTransmitterEntry=multiTxTransmitterEntry, mtxBackupTxSwitchedOver=mtxBackupTxSwitchedOver, btxAutoNotificationEntry=btxAutoNotificationEntry, btxAutoNotificationTable=btxAutoNotificationTable, btxAutoCfgGuardTime=btxAutoCfgGuardTime, btxAutoStatusTable=btxAutoStatusTable, np1AutoProgramIdx=np1AutoProgramIdx, np1AutoSwitchIdx=np1AutoSwitchIdx, btxAutoNotificationMask=btxAutoNotificationMask, np1AutoProgramRf=np1AutoProgramRf, mtxLocal=mtxLocal, btxAutoNotificationIdx=btxAutoNotificationIdx, mtxBackupTxLink=mtxBackupTxLink, mtxSystemControlCompliance=mtxSystemControlCompliance, btxAutoConfigurationTable=btxAutoConfigurationTable, np1AutoProgramNotificationName=np1AutoProgramNotificationName, mtxNp1AutomaticReady=mtxNp1AutomaticReady, np1AutoProgramPreset=np1AutoProgramPreset, np1AutoReserveOperationMode=np1AutoReserveOperationMode, rsXx9MtxConformance=rsXx9MtxConformance, nplus1AutomaticConfiguration=nplus1AutomaticConfiguration, multiTxReset=multiTxReset, mtxNplus1=mtxNplus1, mtxMultiTxRfSwitch=mtxMultiTxRfSwitch, mtxBackupTx=mtxBackupTx, btxAutoStatusEntry=btxAutoStatusEntry, mtxObjsMultiTxDummyLoadSwitches=mtxObjsMultiTxDummyLoadSwitches, rsXx9MtxNotifications=rsXx9MtxNotifications, mtxBackupTxRfSwitch=mtxBackupTxRfSwitch, mtxNotificationState=mtxNotificationState, multiTxTransmitterTable=multiTxTransmitterTable, multiTxToLoad=multiTxToLoad, mtxNp1AutomaticRfSwitch=mtxNp1AutomaticRfSwitch, multiTxTxIdx=multiTxTxIdx, btxAutoConfigurationEntry=btxAutoConfigurationEntry, PYSNMP_MODULE_ID=rsXx9MtxMibModule, rsXx9MtxMibModule=rsXx9MtxMibModule, np1AutoToLoad=np1AutoToLoad, mtxObjsNplus1=mtxObjsNplus1, rsXx9MtxObjects=rsXx9MtxObjects, np1AutomaticReserveRf=np1AutomaticReserveRf, mtxMultiTxSummary=mtxMultiTxSummary, np1AutoPriorityEnable=np1AutoPriorityEnable, np1AutoProgramNotificationState=np1AutoProgramNotificationState, np1AutoSwitchesEntry=np1AutoSwitchesEntry, btxAutoCfgMode=btxAutoCfgMode, mtxSystemControl=mtxSystemControl, mtxNotificationName=mtxNotificationName, btxAutoStActiveTx=btxAutoStActiveTx, btxAutoCfgOperationMode=btxAutoCfgOperationMode, mtxNotificationEntry=mtxNotificationEntry, np1AutoProgramNotificationEntry=np1AutoProgramNotificationEntry, np1AutoProgramTable=np1AutoProgramTable, mtxMultiTx=mtxMultiTx, np1AutomaticOperationMode=np1AutomaticOperationMode, mtxNotificationMask=mtxNotificationMask, multiTxConfiguration=multiTxConfiguration, btxAutoCfgReset=btxAutoCfgReset, np1AutomaticLoadedTx=np1AutomaticLoadedTx, mtxNp1AutomaticSummary=mtxNp1AutomaticSummary, multiTxToAntenna=multiTxToAntenna, btxAutoNotificationName=btxAutoNotificationName, mtxNotifyMultiTxSwitches=mtxNotifyMultiTxSwitches, mtxNotificationIdx=mtxNotificationIdx, btxAutoNotificationState=btxAutoNotificationState)
