#
# PySNMP MIB module APSWINVENTORY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/oracle/APSWINVENTORY-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 16:01:30 2024
# On host fv-az1205-935 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
acmepacketMgmt, = mibBuilder.importSymbols("ACMEPACKET-SMI", "acmepacketMgmt")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
TimeTicks, ModuleIdentity, IpAddress, Integer32, Bits, MibIdentifier, Counter32, iso, Counter64, ObjectIdentity, Gauge32, Unsigned32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "IpAddress", "Integer32", "Bits", "MibIdentifier", "Counter32", "iso", "Counter64", "ObjectIdentity", "Gauge32", "Unsigned32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
apSwInventoryModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9148, 3, 4))
apSwInventoryModule.setRevisions(('2012-07-13 00:00', '2014-06-26 00:00', '2019-05-21 00:00',))
if mibBuilder.loadTexts: apSwInventoryModule.setLastUpdated('201905210000Z')
if mibBuilder.loadTexts: apSwInventoryModule.setOrganization('Oracle Communications')
apSwInventoryMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1))
apSwInventoryBootObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 1))
apSwInventoryCfgObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 2))
apSwBootTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 1, 1), )
if mibBuilder.loadTexts: apSwBootTable.setStatus('current')
apSwBootEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 1, 1, 1), ).setIndexNames((0, "APSWINVENTORY-MIB", "apSwBootIndex"))
if mibBuilder.loadTexts: apSwBootEntry.setStatus('current')
apSwBootIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apSwBootIndex.setStatus('current')
apSwBootDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSwBootDescr.setStatus('current')
apSwBootType = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bootImage", 1), ("bootLoader", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSwBootType.setStatus('current')
apSwBootStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("currentUsing", 1), ("previousUsed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSwBootStatus.setStatus('current')
apSwCfgCurrentVersion = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSwCfgCurrentVersion.setStatus('current')
apSwCfgRunningVersion = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSwCfgRunningVersion.setStatus('current')
apSwCfgBackuptable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 2, 3), )
if mibBuilder.loadTexts: apSwCfgBackuptable.setStatus('current')
apSwCfgBackupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 2, 3, 1), ).setIndexNames((0, "APSWINVENTORY-MIB", "apSwCfgBackupIndex"))
if mibBuilder.loadTexts: apSwCfgBackupEntry.setStatus('current')
apSwCfgBackupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apSwCfgBackupIndex.setStatus('current')
apSwCfgBackupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 4, 1, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSwCfgBackupName.setStatus('current')
apSwInventoryNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 4, 2))
apSwCfgNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 4, 2, 1))
apSwCfgTrapPreviousVersion = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apSwCfgTrapPreviousVersion.setStatus('current')
apSwCfgTrapCurrentVersion = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apSwCfgTrapCurrentVersion.setStatus('current')
apSwInventoryNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 4, 3))
apSwInventoryNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 4, 3, 0))
apSwCfgActivateNotification = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 4, 3, 0, 1)).setObjects(("APSWINVENTORY-MIB", "apSwCfgTrapPreviousVersion"), ("APSWINVENTORY-MIB", "apSwCfgTrapCurrentVersion"))
if mibBuilder.loadTexts: apSwCfgActivateNotification.setStatus('current')
apSwInventoryConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 4, 4))
apSwInventoryCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 4, 4, 1))
apSwInventoryGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 4, 4, 2))
apSwInventoryNotificationsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 4, 4, 3))
apSwBootObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 4, 4, 2, 1)).setObjects(("APSWINVENTORY-MIB", "apSwBootDescr"), ("APSWINVENTORY-MIB", "apSwBootType"), ("APSWINVENTORY-MIB", "apSwBootStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apSwBootObjectsGroup = apSwBootObjectsGroup.setStatus('current')
apSwCfgObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 4, 4, 2, 2)).setObjects(("APSWINVENTORY-MIB", "apSwCfgCurrentVersion"), ("APSWINVENTORY-MIB", "apSwCfgRunningVersion"), ("APSWINVENTORY-MIB", "apSwCfgBackupName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apSwCfgObjectsGroup = apSwCfgObjectsGroup.setStatus('current')
apSwInventoryNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 4, 4, 3, 1)).setObjects(("APSWINVENTORY-MIB", "apSwCfgActivateNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apSwInventoryNotificationsGroup = apSwInventoryNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("APSWINVENTORY-MIB", apSwCfgBackupEntry=apSwCfgBackupEntry, apSwCfgObjectsGroup=apSwCfgObjectsGroup, apSwBootDescr=apSwBootDescr, apSwInventoryCompliances=apSwInventoryCompliances, apSwInventoryMIBObjects=apSwInventoryMIBObjects, apSwInventoryNotificationPrefix=apSwInventoryNotificationPrefix, apSwInventoryCfgObjects=apSwInventoryCfgObjects, apSwBootType=apSwBootType, apSwCfgBackupIndex=apSwCfgBackupIndex, apSwInventoryNotificationObjects=apSwInventoryNotificationObjects, apSwInventoryBootObjects=apSwInventoryBootObjects, apSwBootObjectsGroup=apSwBootObjectsGroup, apSwCfgCurrentVersion=apSwCfgCurrentVersion, apSwBootEntry=apSwBootEntry, apSwCfgActivateNotification=apSwCfgActivateNotification, apSwBootIndex=apSwBootIndex, apSwInventoryGroups=apSwInventoryGroups, apSwBootStatus=apSwBootStatus, apSwCfgTrapPreviousVersion=apSwCfgTrapPreviousVersion, apSwInventoryNotificationsGroup=apSwInventoryNotificationsGroup, apSwInventoryModule=apSwInventoryModule, apSwCfgTrapCurrentVersion=apSwCfgTrapCurrentVersion, apSwInventoryConformance=apSwInventoryConformance, apSwCfgBackupName=apSwCfgBackupName, apSwBootTable=apSwBootTable, apSwCfgRunningVersion=apSwCfgRunningVersion, apSwCfgBackuptable=apSwCfgBackuptable, apSwCfgNotificationObjects=apSwCfgNotificationObjects, apSwInventoryNotifications=apSwInventoryNotifications, apSwInventoryNotificationsGroups=apSwInventoryNotificationsGroups, PYSNMP_MODULE_ID=apSwInventoryModule)
