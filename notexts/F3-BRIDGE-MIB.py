#
# PySNMP MIB module F3-BRIDGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/F3-BRIDGE-MIB
# Produced by pysmi-1.1.12 at Tue May 28 12:44:54 2024
# On host fv-az847-244 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
fsp150cm, = mibBuilder.importSymbols("ADVA-MIB", "fsp150cm")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
PerfCounter64, = mibBuilder.importSymbols("CM-COMMON-MIB", "PerfCounter64")
networkElementEntry, shelfIndex, slotIndex, neIndex = mibBuilder.importSymbols("CM-ENTITY-MIB", "networkElementEntry", "shelfIndex", "slotIndex", "neIndex")
cmFlowEntry, cmMPFlowIndex, cmFlowIndex, cmEthernetAccPortIndex = mibBuilder.importSymbols("CM-FACILITY-MIB", "cmFlowEntry", "cmMPFlowIndex", "cmFlowIndex", "cmEthernetAccPortIndex")
cmFlowHistoryEntry, cmFlowStatsEntry = mibBuilder.importSymbols("CM-PERFORMANCE-MIB", "cmFlowHistoryEntry", "cmFlowStatsEntry")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, Bits, Gauge32, MibIdentifier, Unsigned32, Counter64, IpAddress, iso, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "Bits", "Gauge32", "MibIdentifier", "Unsigned32", "Counter64", "IpAddress", "iso", "NotificationType", "TimeTicks")
TruthValue, TextualConvention, VariablePointer, StorageType, MacAddress, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "VariablePointer", "StorageType", "MacAddress", "RowStatus", "DisplayString")
f3BridgeMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26))
f3BridgeMIB.setRevisions(('2012-10-09 00:00',))
if mibBuilder.loadTexts: f3BridgeMIB.setLastUpdated('201209130000Z')
if mibBuilder.loadTexts: f3BridgeMIB.setOrganization('ADVA Optical Networking')
class LearningControl(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("macbased", 2), ("flowbased", 3))

class ProtectLearningControl(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("discard", 2), ("block", 3))

class LearningAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("block", 1), ("forward", 2))

class LearningEntryType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("static", 1), ("dynamic", 2))

class FlowLearningConfigAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("noAction", 1), ("flushFwdTable", 2), ("clearBlock", 3), ("resetAgingTimer", 4))

class RetrieveMacAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("notApllicable", 0), ("retrieveMac", 1))

f3BridgeConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1))
f3BridgeStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2))
f3BridgeConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3))
f3FlowLearningConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 1), )
if mibBuilder.loadTexts: f3FlowLearningConfigTable.setStatus('current')
f3FlowLearningConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 1, 1), )
cmFlowEntry.registerAugmentions(("F3-BRIDGE-MIB", "f3FlowLearningConfigEntry"))
f3FlowLearningConfigEntry.setIndexNames(*cmFlowEntry.getIndexNames())
if mibBuilder.loadTexts: f3FlowLearningConfigEntry.setStatus('current')
f3FlowLearningConfigAccIfLearningCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 1, 1, 1), LearningControl()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FlowLearningConfigAccIfLearningCtrl.setStatus('current')
f3FlowLearningConfigNetIfLearningCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 1, 1, 2), LearningControl()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FlowLearningConfigNetIfLearningCtrl.setStatus('current')
f3FlowLearningConfigAccMaxFwdEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FlowLearningConfigAccMaxFwdEntries.setStatus('current')
f3FlowLearningConfigNetMaxFwdEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FlowLearningConfigNetMaxFwdEntries.setStatus('current')
f3FlowLearningConfigAccIfProtectLearningCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 1, 1, 5), ProtectLearningControl()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FlowLearningConfigAccIfProtectLearningCtrl.setStatus('current')
f3FlowLearningConfigNetIfProtectLearningCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 1, 1, 6), ProtectLearningControl()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FlowLearningConfigNetIfProtectLearningCtrl.setStatus('current')
f3FlowLearningConfigAgingTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FlowLearningConfigAgingTimer.setStatus('current')
f3FlowLearningConfigTableFullAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 1, 1, 8), LearningAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FlowLearningConfigTableFullAction.setStatus('current')
f3FlowLearningConfigAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 1, 1, 9), FlowLearningConfigAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FlowLearningConfigAction.setStatus('current')
f3FlowStaticFwdEntTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 2), )
if mibBuilder.loadTexts: f3FlowStaticFwdEntTable.setStatus('current')
f3FlowStaticFwdEntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowIndex"), (1, "F3-BRIDGE-MIB", "f3FlowStaticFwdEntDestMac"))
if mibBuilder.loadTexts: f3FlowStaticFwdEntEntry.setStatus('current')
f3FlowStaticFwdEntDestMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: f3FlowStaticFwdEntDestMac.setStatus('current')
f3FlowStaticFwdEntDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 2, 1, 2), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3FlowStaticFwdEntDestPort.setStatus('current')
f3FlowStaticFwdEntAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 2, 1, 3), LearningAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3FlowStaticFwdEntAction.setStatus('current')
f3FlowStaticFwdEntStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 2, 1, 4), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3FlowStaticFwdEntStorageType.setStatus('current')
f3FlowStaticFwdEntRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3FlowStaticFwdEntRowStatus.setStatus('current')
f3FlowStaticFwdValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowStaticFwdValid.setStatus('current')
f3FlowFdbTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 3), )
if mibBuilder.loadTexts: f3FlowFdbTable.setStatus('current')
f3FlowFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowIndex"), (1, "F3-BRIDGE-MIB", "f3FlowFdbDestMac"))
if mibBuilder.loadTexts: f3FlowFdbEntry.setStatus('current')
f3FlowFdbDestMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: f3FlowFdbDestMac.setStatus('current')
f3FlowFdbDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 3, 1, 2), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowFdbDestPort.setStatus('current')
f3FlowFdbAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 3, 1, 3), LearningAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowFdbAction.setStatus('current')
f3FlowFdbEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 3, 1, 4), LearningEntryType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowFdbEntryType.setStatus('current')
f3MPFlowStaticFwdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 4), )
if mibBuilder.loadTexts: f3MPFlowStaticFwdTable.setStatus('current')
f3MPFlowStaticFwdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 4, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-FACILITY-MIB", "cmMPFlowIndex"), (0, "F3-BRIDGE-MIB", "f3MPFlowStaticFwdMacAddress"))
if mibBuilder.loadTexts: f3MPFlowStaticFwdEntry.setStatus('current')
f3MPFlowStaticFwdMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: f3MPFlowStaticFwdMacAddress.setStatus('current')
f3MPFlowStaticFwdFP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 4, 1, 2), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3MPFlowStaticFwdFP.setStatus('current')
f3MPFlowStaticFwdControlAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 4, 1, 3), LearningAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowStaticFwdControlAction.setStatus('current')
f3MPFlowStaticFwdValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowStaticFwdValid.setStatus('current')
f3MPFlowStaticFwdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 4, 1, 5), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3MPFlowStaticFwdStorageType.setStatus('current')
f3MPFlowStaticFwdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3MPFlowStaticFwdRowStatus.setStatus('current')
f3MPFlowFDBTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 5), )
if mibBuilder.loadTexts: f3MPFlowFDBTable.setStatus('current')
f3MPFlowFDBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 5, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-FACILITY-MIB", "cmMPFlowIndex"), (0, "F3-BRIDGE-MIB", "f3MPFlowFDBMacAddress"))
if mibBuilder.loadTexts: f3MPFlowFDBEntry.setStatus('current')
f3MPFlowFDBMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: f3MPFlowFDBMacAddress.setStatus('current')
f3MPFlowFDBFP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 5, 1, 2), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowFDBFP.setStatus('current')
f3MPFlowFDBType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 5, 1, 3), LearningEntryType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowFDBType.setStatus('current')
f3MPFlowFDBControlAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 5, 1, 4), LearningAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowFDBControlAction.setStatus('current')
f3FwdTSizeProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 6), )
if mibBuilder.loadTexts: f3FwdTSizeProfileTable.setStatus('current')
f3FwdTSizeProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 6, 1), ).setIndexNames((0, "F3-BRIDGE-MIB", "f3FwdTSizeProfileIndex"))
if mibBuilder.loadTexts: f3FwdTSizeProfileEntry.setStatus('current')
f3FwdTSizeProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: f3FwdTSizeProfileIndex.setStatus('current')
f3FwdTSizeProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FwdTSizeProfileName.setStatus('current')
f3FwdTSizeProfileTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FwdTSizeProfileTableSize.setStatus('current')
f3MultiGroupRegistrationTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 7), )
if mibBuilder.loadTexts: f3MultiGroupRegistrationTable.setStatus('current')
f3MultiGroupRegistrationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 7, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-FACILITY-MIB", "cmMPFlowIndex"), (0, "F3-BRIDGE-MIB", "f3MGRMulticastAddress"))
if mibBuilder.loadTexts: f3MultiGroupRegistrationEntry.setStatus('current')
f3MGRMulticastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: f3MGRMulticastAddress.setStatus('current')
f3MGRFPList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3MGRFPList.setStatus('current')
f3MGRGroupAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 7, 1, 3), LearningAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3MGRGroupAction.setStatus('current')
f3MGRGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 7, 1, 4), LearningEntryType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MGRGroupType.setStatus('current')
f3MGRGroupValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 7, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MGRGroupValid.setStatus('current')
f3MGRGroupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 7, 1, 6), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3MGRGroupStorageType.setStatus('current')
f3MGRGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 7, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3MGRGroupRowStatus.setStatus('current')
f3MGRFPMemberTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 8), )
if mibBuilder.loadTexts: f3MGRFPMemberTable.setStatus('current')
f3MGRFPMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 8, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-FACILITY-MIB", "cmMPFlowIndex"), (0, "F3-BRIDGE-MIB", "f3MGRMulticastAddress"), (0, "F3-BRIDGE-MIB", "f3MGRFPIndex"))
if mibBuilder.loadTexts: f3MGRFPMemberEntry.setStatus('current')
f3MGRFPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 8, 1, 1), VariablePointer())
if mibBuilder.loadTexts: f3MGRFPIndex.setStatus('current')
f3MGRFPIndexRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3MGRFPIndexRowStatus.setStatus('current')
networkElementBridgeParamsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 9), )
if mibBuilder.loadTexts: networkElementBridgeParamsTable.setStatus('current')
networkElementBridgeParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 9, 1), )
networkElementEntry.registerAugmentions(("F3-BRIDGE-MIB", "networkElementBridgeParamsEntry"))
networkElementBridgeParamsEntry.setIndexNames(*networkElementEntry.getIndexNames())
if mibBuilder.loadTexts: networkElementBridgeParamsEntry.setStatus('current')
neBridgeParamsRtrvMacAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 1, 9, 1, 1), RetrieveMacAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: neBridgeParamsRtrvMacAction.setStatus('current')
f3FlowLearningStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 1), )
if mibBuilder.loadTexts: f3FlowLearningStatsTable.setStatus('current')
f3FlowLearningStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 1, 1), )
cmFlowStatsEntry.registerAugmentions(("F3-BRIDGE-MIB", "f3FlowLearningStatsEntry"))
f3FlowLearningStatsEntry.setIndexNames(*cmFlowStatsEntry.getIndexNames())
if mibBuilder.loadTexts: f3FlowLearningStatsEntry.setStatus('current')
f3FlowLearningStatsMacTableFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 1, 1, 1), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowLearningStatsMacTableFlushes.setStatus('current')
f3FlowLearningStatsFDStaticBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 1, 1, 2), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowLearningStatsFDStaticBlock.setStatus('current')
f3FlowLearningStatsFDHairPin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 1, 1, 3), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowLearningStatsFDHairPin.setStatus('current')
f3FlowLearningStatsFDNoDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 1, 1, 4), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowLearningStatsFDNoDest.setStatus('current')
f3FlowLearningStatsMacTableDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 1, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowLearningStatsMacTableDiscards.setStatus('current')
f3FlowLearningHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 2), )
if mibBuilder.loadTexts: f3FlowLearningHistoryTable.setStatus('current')
f3FlowLearningHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 2, 1), )
cmFlowHistoryEntry.registerAugmentions(("F3-BRIDGE-MIB", "f3FlowLearningHistoryEntry"))
f3FlowLearningHistoryEntry.setIndexNames(*cmFlowHistoryEntry.getIndexNames())
if mibBuilder.loadTexts: f3FlowLearningHistoryEntry.setStatus('current')
f3FlowLearningHistoryMacTableFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 2, 1, 1), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowLearningHistoryMacTableFlushes.setStatus('current')
f3FlowLearningHistoryFDStaticBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 2, 1, 2), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowLearningHistoryFDStaticBlock.setStatus('current')
f3FlowLearningHistoryFDHairPin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 2, 1, 3), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowLearningHistoryFDHairPin.setStatus('current')
f3FlowLearningHistoryFDNoDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 2, 1, 4), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowLearningHistoryFDNoDest.setStatus('current')
f3FlowLearningHistoryMacTableDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 2, 2, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FlowLearningHistoryMacTableDiscards.setStatus('current')
f3BridgeCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 1))
f3BridgeGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 2))
f3BridgeCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 1, 1)).setObjects(("F3-BRIDGE-MIB", "f3FlowLearningConfigGroup"), ("F3-BRIDGE-MIB", "f3FlowStaticFwdEntGroup"), ("F3-BRIDGE-MIB", "f3FlowLearningStatsGroup"), ("F3-BRIDGE-MIB", "f3FlowLearningHistoryGroup"), ("F3-BRIDGE-MIB", "f3FlowFdbGroup"), ("F3-BRIDGE-MIB", "f3MPFlowStaticFwdGroup"), ("F3-BRIDGE-MIB", "f3MPFlowFDBGroup"), ("F3-BRIDGE-MIB", "f3FwdTSizeProfileGroup"), ("F3-BRIDGE-MIB", "f3MGGroupFPGroup"), ("F3-BRIDGE-MIB", "f3NetworkElementBridgeParamsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3BridgeCompliance = f3BridgeCompliance.setStatus('current')
f3FlowLearningConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 2, 1)).setObjects(("F3-BRIDGE-MIB", "f3FlowLearningConfigAccIfLearningCtrl"), ("F3-BRIDGE-MIB", "f3FlowLearningConfigNetIfLearningCtrl"), ("F3-BRIDGE-MIB", "f3FlowLearningConfigAccMaxFwdEntries"), ("F3-BRIDGE-MIB", "f3FlowLearningConfigNetMaxFwdEntries"), ("F3-BRIDGE-MIB", "f3FlowLearningConfigAccIfProtectLearningCtrl"), ("F3-BRIDGE-MIB", "f3FlowLearningConfigNetIfProtectLearningCtrl"), ("F3-BRIDGE-MIB", "f3FlowLearningConfigAgingTimer"), ("F3-BRIDGE-MIB", "f3FlowLearningConfigTableFullAction"), ("F3-BRIDGE-MIB", "f3FlowLearningConfigAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3FlowLearningConfigGroup = f3FlowLearningConfigGroup.setStatus('current')
f3FlowStaticFwdEntGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 2, 2)).setObjects(("F3-BRIDGE-MIB", "f3FlowStaticFwdEntDestPort"), ("F3-BRIDGE-MIB", "f3FlowStaticFwdEntAction"), ("F3-BRIDGE-MIB", "f3FlowStaticFwdEntStorageType"), ("F3-BRIDGE-MIB", "f3FlowStaticFwdEntRowStatus"), ("F3-BRIDGE-MIB", "f3FlowStaticFwdValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3FlowStaticFwdEntGroup = f3FlowStaticFwdEntGroup.setStatus('current')
f3FlowLearningStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 2, 3)).setObjects(("F3-BRIDGE-MIB", "f3FlowLearningStatsMacTableFlushes"), ("F3-BRIDGE-MIB", "f3FlowLearningStatsFDStaticBlock"), ("F3-BRIDGE-MIB", "f3FlowLearningStatsFDHairPin"), ("F3-BRIDGE-MIB", "f3FlowLearningStatsFDNoDest"), ("F3-BRIDGE-MIB", "f3FlowLearningStatsMacTableDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3FlowLearningStatsGroup = f3FlowLearningStatsGroup.setStatus('current')
f3FlowLearningHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 2, 4)).setObjects(("F3-BRIDGE-MIB", "f3FlowLearningHistoryMacTableFlushes"), ("F3-BRIDGE-MIB", "f3FlowLearningHistoryFDStaticBlock"), ("F3-BRIDGE-MIB", "f3FlowLearningHistoryFDHairPin"), ("F3-BRIDGE-MIB", "f3FlowLearningHistoryFDNoDest"), ("F3-BRIDGE-MIB", "f3FlowLearningHistoryMacTableDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3FlowLearningHistoryGroup = f3FlowLearningHistoryGroup.setStatus('current')
f3FlowFdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 2, 5)).setObjects(("F3-BRIDGE-MIB", "f3FlowFdbDestPort"), ("F3-BRIDGE-MIB", "f3FlowFdbAction"), ("F3-BRIDGE-MIB", "f3FlowFdbEntryType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3FlowFdbGroup = f3FlowFdbGroup.setStatus('current')
f3MPFlowStaticFwdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 2, 6)).setObjects(("F3-BRIDGE-MIB", "f3MPFlowStaticFwdMacAddress"), ("F3-BRIDGE-MIB", "f3MPFlowStaticFwdFP"), ("F3-BRIDGE-MIB", "f3MPFlowStaticFwdControlAction"), ("F3-BRIDGE-MIB", "f3MPFlowStaticFwdValid"), ("F3-BRIDGE-MIB", "f3MPFlowStaticFwdStorageType"), ("F3-BRIDGE-MIB", "f3MPFlowStaticFwdRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3MPFlowStaticFwdGroup = f3MPFlowStaticFwdGroup.setStatus('current')
f3MPFlowFDBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 2, 7)).setObjects(("F3-BRIDGE-MIB", "f3MPFlowFDBMacAddress"), ("F3-BRIDGE-MIB", "f3MPFlowFDBFP"), ("F3-BRIDGE-MIB", "f3MPFlowFDBType"), ("F3-BRIDGE-MIB", "f3MPFlowFDBControlAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3MPFlowFDBGroup = f3MPFlowFDBGroup.setStatus('current')
f3FwdTSizeProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 2, 8)).setObjects(("F3-BRIDGE-MIB", "f3FwdTSizeProfileIndex"), ("F3-BRIDGE-MIB", "f3FwdTSizeProfileName"), ("F3-BRIDGE-MIB", "f3FwdTSizeProfileTableSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3FwdTSizeProfileGroup = f3FwdTSizeProfileGroup.setStatus('current')
f3MGGroupFPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 2, 9)).setObjects(("F3-BRIDGE-MIB", "f3MGRMulticastAddress"), ("F3-BRIDGE-MIB", "f3MGRFPList"), ("F3-BRIDGE-MIB", "f3MGRGroupAction"), ("F3-BRIDGE-MIB", "f3MGRGroupType"), ("F3-BRIDGE-MIB", "f3MGRGroupValid"), ("F3-BRIDGE-MIB", "f3MGRGroupRowStatus"), ("F3-BRIDGE-MIB", "f3MGRFPIndex"), ("F3-BRIDGE-MIB", "f3MGRFPIndexRowStatus"), ("F3-BRIDGE-MIB", "f3MGRGroupStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3MGGroupFPGroup = f3MGGroupFPGroup.setStatus('current')
f3NetworkElementBridgeParamsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 26, 3, 2, 10)).setObjects(("F3-BRIDGE-MIB", "neBridgeParamsRtrvMacAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3NetworkElementBridgeParamsGroup = f3NetworkElementBridgeParamsGroup.setStatus('current')
mibBuilder.exportSymbols("F3-BRIDGE-MIB", f3FlowStaticFwdEntDestMac=f3FlowStaticFwdEntDestMac, f3FlowFdbDestPort=f3FlowFdbDestPort, f3FlowLearningHistoryGroup=f3FlowLearningHistoryGroup, f3MGRGroupType=f3MGRGroupType, f3MPFlowFDBEntry=f3MPFlowFDBEntry, f3FlowLearningConfigAccIfProtectLearningCtrl=f3FlowLearningConfigAccIfProtectLearningCtrl, f3FlowStaticFwdEntStorageType=f3FlowStaticFwdEntStorageType, f3MPFlowFDBMacAddress=f3MPFlowFDBMacAddress, f3MGGroupFPGroup=f3MGGroupFPGroup, f3MGRGroupValid=f3MGRGroupValid, f3MPFlowFDBType=f3MPFlowFDBType, f3NetworkElementBridgeParamsGroup=f3NetworkElementBridgeParamsGroup, f3FlowFdbTable=f3FlowFdbTable, f3FlowLearningConfigAccMaxFwdEntries=f3FlowLearningConfigAccMaxFwdEntries, LearningEntryType=LearningEntryType, f3MGRFPMemberTable=f3MGRFPMemberTable, f3MPFlowFDBGroup=f3MPFlowFDBGroup, f3FlowLearningConfigNetIfLearningCtrl=f3FlowLearningConfigNetIfLearningCtrl, ProtectLearningControl=ProtectLearningControl, f3MPFlowFDBFP=f3MPFlowFDBFP, f3FlowStaticFwdEntRowStatus=f3FlowStaticFwdEntRowStatus, f3FlowLearningStatsFDHairPin=f3FlowLearningStatsFDHairPin, f3FlowLearningConfigGroup=f3FlowLearningConfigGroup, f3MGRGroupAction=f3MGRGroupAction, f3FlowLearningConfigNetIfProtectLearningCtrl=f3FlowLearningConfigNetIfProtectLearningCtrl, f3MPFlowStaticFwdStorageType=f3MPFlowStaticFwdStorageType, f3FlowStaticFwdEntDestPort=f3FlowStaticFwdEntDestPort, f3FlowLearningConfigEntry=f3FlowLearningConfigEntry, f3FlowLearningHistoryFDStaticBlock=f3FlowLearningHistoryFDStaticBlock, f3FlowLearningHistoryFDNoDest=f3FlowLearningHistoryFDNoDest, f3FwdTSizeProfileIndex=f3FwdTSizeProfileIndex, f3FwdTSizeProfileEntry=f3FwdTSizeProfileEntry, f3FlowStaticFwdEntEntry=f3FlowStaticFwdEntEntry, f3FlowLearningHistoryEntry=f3FlowLearningHistoryEntry, f3FlowFdbGroup=f3FlowFdbGroup, f3FlowLearningStatsGroup=f3FlowLearningStatsGroup, f3BridgeCompliance=f3BridgeCompliance, f3BridgeMIB=f3BridgeMIB, f3MPFlowStaticFwdValid=f3MPFlowStaticFwdValid, f3BridgeConfigObjects=f3BridgeConfigObjects, f3FwdTSizeProfileTableSize=f3FwdTSizeProfileTableSize, f3FwdTSizeProfileGroup=f3FwdTSizeProfileGroup, LearningAction=LearningAction, f3FlowStaticFwdValid=f3FlowStaticFwdValid, f3FwdTSizeProfileName=f3FwdTSizeProfileName, f3MGRMulticastAddress=f3MGRMulticastAddress, f3FlowFdbEntry=f3FlowFdbEntry, f3MGRFPMemberEntry=f3MGRFPMemberEntry, f3FlowLearningHistoryTable=f3FlowLearningHistoryTable, networkElementBridgeParamsEntry=networkElementBridgeParamsEntry, f3FlowLearningHistoryMacTableDiscards=f3FlowLearningHistoryMacTableDiscards, f3FlowLearningStatsMacTableFlushes=f3FlowLearningStatsMacTableFlushes, f3FlowLearningConfigAccIfLearningCtrl=f3FlowLearningConfigAccIfLearningCtrl, f3MPFlowStaticFwdControlAction=f3MPFlowStaticFwdControlAction, networkElementBridgeParamsTable=networkElementBridgeParamsTable, f3FlowLearningStatsEntry=f3FlowLearningStatsEntry, f3MGRFPList=f3MGRFPList, f3MGRFPIndex=f3MGRFPIndex, f3FlowLearningHistoryMacTableFlushes=f3FlowLearningHistoryMacTableFlushes, f3FlowLearningConfigTable=f3FlowLearningConfigTable, f3FlowFdbAction=f3FlowFdbAction, LearningControl=LearningControl, f3FlowLearningStatsTable=f3FlowLearningStatsTable, f3FlowLearningConfigAgingTimer=f3FlowLearningConfigAgingTimer, f3MPFlowStaticFwdMacAddress=f3MPFlowStaticFwdMacAddress, f3FlowLearningConfigNetMaxFwdEntries=f3FlowLearningConfigNetMaxFwdEntries, f3FlowStaticFwdEntGroup=f3FlowStaticFwdEntGroup, f3FwdTSizeProfileTable=f3FwdTSizeProfileTable, f3MGRGroupStorageType=f3MGRGroupStorageType, f3FlowFdbDestMac=f3FlowFdbDestMac, f3MultiGroupRegistrationEntry=f3MultiGroupRegistrationEntry, f3MultiGroupRegistrationTable=f3MultiGroupRegistrationTable, f3MGRGroupRowStatus=f3MGRGroupRowStatus, f3FlowLearningStatsMacTableDiscards=f3FlowLearningStatsMacTableDiscards, f3MPFlowStaticFwdGroup=f3MPFlowStaticFwdGroup, f3MGRFPIndexRowStatus=f3MGRFPIndexRowStatus, f3FlowLearningStatsFDNoDest=f3FlowLearningStatsFDNoDest, f3MPFlowStaticFwdEntry=f3MPFlowStaticFwdEntry, f3FlowLearningConfigTableFullAction=f3FlowLearningConfigTableFullAction, f3MPFlowFDBControlAction=f3MPFlowFDBControlAction, f3FlowStaticFwdEntTable=f3FlowStaticFwdEntTable, f3MPFlowFDBTable=f3MPFlowFDBTable, f3FlowFdbEntryType=f3FlowFdbEntryType, f3MPFlowStaticFwdRowStatus=f3MPFlowStaticFwdRowStatus, RetrieveMacAction=RetrieveMacAction, f3BridgeStatsObjects=f3BridgeStatsObjects, f3BridgeCompliances=f3BridgeCompliances, f3FlowLearningConfigAction=f3FlowLearningConfigAction, f3FlowLearningHistoryFDHairPin=f3FlowLearningHistoryFDHairPin, neBridgeParamsRtrvMacAction=neBridgeParamsRtrvMacAction, f3FlowStaticFwdEntAction=f3FlowStaticFwdEntAction, FlowLearningConfigAction=FlowLearningConfigAction, f3MPFlowStaticFwdFP=f3MPFlowStaticFwdFP, f3BridgeConformance=f3BridgeConformance, f3MPFlowStaticFwdTable=f3MPFlowStaticFwdTable, f3FlowLearningStatsFDStaticBlock=f3FlowLearningStatsFDStaticBlock, PYSNMP_MODULE_ID=f3BridgeMIB, f3BridgeGroups=f3BridgeGroups)
