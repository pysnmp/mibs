#
# PySNMP MIB module F5-BIGIP-WAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/f5/F5-BIGIP-WAM-MIB
# Produced by pysmi-1.1.12 at Mon Sep 16 14:54:46 2024
# On host fv-az1272-448 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
bigipCompliances, bigipGroups, bigipTrafficMgmt, LongDisplayString = mibBuilder.importSymbols("F5-BIGIP-COMMON-MIB", "bigipCompliances", "bigipGroups", "bigipTrafficMgmt", "LongDisplayString")
InetAddress, InetAddressType, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetPortNumber")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, Counter64, TimeTicks, Gauge32, Counter32, iso, Bits, Unsigned32, IpAddress, Opaque, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "TimeTicks", "Gauge32", "Counter32", "iso", "Bits", "Unsigned32", "IpAddress", "Opaque", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "Integer32", "ModuleIdentity")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
bigipWAM = ModuleIdentity((1, 3, 6, 1, 4, 1, 3375, 2, 7))
if mibBuilder.loadTexts: bigipWAM.setLastUpdated('202004092224Z')
if mibBuilder.loadTexts: bigipWAM.setOrganization('F5 Networks, Inc.')
wamAppStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1))
wamAppStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wamAppStatResetStats.setStatus('current')
wamAppStatNumber = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatNumber.setStatus('current')
wamAppStatTable = MibTable((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3), )
if mibBuilder.loadTexts: wamAppStatTable.setStatus('current')
wamAppStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1), ).setIndexNames((0, "F5-BIGIP-WAM-MIB", "wamAppStatName"))
if mibBuilder.loadTexts: wamAppStatEntry.setStatus('current')
wamAppStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 1), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatName.setStatus('obsolete')
wamAppStatVsName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 2), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatVsName.setStatus('obsolete')
wamAppStatRqstTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatRqstTotal.setStatus('obsolete')
wamAppStatProxied = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied.setStatus('obsolete')
wamAppStatProxiedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedBytes.setStatus('obsolete')
wamAppStatProxied1500 = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied1500.setStatus('obsolete')
wamAppStatProxied10k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied10k.setStatus('obsolete')
wamAppStatProxied50k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied50k.setStatus('obsolete')
wamAppStatProxied100k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied100k.setStatus('obsolete')
wamAppStatProxied500k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied500k.setStatus('obsolete')
wamAppStatProxied1m = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied1m.setStatus('obsolete')
wamAppStatProxied5m = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied5m.setStatus('obsolete')
wamAppStatProxiedLarge = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedLarge.setStatus('obsolete')
wamAppStatProxiedNew = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedNew.setStatus('obsolete')
wamAppStatProxiedExpired = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedExpired.setStatus('obsolete')
wamAppStatProxiedPerPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedPerPolicy.setStatus('obsolete')
wamAppStatProxiedPerIrule = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedPerIrule.setStatus('obsolete')
wamAppStatProxiedPerInvalidation = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedPerInvalidation.setStatus('obsolete')
wamAppStatProxiedPerClientRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedPerClientRequest.setStatus('obsolete')
wamAppStatProxiedBypass = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedBypass.setStatus('obsolete')
wamAppStatFromCache = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache.setStatus('obsolete')
wamAppStatFromCacheBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCacheBytes.setStatus('obsolete')
wamAppStatFromCache1500 = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache1500.setStatus('obsolete')
wamAppStatFromCache10k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache10k.setStatus('obsolete')
wamAppStatFromCache50k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache50k.setStatus('obsolete')
wamAppStatFromCache100k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache100k.setStatus('obsolete')
wamAppStatFromCache500k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache500k.setStatus('obsolete')
wamAppStatFromCache1m = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache1m.setStatus('obsolete')
wamAppStatFromCache5m = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache5m.setStatus('obsolete')
wamAppStatFromCacheLarge = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCacheLarge.setStatus('obsolete')
wamAppStatOws2xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOws2xx.setStatus('obsolete')
wamAppStatOws3xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOws3xx.setStatus('obsolete')
wamAppStatOws4xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOws4xx.setStatus('obsolete')
wamAppStatOws5xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOws5xx.setStatus('obsolete')
wamAppStatOwsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOwsDropped.setStatus('obsolete')
wamAppStatOwsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOwsRejected.setStatus('obsolete')
wamAppStatWam2xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWam2xx.setStatus('obsolete')
wamAppStatWam3xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWam3xx.setStatus('obsolete')
wamAppStatWam4xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWam4xx.setStatus('obsolete')
wamAppStatWam5xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWam5xx.setStatus('obsolete')
wamAppStatWam503 = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWam503.setStatus('obsolete')
wamAppStatWamDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWamDropped.setStatus('obsolete')
bigipWAMCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3375, 2, 5, 1, 7)).setObjects(("F5-BIGIP-WAM-MIB", "bigipWAMGroups"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bigipWAMCompliance = bigipWAMCompliance.setStatus('current')
bigipWAMGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 7))
wamAppStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 7, 1)).setObjects(("F5-BIGIP-WAM-MIB", "wamAppStatResetStats"), ("F5-BIGIP-WAM-MIB", "wamAppStatNumber"), ("F5-BIGIP-WAM-MIB", "wamAppStatName"), ("F5-BIGIP-WAM-MIB", "wamAppStatVsName"), ("F5-BIGIP-WAM-MIB", "wamAppStatRqstTotal"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedBytes"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied1500"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied10k"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied50k"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied100k"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied500k"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied1m"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied5m"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedLarge"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedNew"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedExpired"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedPerPolicy"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedPerIrule"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedPerInvalidation"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedPerClientRequest"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedBypass"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCacheBytes"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache1500"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache10k"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache50k"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache100k"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache500k"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache1m"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache5m"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCacheLarge"), ("F5-BIGIP-WAM-MIB", "wamAppStatOws2xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatOws3xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatOws4xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatOws5xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatOwsDropped"), ("F5-BIGIP-WAM-MIB", "wamAppStatOwsRejected"), ("F5-BIGIP-WAM-MIB", "wamAppStatWam2xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatWam3xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatWam4xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatWam5xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatWam503"), ("F5-BIGIP-WAM-MIB", "wamAppStatWamDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wamAppStatGroup = wamAppStatGroup.setStatus('current')
mibBuilder.exportSymbols("F5-BIGIP-WAM-MIB", wamAppStatResetStats=wamAppStatResetStats, wamAppStatProxiedLarge=wamAppStatProxiedLarge, wamAppStatWamDropped=wamAppStatWamDropped, wamAppStatOwsDropped=wamAppStatOwsDropped, wamAppStatWam3xx=wamAppStatWam3xx, wamAppStatWam5xx=wamAppStatWam5xx, wamAppStatProxied1m=wamAppStatProxied1m, wamAppStatVsName=wamAppStatVsName, bigipWAMGroups=bigipWAMGroups, wamAppStatProxiedPerPolicy=wamAppStatProxiedPerPolicy, bigipWAMCompliance=bigipWAMCompliance, wamAppStatGroup=wamAppStatGroup, wamAppStatProxiedBytes=wamAppStatProxiedBytes, wamAppStatWam2xx=wamAppStatWam2xx, wamAppStatWam503=wamAppStatWam503, wamAppStatTable=wamAppStatTable, wamAppStatFromCache1m=wamAppStatFromCache1m, bigipWAM=bigipWAM, wamAppStatProxied500k=wamAppStatProxied500k, wamAppStat=wamAppStat, wamAppStatName=wamAppStatName, wamAppStatProxied10k=wamAppStatProxied10k, wamAppStatOws2xx=wamAppStatOws2xx, wamAppStatFromCache=wamAppStatFromCache, wamAppStatOws4xx=wamAppStatOws4xx, wamAppStatFromCache1500=wamAppStatFromCache1500, wamAppStatProxied=wamAppStatProxied, PYSNMP_MODULE_ID=bigipWAM, wamAppStatEntry=wamAppStatEntry, wamAppStatFromCache10k=wamAppStatFromCache10k, wamAppStatWam4xx=wamAppStatWam4xx, wamAppStatRqstTotal=wamAppStatRqstTotal, wamAppStatProxied1500=wamAppStatProxied1500, wamAppStatOws5xx=wamAppStatOws5xx, wamAppStatFromCache100k=wamAppStatFromCache100k, wamAppStatOwsRejected=wamAppStatOwsRejected, wamAppStatNumber=wamAppStatNumber, wamAppStatProxiedNew=wamAppStatProxiedNew, wamAppStatProxied100k=wamAppStatProxied100k, wamAppStatFromCacheBytes=wamAppStatFromCacheBytes, wamAppStatFromCache500k=wamAppStatFromCache500k, wamAppStatProxied50k=wamAppStatProxied50k, wamAppStatProxiedBypass=wamAppStatProxiedBypass, wamAppStatProxiedPerClientRequest=wamAppStatProxiedPerClientRequest, wamAppStatProxiedPerInvalidation=wamAppStatProxiedPerInvalidation, wamAppStatProxiedPerIrule=wamAppStatProxiedPerIrule, wamAppStatFromCache50k=wamAppStatFromCache50k, wamAppStatFromCache5m=wamAppStatFromCache5m, wamAppStatProxiedExpired=wamAppStatProxiedExpired, wamAppStatFromCacheLarge=wamAppStatFromCacheLarge, wamAppStatProxied5m=wamAppStatProxied5m, wamAppStatOws3xx=wamAppStatOws3xx)
