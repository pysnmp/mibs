#
# PySNMP MIB module InterSeptor-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/jacarta/InterSeptor-MIB
# Produced by pysmi-1.1.12 at Wed May 29 07:19:39 2024
# On host fv-az1114-382 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, IpAddress, Gauge32, MibIdentifier, ModuleIdentity, NotificationType, iso, ObjectIdentity, Unsigned32, enterprises, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "IpAddress", "Gauge32", "MibIdentifier", "ModuleIdentity", "NotificationType", "iso", "ObjectIdentity", "Unsigned32", "enterprises", "TimeTicks", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jacarta = MibIdentifier((1, 3, 6, 1, 4, 1, 19011))
product = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1))
webAppliance = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3))
inSept = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1))
inSeptObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1))
inSeptTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2))
inSeptIdent = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 1))
inSeptConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2))
inSeptsensorMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3))
inSeptsensorConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4))
inSeptIdentManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptIdentManufacturer.setStatus('mandatory')
inSeptIdentModel = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptIdentModel.setStatus('mandatory')
inSeptIdentAgentSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptIdentAgentSoftwareVersion.setStatus('mandatory')
inSeptIdentName = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptIdentName.setStatus('mandatory')
inSeptConfigMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptConfigMibVersion.setStatus('mandatory')
inSeptConfigNetwork = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 2))
inSeptConfigIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigIpAddress.setStatus('mandatory')
inSeptConfigGateway = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigGateway.setStatus('mandatory')
inSeptConfigSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigSubnetMask.setStatus('mandatory')
inSeptConfigDateTime = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 3))
inSeptConfigDate = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigDate.setStatus('mandatory')
inSeptConfigTime = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigTime.setStatus('mandatory')
inSeptConfigTimeFromNtp = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigTimeFromNtp.setStatus('mandatory')
inSeptConfigNtpIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigNtpIpAddress.setStatus('mandatory')
inSeptConfigNtpTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28))).clone(namedValues=NamedValues(("gMT-1200", 1), ("gMT-1100", 2), ("gMT-1000", 3), ("gMT-0900", 4), ("gMT-0800", 5), ("gMT-0700", 6), ("gMT-0600", 7), ("gMT-0500", 8), ("gMT-0400", 9), ("gMT-0330", 10), ("gMT-0300", 11), ("gMT-0200", 12), ("gMT-0100", 13), ("gMT-0000", 14), ("gMT0100", 15), ("gMT0200", 16), ("gMT0300", 17), ("gMT0330", 18), ("gMT0400", 19), ("gMT0500", 20), ("gMT0530", 21), ("gMT0600", 22), ("gMT0700", 23), ("gMT0800", 24), ("gMT0900", 25), ("gMT1000", 26), ("gMT1100", 27), ("gMT1200", 28)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigNtpTimeZone.setStatus('mandatory')
inSeptConfigDayLightSaving = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigDayLightSaving.setStatus('mandatory')
inSeptConfigLog = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 4))
inSeptConfigHistoryLogFrequency = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigHistoryLogFrequency.setStatus('mandatory')
inSeptConfigExtHistoryLogFrequency = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigExtHistoryLogFrequency.setStatus('mandatory')
inSeptConfigConfigurationLog = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigConfigurationLog.setStatus('mandatory')
inSeptConfigDhcpStatue = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigDhcpStatue.setStatus('mandatory')
inSeptConfigPingStatue = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigPingStatue.setStatus('mandatory')
inSeptConfigTftpStatue = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigTftpStatue.setStatus('mandatory')
inSeptConfigTelnet = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 8))
inSeptConfigTelnetStatue = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigTelnetStatue.setStatus('mandatory')
inSeptConfigTelnetPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigTelnetPortNumber.setStatus('mandatory')
inSeptConfigHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 9))
inSeptConfigHttpStatue = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigHttpStatue.setStatus('mandatory')
inSeptConfigHttpPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigHttpPortNumber.setStatus('mandatory')
inSeptConfigHttpSecurity = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigHttpSecurity.setStatus('mandatory')
inSeptConfigSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 10))
inSeptConfigSnmpStatue = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigSnmpStatue.setStatus('mandatory')
inSeptConfigSnmpPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 10, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigSnmpPortNumber.setStatus('mandatory')
inSeptConfigControl = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 11))
inSeptConfigResetToDefault = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigResetToDefault.setStatus('mandatory')
inSeptConfigRestart = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("restart", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigRestart.setStatus('mandatory')
inSeptConfigTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 12))
inSeptConfigTrapRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 12, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigTrapRetryCount.setStatus('mandatory')
inSeptConfigTrapRetryTime = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 12, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigTrapRetryTime.setStatus('mandatory')
inSeptConfigTrapAckSignature = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 12, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigTrapAckSignature.setStatus('mandatory')
inSeptConfigPollRate = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigPollRate.setStatus('mandatory')
inSeptConfigTrapsReceiversTable = MibTable((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 14), )
if mibBuilder.loadTexts: inSeptConfigTrapsReceiversTable.setStatus('mandatory')
inSeptConfigTrapsReceiversEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 14, 1), ).setIndexNames((0, "InterSeptor-MIB", "inSepttrapsIndex"))
if mibBuilder.loadTexts: inSeptConfigTrapsReceiversEntry.setStatus('mandatory')
inSepttrapsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSepttrapsIndex.setStatus('mandatory')
inSepttrapsReceiverAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 14, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSepttrapsReceiverAddr.setStatus('mandatory')
inSeptreceiverCommunityString = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 14, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptreceiverCommunityString.setStatus('mandatory')
inSeptreceiverSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("informational", 1), ("warning", 2), ("severe", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptreceiverSeverityLevel.setStatus('mandatory')
inSeptreceiverDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 14, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptreceiverDescription.setStatus('mandatory')
inSeptConfigAccessControlTable = MibTable((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 15), )
if mibBuilder.loadTexts: inSeptConfigAccessControlTable.setStatus('mandatory')
inSeptConfigAccessControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 15, 1), ).setIndexNames((0, "InterSeptor-MIB", "accessIndex"))
if mibBuilder.loadTexts: inSeptConfigAccessControlEntry.setStatus('mandatory')
accessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: accessIndex.setStatus('mandatory')
accessControlAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 15, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessControlAddr.setStatus('mandatory')
accessCommunityString = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 15, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessCommunityString.setStatus('mandatory')
accessControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("readOnly", 1), ("read-write", 2), ("notAccess", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessControlMode.setStatus('mandatory')
inSeptConfigTemperatureUnit = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("celsius", 1), ("fahrenheit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigTemperatureUnit.setStatus('mandatory')
inSeptConfigDateFormat = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dd-mm-yyyy", 1), ("mm-dd-yyyy", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptConfigDateFormat.setStatus('mandatory')
inSeptsensorMonitorSensorNumber = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptsensorMonitorSensorNumber.setStatus('mandatory')
inSeptsensorMonitorSensorTable = MibTable((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3, 2), )
if mibBuilder.loadTexts: inSeptsensorMonitorSensorTable.setStatus('mandatory')
inSeptsensorMonitorSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3, 2, 1), ).setIndexNames((0, "InterSeptor-MIB", "inSeptsensorMonitorDeviceIndex"))
if mibBuilder.loadTexts: inSeptsensorMonitorSensorEntry.setStatus('mandatory')
inSeptsensorMonitorDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptsensorMonitorDeviceIndex.setStatus('mandatory')
inSeptsensorMonitorDeviceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("eMD-HT", 3), ("eMD-T", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptsensorMonitorDeviceStatus.setStatus('mandatory')
inSeptsensorMonitorDeviceTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptsensorMonitorDeviceTemperature.setStatus('mandatory')
inSeptsensorMonitorDeviceTemperatureAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("normal", 3), ("lowWarning", 4), ("lowCritical", 5), ("highWarning", 6), ("highCritical", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptsensorMonitorDeviceTemperatureAlarm.setStatus('mandatory')
inSeptsensorMonitorDeviceHumidity = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptsensorMonitorDeviceHumidity.setStatus('mandatory')
inSeptsensorMonitorDeviceHumidityAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("normal", 3), ("lowWarning", 4), ("lowCritical", 5), ("highWarning", 6), ("highCritical", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptsensorMonitorDeviceHumidityAlarm.setStatus('mandatory')
inSeptsensorMonitorAlarm1 = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("active", 3), ("inactive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptsensorMonitorAlarm1.setStatus('mandatory')
inSeptsensorMonitorAlarm2 = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("active", 3), ("inactive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptsensorMonitorAlarm2.setStatus('mandatory')
inSeptsensorConfigSensorNumber = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptsensorConfigSensorNumber.setStatus('mandatory')
inSeptsensorConfigSensorTable = MibTable((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 2), )
if mibBuilder.loadTexts: inSeptsensorConfigSensorTable.setStatus('mandatory')
inSeptsensorConfigSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 2, 1), ).setIndexNames((0, "InterSeptor-MIB", "inSeptsensorConfigDeviceIndex"))
if mibBuilder.loadTexts: inSeptsensorConfigSensorEntry.setStatus('mandatory')
inSeptsensorConfigDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inSeptsensorConfigDeviceIndex.setStatus('mandatory')
inSeptsensorConfigDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigDeviceName.setStatus('mandatory')
inSeptsensorConfigDeviceState = MibTableColumn((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigDeviceState.setStatus('mandatory')
inSeptsensorConfigSensor1 = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3))
inSeptsensorConfigSensor1DeviceName = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1DeviceName.setStatus('mandatory')
inSeptsensorConfigSensor1DeviceState = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1DeviceState.setStatus('mandatory')
inSeptsensorConfigSensor1Temperature = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3))
inSeptsensorConfigSensor1TemperatureName = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1TemperatureName.setStatus('mandatory')
inSeptsensorConfigSensor1TemperatureLowWarning = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1TemperatureLowWarning.setStatus('mandatory')
inSeptsensorConfigSensor1TemperatureLowCritical = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1TemperatureLowCritical.setStatus('mandatory')
inSeptsensorConfigSensor1TemperatureHighWarning = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1TemperatureHighWarning.setStatus('mandatory')
inSeptsensorConfigSensor1TemperatureHighCritical = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1TemperatureHighCritical.setStatus('mandatory')
inSeptsensorConfigSensor1TemperatureHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1TemperatureHysteresis.setStatus('mandatory')
inSeptsensorConfigSensor1TemperatureCalibration = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("temperatureIncrease0Point0", 1), ("temperatureIncrease0Point5", 2), ("temperatureIncrease1Point0", 3), ("temperatureIncrease1Point5", 4), ("temperatureIncrease2Point0", 5), ("temperatureIncrease2Point5", 6), ("temperatureIncrease3Point0", 7), ("temperatureMinus0Point5", 8), ("temperatureMinus1Point0", 9), ("temperatureMinus1Point5", 10), ("temperatureMinus2Point0", 11), ("temperatureMinus2Point5", 12), ("temperatureMinusPoint0", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1TemperatureCalibration.setStatus('mandatory')
inSeptsensorConfigSensor1TemperatureLowWarningStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1TemperatureLowWarningStatus.setStatus('mandatory')
inSeptsensorConfigSensor1TemperatureLowCriticalStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1TemperatureLowCriticalStatus.setStatus('mandatory')
inSeptsensorConfigSensor1TemperatureHighWarningStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1TemperatureHighWarningStatus.setStatus('mandatory')
inSeptsensorConfigSensor1TemperatureHighCriticalStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1TemperatureHighCriticalStatus.setStatus('mandatory')
inSeptsensorConfigSensor1Humidity = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4))
inSeptsensorConfigSensor1HumdityName = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1HumdityName.setStatus('mandatory')
inSeptsensorConfigSensor1HumidityLowWarning = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1HumidityLowWarning.setStatus('mandatory')
inSeptsensorConfigSensor1HumidityLowCritical = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1HumidityLowCritical.setStatus('mandatory')
inSeptsensorConfigSensor1HumidityHighWarning = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1HumidityHighWarning.setStatus('mandatory')
inSeptsensorConfigSensor1HumidityHighCritical = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1HumidityHighCritical.setStatus('mandatory')
inSeptsensorConfigSensor1HumidityHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1HumidityHysteresis.setStatus('mandatory')
inSeptsensorConfigSensor1HumidityCalibration = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("humidityIncrease0Point0", 1), ("humidityIncrease1Point0", 2), ("humidityIncrease2Point0", 3), ("humidityIncrease3Point0", 4), ("humidityIncrease4Point0", 5), ("humidityIncrease5Point0", 6), ("humidityIncrease6Point0", 7), ("humidityMinus1Point0", 8), ("humidityMinus2Point0", 9), ("humidityMinus3Point0", 10), ("humidityMinus4Point0", 11), ("humidityMinus5Point0", 12), ("humidityMinus6Point0", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1HumidityCalibration.setStatus('mandatory')
inSeptsensorConfigSensor1HumidityLowWarningStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1HumidityLowWarningStatus.setStatus('mandatory')
inSeptsensorConfigSensor1HumidityLowCriticalStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1HumidityLowCriticalStatus.setStatus('mandatory')
inSeptsensorConfigSensor1HumidityHighWarningStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1HumidityHighWarningStatus.setStatus('mandatory')
inSeptsensorConfigSensor1HumidityHighCriticalStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1HumidityHighCriticalStatus.setStatus('mandatory')
inSeptsensorConfigSensor1Alarm1 = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 5))
inSeptsensorConfigSensor1Alarm1Name = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1Alarm1Name.setStatus('mandatory')
inSeptsensorConfigSensor1Alarm1State = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("normalOpen", 2), ("normalClose", 3), ("highActive", 4), ("lowActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1Alarm1State.setStatus('mandatory')
inSeptsensorConfigSensor1Alarm1Hysteresis = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1Alarm1Hysteresis.setStatus('mandatory')
inSeptsensorConfigSensor1Alarm2 = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 6))
inSeptsensorConfigSensor1Alarm2Name = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1Alarm2Name.setStatus('mandatory')
inSeptsensorConfigSensor1Alarm2State = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("normalOpen", 2), ("normalClose", 3), ("highActive", 4), ("lowActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1Alarm2State.setStatus('mandatory')
inSeptsensorConfigSensor1Alarm2Hysteresis = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 3, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor1Alarm2Hysteresis.setStatus('mandatory')
inSeptsensorConfigSensor2 = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4))
inSeptsensorConfigSensor2DeviceName = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2DeviceName.setStatus('mandatory')
inSeptsensorConfigSensor2DeviceState = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2DeviceState.setStatus('mandatory')
inSeptsensorConfigSensor2Temperature = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3))
inSeptsensorConfigSensor2TemperatureName = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2TemperatureName.setStatus('mandatory')
inSeptsensorConfigSensor2TemperatureLowWarning = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2TemperatureLowWarning.setStatus('mandatory')
inSeptsensorConfigSensor2TemperatureLowCritical = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2TemperatureLowCritical.setStatus('mandatory')
inSeptsensorConfigSensor2TemperatureHighWarning = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2TemperatureHighWarning.setStatus('mandatory')
inSeptsensorConfigSensor2TemperatureHighCritical = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2TemperatureHighCritical.setStatus('mandatory')
inSeptsensorConfigSensor2TemperatureHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2TemperatureHysteresis.setStatus('mandatory')
inSeptsensorConfigSensor2TemperatureCalibration = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("temperatureIncrease0Point0", 1), ("temperatureIncrease0Point5", 2), ("temperatureIncrease1Point0", 3), ("temperatureIncrease1Point5", 4), ("temperatureIncrease2Point0", 5), ("temperatureIncrease2Point5", 6), ("temperatureIncrease3Point0", 7), ("temperatureMinus0Point5", 8), ("temperatureMinus1Point0", 9), ("temperatureMinus1Point5", 10), ("temperatureMinus2Point0", 11), ("temperatureMinus2Point5", 12), ("temperatureMinusPoint0", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2TemperatureCalibration.setStatus('mandatory')
inSeptsensorConfigSensor2TemperatureLowWarningStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2TemperatureLowWarningStatus.setStatus('mandatory')
inSeptsensorConfigSensor2TemperatureLowCriticalStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2TemperatureLowCriticalStatus.setStatus('mandatory')
inSeptsensorConfigSensor2TemperatureHighWarningStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2TemperatureHighWarningStatus.setStatus('mandatory')
inSeptsensorConfigSensor2TemperatureHighCriticalStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2TemperatureHighCriticalStatus.setStatus('mandatory')
inSeptsensorConfigSensor2Humidity = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4))
inSeptsensorConfigSensor2HumdityName = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2HumdityName.setStatus('mandatory')
inSeptsensorConfigSensor2HumidityLowWarning = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2HumidityLowWarning.setStatus('mandatory')
inSeptsensorConfigSensor2HumidityLowCritical = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2HumidityLowCritical.setStatus('mandatory')
inSeptsensorConfigSensor2HumidityHighWarning = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2HumidityHighWarning.setStatus('mandatory')
inSeptsensorConfigSensor2HumidityHighCritical = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2HumidityHighCritical.setStatus('mandatory')
inSeptsensorConfigSensor2HumidityHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2HumidityHysteresis.setStatus('mandatory')
inSeptsensorConfigSensor2HumidityCalibration = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("humidityIncrease0Point0", 1), ("humidityIncrease1Point0", 2), ("humidityIncrease2Point0", 3), ("humidityIncrease3Point0", 4), ("humidityIncrease4Point0", 5), ("humidityIncrease5Point0", 6), ("humidityIncrease6Point0", 7), ("humidityMinus1Point0", 8), ("humidityMinus2Point0", 9), ("humidityMinus3Point0", 10), ("humidityMinus4Point0", 11), ("humidityMinus5Point0", 12), ("humidityMinus6Point0", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2HumidityCalibration.setStatus('mandatory')
inSeptsensorConfigSensor2HumidityLowWarningStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2HumidityLowWarningStatus.setStatus('mandatory')
inSeptsensorConfigSensor2HumidityLowCriticalStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2HumidityLowCriticalStatus.setStatus('mandatory')
inSeptsensorConfigSensor2HumidityHighWarningStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2HumidityHighWarningStatus.setStatus('mandatory')
inSeptsensorConfigSensor2HumidityHighCriticalStatus = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2HumidityHighCriticalStatus.setStatus('mandatory')
inSeptsensorConfigSensor2Alarm1 = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 5))
inSeptsensorConfigSensor2Alarm1Name = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2Alarm1Name.setStatus('mandatory')
inSeptsensorConfigSensor2Alarm1State = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("normalOpen", 2), ("normalClose", 3), ("highActive", 4), ("lowActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2Alarm1State.setStatus('mandatory')
inSeptsensorConfigSensor2Alarm1Hysteresis = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2Alarm1Hysteresis.setStatus('mandatory')
inSeptsensorConfigSensor2Alarm2 = MibIdentifier((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 6))
inSeptsensorConfigSensor2Alarm2Name = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2Alarm2Name.setStatus('mandatory')
inSeptsensorConfigSensor2Alarm2State = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("normalOpen", 2), ("normalClose", 3), ("highActive", 4), ("lowActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2Alarm2State.setStatus('mandatory')
inSeptsensorConfigSensor2Alarm2Hysteresis = MibScalar((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 1, 4, 4, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inSeptsensorConfigSensor2Alarm2Hysteresis.setStatus('mandatory')
inSeptCommunicationRestored = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,1))
inSeptCommunicationLost = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,2))
inSeptAlarm1Inactive = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,3))
inSeptAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,4))
inSeptAlarm2Inactive = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,5))
inSeptAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,6))
inSeptTemperatureNotHighWarning = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,7))
inSeptTemperatureHighWarning = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,8))
inSeptTemperatureNotLowWarning = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,9))
inSeptTemperatureLowWarning = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,10))
inSeptTemperatureNotHighCritical = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,11))
inSeptTemperatureHighCritical = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,12))
inSeptTemperatureNotLowCritical = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,13))
inSeptTemperatureLowCritical = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,14))
inSeptHumidityNotHighWarning = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,15))
inSeptHumidityHighWarning = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,16))
inSeptHumidityNotLowWarning = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,17))
inSeptHumidityLowWarning = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,18))
inSeptHumidityNotHighCritical = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,19))
inSeptHumidityHighCritical = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,20))
inSeptHumidityNotLowCritical = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,21))
inSeptHumidityLowCritical = NotificationType((1, 3, 6, 1, 4, 1, 19011, 1, 3, 1, 2) + (0,22))
mibBuilder.exportSymbols("InterSeptor-MIB", inSeptsensorConfigSensor2TemperatureLowCritical=inSeptsensorConfigSensor2TemperatureLowCritical, inSeptsensorConfigSensor2HumidityLowWarningStatus=inSeptsensorConfigSensor2HumidityLowWarningStatus, inSeptTemperatureLowWarning=inSeptTemperatureLowWarning, inSeptsensorConfigSensor1TemperatureHighWarningStatus=inSeptsensorConfigSensor1TemperatureHighWarningStatus, inSeptConfigDate=inSeptConfigDate, inSeptHumidityHighWarning=inSeptHumidityHighWarning, inSeptsensorConfigDeviceIndex=inSeptsensorConfigDeviceIndex, inSeptConfigTimeFromNtp=inSeptConfigTimeFromNtp, inSeptConfigDateTime=inSeptConfigDateTime, inSeptConfigControl=inSeptConfigControl, inSeptsensorConfigSensor2Alarm2Name=inSeptsensorConfigSensor2Alarm2Name, inSeptConfigNtpIpAddress=inSeptConfigNtpIpAddress, inSeptsensorMonitorSensorEntry=inSeptsensorMonitorSensorEntry, inSeptsensorConfigSensor1HumidityHysteresis=inSeptsensorConfigSensor1HumidityHysteresis, inSeptConfigDhcpStatue=inSeptConfigDhcpStatue, inSeptConfigTrapRetryTime=inSeptConfigTrapRetryTime, inSeptsensorMonitorDeviceTemperatureAlarm=inSeptsensorMonitorDeviceTemperatureAlarm, inSeptsensorMonitorDeviceHumidityAlarm=inSeptsensorMonitorDeviceHumidityAlarm, inSeptreceiverCommunityString=inSeptreceiverCommunityString, inSeptTemperatureNotLowCritical=inSeptTemperatureNotLowCritical, inSeptHumidityNotHighWarning=inSeptHumidityNotHighWarning, inSeptConfigTime=inSeptConfigTime, inSeptConfigPingStatue=inSeptConfigPingStatue, inSeptConfigLog=inSeptConfigLog, inSeptCommunicationLost=inSeptCommunicationLost, inSept=inSept, inSeptsensorConfigSensor2HumidityHighCriticalStatus=inSeptsensorConfigSensor2HumidityHighCriticalStatus, inSeptIdentManufacturer=inSeptIdentManufacturer, inSeptIdentModel=inSeptIdentModel, inSeptsensorMonitorSensorTable=inSeptsensorMonitorSensorTable, inSeptConfigRestart=inSeptConfigRestart, inSeptreceiverSeverityLevel=inSeptreceiverSeverityLevel, inSeptsensorConfigSensor2TemperatureLowWarning=inSeptsensorConfigSensor2TemperatureLowWarning, inSeptsensorConfigSensor2HumidityHighCritical=inSeptsensorConfigSensor2HumidityHighCritical, inSeptConfigNtpTimeZone=inSeptConfigNtpTimeZone, inSeptObjects=inSeptObjects, inSeptsensorConfigSensor1Alarm2=inSeptsensorConfigSensor1Alarm2, inSeptConfigTftpStatue=inSeptConfigTftpStatue, jacarta=jacarta, inSeptsensorConfigSensor1TemperatureCalibration=inSeptsensorConfigSensor1TemperatureCalibration, inSeptsensorConfigSensor1=inSeptsensorConfigSensor1, inSeptsensorConfigSensor2TemperatureHighWarning=inSeptsensorConfigSensor2TemperatureHighWarning, inSeptConfigHttpStatue=inSeptConfigHttpStatue, inSeptsensorConfigSensor1Temperature=inSeptsensorConfigSensor1Temperature, inSeptIdentAgentSoftwareVersion=inSeptIdentAgentSoftwareVersion, inSeptsensorConfigSensor2HumidityHysteresis=inSeptsensorConfigSensor2HumidityHysteresis, inSeptsensorConfigSensor2Alarm2State=inSeptsensorConfigSensor2Alarm2State, inSeptsensorConfigSensor1Alarm2Name=inSeptsensorConfigSensor1Alarm2Name, inSeptConfigTrapsReceiversEntry=inSeptConfigTrapsReceiversEntry, inSeptsensorConfigDeviceState=inSeptsensorConfigDeviceState, inSeptsensorMonitor=inSeptsensorMonitor, inSeptsensorConfigSensor2Alarm1Name=inSeptsensorConfigSensor2Alarm1Name, inSeptsensorConfigSensorTable=inSeptsensorConfigSensorTable, inSeptHumidityNotHighCritical=inSeptHumidityNotHighCritical, inSeptTemperatureNotHighWarning=inSeptTemperatureNotHighWarning, inSeptsensorConfigSensor1TemperatureHysteresis=inSeptsensorConfigSensor1TemperatureHysteresis, inSeptConfigAccessControlTable=inSeptConfigAccessControlTable, inSeptsensorConfigSensor1HumidityCalibration=inSeptsensorConfigSensor1HumidityCalibration, inSeptsensorMonitorAlarm1=inSeptsensorMonitorAlarm1, inSeptsensorConfigSensor2TemperatureLowCriticalStatus=inSeptsensorConfigSensor2TemperatureLowCriticalStatus, inSeptAlarm1Inactive=inSeptAlarm1Inactive, inSeptConfigSubnetMask=inSeptConfigSubnetMask, inSeptConfigGateway=inSeptConfigGateway, inSeptreceiverDescription=inSeptreceiverDescription, inSeptsensorConfigSensor1TemperatureName=inSeptsensorConfigSensor1TemperatureName, inSeptConfigAccessControlEntry=inSeptConfigAccessControlEntry, inSeptsensorConfigSensor2Temperature=inSeptsensorConfigSensor2Temperature, product=product, inSeptConfig=inSeptConfig, inSeptTraps=inSeptTraps, inSeptsensorConfigSensor2Alarm2Hysteresis=inSeptsensorConfigSensor2Alarm2Hysteresis, inSeptsensorConfigSensor2Humidity=inSeptsensorConfigSensor2Humidity, inSeptsensorConfigSensor2HumdityName=inSeptsensorConfigSensor2HumdityName, inSeptsensorConfigSensor2Alarm1Hysteresis=inSeptsensorConfigSensor2Alarm1Hysteresis, inSeptTemperatureNotHighCritical=inSeptTemperatureNotHighCritical, inSeptsensorConfigDeviceName=inSeptsensorConfigDeviceName, inSeptsensorConfigSensor1HumidityHighCriticalStatus=inSeptsensorConfigSensor1HumidityHighCriticalStatus, inSeptAlarm1Active=inSeptAlarm1Active, inSeptsensorConfigSensor2=inSeptsensorConfigSensor2, inSeptsensorConfigSensor2HumidityLowWarning=inSeptsensorConfigSensor2HumidityLowWarning, inSeptsensorConfigSensor2HumidityCalibration=inSeptsensorConfigSensor2HumidityCalibration, inSeptsensorConfigSensor2HumidityLowCritical=inSeptsensorConfigSensor2HumidityLowCritical, inSeptsensorMonitorDeviceIndex=inSeptsensorMonitorDeviceIndex, inSeptsensorConfigSensor1TemperatureLowCriticalStatus=inSeptsensorConfigSensor1TemperatureLowCriticalStatus, inSeptsensorConfigSensor2Alarm1=inSeptsensorConfigSensor2Alarm1, inSeptConfigTelnetStatue=inSeptConfigTelnetStatue, inSeptsensorConfigSensor1TemperatureHighWarning=inSeptsensorConfigSensor1TemperatureHighWarning, inSeptConfigIpAddress=inSeptConfigIpAddress, inSeptsensorConfigSensor2Alarm2=inSeptsensorConfigSensor2Alarm2, inSeptsensorConfigSensor2HumidityHighWarning=inSeptsensorConfigSensor2HumidityHighWarning, inSeptsensorConfigSensor1HumidityLowWarning=inSeptsensorConfigSensor1HumidityLowWarning, inSeptConfigPollRate=inSeptConfigPollRate, inSeptConfigTemperatureUnit=inSeptConfigTemperatureUnit, inSeptsensorConfigSensor1HumidityHighWarning=inSeptsensorConfigSensor1HumidityHighWarning, inSeptsensorConfigSensor2DeviceState=inSeptsensorConfigSensor2DeviceState, inSeptsensorMonitorDeviceStatus=inSeptsensorMonitorDeviceStatus, inSeptsensorConfigSensor2HumidityLowCriticalStatus=inSeptsensorConfigSensor2HumidityLowCriticalStatus, inSeptsensorConfigSensor1HumidityHighCritical=inSeptsensorConfigSensor1HumidityHighCritical, accessControlMode=accessControlMode, inSeptIdentName=inSeptIdentName, inSeptConfigTelnet=inSeptConfigTelnet, inSeptsensorConfigSensor1TemperatureLowWarning=inSeptsensorConfigSensor1TemperatureLowWarning, inSeptsensorConfigSensor1HumidityLowWarningStatus=inSeptsensorConfigSensor1HumidityLowWarningStatus, inSeptConfigExtHistoryLogFrequency=inSeptConfigExtHistoryLogFrequency, inSeptCommunicationRestored=inSeptCommunicationRestored, inSeptsensorConfigSensor1DeviceName=inSeptsensorConfigSensor1DeviceName, inSeptConfigHistoryLogFrequency=inSeptConfigHistoryLogFrequency, inSeptsensorConfigSensorNumber=inSeptsensorConfigSensorNumber, inSeptsensorConfigSensor1Humidity=inSeptsensorConfigSensor1Humidity, inSeptConfigConfigurationLog=inSeptConfigConfigurationLog, inSeptsensorConfigSensor2Alarm1State=inSeptsensorConfigSensor2Alarm1State, inSeptConfigSnmp=inSeptConfigSnmp, inSeptConfigTrapAckSignature=inSeptConfigTrapAckSignature, inSeptsensorMonitorDeviceTemperature=inSeptsensorMonitorDeviceTemperature, inSeptHumidityHighCritical=inSeptHumidityHighCritical, inSeptsensorConfigSensor1HumdityName=inSeptsensorConfigSensor1HumdityName, inSeptsensorConfigSensor2TemperatureHighWarningStatus=inSeptsensorConfigSensor2TemperatureHighWarningStatus, inSeptAlarm2Active=inSeptAlarm2Active, inSepttrapsIndex=inSepttrapsIndex, inSeptsensorConfigSensor1Alarm2Hysteresis=inSeptsensorConfigSensor1Alarm2Hysteresis, inSeptsensorConfigSensor1DeviceState=inSeptsensorConfigSensor1DeviceState, inSeptsensorConfigSensor2TemperatureName=inSeptsensorConfigSensor2TemperatureName, inSeptsensorConfigSensor1HumidityHighWarningStatus=inSeptsensorConfigSensor1HumidityHighWarningStatus, inSeptConfigTrapsReceiversTable=inSeptConfigTrapsReceiversTable, accessControlAddr=accessControlAddr, inSeptsensorMonitorDeviceHumidity=inSeptsensorMonitorDeviceHumidity, inSeptsensorConfigSensor1HumidityLowCriticalStatus=inSeptsensorConfigSensor1HumidityLowCriticalStatus, accessIndex=accessIndex, inSeptsensorConfigSensor1HumidityLowCritical=inSeptsensorConfigSensor1HumidityLowCritical, inSeptsensorConfigSensor1TemperatureHighCriticalStatus=inSeptsensorConfigSensor1TemperatureHighCriticalStatus, inSeptsensorConfigSensor2HumidityHighWarningStatus=inSeptsensorConfigSensor2HumidityHighWarningStatus, inSeptConfigDateFormat=inSeptConfigDateFormat, inSeptsensorConfigSensor1Alarm1Hysteresis=inSeptsensorConfigSensor1Alarm1Hysteresis, accessCommunityString=accessCommunityString, inSeptConfigHttpPortNumber=inSeptConfigHttpPortNumber, inSeptConfigResetToDefault=inSeptConfigResetToDefault, inSeptsensorMonitorAlarm2=inSeptsensorMonitorAlarm2, inSeptHumidityNotLowCritical=inSeptHumidityNotLowCritical, inSeptConfigSnmpStatue=inSeptConfigSnmpStatue, inSeptsensorConfigSensor2TemperatureHighCritical=inSeptsensorConfigSensor2TemperatureHighCritical, inSeptsensorMonitorSensorNumber=inSeptsensorMonitorSensorNumber, inSeptsensorConfigSensor2TemperatureLowWarningStatus=inSeptsensorConfigSensor2TemperatureLowWarningStatus, inSeptConfigHttpSecurity=inSeptConfigHttpSecurity, inSeptsensorConfigSensor1TemperatureLowCritical=inSeptsensorConfigSensor1TemperatureLowCritical, inSeptHumidityLowCritical=inSeptHumidityLowCritical, inSeptTemperatureLowCritical=inSeptTemperatureLowCritical, inSeptsensorConfigSensor2TemperatureHighCriticalStatus=inSeptsensorConfigSensor2TemperatureHighCriticalStatus, inSeptHumidityNotLowWarning=inSeptHumidityNotLowWarning, inSeptsensorConfigSensor2TemperatureHysteresis=inSeptsensorConfigSensor2TemperatureHysteresis, inSeptConfigTrapRetryCount=inSeptConfigTrapRetryCount, webAppliance=webAppliance, inSeptsensorConfig=inSeptsensorConfig, inSeptsensorConfigSensor1TemperatureLowWarningStatus=inSeptsensorConfigSensor1TemperatureLowWarningStatus, inSeptHumidityLowWarning=inSeptHumidityLowWarning, inSeptsensorConfigSensor1TemperatureHighCritical=inSeptsensorConfigSensor1TemperatureHighCritical, inSeptAlarm2Inactive=inSeptAlarm2Inactive, inSeptsensorConfigSensor1Alarm1State=inSeptsensorConfigSensor1Alarm1State, inSeptsensorConfigSensor1Alarm2State=inSeptsensorConfigSensor1Alarm2State, inSeptsensorConfigSensor2DeviceName=inSeptsensorConfigSensor2DeviceName, inSeptConfigTelnetPortNumber=inSeptConfigTelnetPortNumber, inSeptConfigTrap=inSeptConfigTrap, inSeptsensorConfigSensor2TemperatureCalibration=inSeptsensorConfigSensor2TemperatureCalibration, inSeptConfigNetwork=inSeptConfigNetwork, inSepttrapsReceiverAddr=inSepttrapsReceiverAddr, inSeptTemperatureNotLowWarning=inSeptTemperatureNotLowWarning, inSeptTemperatureHighCritical=inSeptTemperatureHighCritical, inSeptTemperatureHighWarning=inSeptTemperatureHighWarning, inSeptConfigHttp=inSeptConfigHttp, inSeptIdent=inSeptIdent, inSeptConfigMibVersion=inSeptConfigMibVersion, inSeptsensorConfigSensorEntry=inSeptsensorConfigSensorEntry, inSeptConfigDayLightSaving=inSeptConfigDayLightSaving, inSeptConfigSnmpPortNumber=inSeptConfigSnmpPortNumber, inSeptsensorConfigSensor1Alarm1Name=inSeptsensorConfigSensor1Alarm1Name, inSeptsensorConfigSensor1Alarm1=inSeptsensorConfigSensor1Alarm1)
