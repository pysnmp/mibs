#
# PySNMP MIB module AT-LOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/allied/AT-LOG-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 12:18:39 2024
# On host fv-az1019-803 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
modules, = mibBuilder.importSymbols("AT-SMI-MIB", "modules")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Bits, ModuleIdentity, NotificationType, Gauge32, IpAddress, Counter64, ObjectIdentity, MibIdentifier, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "ModuleIdentity", "NotificationType", "Gauge32", "IpAddress", "Counter64", "ObjectIdentity", "MibIdentifier", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
log = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601))
log.setRevisions(('2016-06-23 00:00', '2012-06-08 00:00', '2012-06-07 00:00', '2011-05-30 00:00', '2011-04-18 00:00', '2010-09-07 00:00', '2010-06-14 05:11', '2008-10-08 00:00',))
if mibBuilder.loadTexts: log.setLastUpdated('201606230000Z')
if mibBuilder.loadTexts: log.setOrganization('Allied Telesis Labs New Zealand')
logNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 0))
logProcessKilledNotify = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 0, 1)).setObjects(("AT-LOG-MIB", "logProcessKilled"))
if mibBuilder.loadTexts: logProcessKilledNotify.setStatus('current')
logTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 1), )
if mibBuilder.loadTexts: logTable.setStatus('current')
logEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 1, 1), ).setIndexNames((0, "AT-LOG-MIB", "logIndex"))
if mibBuilder.loadTexts: logEntry.setStatus('current')
logIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: logIndex.setStatus('current')
logDate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logDate.setStatus('current')
logTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logTime.setStatus('current')
logFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logFacility.setStatus('current')
logSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logSeverity.setStatus('current')
logProgram = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logProgram.setStatus('current')
logMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logMessage.setStatus('current')
logOptions = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 2))
logSource = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bufferedLog", 1), ("permanentLog", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logSource.setStatus('current')
logAll = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logAll.setStatus('current')
clearLog = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clearLog.setStatus('current')
logProcessKilled = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 601, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logProcessKilled.setStatus('current')
mibBuilder.exportSymbols("AT-LOG-MIB", logProcessKilledNotify=logProcessKilledNotify, log=log, logTime=logTime, logSeverity=logSeverity, logMessage=logMessage, logNotifications=logNotifications, logAll=logAll, logSource=logSource, clearLog=clearLog, logDate=logDate, logTable=logTable, logEntry=logEntry, PYSNMP_MODULE_ID=log, logProcessKilled=logProcessKilled, logIndex=logIndex, logOptions=logOptions, logProgram=logProgram, logFacility=logFacility)
