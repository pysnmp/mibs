#
# PySNMP MIB module CTRON-FRONTPANEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-FRONTPANEL-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 13:32:29 2024
# On host fv-az573-215 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ctFpRedundancy, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctFpRedundancy")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter32, IpAddress, TimeTicks, ModuleIdentity, Counter64, MibIdentifier, Bits, Integer32, NotificationType, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "IpAddress", "TimeTicks", "ModuleIdentity", "Counter64", "MibIdentifier", "Bits", "Integer32", "NotificationType", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ctFpRedund = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1))
ctFpRedundReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noReset", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctFpRedundReset.setStatus('mandatory')
ctFpRedundPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctFpRedundPollInterval.setStatus('mandatory')
ctFpRedundRetrys = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctFpRedundRetrys.setStatus('mandatory')
ctFpRedundNumAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctFpRedundNumAddr.setStatus('mandatory')
ctFpRedundAddAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctFpRedundAddAddr.setStatus('mandatory')
ctFpRedundDelAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctFpRedundDelAddr.setStatus('mandatory')
ctFpRedundActivePort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctFpRedundActivePort.setStatus('mandatory')
ctFpRedundEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctFpRedundEnable.setStatus('mandatory')
ctFpRedundAddrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 9), )
if mibBuilder.loadTexts: ctFpRedundAddrTable.setStatus('mandatory')
ctFpRedundAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 9, 1), ).setIndexNames((0, "CTRON-FRONTPANEL-MIB", "ctFpRedundAddrId"))
if mibBuilder.loadTexts: ctFpRedundAddrEntry.setStatus('mandatory')
ctFpRedundAddrId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctFpRedundAddrId.setStatus('mandatory')
ctFpRedundAddrIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 5, 1, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctFpRedundAddrIPAddr.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-FRONTPANEL-MIB", ctFpRedundAddrId=ctFpRedundAddrId, ctFpRedundDelAddr=ctFpRedundDelAddr, ctFpRedundAddrIPAddr=ctFpRedundAddrIPAddr, ctFpRedundAddrEntry=ctFpRedundAddrEntry, ctFpRedundPollInterval=ctFpRedundPollInterval, ctFpRedundReset=ctFpRedundReset, ctFpRedund=ctFpRedund, ctFpRedundEnable=ctFpRedundEnable, ctFpRedundActivePort=ctFpRedundActivePort, ctFpRedundAddrTable=ctFpRedundAddrTable, ctFpRedundRetrys=ctFpRedundRetrys, ctFpRedundNumAddr=ctFpRedundNumAddr, ctFpRedundAddAddr=ctFpRedundAddAddr)
