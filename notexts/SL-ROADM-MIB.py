#
# PySNMP MIB module SL-ROADM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/packetlight/SL-ROADM-MIB
# Produced by pysmi-1.1.12 at Mon Sep 16 14:59:17 2024
# On host fv-az1272-448 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
slService, = mibBuilder.importSymbols("SL-NE-MIB", "slService")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, Gauge32, ModuleIdentity, Counter64, NotificationType, iso, TimeTicks, Counter32, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Gauge32", "ModuleIdentity", "Counter64", "NotificationType", "iso", "TimeTicks", "Counter32", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "Bits")
DateAndTime, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention", "TruthValue")
slROADM = ModuleIdentity((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16))
if mibBuilder.loadTexts: slROADM.setLastUpdated('0508171200Z')
if mibBuilder.loadTexts: slROADM.setOrganization('PacketLight Networks Ltd.')
slROADMConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1))
slROADMPm = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 2))
slROADMTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 3))
class ROCHProvisioningType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("exp", 2), ("add", 3))

slWSSConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1), )
if mibBuilder.loadTexts: slWSSConfigTable.setStatus('current')
slWSSConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1, 1), ).setIndexNames((0, "SL-ROADM-MIB", "slWSSConfigLineIndex"))
if mibBuilder.loadTexts: slWSSConfigEntry.setStatus('current')
slWSSConfigLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slWSSConfigLineIndex.setStatus('current')
slWSSConfigOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slWSSConfigOperStatus.setStatus('current')
slWSSConfigSwitchTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slWSSConfigSwitchTemp.setStatus('current')
slWSSConfigBoardTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slWSSConfigBoardTemp.setStatus('current')
slWSSConfigCaseTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slWSSConfigCaseTemp.setStatus('current')
slWSSConfigUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slWSSConfigUptime.setStatus('current')
slWSSConfigComFirstWl = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slWSSConfigComFirstWl.setStatus('current')
slWSSConfigComChCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slWSSConfigComChCount.setStatus('current')
slWSSConfigPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slWSSConfigPowerLevel.setStatus('current')
slWSSConfigAttenLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slWSSConfigAttenLevel.setStatus('current')
slROCHConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2), )
if mibBuilder.loadTexts: slROCHConfigTable.setStatus('current')
slROCHConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1), ).setIndexNames((0, "SL-ROADM-MIB", "slROCHConfigLineIndex"))
if mibBuilder.loadTexts: slROCHConfigEntry.setStatus('current')
slROCHConfigLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slROCHConfigLineIndex.setStatus('current')
slROCHConfigProvisioning = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1, 2), ROCHProvisioningType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slROCHConfigProvisioning.setStatus('current')
slROCHConfigInPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slROCHConfigInPowerLevel.setStatus('current')
slROCHConfigOutPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slROCHConfigOutPowerLevel.setStatus('current')
slROCHConfigChannelDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slROCHConfigChannelDetect.setStatus('current')
slROCHConfigChPowerFailHighThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slROCHConfigChPowerFailHighThresh.setStatus('current')
slROCHConfigChPowerFailLowThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slROCHConfigChPowerFailLowThresh.setStatus('current')
slROCHConfigChPowerDegHighThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slROCHConfigChPowerDegHighThresh.setStatus('current')
slROCHConfigChPowerDegLowThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slROCHConfigChPowerDegLowThresh.setStatus('current')
slROCHConfigChPowerHystHighThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slROCHConfigChPowerHystHighThresh.setStatus('current')
slROCHConfigChPowerHystLowThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 16, 1, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slROCHConfigChPowerHystLowThresh.setStatus('current')
mibBuilder.exportSymbols("SL-ROADM-MIB", slWSSConfigComFirstWl=slWSSConfigComFirstWl, slROADM=slROADM, slROCHConfigChannelDetect=slROCHConfigChannelDetect, slROADMTraps=slROADMTraps, slROCHConfigChPowerDegLowThresh=slROCHConfigChPowerDegLowThresh, slROCHConfigLineIndex=slROCHConfigLineIndex, slWSSConfigEntry=slWSSConfigEntry, slWSSConfigPowerLevel=slWSSConfigPowerLevel, slROCHConfigTable=slROCHConfigTable, slROCHConfigChPowerHystHighThresh=slROCHConfigChPowerHystHighThresh, slWSSConfigTable=slWSSConfigTable, slWSSConfigUptime=slWSSConfigUptime, slROCHConfigProvisioning=slROCHConfigProvisioning, slWSSConfigLineIndex=slWSSConfigLineIndex, slROCHConfigEntry=slROCHConfigEntry, slROCHConfigChPowerHystLowThresh=slROCHConfigChPowerHystLowThresh, slWSSConfigAttenLevel=slWSSConfigAttenLevel, slROCHConfigChPowerFailHighThresh=slROCHConfigChPowerFailHighThresh, slROADMPm=slROADMPm, slROADMConfig=slROADMConfig, slWSSConfigOperStatus=slWSSConfigOperStatus, slWSSConfigCaseTemp=slWSSConfigCaseTemp, slROCHConfigOutPowerLevel=slROCHConfigOutPowerLevel, slROCHConfigInPowerLevel=slROCHConfigInPowerLevel, slROCHConfigChPowerFailLowThresh=slROCHConfigChPowerFailLowThresh, slWSSConfigSwitchTemp=slWSSConfigSwitchTemp, ROCHProvisioningType=ROCHProvisioningType, slROCHConfigChPowerDegHighThresh=slROCHConfigChPowerDegHighThresh, slWSSConfigBoardTemp=slWSSConfigBoardTemp, slWSSConfigComChCount=slWSSConfigComChCount, PYSNMP_MODULE_ID=slROADM)
