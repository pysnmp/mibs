#
# PySNMP MIB module LIEBERT-GP-REGISTRATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/liebert/LIEBERT-GP-REG-MIB
# Produced by pysmi-1.1.12 at Sat Jul  6 01:11:16 2024
# On host fv-az1532-138 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, ModuleIdentity, iso, Counter32, Gauge32, MibIdentifier, ObjectIdentity, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, TimeTicks, IpAddress, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "iso", "Counter32", "Gauge32", "MibIdentifier", "ObjectIdentity", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "TimeTicks", "IpAddress", "Unsigned32", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
liebertGlobalProductsRegistrationModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 1, 1))
liebertGlobalProductsRegistrationModule.setRevisions(('2015-02-02 00:00', '2014-09-17 00:00', '2014-06-24 00:00', '2014-03-27 00:00', '2013-07-10 00:00', '2013-05-14 00:00', '2009-04-17 00:00', '2008-07-02 00:00', '2008-01-10 00:00', '2006-02-22 00:00',))
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setLastUpdated('201807120000Z')
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setOrganization('Liebert Corporation')
vertiv = ObjectIdentity((1, 3, 6, 1, 4, 1, 476))
if mibBuilder.loadTexts: vertiv.setStatus('current')
liebertCorp = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1))
if mibBuilder.loadTexts: liebertCorp.setStatus('current')
liebertGlobalProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42))
if mibBuilder.loadTexts: liebertGlobalProducts.setStatus('current')
lgpModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1))
if mibBuilder.loadTexts: lgpModuleReg.setStatus('current')
lgpAgent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2))
if mibBuilder.loadTexts: lgpAgent.setStatus('current')
lgpFoundation = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3))
if mibBuilder.loadTexts: lgpFoundation.setStatus('current')
lgpProductSpecific = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4))
if mibBuilder.loadTexts: lgpProductSpecific.setStatus('current')
liebertModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 1))
if mibBuilder.loadTexts: liebertModuleReg.setStatus('current')
liebertAgentModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 2))
if mibBuilder.loadTexts: liebertAgentModuleReg.setStatus('current')
liebertConditionsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 3))
if mibBuilder.loadTexts: liebertConditionsModuleReg.setStatus('current')
liebertNotificationsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 4))
if mibBuilder.loadTexts: liebertNotificationsModuleReg.setStatus('current')
liebertEnvironmentalModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 5))
if mibBuilder.loadTexts: liebertEnvironmentalModuleReg.setStatus('current')
liebertPowerModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 6))
if mibBuilder.loadTexts: liebertPowerModuleReg.setStatus('current')
liebertControllerModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 7))
if mibBuilder.loadTexts: liebertControllerModuleReg.setStatus('current')
liebertSystemModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 8))
if mibBuilder.loadTexts: liebertSystemModuleReg.setStatus('current')
liebertPduModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 9))
if mibBuilder.loadTexts: liebertPduModuleReg.setStatus('current')
liebertFlexibleModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 10))
if mibBuilder.loadTexts: liebertFlexibleModuleReg.setStatus('current')
liebertFlexibleConditionsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 11))
if mibBuilder.loadTexts: liebertFlexibleConditionsModuleReg.setStatus('current')
liebertSrcModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 12))
if mibBuilder.loadTexts: liebertSrcModuleReg.setStatus('current')
lgpAgentIdent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1))
if mibBuilder.loadTexts: lgpAgentIdent.setStatus('current')
lgpAgentNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3))
if mibBuilder.loadTexts: lgpAgentNotifications.setStatus('current')
lgpAgentDevice = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4))
if mibBuilder.loadTexts: lgpAgentDevice.setStatus('current')
lgpAgentControl = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5))
if mibBuilder.loadTexts: lgpAgentControl.setStatus('current')
lgpConditions = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2))
if mibBuilder.loadTexts: lgpConditions.setStatus('current')
lgpNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3))
if mibBuilder.loadTexts: lgpNotifications.setStatus('current')
lgpEnvironmental = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 4))
if mibBuilder.loadTexts: lgpEnvironmental.setStatus('current')
lgpPower = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 5))
if mibBuilder.loadTexts: lgpPower.setStatus('current')
lgpController = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 6))
if mibBuilder.loadTexts: lgpController.setStatus('current')
lgpSystem = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 7))
if mibBuilder.loadTexts: lgpSystem.setStatus('current')
lgpPdu = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 8))
if mibBuilder.loadTexts: lgpPdu.setStatus('current')
lgpFlexible = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 9))
if mibBuilder.loadTexts: lgpFlexible.setStatus('current')
lgpSrc = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 10))
if mibBuilder.loadTexts: lgpSrc.setStatus('current')
lgpUpsProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2))
if mibBuilder.loadTexts: lgpUpsProducts.setStatus('current')
lgpAcProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3))
if mibBuilder.loadTexts: lgpAcProducts.setStatus('current')
lgpPowerConditioningProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4))
if mibBuilder.loadTexts: lgpPowerConditioningProducts.setStatus('current')
lgpTransferSwitchProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5))
if mibBuilder.loadTexts: lgpTransferSwitchProducts.setStatus('current')
lgpMultiLinkProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 7))
if mibBuilder.loadTexts: lgpMultiLinkProducts.setStatus('current')
lgpPowerDistributionProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8))
if mibBuilder.loadTexts: lgpPowerDistributionProducts.setStatus('current')
lgpCombinedSystemProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10))
if mibBuilder.loadTexts: lgpCombinedSystemProducts.setStatus('current')
lgpSeries7200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 1))
if mibBuilder.loadTexts: lgpSeries7200.setStatus('current')
lgpUPStationGXT = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 2))
if mibBuilder.loadTexts: lgpUPStationGXT.setStatus('current')
lgpPowerSureInteractive = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 3))
if mibBuilder.loadTexts: lgpPowerSureInteractive.setStatus('current')
lgpNfinity = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 4))
if mibBuilder.loadTexts: lgpNfinity.setStatus('current')
lgpNpower = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 5))
if mibBuilder.loadTexts: lgpNpower.setStatus('current')
lgpGXT2Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 6))
if mibBuilder.loadTexts: lgpGXT2Dual.setStatus('current')
lgpPowerSureInteractive2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 7))
if mibBuilder.loadTexts: lgpPowerSureInteractive2.setStatus('current')
lgpNX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 8))
if mibBuilder.loadTexts: lgpNX.setStatus('current')
lgpHiNet = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 9))
if mibBuilder.loadTexts: lgpHiNet.setStatus('current')
lgpNXL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 10))
if mibBuilder.loadTexts: lgpNXL.setStatus('current')
lgpSuper400 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 11))
if mibBuilder.loadTexts: lgpSuper400.setStatus('current')
lgpSeries600or610 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 12))
if mibBuilder.loadTexts: lgpSeries600or610.setStatus('current')
lgpSeries300 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 13))
if mibBuilder.loadTexts: lgpSeries300.setStatus('current')
lgpSeries610SMS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 14))
if mibBuilder.loadTexts: lgpSeries610SMS.setStatus('current')
lgpSeries610MMU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 15))
if mibBuilder.loadTexts: lgpSeries610MMU.setStatus('current')
lgpSeries610SCC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 16))
if mibBuilder.loadTexts: lgpSeries610SCC.setStatus('current')
lgpGXT3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 17))
if mibBuilder.loadTexts: lgpGXT3.setStatus('current')
lgpGXT3Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 18))
if mibBuilder.loadTexts: lgpGXT3Dual.setStatus('current')
lgpNXr = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19))
if mibBuilder.loadTexts: lgpNXr.setStatus('current')
lgpITA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 1))
if mibBuilder.loadTexts: lgpITA.setStatus('current')
lgpNXRb = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 2))
if mibBuilder.loadTexts: lgpNXRb.setStatus('current')
lgpNXC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 3))
if mibBuilder.loadTexts: lgpNXC.setStatus('current')
lgpNXC30to40k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 4))
if mibBuilder.loadTexts: lgpNXC30to40k.setStatus('current')
lgpITA30to40k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 5))
if mibBuilder.loadTexts: lgpITA30to40k.setStatus('current')
lgpAPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 20))
if mibBuilder.loadTexts: lgpAPS.setStatus('current')
lgpMUNiMx = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 22))
if mibBuilder.loadTexts: lgpMUNiMx.setStatus('current')
lgpGXT4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 23))
if mibBuilder.loadTexts: lgpGXT4.setStatus('current')
lgpGXT4Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 24))
if mibBuilder.loadTexts: lgpGXT4Dual.setStatus('current')
lgpEXL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 25))
if mibBuilder.loadTexts: lgpEXL.setStatus('current')
lgpEXM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26))
if mibBuilder.loadTexts: lgpEXM.setStatus('current')
lgpEXM208v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 1))
if mibBuilder.loadTexts: lgpEXM208v.setStatus('current')
lgpEXM400v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 2))
if mibBuilder.loadTexts: lgpEXM400v.setStatus('current')
lgpEXM480v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 3))
if mibBuilder.loadTexts: lgpEXM480v.setStatus('current')
lgpEPM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27))
if mibBuilder.loadTexts: lgpEPM.setStatus('current')
lgpEPM300k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 1))
if mibBuilder.loadTexts: lgpEPM300k.setStatus('current')
lgpEPM400k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 2))
if mibBuilder.loadTexts: lgpEPM400k.setStatus('current')
lgpEPM500k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 3))
if mibBuilder.loadTexts: lgpEPM500k.setStatus('current')
lgpEPM600k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 4))
if mibBuilder.loadTexts: lgpEPM600k.setStatus('current')
lgpEPM800k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 5))
if mibBuilder.loadTexts: lgpEPM800k.setStatus('current')
lgpAPM600 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 9))
if mibBuilder.loadTexts: lgpAPM600.setStatus('current')
lgpEXLS1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 28))
if mibBuilder.loadTexts: lgpEXLS1.setStatus('current')
lgpEXLS1UPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 28, 1))
if mibBuilder.loadTexts: lgpEXLS1UPS.setStatus('current')
lgpEXMMSR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 29))
if mibBuilder.loadTexts: lgpEXMMSR.setStatus('current')
lgpITA2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31))
if mibBuilder.loadTexts: lgpITA2.setStatus('current')
lgpITA2cap20k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31, 1))
if mibBuilder.loadTexts: lgpITA2cap20k.setStatus('current')
lgpITA2cap40k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31, 2))
if mibBuilder.loadTexts: lgpITA2cap40k.setStatus('current')
lgpEXSRackMountAndFrame1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31, 3))
if mibBuilder.loadTexts: lgpEXSRackMountAndFrame1.setStatus('current')
lgpGXE = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31, 4))
if mibBuilder.loadTexts: lgpGXE.setStatus('current')
lgpITA2cap5k30k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 31, 5))
if mibBuilder.loadTexts: lgpITA2cap5k30k.setStatus('current')
lgpEXS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 32))
if mibBuilder.loadTexts: lgpEXS.setStatus('current')
lgpPowerSureInteractive5 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 33))
if mibBuilder.loadTexts: lgpPowerSureInteractive5.setStatus('current')
lgpGXT5 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 34))
if mibBuilder.loadTexts: lgpGXT5.setStatus('current')
lgpNXLJD = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 10, 1))
if mibBuilder.loadTexts: lgpNXLJD.setStatus('current')
lgpNX225to600k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 22, 1))
if mibBuilder.loadTexts: lgpNX225to600k.setStatus('current')
lgpAdvancedMicroprocessor = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 1))
if mibBuilder.loadTexts: lgpAdvancedMicroprocessor.setStatus('current')
lgpStandardMicroprocessor = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 2))
if mibBuilder.loadTexts: lgpStandardMicroprocessor.setStatus('current')
lgpMiniMate2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 3))
if mibBuilder.loadTexts: lgpMiniMate2.setStatus('current')
lgpHimod = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 4))
if mibBuilder.loadTexts: lgpHimod.setStatus('current')
lgpCEMS100orLECS15 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 5))
if mibBuilder.loadTexts: lgpCEMS100orLECS15.setStatus('current')
lgpIcom = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 6))
if mibBuilder.loadTexts: lgpIcom.setStatus('current')
lgpIcomPA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7))
if mibBuilder.loadTexts: lgpIcomPA.setStatus('current')
lgpIcomXD = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8))
if mibBuilder.loadTexts: lgpIcomXD.setStatus('current')
lgpIcomXP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9))
if mibBuilder.loadTexts: lgpIcomXP.setStatus('current')
lgpIcomSC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10))
if mibBuilder.loadTexts: lgpIcomSC.setStatus('current')
lgpIcomCR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 11))
if mibBuilder.loadTexts: lgpIcomCR.setStatus('current')
lgpIcomAH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 12))
if mibBuilder.loadTexts: lgpIcomAH.setStatus('current')
lgpIcomDCL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 13))
if mibBuilder.loadTexts: lgpIcomDCL.setStatus('current')
lgpIcomEEV = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 14))
if mibBuilder.loadTexts: lgpIcomEEV.setStatus('current')
lgpIcomPAtypeDS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 1))
if mibBuilder.loadTexts: lgpIcomPAtypeDS.setStatus('current')
lgpIcomPAtypeHPM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 2))
if mibBuilder.loadTexts: lgpIcomPAtypeHPM.setStatus('current')
lgpIcomPAtypeChallenger = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 3))
if mibBuilder.loadTexts: lgpIcomPAtypeChallenger.setStatus('current')
lgpIcomPAtypePeX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 4))
if mibBuilder.loadTexts: lgpIcomPAtypePeX.setStatus('current')
lgpIcomPAtypeDeluxeSys3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5))
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSys3.setStatus('current')
lgpIcomPAtypeDeluxeSystem3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5, 1))
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSystem3.setStatus('current')
lgpIcomPAtypeCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5, 2))
if mibBuilder.loadTexts: lgpIcomPAtypeCW.setStatus('current')
lgpIcomPAtypeJumboCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 6))
if mibBuilder.loadTexts: lgpIcomPAtypeJumboCW.setStatus('current')
lgpIcomPAtypeDSE = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 7))
if mibBuilder.loadTexts: lgpIcomPAtypeDSE.setStatus('current')
lgpIcomPAtypeDSE400 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 7, 1))
if mibBuilder.loadTexts: lgpIcomPAtypeDSE400.setStatus('current')
lgpIcomPAtypePEXS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8))
if mibBuilder.loadTexts: lgpIcomPAtypePEXS.setStatus('current')
lgpIcomPAtypePDXsmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8, 1))
if mibBuilder.loadTexts: lgpIcomPAtypePDXsmall.setStatus('current')
lgpIcomPAtypePCWsmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8, 2))
if mibBuilder.loadTexts: lgpIcomPAtypePCWsmall.setStatus('current')
lgpIcomPAtypePDX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9))
if mibBuilder.loadTexts: lgpIcomPAtypePDX.setStatus('current')
lgpIcomPAtypePDXlarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9, 1))
if mibBuilder.loadTexts: lgpIcomPAtypePDXlarge.setStatus('current')
lgpIcomPAtypePCWlarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9, 2))
if mibBuilder.loadTexts: lgpIcomPAtypePCWlarge.setStatus('current')
lgpIcomPAtypeHPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 10))
if mibBuilder.loadTexts: lgpIcomPAtypeHPS.setStatus('current')
lgpMiniMate3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 11))
if mibBuilder.loadTexts: lgpMiniMate3.setStatus('current')
lgpIcomXDtypeXDF = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8, 1))
if mibBuilder.loadTexts: lgpIcomXDtypeXDF.setStatus('current')
lgpIcomXDtypeXDFN = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8, 2))
if mibBuilder.loadTexts: lgpIcomXDtypeXDFN.setStatus('current')
lgpIcomXPtypeXDP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 1))
if mibBuilder.loadTexts: lgpIcomXPtypeXDP.setStatus('current')
lgpIcomXPtypeXDPCray = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 1, 1))
if mibBuilder.loadTexts: lgpIcomXPtypeXDPCray.setStatus('current')
lgpIcomXPtypeXDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 2))
if mibBuilder.loadTexts: lgpIcomXPtypeXDC.setStatus('current')
lgpIcomXPtypeXDPW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 3))
if mibBuilder.loadTexts: lgpIcomXPtypeXDPW.setStatus('current')
lgpIcomSCtypeHPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1))
if mibBuilder.loadTexts: lgpIcomSCtypeHPC.setStatus('current')
lgpIcomSCtypeHPCSSmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 1))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSSmall.setStatus('current')
lgpIcomSCtypeHPCSLarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 2))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSLarge.setStatus('current')
lgpIcomSCtypeHPCR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 3))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCR.setStatus('current')
lgpIcomSCtypeHPCM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 4))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCM.setStatus('current')
lgpIcomSCtypeHPCL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 5))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCL.setStatus('current')
lgpIcomSCtypeHPCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 6))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCW.setStatus('current')
lgpIcomCRtypeCRV = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 11, 1))
if mibBuilder.loadTexts: lgpIcomCRtypeCRV.setStatus('current')
lgpIcomAHStandard = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 12, 1))
if mibBuilder.loadTexts: lgpIcomAHStandard.setStatus('current')
lgpPMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4, 1))
if mibBuilder.loadTexts: lgpPMP.setStatus('current')
lgpEPMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4, 2))
if mibBuilder.loadTexts: lgpEPMP.setStatus('current')
lgpStaticTransferSwitchEDS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 1))
if mibBuilder.loadTexts: lgpStaticTransferSwitchEDS.setStatus('current')
lgpStaticTransferSwitch1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 2))
if mibBuilder.loadTexts: lgpStaticTransferSwitch1.setStatus('current')
lgpStaticTransferSwitch2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 3))
if mibBuilder.loadTexts: lgpStaticTransferSwitch2.setStatus('current')
lgpStaticTransferSwitch2FourPole = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 4))
if mibBuilder.loadTexts: lgpStaticTransferSwitch2FourPole.setStatus('current')
lgpMultiLinkBasicNotification = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 7, 1))
if mibBuilder.loadTexts: lgpMultiLinkBasicNotification.setStatus('current')
lgpRackPDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2))
if mibBuilder.loadTexts: lgpRackPDU.setStatus('current')
lgpMPX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2, 1))
if mibBuilder.loadTexts: lgpMPX.setStatus('current')
lgpMPH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2, 2))
if mibBuilder.loadTexts: lgpMPH.setStatus('current')
lgpRackPDU2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4))
if mibBuilder.loadTexts: lgpRackPDU2.setStatus('current')
lgpRPC2kMPX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4, 1))
if mibBuilder.loadTexts: lgpRPC2kMPX.setStatus('current')
lgpRPC2kMPH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4, 2))
if mibBuilder.loadTexts: lgpRPC2kMPH.setStatus('current')
lgpPMPandLDMF = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1))
if mibBuilder.loadTexts: lgpPMPandLDMF.setStatus('current')
lgpPMPgeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 1))
if mibBuilder.loadTexts: lgpPMPgeneric.setStatus('current')
lgpPMPonFPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 2))
if mibBuilder.loadTexts: lgpPMPonFPC.setStatus('current')
lgpPMPonPPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 3))
if mibBuilder.loadTexts: lgpPMPonPPC.setStatus('current')
lgpPMPonFDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 4))
if mibBuilder.loadTexts: lgpPMPonFDC.setStatus('current')
lgpPMPonRDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 5))
if mibBuilder.loadTexts: lgpPMPonRDC.setStatus('current')
lgpPMPonEXC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 6))
if mibBuilder.loadTexts: lgpPMPonEXC.setStatus('current')
lgpPMPonSTS2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 7))
if mibBuilder.loadTexts: lgpPMPonSTS2.setStatus('current')
lgpPMPonSTS2PDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 8))
if mibBuilder.loadTexts: lgpPMPonSTS2PDU.setStatus('current')
mibBuilder.exportSymbols("LIEBERT-GP-REGISTRATION-MIB", lgpMiniMate3=lgpMiniMate3, lgpSeries7200=lgpSeries7200, lgpSystem=lgpSystem, lgpEPM=lgpEPM, lgpGXT5=lgpGXT5, lgpPMPgeneric=lgpPMPgeneric, lgpHiNet=lgpHiNet, lgpGXT4=lgpGXT4, lgpIcomXDtypeXDF=lgpIcomXDtypeXDF, lgpPMPonRDC=lgpPMPonRDC, lgpNXC=lgpNXC, lgpITA2cap40k=lgpITA2cap40k, lgpSuper400=lgpSuper400, lgpPMPandLDMF=lgpPMPandLDMF, lgpModuleReg=lgpModuleReg, liebertAgentModuleReg=liebertAgentModuleReg, lgpNX225to600k=lgpNX225to600k, lgpIcomXP=lgpIcomXP, lgpAdvancedMicroprocessor=lgpAdvancedMicroprocessor, lgpIcomPAtypePDXlarge=lgpIcomPAtypePDXlarge, lgpStaticTransferSwitchEDS=lgpStaticTransferSwitchEDS, lgpGXT4Dual=lgpGXT4Dual, lgpRackPDU2=lgpRackPDU2, lgpIcom=lgpIcom, lgpNfinity=lgpNfinity, lgpMPH=lgpMPH, lgpIcomPAtypeHPS=lgpIcomPAtypeHPS, lgpIcomSC=lgpIcomSC, lgpIcomXPtypeXDPCray=lgpIcomXPtypeXDPCray, liebertControllerModuleReg=liebertControllerModuleReg, lgpEXLS1=lgpEXLS1, lgpAPS=lgpAPS, lgpPowerDistributionProducts=lgpPowerDistributionProducts, liebertPduModuleReg=liebertPduModuleReg, lgpRackPDU=lgpRackPDU, lgpCombinedSystemProducts=lgpCombinedSystemProducts, liebertCorp=liebertCorp, lgpIcomPAtypePDX=lgpIcomPAtypePDX, lgpITA2=lgpITA2, lgpStaticTransferSwitch2FourPole=lgpStaticTransferSwitch2FourPole, lgpIcomPAtypeChallenger=lgpIcomPAtypeChallenger, lgpIcomPAtypeCW=lgpIcomPAtypeCW, lgpPowerConditioningProducts=lgpPowerConditioningProducts, lgpNXC30to40k=lgpNXC30to40k, lgpEXSRackMountAndFrame1=lgpEXSRackMountAndFrame1, lgpMiniMate2=lgpMiniMate2, lgpProductSpecific=lgpProductSpecific, lgpIcomSCtypeHPCL=lgpIcomSCtypeHPCL, lgpEPM300k=lgpEPM300k, lgpITA2cap5k30k=lgpITA2cap5k30k, lgpPMPonEXC=lgpPMPonEXC, liebertSrcModuleReg=liebertSrcModuleReg, lgpPowerSureInteractive=lgpPowerSureInteractive, liebertFlexibleConditionsModuleReg=liebertFlexibleConditionsModuleReg, lgpPMPonPPC=lgpPMPonPPC, lgpIcomXPtypeXDC=lgpIcomXPtypeXDC, lgpEPMP=lgpEPMP, lgpAgent=lgpAgent, lgpNX=lgpNX, lgpSrc=lgpSrc, lgpIcomPAtypeJumboCW=lgpIcomPAtypeJumboCW, lgpEXM208v=lgpEXM208v, lgpIcomPAtypePDXsmall=lgpIcomPAtypePDXsmall, lgpEXM400v=lgpEXM400v, lgpIcomXPtypeXDP=lgpIcomXPtypeXDP, vertiv=vertiv, lgpUpsProducts=lgpUpsProducts, lgpMultiLinkBasicNotification=lgpMultiLinkBasicNotification, lgpITA30to40k=lgpITA30to40k, lgpIcomSCtypeHPCSLarge=lgpIcomSCtypeHPCSLarge, lgpIcomAH=lgpIcomAH, lgpIcomPAtypeDSE=lgpIcomPAtypeDSE, lgpEnvironmental=lgpEnvironmental, lgpIcomSCtypeHPCSSmall=lgpIcomSCtypeHPCSSmall, lgpIcomXPtypeXDPW=lgpIcomXPtypeXDPW, lgpIcomPAtypePEXS=lgpIcomPAtypePEXS, lgpIcomDCL=lgpIcomDCL, lgpMPX=lgpMPX, lgpTransferSwitchProducts=lgpTransferSwitchProducts, lgpAPM600=lgpAPM600, lgpAgentDevice=lgpAgentDevice, lgpFoundation=lgpFoundation, lgpNXLJD=lgpNXLJD, lgpPMPonSTS2PDU=lgpPMPonSTS2PDU, lgpConditions=lgpConditions, liebertPowerModuleReg=liebertPowerModuleReg, lgpIcomPAtypePeX=lgpIcomPAtypePeX, lgpEXL=lgpEXL, lgpEPM800k=lgpEPM800k, lgpITA2cap20k=lgpITA2cap20k, lgpPowerSureInteractive5=lgpPowerSureInteractive5, lgpPMPonFPC=lgpPMPonFPC, lgpPdu=lgpPdu, lgpIcomCRtypeCRV=lgpIcomCRtypeCRV, lgpStaticTransferSwitch2=lgpStaticTransferSwitch2, lgpIcomPAtypeDSE400=lgpIcomPAtypeDSE400, lgpIcomAHStandard=lgpIcomAHStandard, lgpNpower=lgpNpower, lgpIcomPA=lgpIcomPA, lgpPMP=lgpPMP, lgpIcomCR=lgpIcomCR, liebertGlobalProductsRegistrationModule=liebertGlobalProductsRegistrationModule, lgpAgentNotifications=lgpAgentNotifications, lgpEPM600k=lgpEPM600k, lgpRPC2kMPH=lgpRPC2kMPH, lgpStandardMicroprocessor=lgpStandardMicroprocessor, lgpEXLS1UPS=lgpEXLS1UPS, lgpCEMS100orLECS15=lgpCEMS100orLECS15, lgpAcProducts=lgpAcProducts, lgpIcomPAtypePCWlarge=lgpIcomPAtypePCWlarge, lgpRPC2kMPX=lgpRPC2kMPX, lgpFlexible=lgpFlexible, lgpEXS=lgpEXS, lgpIcomXDtypeXDFN=lgpIcomXDtypeXDFN, lgpEXM480v=lgpEXM480v, lgpNXRb=lgpNXRb, lgpNXr=lgpNXr, lgpIcomPAtypeDeluxeSystem3=lgpIcomPAtypeDeluxeSystem3, lgpIcomSCtypeHPCR=lgpIcomSCtypeHPCR, lgpSeries300=lgpSeries300, lgpNXL=lgpNXL, lgpIcomXD=lgpIcomXD, lgpIcomPAtypeHPM=lgpIcomPAtypeHPM, lgpHimod=lgpHimod, lgpAgentIdent=lgpAgentIdent, lgpPMPonSTS2=lgpPMPonSTS2, lgpGXT3Dual=lgpGXT3Dual, PYSNMP_MODULE_ID=liebertGlobalProductsRegistrationModule, lgpGXT3=lgpGXT3, lgpIcomPAtypeDS=lgpIcomPAtypeDS, lgpStaticTransferSwitch1=lgpStaticTransferSwitch1, lgpEPM400k=lgpEPM400k, liebertNotificationsModuleReg=liebertNotificationsModuleReg, liebertEnvironmentalModuleReg=liebertEnvironmentalModuleReg, lgpAgentControl=lgpAgentControl, lgpSeries600or610=lgpSeries600or610, liebertFlexibleModuleReg=liebertFlexibleModuleReg, liebertModuleReg=liebertModuleReg, lgpIcomSCtypeHPCW=lgpIcomSCtypeHPCW, liebertSystemModuleReg=liebertSystemModuleReg, lgpIcomSCtypeHPC=lgpIcomSCtypeHPC, lgpMUNiMx=lgpMUNiMx, lgpIcomPAtypeDeluxeSys3=lgpIcomPAtypeDeluxeSys3, lgpGXE=lgpGXE, lgpIcomEEV=lgpIcomEEV, lgpPower=lgpPower, lgpController=lgpController, liebertGlobalProducts=liebertGlobalProducts, lgpEPM500k=lgpEPM500k, lgpEXMMSR=lgpEXMMSR, lgpPMPonFDC=lgpPMPonFDC, liebertConditionsModuleReg=liebertConditionsModuleReg, lgpGXT2Dual=lgpGXT2Dual, lgpSeries610MMU=lgpSeries610MMU, lgpSeries610SCC=lgpSeries610SCC, lgpNotifications=lgpNotifications, lgpEXM=lgpEXM, lgpUPStationGXT=lgpUPStationGXT, lgpITA=lgpITA, lgpMultiLinkProducts=lgpMultiLinkProducts, lgpIcomPAtypePCWsmall=lgpIcomPAtypePCWsmall, lgpPowerSureInteractive2=lgpPowerSureInteractive2, lgpSeries610SMS=lgpSeries610SMS, lgpIcomSCtypeHPCM=lgpIcomSCtypeHPCM)
