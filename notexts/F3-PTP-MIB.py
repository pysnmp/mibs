#
# PySNMP MIB module F3-PTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/F3-PTP-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 11:11:32 2024
# On host fv-az525-771 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
fsp150cm, = mibBuilder.importSymbols("ADVA-MIB", "fsp150cm")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
OperationalState, SecondaryState, IpVersion, CmPmIntervalType, AdminState, IpPriorityMapMode, PerfCounter64, FlowSecState, CmPmBinAction, F3DisplayString = mibBuilder.importSymbols("CM-COMMON-MIB", "OperationalState", "SecondaryState", "IpVersion", "CmPmIntervalType", "AdminState", "IpPriorityMapMode", "PerfCounter64", "FlowSecState", "CmPmBinAction", "F3DisplayString")
shelfIndex, neIndex, slotIndex = mibBuilder.importSymbols("CM-ENTITY-MIB", "shelfIndex", "neIndex", "slotIndex")
cmEthernetNetPortIndex, cmEthernetTrafficPortIndex, cmEthernetAccPortIndex, cmEthernetTrafficPortEntry, cmEthernetNetPortEntry, cmEthernetAccPortEntry = mibBuilder.importSymbols("CM-FACILITY-MIB", "cmEthernetNetPortIndex", "cmEthernetTrafficPortIndex", "cmEthernetAccPortIndex", "cmEthernetTrafficPortEntry", "cmEthernetNetPortEntry", "cmEthernetAccPortEntry")
CmGenPgSwitchoverReason, = mibBuilder.importSymbols("CM-REDUNDANCY-MIB", "CmGenPgSwitchoverReason")
TimeSource, SSMQualityLevel, HoldoverAccuracy = mibBuilder.importSymbols("F3-SYNC-MIB", "TimeSource", "SSMQualityLevel", "HoldoverAccuracy")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, IpAddress, iso, Bits, Gauge32, NotificationType, MibIdentifier, ObjectIdentity, TimeTicks, ModuleIdentity, Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "iso", "Bits", "Gauge32", "NotificationType", "MibIdentifier", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
TruthValue, MacAddress, StorageType, VariablePointer, TextualConvention, DisplayString, RowStatus, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "MacAddress", "StorageType", "VariablePointer", "TextualConvention", "DisplayString", "RowStatus", "DateAndTime")
f3PtpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18))
f3PtpMIB.setRevisions(('2020-02-10 00:00',))
if mibBuilder.loadTexts: f3PtpMIB.setLastUpdated('202002100000Z')
if mibBuilder.loadTexts: f3PtpMIB.setOrganization('ADVA Optical Networking SE')
f3PtpConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1))
f3PtpPerformanceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2))
f3PtpPerformanceNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 3))
f3PtpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 4))
f3PtpStatusChangeNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 5))
class SlaveMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("not-applicable", 0), ("unicast", 1), ("multicast", 2), ("hybrid", 3))

class PtpFlowPointType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("transparent", 1), ("oc-slave", 2), ("monitoring", 3), ("oc-master", 4), ("eth-multicast", 5))

class PtpPortState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("initializing", 1), ("faulty", 2), ("disabled", 3), ("listening", 4), ("uncalibrated", 5), ("slave", 6), ("premaster", 7), ("master", 8), ("passive", 9), ("na", 10))

class MasterClockType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unknown", 1), ("one-step", 2), ("two-step", 3))

class PTPPortType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("master", 1), ("slave", 2))

class DelayMechanism(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("end-to-end", 1))

class ClockIdentity(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class PortIdentity(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(10, 10)
    fixedLength = 10

class ClockRecoveryMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("one-way", 1), ("two-way", 2))

class ClockRecoveryState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("not-applicable", 0), ("start", 1), ("normal", 2), ("freerun", 3), ("holdover", 4), ("acquisition", 5), ("transient", 6), ("none", 7), ("holdoverOutOfSpec", 8), ("holdoverInSpec", 9))

class AnnounceMsgRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("not-applicable", 0), ("pkt1per16secs", 1), ("pkt1per8secs", 2), ("pkt1per4secs", 3), ("pkt1per2secs", 4), ("pkt1per1sec", 5), ("pkts2per1sec", 6), ("pkts4per1sec", 7), ("pkts8per1sec", 8), ("none", 9))

class SyncMsgRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("not-applicable", 0), ("pkt1persec", 1), ("pkts2persec", 2), ("pkts4persec", 3), ("pkts8persec", 4), ("pkts16persec", 5), ("pkts32persec", 6), ("pkts64persec", 7), ("pkts128persec", 8), ("none", 9))

class DelayRespMsgRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("not-applicable", 0), ("pkt1persec", 1), ("pkts2persec", 2), ("pkts4persec", 3), ("pkts8persec", 4), ("pkts16persec", 5), ("pkts32persec", 6), ("pkts64persec", 7), ("pkts128persec", 8), ("none", 9), ("na", 10), ("pkts0persec", 11))

class DelayReqMsgRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("not-applicable", 0), ("pkt1persec", 1), ("pkts2persec", 2), ("pkts4persec", 3), ("pkts8persec", 4), ("pkts16persec", 5), ("pkts32persec", 6), ("pkts64persec", 7), ("pkts128persec", 8))

class FreqRecoveryTarget(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("not-applicable", 0), ("traffic-mask", 1), ("sync-mask", 2), ("traffic-sync-mask", 3))

class ScaledNanoseconds(TextualConvention, Counter64):
    status = 'current'

class RemoteSlaveType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("dynamic", 1), ("static", 2))

class TimeScale(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ptp", 1), ("arb", 2))

class PhaseRecoveryState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("not-applicable", 0), ("freerun", 1), ("holdover", 2), ("normal", 3), ("start", 4), ("acquisition", 5), ("transient", 6), ("none", 7), ("holdoverOutOfSpec", 8), ("holdoverInSpec", 9))

class PTPProtectionState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("standby", 2))

class CompensationMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("disabled", 1), ("automatic", 2), ("manual", 3))

class CompensationStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("operational", 1), ("failed", 2), ("not-available", 3), ("manual", 4), ("initializing", 5))

class PTPClockProfile(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("g8275-1", 1), ("ieee-1588-2008-annex-f", 2), ("ieee-1588-2008", 3), ("power-c37-238-2011", 4), ("power-c37-238-2017", 5), ("utility-iec-61850-9-3", 6), ("g8275-2", 7), ("gptp-802-1as-2011", 8))

class PTPClockType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("master-only", 1), ("slave-only", 2), ("dynamic", 3), ("boundaryclock", 4), ("static-bc", 5))

class PTPClockOperMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("t-gm", 1), ("t-tsc", 2), ("idle", 3), ("t-bc", 4), ("gm", 5))

class DestMacAddrType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("forwardable", 1), ("non-forwardable", 2))

class AnnounceMessageRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("not-applicable", 0), ("pkt1per16secs", 1), ("pkt1per8secs", 2), ("pkt1per4secs", 3), ("pkt1per2secs", 4), ("pkt1per1sec", 5), ("pkts2per1sec", 6), ("pkts4per1sec", 7), ("pkts8per1sec", 8), ("none", 9))

class DelayReqMessageRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("not-applicable", 0), ("pkt1persec", 1), ("pkts2persec", 2), ("pkts4persec", 3), ("pkts8persec", 4), ("pkts16persec", 5), ("pkts32persec", 6), ("pkts64persec", 7), ("pkts128persec", 8), ("none", 9), ("na", 10))

class SyncMessageRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("not-applicable", 0), ("pkt1persec", 1), ("pkts2persec", 2), ("pkts4persec", 3), ("pkts8persec", 4), ("pkts16persec", 5), ("pkts32persec", 6), ("pkts64persec", 7), ("pkts128persec", 8), ("none", 9))

class BMCARole(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("m1", 1), ("m2", 2), ("m3", 3), ("s1", 4), ("p1", 5), ("p2", 6), ("na", 7))

class ClockClassProfile(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("g82651", 1), ("ieee-1588-2008", 2), ("ptp-enterprise", 3), ("na", 4), ("g82752", 5), ("ptp-enterprise-and-ieee-1588-2008", 6))

class PTPProfile(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("g82651", 1), ("ptp-enterprise", 2), ("ieee-1588-2008", 3), ("g82752", 4), ("aes67-media", 5), ("smpte-st-2059-2", 6))

class PTPTransport(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("ethernet", 1), ("udp-over-ipv4", 2), ("udp-over-ipv6", 3))

class PTPTransportMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("unicast", 1), ("multicast", 2))

class ToggleValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2), ("not-available", 3))

f3PtpTCTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1), )
if mibBuilder.loadTexts: f3PtpTCTable.setStatus('current')
f3PtpTCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpTCIndex"))
if mibBuilder.loadTexts: f3PtpTCEntry.setStatus('current')
f3PtpTCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpTCIndex.setStatus('current')
f3PtpTCAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCAlias.setStatus('current')
f3PtpTCAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTCAdminState.setStatus('current')
f3PtpTCOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTCOperationalState.setStatus('current')
f3PtpTCSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTCSecondaryState.setStatus('current')
f3PtpTCServiceFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 6), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCServiceFlow.setStatus('current')
f3PtpTCDelayMechanism = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 7), DelayMechanism()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCDelayMechanism.setStatus('current')
f3PtpTCSync = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 8), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCSync.setStatus('current')
f3PtpTCClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 9), ClockIdentity()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCClockIdentity.setStatus('current')
f3PtpTCStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 10), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCStorageType.setStatus('current')
f3PtpTCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCRowStatus.setStatus('current')
f3PtpTCPtpProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 1, 1, 12), PTPClockProfile()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCPtpProfile.setStatus('current')
f3PtpTCVirtualPortTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 2), )
if mibBuilder.loadTexts: f3PtpTCVirtualPortTable.setStatus('current')
f3PtpTCVirtualPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpTCIndex"), (0, "F3-PTP-MIB", "f3PtpTCVirtualPortIndex"))
if mibBuilder.loadTexts: f3PtpTCVirtualPortEntry.setStatus('current')
f3PtpTCVirtualPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpTCVirtualPortIndex.setStatus('current')
f3PtpTCVirtualPortAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCVirtualPortAlias.setStatus('current')
f3PtpTCVirtualPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 2, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTCVirtualPortAdminState.setStatus('current')
f3PtpTCVirtualPortOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 2, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTCVirtualPortOperationalState.setStatus('current')
f3PtpTCVirtualPortSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 2, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTCVirtualPortSecondaryState.setStatus('current')
f3PtpTCVirtualPortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 2, 1, 6), PortIdentity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTCVirtualPortIdentity.setStatus('current')
f3PtpTCVirtualPortFlowPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 2, 1, 7), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCVirtualPortFlowPoint.setStatus('current')
f3PtpTCVirtualPortStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 2, 1, 8), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCVirtualPortStorageType.setStatus('current')
f3PtpTCVirtualPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTCVirtualPortRowStatus.setStatus('current')
f3PtpTSTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3), )
if mibBuilder.loadTexts: f3PtpTSTable.setStatus('current')
f3PtpTSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpTSIndex"))
if mibBuilder.loadTexts: f3PtpTSEntry.setStatus('current')
f3PtpTSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpTSIndex.setStatus('current')
f3PtpTSAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTSAlias.setStatus('current')
f3PtpTSAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSAdminState.setStatus('current')
f3PtpTSOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSOperationalState.setStatus('current')
f3PtpTSSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSSecondaryState.setStatus('current')
f3PtpTSClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 6), ClockIdentity()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTSClockIdentity.setStatus('current')
f3PtpTSDomainNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSDomainNumber.setStatus('current')
f3PtpTSSync = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 8), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTSSync.setStatus('current')
f3PtpTSCurrentTOD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSCurrentTOD.setStatus('current')
f3PtpTSSelectedPacketClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 10), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSSelectedPacketClock.setStatus('current')
f3PtpTSClockRecoveryMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 11), ClockRecoveryMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTSClockRecoveryMode.setStatus('current')
f3PtpTSClockRecoveryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 12), ClockRecoveryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSClockRecoveryState.setStatus('current')
f3PtpTSClockSyncEEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSClockSyncEEnabled.setStatus('current')
f3PtpTSClockQLModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSClockQLModeEnabled.setStatus('current')
f3PtpTSClockExpectedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 15), SSMQualityLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSClockExpectedQL.setStatus('current')
f3PtpTSClockAssumedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 16), SSMQualityLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSClockAssumedQL.setStatus('current')
f3PtpTSClockReceivedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 17), SSMQualityLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSClockReceivedQL.setStatus('current')
f3PtpTSStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 18), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTSStorageType.setStatus('current')
f3PtpTSRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTSRowStatus.setStatus('current')
f3PtpTSTimeTraceabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSTimeTraceabilityStatus.setStatus('current')
f3PtpTSTimeSinceTimeTraceabilityChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSTimeSinceTimeTraceabilityChanged.setStatus('current')
f3PtpTSFreqTraceabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSFreqTraceabilityStatus.setStatus('current')
f3PtpTSTimeSinceFreqTraceabilityChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSTimeSinceFreqTraceabilityChanged.setStatus('current')
f3PtpTSFreqRecoveryTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 24), FreqRecoveryTarget()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSFreqRecoveryTarget.setStatus('current')
f3PtpTSCurrentCRScore = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSCurrentCRScore.setStatus('current')
f3PtpTSTimeLastCRScore = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 26), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSTimeLastCRScore.setStatus('current')
f3PtpTSTargetPhaseRecoveryAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 27), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSTargetPhaseRecoveryAccuracy.setStatus('current')
f3PtpTSCurrentPRScore = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSCurrentPRScore.setStatus('current')
f3PtpTSTimeLastPRScore = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 29), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSTimeLastPRScore.setStatus('current')
f3PtpTSClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSClockClass.setStatus('deprecated')
f3PtpTSClockAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSClockAccuracy.setStatus('current')
f3PtpTSTimeSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 32), TimeSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSTimeSource.setStatus('current')
f3PtpTSPhaseRecoveryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 33), PhaseRecoveryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSPhaseRecoveryState.setStatus('current')
f3PtpTSTimeHoldoverAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 34), HoldoverAccuracy()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSTimeHoldoverAccuracy.setStatus('current')
f3PtpTSWtrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 3, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSWtrTime.setStatus('current')
f3PtpSOOCTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4), )
if mibBuilder.loadTexts: f3PtpSOOCTable.setStatus('current')
f3PtpSOOCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpTSIndex"), (0, "F3-PTP-MIB", "f3PtpSOOCIndex"))
if mibBuilder.loadTexts: f3PtpSOOCEntry.setStatus('current')
f3PtpSOOCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpSOOCIndex.setStatus('current')
f3PtpSOOCName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCName.setStatus('current')
f3PtpSOOCAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCAlias.setStatus('current')
f3PtpSOOCAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 4), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCAdminState.setStatus('current')
f3PtpSOOCOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 5), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCOperationalState.setStatus('current')
f3PtpSOOCSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 6), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCSecondaryState.setStatus('current')
f3PtpSOOCServiceFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 7), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCServiceFlow.setStatus('current')
f3PtpSOOCMasterClockType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 8), MasterClockType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCMasterClockType.setStatus('current')
f3PtpSOOCUnicastMessageNegEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCUnicastMessageNegEnabled.setStatus('current')
f3PtpSOOCMasterDelayMechanism = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 10), DelayMechanism()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCMasterDelayMechanism.setStatus('current')
f3PtpSOOCMasterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCMasterPriority.setStatus('current')
f3PtpSOOCMasterIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 12), IpVersion()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCMasterIpProtocol.setStatus('current')
f3PtpSOOCSlaveIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCSlaveIpV4Address.setStatus('current')
f3PtpSOOCSlaveIpV4SubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 14), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCSlaveIpV4SubnetMask.setStatus('current')
f3PtpSOOCMasterIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 15), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCMasterIpV4Address.setStatus('current')
f3PtpSOOCIpPriorityMapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 16), IpPriorityMapMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCIpPriorityMapMode.setStatus('current')
f3PtpSOOCIpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCIpPriority.setStatus('current')
f3PtpSOOCMasterLeaseDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 18), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCMasterLeaseDuration.setStatus('current')
f3PtpSOOCMasterAnnounceMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 19), AnnounceMsgRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCMasterAnnounceMsgRate.setStatus('current')
f3PtpSOOCMasterAnnounceMsgReceiptTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 20), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCMasterAnnounceMsgReceiptTimeout.setStatus('current')
f3PtpSOOCMasterSyncMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 21), SyncMsgRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCMasterSyncMsgRate.setStatus('current')
f3PtpSOOCMasterSyncReceiptTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 22), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCMasterSyncReceiptTimeout.setStatus('current')
f3PtpSOOCMasterDelayRspMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 23), DelayRespMsgRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCMasterDelayRspMsgRate.setStatus('current')
f3PtpSOOCMasterDelayRspReceiptTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 24), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCMasterDelayRspReceiptTimeout.setStatus('current')
f3PtpSOOCMasterRequestUnicastTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCMasterRequestUnicastTimeout.setStatus('current')
f3PtpSOOCMasterRequestUnicastRestartTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCMasterRequestUnicastRestartTimer.setStatus('current')
f3PtpSOOCCurrentOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 27), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCCurrentOffsetFromMaster.setStatus('current')
f3PtpSOOCAnnounceMsgClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCAnnounceMsgClockClass.setStatus('deprecated')
f3PtpSOOCLastReceivedAnnounceMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 29), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCLastReceivedAnnounceMsg.setStatus('current')
f3PtpSOOCLastReceivedSyncMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 30), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCLastReceivedSyncMsg.setStatus('current')
f3PtpSOOCLastReceivedDelayRspMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCLastReceivedDelayRspMsg.setStatus('current')
f3PtpSOOCRecentMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 32), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCRecentMeanPathDelay.setStatus('current')
f3PtpSOOCRecentSyncPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 33), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCRecentSyncPDV.setStatus('current')
f3PtpSOOCStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 34), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCStorageType.setStatus('current')
f3PtpSOOCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 35), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCRowStatus.setStatus('current')
f3PtpSOOCRecentSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 36), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCRecentSyncPathDelay.setStatus('current')
f3PtpSOOCSoocProtectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 37), PTPProtectionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCSoocProtectionState.setStatus('current')
f3PtpSOOCSoocWtr = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 38), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCSoocWtr.setStatus('current')
f3PtpSOOCSoocClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCSoocClockClass.setStatus('current')
f3PtpSOOCSoocClockRecoveryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 40), ClockRecoveryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCSoocClockRecoveryState.setStatus('current')
f3PtpSOOCSoocPhaseRecoveryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 41), PhaseRecoveryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCSoocPhaseRecoveryState.setStatus('current')
f3PtpSOOCE2eDelayAsymmetryComp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 42), CompensationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCE2eDelayAsymmetryComp.setStatus('current')
f3PtpSOOCE2eAutoAsymmetryCompStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 43), CompensationStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCE2eAutoAsymmetryCompStatus.setStatus('current')
f3PtpSOOCE2eDelayAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 44), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCE2eDelayAsymmetry.setStatus('current')
f3PtpSOOCSoocLockOutControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 45), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCSoocLockOutControl.setStatus('current')
f3PtpSOOCSlaveIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 46), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCSlaveIpV6Address.setStatus('current')
f3PtpSOOCSlaveIpV6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCSlaveIpV6AddrPrefixLength.setStatus('current')
f3PtpSOOCMasterIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 48), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCMasterIpV6Address.setStatus('current')
f3PtpSOOCMinimumExpectedClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCMinimumExpectedClockClass.setStatus('current')
f3PtpSOOCMasterMessageMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 50), SlaveMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCMasterMessageMode.setStatus('current')
f3PtpSOOCDefaultGatewayControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 51), ToggleValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCDefaultGatewayControl.setStatus('current')
f3PtpSOOCGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 52), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCGateway.setStatus('current')
f3PtpSOOCIpV6Gateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 53), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpSOOCIpV6Gateway.setStatus('current')
f3PtpSOOCAlgorithmPtpAware = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 4, 1, 54), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCAlgorithmPtpAware.setStatus('current')
f3PtpOCSlaveVirtualPortTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5), )
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortTable.setStatus('current')
f3PtpOCSlaveVirtualPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpTSIndex"), (0, "F3-PTP-MIB", "f3PtpSOOCIndex"), (0, "F3-PTP-MIB", "f3PtpOCSlaveVirtualPortIndex"))
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortEntry.setStatus('current')
f3PtpOCSlaveVirtualPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortIndex.setStatus('current')
f3PtpOCSlaveVirtualPortAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortAlias.setStatus('current')
f3PtpOCSlaveVirtualPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortAdminState.setStatus('current')
f3PtpOCSlaveVirtualPortOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortOperationalState.setStatus('current')
f3PtpOCSlaveVirtualPortSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortSecondaryState.setStatus('current')
f3PtpOCSlaveVirtualPortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5, 1, 6), PortIdentity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortIdentity.setStatus('current')
f3PtpOCSlaveVirtualPortFlowPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5, 1, 7), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortFlowPoint.setStatus('current')
f3PtpOCSlaveVirtualPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5, 1, 8), PtpPortState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortState.setStatus('current')
f3PtpOCSlaveVirtualPortStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5, 1, 9), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortStorageType.setStatus('current')
f3PtpOCSlaveVirtualPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 5, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpOCSlaveVirtualPortRowStatus.setStatus('current')
f3PtpAccPortFlowPointTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6), )
if mibBuilder.loadTexts: f3PtpAccPortFlowPointTable.setStatus('current')
f3PtpAccPortFlowPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-PTP-MIB", "f3PtpAccPortFlowPointIndex"))
if mibBuilder.loadTexts: f3PtpAccPortFlowPointEntry.setStatus('current')
f3PtpAccPortFlowPointIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpAccPortFlowPointIndex.setStatus('current')
f3PtpAccPortFlowPointAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointAlias.setStatus('current')
f3PtpAccPortFlowPointAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointAdminState.setStatus('current')
f3PtpAccPortFlowPointOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointOperationalState.setStatus('current')
f3PtpAccPortFlowPointSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointSecondaryState.setStatus('current')
f3PtpAccPortFlowPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 6), PtpFlowPointType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointType.setStatus('current')
f3PtpAccPortFlowPointClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 7), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointClock.setStatus('current')
f3PtpAccPortFlowPointService = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 8), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointService.setStatus('current')
f3PtpAccPortFlowPointOuterVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointOuterVlanEtherType.setStatus('current')
f3PtpAccPortFlowPointOuterVlanMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 10), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointOuterVlanMemberList.setStatus('current')
f3PtpAccPortFlowPointOuterUntaggedEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointOuterUntaggedEnabled.setStatus('current')
f3PtpAccPortFlowPointInner1VlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointInner1VlanEtherType.setStatus('current')
f3PtpAccPortFlowPointInner1VlanMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 13), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointInner1VlanMemberList.setStatus('current')
f3PtpAccPortFlowPointInner1UntaggedEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 14), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointInner1UntaggedEnabled.setStatus('current')
f3PtpAccPortFlowPointInner2VlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointInner2VlanEtherType.setStatus('current')
f3PtpAccPortFlowPointInner2VlanMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 16), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointInner2VlanMemberList.setStatus('current')
f3PtpAccPortFlowPointInner2UntaggedEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 17), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointInner2UntaggedEnabled.setStatus('current')
f3PtpAccPortFlowPointStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 18), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStorageType.setStatus('current')
f3PtpAccPortFlowPointRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointRowStatus.setStatus('current')
f3PtpAccPortFlowPointCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointCOS.setStatus('current')
f3PtpAccPortFlowPointCIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 21), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointCIRLo.setStatus('current')
f3PtpAccPortFlowPointCIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 22), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointCIRHi.setStatus('current')
f3PtpAccPortFlowPointEIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 23), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointEIRLo.setStatus('current')
f3PtpAccPortFlowPointEIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 24), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointEIRHi.setStatus('current')
f3PtpAccPortFlowPointBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 25), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointBufferSize.setStatus('current')
f3PtpAccPortFlowPointLoopAvoidance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 26), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointLoopAvoidance.setStatus('current')
f3PtpAccPortFlowPointRefConnectGuardFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 27), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointRefConnectGuardFlow.setStatus('current')
f3PtpAccPortFlowPointSecureState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 28), FlowSecState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointSecureState.setStatus('current')
f3PtpAccPortFlowPointSecureBlockingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 6, 1, 29), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointSecureBlockingEnabled.setStatus('current')
f3PtpNetPortFlowPointTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7), )
if mibBuilder.loadTexts: f3PtpNetPortFlowPointTable.setStatus('current')
f3PtpNetPortFlowPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-PTP-MIB", "f3PtpNetPortFlowPointIndex"))
if mibBuilder.loadTexts: f3PtpNetPortFlowPointEntry.setStatus('current')
f3PtpNetPortFlowPointIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpNetPortFlowPointIndex.setStatus('current')
f3PtpNetPortFlowPointAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointAlias.setStatus('current')
f3PtpNetPortFlowPointAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointAdminState.setStatus('current')
f3PtpNetPortFlowPointOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointOperationalState.setStatus('current')
f3PtpNetPortFlowPointSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointSecondaryState.setStatus('current')
f3PtpNetPortFlowPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 6), PtpFlowPointType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointType.setStatus('current')
f3PtpNetPortFlowPointClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 7), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointClock.setStatus('current')
f3PtpNetPortFlowPointService = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 8), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointService.setStatus('current')
f3PtpNetPortFlowPointOuterVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointOuterVlanEtherType.setStatus('current')
f3PtpNetPortFlowPointOuterVlanMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 10), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointOuterVlanMemberList.setStatus('current')
f3PtpNetPortFlowPointOuterUntaggedEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointOuterUntaggedEnabled.setStatus('current')
f3PtpNetPortFlowPointInner1VlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointInner1VlanEtherType.setStatus('current')
f3PtpNetPortFlowPointInner1VlanMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 13), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointInner1VlanMemberList.setStatus('current')
f3PtpNetPortFlowPointInner1UntaggedEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 14), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointInner1UntaggedEnabled.setStatus('current')
f3PtpNetPortFlowPointInner2VlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointInner2VlanEtherType.setStatus('current')
f3PtpNetPortFlowPointInner2VlanMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 16), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointInner2VlanMemberList.setStatus('current')
f3PtpNetPortFlowPointInner2UntaggedEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 17), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointInner2UntaggedEnabled.setStatus('current')
f3PtpNetPortFlowPointStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 18), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStorageType.setStatus('current')
f3PtpNetPortFlowPointRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointRowStatus.setStatus('current')
f3PtpNetPortFlowPointCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointCOS.setStatus('current')
f3PtpNetPortFlowPointCIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 21), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointCIRLo.setStatus('current')
f3PtpNetPortFlowPointCIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 22), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointCIRHi.setStatus('current')
f3PtpNetPortFlowPointEIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 23), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointEIRLo.setStatus('current')
f3PtpNetPortFlowPointEIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 24), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointEIRHi.setStatus('current')
f3PtpNetPortFlowPointBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 25), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointBufferSize.setStatus('current')
f3PtpNetPortFlowPointLoopAvoidance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 26), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointLoopAvoidance.setStatus('current')
f3PtpNetPortFlowPointRefConnectGuardFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 27), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointRefConnectGuardFlow.setStatus('current')
f3PtpNetPortFlowPointSecureState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 28), FlowSecState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointSecureState.setStatus('current')
f3PtpNetPortFlowPointSecureBlockingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 7, 1, 29), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointSecureBlockingEnabled.setStatus('current')
f3PtpEthernetAccPortExtTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 8), )
if mibBuilder.loadTexts: f3PtpEthernetAccPortExtTable.setStatus('current')
f3PtpEthernetAccPortExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 8, 1), )
cmEthernetAccPortEntry.registerAugmentions(("F3-PTP-MIB", "f3PtpEthernetAccPortExtEntry"))
f3PtpEthernetAccPortExtEntry.setIndexNames(*cmEthernetAccPortEntry.getIndexNames())
if mibBuilder.loadTexts: f3PtpEthernetAccPortExtEntry.setStatus('current')
f3PtpEthernetAccPortDelayAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 8, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpEthernetAccPortDelayAsymmetry.setStatus('current')
f3PtpEthernetNetPortExtTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 9), )
if mibBuilder.loadTexts: f3PtpEthernetNetPortExtTable.setStatus('current')
f3PtpEthernetNetPortExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 9, 1), )
cmEthernetNetPortEntry.registerAugmentions(("F3-PTP-MIB", "f3PtpEthernetNetPortExtEntry"))
f3PtpEthernetNetPortExtEntry.setIndexNames(*cmEthernetNetPortEntry.getIndexNames())
if mibBuilder.loadTexts: f3PtpEthernetNetPortExtEntry.setStatus('current')
f3PtpEthernetNetPortDelayAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 9, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpEthernetNetPortDelayAsymmetry.setStatus('current')
f3PtpConfigScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 10))
f3PtpSysTimeOfDayClock = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 10, 1), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSysTimeOfDayClock.setStatus('current')
f3PtpBCTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11), )
if mibBuilder.loadTexts: f3PtpBCTable.setStatus('current')
f3PtpBCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpBCIndex"))
if mibBuilder.loadTexts: f3PtpBCEntry.setStatus('current')
f3PtpBCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpBCIndex.setStatus('current')
f3PtpBCAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpBCAlias.setStatus('current')
f3PtpBCAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 3), AdminState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpBCAdminState.setStatus('current')
f3PtpBCOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpBCOperationalState.setStatus('current')
f3PtpBCSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpBCSecondaryState.setStatus('current')
f3PtpBCClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 6), ClockIdentity()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpBCClockIdentity.setStatus('current')
f3PtpBCTimingSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 7), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpBCTimingSource.setStatus('current')
f3PtpBCClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpBCClockClass.setStatus('deprecated')
f3PtpBCDomainNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpBCDomainNumber.setStatus('current')
f3PtpBCStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 10), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpBCStorageType.setStatus('current')
f3PtpBCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpBCRowStatus.setStatus('current')
f3PtpBCPhysicalEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpBCPhysicalEntityIndex.setStatus('current')
f3PtpBCMediationControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 11, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpBCMediationControl.setStatus('current')
f3PtpMasterClockTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12), )
if mibBuilder.loadTexts: f3PtpMasterClockTable.setStatus('current')
f3PtpMasterClockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpMasterClockIndex"))
if mibBuilder.loadTexts: f3PtpMasterClockEntry.setStatus('current')
f3PtpMasterClockIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpMasterClockIndex.setStatus('current')
f3PtpMasterClockAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterClockAlias.setStatus('current')
f3PtpMasterClockAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 3), AdminState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterClockAdminState.setStatus('current')
f3PtpMasterClockOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockOperationalState.setStatus('current')
f3PtpMasterClockSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockSecondaryState.setStatus('current')
f3PtpMasterClockClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 6), ClockIdentity()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterClockClockIdentity.setStatus('current')
f3PtpMasterClockTimeClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 7), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterClockTimeClock.setStatus('current')
f3PtpMasterClockDomainNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterClockDomainNumber.setStatus('current')
f3PtpMasterClockPriority1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterClockPriority1.setStatus('current')
f3PtpMasterClockPriority2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterClockPriority2.setStatus('current')
f3PtpMasterClockClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockClockClass.setStatus('deprecated')
f3PtpMasterClockClockAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockClockAccuracy.setStatus('obsolete')
f3PtpMasterClockTimeScale = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 13), TimeScale()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockTimeScale.setStatus('current')
f3PtpMasterClockUtcOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockUtcOffset.setStatus('current')
f3PtpMasterClockStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 15), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterClockStorageType.setStatus('current')
f3PtpMasterClockRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterClockRowStatus.setStatus('current')
f3PtpMasterClockActiveTimeRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 17), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockActiveTimeRef.setStatus('current')
f3PtpMasterClockPTPProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 18), PTPProfile()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterClockPTPProfile.setStatus('current')
f3PtpMasterClockPhysicalEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 19), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterClockPhysicalEntityIndex.setStatus('current')
f3PtpMasterClockActiveGrantsAnnounceService = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockActiveGrantsAnnounceService.setStatus('current')
f3PtpMasterClockActiveGrantsSyncService = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockActiveGrantsSyncService.setStatus('current')
f3PtpMasterClockActiveGrantsDelayRequestService = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockActiveGrantsDelayRequestService.setStatus('current')
f3PtpMasterClockServiceAvailableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockServiceAvailableTime.setStatus('current')
f3PtpMasterClockServiceUnavailableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockServiceUnavailableTime.setStatus('current')
f3PtpMasterClockServiceAvailablePercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterClockServiceAvailablePercentage.setStatus('current')
f3PtpMasterClockSmpteSystemFrameRateNumerator = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 26), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMasterClockSmpteSystemFrameRateNumerator.setStatus('current')
f3PtpMasterClockSmpteSystemFrameRateDenominator = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 27), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMasterClockSmpteSystemFrameRateDenominator.setStatus('current')
f3PtpMasterClockSmpteTimeAddressFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 12, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMasterClockSmpteTimeAddressFlags.setStatus('current')
f3PtpMCITable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13), )
if mibBuilder.loadTexts: f3PtpMCITable.setStatus('current')
f3PtpMCIEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpBCIndex"), (0, "F3-PTP-MIB", "f3PtpMCIIndex"))
if mibBuilder.loadTexts: f3PtpMCIEntry.setStatus('current')
f3PtpMCIIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpMCIIndex.setStatus('current')
f3PtpMCIAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIAlias.setStatus('current')
f3PtpMCIAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 3), AdminState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIAdminState.setStatus('current')
f3PtpMCIOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIOperationalState.setStatus('current')
f3PtpMCISecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCISecondaryState.setStatus('current')
f3PtpMCIPortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 6), PortIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIPortIdentity.setStatus('current')
f3PtpMCIDomainNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMCIDomainNumber.setStatus('current')
f3PtpMCIClockType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 8), MasterClockType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIClockType.setStatus('current')
f3PtpMCIDelayMechanism = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 9), DelayMechanism()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIDelayMechanism.setStatus('current')
f3PtpMCIIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIIfName.setStatus('current')
f3PtpMCIIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 11), IpVersion()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIIpProtocol.setStatus('current')
f3PtpMCIMasterIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIMasterIpV4Address.setStatus('current')
f3PtpMCIMasterIpV4SubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIMasterIpV4SubnetMask.setStatus('current')
f3PtpMCIIpPriorityMapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 14), IpPriorityMapMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIIpPriorityMapMode.setStatus('current')
f3PtpMCIIpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIIpPriority.setStatus('current')
f3PtpMCIMaxLeaseDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 16), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIMaxLeaseDuration.setStatus('current')
f3PtpMCIMaxSlavesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMCIMaxSlavesSupported.setStatus('current')
f3PtpMCIMaxStaticSlavesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMCIMaxStaticSlavesSupported.setStatus('current')
f3PtpMCIMaxSyncMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 19), SyncMsgRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIMaxSyncMsgRate.setStatus('current')
f3PtpMCIMaxDelayRespMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 20), DelayRespMsgRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIMaxDelayRespMsgRate.setStatus('current')
f3PtpMCIMaxAnnounceMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 21), AnnounceMsgRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIMaxAnnounceMsgRate.setStatus('current')
f3PtpMCIStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 22), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIStorageType.setStatus('current')
f3PtpMCIRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIRowStatus.setStatus('current')
f3PtpMCIServiceFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 24), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMCIServiceFlow.setStatus('current')
f3PtpMCIClockClassProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 25), ClockClassProfile()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIClockClassProfile.setStatus('current')
f3PtpMCIClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIClockClass.setStatus('current')
f3PtpMCIAnnounceExtTLVEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 27), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIAnnounceExtTLVEnable.setStatus('current')
f3PtpMCIPtpTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 28), PTPTransport()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIPtpTransport.setStatus('current')
f3PtpMCIPtpTransportMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 29), PTPTransportMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIPtpTransportMode.setStatus('current')
f3PtpMCIPtpRemoteSlaveAgingTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIPtpRemoteSlaveAgingTimeout.setStatus('current')
f3PtpMCIMasterIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 31), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIMasterIpV6Address.setStatus('current')
f3PtpMCIMasterIpV6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIMasterIpV6AddrPrefixLength.setStatus('current')
f3PtpMCIDefaultGatewayControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 33), ToggleValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIDefaultGatewayControl.setStatus('current')
f3PtpMCIGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 34), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIGateway.setStatus('current')
f3PtpMCIIpV6Gateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 13, 1, 35), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIIpV6Gateway.setStatus('current')
f3PtpMasterVirtualPortTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 14), )
if mibBuilder.loadTexts: f3PtpMasterVirtualPortTable.setStatus('current')
f3PtpMasterVirtualPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 14, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpBCIndex"), (0, "F3-PTP-MIB", "f3PtpMCIIndex"), (0, "F3-PTP-MIB", "f3PtpMasterVirtualPortIndex"))
if mibBuilder.loadTexts: f3PtpMasterVirtualPortEntry.setStatus('current')
f3PtpMasterVirtualPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 14, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpMasterVirtualPortIndex.setStatus('current')
f3PtpMasterVirtualPortAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterVirtualPortAlias.setStatus('current')
f3PtpMasterVirtualPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 14, 1, 3), AdminState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterVirtualPortAdminState.setStatus('current')
f3PtpMasterVirtualPortOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 14, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterVirtualPortOperationalState.setStatus('current')
f3PtpMasterVirtualPortSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 14, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMasterVirtualPortSecondaryState.setStatus('current')
f3PtpMasterVirtualPortFlowPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 14, 1, 6), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterVirtualPortFlowPoint.setStatus('current')
f3PtpMasterVirtualPortStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 14, 1, 7), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterVirtualPortStorageType.setStatus('current')
f3PtpMasterVirtualPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 14, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMasterVirtualPortRowStatus.setStatus('current')
f3PtpStaticRemoteSlaveTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15), )
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveTable.setStatus('current')
f3PtpStaticRemoteSlaveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpBCIndex"), (0, "F3-PTP-MIB", "f3PtpMCIIndex"), (0, "F3-PTP-MIB", "f3PtpStaticRemoteSlaveIndex"))
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveEntry.setStatus('current')
f3PtpStaticRemoteSlaveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveIndex.setStatus('current')
f3PtpStaticRemoteSlaveAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveAlias.setStatus('current')
f3PtpStaticRemoteSlaveAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 3), AdminState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveAdminState.setStatus('current')
f3PtpStaticRemoteSlaveOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveOperationalState.setStatus('current')
f3PtpStaticRemoteSlaveSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveSecondaryState.setStatus('current')
f3PtpStaticRemoteSlaveClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 6), ClockIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveClockIdentity.setStatus('current')
f3PtpStaticRemoteSlaveIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveIpV4Address.setStatus('current')
f3PtpStaticRemoteSlaveTimeCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveTimeCreated.setStatus('current')
f3PtpStaticRemoteSlaveSyncMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 9), SyncMsgRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveSyncMsgRate.setStatus('current')
f3PtpStaticRemoteSlaveDelayRspMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 10), DelayRespMsgRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveDelayRspMsgRate.setStatus('current')
f3PtpStaticRemoteSlaveAnnounceMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 11), AnnounceMsgRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveAnnounceMsgRate.setStatus('current')
f3PtpStaticRemoteSlaveNegSyncLeaseDur = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveNegSyncLeaseDur.setStatus('current')
f3PtpStaticRemoteSlaveNegDelayRspLeaseDur = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveNegDelayRspLeaseDur.setStatus('current')
f3PtpStaticRemoteSlaveNegAnnounceLeaseDur = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveNegAnnounceLeaseDur.setStatus('current')
f3PtpStaticRemoteSlaveSyncDurRemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveSyncDurRemTime.setStatus('current')
f3PtpStaticRemoteSlaveDelayRspDurRemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveDelayRspDurRemTime.setStatus('current')
f3PtpStaticRemoteSlaveAnnounceDurRemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveAnnounceDurRemTime.setStatus('current')
f3PtpStaticRemoteSlaveUmnControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 18), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveUmnControl.setStatus('current')
f3PtpStaticRemoteSlaveStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 19), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveStorageType.setStatus('current')
f3PtpStaticRemoteSlaveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveRowStatus.setStatus('current')
f3PtpStaticRemoteSlaveIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 15, 1, 21), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpStaticRemoteSlaveIpV6Address.setStatus('current')
f3PtpDynamicRemoteSlaveTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16), )
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveTable.setStatus('current')
f3PtpDynamicRemoteSlaveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpBCIndex"), (0, "F3-PTP-MIB", "f3PtpMCIIndex"), (0, "F3-PTP-MIB", "f3PtpDynamicRemoteSlaveIndex"))
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveEntry.setStatus('current')
f3PtpDynamicRemoteSlaveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveIndex.setStatus('current')
f3PtpDynamicRemoteSlaveAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveAlias.setStatus('current')
f3PtpDynamicRemoteSlaveAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveAdminState.setStatus('current')
f3PtpDynamicRemoteSlaveOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveOperationalState.setStatus('current')
f3PtpDynamicRemoteSlaveSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveSecondaryState.setStatus('current')
f3PtpDynamicRemoteSlaveClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 6), ClockIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveClockIdentity.setStatus('current')
f3PtpDynamicRemoteSlaveIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveIpV4Address.setStatus('current')
f3PtpDynamicRemoteSlaveTimeCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveTimeCreated.setStatus('current')
f3PtpDynamicRemoteSlaveSyncMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 9), SyncMsgRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveSyncMsgRate.setStatus('current')
f3PtpDynamicRemoteSlaveDelayRspMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 10), DelayRespMsgRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveDelayRspMsgRate.setStatus('current')
f3PtpDynamicRemoteSlaveAnnounceMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 11), AnnounceMsgRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveAnnounceMsgRate.setStatus('current')
f3PtpDynamicRemoteSlaveNegSyncLeaseDur = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveNegSyncLeaseDur.setStatus('current')
f3PtpDynamicRemoteSlaveNegDelayRspLeaseDur = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveNegDelayRspLeaseDur.setStatus('current')
f3PtpDynamicRemoteSlaveNegAnnounceLeaseDur = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveNegAnnounceLeaseDur.setStatus('current')
f3PtpDynamicRemoteSlaveSyncDurRemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveSyncDurRemTime.setStatus('current')
f3PtpDynamicRemoteSlaveDelayRspDurRemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveDelayRspDurRemTime.setStatus('current')
f3PtpDynamicRemoteSlaveAnnounceDurRemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveAnnounceDurRemTime.setStatus('current')
f3PtpDynamicRemoteSlaveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveRowStatus.setStatus('current')
f3PtpDynamicRemoteSlaveStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 19), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveStorageType.setStatus('current')
f3PtpDynamicRemoteSlavePortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 20), PortIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlavePortIdentity.setStatus('current')
f3PtpDynamicRemoteSlavePeerMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 21), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlavePeerMacAddress.setStatus('current')
f3PtpDynamicRemoteSlaveIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 16, 1, 22), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveIpV6Address.setStatus('current')
f3PtpTrafficPortFlowPointTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17), )
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointTable.setStatus('current')
f3PtpTrafficPortFlowPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "F3-PTP-MIB", "f3PtpTrafficPortFlowPointIndex"))
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointEntry.setStatus('current')
f3PtpTrafficPortFlowPointIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointIndex.setStatus('current')
f3PtpTrafficPortFlowPointAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointAlias.setStatus('current')
f3PtpTrafficPortFlowPointAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointAdminState.setStatus('current')
f3PtpTrafficPortFlowPointOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointOperationalState.setStatus('current')
f3PtpTrafficPortFlowPointSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointSecondaryState.setStatus('current')
f3PtpTrafficPortFlowPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 6), PtpFlowPointType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointType.setStatus('current')
f3PtpTrafficPortFlowPointClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 7), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointClock.setStatus('current')
f3PtpTrafficPortFlowPointService = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 8), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointService.setStatus('current')
f3PtpTrafficPortFlowPointOuterVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointOuterVlanEtherType.setStatus('current')
f3PtpTrafficPortFlowPointOuterVlanMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 10), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointOuterVlanMemberList.setStatus('current')
f3PtpTrafficPortFlowPointOuterUntaggedEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointOuterUntaggedEnabled.setStatus('current')
f3PtpTrafficPortFlowPointInner1VlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointInner1VlanEtherType.setStatus('current')
f3PtpTrafficPortFlowPointInner1VlanMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 13), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointInner1VlanMemberList.setStatus('current')
f3PtpTrafficPortFlowPointInner1UntaggedEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 14), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointInner1UntaggedEnabled.setStatus('current')
f3PtpTrafficPortFlowPointInner2VlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointInner2VlanEtherType.setStatus('current')
f3PtpTrafficPortFlowPointInner2VlanMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 16), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointInner2VlanMemberList.setStatus('current')
f3PtpTrafficPortFlowPointInner2UntaggedEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 17), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointInner2UntaggedEnabled.setStatus('current')
f3PtpTrafficPortFlowPointStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 18), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStorageType.setStatus('current')
f3PtpTrafficPortFlowPointRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointRowStatus.setStatus('current')
f3PtpTrafficPortFlowPointCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointCOS.setStatus('current')
f3PtpTrafficPortFlowPointCIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 21), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointCIRLo.setStatus('current')
f3PtpTrafficPortFlowPointCIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 22), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointCIRHi.setStatus('current')
f3PtpTrafficPortFlowPointEIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 23), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointEIRLo.setStatus('current')
f3PtpTrafficPortFlowPointEIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 24), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointEIRHi.setStatus('current')
f3PtpTrafficPortFlowPointAssociatedQueueProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 25), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointAssociatedQueueProfile.setStatus('current')
f3PtpTrafficPortFlowPointLoopAvoidance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 17, 1, 26), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointLoopAvoidance.setStatus('current')
f3PtpEthernetTrafficPortExtTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 18), )
if mibBuilder.loadTexts: f3PtpEthernetTrafficPortExtTable.setStatus('current')
f3PtpEthernetTrafficPortExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 18, 1), )
cmEthernetTrafficPortEntry.registerAugmentions(("F3-PTP-MIB", "f3PtpEthernetTrafficPortExtEntry"))
f3PtpEthernetTrafficPortExtEntry.setIndexNames(*cmEthernetTrafficPortEntry.getIndexNames())
if mibBuilder.loadTexts: f3PtpEthernetTrafficPortExtEntry.setStatus('current')
f3PtpEthernetTrafficPortDelayAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 18, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpEthernetTrafficPortDelayAsymmetry.setStatus('current')
f3PtpPTPClockTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19), )
if mibBuilder.loadTexts: f3PtpPTPClockTable.setStatus('current')
f3PtpPTPClockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"))
if mibBuilder.loadTexts: f3PtpPTPClockEntry.setStatus('current')
f3PtpPTPClockIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpPTPClockIndex.setStatus('current')
f3PtpPTPClockAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 2), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockAdminState.setStatus('current')
f3PtpPTPClockAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockAlias.setStatus('current')
f3PtpPTPClockOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockOperationalState.setStatus('current')
f3PtpPTPClockSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockSecondaryState.setStatus('current')
f3PtpPTPClockProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 6), PTPClockProfile()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPClockProfile.setStatus('current')
f3PtpPTPClockClockType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 7), PTPClockType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPClockClockType.setStatus('current')
f3PtpPTPClockOperationalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 8), PTPClockOperMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockOperationalMode.setStatus('current')
f3PtpPTPClockClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 9), ClockIdentity()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPClockClockIdentity.setStatus('current')
f3PtpPTPClockDomainNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPClockDomainNumber.setStatus('current')
f3PtpPTPClockTimeSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 11), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockTimeSource.setStatus('current')
f3PtpPTPClockPriority1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockPriority1.setStatus('current')
f3PtpPTPClockPriority2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockPriority2.setStatus('current')
f3PtpPTPClockLocalPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockLocalPriority.setStatus('current')
f3PtpPTPClockClockAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockClockAccuracy.setStatus('obsolete')
f3PtpPTPClockScaledLogVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockScaledLogVariance.setStatus('current')
f3PtpPTPClockSyncEid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 17), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockSyncEid.setStatus('current')
f3PtpPTPClockCurrentTimeOfDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockCurrentTimeOfDay.setStatus('current')
f3PtpPTPClockActiveSlavePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 19), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockActiveSlavePort.setStatus('current')
f3PtpPTPClockClockRecoveryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 20), ClockRecoveryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockClockRecoveryState.setStatus('current')
f3PtpPTPClockPhaseRecoveryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 21), PhaseRecoveryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockPhaseRecoveryState.setStatus('current')
f3PtpPTPClockTimeTraceabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockTimeTraceabilityStatus.setStatus('current')
f3PtpPTPClockTimeSinceTimeTraceabilityChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockTimeSinceTimeTraceabilityChanged.setStatus('current')
f3PtpPTPClockFreqTraceabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockFreqTraceabilityStatus.setStatus('current')
f3PtpPTPClockTimeSinceFreqTraceabilityChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockTimeSinceFreqTraceabilityChanged.setStatus('current')
f3PtpPTPClockClockSyncEEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 26), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockClockSyncEEnabled.setStatus('current')
f3PtpPTPClockClockQLModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 27), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockClockQLModeEnabled.setStatus('current')
f3PtpPTPClockClockExpectedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 28), SSMQualityLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockClockExpectedQL.setStatus('current')
f3PtpPTPClockClockAssumedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 29), SSMQualityLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockClockAssumedQL.setStatus('current')
f3PtpPTPClockClockReceivedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 30), SSMQualityLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockClockReceivedQL.setStatus('current')
f3PtpPTPClockStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 31), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPClockStorageType.setStatus('current')
f3PtpPTPClockRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 32), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPClockRowStatus.setStatus('current')
f3PtpPTPClockCurrentOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 33), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockCurrentOffsetFromMaster.setStatus('current')
f3PtpPTPClockRecentMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 34), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockRecentMeanPathDelay.setStatus('current')
f3PtpPTPClockRecentSyncPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockRecentSyncPDV.setStatus('current')
f3PtpPTPClockClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockClockClass.setStatus('current')
f3PtpPTPClockPhysicalEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockPhysicalEntityIndex.setStatus('current')
f3PtpPTPClockActiveGrantsAnnounceService = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockActiveGrantsAnnounceService.setStatus('current')
f3PtpPTPClockActiveGrantsSyncService = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockActiveGrantsSyncService.setStatus('current')
f3PtpPTPClockActiveGrantsDelayRequestService = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockActiveGrantsDelayRequestService.setStatus('current')
f3PtpPTPClockMaxStepRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 41), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockMaxStepRemoved.setStatus('current')
f3PtpPTPClockServiceAvailableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockServiceAvailableTime.setStatus('current')
f3PtpPTPClockServiceUnavailableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 43), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockServiceUnavailableTime.setStatus('current')
f3PtpPTPClockServiceAvailablePercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockServiceAvailablePercentage.setStatus('current')
f3PtpPTPClockGrandMasterID = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockGrandMasterID.setStatus('current')
f3PtpPTPClockTimeInaccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 46), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockTimeInaccuracy.setStatus('current')
f3PtpPTPClockNetworkTimeInaccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 19, 1, 47), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockNetworkTimeInaccuracy.setStatus('current')
f3PtpPTPPortTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20), )
if mibBuilder.loadTexts: f3PtpPTPPortTable.setStatus('current')
f3PtpPTPPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpPTPPortIndex"))
if mibBuilder.loadTexts: f3PtpPTPPortEntry.setStatus('current')
f3PtpPTPPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpPTPPortIndex.setStatus('current')
f3PtpPTPPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 2), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortAdminState.setStatus('current')
f3PtpPTPPortAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortAlias.setStatus('current')
f3PtpPTPPortOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortOperationalState.setStatus('current')
f3PtpPTPPortSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortSecondaryState.setStatus('current')
f3PtpPTPPortPeerPortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 6), PortIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortPeerPortIdentity.setStatus('current')
f3PtpPTPPortLocalPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortLocalPriority.setStatus('current')
f3PtpPTPPortPtpFlowPointEid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 8), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortPtpFlowPointEid.setStatus('current')
f3PtpPTPPortNotSlave = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortNotSlave.setStatus('deprecated')
f3PtpPTPPortTxDestMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 10), DestMacAddrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortTxDestMacAddress.setStatus('current')
f3PtpPTPPortSyncMessageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 11), SyncMessageRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortSyncMessageRate.setStatus('current')
f3PtpPTPPortmDelayReqRespMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 12), DelayReqMessageRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortmDelayReqRespMsgRate.setStatus('current')
f3PtpPTPPortmAnnounceMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 13), AnnounceMessageRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortmAnnounceMsgRate.setStatus('current')
f3PtpPTPPortAnnounceReceiptTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortAnnounceReceiptTimeout.setStatus('current')
f3PtpPTPPortSyncReceiptTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortSyncReceiptTimeout.setStatus('current')
f3PtpPTPPortDelayRespTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortDelayRespTimeout.setStatus('current')
f3PtpPTPPortPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 17), PtpPortState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortPortState.setStatus('current')
f3PtpPTPPortBmcaDecisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 18), BMCARole()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortBmcaDecisionCode.setStatus('current')
f3PtpPTPPortClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortClockClass.setStatus('current')
f3PtpPTPPortPeerPortMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 20), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortPeerPortMacAddress.setStatus('current')
f3PtpPTPPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortRowStatus.setStatus('current')
f3PtpPTPPortPortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 22), PortIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortPortIdentity.setStatus('current')
f3PtpPTPPortMaxExpectedL2Slaves = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 23), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortMaxExpectedL2Slaves.setStatus('current')
f3PtpPTPPortMasterClockType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 24), MasterClockType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortMasterClockType.setStatus('current')
f3PtpPTPPortLastRcvdAnnounceMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 25), F3DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortLastRcvdAnnounceMsg.setStatus('current')
f3PtpPTPPortLastRcvdSyncMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 26), F3DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortLastRcvdSyncMsg.setStatus('current')
f3PtpPTPPortLastRcvdDelayReqMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 27), F3DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortLastRcvdDelayReqMsg.setStatus('current')
f3PtpPTPPortLastRcvdDelayRspMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 28), F3DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortLastRcvdDelayRspMsg.setStatus('current')
f3PtpPTPPortMasterOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 29), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortMasterOnly.setStatus('current')
f3PtpPTPPortIsProbingSlave = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 30), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortIsProbingSlave.setStatus('current')
f3PtpPTPPortPeerClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortPeerClockClass.setStatus('current')
f3PtpPTPPortMinimumExpectedClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortMinimumExpectedClockClass.setStatus('current')
f3PtpPTPPortDelayAsymmetryComp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 33), CompensationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortDelayAsymmetryComp.setStatus('current')
f3PtpPTPPortAutoAsymmetryCompStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 34), CompensationStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortAutoAsymmetryCompStatus.setStatus('current')
f3PtpPTPPortDelayAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortDelayAsymmetry.setStatus('current')
f3PtpPTPPortVirtualPortCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 36), ToggleValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortVirtualPortCtrl.setStatus('current')
f3PtpPTPPortDelayResponderType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 37), MasterClockType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpPTPPortDelayResponderType.setStatus('current')
f3PtpPTPPortTimeTraceable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 38), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortTimeTraceable.setStatus('current')
f3PtpPTPPortFrequencyTraceable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 20, 1, 39), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortFrequencyTraceable.setStatus('current')
f3PtpL2DynamicRemoteSlaveTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 21), )
if mibBuilder.loadTexts: f3PtpL2DynamicRemoteSlaveTable.setStatus('current')
f3PtpL2DynamicRemoteSlaveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 21, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpPTPPortIndex"), (0, "F3-PTP-MIB", "f3PtpL2DynamicRemoteSlaveIndex"))
if mibBuilder.loadTexts: f3PtpL2DynamicRemoteSlaveEntry.setStatus('current')
f3PtpL2DynamicRemoteSlaveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 21, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpL2DynamicRemoteSlaveIndex.setStatus('current')
f3PtpL2DynamicRemoteSlavePortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 21, 1, 2), PortIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL2DynamicRemoteSlavePortIdentity.setStatus('current')
f3PtpL2DynamicRemoteSlaveMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 21, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL2DynamicRemoteSlaveMacAddress.setStatus('current')
f3PtpL2DynamicRemoteSlaveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 21, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL2DynamicRemoteSlaveRowStatus.setStatus('current')
f3PtpL2DynamicRemoteSlaveStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 21, 1, 5), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL2DynamicRemoteSlaveStorageType.setStatus('current')
f3PtpL2DynamicRemoteSlaveClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 21, 1, 6), ClockIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL2DynamicRemoteSlaveClockIdentity.setStatus('current')
f3PtpMCIProtGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 22), )
if mibBuilder.loadTexts: f3PtpMCIProtGroupTable.setStatus('current')
f3PtpMCIProtGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 22, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpMCIProtGroupIndex"))
if mibBuilder.loadTexts: f3PtpMCIProtGroupEntry.setStatus('current')
f3PtpMCIProtGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 22, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIProtGroupIndex.setStatus('current')
f3PtpMCIProtGroupAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 22, 1, 2), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMCIProtGroupAdminState.setStatus('current')
f3PtpMCIProtGroupActiveMember = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 22, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIProtGroupActiveMember.setStatus('current')
f3PtpMCIProtGroupLastSwitchOverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 22, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIProtGroupLastSwitchOverTime.setStatus('current')
f3PtpMCIProtGroupLastSwitchOverReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 22, 1, 5), CmGenPgSwitchoverReason()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIProtGroupLastSwitchOverReason.setStatus('current')
f3PtpMCIProtGroupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 22, 1, 6), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIProtGroupStorageType.setStatus('current')
f3PtpMCIProtGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 22, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIProtGroupRowStatus.setStatus('current')
f3PtpMCIProtMemberTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 23), )
if mibBuilder.loadTexts: f3PtpMCIProtMemberTable.setStatus('current')
f3PtpMCIProtMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 23, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpMCIProtGroupIndex"), (0, "F3-PTP-MIB", "f3PtpMCIProtMemberObject"))
if mibBuilder.loadTexts: f3PtpMCIProtMemberEntry.setStatus('current')
f3PtpMCIProtMemberObject = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 23, 1, 1), VariablePointer())
if mibBuilder.loadTexts: f3PtpMCIProtMemberObject.setStatus('current')
f3PtpMCIProtMemberStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 23, 1, 2), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIProtMemberStorageType.setStatus('current')
f3PtpMCIProtMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 23, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpMCIProtMemberRowStatus.setStatus('current')
f3PtpTrafficPortFlowPointExtTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 24), )
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointExtTable.setStatus('current')
f3PtpTrafficPortFlowPointExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 24, 1), )
f3PtpTrafficPortFlowPointEntry.registerAugmentions(("F3-PTP-MIB", "f3PtpTrafficPortFlowPointExtEntry"))
f3PtpTrafficPortFlowPointExtEntry.setIndexNames(*f3PtpTrafficPortFlowPointEntry.getIndexNames())
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointExtEntry.setStatus('current')
f3PtpTrafficPortFlowPointBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 24, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointBufferSize.setStatus('current')
f3PtpL3PTPPortTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25), )
if mibBuilder.loadTexts: f3PtpL3PTPPortTable.setStatus('current')
f3PtpL3PTPPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpL3PTPPortIndex"))
if mibBuilder.loadTexts: f3PtpL3PTPPortEntry.setStatus('current')
f3PtpL3PTPPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 1), Integer32())
if mibBuilder.loadTexts: f3PtpL3PTPPortIndex.setStatus('current')
f3PtpL3PTPPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 2), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortAdminState.setStatus('current')
f3PtpL3PTPPortAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortAlias.setStatus('current')
f3PtpL3PTPPortOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortOperationalState.setStatus('current')
f3PtpL3PTPPortSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortSecondaryState.setStatus('current')
f3PtpL3PTPPortPortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 6), PortIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortPortIdentity.setStatus('current')
f3PtpL3PTPPortLocalPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortLocalPriority.setStatus('current')
f3PtpL3PTPPortPtpFlowPointEid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 8), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortPtpFlowPointEid.setStatus('current')
f3PtpL3PTPPortSyncMessageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 9), SyncMessageRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortSyncMessageRate.setStatus('current')
f3PtpL3PTPPortDelayReqRespMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 10), DelayReqMessageRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortDelayReqRespMsgRate.setStatus('current')
f3PtpL3PTPPortAnnounceMsgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 11), AnnounceMessageRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortAnnounceMsgRate.setStatus('current')
f3PtpL3PTPPortAnnounceReceiptTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortAnnounceReceiptTimeout.setStatus('current')
f3PtpL3PTPPortSyncReceiptTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortSyncReceiptTimeout.setStatus('current')
f3PtpL3PTPPortDelayRespTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortDelayRespTimeout.setStatus('current')
f3PtpL3PTPPortPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 15), PtpPortState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortPortState.setStatus('current')
f3PtpL3PTPPortBmcaDecisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 16), BMCARole()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortBmcaDecisionCode.setStatus('current')
f3PtpL3PTPPortPeerClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortPeerClockClass.setStatus('current')
f3PtpL3PTPPortMinimumExpectedClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortMinimumExpectedClockClass.setStatus('current')
f3PtpL3PTPPortIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 19), IpVersion()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortIpProtocol.setStatus('current')
f3PtpL3PTPPortIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortIfName.setStatus('current')
f3PtpL3PTPPortIpPriorityMapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 21), IpPriorityMapMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortIpPriorityMapMode.setStatus('current')
f3PtpL3PTPPortIpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortIpPriority.setStatus('current')
f3PtpL3PTPPortIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 23), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortIpV4Address.setStatus('current')
f3PtpL3PTPPortIpV4SubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 24), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortIpV4SubnetMask.setStatus('current')
f3PtpL3PTPPortIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 25), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortIpV6Address.setStatus('current')
f3PtpL3PTPPortIpV6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 26), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortIpV6AddrPrefixLength.setStatus('current')
f3PtpL3PTPPortDefaultGatewayControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 27), ToggleValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortDefaultGatewayControl.setStatus('current')
f3PtpL3PTPPortGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 28), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortGateway.setStatus('current')
f3PtpL3PTPPortIpV6Gateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 29), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortIpV6Gateway.setStatus('current')
f3PtpL3PTPPortUnicastMessageNegEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 30), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortUnicastMessageNegEnabled.setStatus('current')
f3PtpL3PTPPortTransmitDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortTransmitDuration.setStatus('current')
f3PtpL3PTPPortRequestUnicastTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortRequestUnicastTimeout.setStatus('current')
f3PtpL3PTPPortRequestUnicastRestartTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 1800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortRequestUnicastRestartTimer.setStatus('current')
f3PtpL3PTPPortMasterIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 34), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortMasterIpV4Address.setStatus('current')
f3PtpL3PTPPortMasterIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 35), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortMasterIpV6Address.setStatus('current')
f3PtpL3PTPPortDelayAsymmetryComp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 36), CompensationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortDelayAsymmetryComp.setStatus('current')
f3PtpL3PTPPortAutoAsymmetryCompStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 37), CompensationStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortAutoAsymmetryCompStatus.setStatus('current')
f3PtpL3PTPPortDelayAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10000000, 10000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortDelayAsymmetry.setStatus('current')
f3PtpL3PTPPortStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 39), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortStorageType.setStatus('current')
f3PtpL3PTPPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 1, 25, 1, 40), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3PtpL3PTPPortRowStatus.setStatus('current')
f3PtpAccPortFlowPointStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1), )
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsTable.setStatus('current')
f3PtpAccPortFlowPointStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-PTP-MIB", "f3PtpAccPortFlowPointIndex"), (0, "F3-PTP-MIB", "f3PtpAccPortFlowPointStatsIndex"))
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsEntry.setStatus('current')
f3PtpAccPortFlowPointStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsIndex.setStatus('current')
f3PtpAccPortFlowPointStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsIntervalType.setStatus('current')
f3PtpAccPortFlowPointStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsValid.setStatus('current')
f3PtpAccPortFlowPointStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsAction.setStatus('current')
f3PtpAccPortFlowPointStatsAnnouncesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsAnnouncesRx.setStatus('current')
f3PtpAccPortFlowPointStatsAnnouncesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsAnnouncesTx.setStatus('current')
f3PtpAccPortFlowPointStatsSyncsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsSyncsRx.setStatus('current')
f3PtpAccPortFlowPointStatsSyncsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsSyncsTx.setStatus('current')
f3PtpAccPortFlowPointStatsFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsFollowupsRx.setStatus('current')
f3PtpAccPortFlowPointStatsFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsFollowupsTx.setStatus('current')
f3PtpAccPortFlowPointStatsDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsDelayReqsRx.setStatus('current')
f3PtpAccPortFlowPointStatsDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsDelayReqsTx.setStatus('current')
f3PtpAccPortFlowPointStatsDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsDelayRspsRx.setStatus('current')
f3PtpAccPortFlowPointStatsDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsDelayRspsTx.setStatus('current')
f3PtpAccPortFlowPointStatsPDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsPDelayReqsRx.setStatus('current')
f3PtpAccPortFlowPointStatsPDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsPDelayReqsTx.setStatus('current')
f3PtpAccPortFlowPointStatsPDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsPDelayRspsRx.setStatus('current')
f3PtpAccPortFlowPointStatsPDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsPDelayRspsTx.setStatus('current')
f3PtpAccPortFlowPointStatsPDelayRspFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsPDelayRspFollowupsRx.setStatus('current')
f3PtpAccPortFlowPointStatsPDelayRspFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsPDelayRspFollowupsTx.setStatus('current')
f3PtpAccPortFlowPointStatsSignalingRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsSignalingRx.setStatus('current')
f3PtpAccPortFlowPointStatsSignalingTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsSignalingTx.setStatus('current')
f3PtpAccPortFlowPointStatsMgmtFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsMgmtFramesRx.setStatus('current')
f3PtpAccPortFlowPointStatsMgmtFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsMgmtFramesTx.setStatus('current')
f3PtpAccPortFlowPointStatsPtpUnknownsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsPtpUnknownsRx.setStatus('current')
f3PtpAccPortFlowPointStatsPtpUnknownsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsPtpUnknownsTx.setStatus('current')
f3PtpAccPortFlowPointStatsMinSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsMinSyncResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsMaxSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsMaxSyncResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsAvgSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsAvgSyncResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsMinDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsMinDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsMaxDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsMaxDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsAvgDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsAvgDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsMinPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsMinPDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsMaxPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsMaxPDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsAvgPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsAvgPDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsMinPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsMinPDelayRspResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsMaxPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsMaxPDelayRspResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsAvgPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsAvgPDelayRspResTime.setStatus('deprecated')
f3PtpAccPortFlowPointStatsDestMciNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 39), PerfCounter64()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsDestMciNoMatchDiscards.setStatus('current')
f3PtpAccPortFlowPointStatsTagNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 1, 1, 40), PerfCounter64()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointStatsTagNoMatchDiscards.setStatus('current')
f3PtpAccPortFlowPointHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2), )
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryTable.setStatus('current')
f3PtpAccPortFlowPointHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-PTP-MIB", "f3PtpAccPortFlowPointIndex"), (0, "F3-PTP-MIB", "f3PtpAccPortFlowPointStatsIndex"), (0, "F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryIndex"))
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryEntry.setStatus('current')
f3PtpAccPortFlowPointHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryIndex.setStatus('current')
f3PtpAccPortFlowPointHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryTime.setStatus('current')
f3PtpAccPortFlowPointHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryValid.setStatus('current')
f3PtpAccPortFlowPointHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryAction.setStatus('current')
f3PtpAccPortFlowPointHistoryAnnouncesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryAnnouncesRx.setStatus('current')
f3PtpAccPortFlowPointHistoryAnnouncesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryAnnouncesTx.setStatus('current')
f3PtpAccPortFlowPointHistorySyncsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistorySyncsRx.setStatus('current')
f3PtpAccPortFlowPointHistorySyncsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistorySyncsTx.setStatus('current')
f3PtpAccPortFlowPointHistoryFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryFollowupsRx.setStatus('current')
f3PtpAccPortFlowPointHistoryFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryFollowupsTx.setStatus('current')
f3PtpAccPortFlowPointHistoryDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryDelayReqsRx.setStatus('current')
f3PtpAccPortFlowPointHistoryDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryDelayReqsTx.setStatus('current')
f3PtpAccPortFlowPointHistoryDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryDelayRspsRx.setStatus('current')
f3PtpAccPortFlowPointHistoryDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryDelayRspsTx.setStatus('current')
f3PtpAccPortFlowPointHistoryPDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryPDelayReqsRx.setStatus('current')
f3PtpAccPortFlowPointHistoryPDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryPDelayReqsTx.setStatus('current')
f3PtpAccPortFlowPointHistoryPDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryPDelayRspsRx.setStatus('current')
f3PtpAccPortFlowPointHistoryPDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryPDelayRspsTx.setStatus('current')
f3PtpAccPortFlowPointHistoryPDelayRspFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryPDelayRspFollowupsRx.setStatus('current')
f3PtpAccPortFlowPointHistoryPDelayRspFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryPDelayRspFollowupsTx.setStatus('current')
f3PtpAccPortFlowPointHistorySignalingRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistorySignalingRx.setStatus('current')
f3PtpAccPortFlowPointHistorySignalingTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistorySignalingTx.setStatus('current')
f3PtpAccPortFlowPointHistoryMgmtFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryMgmtFramesRx.setStatus('current')
f3PtpAccPortFlowPointHistoryMgmtFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryMgmtFramesTx.setStatus('current')
f3PtpAccPortFlowPointHistoryPtpUnknownsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryPtpUnknownsRx.setStatus('current')
f3PtpAccPortFlowPointHistoryPtpUnknownsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryPtpUnknownsTx.setStatus('current')
f3PtpAccPortFlowPointHistoryMinSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryMinSyncResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryMaxSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryMaxSyncResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryAvgSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryAvgSyncResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryMinDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryMinDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryMaxDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryMaxDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryAvgDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryAvgDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryMinPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryMinPDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryMaxPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryMaxPDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryAvgPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryAvgPDelayReqResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryMinPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryMinPDelayRspResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryMaxPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryMaxPDelayRspResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryAvgPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryAvgPDelayRspResTime.setStatus('deprecated')
f3PtpAccPortFlowPointHistoryDestMciNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 39), PerfCounter64()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryDestMciNoMatchDiscards.setStatus('current')
f3PtpAccPortFlowPointHistoryTagNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 2, 1, 40), PerfCounter64()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointHistoryTagNoMatchDiscards.setStatus('current')
f3PtpAccPortFlowPointThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 3), )
if mibBuilder.loadTexts: f3PtpAccPortFlowPointThresholdTable.setStatus('current')
f3PtpAccPortFlowPointThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-PTP-MIB", "f3PtpAccPortFlowPointIndex"), (0, "F3-PTP-MIB", "f3PtpAccPortFlowPointStatsIndex"), (0, "F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdIndex"))
if mibBuilder.loadTexts: f3PtpAccPortFlowPointThresholdEntry.setStatus('current')
f3PtpAccPortFlowPointThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3PtpAccPortFlowPointThresholdIndex.setStatus('current')
f3PtpAccPortFlowPointThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 3, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointThresholdInterval.setStatus('current')
f3PtpAccPortFlowPointThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 3, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointThresholdVariable.setStatus('current')
f3PtpAccPortFlowPointThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointThresholdValueLo.setStatus('current')
f3PtpAccPortFlowPointThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointThresholdValueHi.setStatus('current')
f3PtpAccPortFlowPointThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 3, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpAccPortFlowPointThresholdMonValue.setStatus('current')
f3PtpNetPortFlowPointStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4), )
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsTable.setStatus('current')
f3PtpNetPortFlowPointStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-PTP-MIB", "f3PtpNetPortFlowPointIndex"), (0, "F3-PTP-MIB", "f3PtpNetPortFlowPointStatsIndex"))
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsEntry.setStatus('current')
f3PtpNetPortFlowPointStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsIndex.setStatus('current')
f3PtpNetPortFlowPointStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsIntervalType.setStatus('current')
f3PtpNetPortFlowPointStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsValid.setStatus('current')
f3PtpNetPortFlowPointStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsAction.setStatus('current')
f3PtpNetPortFlowPointStatsAnnouncesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsAnnouncesRx.setStatus('current')
f3PtpNetPortFlowPointStatsAnnouncesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsAnnouncesTx.setStatus('current')
f3PtpNetPortFlowPointStatsSyncsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsSyncsRx.setStatus('current')
f3PtpNetPortFlowPointStatsSyncsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsSyncsTx.setStatus('current')
f3PtpNetPortFlowPointStatsFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsFollowupsRx.setStatus('current')
f3PtpNetPortFlowPointStatsFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsFollowupsTx.setStatus('current')
f3PtpNetPortFlowPointStatsDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsDelayReqsRx.setStatus('current')
f3PtpNetPortFlowPointStatsDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsDelayReqsTx.setStatus('current')
f3PtpNetPortFlowPointStatsDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsDelayRspsRx.setStatus('current')
f3PtpNetPortFlowPointStatsDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsDelayRspsTx.setStatus('current')
f3PtpNetPortFlowPointStatsPDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsPDelayReqsRx.setStatus('current')
f3PtpNetPortFlowPointStatsPDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsPDelayReqsTx.setStatus('current')
f3PtpNetPortFlowPointStatsPDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsPDelayRspsRx.setStatus('current')
f3PtpNetPortFlowPointStatsPDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsPDelayRspsTx.setStatus('current')
f3PtpNetPortFlowPointStatsPDelayRspFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsPDelayRspFollowupsRx.setStatus('current')
f3PtpNetPortFlowPointStatsPDelayRspFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsPDelayRspFollowupsTx.setStatus('current')
f3PtpNetPortFlowPointStatsSignalingRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsSignalingRx.setStatus('current')
f3PtpNetPortFlowPointStatsSignalingTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsSignalingTx.setStatus('current')
f3PtpNetPortFlowPointStatsMgmtFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsMgmtFramesRx.setStatus('current')
f3PtpNetPortFlowPointStatsMgmtFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsMgmtFramesTx.setStatus('current')
f3PtpNetPortFlowPointStatsPtpUnknownsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsPtpUnknownsRx.setStatus('current')
f3PtpNetPortFlowPointStatsPtpUnknownsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsPtpUnknownsTx.setStatus('current')
f3PtpNetPortFlowPointStatsAvgSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsAvgSyncResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsMinSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsMinSyncResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsMaxSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsMaxSyncResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsAvgDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsAvgDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsMinDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsMinDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsMaxDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsMaxDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsMinPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsMinPDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsMaxPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsMaxPDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsAvgPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsAvgPDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsMinPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsMinPDelayRspResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsMaxPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsMaxPDelayRspResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsAvgPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsAvgPDelayRspResTime.setStatus('deprecated')
f3PtpNetPortFlowPointStatsDestMciNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 39), PerfCounter64()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsDestMciNoMatchDiscards.setStatus('current')
f3PtpNetPortFlowPointStatsTagNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 4, 1, 40), PerfCounter64()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointStatsTagNoMatchDiscards.setStatus('current')
f3PtpNetPortFlowPointHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5), )
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryTable.setStatus('current')
f3PtpNetPortFlowPointHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-PTP-MIB", "f3PtpNetPortFlowPointIndex"), (0, "F3-PTP-MIB", "f3PtpNetPortFlowPointStatsIndex"), (0, "F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryIndex"))
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryEntry.setStatus('current')
f3PtpNetPortFlowPointHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryIndex.setStatus('current')
f3PtpNetPortFlowPointHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryTime.setStatus('current')
f3PtpNetPortFlowPointHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryValid.setStatus('current')
f3PtpNetPortFlowPointHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryAction.setStatus('current')
f3PtpNetPortFlowPointHistoryAnnouncesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryAnnouncesRx.setStatus('current')
f3PtpNetPortFlowPointHistoryAnnouncesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryAnnouncesTx.setStatus('current')
f3PtpNetPortFlowPointHistorySyncsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistorySyncsRx.setStatus('current')
f3PtpNetPortFlowPointHistorySyncsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistorySyncsTx.setStatus('current')
f3PtpNetPortFlowPointHistoryFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryFollowupsRx.setStatus('current')
f3PtpNetPortFlowPointHistoryFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryFollowupsTx.setStatus('current')
f3PtpNetPortFlowPointHistoryDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryDelayReqsRx.setStatus('current')
f3PtpNetPortFlowPointHistoryDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryDelayReqsTx.setStatus('current')
f3PtpNetPortFlowPointHistoryDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryDelayRspsRx.setStatus('current')
f3PtpNetPortFlowPointHistoryDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryDelayRspsTx.setStatus('current')
f3PtpNetPortFlowPointHistoryPDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryPDelayReqsRx.setStatus('current')
f3PtpNetPortFlowPointHistoryPDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryPDelayReqsTx.setStatus('current')
f3PtpNetPortFlowPointHistoryPDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryPDelayRspsRx.setStatus('current')
f3PtpNetPortFlowPointHistoryPDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryPDelayRspsTx.setStatus('current')
f3PtpNetPortFlowPointHistoryPDelayRspFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryPDelayRspFollowupsRx.setStatus('current')
f3PtpNetPortFlowPointHistoryPDelayRspFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryPDelayRspFollowupsTx.setStatus('current')
f3PtpNetPortFlowPointHistorySignalingRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistorySignalingRx.setStatus('current')
f3PtpNetPortFlowPointHistorySignalingTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistorySignalingTx.setStatus('current')
f3PtpNetPortFlowPointHistoryMgmtFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryMgmtFramesRx.setStatus('current')
f3PtpNetPortFlowPointHistoryMgmtFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryMgmtFramesTx.setStatus('current')
f3PtpNetPortFlowPointHistoryPtpUnknownsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryPtpUnknownsRx.setStatus('current')
f3PtpNetPortFlowPointHistoryPtpUnknownsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryPtpUnknownsTx.setStatus('current')
f3PtpNetPortFlowPointHistoryAvgSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryAvgSyncResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryMinSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryMinSyncResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryMaxSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryMaxSyncResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryAvgDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryAvgDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryMinDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryMinDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryMaxDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryMaxDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryMinPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryMinPDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryMaxPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryMaxPDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryAvgPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryAvgPDelayReqResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryMinPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryMinPDelayRspResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryMaxPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryMaxPDelayRspResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryAvgPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryAvgPDelayRspResTime.setStatus('deprecated')
f3PtpNetPortFlowPointHistoryDestMciNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 39), PerfCounter64()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryDestMciNoMatchDiscards.setStatus('current')
f3PtpNetPortFlowPointHistoryTagNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 5, 1, 40), PerfCounter64()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointHistoryTagNoMatchDiscards.setStatus('current')
f3PtpNetPortFlowPointThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 6), )
if mibBuilder.loadTexts: f3PtpNetPortFlowPointThresholdTable.setStatus('current')
f3PtpNetPortFlowPointThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 6, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-PTP-MIB", "f3PtpNetPortFlowPointIndex"), (0, "F3-PTP-MIB", "f3PtpNetPortFlowPointStatsIndex"), (0, "F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdIndex"))
if mibBuilder.loadTexts: f3PtpNetPortFlowPointThresholdEntry.setStatus('current')
f3PtpNetPortFlowPointThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3PtpNetPortFlowPointThresholdIndex.setStatus('current')
f3PtpNetPortFlowPointThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 6, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointThresholdInterval.setStatus('current')
f3PtpNetPortFlowPointThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 6, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointThresholdVariable.setStatus('current')
f3PtpNetPortFlowPointThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 6, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointThresholdValueLo.setStatus('current')
f3PtpNetPortFlowPointThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 6, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointThresholdValueHi.setStatus('current')
f3PtpNetPortFlowPointThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 6, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpNetPortFlowPointThresholdMonValue.setStatus('current')
f3PtpSOOCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7), )
if mibBuilder.loadTexts: f3PtpSOOCStatsTable.setStatus('current')
f3PtpSOOCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpTSIndex"), (0, "F3-PTP-MIB", "f3PtpSOOCIndex"), (0, "F3-PTP-MIB", "f3PtpSOOCStatsIndex"))
if mibBuilder.loadTexts: f3PtpSOOCStatsEntry.setStatus('current')
f3PtpSOOCStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpSOOCStatsIndex.setStatus('current')
f3PtpSOOCStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsIntervalType.setStatus('current')
f3PtpSOOCStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsValid.setStatus('current')
f3PtpSOOCStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCStatsAction.setStatus('current')
f3PtpSOOCStatsMinOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 5), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsMinOffsetFromMaster.setStatus('current')
f3PtpSOOCStatsMaxOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 6), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsMaxOffsetFromMaster.setStatus('current')
f3PtpSOOCStatsAvgOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 7), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsAvgOffsetFromMaster.setStatus('current')
f3PtpSOOCStatsMinMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 8), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsMinMeanPathDelay.setStatus('current')
f3PtpSOOCStatsMaxMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 9), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsMaxMeanPathDelay.setStatus('current')
f3PtpSOOCStatsAvgMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 10), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsAvgMeanPathDelay.setStatus('current')
f3PtpSOOCStatsMinSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 11), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsMinSyncPathDelay.setStatus('current')
f3PtpSOOCStatsMaxSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 12), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsMaxSyncPathDelay.setStatus('current')
f3PtpSOOCStatsAvgSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 13), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsAvgSyncPathDelay.setStatus('current')
f3PtpSOOCStatsMinSyncPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 14), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsMinSyncPDV.setStatus('current')
f3PtpSOOCStatsMaxSyncPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 15), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsMaxSyncPDV.setStatus('current')
f3PtpSOOCStatsAvgSyncPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 16), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsAvgSyncPDV.setStatus('current')
f3PtpSOOCStatsMgmtMsgsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsMgmtMsgsDiscarded.setStatus('current')
f3PtpSOOCStatsInvalidMsgLenDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsInvalidMsgLenDiscards.setStatus('current')
f3PtpSOOCStatsUnknownMasterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsUnknownMasterDiscards.setStatus('current')
f3PtpSOOCStatsUnknownDomainDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsUnknownDomainDiscards.setStatus('current')
f3PtpSOOCStatsMulticastAnnounceDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsMulticastAnnounceDiscards.setStatus('current')
f3PtpSOOCStatsOutOfSeqAnnounceMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsOutOfSeqAnnounceMsgs.setStatus('current')
f3PtpSOOCStatsMulticastSyncDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsMulticastSyncDiscards.setStatus('current')
f3PtpSOOCStatsTwoStepSyncDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsTwoStepSyncDiscards.setStatus('current')
f3PtpSOOCStatsFollowupDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsFollowupDiscards.setStatus('current')
f3PtpSOOCStatsDelayReqDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsDelayReqDiscards.setStatus('current')
f3PtpSOOCStatsPDelayReqDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsPDelayReqDiscards.setStatus('current')
f3PtpSOOCStatsPDelayRspDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsPDelayRspDiscards.setStatus('current')
f3PtpSOOCStatsPDelayFollowupDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsPDelayFollowupDiscards.setStatus('current')
f3PtpSOOCStatsInvalidTLVLenDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsInvalidTLVLenDiscards.setStatus('current')
f3PtpSOOCStatsInvalidTLVTypeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCStatsInvalidTLVTypeDiscards.setStatus('current')
f3PtpSOOCStatsMaxFwdFlowWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCStatsMaxFwdFlowWeight.setStatus('current')
f3PtpSOOCStatsAvgFwdFlowWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCStatsAvgFwdFlowWeight.setStatus('current')
f3PtpSOOCStatsMinRevFlowWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCStatsMinRevFlowWeight.setStatus('current')
f3PtpSOOCStatsMaxRevFlowWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCStatsMaxRevFlowWeight.setStatus('current')
f3PtpSOOCStatsAvgRevFlowWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCStatsAvgRevFlowWeight.setStatus('current')
f3PtpSOOCStatsNumClockRecTransients = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 7, 1, 37), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCStatsNumClockRecTransients.setStatus('current')
f3PtpSOOCHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8), )
if mibBuilder.loadTexts: f3PtpSOOCHistoryTable.setStatus('current')
f3PtpSOOCHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpTSIndex"), (0, "F3-PTP-MIB", "f3PtpSOOCIndex"), (0, "F3-PTP-MIB", "f3PtpSOOCStatsIndex"), (0, "F3-PTP-MIB", "f3PtpSOOCHistoryIndex"))
if mibBuilder.loadTexts: f3PtpSOOCHistoryEntry.setStatus('current')
f3PtpSOOCHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3PtpSOOCHistoryIndex.setStatus('current')
f3PtpSOOCHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryTime.setStatus('current')
f3PtpSOOCHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryValid.setStatus('current')
f3PtpSOOCHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCHistoryAction.setStatus('current')
f3PtpSOOCHistoryMinOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 5), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMinOffsetFromMaster.setStatus('current')
f3PtpSOOCHistoryMaxOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 6), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMaxOffsetFromMaster.setStatus('current')
f3PtpSOOCHistoryAvgOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 7), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryAvgOffsetFromMaster.setStatus('current')
f3PtpSOOCHistoryMinMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 8), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMinMeanPathDelay.setStatus('current')
f3PtpSOOCHistoryMaxMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 9), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMaxMeanPathDelay.setStatus('current')
f3PtpSOOCHistoryAvgMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 10), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryAvgMeanPathDelay.setStatus('current')
f3PtpSOOCHistoryMinSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 11), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMinSyncPathDelay.setStatus('current')
f3PtpSOOCHistoryMaxSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 12), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMaxSyncPathDelay.setStatus('current')
f3PtpSOOCHistoryAvgSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 13), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryAvgSyncPathDelay.setStatus('current')
f3PtpSOOCHistoryMinSyncPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 14), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMinSyncPDV.setStatus('current')
f3PtpSOOCHistoryMaxSyncPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 15), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMaxSyncPDV.setStatus('current')
f3PtpSOOCHistoryAvgSyncPDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 16), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryAvgSyncPDV.setStatus('current')
f3PtpSOOCHistoryMgmtMsgsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMgmtMsgsDiscarded.setStatus('current')
f3PtpSOOCHistoryInvalidMsgLenDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryInvalidMsgLenDiscards.setStatus('current')
f3PtpSOOCHistoryUnknownMasterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryUnknownMasterDiscards.setStatus('current')
f3PtpSOOCHistoryUnknownDomainDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryUnknownDomainDiscards.setStatus('current')
f3PtpSOOCHistoryMulticastAnnounceDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMulticastAnnounceDiscards.setStatus('current')
f3PtpSOOCHistoryOutOfSeqAnnounceMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryOutOfSeqAnnounceMsgs.setStatus('current')
f3PtpSOOCHistoryMulticastSyncDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMulticastSyncDiscards.setStatus('current')
f3PtpSOOCHistoryTwoStepSyncDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryTwoStepSyncDiscards.setStatus('current')
f3PtpSOOCHistoryFollowupDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryFollowupDiscards.setStatus('current')
f3PtpSOOCHistoryDelayReqDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryDelayReqDiscards.setStatus('current')
f3PtpSOOCHistoryPDelayReqDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryPDelayReqDiscards.setStatus('current')
f3PtpSOOCHistoryPDelayRspDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryPDelayRspDiscards.setStatus('current')
f3PtpSOOCHistoryPDelayFollowupDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryPDelayFollowupDiscards.setStatus('current')
f3PtpSOOCHistoryInvalidTLVLenDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryInvalidTLVLenDiscards.setStatus('current')
f3PtpSOOCHistoryInvalidTLVTypeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCHistoryInvalidTLVTypeDiscards.setStatus('current')
f3PtpSOOCHistoryMaxFwdFlowWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMaxFwdFlowWeight.setStatus('current')
f3PtpSOOCHistoryAvgFwdFlowWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCHistoryAvgFwdFlowWeight.setStatus('current')
f3PtpSOOCHistoryMinRevFlowWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMinRevFlowWeight.setStatus('current')
f3PtpSOOCHistoryMaxRevFlowWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCHistoryMaxRevFlowWeight.setStatus('current')
f3PtpSOOCHistoryAvgRevFlowWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCHistoryAvgRevFlowWeight.setStatus('current')
f3PtpSOOCHistoryNumClockRecTransients = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 8, 1, 37), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCHistoryNumClockRecTransients.setStatus('current')
f3PtpSOOCThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 9), )
if mibBuilder.loadTexts: f3PtpSOOCThresholdTable.setStatus('current')
f3PtpSOOCThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 9, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpTSIndex"), (0, "F3-PTP-MIB", "f3PtpSOOCIndex"), (0, "F3-PTP-MIB", "f3PtpSOOCStatsIndex"), (0, "F3-PTP-MIB", "f3PtpSOOCThresholdIndex"))
if mibBuilder.loadTexts: f3PtpSOOCThresholdEntry.setStatus('current')
f3PtpSOOCThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3PtpSOOCThresholdIndex.setStatus('current')
f3PtpSOOCThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 9, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCThresholdInterval.setStatus('current')
f3PtpSOOCThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 9, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCThresholdVariable.setStatus('current')
f3PtpSOOCThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 9, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCThresholdValueLo.setStatus('current')
f3PtpSOOCThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 9, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpSOOCThresholdValueHi.setStatus('current')
f3PtpSOOCThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 9, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpSOOCThresholdMonValue.setStatus('current')
f3PtpTSStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10), )
if mibBuilder.loadTexts: f3PtpTSStatsTable.setStatus('current')
f3PtpTSStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpTSIndex"), (0, "F3-PTP-MIB", "f3PtpTSStatsIndex"))
if mibBuilder.loadTexts: f3PtpTSStatsEntry.setStatus('current')
f3PtpTSStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpTSStatsIndex.setStatus('current')
f3PtpTSStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSStatsIntervalType.setStatus('current')
f3PtpTSStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSStatsValid.setStatus('current')
f3PtpTSStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSStatsAction.setStatus('current')
f3PtpTSStatsTotalTimeCR5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSStatsTotalTimeCR5.setStatus('current')
f3PtpTSStatsTotalTimeCR4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSStatsTotalTimeCR4.setStatus('current')
f3PtpTSStatsTotalTimeCR3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSStatsTotalTimeCR3.setStatus('current')
f3PtpTSStatsTotalTimePR5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSStatsTotalTimePR5.setStatus('current')
f3PtpTSStatsTotalTimePR4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSStatsTotalTimePR4.setStatus('current')
f3PtpTSStatsTotalTimePR3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 10, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSStatsTotalTimePR3.setStatus('current')
f3PtpTSHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11), )
if mibBuilder.loadTexts: f3PtpTSHistoryTable.setStatus('current')
f3PtpTSHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpTSIndex"), (0, "F3-PTP-MIB", "f3PtpTSStatsIndex"), (0, "F3-PTP-MIB", "f3PtpTSHistoryIndex"))
if mibBuilder.loadTexts: f3PtpTSHistoryEntry.setStatus('current')
f3PtpTSHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3PtpTSHistoryIndex.setStatus('current')
f3PtpTSHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSHistoryTime.setStatus('current')
f3PtpTSHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSHistoryValid.setStatus('current')
f3PtpTSHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSHistoryAction.setStatus('current')
f3PtpTSHistoryTotalTimeCR5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSHistoryTotalTimeCR5.setStatus('current')
f3PtpTSHistoryTotalTimeCR4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSHistoryTotalTimeCR4.setStatus('current')
f3PtpTSHistoryTotalTimeCR3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSHistoryTotalTimeCR3.setStatus('current')
f3PtpTSHistoryTotalTimePR5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSHistoryTotalTimePR5.setStatus('current')
f3PtpTSHistoryTotalTimePR4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSHistoryTotalTimePR4.setStatus('current')
f3PtpTSHistoryTotalTimePR3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 11, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSHistoryTotalTimePR3.setStatus('current')
f3PtpTSThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 12), )
if mibBuilder.loadTexts: f3PtpTSThresholdTable.setStatus('current')
f3PtpTSThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 12, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpTSIndex"), (0, "F3-PTP-MIB", "f3PtpTSStatsIndex"), (0, "F3-PTP-MIB", "f3PtpTSThresholdIndex"))
if mibBuilder.loadTexts: f3PtpTSThresholdEntry.setStatus('current')
f3PtpTSThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3PtpTSThresholdIndex.setStatus('current')
f3PtpTSThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 12, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSThresholdInterval.setStatus('current')
f3PtpTSThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 12, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSThresholdVariable.setStatus('current')
f3PtpTSThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 12, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSThresholdValueLo.setStatus('current')
f3PtpTSThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 12, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTSThresholdValueHi.setStatus('current')
f3PtpTSThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 12, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTSThresholdMonValue.setStatus('current')
f3PtpMCIStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13), )
if mibBuilder.loadTexts: f3PtpMCIStatsTable.setStatus('current')
f3PtpMCIStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpBCIndex"), (0, "F3-PTP-MIB", "f3PtpMCIIndex"), (0, "F3-PTP-MIB", "f3PtpMCIStatsIndex"))
if mibBuilder.loadTexts: f3PtpMCIStatsEntry.setStatus('current')
f3PtpMCIStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpMCIStatsIndex.setStatus('current')
f3PtpMCIStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIStatsIntervalType.setStatus('current')
f3PtpMCIStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIStatsValid.setStatus('current')
f3PtpMCIStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMCIStatsAction.setStatus('current')
f3PtpMCIStatsPtpDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIStatsPtpDiscards.setStatus('current')
f3PtpMCIStatsSyncDeniedEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIStatsSyncDeniedEvents.setStatus('current')
f3PtpMCIStatsDelayRspDeniedEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIStatsDelayRspDeniedEvents.setStatus('current')
f3PtpMCIStatsAnnounceDeniedEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIStatsAnnounceDeniedEvents.setStatus('current')
f3PtpMCIStatsSyncCancelledEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIStatsSyncCancelledEvents.setStatus('current')
f3PtpMCIStatsDelayRspCancelledEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIStatsDelayRspCancelledEvents.setStatus('current')
f3PtpMCIStatsAnnounceCancelledEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIStatsAnnounceCancelledEvents.setStatus('current')
f3PtpMCIStatsDynamicSlavesLearnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIStatsDynamicSlavesLearnt.setStatus('current')
f3PtpMCIStatsDynamicSlavesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 13, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIStatsDynamicSlavesDropped.setStatus('current')
f3PtpMCIHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14), )
if mibBuilder.loadTexts: f3PtpMCIHistoryTable.setStatus('current')
f3PtpMCIHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpBCIndex"), (0, "F3-PTP-MIB", "f3PtpMCIIndex"), (0, "F3-PTP-MIB", "f3PtpMCIStatsIndex"), (0, "F3-PTP-MIB", "f3PtpMCIHistoryIndex"))
if mibBuilder.loadTexts: f3PtpMCIHistoryEntry.setStatus('current')
f3PtpMCIHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3PtpMCIHistoryIndex.setStatus('current')
f3PtpMCIHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIHistoryTime.setStatus('current')
f3PtpMCIHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIHistoryValid.setStatus('current')
f3PtpMCIHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMCIHistoryAction.setStatus('current')
f3PtpMCIHistoryPtpDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIHistoryPtpDiscards.setStatus('current')
f3PtpMCIHistorySyncDeniedEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIHistorySyncDeniedEvents.setStatus('current')
f3PtpMCIHistoryDelayRspDeniedEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIHistoryDelayRspDeniedEvents.setStatus('current')
f3PtpMCIHistoryAnnounceDeniedEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIHistoryAnnounceDeniedEvents.setStatus('current')
f3PtpMCIHistorySyncCancelledEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIHistorySyncCancelledEvents.setStatus('current')
f3PtpMCIHistoryDelayRspCancelledEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIHistoryDelayRspCancelledEvents.setStatus('current')
f3PtpMCIHistoryAnnounceCancelledEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIHistoryAnnounceCancelledEvents.setStatus('current')
f3PtpMCIHistoryDynamicSlavesLearnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIHistoryDynamicSlavesLearnt.setStatus('current')
f3PtpMCIHistoryDynamicSlavesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 14, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIHistoryDynamicSlavesDropped.setStatus('current')
f3PtpMCIThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 15), )
if mibBuilder.loadTexts: f3PtpMCIThresholdTable.setStatus('current')
f3PtpMCIThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 15, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpBCIndex"), (0, "F3-PTP-MIB", "f3PtpMCIIndex"), (0, "F3-PTP-MIB", "f3PtpMCIStatsIndex"), (0, "F3-PTP-MIB", "f3PtpMCIThresholdIndex"))
if mibBuilder.loadTexts: f3PtpMCIThresholdEntry.setStatus('current')
f3PtpMCIThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3PtpMCIThresholdIndex.setStatus('current')
f3PtpMCIThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 15, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIThresholdInterval.setStatus('current')
f3PtpMCIThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 15, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIThresholdVariable.setStatus('current')
f3PtpMCIThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 15, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMCIThresholdValueLo.setStatus('current')
f3PtpMCIThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 15, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpMCIThresholdValueHi.setStatus('current')
f3PtpMCIThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 15, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpMCIThresholdMonValue.setStatus('current')
f3PtpRemoteSlaveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16), )
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsTable.setStatus('current')
f3PtpRemoteSlaveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpBCIndex"), (0, "F3-PTP-MIB", "f3PtpMCIIndex"), (0, "F3-PTP-MIB", "f3PtpRemoteSlaveStatsSlaveType"), (0, "F3-PTP-MIB", "f3PtpRemoteSlaveStatsSlaveIndex"), (0, "F3-PTP-MIB", "f3PtpRemoteSlaveStatsIndex"))
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsEntry.setStatus('current')
f3PtpRemoteSlaveStatsSlaveType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 1), RemoteSlaveType())
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsSlaveType.setStatus('current')
f3PtpRemoteSlaveStatsSlaveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 2), Integer32())
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsSlaveIndex.setStatus('current')
f3PtpRemoteSlaveStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsIndex.setStatus('current')
f3PtpRemoteSlaveStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 4), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsIntervalType.setStatus('current')
f3PtpRemoteSlaveStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsValid.setStatus('current')
f3PtpRemoteSlaveStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 6), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsAction.setStatus('current')
f3PtpRemoteSlaveStatsSyncMsgsGen = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsSyncMsgsGen.setStatus('current')
f3PtpRemoteSlaveStatsDelayRspMsgsGen = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsDelayRspMsgsGen.setStatus('current')
f3PtpRemoteSlaveStatsAnnounceMsgsGen = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsAnnounceMsgsGen.setStatus('current')
f3PtpRemoteSlaveStatsSignallingMsgsGen = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsSignallingMsgsGen.setStatus('current')
f3PtpRemoteSlaveStatsDelayReqMsgsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsDelayReqMsgsRx.setStatus('current')
f3PtpRemoteSlaveStatsSignallingMsgsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsSignallingMsgsRx.setStatus('current')
f3PtpRemoteSlaveStatsDelayReqMsgsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsDelayReqMsgsDropped.setStatus('current')
f3PtpRemoteSlaveStatsInvalidTLVLenDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsInvalidTLVLenDiscards.setStatus('current')
f3PtpRemoteSlaveStatsInvalidTLVTypeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsInvalidTLVTypeDiscards.setStatus('current')
f3PtpRemoteSlaveStatsTimesSyncLeaseExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsTimesSyncLeaseExp.setStatus('current')
f3PtpRemoteSlaveStatsTimesDelayRspLeaseExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsTimesDelayRspLeaseExp.setStatus('current')
f3PtpRemoteSlaveStatsTimesAnnounceLeaseExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 16, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveStatsTimesAnnounceLeaseExp.setStatus('current')
f3PtpRemoteSlaveHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17), )
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryTable.setStatus('current')
f3PtpRemoteSlaveHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpBCIndex"), (0, "F3-PTP-MIB", "f3PtpMCIIndex"), (0, "F3-PTP-MIB", "f3PtpRemoteSlaveStatsSlaveType"), (0, "F3-PTP-MIB", "f3PtpRemoteSlaveStatsSlaveIndex"), (0, "F3-PTP-MIB", "f3PtpRemoteSlaveStatsIndex"), (0, "F3-PTP-MIB", "f3PtpRemoteSlaveHistoryIndex"))
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryEntry.setStatus('current')
f3PtpRemoteSlaveHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryIndex.setStatus('current')
f3PtpRemoteSlaveHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryTime.setStatus('current')
f3PtpRemoteSlaveHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryValid.setStatus('current')
f3PtpRemoteSlaveHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryAction.setStatus('current')
f3PtpRemoteSlaveHistorySyncMsgsGen = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistorySyncMsgsGen.setStatus('current')
f3PtpRemoteSlaveHistoryDelayRspMsgsGen = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryDelayRspMsgsGen.setStatus('current')
f3PtpRemoteSlaveHistoryAnnounceMsgsGen = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryAnnounceMsgsGen.setStatus('current')
f3PtpRemoteSlaveHistorySignallingMsgsGen = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistorySignallingMsgsGen.setStatus('current')
f3PtpRemoteSlaveHistoryDelayReqMsgsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryDelayReqMsgsRx.setStatus('current')
f3PtpRemoteSlaveHistorySignallingMsgsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistorySignallingMsgsRx.setStatus('current')
f3PtpRemoteSlaveHistoryDelayReqMsgsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryDelayReqMsgsDropped.setStatus('current')
f3PtpRemoteSlaveHistoryInvalidTLVLenDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryInvalidTLVLenDiscards.setStatus('current')
f3PtpRemoteSlaveHistoryInvalidTLVTypeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryInvalidTLVTypeDiscards.setStatus('current')
f3PtpRemoteSlaveHistoryTimesSyncLeaseExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryTimesSyncLeaseExp.setStatus('current')
f3PtpRemoteSlaveHistoryTimesDelayRspLeaseExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryTimesDelayRspLeaseExp.setStatus('current')
f3PtpRemoteSlaveHistoryTimesAnnounceLeaseExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 17, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveHistoryTimesAnnounceLeaseExp.setStatus('current')
f3PtpRemoteSlaveThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 18), )
if mibBuilder.loadTexts: f3PtpRemoteSlaveThresholdTable.setStatus('current')
f3PtpRemoteSlaveThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 18, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpBCIndex"), (0, "F3-PTP-MIB", "f3PtpMCIIndex"), (0, "F3-PTP-MIB", "f3PtpRemoteSlaveStatsSlaveType"), (0, "F3-PTP-MIB", "f3PtpRemoteSlaveStatsSlaveIndex"), (0, "F3-PTP-MIB", "f3PtpRemoteSlaveStatsIndex"), (0, "F3-PTP-MIB", "f3PtpRemoteSlaveThresholdIndex"))
if mibBuilder.loadTexts: f3PtpRemoteSlaveThresholdEntry.setStatus('current')
f3PtpRemoteSlaveThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3PtpRemoteSlaveThresholdIndex.setStatus('current')
f3PtpRemoteSlaveThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 18, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveThresholdInterval.setStatus('current')
f3PtpRemoteSlaveThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 18, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveThresholdVariable.setStatus('current')
f3PtpRemoteSlaveThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 18, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpRemoteSlaveThresholdValueLo.setStatus('current')
f3PtpRemoteSlaveThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 18, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpRemoteSlaveThresholdValueHi.setStatus('current')
f3PtpRemoteSlaveThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 18, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpRemoteSlaveThresholdMonValue.setStatus('current')
f3PtpTrafficPortFlowPointStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19), )
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsTable.setStatus('current')
f3PtpTrafficPortFlowPointStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "F3-PTP-MIB", "f3PtpTrafficPortFlowPointIndex"), (0, "F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsIndex"))
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsEntry.setStatus('current')
f3PtpTrafficPortFlowPointStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsIndex.setStatus('current')
f3PtpTrafficPortFlowPointStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsIntervalType.setStatus('current')
f3PtpTrafficPortFlowPointStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsValid.setStatus('current')
f3PtpTrafficPortFlowPointStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsAction.setStatus('current')
f3PtpTrafficPortFlowPointStatsAnnouncesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsAnnouncesRx.setStatus('current')
f3PtpTrafficPortFlowPointStatsAnnouncesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsAnnouncesTx.setStatus('current')
f3PtpTrafficPortFlowPointStatsSyncsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsSyncsRx.setStatus('current')
f3PtpTrafficPortFlowPointStatsSyncsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsSyncsTx.setStatus('current')
f3PtpTrafficPortFlowPointStatsFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsFollowupsRx.setStatus('current')
f3PtpTrafficPortFlowPointStatsFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsFollowupsTx.setStatus('current')
f3PtpTrafficPortFlowPointStatsDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsDelayReqsRx.setStatus('current')
f3PtpTrafficPortFlowPointStatsDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsDelayReqsTx.setStatus('current')
f3PtpTrafficPortFlowPointStatsDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsDelayRspsRx.setStatus('current')
f3PtpTrafficPortFlowPointStatsDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsDelayRspsTx.setStatus('current')
f3PtpTrafficPortFlowPointStatsPDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsPDelayReqsRx.setStatus('current')
f3PtpTrafficPortFlowPointStatsPDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsPDelayReqsTx.setStatus('current')
f3PtpTrafficPortFlowPointStatsPDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsPDelayRspsRx.setStatus('current')
f3PtpTrafficPortFlowPointStatsPDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsPDelayRspsTx.setStatus('current')
f3PtpTrafficPortFlowPointStatsPDelayRspFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsPDelayRspFollowupsRx.setStatus('current')
f3PtpTrafficPortFlowPointStatsPDelayRspFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsPDelayRspFollowupsTx.setStatus('current')
f3PtpTrafficPortFlowPointStatsSignalingRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsSignalingRx.setStatus('current')
f3PtpTrafficPortFlowPointStatsSignalingTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsSignalingTx.setStatus('current')
f3PtpTrafficPortFlowPointStatsMgmtFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsMgmtFramesRx.setStatus('current')
f3PtpTrafficPortFlowPointStatsMgmtFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsMgmtFramesTx.setStatus('current')
f3PtpTrafficPortFlowPointStatsPtpUnknownsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsPtpUnknownsRx.setStatus('current')
f3PtpTrafficPortFlowPointStatsPtpUnknownsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsPtpUnknownsTx.setStatus('current')
f3PtpTrafficPortFlowPointStatsMinSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsMinSyncResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsMaxSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsMaxSyncResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsAvgSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsAvgSyncResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsMinDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsMinDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsMaxDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsMaxDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsAvgDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsAvgDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsMinPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsMinPDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsMaxPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsMaxPDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsAvgPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsAvgPDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsMinPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsMinPDelayRspResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsMaxPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsMaxPDelayRspResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsAvgPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsAvgPDelayRspResTime.setStatus('current')
f3PtpTrafficPortFlowPointStatsDestMciNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 39), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsDestMciNoMatchDiscards.setStatus('current')
f3PtpTrafficPortFlowPointStatsTagNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 19, 1, 40), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointStatsTagNoMatchDiscards.setStatus('current')
f3PtpTrafficPortFlowPointHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20), )
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryTable.setStatus('current')
f3PtpTrafficPortFlowPointHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "F3-PTP-MIB", "f3PtpTrafficPortFlowPointIndex"), (0, "F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsIndex"), (0, "F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryIndex"))
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryEntry.setStatus('current')
f3PtpTrafficPortFlowPointHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryIndex.setStatus('current')
f3PtpTrafficPortFlowPointHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryValid.setStatus('current')
f3PtpTrafficPortFlowPointHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryAction.setStatus('current')
f3PtpTrafficPortFlowPointHistoryAnnouncesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryAnnouncesRx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryAnnouncesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryAnnouncesTx.setStatus('current')
f3PtpTrafficPortFlowPointHistorySyncsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistorySyncsRx.setStatus('current')
f3PtpTrafficPortFlowPointHistorySyncsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistorySyncsTx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryFollowupsRx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryFollowupsTx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryDelayReqsRx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryDelayReqsTx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryDelayRspsRx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryDelayRspsTx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryPDelayReqsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryPDelayReqsRx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryPDelayReqsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryPDelayReqsTx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryPDelayRspsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryPDelayRspsRx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryPDelayRspsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryPDelayRspsTx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryPDelayRspFollowupsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryPDelayRspFollowupsRx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryPDelayRspFollowupsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryPDelayRspFollowupsTx.setStatus('current')
f3PtpTrafficPortFlowPointHistorySignalingRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistorySignalingRx.setStatus('current')
f3PtpTrafficPortFlowPointHistorySignalingTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistorySignalingTx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryMgmtFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryMgmtFramesRx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryMgmtFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryMgmtFramesTx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryPtpUnknownsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryPtpUnknownsRx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryPtpUnknownsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryPtpUnknownsTx.setStatus('current')
f3PtpTrafficPortFlowPointHistoryMinSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryMinSyncResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryMaxSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryMaxSyncResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryAvgSyncResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryAvgSyncResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryMinDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryMinDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryMaxDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryMaxDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryAvgDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryAvgDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryMinPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryMinPDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryMaxPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryMaxPDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryAvgPDelayReqResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryAvgPDelayReqResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryMinPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryMinPDelayRspResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryMaxPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryMaxPDelayRspResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryAvgPDelayRspResTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryAvgPDelayRspResTime.setStatus('current')
f3PtpTrafficPortFlowPointHistoryDestMciNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 39), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryDestMciNoMatchDiscards.setStatus('current')
f3PtpTrafficPortFlowPointHistoryTagNoMatchDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 20, 1, 40), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointHistoryTagNoMatchDiscards.setStatus('current')
f3PtpTrafficPortFlowPointThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 21), )
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointThresholdTable.setStatus('current')
f3PtpTrafficPortFlowPointThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 21, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "F3-PTP-MIB", "f3PtpTrafficPortFlowPointIndex"), (0, "F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsIndex"), (0, "F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdIndex"))
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointThresholdEntry.setStatus('current')
f3PtpTrafficPortFlowPointThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointThresholdIndex.setStatus('current')
f3PtpTrafficPortFlowPointThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 21, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointThresholdInterval.setStatus('current')
f3PtpTrafficPortFlowPointThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 21, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointThresholdVariable.setStatus('current')
f3PtpTrafficPortFlowPointThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 21, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointThresholdValueLo.setStatus('current')
f3PtpTrafficPortFlowPointThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 21, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointThresholdValueHi.setStatus('current')
f3PtpTrafficPortFlowPointThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 21, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointThresholdMonValue.setStatus('current')
f3PtpPTPPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22), )
if mibBuilder.loadTexts: f3PtpPTPPortStatsTable.setStatus('current')
f3PtpPTPPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpPTPPortIndex"), (0, "F3-PTP-MIB", "f3PtpPTPPortStatsIndex"))
if mibBuilder.loadTexts: f3PtpPTPPortStatsEntry.setStatus('current')
f3PtpPTPPortStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpPTPPortStatsIndex.setStatus('current')
f3PtpPTPPortStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsIntervalType.setStatus('current')
f3PtpPTPPortStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsValid.setStatus('current')
f3PtpPTPPortStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortStatsAction.setStatus('current')
f3PtpPTPPortStatsAvgAnnounceRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsAvgAnnounceRate.setStatus('current')
f3PtpPTPPortStatsAvgSyncRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsAvgSyncRate.setStatus('current')
f3PtpPTPPortStatsAvgDelayReqRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsAvgDelayReqRate.setStatus('current')
f3PtpPTPPortStatsAvgDelayRespRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsAvgDelayRespRate.setStatus('current')
f3PtpPTPPortStatsMismatchDomainDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsMismatchDomainDiscards.setStatus('current')
f3PtpPTPPortStatsMessageWrongTypeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsMessageWrongTypeDiscards.setStatus('current')
f3PtpPTPPortStatsMessagesWrongLengthDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsMessagesWrongLengthDiscards.setStatus('current')
f3PtpPTPPortStatsUnknownMasterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsUnknownMasterDiscards.setStatus('deprecated')
f3PtpPTPPortStatsMinOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsMinOffsetFromMaster.setStatus('current')
f3PtpPTPPortStatsMaxOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsMaxOffsetFromMaster.setStatus('current')
f3PtpPTPPortStatsAvgOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsAvgOffsetFromMaster.setStatus('current')
f3PtpPTPPortStatsMinSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsMinSyncPathDelay.setStatus('current')
f3PtpPTPPortStatsMaxSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsMaxSyncPathDelay.setStatus('current')
f3PtpPTPPortStatsAvgSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsAvgSyncPathDelay.setStatus('current')
f3PtpPTPPortStatsMinMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsMinMeanPathDelay.setStatus('current')
f3PtpPTPPortStatsMaxMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsMaxMeanPathDelay.setStatus('current')
f3PtpPTPPortStatsAvgMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsAvgMeanPathDelay.setStatus('current')
f3PtpPTPPortStatsMsgMiscDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 22, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortStatsMsgMiscDiscards.setStatus('deprecated')
f3PtpPTPPortHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23), )
if mibBuilder.loadTexts: f3PtpPTPPortHistoryTable.setStatus('current')
f3PtpPTPPortHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpPTPPortIndex"), (0, "F3-PTP-MIB", "f3PtpPTPPortStatsIndex"), (0, "F3-PTP-MIB", "f3PtpPTPPortHistoryIndex"))
if mibBuilder.loadTexts: f3PtpPTPPortHistoryEntry.setStatus('current')
f3PtpPTPPortHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpPTPPortHistoryIndex.setStatus('current')
f3PtpPTPPortHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryTime.setStatus('current')
f3PtpPTPPortHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryValid.setStatus('current')
f3PtpPTPPortHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryAction.setStatus('current')
f3PtpPTPPortHistoryAvgAnnounceRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryAvgAnnounceRate.setStatus('current')
f3PtpPTPPortHistoryAvgSyncRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryAvgSyncRate.setStatus('current')
f3PtpPTPPortHistoryAvgDelayReqRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryAvgDelayReqRate.setStatus('current')
f3PtpPTPPortHistoryAvgDelayRespRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryAvgDelayRespRate.setStatus('current')
f3PtpPTPPortHistoryMismatchDomainDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryMismatchDomainDiscards.setStatus('current')
f3PtpPTPPortHistoryMessageWrongTypeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryMessageWrongTypeDiscards.setStatus('current')
f3PtpPTPPortHistoryMessagesWrongLengthDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryMessagesWrongLengthDiscards.setStatus('current')
f3PtpPTPPortHistoryUnknownMasterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryUnknownMasterDiscards.setStatus('deprecated')
f3PtpPTPPortHistoryMinOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryMinOffsetFromMaster.setStatus('current')
f3PtpPTPPortHistoryMaxOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryMaxOffsetFromMaster.setStatus('current')
f3PtpPTPPortHistoryAvgOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryAvgOffsetFromMaster.setStatus('current')
f3PtpPTPPortHistoryMinSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryMinSyncPathDelay.setStatus('current')
f3PtpPTPPortHistoryMaxSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryMaxSyncPathDelay.setStatus('current')
f3PtpPTPPortHistoryAvgSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryAvgSyncPathDelay.setStatus('current')
f3PtpPTPPortHistoryMinMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryMinMeanPathDelay.setStatus('current')
f3PtpPTPPortHistoryMaxMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryMaxMeanPathDelay.setStatus('current')
f3PtpPTPPortHistoryAvgMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryAvgMeanPathDelay.setStatus('current')
f3PtpPTPPortHistoryMsgMiscDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 23, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortHistoryMsgMiscDiscards.setStatus('deprecated')
f3PtpPTPPortThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 24), )
if mibBuilder.loadTexts: f3PtpPTPPortThresholdTable.setStatus('current')
f3PtpPTPPortThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 24, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpPTPPortIndex"), (0, "F3-PTP-MIB", "f3PtpPTPPortStatsIndex"), (0, "F3-PTP-MIB", "f3PtpPTPPortThresholdIndex"))
if mibBuilder.loadTexts: f3PtpPTPPortThresholdEntry.setStatus('current')
f3PtpPTPPortThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3PtpPTPPortThresholdIndex.setStatus('current')
f3PtpPTPPortThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 24, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortThresholdInterval.setStatus('current')
f3PtpPTPPortThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 24, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortThresholdVariable.setStatus('current')
f3PtpPTPPortThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 24, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortThresholdValueLo.setStatus('current')
f3PtpPTPPortThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 24, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPPortThresholdValueHi.setStatus('current')
f3PtpPTPPortThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 24, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPPortThresholdMonValue.setStatus('current')
f3PtpPTPClockStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25), )
if mibBuilder.loadTexts: f3PtpPTPClockStatsTable.setStatus('current')
f3PtpPTPClockStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockStatsIndex"))
if mibBuilder.loadTexts: f3PtpPTPClockStatsEntry.setStatus('current')
f3PtpPTPClockStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpPTPClockStatsIndex.setStatus('current')
f3PtpPTPClockStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockStatsIntervalType.setStatus('current')
f3PtpPTPClockStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockStatsValid.setStatus('current')
f3PtpPTPClockStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockStatsAction.setStatus('current')
f3PtpPTPClockStatsMinOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 5), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockStatsMinOffsetFromMaster.setStatus('current')
f3PtpPTPClockStatsMaxOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 6), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockStatsMaxOffsetFromMaster.setStatus('current')
f3PtpPTPClockStatsAvgOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 7), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockStatsAvgOffsetFromMaster.setStatus('current')
f3PtpPTPClockStatsMinSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 8), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockStatsMinSyncPathDelay.setStatus('current')
f3PtpPTPClockStatsMaxSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 9), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockStatsMaxSyncPathDelay.setStatus('current')
f3PtpPTPClockStatsAvgSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 10), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockStatsAvgSyncPathDelay.setStatus('current')
f3PtpPTPClockStatsMinMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 11), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockStatsMinMeanPathDelay.setStatus('current')
f3PtpPTPClockStatsMaxMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 12), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockStatsMaxMeanPathDelay.setStatus('current')
f3PtpPTPClockStatsAvgMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 25, 1, 13), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockStatsAvgMeanPathDelay.setStatus('current')
f3PtpPTPClockHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26), )
if mibBuilder.loadTexts: f3PtpPTPClockHistoryTable.setStatus('current')
f3PtpPTPClockHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockStatsIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockHistoryIndex"))
if mibBuilder.loadTexts: f3PtpPTPClockHistoryEntry.setStatus('current')
f3PtpPTPClockHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpPTPClockHistoryIndex.setStatus('current')
f3PtpPTPClockHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryTime.setStatus('current')
f3PtpPTPClockHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryValid.setStatus('current')
f3PtpPTPClockHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryAction.setStatus('current')
f3PtpPTPClockHistoryMinOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 5), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryMinOffsetFromMaster.setStatus('current')
f3PtpPTPClockHistoryMaxOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 6), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryMaxOffsetFromMaster.setStatus('current')
f3PtpPTPClockHistoryAvgOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 7), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryAvgOffsetFromMaster.setStatus('current')
f3PtpPTPClockHistoryMinSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 8), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryMinSyncPathDelay.setStatus('current')
f3PtpPTPClockHistoryMaxSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 9), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryMaxSyncPathDelay.setStatus('current')
f3PtpPTPClockHistoryAvgSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 10), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryAvgSyncPathDelay.setStatus('current')
f3PtpPTPClockHistoryMinMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 11), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryMinMeanPathDelay.setStatus('current')
f3PtpPTPClockHistoryMaxMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 12), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryMaxMeanPathDelay.setStatus('current')
f3PtpPTPClockHistoryAvgMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 26, 1, 13), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockHistoryAvgMeanPathDelay.setStatus('current')
f3PtpPTPClockThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 27), )
if mibBuilder.loadTexts: f3PtpPTPClockThresholdTable.setStatus('current')
f3PtpPTPClockThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 27, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockStatsIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockThresholdIndex"))
if mibBuilder.loadTexts: f3PtpPTPClockThresholdEntry.setStatus('current')
f3PtpPTPClockThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3PtpPTPClockThresholdIndex.setStatus('current')
f3PtpPTPClockThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 27, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockThresholdInterval.setStatus('current')
f3PtpPTPClockThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 27, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockThresholdVariable.setStatus('current')
f3PtpPTPClockThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 27, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockThresholdValueLo.setStatus('current')
f3PtpPTPClockThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 27, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpPTPClockThresholdValueHi.setStatus('current')
f3PtpPTPClockThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 27, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpPTPClockThresholdMonValue.setStatus('current')
f3PtpL3PTPPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28), )
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsTable.setStatus('current')
f3PtpL3PTPPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpL3PTPPortIndex"), (0, "F3-PTP-MIB", "f3PtpL3PTPPortStatsIndex"))
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsEntry.setStatus('current')
f3PtpL3PTPPortStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsIndex.setStatus('current')
f3PtpL3PTPPortStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsIntervalType.setStatus('current')
f3PtpL3PTPPortStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsValid.setStatus('current')
f3PtpL3PTPPortStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsAction.setStatus('current')
f3PtpL3PTPPortStatsAvgAnnounceRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsAvgAnnounceRate.setStatus('current')
f3PtpL3PTPPortStatsAvgSyncRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsAvgSyncRate.setStatus('current')
f3PtpL3PTPPortStatsAvgDelayReqRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsAvgDelayReqRate.setStatus('current')
f3PtpL3PTPPortStatsAvgDelayRespRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsAvgDelayRespRate.setStatus('current')
f3PtpL3PTPPortStatsMismatchDomainDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsMismatchDomainDiscards.setStatus('current')
f3PtpL3PTPPortStatsMessageWrongTypeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsMessageWrongTypeDiscards.setStatus('current')
f3PtpL3PTPPortStatsMessagesWrongLengthDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsMessagesWrongLengthDiscards.setStatus('current')
f3PtpL3PTPPortStatsUnknownMasterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsUnknownMasterDiscards.setStatus('deprecated')
f3PtpL3PTPPortStatsMinOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsMinOffsetFromMaster.setStatus('current')
f3PtpL3PTPPortStatsMaxOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsMaxOffsetFromMaster.setStatus('current')
f3PtpL3PTPPortStatsAvgOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsAvgOffsetFromMaster.setStatus('current')
f3PtpL3PTPPortStatsMinSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsMinSyncPathDelay.setStatus('current')
f3PtpL3PTPPortStatsMaxSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsMaxSyncPathDelay.setStatus('current')
f3PtpL3PTPPortStatsAvgSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsAvgSyncPathDelay.setStatus('current')
f3PtpL3PTPPortStatsMinMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsMinMeanPathDelay.setStatus('current')
f3PtpL3PTPPortStatsMaxMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsMaxMeanPathDelay.setStatus('current')
f3PtpL3PTPPortStatsAvgMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsAvgMeanPathDelay.setStatus('current')
f3PtpL3PTPPortStatsMsgMiscDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 28, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortStatsMsgMiscDiscards.setStatus('deprecated')
f3PtpL3PTPPortHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29), )
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryTable.setStatus('current')
f3PtpL3PTPPortHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpL3PTPPortIndex"), (0, "F3-PTP-MIB", "f3PtpL3PTPPortStatsIndex"), (0, "F3-PTP-MIB", "f3PtpL3PTPPortHistoryIndex"))
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryEntry.setStatus('current')
f3PtpL3PTPPortHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryIndex.setStatus('current')
f3PtpL3PTPPortHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryTime.setStatus('current')
f3PtpL3PTPPortHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryValid.setStatus('current')
f3PtpL3PTPPortHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryAction.setStatus('current')
f3PtpL3PTPPortHistoryAvgAnnounceRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryAvgAnnounceRate.setStatus('current')
f3PtpL3PTPPortHistoryAvgSyncRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryAvgSyncRate.setStatus('current')
f3PtpL3PTPPortHistoryAvgDelayReqRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryAvgDelayReqRate.setStatus('current')
f3PtpL3PTPPortHistoryAvgDelayRespRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryAvgDelayRespRate.setStatus('current')
f3PtpL3PTPPortHistoryMismatchDomainDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryMismatchDomainDiscards.setStatus('current')
f3PtpL3PTPPortHistoryMessageWrongTypeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryMessageWrongTypeDiscards.setStatus('current')
f3PtpL3PTPPortHistoryMessagesWrongLengthDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryMessagesWrongLengthDiscards.setStatus('current')
f3PtpL3PTPPortHistoryUnknownMasterDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryUnknownMasterDiscards.setStatus('deprecated')
f3PtpL3PTPPortHistoryMinOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryMinOffsetFromMaster.setStatus('current')
f3PtpL3PTPPortHistoryMaxOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryMaxOffsetFromMaster.setStatus('current')
f3PtpL3PTPPortHistoryAvgOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryAvgOffsetFromMaster.setStatus('current')
f3PtpL3PTPPortHistoryMinSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryMinSyncPathDelay.setStatus('current')
f3PtpL3PTPPortHistoryMaxSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryMaxSyncPathDelay.setStatus('current')
f3PtpL3PTPPortHistoryAvgSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryAvgSyncPathDelay.setStatus('current')
f3PtpL3PTPPortHistoryMinMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryMinMeanPathDelay.setStatus('current')
f3PtpL3PTPPortHistoryMaxMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryMaxMeanPathDelay.setStatus('current')
f3PtpL3PTPPortHistoryAvgMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryAvgMeanPathDelay.setStatus('current')
f3PtpL3PTPPortHistoryMsgMiscDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 29, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortHistoryMsgMiscDiscards.setStatus('deprecated')
f3PtpL3PTPPortThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 30), )
if mibBuilder.loadTexts: f3PtpL3PTPPortThresholdTable.setStatus('current')
f3PtpL3PTPPortThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 30, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-PTP-MIB", "f3PtpPTPClockIndex"), (0, "F3-PTP-MIB", "f3PtpL3PTPPortIndex"), (0, "F3-PTP-MIB", "f3PtpL3PTPPortStatsIndex"), (0, "F3-PTP-MIB", "f3PtpL3PTPPortThresholdIndex"))
if mibBuilder.loadTexts: f3PtpL3PTPPortThresholdEntry.setStatus('current')
f3PtpL3PTPPortThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3PtpL3PTPPortThresholdIndex.setStatus('current')
f3PtpL3PTPPortThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 30, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortThresholdInterval.setStatus('current')
f3PtpL3PTPPortThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 30, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortThresholdVariable.setStatus('current')
f3PtpL3PTPPortThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 30, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortThresholdValueLo.setStatus('current')
f3PtpL3PTPPortThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 30, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PtpL3PTPPortThresholdValueHi.setStatus('current')
f3PtpL3PTPPortThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 2, 30, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PtpL3PTPPortThresholdMonValue.setStatus('current')
f3PtpAccPortFlowPointThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 3, 1)).setObjects(("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdIndex"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdInterval"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdVariable"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdValueLo"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdValueHi"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdMonValue"))
if mibBuilder.loadTexts: f3PtpAccPortFlowPointThresholdCrossingAlert.setStatus('current')
f3PtpNetPortFlowPointThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 3, 2)).setObjects(("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdIndex"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdInterval"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdVariable"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdValueLo"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdValueHi"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdMonValue"))
if mibBuilder.loadTexts: f3PtpNetPortFlowPointThresholdCrossingAlert.setStatus('current')
f3PtpSOOCCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 3, 3)).setObjects(("F3-PTP-MIB", "f3PtpSOOCThresholdIndex"), ("F3-PTP-MIB", "f3PtpSOOCThresholdInterval"), ("F3-PTP-MIB", "f3PtpSOOCThresholdVariable"), ("F3-PTP-MIB", "f3PtpSOOCThresholdValueLo"), ("F3-PTP-MIB", "f3PtpSOOCThresholdValueHi"), ("F3-PTP-MIB", "f3PtpSOOCThresholdMonValue"))
if mibBuilder.loadTexts: f3PtpSOOCCrossingAlert.setStatus('current')
f3PtpTSCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 3, 4)).setObjects(("F3-PTP-MIB", "f3PtpTSThresholdIndex"), ("F3-PTP-MIB", "f3PtpTSThresholdInterval"), ("F3-PTP-MIB", "f3PtpTSThresholdVariable"), ("F3-PTP-MIB", "f3PtpTSThresholdValueLo"), ("F3-PTP-MIB", "f3PtpTSThresholdValueHi"), ("F3-PTP-MIB", "f3PtpTSThresholdMonValue"))
if mibBuilder.loadTexts: f3PtpTSCrossingAlert.setStatus('current')
f3PtpMCICrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 3, 5)).setObjects(("F3-PTP-MIB", "f3PtpMCIThresholdIndex"), ("F3-PTP-MIB", "f3PtpMCIThresholdInterval"), ("F3-PTP-MIB", "f3PtpMCIThresholdVariable"), ("F3-PTP-MIB", "f3PtpMCIThresholdValueLo"), ("F3-PTP-MIB", "f3PtpMCIThresholdValueHi"), ("F3-PTP-MIB", "f3PtpMCIThresholdMonValue"))
if mibBuilder.loadTexts: f3PtpMCICrossingAlert.setStatus('current')
f3PtpRemoteSlaveCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 3, 6)).setObjects(("F3-PTP-MIB", "f3PtpRemoteSlaveThresholdIndex"), ("F3-PTP-MIB", "f3PtpRemoteSlaveThresholdInterval"), ("F3-PTP-MIB", "f3PtpRemoteSlaveThresholdVariable"), ("F3-PTP-MIB", "f3PtpRemoteSlaveThresholdValueLo"), ("F3-PTP-MIB", "f3PtpRemoteSlaveThresholdValueHi"), ("F3-PTP-MIB", "f3PtpRemoteSlaveThresholdMonValue"))
if mibBuilder.loadTexts: f3PtpRemoteSlaveCrossingAlert.setStatus('current')
f3PtpTrafficPortFlowPointThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 3, 7)).setObjects(("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdIndex"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdInterval"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdVariable"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdValueLo"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdValueHi"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdMonValue"))
if mibBuilder.loadTexts: f3PtpTrafficPortFlowPointThresholdCrossingAlert.setStatus('current')
f3PtpPTPPortCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 3, 8)).setObjects(("F3-PTP-MIB", "f3PtpPTPPortThresholdIndex"), ("F3-PTP-MIB", "f3PtpPTPPortThresholdInterval"), ("F3-PTP-MIB", "f3PtpPTPPortThresholdVariable"), ("F3-PTP-MIB", "f3PtpPTPPortThresholdValueLo"), ("F3-PTP-MIB", "f3PtpPTPPortThresholdValueHi"), ("F3-PTP-MIB", "f3PtpPTPPortThresholdMonValue"))
if mibBuilder.loadTexts: f3PtpPTPPortCrossingAlert.setStatus('current')
f3PtpPTPClockCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 3, 9)).setObjects(("F3-PTP-MIB", "f3PtpPTPClockThresholdIndex"), ("F3-PTP-MIB", "f3PtpPTPClockThresholdInterval"), ("F3-PTP-MIB", "f3PtpPTPClockThresholdVariable"), ("F3-PTP-MIB", "f3PtpPTPClockThresholdValueLo"), ("F3-PTP-MIB", "f3PtpPTPClockThresholdValueHi"), ("F3-PTP-MIB", "f3PtpPTPClockThresholdMonValue"))
if mibBuilder.loadTexts: f3PtpPTPClockCrossingAlert.setStatus('current')
f3PtpL3PTPPortCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 3, 10)).setObjects(("F3-PTP-MIB", "f3PtpL3PTPPortThresholdIndex"), ("F3-PTP-MIB", "f3PtpL3PTPPortThresholdInterval"), ("F3-PTP-MIB", "f3PtpL3PTPPortThresholdVariable"), ("F3-PTP-MIB", "f3PtpL3PTPPortThresholdValueLo"), ("F3-PTP-MIB", "f3PtpL3PTPPortThresholdValueHi"), ("F3-PTP-MIB", "f3PtpL3PTPPortThresholdMonValue"))
if mibBuilder.loadTexts: f3PtpL3PTPPortCrossingAlert.setStatus('current')
f3PtpTSStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 5, 1)).setObjects(("F3-PTP-MIB", "f3PtpTSAdminState"), ("F3-PTP-MIB", "f3PtpTSCurrentCRScore"), ("F3-PTP-MIB", "f3PtpTSCurrentPRScore"), ("F3-PTP-MIB", "f3PtpTSClockRecoveryState"), ("F3-PTP-MIB", "f3PtpTSSelectedPacketClock"))
if mibBuilder.loadTexts: f3PtpTSStatusChangeTrap.setStatus('current')
f3PtpMasterClockStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 5, 2)).setObjects(("F3-PTP-MIB", "f3PtpMasterClockClockClass"), ("F3-PTP-MIB", "f3PtpMasterClockUtcOffset"), ("F3-PTP-MIB", "f3PtpMasterClockActiveTimeRef"), ("F3-PTP-MIB", "f3PtpMasterClockPTPProfile"))
if mibBuilder.loadTexts: f3PtpMasterClockStatusChangeTrap.setStatus('current')
f3PtpBCStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 5, 3)).setObjects(("F3-PTP-MIB", "f3PtpBCClockClass"))
if mibBuilder.loadTexts: f3PtpBCStatusChangeTrap.setStatus('current')
f3PtpDynamicRemoteSlaveStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 5, 4)).setObjects(("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveClockIdentity"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveIpV4Address"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveSyncMsgRate"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveDelayRspMsgRate"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveAnnounceMsgRate"))
if mibBuilder.loadTexts: f3PtpDynamicRemoteSlaveStatusChangeTrap.setStatus('current')
f3PtpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 4, 1))
f3PtpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 4, 2))
f3PtpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 4, 1, 1)).setObjects(("F3-PTP-MIB", "f3PtpObjectGroup"), ("F3-PTP-MIB", "f3PtpPerfObjectGroup"), ("F3-PTP-MIB", "f3PtpPerfNotifGroup"), ("F3-PTP-MIB", "f3PtpStatusChangeNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3PtpCompliance = f3PtpCompliance.setStatus('current')
f3PtpObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 4, 2, 1))
for _f3PtpObjectGroup_obj in [[("F3-PTP-MIB", "f3PtpTCIndex"), ("F3-PTP-MIB", "f3PtpTCAlias"), ("F3-PTP-MIB", "f3PtpTCAdminState"), ("F3-PTP-MIB", "f3PtpTCOperationalState"), ("F3-PTP-MIB", "f3PtpTCSecondaryState"), ("F3-PTP-MIB", "f3PtpTCServiceFlow"), ("F3-PTP-MIB", "f3PtpTCDelayMechanism"), ("F3-PTP-MIB", "f3PtpTCSync"), ("F3-PTP-MIB", "f3PtpTCClockIdentity"), ("F3-PTP-MIB", "f3PtpTCStorageType"), ("F3-PTP-MIB", "f3PtpTCRowStatus"), ("F3-PTP-MIB", "f3PtpTCPtpProfile"), ("F3-PTP-MIB", "f3PtpTCVirtualPortIndex"), ("F3-PTP-MIB", "f3PtpTCVirtualPortAlias"), ("F3-PTP-MIB", "f3PtpTCVirtualPortAdminState"), ("F3-PTP-MIB", "f3PtpTCVirtualPortOperationalState"), ("F3-PTP-MIB", "f3PtpTCVirtualPortSecondaryState"), ("F3-PTP-MIB", "f3PtpTCVirtualPortIdentity"), ("F3-PTP-MIB", "f3PtpTCVirtualPortFlowPoint"), ("F3-PTP-MIB", "f3PtpTCVirtualPortStorageType"), ("F3-PTP-MIB", "f3PtpTCVirtualPortRowStatus"), ("F3-PTP-MIB", "f3PtpTSIndex"), ("F3-PTP-MIB", "f3PtpTSAlias"), ("F3-PTP-MIB", "f3PtpTSAdminState"), ("F3-PTP-MIB", "f3PtpTSOperationalState"), ("F3-PTP-MIB", "f3PtpTSSecondaryState"), ("F3-PTP-MIB", "f3PtpTSClockIdentity"), ("F3-PTP-MIB", "f3PtpTSDomainNumber"), ("F3-PTP-MIB", "f3PtpTSSync"), ("F3-PTP-MIB", "f3PtpTSCurrentTOD"), ("F3-PTP-MIB", "f3PtpTSSelectedPacketClock"), ("F3-PTP-MIB", "f3PtpTSClockRecoveryMode"), ("F3-PTP-MIB", "f3PtpTSClockRecoveryState"), ("F3-PTP-MIB", "f3PtpTSClockSyncEEnabled"), ("F3-PTP-MIB", "f3PtpTSClockQLModeEnabled"), ("F3-PTP-MIB", "f3PtpTSClockExpectedQL"), ("F3-PTP-MIB", "f3PtpTSClockAssumedQL"), ("F3-PTP-MIB", "f3PtpTSClockReceivedQL"), ("F3-PTP-MIB", "f3PtpTSStorageType"), ("F3-PTP-MIB", "f3PtpTSRowStatus"), ("F3-PTP-MIB", "f3PtpTSTimeTraceabilityStatus"), ("F3-PTP-MIB", "f3PtpTSTimeSinceTimeTraceabilityChanged"), ("F3-PTP-MIB", "f3PtpTSFreqTraceabilityStatus"), ("F3-PTP-MIB", "f3PtpTSTimeSinceFreqTraceabilityChanged"), ("F3-PTP-MIB", "f3PtpTSFreqRecoveryTarget"), ("F3-PTP-MIB", "f3PtpTSCurrentCRScore"), ("F3-PTP-MIB", "f3PtpTSTimeLastCRScore"), ("F3-PTP-MIB", "f3PtpTSTargetPhaseRecoveryAccuracy"), ("F3-PTP-MIB", "f3PtpTSCurrentPRScore"), ("F3-PTP-MIB", "f3PtpTSTimeLastPRScore"), ("F3-PTP-MIB", "f3PtpTSClockClass"), ("F3-PTP-MIB", "f3PtpTSClockAccuracy"), ("F3-PTP-MIB", "f3PtpTSTimeSource"), ("F3-PTP-MIB", "f3PtpTSPhaseRecoveryState"), ("F3-PTP-MIB", "f3PtpTSTimeHoldoverAccuracy"), ("F3-PTP-MIB", "f3PtpSOOCIndex"), ("F3-PTP-MIB", "f3PtpSOOCName"), ("F3-PTP-MIB", "f3PtpSOOCAlias"), ("F3-PTP-MIB", "f3PtpSOOCAdminState"), ("F3-PTP-MIB", "f3PtpSOOCOperationalState"), ("F3-PTP-MIB", "f3PtpSOOCSecondaryState"), ("F3-PTP-MIB", "f3PtpSOOCServiceFlow"), ("F3-PTP-MIB", "f3PtpSOOCMasterClockType"), ("F3-PTP-MIB", "f3PtpSOOCUnicastMessageNegEnabled"), ("F3-PTP-MIB", "f3PtpSOOCMasterDelayMechanism"), ("F3-PTP-MIB", "f3PtpSOOCMasterPriority"), ("F3-PTP-MIB", "f3PtpSOOCMasterIpProtocol"), ("F3-PTP-MIB", "f3PtpSOOCSlaveIpV4Address"), ("F3-PTP-MIB", "f3PtpSOOCSlaveIpV4SubnetMask"), ("F3-PTP-MIB", "f3PtpSOOCMasterIpV4Address"), ("F3-PTP-MIB", "f3PtpSOOCIpPriorityMapMode"), ("F3-PTP-MIB", "f3PtpSOOCIpPriority"), ("F3-PTP-MIB", "f3PtpSOOCMasterLeaseDuration"), ("F3-PTP-MIB", "f3PtpSOOCMasterAnnounceMsgRate"), ("F3-PTP-MIB", "f3PtpSOOCMasterAnnounceMsgReceiptTimeout"), ("F3-PTP-MIB", "f3PtpSOOCMasterSyncMsgRate"), ("F3-PTP-MIB", "f3PtpSOOCMasterSyncReceiptTimeout"), ("F3-PTP-MIB", "f3PtpSOOCMasterDelayRspMsgRate"), ("F3-PTP-MIB", "f3PtpSOOCMasterDelayRspReceiptTimeout"), ("F3-PTP-MIB", "f3PtpSOOCMasterRequestUnicastTimeout"), ("F3-PTP-MIB", "f3PtpSOOCMasterRequestUnicastRestartTimer"), ("F3-PTP-MIB", "f3PtpSOOCCurrentOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpSOOCAnnounceMsgClockClass"), ("F3-PTP-MIB", "f3PtpSOOCLastReceivedAnnounceMsg"), ("F3-PTP-MIB", "f3PtpSOOCLastReceivedSyncMsg"), ("F3-PTP-MIB", "f3PtpSOOCLastReceivedDelayRspMsg"), ("F3-PTP-MIB", "f3PtpSOOCRecentMeanPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCRecentSyncPDV"), ("F3-PTP-MIB", "f3PtpSOOCStorageType"), ("F3-PTP-MIB", "f3PtpSOOCRowStatus"), ("F3-PTP-MIB", "f3PtpSOOCRecentSyncPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCSoocProtectionState"), ("F3-PTP-MIB", "f3PtpSOOCSoocWtr"), ("F3-PTP-MIB", "f3PtpSOOCSoocClockClass"), ("F3-PTP-MIB", "f3PtpSOOCSoocClockRecoveryState"), ("F3-PTP-MIB", "f3PtpSOOCSoocPhaseRecoveryState"), ("F3-PTP-MIB", "f3PtpSOOCE2eDelayAsymmetryComp"), ("F3-PTP-MIB", "f3PtpSOOCE2eAutoAsymmetryCompStatus"), ("F3-PTP-MIB", "f3PtpSOOCE2eDelayAsymmetry"), ("F3-PTP-MIB", "f3PtpSOOCSoocLockOutControl"), ("F3-PTP-MIB", "f3PtpSOOCSlaveIpV6Address"), ("F3-PTP-MIB", "f3PtpSOOCSlaveIpV6AddrPrefixLength"), ("F3-PTP-MIB", "f3PtpSOOCMasterIpV6Address"), ("F3-PTP-MIB", "f3PtpSOOCMinimumExpectedClockClass"), ("F3-PTP-MIB", "f3PtpSOOCMasterMessageMode"), ("F3-PTP-MIB", "f3PtpSOOCDefaultGatewayControl"), ("F3-PTP-MIB", "f3PtpSOOCGateway"), ("F3-PTP-MIB", "f3PtpSOOCIpV6Gateway"), ("F3-PTP-MIB", "f3PtpSOOCAlgorithmPtpAware"), ("F3-PTP-MIB", "f3PtpOCSlaveVirtualPortIndex"), ("F3-PTP-MIB", "f3PtpOCSlaveVirtualPortAlias"), ("F3-PTP-MIB", "f3PtpOCSlaveVirtualPortAdminState"), ("F3-PTP-MIB", "f3PtpOCSlaveVirtualPortOperationalState"), ("F3-PTP-MIB", "f3PtpOCSlaveVirtualPortSecondaryState"), ("F3-PTP-MIB", "f3PtpOCSlaveVirtualPortIdentity"), ("F3-PTP-MIB", "f3PtpOCSlaveVirtualPortFlowPoint"), ("F3-PTP-MIB", "f3PtpOCSlaveVirtualPortState"), ("F3-PTP-MIB", "f3PtpOCSlaveVirtualPortStorageType"), ("F3-PTP-MIB", "f3PtpOCSlaveVirtualPortRowStatus"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointIndex"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointAlias"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointAdminState"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointOperationalState"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointSecondaryState"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointType"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointClock"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointService"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointOuterVlanEtherType"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointOuterVlanMemberList"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointOuterUntaggedEnabled"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointInner1VlanEtherType"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointInner1VlanMemberList"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointInner1UntaggedEnabled"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointInner2VlanEtherType"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointInner2VlanMemberList"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointInner2UntaggedEnabled"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStorageType"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointRowStatus"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointCOS"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointCIRLo"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointCIRHi"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointEIRLo"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointEIRHi"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointBufferSize"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointLoopAvoidance"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointRefConnectGuardFlow"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointSecureState"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointSecureBlockingEnabled"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointIndex"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointAlias"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointAdminState"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointOperationalState"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointSecondaryState"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointType"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointClock"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointService"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointOuterVlanEtherType"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointOuterVlanMemberList"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointOuterUntaggedEnabled"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointInner1VlanEtherType"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointInner1VlanMemberList"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointInner1UntaggedEnabled"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointInner2VlanEtherType"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointInner2VlanMemberList"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointInner2UntaggedEnabled"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStorageType"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointRowStatus"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointCOS"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointCIRLo"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointCIRHi"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointEIRLo"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointEIRHi"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointBufferSize"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointLoopAvoidance"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointRefConnectGuardFlow"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointSecureState"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointSecureBlockingEnabled"), ("F3-PTP-MIB", "f3PtpEthernetAccPortDelayAsymmetry"), ("F3-PTP-MIB", "f3PtpEthernetNetPortDelayAsymmetry"), ("F3-PTP-MIB", "f3PtpSysTimeOfDayClock"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointIndex"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointAlias"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointAdminState"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointOperationalState"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointSecondaryState"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointType"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointClock"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointService"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointOuterVlanEtherType"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointOuterVlanMemberList"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointOuterUntaggedEnabled"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointInner1VlanEtherType"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointInner1VlanMemberList"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointInner1UntaggedEnabled"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointInner2VlanEtherType"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointInner2VlanMemberList"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointInner2UntaggedEnabled"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStorageType"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointRowStatus"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointCOS"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointCIRLo"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointCIRHi"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointEIRLo"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointEIRHi"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointAssociatedQueueProfile"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointLoopAvoidance"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointBufferSize"), ("F3-PTP-MIB", "f3PtpEthernetTrafficPortDelayAsymmetry"), ("F3-PTP-MIB", "f3PtpPTPClockIndex"), ("F3-PTP-MIB", "f3PtpPTPClockAdminState"), ("F3-PTP-MIB", "f3PtpPTPClockAlias"), ("F3-PTP-MIB", "f3PtpPTPClockOperationalState"), ("F3-PTP-MIB", "f3PtpPTPClockSecondaryState"), ("F3-PTP-MIB", "f3PtpPTPClockProfile"), ("F3-PTP-MIB", "f3PtpPTPClockClockType"), ("F3-PTP-MIB", "f3PtpPTPClockOperationalMode"), ("F3-PTP-MIB", "f3PtpPTPClockClockIdentity"), ("F3-PTP-MIB", "f3PtpPTPClockDomainNumber"), ("F3-PTP-MIB", "f3PtpPTPClockTimeSource"), ("F3-PTP-MIB", "f3PtpPTPClockPriority1"), ("F3-PTP-MIB", "f3PtpPTPClockPriority2"), ("F3-PTP-MIB", "f3PtpPTPClockLocalPriority"), ("F3-PTP-MIB", "f3PtpPTPClockClockAccuracy"), ("F3-PTP-MIB", "f3PtpPTPClockScaledLogVariance"), ("F3-PTP-MIB", "f3PtpPTPClockSyncEid"), ("F3-PTP-MIB", "f3PtpPTPClockCurrentTimeOfDay"), ("F3-PTP-MIB", "f3PtpPTPClockActiveSlavePort"), ("F3-PTP-MIB", "f3PtpPTPClockClockRecoveryState"), ("F3-PTP-MIB", "f3PtpPTPClockPhaseRecoveryState"), ("F3-PTP-MIB", "f3PtpPTPClockTimeTraceabilityStatus"), ("F3-PTP-MIB", "f3PtpPTPClockTimeSinceTimeTraceabilityChanged"), ("F3-PTP-MIB", "f3PtpPTPClockFreqTraceabilityStatus"), ("F3-PTP-MIB", "f3PtpPTPClockTimeSinceFreqTraceabilityChanged"), ("F3-PTP-MIB", "f3PtpPTPClockClockSyncEEnabled"), ("F3-PTP-MIB", "f3PtpPTPClockClockQLModeEnabled"), ("F3-PTP-MIB", "f3PtpPTPClockClockExpectedQL"), ("F3-PTP-MIB", "f3PtpPTPClockClockAssumedQL"), ("F3-PTP-MIB", "f3PtpPTPClockClockReceivedQL"), ("F3-PTP-MIB", "f3PtpPTPClockCurrentOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPClockRecentMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockRecentSyncPDV"), ("F3-PTP-MIB", "f3PtpPTPClockClockClass"), ("F3-PTP-MIB", "f3PtpPTPClockPhysicalEntityIndex"), ("F3-PTP-MIB", "f3PtpPTPClockActiveGrantsAnnounceService"), ("F3-PTP-MIB", "f3PtpPTPClockActiveGrantsSyncService"), ("F3-PTP-MIB", "f3PtpPTPClockActiveGrantsDelayRequestService"), ("F3-PTP-MIB", "f3PtpPTPClockMaxStepRemoved"), ("F3-PTP-MIB", "f3PtpPTPClockServiceAvailableTime"), ("F3-PTP-MIB", "f3PtpPTPClockServiceUnavailableTime"), ("F3-PTP-MIB", "f3PtpPTPClockServiceAvailablePercentage"), ("F3-PTP-MIB", "f3PtpPTPClockGrandMasterID"), ("F3-PTP-MIB", "f3PtpPTPClockTimeInaccuracy"), ("F3-PTP-MIB", "f3PtpPTPClockNetworkTimeInaccuracy"), ("F3-PTP-MIB", "f3PtpPTPClockStorageType"), ("F3-PTP-MIB", "f3PtpPTPClockRowStatus")], [("F3-PTP-MIB", "f3PtpPTPPortIndex"), ("F3-PTP-MIB", "f3PtpPTPPortAdminState"), ("F3-PTP-MIB", "f3PtpPTPPortAlias"), ("F3-PTP-MIB", "f3PtpPTPPortOperationalState"), ("F3-PTP-MIB", "f3PtpPTPPortSecondaryState"), ("F3-PTP-MIB", "f3PtpPTPPortPeerPortIdentity"), ("F3-PTP-MIB", "f3PtpPTPPortLocalPriority"), ("F3-PTP-MIB", "f3PtpPTPPortPtpFlowPointEid"), ("F3-PTP-MIB", "f3PtpPTPPortNotSlave"), ("F3-PTP-MIB", "f3PtpPTPPortTxDestMacAddress"), ("F3-PTP-MIB", "f3PtpPTPPortSyncMessageRate"), ("F3-PTP-MIB", "f3PtpPTPPortmDelayReqRespMsgRate"), ("F3-PTP-MIB", "f3PtpPTPPortmAnnounceMsgRate"), ("F3-PTP-MIB", "f3PtpPTPPortAnnounceReceiptTimeout"), ("F3-PTP-MIB", "f3PtpPTPPortSyncReceiptTimeout"), ("F3-PTP-MIB", "f3PtpPTPPortDelayRespTimeout"), ("F3-PTP-MIB", "f3PtpPTPPortPortState"), ("F3-PTP-MIB", "f3PtpPTPPortBmcaDecisionCode"), ("F3-PTP-MIB", "f3PtpPTPPortClockClass"), ("F3-PTP-MIB", "f3PtpPTPPortPeerPortMacAddress"), ("F3-PTP-MIB", "f3PtpPTPPortRowStatus"), ("F3-PTP-MIB", "f3PtpPTPPortPortIdentity"), ("F3-PTP-MIB", "f3PtpPTPPortMasterClockType"), ("F3-PTP-MIB", "f3PtpPTPPortLastRcvdAnnounceMsg"), ("F3-PTP-MIB", "f3PtpPTPPortLastRcvdSyncMsg"), ("F3-PTP-MIB", "f3PtpPTPPortLastRcvdDelayReqMsg"), ("F3-PTP-MIB", "f3PtpPTPPortLastRcvdDelayRspMsg"), ("F3-PTP-MIB", "f3PtpPTPPortMasterOnly"), ("F3-PTP-MIB", "f3PtpPTPPortPeerClockClass"), ("F3-PTP-MIB", "f3PtpPTPPortMinimumExpectedClockClass"), ("F3-PTP-MIB", "f3PtpPTPPortDelayAsymmetryComp"), ("F3-PTP-MIB", "f3PtpPTPPortAutoAsymmetryCompStatus"), ("F3-PTP-MIB", "f3PtpPTPPortDelayAsymmetry"), ("F3-PTP-MIB", "f3PtpPTPPortVirtualPortCtrl"), ("F3-PTP-MIB", "f3PtpPTPPortDelayResponderType"), ("F3-PTP-MIB", "f3PtpPTPPortTimeTraceable"), ("F3-PTP-MIB", "f3PtpPTPPortFrequencyTraceable"), ("F3-PTP-MIB", "f3PtpL2DynamicRemoteSlaveIndex"), ("F3-PTP-MIB", "f3PtpL2DynamicRemoteSlavePortIdentity"), ("F3-PTP-MIB", "f3PtpL2DynamicRemoteSlaveClockIdentity"), ("F3-PTP-MIB", "f3PtpL2DynamicRemoteSlaveMacAddress"), ("F3-PTP-MIB", "f3PtpL2DynamicRemoteSlaveRowStatus"), ("F3-PTP-MIB", "f3PtpL2DynamicRemoteSlaveStorageType"), ("F3-PTP-MIB", "f3PtpL3PTPPortIndex"), ("F3-PTP-MIB", "f3PtpL3PTPPortAdminState"), ("F3-PTP-MIB", "f3PtpL3PTPPortAlias"), ("F3-PTP-MIB", "f3PtpL3PTPPortOperationalState"), ("F3-PTP-MIB", "f3PtpL3PTPPortSecondaryState"), ("F3-PTP-MIB", "f3PtpL3PTPPortPortIdentity"), ("F3-PTP-MIB", "f3PtpL3PTPPortLocalPriority"), ("F3-PTP-MIB", "f3PtpL3PTPPortPtpFlowPointEid"), ("F3-PTP-MIB", "f3PtpL3PTPPortSyncMessageRate"), ("F3-PTP-MIB", "f3PtpL3PTPPortDelayReqRespMsgRate"), ("F3-PTP-MIB", "f3PtpL3PTPPortAnnounceMsgRate"), ("F3-PTP-MIB", "f3PtpL3PTPPortAnnounceReceiptTimeout"), ("F3-PTP-MIB", "f3PtpL3PTPPortSyncReceiptTimeout"), ("F3-PTP-MIB", "f3PtpL3PTPPortDelayRespTimeout"), ("F3-PTP-MIB", "f3PtpL3PTPPortPortState"), ("F3-PTP-MIB", "f3PtpL3PTPPortBmcaDecisionCode"), ("F3-PTP-MIB", "f3PtpL3PTPPortPeerClockClass"), ("F3-PTP-MIB", "f3PtpL3PTPPortMinimumExpectedClockClass"), ("F3-PTP-MIB", "f3PtpL3PTPPortIpProtocol"), ("F3-PTP-MIB", "f3PtpL3PTPPortIfName"), ("F3-PTP-MIB", "f3PtpL3PTPPortIpPriorityMapMode"), ("F3-PTP-MIB", "f3PtpL3PTPPortIpPriority"), ("F3-PTP-MIB", "f3PtpL3PTPPortIpV4Address"), ("F3-PTP-MIB", "f3PtpL3PTPPortIpV4SubnetMask"), ("F3-PTP-MIB", "f3PtpL3PTPPortIpV6Address"), ("F3-PTP-MIB", "f3PtpL3PTPPortIpV6AddrPrefixLength"), ("F3-PTP-MIB", "f3PtpL3PTPPortDefaultGatewayControl"), ("F3-PTP-MIB", "f3PtpL3PTPPortGateway"), ("F3-PTP-MIB", "f3PtpL3PTPPortIpV6Gateway"), ("F3-PTP-MIB", "f3PtpL3PTPPortUnicastMessageNegEnabled"), ("F3-PTP-MIB", "f3PtpL3PTPPortTransmitDuration"), ("F3-PTP-MIB", "f3PtpL3PTPPortRequestUnicastTimeout"), ("F3-PTP-MIB", "f3PtpL3PTPPortRequestUnicastRestartTimer"), ("F3-PTP-MIB", "f3PtpL3PTPPortMasterIpV4Address"), ("F3-PTP-MIB", "f3PtpL3PTPPortMasterIpV6Address"), ("F3-PTP-MIB", "f3PtpL3PTPPortDelayAsymmetryComp"), ("F3-PTP-MIB", "f3PtpL3PTPPortAutoAsymmetryCompStatus"), ("F3-PTP-MIB", "f3PtpL3PTPPortDelayAsymmetry"), ("F3-PTP-MIB", "f3PtpL3PTPPortStorageType"), ("F3-PTP-MIB", "f3PtpL3PTPPortRowStatus")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        f3PtpObjectGroup = f3PtpObjectGroup.setObjects(*_f3PtpObjectGroup_obj)
    else:
        f3PtpObjectGroup = f3PtpObjectGroup.setObjects(*_f3PtpObjectGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3PtpObjectGroup = f3PtpObjectGroup.setStatus('current')
f3PtpPerfObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 4, 2, 2))
for _f3PtpPerfObjectGroup_obj in [[("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsIndex"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsIntervalType"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsValid"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsAction"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsAnnouncesRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsAnnouncesTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsSyncsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsSyncsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsFollowupsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsFollowupsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsDelayReqsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsDelayReqsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsDelayRspsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsDelayRspsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsPDelayReqsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsPDelayReqsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsPDelayRspsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsPDelayRspsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsPDelayRspFollowupsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsPDelayRspFollowupsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsSignalingRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsSignalingTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsMgmtFramesRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsMgmtFramesTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsPtpUnknownsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsPtpUnknownsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsAvgSyncResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsMinSyncResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsMaxSyncResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsAvgDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsMinDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsMaxDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsMinPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsMaxPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsAvgPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsMinPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsMaxPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsAvgPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointStatsDestMciNoMatchDiscards"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryIndex"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryValid"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryAction"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryAnnouncesRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryAnnouncesTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistorySyncsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistorySyncsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryFollowupsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryFollowupsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryDelayReqsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryDelayReqsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryDelayRspsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryDelayRspsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryPDelayReqsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryPDelayReqsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryPDelayRspsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryPDelayRspsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryPDelayRspFollowupsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryPDelayRspFollowupsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistorySignalingRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistorySignalingTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryMgmtFramesRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryMgmtFramesTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryPtpUnknownsRx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryPtpUnknownsTx"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryAvgSyncResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryMinSyncResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryMaxSyncResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryAvgDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryMinDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryMaxDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryMinPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryMaxPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryAvgPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryMinPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryMaxPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryAvgPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointHistoryDestMciNoMatchDiscards"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdIndex"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdInterval"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdVariable"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdValueLo"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdValueHi"), ("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdMonValue"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsIndex"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsIntervalType"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsValid"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsAction"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsAnnouncesRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsAnnouncesTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsSyncsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsSyncsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsFollowupsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsFollowupsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsDelayReqsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsDelayReqsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsDelayRspsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsDelayRspsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsPDelayReqsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsPDelayReqsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsPDelayRspsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsPDelayRspsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsPDelayRspFollowupsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsPDelayRspFollowupsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsSignalingRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsSignalingTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsMgmtFramesRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsMgmtFramesTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsPtpUnknownsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsPtpUnknownsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsAvgSyncResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsMinSyncResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsMaxSyncResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsAvgDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsMinDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsMaxDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsMinPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsMaxPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsAvgPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsMinPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsMaxPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsAvgPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointStatsDestMciNoMatchDiscards"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryIndex"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryValid"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryAction"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryAnnouncesRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryAnnouncesTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistorySyncsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistorySyncsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryFollowupsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryFollowupsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryDelayReqsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryDelayReqsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryDelayRspsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryDelayRspsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryPDelayReqsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryPDelayReqsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryPDelayRspsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryPDelayRspsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryPDelayRspFollowupsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryPDelayRspFollowupsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistorySignalingRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistorySignalingTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryMgmtFramesRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryMgmtFramesTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryPtpUnknownsRx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryPtpUnknownsTx"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryAvgSyncResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryMinSyncResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryMaxSyncResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryAvgDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryMinDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryMaxDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryMinPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryMaxPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryAvgPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryMinPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryMaxPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryAvgPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointHistoryDestMciNoMatchDiscards"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdIndex"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdInterval"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdVariable"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdValueLo"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdValueHi"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdMonValue"), ("F3-PTP-MIB", "f3PtpSOOCStatsIndex"), ("F3-PTP-MIB", "f3PtpSOOCStatsIntervalType"), ("F3-PTP-MIB", "f3PtpSOOCStatsValid"), ("F3-PTP-MIB", "f3PtpSOOCStatsAction"), ("F3-PTP-MIB", "f3PtpSOOCStatsMinOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpSOOCStatsMaxOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpSOOCStatsAvgOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpSOOCStatsMinMeanPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCStatsMaxMeanPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCStatsAvgMeanPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCStatsMinSyncPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCStatsMaxSyncPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCStatsAvgSyncPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCStatsMinSyncPDV"), ("F3-PTP-MIB", "f3PtpSOOCStatsMaxSyncPDV"), ("F3-PTP-MIB", "f3PtpSOOCStatsAvgSyncPDV"), ("F3-PTP-MIB", "f3PtpSOOCStatsMgmtMsgsDiscarded"), ("F3-PTP-MIB", "f3PtpSOOCStatsInvalidMsgLenDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsUnknownMasterDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsUnknownDomainDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsMulticastAnnounceDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsOutOfSeqAnnounceMsgs"), ("F3-PTP-MIB", "f3PtpSOOCStatsMulticastSyncDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsTwoStepSyncDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsFollowupDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsDelayReqDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsPDelayReqDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsPDelayRspDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsPDelayFollowupDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsInvalidTLVLenDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsInvalidTLVTypeDiscards"), ("F3-PTP-MIB", "f3PtpSOOCStatsMaxFwdFlowWeight"), ("F3-PTP-MIB", "f3PtpSOOCStatsAvgFwdFlowWeight"), ("F3-PTP-MIB", "f3PtpSOOCStatsMinRevFlowWeight"), ("F3-PTP-MIB", "f3PtpSOOCStatsMaxRevFlowWeight"), ("F3-PTP-MIB", "f3PtpSOOCStatsAvgRevFlowWeight"), ("F3-PTP-MIB", "f3PtpSOOCStatsNumClockRecTransients"), ("F3-PTP-MIB", "f3PtpSOOCHistoryIndex"), ("F3-PTP-MIB", "f3PtpSOOCHistoryTime"), ("F3-PTP-MIB", "f3PtpSOOCHistoryValid"), ("F3-PTP-MIB", "f3PtpSOOCHistoryAction"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMinOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMaxOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpSOOCHistoryAvgOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMinMeanPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMaxMeanPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCHistoryAvgMeanPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMinSyncPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMaxSyncPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCHistoryAvgSyncPathDelay"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMinSyncPDV"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMaxSyncPDV"), ("F3-PTP-MIB", "f3PtpSOOCHistoryAvgSyncPDV"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMgmtMsgsDiscarded"), ("F3-PTP-MIB", "f3PtpSOOCHistoryInvalidMsgLenDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryUnknownMasterDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryUnknownDomainDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMulticastAnnounceDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryOutOfSeqAnnounceMsgs"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMulticastSyncDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryTwoStepSyncDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryFollowupDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryDelayReqDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryPDelayReqDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryPDelayRspDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryPDelayFollowupDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryInvalidTLVLenDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryInvalidTLVTypeDiscards"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMaxFwdFlowWeight"), ("F3-PTP-MIB", "f3PtpSOOCHistoryAvgFwdFlowWeight"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMinRevFlowWeight"), ("F3-PTP-MIB", "f3PtpSOOCHistoryMaxRevFlowWeight"), ("F3-PTP-MIB", "f3PtpSOOCHistoryAvgRevFlowWeight"), ("F3-PTP-MIB", "f3PtpSOOCHistoryNumClockRecTransients"), ("F3-PTP-MIB", "f3PtpSOOCThresholdIndex"), ("F3-PTP-MIB", "f3PtpSOOCThresholdInterval"), ("F3-PTP-MIB", "f3PtpSOOCThresholdVariable"), ("F3-PTP-MIB", "f3PtpSOOCThresholdValueLo"), ("F3-PTP-MIB", "f3PtpSOOCThresholdValueHi"), ("F3-PTP-MIB", "f3PtpSOOCThresholdMonValue"), ("F3-PTP-MIB", "f3PtpTSStatsIndex"), ("F3-PTP-MIB", "f3PtpTSStatsIntervalType"), ("F3-PTP-MIB", "f3PtpTSStatsValid"), ("F3-PTP-MIB", "f3PtpTSStatsAction"), ("F3-PTP-MIB", "f3PtpTSStatsTotalTimeCR5"), ("F3-PTP-MIB", "f3PtpTSStatsTotalTimeCR4"), ("F3-PTP-MIB", "f3PtpTSStatsTotalTimeCR3")], [("F3-PTP-MIB", "f3PtpTSStatsTotalTimePR5"), ("F3-PTP-MIB", "f3PtpTSStatsTotalTimePR4"), ("F3-PTP-MIB", "f3PtpTSStatsTotalTimePR3"), ("F3-PTP-MIB", "f3PtpTSHistoryIndex"), ("F3-PTP-MIB", "f3PtpTSHistoryTime"), ("F3-PTP-MIB", "f3PtpTSHistoryValid"), ("F3-PTP-MIB", "f3PtpTSHistoryAction"), ("F3-PTP-MIB", "f3PtpTSHistoryTotalTimeCR5"), ("F3-PTP-MIB", "f3PtpTSHistoryTotalTimeCR4"), ("F3-PTP-MIB", "f3PtpTSHistoryTotalTimeCR3"), ("F3-PTP-MIB", "f3PtpTSHistoryTotalTimePR5"), ("F3-PTP-MIB", "f3PtpTSHistoryTotalTimePR4"), ("F3-PTP-MIB", "f3PtpTSHistoryTotalTimePR3"), ("F3-PTP-MIB", "f3PtpTSThresholdIndex"), ("F3-PTP-MIB", "f3PtpTSThresholdInterval"), ("F3-PTP-MIB", "f3PtpTSThresholdVariable"), ("F3-PTP-MIB", "f3PtpTSThresholdValueLo"), ("F3-PTP-MIB", "f3PtpTSThresholdValueHi"), ("F3-PTP-MIB", "f3PtpTSThresholdMonValue"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsIndex"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsIntervalType"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsValid"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsAction"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsAnnouncesRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsAnnouncesTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsSyncsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsSyncsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsFollowupsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsFollowupsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsDelayReqsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsDelayReqsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsDelayRspsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsDelayRspsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsPDelayReqsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsPDelayReqsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsPDelayRspsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsPDelayRspsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsPDelayRspFollowupsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsPDelayRspFollowupsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsSignalingRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsSignalingTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsMgmtFramesRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsMgmtFramesTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsPtpUnknownsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsPtpUnknownsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsMinSyncResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsMaxSyncResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsAvgSyncResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsMinDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsMaxDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsAvgDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsMinPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsMaxPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsAvgPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsMinPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsMaxPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsAvgPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsDestMciNoMatchDiscards"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointStatsTagNoMatchDiscards"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryIndex"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryValid"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryAction"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryAnnouncesRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryAnnouncesTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistorySyncsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistorySyncsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryFollowupsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryFollowupsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryDelayReqsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryDelayReqsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryDelayRspsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryDelayRspsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryPDelayReqsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryPDelayReqsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryPDelayRspsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryPDelayRspsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryPDelayRspFollowupsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryPDelayRspFollowupsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistorySignalingRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistorySignalingTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryMgmtFramesRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryMgmtFramesTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryPtpUnknownsRx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryPtpUnknownsTx"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryMinSyncResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryMaxSyncResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryAvgSyncResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryMinDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryMaxDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryAvgDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryMinPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryMaxPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryAvgPDelayReqResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryMinPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryMaxPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryAvgPDelayRspResTime"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryDestMciNoMatchDiscards"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointHistoryTagNoMatchDiscards"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdIndex"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdInterval"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdVariable"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdValueLo"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdValueHi"), ("F3-PTP-MIB", "f3PtpTrafficPortFlowPointThresholdMonValue"), ("F3-PTP-MIB", "f3PtpPTPPortStatsIndex"), ("F3-PTP-MIB", "f3PtpPTPPortStatsIntervalType"), ("F3-PTP-MIB", "f3PtpPTPPortStatsValid"), ("F3-PTP-MIB", "f3PtpPTPPortStatsAction"), ("F3-PTP-MIB", "f3PtpPTPPortStatsAvgAnnounceRate"), ("F3-PTP-MIB", "f3PtpPTPPortStatsAvgSyncRate"), ("F3-PTP-MIB", "f3PtpPTPPortStatsAvgDelayReqRate"), ("F3-PTP-MIB", "f3PtpPTPPortStatsAvgDelayRespRate"), ("F3-PTP-MIB", "f3PtpPTPPortStatsMismatchDomainDiscards"), ("F3-PTP-MIB", "f3PtpPTPPortStatsMessageWrongTypeDiscards"), ("F3-PTP-MIB", "f3PtpPTPPortStatsMessagesWrongLengthDiscards"), ("F3-PTP-MIB", "f3PtpPTPPortStatsUnknownMasterDiscards"), ("F3-PTP-MIB", "f3PtpPTPPortStatsMinOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPPortStatsMaxOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPPortStatsAvgOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPPortStatsMinSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortStatsMaxSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortStatsAvgSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortStatsMinMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortStatsMaxMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortStatsAvgMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortStatsMsgMiscDiscards"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryIndex"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryTime"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryValid"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryAction"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryAvgAnnounceRate"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryAvgSyncRate"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryAvgDelayReqRate"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryAvgDelayRespRate"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryMismatchDomainDiscards"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryMessageWrongTypeDiscards"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryMessagesWrongLengthDiscards"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryUnknownMasterDiscards"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryMinOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryMaxOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryAvgOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryMinSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryMaxSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryAvgSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryMinMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryMaxMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryAvgMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPPortHistoryMsgMiscDiscards"), ("F3-PTP-MIB", "f3PtpPTPPortThresholdIndex"), ("F3-PTP-MIB", "f3PtpPTPPortThresholdInterval"), ("F3-PTP-MIB", "f3PtpPTPPortThresholdVariable"), ("F3-PTP-MIB", "f3PtpPTPPortThresholdValueLo"), ("F3-PTP-MIB", "f3PtpPTPPortThresholdValueHi"), ("F3-PTP-MIB", "f3PtpPTPPortThresholdMonValue"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsIndex"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsIntervalType"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsValid"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsAction"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsAvgAnnounceRate"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsAvgSyncRate"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsAvgDelayReqRate"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsAvgDelayRespRate"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsMismatchDomainDiscards"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsMessageWrongTypeDiscards"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsMessagesWrongLengthDiscards"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsUnknownMasterDiscards"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsMinOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsMaxOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsAvgOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsMinSyncPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsMaxSyncPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsAvgSyncPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsMinMeanPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsMaxMeanPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsAvgMeanPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortStatsMsgMiscDiscards"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryIndex"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryTime"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryValid"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryAction"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryAvgAnnounceRate"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryAvgSyncRate"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryAvgDelayReqRate"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryAvgDelayRespRate"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryMismatchDomainDiscards"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryMessageWrongTypeDiscards"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryMessagesWrongLengthDiscards"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryUnknownMasterDiscards"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryMinOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryMaxOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryAvgOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryMinSyncPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryMaxSyncPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryAvgSyncPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryMinMeanPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryMaxMeanPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryAvgMeanPathDelay"), ("F3-PTP-MIB", "f3PtpL3PTPPortHistoryMsgMiscDiscards"), ("F3-PTP-MIB", "f3PtpL3PTPPortThresholdIndex"), ("F3-PTP-MIB", "f3PtpL3PTPPortThresholdInterval"), ("F3-PTP-MIB", "f3PtpL3PTPPortThresholdVariable"), ("F3-PTP-MIB", "f3PtpL3PTPPortThresholdValueLo"), ("F3-PTP-MIB", "f3PtpL3PTPPortThresholdValueHi"), ("F3-PTP-MIB", "f3PtpL3PTPPortThresholdMonValue"), ("F3-PTP-MIB", "f3PtpPTPClockStatsIndex"), ("F3-PTP-MIB", "f3PtpPTPClockStatsIntervalType"), ("F3-PTP-MIB", "f3PtpPTPClockStatsValid"), ("F3-PTP-MIB", "f3PtpPTPClockStatsAction"), ("F3-PTP-MIB", "f3PtpPTPClockStatsMinOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPClockStatsMaxOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPClockStatsAvgOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPClockStatsMinSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockStatsMaxSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockStatsAvgSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockStatsMinMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockStatsMaxMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockStatsAvgMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryIndex"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryTime"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryValid"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryAction"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryMinOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryMaxOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryAvgOffsetFromMaster"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryMinSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryMaxSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryAvgSyncPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryMinMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryMaxMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockHistoryAvgMeanPathDelay"), ("F3-PTP-MIB", "f3PtpPTPClockThresholdIndex"), ("F3-PTP-MIB", "f3PtpPTPClockThresholdInterval"), ("F3-PTP-MIB", "f3PtpPTPClockThresholdVariable"), ("F3-PTP-MIB", "f3PtpPTPClockThresholdValueLo"), ("F3-PTP-MIB", "f3PtpPTPClockThresholdValueHi"), ("F3-PTP-MIB", "f3PtpPTPClockThresholdMonValue")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        f3PtpPerfObjectGroup = f3PtpPerfObjectGroup.setObjects(*_f3PtpPerfObjectGroup_obj)
    else:
        f3PtpPerfObjectGroup = f3PtpPerfObjectGroup.setObjects(*_f3PtpPerfObjectGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3PtpPerfObjectGroup = f3PtpPerfObjectGroup.setStatus('current')
f3PtpPerfNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 4, 2, 3)).setObjects(("F3-PTP-MIB", "f3PtpAccPortFlowPointThresholdCrossingAlert"), ("F3-PTP-MIB", "f3PtpNetPortFlowPointThresholdCrossingAlert"), ("F3-PTP-MIB", "f3PtpSOOCCrossingAlert"), ("F3-PTP-MIB", "f3PtpTSCrossingAlert"), ("F3-PTP-MIB", "f3PtpPTPClockCrossingAlert"), ("F3-PTP-MIB", "f3PtpPTPPortCrossingAlert"), ("F3-PTP-MIB", "f3PtpL3PTPPortCrossingAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3PtpPerfNotifGroup = f3PtpPerfNotifGroup.setStatus('current')
f3PtpStatusChangeNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 4, 2, 4)).setObjects(("F3-PTP-MIB", "f3PtpTSStatusChangeTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3PtpStatusChangeNotifGroup = f3PtpStatusChangeNotifGroup.setStatus('current')
f3PtpBoundaryClockObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 4, 2, 5)).setObjects(("F3-PTP-MIB", "f3PtpBCAlias"), ("F3-PTP-MIB", "f3PtpBCAdminState"), ("F3-PTP-MIB", "f3PtpBCOperationalState"), ("F3-PTP-MIB", "f3PtpBCSecondaryState"), ("F3-PTP-MIB", "f3PtpBCClockIdentity"), ("F3-PTP-MIB", "f3PtpBCTimingSource"), ("F3-PTP-MIB", "f3PtpBCClockClass"), ("F3-PTP-MIB", "f3PtpBCDomainNumber"), ("F3-PTP-MIB", "f3PtpBCStorageType"), ("F3-PTP-MIB", "f3PtpBCRowStatus"), ("F3-PTP-MIB", "f3PtpBCMediationControl"), ("F3-PTP-MIB", "f3PtpMasterClockIndex"), ("F3-PTP-MIB", "f3PtpMasterClockAlias"), ("F3-PTP-MIB", "f3PtpMasterClockAdminState"), ("F3-PTP-MIB", "f3PtpMasterClockOperationalState"), ("F3-PTP-MIB", "f3PtpMasterClockSecondaryState"), ("F3-PTP-MIB", "f3PtpMasterClockClockIdentity"), ("F3-PTP-MIB", "f3PtpMasterClockTimeClock"), ("F3-PTP-MIB", "f3PtpMasterClockClockClass"), ("F3-PTP-MIB", "f3PtpMasterClockDomainNumber"), ("F3-PTP-MIB", "f3PtpMasterClockPriority1"), ("F3-PTP-MIB", "f3PtpMasterClockPriority2"), ("F3-PTP-MIB", "f3PtpMasterClockClockAccuracy"), ("F3-PTP-MIB", "f3PtpMasterClockTimeScale"), ("F3-PTP-MIB", "f3PtpMasterClockUtcOffset"), ("F3-PTP-MIB", "f3PtpMasterClockStorageType"), ("F3-PTP-MIB", "f3PtpMasterClockRowStatus"), ("F3-PTP-MIB", "f3PtpMasterClockActiveTimeRef"), ("F3-PTP-MIB", "f3PtpMasterClockPTPProfile"), ("F3-PTP-MIB", "f3PtpMasterClockServiceAvailableTime"), ("F3-PTP-MIB", "f3PtpMasterClockServiceUnavailableTime"), ("F3-PTP-MIB", "f3PtpMasterClockServiceAvailablePercentage"), ("F3-PTP-MIB", "f3PtpMasterClockSmpteSystemFrameRateNumerator"), ("F3-PTP-MIB", "f3PtpMasterClockSmpteSystemFrameRateDenominator"), ("F3-PTP-MIB", "f3PtpMasterClockSmpteTimeAddressFlags"), ("F3-PTP-MIB", "f3PtpMCIAlias"), ("F3-PTP-MIB", "f3PtpMCIAdminState"), ("F3-PTP-MIB", "f3PtpMCIOperationalState"), ("F3-PTP-MIB", "f3PtpMCISecondaryState"), ("F3-PTP-MIB", "f3PtpMCIPortIdentity"), ("F3-PTP-MIB", "f3PtpMCIDomainNumber"), ("F3-PTP-MIB", "f3PtpMCIClockType"), ("F3-PTP-MIB", "f3PtpMCIDelayMechanism"), ("F3-PTP-MIB", "f3PtpMCIIfName"), ("F3-PTP-MIB", "f3PtpMCIIpProtocol"), ("F3-PTP-MIB", "f3PtpMCIMasterIpV4Address"), ("F3-PTP-MIB", "f3PtpMCIMasterIpV4SubnetMask"), ("F3-PTP-MIB", "f3PtpMCIIpPriorityMapMode"), ("F3-PTP-MIB", "f3PtpMCIIpPriority"), ("F3-PTP-MIB", "f3PtpMCIMaxLeaseDuration"), ("F3-PTP-MIB", "f3PtpMCIMaxSlavesSupported"), ("F3-PTP-MIB", "f3PtpMCIMaxStaticSlavesSupported"), ("F3-PTP-MIB", "f3PtpMCIMaxSyncMsgRate"), ("F3-PTP-MIB", "f3PtpMCIMaxDelayRespMsgRate"), ("F3-PTP-MIB", "f3PtpMCIMaxAnnounceMsgRate"), ("F3-PTP-MIB", "f3PtpMCIStorageType"), ("F3-PTP-MIB", "f3PtpMCIRowStatus"), ("F3-PTP-MIB", "f3PtpMCIServiceFlow"), ("F3-PTP-MIB", "f3PtpMCIClockClassProfile"), ("F3-PTP-MIB", "f3PtpMCIClockClass"), ("F3-PTP-MIB", "f3PtpMCIAnnounceExtTLVEnable"), ("F3-PTP-MIB", "f3PtpMCIPtpTransport"), ("F3-PTP-MIB", "f3PtpMCIPtpTransportMode"), ("F3-PTP-MIB", "f3PtpMCIPtpRemoteSlaveAgingTimeout"), ("F3-PTP-MIB", "f3PtpMCIMasterIpV6Address"), ("F3-PTP-MIB", "f3PtpMCIMasterIpV6AddrPrefixLength"), ("F3-PTP-MIB", "f3PtpMCIDefaultGatewayControl"), ("F3-PTP-MIB", "f3PtpMCIGateway"), ("F3-PTP-MIB", "f3PtpMCIIpV6Gateway"), ("F3-PTP-MIB", "f3PtpMasterVirtualPortAlias"), ("F3-PTP-MIB", "f3PtpMasterVirtualPortAdminState"), ("F3-PTP-MIB", "f3PtpMasterVirtualPortOperationalState"), ("F3-PTP-MIB", "f3PtpMasterVirtualPortSecondaryState"), ("F3-PTP-MIB", "f3PtpMasterVirtualPortFlowPoint"), ("F3-PTP-MIB", "f3PtpMasterVirtualPortStorageType"), ("F3-PTP-MIB", "f3PtpMasterVirtualPortRowStatus"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveAlias"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveAdminState"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveOperationalState"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveSecondaryState"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveClockIdentity"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveIpV4Address"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveTimeCreated"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveSyncMsgRate"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveDelayRspMsgRate"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveAnnounceMsgRate"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveNegSyncLeaseDur"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveNegDelayRspLeaseDur"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveNegAnnounceLeaseDur"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveSyncDurRemTime"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveDelayRspDurRemTime"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveAnnounceDurRemTime"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveUmnControl"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveStorageType"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveRowStatus"), ("F3-PTP-MIB", "f3PtpStaticRemoteSlaveIpV6Address"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveAlias"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveAdminState"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveOperationalState"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveSecondaryState"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveClockIdentity"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveIpV4Address"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveTimeCreated"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveSyncMsgRate"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveDelayRspMsgRate"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveAnnounceMsgRate"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveNegSyncLeaseDur"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveNegDelayRspLeaseDur"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveNegAnnounceLeaseDur"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveSyncDurRemTime"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveDelayRspDurRemTime"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveAnnounceDurRemTime"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveRowStatus"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveStorageType"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlavePortIdentity"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlavePeerMacAddress"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveIpV6Address"), ("F3-PTP-MIB", "f3PtpMCIStatsIntervalType"), ("F3-PTP-MIB", "f3PtpMCIStatsValid"), ("F3-PTP-MIB", "f3PtpMCIStatsAction"), ("F3-PTP-MIB", "f3PtpMCIStatsPtpDiscards"), ("F3-PTP-MIB", "f3PtpMCIStatsSyncDeniedEvents"), ("F3-PTP-MIB", "f3PtpMCIStatsDelayRspDeniedEvents"), ("F3-PTP-MIB", "f3PtpMCIStatsAnnounceDeniedEvents"), ("F3-PTP-MIB", "f3PtpMCIStatsSyncCancelledEvents"), ("F3-PTP-MIB", "f3PtpMCIStatsDelayRspCancelledEvents"), ("F3-PTP-MIB", "f3PtpMCIStatsAnnounceCancelledEvents"), ("F3-PTP-MIB", "f3PtpMCIStatsDynamicSlavesLearnt"), ("F3-PTP-MIB", "f3PtpMCIStatsDynamicSlavesDropped"), ("F3-PTP-MIB", "f3PtpMCIHistoryIndex"), ("F3-PTP-MIB", "f3PtpTSHistoryTime"), ("F3-PTP-MIB", "f3PtpMCIHistoryValid"), ("F3-PTP-MIB", "f3PtpMCIHistoryAction"), ("F3-PTP-MIB", "f3PtpMCIHistoryPtpDiscards"), ("F3-PTP-MIB", "f3PtpMCIHistorySyncDeniedEvents"), ("F3-PTP-MIB", "f3PtpMCIHistoryDelayRspDeniedEvents"), ("F3-PTP-MIB", "f3PtpMCIHistoryAnnounceDeniedEvents"), ("F3-PTP-MIB", "f3PtpMCIHistorySyncCancelledEvents"), ("F3-PTP-MIB", "f3PtpMCIHistoryDelayRspCancelledEvents"), ("F3-PTP-MIB", "f3PtpMCIHistoryAnnounceCancelledEvents"), ("F3-PTP-MIB", "f3PtpMCIHistoryDynamicSlavesLearnt"), ("F3-PTP-MIB", "f3PtpMCIHistoryDynamicSlavesDropped"), ("F3-PTP-MIB", "f3PtpMCIThresholdInterval"), ("F3-PTP-MIB", "f3PtpMCIThresholdVariable"), ("F3-PTP-MIB", "f3PtpMCIThresholdValueLo"), ("F3-PTP-MIB", "f3PtpMCIThresholdValueHi"), ("F3-PTP-MIB", "f3PtpMCIThresholdMonValue"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsIntervalType"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsValid"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsAction"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsSyncMsgsGen"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsDelayRspMsgsGen"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsAnnounceMsgsGen"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsSignallingMsgsGen"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsDelayReqMsgsRx"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsSignallingMsgsRx"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsDelayReqMsgsDropped"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsInvalidTLVLenDiscards"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsInvalidTLVTypeDiscards"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsTimesSyncLeaseExp"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsTimesDelayRspLeaseExp"), ("F3-PTP-MIB", "f3PtpRemoteSlaveStatsTimesAnnounceLeaseExp"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryTime"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryValid"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryAction"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistorySyncMsgsGen"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryDelayRspMsgsGen"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryAnnounceMsgsGen"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistorySignallingMsgsGen"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryDelayReqMsgsRx"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistorySignallingMsgsRx"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryDelayReqMsgsDropped"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryInvalidTLVLenDiscards"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryInvalidTLVTypeDiscards"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryTimesSyncLeaseExp"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryTimesDelayRspLeaseExp"), ("F3-PTP-MIB", "f3PtpRemoteSlaveHistoryTimesAnnounceLeaseExp"), ("F3-PTP-MIB", "f3PtpRemoteSlaveThresholdInterval"), ("F3-PTP-MIB", "f3PtpRemoteSlaveThresholdVariable"), ("F3-PTP-MIB", "f3PtpRemoteSlaveThresholdValueLo"), ("F3-PTP-MIB", "f3PtpRemoteSlaveThresholdValueHi"), ("F3-PTP-MIB", "f3PtpRemoteSlaveThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3PtpBoundaryClockObjectGroup = f3PtpBoundaryClockObjectGroup.setStatus('current')
f3PtpBoundaryClockNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 4, 2, 6)).setObjects(("F3-PTP-MIB", "f3PtpMCICrossingAlert"), ("F3-PTP-MIB", "f3PtpRemoteSlaveCrossingAlert"), ("F3-PTP-MIB", "f3PtpMasterClockStatusChangeTrap"), ("F3-PTP-MIB", "f3PtpBCStatusChangeTrap"), ("F3-PTP-MIB", "f3PtpDynamicRemoteSlaveStatusChangeTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3PtpBoundaryClockNotifGroup = f3PtpBoundaryClockNotifGroup.setStatus('current')
f3PtpProtObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 18, 4, 2, 7)).setObjects(("F3-PTP-MIB", "f3PtpMCIProtGroupIndex"), ("F3-PTP-MIB", "f3PtpMCIProtGroupAdminState"), ("F3-PTP-MIB", "f3PtpMCIProtGroupActiveMember"), ("F3-PTP-MIB", "f3PtpMCIProtGroupLastSwitchOverTime"), ("F3-PTP-MIB", "f3PtpMCIProtGroupLastSwitchOverReason"), ("F3-PTP-MIB", "f3PtpMCIProtGroupStorageType"), ("F3-PTP-MIB", "f3PtpMCIProtGroupRowStatus"), ("F3-PTP-MIB", "f3PtpMCIProtMemberObject"), ("F3-PTP-MIB", "f3PtpMCIProtMemberStorageType"), ("F3-PTP-MIB", "f3PtpMCIProtMemberRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3PtpProtObjectGroup = f3PtpProtObjectGroup.setStatus('current')
mibBuilder.exportSymbols("F3-PTP-MIB", f3PtpTSTimeSinceTimeTraceabilityChanged=f3PtpTSTimeSinceTimeTraceabilityChanged, f3PtpL3PTPPortStatsAvgDelayReqRate=f3PtpL3PTPPortStatsAvgDelayReqRate, f3PtpRemoteSlaveStatsTable=f3PtpRemoteSlaveStatsTable, f3PtpTSSecondaryState=f3PtpTSSecondaryState, f3PtpDynamicRemoteSlaveAnnounceMsgRate=f3PtpDynamicRemoteSlaveAnnounceMsgRate, f3PtpTrafficPortFlowPointStatsSyncsRx=f3PtpTrafficPortFlowPointStatsSyncsRx, f3PtpAccPortFlowPointHistoryMinDelayReqResTime=f3PtpAccPortFlowPointHistoryMinDelayReqResTime, f3PtpDynamicRemoteSlaveNegAnnounceLeaseDur=f3PtpDynamicRemoteSlaveNegAnnounceLeaseDur, f3PtpMCIDelayMechanism=f3PtpMCIDelayMechanism, f3PtpAccPortFlowPointStatsAction=f3PtpAccPortFlowPointStatsAction, f3PtpSOOCStatsMinOffsetFromMaster=f3PtpSOOCStatsMinOffsetFromMaster, f3PtpSOOCIpPriorityMapMode=f3PtpSOOCIpPriorityMapMode, f3PtpNetPortFlowPointThresholdCrossingAlert=f3PtpNetPortFlowPointThresholdCrossingAlert, f3PtpPTPPortHistoryMinMeanPathDelay=f3PtpPTPPortHistoryMinMeanPathDelay, f3PtpOCSlaveVirtualPortOperationalState=f3PtpOCSlaveVirtualPortOperationalState, f3PtpMCIHistoryTable=f3PtpMCIHistoryTable, PYSNMP_MODULE_ID=f3PtpMIB, f3PtpAccPortFlowPointAdminState=f3PtpAccPortFlowPointAdminState, f3PtpSOOCHistoryAction=f3PtpSOOCHistoryAction, f3PtpEthernetNetPortExtTable=f3PtpEthernetNetPortExtTable, f3PtpAccPortFlowPointStatsSignalingTx=f3PtpAccPortFlowPointStatsSignalingTx, f3PtpAccPortFlowPointHistoryValid=f3PtpAccPortFlowPointHistoryValid, f3PtpTSStatsIndex=f3PtpTSStatsIndex, f3PtpMCIHistoryDelayRspCancelledEvents=f3PtpMCIHistoryDelayRspCancelledEvents, f3PtpPTPPortStatsValid=f3PtpPTPPortStatsValid, f3PtpRemoteSlaveThresholdInterval=f3PtpRemoteSlaveThresholdInterval, f3PtpL3PTPPortHistoryEntry=f3PtpL3PTPPortHistoryEntry, f3PtpPTPClockCurrentTimeOfDay=f3PtpPTPClockCurrentTimeOfDay, PTPPortType=PTPPortType, f3PtpTrafficPortFlowPointHistoryMaxDelayReqResTime=f3PtpTrafficPortFlowPointHistoryMaxDelayReqResTime, f3PtpTSFreqRecoveryTarget=f3PtpTSFreqRecoveryTarget, f3PtpDynamicRemoteSlaveClockIdentity=f3PtpDynamicRemoteSlaveClockIdentity, f3PtpStaticRemoteSlaveAnnounceDurRemTime=f3PtpStaticRemoteSlaveAnnounceDurRemTime, f3PtpStaticRemoteSlaveStorageType=f3PtpStaticRemoteSlaveStorageType, ClockRecoveryMode=ClockRecoveryMode, f3PtpL2DynamicRemoteSlaveEntry=f3PtpL2DynamicRemoteSlaveEntry, f3PtpPTPClockPhysicalEntityIndex=f3PtpPTPClockPhysicalEntityIndex, f3PtpSOOCStatsMinMeanPathDelay=f3PtpSOOCStatsMinMeanPathDelay, f3PtpTSThresholdValueHi=f3PtpTSThresholdValueHi, f3PtpTrafficPortFlowPointThresholdVariable=f3PtpTrafficPortFlowPointThresholdVariable, f3PtpDynamicRemoteSlaveAdminState=f3PtpDynamicRemoteSlaveAdminState, f3PtpTSThresholdInterval=f3PtpTSThresholdInterval, f3PtpTrafficPortFlowPointHistoryPDelayRspFollowupsRx=f3PtpTrafficPortFlowPointHistoryPDelayRspFollowupsRx, f3PtpPTPPortStatsMaxMeanPathDelay=f3PtpPTPPortStatsMaxMeanPathDelay, f3PtpMasterClockOperationalState=f3PtpMasterClockOperationalState, f3PtpTCEntry=f3PtpTCEntry, f3PtpNetPortFlowPointStatsSignalingRx=f3PtpNetPortFlowPointStatsSignalingRx, f3PtpPTPClockFreqTraceabilityStatus=f3PtpPTPClockFreqTraceabilityStatus, f3PtpMCIStatsDynamicSlavesDropped=f3PtpMCIStatsDynamicSlavesDropped, RemoteSlaveType=RemoteSlaveType, f3PtpSOOCOperationalState=f3PtpSOOCOperationalState, f3PtpTCTable=f3PtpTCTable, PhaseRecoveryState=PhaseRecoveryState, f3PtpSOOCMasterLeaseDuration=f3PtpSOOCMasterLeaseDuration, f3PtpPTPClockClockType=f3PtpPTPClockClockType, f3PtpSOOCStatsInvalidTLVTypeDiscards=f3PtpSOOCStatsInvalidTLVTypeDiscards, f3PtpSOOCStatsOutOfSeqAnnounceMsgs=f3PtpSOOCStatsOutOfSeqAnnounceMsgs, f3PtpTSHistoryTotalTimeCR5=f3PtpTSHistoryTotalTimeCR5, f3PtpTrafficPortFlowPointHistorySignalingTx=f3PtpTrafficPortFlowPointHistorySignalingTx, f3PtpTrafficPortFlowPointOperationalState=f3PtpTrafficPortFlowPointOperationalState, f3PtpPTPClockServiceAvailablePercentage=f3PtpPTPClockServiceAvailablePercentage, f3PtpNetPortFlowPointStatsTagNoMatchDiscards=f3PtpNetPortFlowPointStatsTagNoMatchDiscards, f3PtpSOOCStatsPDelayReqDiscards=f3PtpSOOCStatsPDelayReqDiscards, f3PtpL3PTPPortThresholdValueHi=f3PtpL3PTPPortThresholdValueHi, f3PtpSOOCIndex=f3PtpSOOCIndex, f3PtpSOOCStatsDelayReqDiscards=f3PtpSOOCStatsDelayReqDiscards, f3PtpStaticRemoteSlaveNegSyncLeaseDur=f3PtpStaticRemoteSlaveNegSyncLeaseDur, f3PtpNetPortFlowPointHistoryTime=f3PtpNetPortFlowPointHistoryTime, f3PtpSOOCHistoryTime=f3PtpSOOCHistoryTime, f3PtpAccPortFlowPointHistoryDelayRspsTx=f3PtpAccPortFlowPointHistoryDelayRspsTx, f3PtpTSThresholdVariable=f3PtpTSThresholdVariable, f3PtpTrafficPortFlowPointHistoryDestMciNoMatchDiscards=f3PtpTrafficPortFlowPointHistoryDestMciNoMatchDiscards, f3PtpPTPPortHistoryValid=f3PtpPTPPortHistoryValid, f3PtpTSHistoryTotalTimePR5=f3PtpTSHistoryTotalTimePR5, f3PtpAccPortFlowPointHistorySyncsRx=f3PtpAccPortFlowPointHistorySyncsRx, f3PtpAccPortFlowPointClock=f3PtpAccPortFlowPointClock, f3PtpSOOCHistoryMinSyncPathDelay=f3PtpSOOCHistoryMinSyncPathDelay, f3PtpTSAdminState=f3PtpTSAdminState, f3PtpAccPortFlowPointOuterUntaggedEnabled=f3PtpAccPortFlowPointOuterUntaggedEnabled, f3PtpAccPortFlowPointInner1UntaggedEnabled=f3PtpAccPortFlowPointInner1UntaggedEnabled, f3PtpNetPortFlowPointService=f3PtpNetPortFlowPointService, f3PtpSOOCStatsInvalidMsgLenDiscards=f3PtpSOOCStatsInvalidMsgLenDiscards, f3PtpTCServiceFlow=f3PtpTCServiceFlow, f3PtpPTPPortMasterOnly=f3PtpPTPPortMasterOnly, f3PtpNetPortFlowPointThresholdMonValue=f3PtpNetPortFlowPointThresholdMonValue, f3PtpMCIHistoryAnnounceDeniedEvents=f3PtpMCIHistoryAnnounceDeniedEvents, f3PtpL3PTPPortHistoryAvgMeanPathDelay=f3PtpL3PTPPortHistoryAvgMeanPathDelay, f3PtpRemoteSlaveStatsTimesDelayRspLeaseExp=f3PtpRemoteSlaveStatsTimesDelayRspLeaseExp, f3PtpL3PTPPortGateway=f3PtpL3PTPPortGateway, f3PtpTSClockRecoveryMode=f3PtpTSClockRecoveryMode, CompensationMode=CompensationMode, f3PtpPTPPortNotSlave=f3PtpPTPPortNotSlave, f3PtpMCIMaxStaticSlavesSupported=f3PtpMCIMaxStaticSlavesSupported, f3PtpMCIMasterIpV4Address=f3PtpMCIMasterIpV4Address, f3PtpNetPortFlowPointLoopAvoidance=f3PtpNetPortFlowPointLoopAvoidance, f3PtpL3PTPPortThresholdInterval=f3PtpL3PTPPortThresholdInterval, f3PtpAccPortFlowPointOuterVlanMemberList=f3PtpAccPortFlowPointOuterVlanMemberList, f3PtpPTPPortOperationalState=f3PtpPTPPortOperationalState, f3PtpTrafficPortFlowPointClock=f3PtpTrafficPortFlowPointClock, f3PtpAccPortFlowPointStatsAvgPDelayRspResTime=f3PtpAccPortFlowPointStatsAvgPDelayRspResTime, f3PtpAccPortFlowPointHistoryPDelayReqsTx=f3PtpAccPortFlowPointHistoryPDelayReqsTx, f3PtpL3PTPPortHistoryMsgMiscDiscards=f3PtpL3PTPPortHistoryMsgMiscDiscards, f3PtpTSThresholdEntry=f3PtpTSThresholdEntry, f3PtpTrafficPortFlowPointHistorySyncsTx=f3PtpTrafficPortFlowPointHistorySyncsTx, f3PtpTSIndex=f3PtpTSIndex, f3PtpMasterVirtualPortFlowPoint=f3PtpMasterVirtualPortFlowPoint, f3PtpSOOCServiceFlow=f3PtpSOOCServiceFlow, f3PtpMCIHistoryAction=f3PtpMCIHistoryAction, f3PtpTrafficPortFlowPointStatsMinPDelayRspResTime=f3PtpTrafficPortFlowPointStatsMinPDelayRspResTime, f3PtpL3PTPPortHistoryValid=f3PtpL3PTPPortHistoryValid, f3PtpL3PTPPortThresholdValueLo=f3PtpL3PTPPortThresholdValueLo, f3PtpTCIndex=f3PtpTCIndex, f3PtpTCVirtualPortIdentity=f3PtpTCVirtualPortIdentity, f3PtpTrafficPortFlowPointThresholdCrossingAlert=f3PtpTrafficPortFlowPointThresholdCrossingAlert, f3PtpMasterClockSmpteTimeAddressFlags=f3PtpMasterClockSmpteTimeAddressFlags, f3PtpPerformanceObjects=f3PtpPerformanceObjects, f3PtpL3PTPPortStatsMaxMeanPathDelay=f3PtpL3PTPPortStatsMaxMeanPathDelay, f3PtpBCDomainNumber=f3PtpBCDomainNumber, f3PtpAccPortFlowPointStatsMinDelayReqResTime=f3PtpAccPortFlowPointStatsMinDelayReqResTime, f3PtpL2DynamicRemoteSlaveClockIdentity=f3PtpL2DynamicRemoteSlaveClockIdentity, f3PtpNetPortFlowPointStatsMinSyncResTime=f3PtpNetPortFlowPointStatsMinSyncResTime, f3PtpL3PTPPortDefaultGatewayControl=f3PtpL3PTPPortDefaultGatewayControl, f3PtpTCVirtualPortAdminState=f3PtpTCVirtualPortAdminState, f3PtpL3PTPPortStatsMinSyncPathDelay=f3PtpL3PTPPortStatsMinSyncPathDelay, f3PtpNetPortFlowPointHistoryAnnouncesRx=f3PtpNetPortFlowPointHistoryAnnouncesRx, f3PtpPTPPortThresholdEntry=f3PtpPTPPortThresholdEntry, f3PtpDynamicRemoteSlaveDelayRspMsgRate=f3PtpDynamicRemoteSlaveDelayRspMsgRate, f3PtpPTPPortStatsMessageWrongTypeDiscards=f3PtpPTPPortStatsMessageWrongTypeDiscards, f3PtpCompliance=f3PtpCompliance, f3PtpSOOCSoocProtectionState=f3PtpSOOCSoocProtectionState, f3PtpSOOCEntry=f3PtpSOOCEntry, f3PtpTSThresholdValueLo=f3PtpTSThresholdValueLo, f3PtpAccPortFlowPointStatsIntervalType=f3PtpAccPortFlowPointStatsIntervalType, f3PtpNetPortFlowPointHistorySyncsRx=f3PtpNetPortFlowPointHistorySyncsRx, f3PtpAccPortFlowPointStatsDestMciNoMatchDiscards=f3PtpAccPortFlowPointStatsDestMciNoMatchDiscards, f3PtpMCIThresholdEntry=f3PtpMCIThresholdEntry, f3PtpPTPPortPeerPortMacAddress=f3PtpPTPPortPeerPortMacAddress, f3PtpMCIOperationalState=f3PtpMCIOperationalState, f3PtpNetPortFlowPointHistoryPDelayRspFollowupsTx=f3PtpNetPortFlowPointHistoryPDelayRspFollowupsTx, f3PtpDynamicRemoteSlavePeerMacAddress=f3PtpDynamicRemoteSlavePeerMacAddress, f3PtpNetPortFlowPointHistoryAvgPDelayRspResTime=f3PtpNetPortFlowPointHistoryAvgPDelayRspResTime, f3PtpNetPortFlowPointThresholdEntry=f3PtpNetPortFlowPointThresholdEntry, f3PtpNetPortFlowPointAlias=f3PtpNetPortFlowPointAlias, f3PtpNetPortFlowPointStatsPtpUnknownsTx=f3PtpNetPortFlowPointStatsPtpUnknownsTx, f3PtpNetPortFlowPointHistoryAvgDelayReqResTime=f3PtpNetPortFlowPointHistoryAvgDelayReqResTime, f3PtpL3PTPPortRowStatus=f3PtpL3PTPPortRowStatus, f3PtpSOOCHistoryAvgSyncPDV=f3PtpSOOCHistoryAvgSyncPDV, f3PtpPTPPortStatsIntervalType=f3PtpPTPPortStatsIntervalType, f3PtpSOOCThresholdValueLo=f3PtpSOOCThresholdValueLo, f3PtpL3PTPPortOperationalState=f3PtpL3PTPPortOperationalState, f3PtpAccPortFlowPointBufferSize=f3PtpAccPortFlowPointBufferSize, f3PtpDynamicRemoteSlaveTable=f3PtpDynamicRemoteSlaveTable, f3PtpDynamicRemoteSlaveRowStatus=f3PtpDynamicRemoteSlaveRowStatus, f3PtpTrafficPortFlowPointHistoryTable=f3PtpTrafficPortFlowPointHistoryTable, f3PtpMasterClockSmpteSystemFrameRateNumerator=f3PtpMasterClockSmpteSystemFrameRateNumerator, f3PtpAccPortFlowPointHistoryMgmtFramesTx=f3PtpAccPortFlowPointHistoryMgmtFramesTx, f3PtpTrafficPortFlowPointHistoryAvgPDelayReqResTime=f3PtpTrafficPortFlowPointHistoryAvgPDelayReqResTime, f3PtpConfigScalars=f3PtpConfigScalars, f3PtpMCIStatsDelayRspDeniedEvents=f3PtpMCIStatsDelayRspDeniedEvents, f3PtpPTPPortStatsMessagesWrongLengthDiscards=f3PtpPTPPortStatsMessagesWrongLengthDiscards, f3PtpSOOCHistoryNumClockRecTransients=f3PtpSOOCHistoryNumClockRecTransients, f3PtpTrafficPortFlowPointStatsPDelayReqsTx=f3PtpTrafficPortFlowPointStatsPDelayReqsTx, PtpFlowPointType=PtpFlowPointType, f3PtpPTPClockThresholdInterval=f3PtpPTPClockThresholdInterval, f3PtpNetPortFlowPointRefConnectGuardFlow=f3PtpNetPortFlowPointRefConnectGuardFlow, f3PtpSOOCHistoryEntry=f3PtpSOOCHistoryEntry, f3PtpPTPClockHistoryValid=f3PtpPTPClockHistoryValid, DelayReqMessageRate=DelayReqMessageRate, f3PtpTCSync=f3PtpTCSync, f3PtpPTPClockStorageType=f3PtpPTPClockStorageType, SyncMsgRate=SyncMsgRate, f3PtpTSStatsTotalTimePR5=f3PtpTSStatsTotalTimePR5, f3PtpPTPPortMaxExpectedL2Slaves=f3PtpPTPPortMaxExpectedL2Slaves, f3PtpL3PTPPortDelayRespTimeout=f3PtpL3PTPPortDelayRespTimeout, f3PtpAccPortFlowPointHistoryMinPDelayReqResTime=f3PtpAccPortFlowPointHistoryMinPDelayReqResTime, f3PtpSOOCMasterDelayRspMsgRate=f3PtpSOOCMasterDelayRspMsgRate, f3PtpMCIProtMemberStorageType=f3PtpMCIProtMemberStorageType, f3PtpL3PTPPortSyncReceiptTimeout=f3PtpL3PTPPortSyncReceiptTimeout, f3PtpL3PTPPortPeerClockClass=f3PtpL3PTPPortPeerClockClass, f3PtpNetPortFlowPointHistoryIndex=f3PtpNetPortFlowPointHistoryIndex, f3PtpMCIStatsDynamicSlavesLearnt=f3PtpMCIStatsDynamicSlavesLearnt, f3PtpRemoteSlaveStatsTimesSyncLeaseExp=f3PtpRemoteSlaveStatsTimesSyncLeaseExp, f3PtpAccPortFlowPointHistoryFollowupsRx=f3PtpAccPortFlowPointHistoryFollowupsRx, f3PtpL3PTPPortHistoryAvgDelayRespRate=f3PtpL3PTPPortHistoryAvgDelayRespRate, f3PtpAccPortFlowPointStatsAvgDelayReqResTime=f3PtpAccPortFlowPointStatsAvgDelayReqResTime, f3PtpMCIHistoryDynamicSlavesLearnt=f3PtpMCIHistoryDynamicSlavesLearnt, f3PtpNetPortFlowPointEIRLo=f3PtpNetPortFlowPointEIRLo, f3PtpMCIHistoryTime=f3PtpMCIHistoryTime, f3PtpMCIIndex=f3PtpMCIIndex, f3PtpNetPortFlowPointHistoryTable=f3PtpNetPortFlowPointHistoryTable, f3PtpSOOCHistoryIndex=f3PtpSOOCHistoryIndex, CompensationStatus=CompensationStatus, f3PtpBCAdminState=f3PtpBCAdminState, f3PtpTCVirtualPortEntry=f3PtpTCVirtualPortEntry, f3PtpBCTable=f3PtpBCTable, f3PtpPTPClockClockAssumedQL=f3PtpPTPClockClockAssumedQL, f3PtpStaticRemoteSlaveSecondaryState=f3PtpStaticRemoteSlaveSecondaryState, f3PtpNetPortFlowPointHistoryAnnouncesTx=f3PtpNetPortFlowPointHistoryAnnouncesTx, f3PtpMCIProtGroupAdminState=f3PtpMCIProtGroupAdminState, f3PtpL3PTPPortHistoryMinOffsetFromMaster=f3PtpL3PTPPortHistoryMinOffsetFromMaster, f3PtpMCIIpPriorityMapMode=f3PtpMCIIpPriorityMapMode, f3PtpMCIStatsEntry=f3PtpMCIStatsEntry, f3PtpNetPortFlowPointSecondaryState=f3PtpNetPortFlowPointSecondaryState, f3PtpRemoteSlaveThresholdVariable=f3PtpRemoteSlaveThresholdVariable, f3PtpL2DynamicRemoteSlaveTable=f3PtpL2DynamicRemoteSlaveTable, f3PtpNetPortFlowPointHistoryDelayRspsTx=f3PtpNetPortFlowPointHistoryDelayRspsTx, f3PtpL3PTPPortStatsAction=f3PtpL3PTPPortStatsAction, f3PtpTrafficPortFlowPointStatsPDelayRspsRx=f3PtpTrafficPortFlowPointStatsPDelayRspsRx, f3PtpMasterClockClockIdentity=f3PtpMasterClockClockIdentity, f3PtpTrafficPortFlowPointExtTable=f3PtpTrafficPortFlowPointExtTable, f3PtpSOOCStatsIntervalType=f3PtpSOOCStatsIntervalType, f3PtpTrafficPortFlowPointStatsAvgPDelayReqResTime=f3PtpTrafficPortFlowPointStatsAvgPDelayReqResTime, f3PtpPTPClockEntry=f3PtpPTPClockEntry, f3PtpL3PTPPortHistoryUnknownMasterDiscards=f3PtpL3PTPPortHistoryUnknownMasterDiscards, f3PtpNetPortFlowPointSecureBlockingEnabled=f3PtpNetPortFlowPointSecureBlockingEnabled, f3PtpSOOCStatsNumClockRecTransients=f3PtpSOOCStatsNumClockRecTransients, f3PtpMasterVirtualPortTable=f3PtpMasterVirtualPortTable, f3PtpRemoteSlaveThresholdMonValue=f3PtpRemoteSlaveThresholdMonValue, f3PtpMCIThresholdMonValue=f3PtpMCIThresholdMonValue, f3PtpPTPClockStatsAvgOffsetFromMaster=f3PtpPTPClockStatsAvgOffsetFromMaster, f3PtpAccPortFlowPointIndex=f3PtpAccPortFlowPointIndex, f3PtpAccPortFlowPointInner2VlanEtherType=f3PtpAccPortFlowPointInner2VlanEtherType, f3PtpMCIProtGroupLastSwitchOverTime=f3PtpMCIProtGroupLastSwitchOverTime, f3PtpTSHistoryTotalTimePR3=f3PtpTSHistoryTotalTimePR3, f3PtpPTPPortTxDestMacAddress=f3PtpPTPPortTxDestMacAddress, f3PtpTrafficPortFlowPointHistoryFollowupsRx=f3PtpTrafficPortFlowPointHistoryFollowupsRx, f3PtpL3PTPPortLocalPriority=f3PtpL3PTPPortLocalPriority, f3PtpTrafficPortFlowPointThresholdTable=f3PtpTrafficPortFlowPointThresholdTable, f3PtpTCVirtualPortSecondaryState=f3PtpTCVirtualPortSecondaryState, f3PtpSOOCMasterAnnounceMsgRate=f3PtpSOOCMasterAnnounceMsgRate, f3PtpAccPortFlowPointInner2VlanMemberList=f3PtpAccPortFlowPointInner2VlanMemberList, f3PtpTSClockAccuracy=f3PtpTSClockAccuracy, f3PtpPTPClockTimeSinceFreqTraceabilityChanged=f3PtpPTPClockTimeSinceFreqTraceabilityChanged, f3PtpPTPClockAdminState=f3PtpPTPClockAdminState, f3PtpNetPortFlowPointStatsDelayRspsTx=f3PtpNetPortFlowPointStatsDelayRspsTx, f3PtpNetPortFlowPointHistoryMinDelayReqResTime=f3PtpNetPortFlowPointHistoryMinDelayReqResTime, f3PtpAccPortFlowPointStatsMaxPDelayRspResTime=f3PtpAccPortFlowPointStatsMaxPDelayRspResTime, f3PtpPTPClockServiceAvailableTime=f3PtpPTPClockServiceAvailableTime, f3PtpMCIMaxLeaseDuration=f3PtpMCIMaxLeaseDuration, f3PtpAccPortFlowPointHistoryEntry=f3PtpAccPortFlowPointHistoryEntry, f3PtpTrafficPortFlowPointAdminState=f3PtpTrafficPortFlowPointAdminState, f3PtpSOOCCrossingAlert=f3PtpSOOCCrossingAlert, f3PtpTrafficPortFlowPointThresholdValueLo=f3PtpTrafficPortFlowPointThresholdValueLo, f3PtpL3PTPPortAlias=f3PtpL3PTPPortAlias, f3PtpTSOperationalState=f3PtpTSOperationalState, f3PtpAccPortFlowPointService=f3PtpAccPortFlowPointService, f3PtpL2DynamicRemoteSlaveStorageType=f3PtpL2DynamicRemoteSlaveStorageType, f3PtpSOOCSoocLockOutControl=f3PtpSOOCSoocLockOutControl, f3PtpTrafficPortFlowPointHistoryMaxSyncResTime=f3PtpTrafficPortFlowPointHistoryMaxSyncResTime, f3PtpAccPortFlowPointHistoryPDelayRspsRx=f3PtpAccPortFlowPointHistoryPDelayRspsRx, f3PtpSOOCMasterRequestUnicastTimeout=f3PtpSOOCMasterRequestUnicastTimeout, f3PtpTSStatsTable=f3PtpTSStatsTable, f3PtpL2DynamicRemoteSlaveMacAddress=f3PtpL2DynamicRemoteSlaveMacAddress, f3PtpL3PTPPortStatsMaxOffsetFromMaster=f3PtpL3PTPPortStatsMaxOffsetFromMaster)
mibBuilder.exportSymbols("F3-PTP-MIB", f3PtpL3PTPPortStatsAvgSyncPathDelay=f3PtpL3PTPPortStatsAvgSyncPathDelay, f3PtpSOOCStatsUnknownDomainDiscards=f3PtpSOOCStatsUnknownDomainDiscards, f3PtpDynamicRemoteSlaveStatusChangeTrap=f3PtpDynamicRemoteSlaveStatusChangeTrap, PTPClockProfile=PTPClockProfile, f3PtpTSTimeSinceFreqTraceabilityChanged=f3PtpTSTimeSinceFreqTraceabilityChanged, f3PtpTSSelectedPacketClock=f3PtpTSSelectedPacketClock, f3PtpNetPortFlowPointOuterVlanMemberList=f3PtpNetPortFlowPointOuterVlanMemberList, f3PtpMasterVirtualPortAlias=f3PtpMasterVirtualPortAlias, ClockIdentity=ClockIdentity, f3PtpTrafficPortFlowPointStatsMinDelayReqResTime=f3PtpTrafficPortFlowPointStatsMinDelayReqResTime, SyncMessageRate=SyncMessageRate, f3PtpSOOCHistoryAvgOffsetFromMaster=f3PtpSOOCHistoryAvgOffsetFromMaster, f3PtpAccPortFlowPointCIRHi=f3PtpAccPortFlowPointCIRHi, f3PtpDynamicRemoteSlaveNegDelayRspLeaseDur=f3PtpDynamicRemoteSlaveNegDelayRspLeaseDur, f3PtpMasterClockActiveGrantsSyncService=f3PtpMasterClockActiveGrantsSyncService, f3PtpNetPortFlowPointStatsAction=f3PtpNetPortFlowPointStatsAction, f3PtpNetPortFlowPointStatsDelayReqsRx=f3PtpNetPortFlowPointStatsDelayReqsRx, f3PtpTrafficPortFlowPointStatsPDelayReqsRx=f3PtpTrafficPortFlowPointStatsPDelayReqsRx, f3PtpTSClockIdentity=f3PtpTSClockIdentity, f3PtpPTPClockClockClass=f3PtpPTPClockClockClass, f3PtpSOOCUnicastMessageNegEnabled=f3PtpSOOCUnicastMessageNegEnabled, f3PtpAccPortFlowPointInner1VlanMemberList=f3PtpAccPortFlowPointInner1VlanMemberList, f3PtpStaticRemoteSlaveSyncMsgRate=f3PtpStaticRemoteSlaveSyncMsgRate, f3PtpNetPortFlowPointStatsIndex=f3PtpNetPortFlowPointStatsIndex, f3PtpTrafficPortFlowPointStatsPDelayRspsTx=f3PtpTrafficPortFlowPointStatsPDelayRspsTx, f3PtpMCIDomainNumber=f3PtpMCIDomainNumber, f3PtpL3PTPPortIndex=f3PtpL3PTPPortIndex, f3PtpTSStatsEntry=f3PtpTSStatsEntry, f3PtpTSStatsTotalTimeCR3=f3PtpTSStatsTotalTimeCR3, f3PtpTrafficPortFlowPointStatsMaxPDelayReqResTime=f3PtpTrafficPortFlowPointStatsMaxPDelayReqResTime, f3PtpMCIProtGroupLastSwitchOverReason=f3PtpMCIProtGroupLastSwitchOverReason, f3PtpMCIPortIdentity=f3PtpMCIPortIdentity, f3PtpPTPClockStatsAvgMeanPathDelay=f3PtpPTPClockStatsAvgMeanPathDelay, f3PtpMIB=f3PtpMIB, f3PtpNetPortFlowPointHistoryMinPDelayRspResTime=f3PtpNetPortFlowPointHistoryMinPDelayRspResTime, f3PtpL3PTPPortHistoryTime=f3PtpL3PTPPortHistoryTime, f3PtpNetPortFlowPointHistoryMaxDelayReqResTime=f3PtpNetPortFlowPointHistoryMaxDelayReqResTime, f3PtpSOOCStatsAvgSyncPathDelay=f3PtpSOOCStatsAvgSyncPathDelay, f3PtpPTPPortHistoryMaxOffsetFromMaster=f3PtpPTPPortHistoryMaxOffsetFromMaster, AnnounceMsgRate=AnnounceMsgRate, f3PtpSOOCAdminState=f3PtpSOOCAdminState, f3PtpPTPClockAlias=f3PtpPTPClockAlias, f3PtpAccPortFlowPointThresholdMonValue=f3PtpAccPortFlowPointThresholdMonValue, f3PtpTrafficPortFlowPointStatsPtpUnknownsRx=f3PtpTrafficPortFlowPointStatsPtpUnknownsRx, f3PtpTCRowStatus=f3PtpTCRowStatus, f3PtpTSTimeHoldoverAccuracy=f3PtpTSTimeHoldoverAccuracy, f3PtpNetPortFlowPointStatsSyncsTx=f3PtpNetPortFlowPointStatsSyncsTx, f3PtpL3PTPPortTransmitDuration=f3PtpL3PTPPortTransmitDuration, f3PtpNetPortFlowPointHistoryMaxPDelayRspResTime=f3PtpNetPortFlowPointHistoryMaxPDelayRspResTime, f3PtpSOOCStatsMaxSyncPDV=f3PtpSOOCStatsMaxSyncPDV, f3PtpMasterVirtualPortAdminState=f3PtpMasterVirtualPortAdminState, f3PtpTrafficPortFlowPointStatsPDelayRspFollowupsRx=f3PtpTrafficPortFlowPointStatsPDelayRspFollowupsRx, f3PtpPTPClockActiveSlavePort=f3PtpPTPClockActiveSlavePort, f3PtpTrafficPortFlowPointBufferSize=f3PtpTrafficPortFlowPointBufferSize, f3PtpNetPortFlowPointStatsPtpUnknownsRx=f3PtpNetPortFlowPointStatsPtpUnknownsRx, f3PtpNetPortFlowPointHistoryAvgSyncResTime=f3PtpNetPortFlowPointHistoryAvgSyncResTime, f3PtpSOOCHistoryDelayReqDiscards=f3PtpSOOCHistoryDelayReqDiscards, f3PtpPTPClockThresholdMonValue=f3PtpPTPClockThresholdMonValue, f3PtpAccPortFlowPointStatsEntry=f3PtpAccPortFlowPointStatsEntry, f3PtpNetPortFlowPointHistoryDelayReqsRx=f3PtpNetPortFlowPointHistoryDelayReqsRx, f3PtpNetPortFlowPointStatsMaxDelayReqResTime=f3PtpNetPortFlowPointStatsMaxDelayReqResTime, f3PtpBCClockIdentity=f3PtpBCClockIdentity, SlaveMode=SlaveMode, f3PtpTrafficPortFlowPointEIRLo=f3PtpTrafficPortFlowPointEIRLo, f3PtpL3PTPPortIpV6Address=f3PtpL3PTPPortIpV6Address, f3PtpRemoteSlaveStatsEntry=f3PtpRemoteSlaveStatsEntry, f3PtpSOOCHistoryMaxMeanPathDelay=f3PtpSOOCHistoryMaxMeanPathDelay, f3PtpMCIMaxSyncMsgRate=f3PtpMCIMaxSyncMsgRate, f3PtpL3PTPPortStatsMessagesWrongLengthDiscards=f3PtpL3PTPPortStatsMessagesWrongLengthDiscards, f3PtpPTPPortHistoryMaxSyncPathDelay=f3PtpPTPPortHistoryMaxSyncPathDelay, f3PtpMasterClockUtcOffset=f3PtpMasterClockUtcOffset, f3PtpPTPClockHistoryMinOffsetFromMaster=f3PtpPTPClockHistoryMinOffsetFromMaster, f3PtpL3PTPPortStatsIndex=f3PtpL3PTPPortStatsIndex, f3PtpMasterClockTimeClock=f3PtpMasterClockTimeClock, f3PtpSOOCStatsMaxFwdFlowWeight=f3PtpSOOCStatsMaxFwdFlowWeight, f3PtpAccPortFlowPointStatsPDelayRspsTx=f3PtpAccPortFlowPointStatsPDelayRspsTx, f3PtpPTPClockProfile=f3PtpPTPClockProfile, f3PtpPTPClockSecondaryState=f3PtpPTPClockSecondaryState, f3PtpSOOCStatsMaxSyncPathDelay=f3PtpSOOCStatsMaxSyncPathDelay, f3PtpSOOCHistoryInvalidTLVTypeDiscards=f3PtpSOOCHistoryInvalidTLVTypeDiscards, f3PtpNetPortFlowPointIndex=f3PtpNetPortFlowPointIndex, f3PtpAccPortFlowPointThresholdCrossingAlert=f3PtpAccPortFlowPointThresholdCrossingAlert, f3PtpEthernetNetPortDelayAsymmetry=f3PtpEthernetNetPortDelayAsymmetry, f3PtpNetPortFlowPointStatsSyncsRx=f3PtpNetPortFlowPointStatsSyncsRx, f3PtpPTPClockOperationalMode=f3PtpPTPClockOperationalMode, f3PtpPTPPortVirtualPortCtrl=f3PtpPTPPortVirtualPortCtrl, f3PtpRemoteSlaveStatsSignallingMsgsRx=f3PtpRemoteSlaveStatsSignallingMsgsRx, f3PtpRemoteSlaveStatsInvalidTLVTypeDiscards=f3PtpRemoteSlaveStatsInvalidTLVTypeDiscards, f3PtpSOOCStatsAvgMeanPathDelay=f3PtpSOOCStatsAvgMeanPathDelay, f3PtpL3PTPPortStatsIntervalType=f3PtpL3PTPPortStatsIntervalType, f3PtpNetPortFlowPointHistoryValid=f3PtpNetPortFlowPointHistoryValid, f3PtpPTPClockScaledLogVariance=f3PtpPTPClockScaledLogVariance, f3PtpAccPortFlowPointHistoryDelayReqsTx=f3PtpAccPortFlowPointHistoryDelayReqsTx, f3PtpTCVirtualPortRowStatus=f3PtpTCVirtualPortRowStatus, f3PtpPTPClockThresholdEntry=f3PtpPTPClockThresholdEntry, TimeScale=TimeScale, f3PtpMCIProtMemberTable=f3PtpMCIProtMemberTable, f3PtpL3PTPPortDelayAsymmetry=f3PtpL3PTPPortDelayAsymmetry, f3PtpTrafficPortFlowPointStatsMinSyncResTime=f3PtpTrafficPortFlowPointStatsMinSyncResTime, f3PtpPTPClockIndex=f3PtpPTPClockIndex, f3PtpNetPortFlowPointCIRLo=f3PtpNetPortFlowPointCIRLo, f3PtpTSHistoryTable=f3PtpTSHistoryTable, f3PtpTSTimeLastPRScore=f3PtpTSTimeLastPRScore, f3PtpAccPortFlowPointHistoryTagNoMatchDiscards=f3PtpAccPortFlowPointHistoryTagNoMatchDiscards, f3PtpPTPPortLastRcvdDelayRspMsg=f3PtpPTPPortLastRcvdDelayRspMsg, f3PtpSOOCRecentMeanPathDelay=f3PtpSOOCRecentMeanPathDelay, f3PtpNetPortFlowPointStatsIntervalType=f3PtpNetPortFlowPointStatsIntervalType, f3PtpNetPortFlowPointStatsMgmtFramesRx=f3PtpNetPortFlowPointStatsMgmtFramesRx, f3PtpSOOCSlaveIpV6AddrPrefixLength=f3PtpSOOCSlaveIpV6AddrPrefixLength, f3PtpNetPortFlowPointStatsMaxSyncResTime=f3PtpNetPortFlowPointStatsMaxSyncResTime, f3PtpSOOCStatsMgmtMsgsDiscarded=f3PtpSOOCStatsMgmtMsgsDiscarded, f3PtpTrafficPortFlowPointHistoryPtpUnknownsTx=f3PtpTrafficPortFlowPointHistoryPtpUnknownsTx, f3PtpPTPClockStatsEntry=f3PtpPTPClockStatsEntry, f3PtpPTPPortHistoryMinOffsetFromMaster=f3PtpPTPPortHistoryMinOffsetFromMaster, f3PtpNetPortFlowPointHistoryAction=f3PtpNetPortFlowPointHistoryAction, f3PtpRemoteSlaveHistoryDelayReqMsgsDropped=f3PtpRemoteSlaveHistoryDelayReqMsgsDropped, f3PtpNetPortFlowPointEIRHi=f3PtpNetPortFlowPointEIRHi, f3PtpRemoteSlaveHistoryValid=f3PtpRemoteSlaveHistoryValid, f3PtpPTPPortStatsAction=f3PtpPTPPortStatsAction, f3PtpMCIThresholdValueHi=f3PtpMCIThresholdValueHi, f3PtpPTPPortStatsAvgSyncPathDelay=f3PtpPTPPortStatsAvgSyncPathDelay, f3PtpSOOCStatsAvgRevFlowWeight=f3PtpSOOCStatsAvgRevFlowWeight, f3PtpPTPClockHistoryAvgOffsetFromMaster=f3PtpPTPClockHistoryAvgOffsetFromMaster, f3PtpRemoteSlaveHistoryDelayRspMsgsGen=f3PtpRemoteSlaveHistoryDelayRspMsgsGen, f3PtpSOOCThresholdEntry=f3PtpSOOCThresholdEntry, f3PtpPTPClockClockReceivedQL=f3PtpPTPClockClockReceivedQL, f3PtpTSClockClass=f3PtpTSClockClass, f3PtpMCIStatsAction=f3PtpMCIStatsAction, f3PtpAccPortFlowPointStatsMinSyncResTime=f3PtpAccPortFlowPointStatsMinSyncResTime, f3PtpAccPortFlowPointStatsPtpUnknownsTx=f3PtpAccPortFlowPointStatsPtpUnknownsTx, f3PtpTrafficPortFlowPointHistoryMgmtFramesRx=f3PtpTrafficPortFlowPointHistoryMgmtFramesRx, f3PtpBCSecondaryState=f3PtpBCSecondaryState, f3PtpMCIPtpTransport=f3PtpMCIPtpTransport, f3PtpMasterClockPriority1=f3PtpMasterClockPriority1, f3PtpRemoteSlaveThresholdTable=f3PtpRemoteSlaveThresholdTable, f3PtpPTPPortHistoryTable=f3PtpPTPPortHistoryTable, f3PtpNetPortFlowPointStatsAvgSyncResTime=f3PtpNetPortFlowPointStatsAvgSyncResTime, f3PtpTrafficPortFlowPointHistoryTagNoMatchDiscards=f3PtpTrafficPortFlowPointHistoryTagNoMatchDiscards, f3PtpSOOCHistoryPDelayFollowupDiscards=f3PtpSOOCHistoryPDelayFollowupDiscards, ClockClassProfile=ClockClassProfile, f3PtpAccPortFlowPointHistoryMaxPDelayReqResTime=f3PtpAccPortFlowPointHistoryMaxPDelayReqResTime, f3PtpNetPortFlowPointStatsPDelayRspFollowupsRx=f3PtpNetPortFlowPointStatsPDelayRspFollowupsRx, f3PtpSOOCHistoryPDelayReqDiscards=f3PtpSOOCHistoryPDelayReqDiscards, f3PtpMCIAdminState=f3PtpMCIAdminState, f3PtpPTPPortStatsAvgSyncRate=f3PtpPTPPortStatsAvgSyncRate, f3PtpTrafficPortFlowPointHistoryMinPDelayReqResTime=f3PtpTrafficPortFlowPointHistoryMinPDelayReqResTime, f3PtpMasterClockStatusChangeTrap=f3PtpMasterClockStatusChangeTrap, f3PtpPTPPortHistoryAvgOffsetFromMaster=f3PtpPTPPortHistoryAvgOffsetFromMaster, f3PtpSOOCMasterSyncMsgRate=f3PtpSOOCMasterSyncMsgRate, f3PtpTrafficPortFlowPointHistorySyncsRx=f3PtpTrafficPortFlowPointHistorySyncsRx, f3PtpMCIRowStatus=f3PtpMCIRowStatus, f3PtpPTPClockNetworkTimeInaccuracy=f3PtpPTPClockNetworkTimeInaccuracy, f3PtpSOOCStatsPDelayRspDiscards=f3PtpSOOCStatsPDelayRspDiscards, f3PtpAccPortFlowPointStatsValid=f3PtpAccPortFlowPointStatsValid, f3PtpSOOCHistoryInvalidTLVLenDiscards=f3PtpSOOCHistoryInvalidTLVLenDiscards, f3PtpL3PTPPortAdminState=f3PtpL3PTPPortAdminState, f3PtpSOOCDefaultGatewayControl=f3PtpSOOCDefaultGatewayControl, f3PtpL3PTPPortHistoryMinSyncPathDelay=f3PtpL3PTPPortHistoryMinSyncPathDelay, f3PtpPTPClockThresholdValueHi=f3PtpPTPClockThresholdValueHi, f3PtpTrafficPortFlowPointStatsDestMciNoMatchDiscards=f3PtpTrafficPortFlowPointStatsDestMciNoMatchDiscards, f3PtpPTPClockStatsMinSyncPathDelay=f3PtpPTPClockStatsMinSyncPathDelay, f3PtpNetPortFlowPointInner2VlanMemberList=f3PtpNetPortFlowPointInner2VlanMemberList, f3PtpL3PTPPortIpV4Address=f3PtpL3PTPPortIpV4Address, f3PtpPTPPortStatsAvgDelayRespRate=f3PtpPTPPortStatsAvgDelayRespRate, f3PtpStaticRemoteSlaveDelayRspMsgRate=f3PtpStaticRemoteSlaveDelayRspMsgRate, f3PtpAccPortFlowPointHistoryFollowupsTx=f3PtpAccPortFlowPointHistoryFollowupsTx, f3PtpTSStatsTotalTimeCR4=f3PtpTSStatsTotalTimeCR4, f3PtpL3PTPPortIpV4SubnetMask=f3PtpL3PTPPortIpV4SubnetMask, f3PtpMasterClockRowStatus=f3PtpMasterClockRowStatus, f3PtpRemoteSlaveHistorySignallingMsgsGen=f3PtpRemoteSlaveHistorySignallingMsgsGen, f3PtpMasterVirtualPortIndex=f3PtpMasterVirtualPortIndex, f3PtpSOOCStatsAvgSyncPDV=f3PtpSOOCStatsAvgSyncPDV, f3PtpMCIClockClass=f3PtpMCIClockClass, f3PtpL3PTPPortHistoryMaxMeanPathDelay=f3PtpL3PTPPortHistoryMaxMeanPathDelay, f3PtpTCOperationalState=f3PtpTCOperationalState, f3PtpAccPortFlowPointStatsDelayReqsTx=f3PtpAccPortFlowPointStatsDelayReqsTx, f3PtpAccPortFlowPointHistoryMaxDelayReqResTime=f3PtpAccPortFlowPointHistoryMaxDelayReqResTime, f3PtpPTPPortHistoryIndex=f3PtpPTPPortHistoryIndex, f3PtpL3PTPPortHistoryMaxSyncPathDelay=f3PtpL3PTPPortHistoryMaxSyncPathDelay, f3PtpSOOCHistoryAvgFwdFlowWeight=f3PtpSOOCHistoryAvgFwdFlowWeight, f3PtpPTPClockStatsValid=f3PtpPTPClockStatsValid, f3PtpSOOCStatsUnknownMasterDiscards=f3PtpSOOCStatsUnknownMasterDiscards, f3PtpTrafficPortFlowPointHistoryDelayRspsRx=f3PtpTrafficPortFlowPointHistoryDelayRspsRx, f3PtpAccPortFlowPointHistoryAnnouncesTx=f3PtpAccPortFlowPointHistoryAnnouncesTx, f3PtpL3PTPPortAnnounceReceiptTimeout=f3PtpL3PTPPortAnnounceReceiptTimeout, f3PtpMCIMasterIpV6Address=f3PtpMCIMasterIpV6Address, f3PtpPTPPortThresholdValueLo=f3PtpPTPPortThresholdValueLo, f3PtpMasterClockEntry=f3PtpMasterClockEntry, f3PtpPTPPortmDelayReqRespMsgRate=f3PtpPTPPortmDelayReqRespMsgRate, f3PtpL3PTPPortAnnounceMsgRate=f3PtpL3PTPPortAnnounceMsgRate, f3PtpSOOCIpV6Gateway=f3PtpSOOCIpV6Gateway, f3PtpTSHistoryTotalTimeCR3=f3PtpTSHistoryTotalTimeCR3, f3PtpRemoteSlaveStatsTimesAnnounceLeaseExp=f3PtpRemoteSlaveStatsTimesAnnounceLeaseExp, f3PtpStaticRemoteSlaveAdminState=f3PtpStaticRemoteSlaveAdminState, f3PtpBCEntry=f3PtpBCEntry, f3PtpRemoteSlaveHistoryDelayReqMsgsRx=f3PtpRemoteSlaveHistoryDelayReqMsgsRx, f3PtpPTPPortHistoryMsgMiscDiscards=f3PtpPTPPortHistoryMsgMiscDiscards, f3PtpNetPortFlowPointThresholdVariable=f3PtpNetPortFlowPointThresholdVariable, f3PtpMasterVirtualPortOperationalState=f3PtpMasterVirtualPortOperationalState, f3PtpL3PTPPortStatsEntry=f3PtpL3PTPPortStatsEntry, f3PtpNetPortFlowPointInner1VlanEtherType=f3PtpNetPortFlowPointInner1VlanEtherType, f3PtpL3PTPPortIpV6Gateway=f3PtpL3PTPPortIpV6Gateway, f3PtpMasterClockPhysicalEntityIndex=f3PtpMasterClockPhysicalEntityIndex, f3PtpPTPClockRecentMeanPathDelay=f3PtpPTPClockRecentMeanPathDelay, f3PtpMasterVirtualPortEntry=f3PtpMasterVirtualPortEntry, f3PtpTrafficPortFlowPointStatsSyncsTx=f3PtpTrafficPortFlowPointStatsSyncsTx, f3PtpSOOCSoocClockRecoveryState=f3PtpSOOCSoocClockRecoveryState, f3PtpPTPPortLocalPriority=f3PtpPTPPortLocalPriority, f3PtpL3PTPPortMinimumExpectedClockClass=f3PtpL3PTPPortMinimumExpectedClockClass, f3PtpNetPortFlowPointRowStatus=f3PtpNetPortFlowPointRowStatus, f3PtpL3PTPPortIfName=f3PtpL3PTPPortIfName, f3PtpTSSync=f3PtpTSSync, f3PtpSOOCStatsMinSyncPDV=f3PtpSOOCStatsMinSyncPDV, f3PtpL3PTPPortDelayAsymmetryComp=f3PtpL3PTPPortDelayAsymmetryComp, f3PtpNetPortFlowPointThresholdValueLo=f3PtpNetPortFlowPointThresholdValueLo, f3PtpMCIHistoryPtpDiscards=f3PtpMCIHistoryPtpDiscards, f3PtpTCStorageType=f3PtpTCStorageType, f3PtpNetPortFlowPointStatsMaxPDelayReqResTime=f3PtpNetPortFlowPointStatsMaxPDelayReqResTime, f3PtpRemoteSlaveStatsSlaveIndex=f3PtpRemoteSlaveStatsSlaveIndex, f3PtpMasterVirtualPortStorageType=f3PtpMasterVirtualPortStorageType, f3PtpPTPClockStatsMinMeanPathDelay=f3PtpPTPClockStatsMinMeanPathDelay, f3PtpRemoteSlaveHistoryTimesAnnounceLeaseExp=f3PtpRemoteSlaveHistoryTimesAnnounceLeaseExp, f3PtpTrafficPortFlowPointLoopAvoidance=f3PtpTrafficPortFlowPointLoopAvoidance, f3PtpL3PTPPortStatsMaxSyncPathDelay=f3PtpL3PTPPortStatsMaxSyncPathDelay, f3PtpPTPPortBmcaDecisionCode=f3PtpPTPPortBmcaDecisionCode, f3PtpOCSlaveVirtualPortRowStatus=f3PtpOCSlaveVirtualPortRowStatus, f3PtpMCIHistoryIndex=f3PtpMCIHistoryIndex, f3PtpPTPPortHistoryUnknownMasterDiscards=f3PtpPTPPortHistoryUnknownMasterDiscards, f3PtpSOOCIpPriority=f3PtpSOOCIpPriority, f3PtpMasterClockActiveGrantsAnnounceService=f3PtpMasterClockActiveGrantsAnnounceService, f3PtpTrafficPortFlowPointStatsMgmtFramesRx=f3PtpTrafficPortFlowPointStatsMgmtFramesRx, f3PtpAccPortFlowPointHistoryPDelayReqsRx=f3PtpAccPortFlowPointHistoryPDelayReqsRx, f3PtpPTPClockTimeTraceabilityStatus=f3PtpPTPClockTimeTraceabilityStatus, f3PtpSOOCStatsPDelayFollowupDiscards=f3PtpSOOCStatsPDelayFollowupDiscards, f3PtpTSTimeSource=f3PtpTSTimeSource, f3PtpAccPortFlowPointHistoryDelayReqsRx=f3PtpAccPortFlowPointHistoryDelayReqsRx, f3PtpMCIStatsTable=f3PtpMCIStatsTable, f3PtpSOOCThresholdIndex=f3PtpSOOCThresholdIndex, f3PtpMCIThresholdTable=f3PtpMCIThresholdTable, f3PtpRemoteSlaveHistoryEntry=f3PtpRemoteSlaveHistoryEntry, f3PtpSOOCThresholdTable=f3PtpSOOCThresholdTable, f3PtpSOOCThresholdMonValue=f3PtpSOOCThresholdMonValue, f3PtpTrafficPortFlowPointStatsPDelayRspFollowupsTx=f3PtpTrafficPortFlowPointStatsPDelayRspFollowupsTx, f3PtpPTPPortHistoryMessagesWrongLengthDiscards=f3PtpPTPPortHistoryMessagesWrongLengthDiscards, f3PtpTrafficPortFlowPointHistoryAvgSyncResTime=f3PtpTrafficPortFlowPointHistoryAvgSyncResTime, f3PtpL3PTPPortHistoryIndex=f3PtpL3PTPPortHistoryIndex, f3PtpEthernetAccPortDelayAsymmetry=f3PtpEthernetAccPortDelayAsymmetry, f3PtpSOOCMasterIpProtocol=f3PtpSOOCMasterIpProtocol, f3PtpTrafficPortFlowPointInner2VlanMemberList=f3PtpTrafficPortFlowPointInner2VlanMemberList, f3PtpTrafficPortFlowPointHistoryPDelayReqsRx=f3PtpTrafficPortFlowPointHistoryPDelayReqsRx, DelayReqMsgRate=DelayReqMsgRate, f3PtpPTPPortAutoAsymmetryCompStatus=f3PtpPTPPortAutoAsymmetryCompStatus, f3PtpL2DynamicRemoteSlaveRowStatus=f3PtpL2DynamicRemoteSlaveRowStatus, f3PtpMCIProtGroupIndex=f3PtpMCIProtGroupIndex)
mibBuilder.exportSymbols("F3-PTP-MIB", f3PtpAccPortFlowPointStatsPDelayRspsRx=f3PtpAccPortFlowPointStatsPDelayRspsRx, f3PtpRemoteSlaveHistoryTable=f3PtpRemoteSlaveHistoryTable, f3PtpPTPClockPhaseRecoveryState=f3PtpPTPClockPhaseRecoveryState, f3PtpTrafficPortFlowPointStatsDelayRspsRx=f3PtpTrafficPortFlowPointStatsDelayRspsRx, f3PtpL3PTPPortHistoryMessageWrongTypeDiscards=f3PtpL3PTPPortHistoryMessageWrongTypeDiscards, f3PtpTSTimeTraceabilityStatus=f3PtpTSTimeTraceabilityStatus, f3PtpAccPortFlowPointStatsFollowupsRx=f3PtpAccPortFlowPointStatsFollowupsRx, f3PtpNetPortFlowPointHistoryMaxPDelayReqResTime=f3PtpNetPortFlowPointHistoryMaxPDelayReqResTime, f3PtpRemoteSlaveHistoryAction=f3PtpRemoteSlaveHistoryAction, f3PtpCompliances=f3PtpCompliances, f3PtpPTPPortAnnounceReceiptTimeout=f3PtpPTPPortAnnounceReceiptTimeout, f3PtpAccPortFlowPointHistoryAvgPDelayReqResTime=f3PtpAccPortFlowPointHistoryAvgPDelayReqResTime, f3PtpL3PTPPortSyncMessageRate=f3PtpL3PTPPortSyncMessageRate, f3PtpBCIndex=f3PtpBCIndex, f3PtpRemoteSlaveStatsSlaveType=f3PtpRemoteSlaveStatsSlaveType, f3PtpPTPClockRowStatus=f3PtpPTPClockRowStatus, f3PtpPTPClockHistoryTime=f3PtpPTPClockHistoryTime, f3PtpAccPortFlowPointThresholdValueHi=f3PtpAccPortFlowPointThresholdValueHi, f3PtpL3PTPPortHistoryAvgDelayReqRate=f3PtpL3PTPPortHistoryAvgDelayReqRate, f3PtpPTPClockServiceUnavailableTime=f3PtpPTPClockServiceUnavailableTime, f3PtpSOOCHistoryUnknownMasterDiscards=f3PtpSOOCHistoryUnknownMasterDiscards, f3PtpSOOCE2eAutoAsymmetryCompStatus=f3PtpSOOCE2eAutoAsymmetryCompStatus, f3PtpMCIStatsValid=f3PtpMCIStatsValid, f3PtpNetPortFlowPointThresholdValueHi=f3PtpNetPortFlowPointThresholdValueHi, f3PtpSOOCMasterPriority=f3PtpSOOCMasterPriority, f3PtpTrafficPortFlowPointRowStatus=f3PtpTrafficPortFlowPointRowStatus, f3PtpNetPortFlowPointStatsMinPDelayRspResTime=f3PtpNetPortFlowPointStatsMinPDelayRspResTime, f3PtpNetPortFlowPointHistoryPDelayRspsTx=f3PtpNetPortFlowPointHistoryPDelayRspsTx, f3PtpTrafficPortFlowPointOuterVlanEtherType=f3PtpTrafficPortFlowPointOuterVlanEtherType, DelayRespMsgRate=DelayRespMsgRate, f3PtpAccPortFlowPointStatsPtpUnknownsRx=f3PtpAccPortFlowPointStatsPtpUnknownsRx, f3PtpNetPortFlowPointHistorySyncsTx=f3PtpNetPortFlowPointHistorySyncsTx, f3PtpNetPortFlowPointThresholdTable=f3PtpNetPortFlowPointThresholdTable, f3PtpSOOCHistoryMinOffsetFromMaster=f3PtpSOOCHistoryMinOffsetFromMaster, f3PtpTSHistoryAction=f3PtpTSHistoryAction, f3PtpRemoteSlaveThresholdValueHi=f3PtpRemoteSlaveThresholdValueHi, f3PtpL3PTPPortThresholdVariable=f3PtpL3PTPPortThresholdVariable, f3PtpProtObjectGroup=f3PtpProtObjectGroup, f3PtpNetPortFlowPointHistorySignalingRx=f3PtpNetPortFlowPointHistorySignalingRx, f3PtpMCIClockClassProfile=f3PtpMCIClockClassProfile, f3PtpPTPPortTimeTraceable=f3PtpPTPPortTimeTraceable, f3PtpNetPortFlowPointStatsAnnouncesRx=f3PtpNetPortFlowPointStatsAnnouncesRx, f3PtpSOOCAlgorithmPtpAware=f3PtpSOOCAlgorithmPtpAware, f3PtpTSHistoryTime=f3PtpTSHistoryTime, f3PtpNetPortFlowPointHistoryTagNoMatchDiscards=f3PtpNetPortFlowPointHistoryTagNoMatchDiscards, f3PtpRemoteSlaveHistoryInvalidTLVTypeDiscards=f3PtpRemoteSlaveHistoryInvalidTLVTypeDiscards, f3PtpTrafficPortFlowPointStatsAnnouncesRx=f3PtpTrafficPortFlowPointStatsAnnouncesRx, f3PtpPTPClockClockQLModeEnabled=f3PtpPTPClockClockQLModeEnabled, f3PtpL3PTPPortTable=f3PtpL3PTPPortTable, f3PtpAccPortFlowPointThresholdVariable=f3PtpAccPortFlowPointThresholdVariable, f3PtpSOOCStatsMaxOffsetFromMaster=f3PtpSOOCStatsMaxOffsetFromMaster, f3PtpPTPClockThresholdVariable=f3PtpPTPClockThresholdVariable, f3PtpSOOCHistoryPDelayRspDiscards=f3PtpSOOCHistoryPDelayRspDiscards, f3PtpTSStatsTotalTimeCR5=f3PtpTSStatsTotalTimeCR5, f3PtpNetPortFlowPointCIRHi=f3PtpNetPortFlowPointCIRHi, f3PtpTSRowStatus=f3PtpTSRowStatus, f3PtpAccPortFlowPointStatsAnnouncesRx=f3PtpAccPortFlowPointStatsAnnouncesRx, f3PtpPTPClockThresholdTable=f3PtpPTPClockThresholdTable, f3PtpNetPortFlowPointHistoryFollowupsTx=f3PtpNetPortFlowPointHistoryFollowupsTx, f3PtpTrafficPortFlowPointStatsMaxDelayReqResTime=f3PtpTrafficPortFlowPointStatsMaxDelayReqResTime, f3PtpTCSecondaryState=f3PtpTCSecondaryState, f3PtpGroups=f3PtpGroups, f3PtpTrafficPortFlowPointHistoryValid=f3PtpTrafficPortFlowPointHistoryValid, f3PtpTrafficPortFlowPointStatsDelayReqsRx=f3PtpTrafficPortFlowPointStatsDelayReqsRx, f3PtpPTPPortHistoryMessageWrongTypeDiscards=f3PtpPTPPortHistoryMessageWrongTypeDiscards, f3PtpPTPClockStatsMaxOffsetFromMaster=f3PtpPTPClockStatsMaxOffsetFromMaster, f3PtpSOOCHistoryMulticastSyncDiscards=f3PtpSOOCHistoryMulticastSyncDiscards, f3PtpSOOCSoocPhaseRecoveryState=f3PtpSOOCSoocPhaseRecoveryState, f3PtpOCSlaveVirtualPortSecondaryState=f3PtpOCSlaveVirtualPortSecondaryState, f3PtpTSStatsAction=f3PtpTSStatsAction, f3PtpTrafficPortFlowPointHistoryPDelayRspsRx=f3PtpTrafficPortFlowPointHistoryPDelayRspsRx, f3PtpPTPPortPortState=f3PtpPTPPortPortState, f3PtpAccPortFlowPointHistoryPDelayRspFollowupsTx=f3PtpAccPortFlowPointHistoryPDelayRspFollowupsTx, f3PtpMasterVirtualPortSecondaryState=f3PtpMasterVirtualPortSecondaryState, f3PtpStaticRemoteSlaveOperationalState=f3PtpStaticRemoteSlaveOperationalState, f3PtpOCSlaveVirtualPortFlowPoint=f3PtpOCSlaveVirtualPortFlowPoint, f3PtpSOOCRecentSyncPathDelay=f3PtpSOOCRecentSyncPathDelay, f3PtpPTPPortPeerClockClass=f3PtpPTPPortPeerClockClass, f3PtpSOOCHistoryValid=f3PtpSOOCHistoryValid, f3PtpAccPortFlowPointRefConnectGuardFlow=f3PtpAccPortFlowPointRefConnectGuardFlow, ClockRecoveryState=ClockRecoveryState, f3PtpL3PTPPortPtpFlowPointEid=f3PtpL3PTPPortPtpFlowPointEid, f3PtpNetPortFlowPointStatsAvgDelayReqResTime=f3PtpNetPortFlowPointStatsAvgDelayReqResTime, f3PtpTSThresholdIndex=f3PtpTSThresholdIndex, f3PtpPTPPortStatsMinMeanPathDelay=f3PtpPTPPortStatsMinMeanPathDelay, f3PtpAccPortFlowPointHistoryPtpUnknownsRx=f3PtpAccPortFlowPointHistoryPtpUnknownsRx, f3PtpOCSlaveVirtualPortAdminState=f3PtpOCSlaveVirtualPortAdminState, f3PtpMCIStatsSyncCancelledEvents=f3PtpMCIStatsSyncCancelledEvents, f3PtpSOOCHistoryMaxSyncPDV=f3PtpSOOCHistoryMaxSyncPDV, f3PtpTrafficPortFlowPointHistoryMaxPDelayRspResTime=f3PtpTrafficPortFlowPointHistoryMaxPDelayRspResTime, f3PtpSOOCStatsIndex=f3PtpSOOCStatsIndex, f3PtpTrafficPortFlowPointStatsIntervalType=f3PtpTrafficPortFlowPointStatsIntervalType, f3PtpL3PTPPortCrossingAlert=f3PtpL3PTPPortCrossingAlert, f3PtpMCIProtGroupStorageType=f3PtpMCIProtGroupStorageType, f3PtpAccPortFlowPointThresholdValueLo=f3PtpAccPortFlowPointThresholdValueLo, f3PtpMCIProtGroupRowStatus=f3PtpMCIProtGroupRowStatus, f3PtpConformance=f3PtpConformance, f3PtpSOOCCurrentOffsetFromMaster=f3PtpSOOCCurrentOffsetFromMaster, f3PtpMCIIpProtocol=f3PtpMCIIpProtocol, f3PtpStaticRemoteSlaveRowStatus=f3PtpStaticRemoteSlaveRowStatus, f3PtpEthernetAccPortExtTable=f3PtpEthernetAccPortExtTable, f3PtpDynamicRemoteSlaveNegSyncLeaseDur=f3PtpDynamicRemoteSlaveNegSyncLeaseDur, f3PtpPTPPortSecondaryState=f3PtpPTPPortSecondaryState, f3PtpSOOCTable=f3PtpSOOCTable, f3PtpTSStatusChangeTrap=f3PtpTSStatusChangeTrap, f3PtpNetPortFlowPointHistoryPtpUnknownsTx=f3PtpNetPortFlowPointHistoryPtpUnknownsTx, f3PtpNetPortFlowPointStatsPDelayReqsRx=f3PtpNetPortFlowPointStatsPDelayReqsRx, f3PtpPTPClockTimeInaccuracy=f3PtpPTPClockTimeInaccuracy, f3PtpNetPortFlowPointInner1UntaggedEnabled=f3PtpNetPortFlowPointInner1UntaggedEnabled, f3PtpAccPortFlowPointThresholdIndex=f3PtpAccPortFlowPointThresholdIndex, f3PtpMasterClockTimeScale=f3PtpMasterClockTimeScale, f3PtpNetPortFlowPointInner2UntaggedEnabled=f3PtpNetPortFlowPointInner2UntaggedEnabled, f3PtpAccPortFlowPointStatsSignalingRx=f3PtpAccPortFlowPointStatsSignalingRx, f3PtpAccPortFlowPointHistoryAnnouncesRx=f3PtpAccPortFlowPointHistoryAnnouncesRx, f3PtpDynamicRemoteSlaveAlias=f3PtpDynamicRemoteSlaveAlias, f3PtpBCStatusChangeTrap=f3PtpBCStatusChangeTrap, f3PtpBCStorageType=f3PtpBCStorageType, f3PtpAccPortFlowPointType=f3PtpAccPortFlowPointType, f3PtpTSStatsValid=f3PtpTSStatsValid, f3PtpMasterClockPTPProfile=f3PtpMasterClockPTPProfile, f3PtpPTPClockHistoryMinSyncPathDelay=f3PtpPTPClockHistoryMinSyncPathDelay, f3PtpL3PTPPortIpV6AddrPrefixLength=f3PtpL3PTPPortIpV6AddrPrefixLength, f3PtpPTPPortTable=f3PtpPTPPortTable, f3PtpPTPPortHistoryAvgSyncRate=f3PtpPTPPortHistoryAvgSyncRate, f3PtpSOOCMasterRequestUnicastRestartTimer=f3PtpSOOCMasterRequestUnicastRestartTimer, f3PtpNetPortFlowPointInner2VlanEtherType=f3PtpNetPortFlowPointInner2VlanEtherType, f3PtpOCSlaveVirtualPortEntry=f3PtpOCSlaveVirtualPortEntry, PtpPortState=PtpPortState, f3PtpOCSlaveVirtualPortStorageType=f3PtpOCSlaveVirtualPortStorageType, f3PtpBCAlias=f3PtpBCAlias, f3PtpPTPClockHistoryMaxOffsetFromMaster=f3PtpPTPClockHistoryMaxOffsetFromMaster, f3PtpSOOCMasterAnnounceMsgReceiptTimeout=f3PtpSOOCMasterAnnounceMsgReceiptTimeout, f3PtpL3PTPPortStatsMessageWrongTypeDiscards=f3PtpL3PTPPortStatsMessageWrongTypeDiscards, f3PtpNetPortFlowPointOuterUntaggedEnabled=f3PtpNetPortFlowPointOuterUntaggedEnabled, f3PtpTrafficPortFlowPointStatsAction=f3PtpTrafficPortFlowPointStatsAction, f3PtpTrafficPortFlowPointStatsTagNoMatchDiscards=f3PtpTrafficPortFlowPointStatsTagNoMatchDiscards, f3PtpTrafficPortFlowPointStatsFollowupsRx=f3PtpTrafficPortFlowPointStatsFollowupsRx, f3PtpL3PTPPortHistoryAvgSyncRate=f3PtpL3PTPPortHistoryAvgSyncRate, f3PtpSOOCStatsAvgFwdFlowWeight=f3PtpSOOCStatsAvgFwdFlowWeight, f3PtpNetPortFlowPointType=f3PtpNetPortFlowPointType, f3PtpMasterClockStorageType=f3PtpMasterClockStorageType, f3PtpL3PTPPortIpProtocol=f3PtpL3PTPPortIpProtocol, f3PtpSOOCRowStatus=f3PtpSOOCRowStatus, f3PtpMCIMaxDelayRespMsgRate=f3PtpMCIMaxDelayRespMsgRate, f3PtpRemoteSlaveStatsAnnounceMsgsGen=f3PtpRemoteSlaveStatsAnnounceMsgsGen, f3PtpTSTimeLastCRScore=f3PtpTSTimeLastCRScore, f3PtpTrafficPortFlowPointThresholdIndex=f3PtpTrafficPortFlowPointThresholdIndex, f3PtpRemoteSlaveStatsDelayReqMsgsDropped=f3PtpRemoteSlaveStatsDelayReqMsgsDropped, PTPTransport=PTPTransport, f3PtpMasterClockClockClass=f3PtpMasterClockClockClass, f3PtpPTPClockHistoryIndex=f3PtpPTPClockHistoryIndex, f3PtpSOOCMinimumExpectedClockClass=f3PtpSOOCMinimumExpectedClockClass, f3PtpSOOCHistoryMaxSyncPathDelay=f3PtpSOOCHistoryMaxSyncPathDelay, f3PtpMasterClockServiceUnavailableTime=f3PtpMasterClockServiceUnavailableTime, f3PtpTrafficPortFlowPointInner2UntaggedEnabled=f3PtpTrafficPortFlowPointInner2UntaggedEnabled, f3PtpAccPortFlowPointOuterVlanEtherType=f3PtpAccPortFlowPointOuterVlanEtherType, f3PtpTSCurrentCRScore=f3PtpTSCurrentCRScore, f3PtpAccPortFlowPointCIRLo=f3PtpAccPortFlowPointCIRLo, f3PtpStaticRemoteSlaveIndex=f3PtpStaticRemoteSlaveIndex, f3PtpL3PTPPortHistoryMessagesWrongLengthDiscards=f3PtpL3PTPPortHistoryMessagesWrongLengthDiscards, f3PtpStaticRemoteSlaveNegAnnounceLeaseDur=f3PtpStaticRemoteSlaveNegAnnounceLeaseDur, f3PtpPTPClockTable=f3PtpPTPClockTable, f3PtpSOOCStatsMulticastAnnounceDiscards=f3PtpSOOCStatsMulticastAnnounceDiscards, f3PtpPTPPortThresholdInterval=f3PtpPTPPortThresholdInterval, f3PtpStatusChangeNotifications=f3PtpStatusChangeNotifications, f3PtpPTPPortStatsTable=f3PtpPTPPortStatsTable, f3PtpSOOCSlaveIpV4Address=f3PtpSOOCSlaveIpV4Address, f3PtpAccPortFlowPointStatsAnnouncesTx=f3PtpAccPortFlowPointStatsAnnouncesTx, f3PtpTrafficPortFlowPointAlias=f3PtpTrafficPortFlowPointAlias, f3PtpAccPortFlowPointStatsMaxDelayReqResTime=f3PtpAccPortFlowPointStatsMaxDelayReqResTime, f3PtpNetPortFlowPointStatsAvgPDelayRspResTime=f3PtpNetPortFlowPointStatsAvgPDelayRspResTime, f3PtpSOOCStorageType=f3PtpSOOCStorageType, f3PtpTrafficPortFlowPointHistoryAnnouncesTx=f3PtpTrafficPortFlowPointHistoryAnnouncesTx, f3PtpPTPPortStatsMinOffsetFromMaster=f3PtpPTPPortStatsMinOffsetFromMaster, f3PtpMCIAnnounceExtTLVEnable=f3PtpMCIAnnounceExtTLVEnable, f3PtpSOOCStatsAction=f3PtpSOOCStatsAction, f3PtpMasterClockActiveTimeRef=f3PtpMasterClockActiveTimeRef, f3PtpL3PTPPortRequestUnicastTimeout=f3PtpL3PTPPortRequestUnicastTimeout, f3PtpSOOCStatsFollowupDiscards=f3PtpSOOCStatsFollowupDiscards, f3PtpOCSlaveVirtualPortAlias=f3PtpOCSlaveVirtualPortAlias, f3PtpPTPPortStatsMinSyncPathDelay=f3PtpPTPPortStatsMinSyncPathDelay, f3PtpPTPPortIsProbingSlave=f3PtpPTPPortIsProbingSlave, f3PtpMCIHistoryDelayRspDeniedEvents=f3PtpMCIHistoryDelayRspDeniedEvents, f3PtpNetPortFlowPointStorageType=f3PtpNetPortFlowPointStorageType, f3PtpL3PTPPortStatsAvgDelayRespRate=f3PtpL3PTPPortStatsAvgDelayRespRate, f3PtpOCSlaveVirtualPortIndex=f3PtpOCSlaveVirtualPortIndex, f3PtpPTPPortDelayAsymmetry=f3PtpPTPPortDelayAsymmetry, f3PtpMCIThresholdIndex=f3PtpMCIThresholdIndex, f3PtpTrafficPortFlowPointHistoryMinDelayReqResTime=f3PtpTrafficPortFlowPointHistoryMinDelayReqResTime, f3PtpTrafficPortFlowPointSecondaryState=f3PtpTrafficPortFlowPointSecondaryState, f3PtpSOOCLastReceivedSyncMsg=f3PtpSOOCLastReceivedSyncMsg, f3PtpPTPClockLocalPriority=f3PtpPTPClockLocalPriority, f3PtpPTPPortHistoryAction=f3PtpPTPPortHistoryAction, f3PtpTrafficPortFlowPointHistoryPDelayRspsTx=f3PtpTrafficPortFlowPointHistoryPDelayRspsTx, f3PtpPTPPortThresholdValueHi=f3PtpPTPPortThresholdValueHi, f3PtpEthernetAccPortExtEntry=f3PtpEthernetAccPortExtEntry, f3PtpNetPortFlowPointHistoryEntry=f3PtpNetPortFlowPointHistoryEntry, f3PtpPerfNotifGroup=f3PtpPerfNotifGroup, f3PtpTSClockExpectedQL=f3PtpTSClockExpectedQL, f3PtpNetPortFlowPointStatsDelayReqsTx=f3PtpNetPortFlowPointStatsDelayReqsTx, f3PtpMasterClockPriority2=f3PtpMasterClockPriority2, f3PtpSOOCHistoryMinSyncPDV=f3PtpSOOCHistoryMinSyncPDV, f3PtpTrafficPortFlowPointStatsAvgDelayReqResTime=f3PtpTrafficPortFlowPointStatsAvgDelayReqResTime, f3PtpPTPPortLastRcvdAnnounceMsg=f3PtpPTPPortLastRcvdAnnounceMsg, f3PtpRemoteSlaveHistoryInvalidTLVLenDiscards=f3PtpRemoteSlaveHistoryInvalidTLVLenDiscards, f3PtpStaticRemoteSlaveAnnounceMsgRate=f3PtpStaticRemoteSlaveAnnounceMsgRate, f3PtpNetPortFlowPointStatsFollowupsTx=f3PtpNetPortFlowPointStatsFollowupsTx, f3PtpNetPortFlowPointStatsDelayRspsRx=f3PtpNetPortFlowPointStatsDelayRspsRx, f3PtpPTPClockTimeSinceTimeTraceabilityChanged=f3PtpPTPClockTimeSinceTimeTraceabilityChanged, f3PtpSOOCHistoryAvgMeanPathDelay=f3PtpSOOCHistoryAvgMeanPathDelay, f3PtpRemoteSlaveStatsDelayRspMsgsGen=f3PtpRemoteSlaveStatsDelayRspMsgsGen, f3PtpTrafficPortFlowPointHistoryAction=f3PtpTrafficPortFlowPointHistoryAction, f3PtpTSCurrentPRScore=f3PtpTSCurrentPRScore, f3PtpL3PTPPortMasterIpV4Address=f3PtpL3PTPPortMasterIpV4Address, f3PtpNetPortFlowPointHistoryMgmtFramesRx=f3PtpNetPortFlowPointHistoryMgmtFramesRx, f3PtpNetPortFlowPointStatsAvgPDelayReqResTime=f3PtpNetPortFlowPointStatsAvgPDelayReqResTime, f3PtpTrafficPortFlowPointHistoryTime=f3PtpTrafficPortFlowPointHistoryTime, f3PtpPTPPortStatsMismatchDomainDiscards=f3PtpPTPPortStatsMismatchDomainDiscards, f3PtpL3PTPPortThresholdMonValue=f3PtpL3PTPPortThresholdMonValue, f3PtpMCIMaxAnnounceMsgRate=f3PtpMCIMaxAnnounceMsgRate, ScaledNanoseconds=ScaledNanoseconds, f3PtpSOOCSlaveIpV4SubnetMask=f3PtpSOOCSlaveIpV4SubnetMask, f3PtpNetPortFlowPointThresholdInterval=f3PtpNetPortFlowPointThresholdInterval, f3PtpAccPortFlowPointStatsPDelayRspFollowupsRx=f3PtpAccPortFlowPointStatsPDelayRspFollowupsRx, f3PtpTSDomainNumber=f3PtpTSDomainNumber, f3PtpAccPortFlowPointHistoryTime=f3PtpAccPortFlowPointHistoryTime, f3PtpMCIStatsIndex=f3PtpMCIStatsIndex, f3PtpPTPClockStatsIndex=f3PtpPTPClockStatsIndex, f3PtpTrafficPortFlowPointHistoryPDelayReqsTx=f3PtpTrafficPortFlowPointHistoryPDelayReqsTx, f3PtpAccPortFlowPointEntry=f3PtpAccPortFlowPointEntry, f3PtpSOOCGateway=f3PtpSOOCGateway, f3PtpNetPortFlowPointHistoryPDelayReqsTx=f3PtpNetPortFlowPointHistoryPDelayReqsTx, f3PtpL3PTPPortStatsMsgMiscDiscards=f3PtpL3PTPPortStatsMsgMiscDiscards, f3PtpTCDelayMechanism=f3PtpTCDelayMechanism, f3PtpTCClockIdentity=f3PtpTCClockIdentity, f3PtpAccPortFlowPointStatsTagNoMatchDiscards=f3PtpAccPortFlowPointStatsTagNoMatchDiscards, f3PtpTrafficPortFlowPointStatsPtpUnknownsTx=f3PtpTrafficPortFlowPointStatsPtpUnknownsTx, f3PtpMCIEntry=f3PtpMCIEntry, f3PtpNetPortFlowPointBufferSize=f3PtpNetPortFlowPointBufferSize, f3PtpL3PTPPortPortState=f3PtpL3PTPPortPortState, f3PtpTSClockSyncEEnabled=f3PtpTSClockSyncEEnabled, f3PtpTSClockQLModeEnabled=f3PtpTSClockQLModeEnabled, f3PtpMCIServiceFlow=f3PtpMCIServiceFlow, f3PtpAccPortFlowPointHistoryMaxSyncResTime=f3PtpAccPortFlowPointHistoryMaxSyncResTime, f3PtpAccPortFlowPointStatsPDelayRspFollowupsTx=f3PtpAccPortFlowPointStatsPDelayRspFollowupsTx, f3PtpPTPPortStatsAvgDelayReqRate=f3PtpPTPPortStatsAvgDelayReqRate, f3PtpPTPClockClockIdentity=f3PtpPTPClockClockIdentity, f3PtpAccPortFlowPointStatsFollowupsTx=f3PtpAccPortFlowPointStatsFollowupsTx, f3PtpSOOCRecentSyncPDV=f3PtpSOOCRecentSyncPDV, f3PtpAccPortFlowPointHistorySignalingTx=f3PtpAccPortFlowPointHistorySignalingTx, f3PtpOCSlaveVirtualPortTable=f3PtpOCSlaveVirtualPortTable, f3PtpL3PTPPortDelayReqRespMsgRate=f3PtpL3PTPPortDelayReqRespMsgRate, f3PtpDynamicRemoteSlaveOperationalState=f3PtpDynamicRemoteSlaveOperationalState, f3PtpSOOCLastReceivedDelayRspMsg=f3PtpSOOCLastReceivedDelayRspMsg)
mibBuilder.exportSymbols("F3-PTP-MIB", f3PtpStaticRemoteSlaveTimeCreated=f3PtpStaticRemoteSlaveTimeCreated, f3PtpSOOCThresholdVariable=f3PtpSOOCThresholdVariable, f3PtpAccPortFlowPointStatsMgmtFramesRx=f3PtpAccPortFlowPointStatsMgmtFramesRx, f3PtpTSClockAssumedQL=f3PtpTSClockAssumedQL, f3PtpMCIStorageType=f3PtpMCIStorageType, f3PtpPTPPortHistoryMismatchDomainDiscards=f3PtpPTPPortHistoryMismatchDomainDiscards, f3PtpPTPPortHistoryAvgSyncPathDelay=f3PtpPTPPortHistoryAvgSyncPathDelay, f3PtpPTPClockDomainNumber=f3PtpPTPClockDomainNumber, f3PtpPTPClockHistoryAvgMeanPathDelay=f3PtpPTPClockHistoryAvgMeanPathDelay, f3PtpAccPortFlowPointEIRLo=f3PtpAccPortFlowPointEIRLo, f3PtpPTPPortLastRcvdSyncMsg=f3PtpPTPPortLastRcvdSyncMsg, f3PtpNetPortFlowPointStatsFollowupsRx=f3PtpNetPortFlowPointStatsFollowupsRx, f3PtpAccPortFlowPointHistoryDestMciNoMatchDiscards=f3PtpAccPortFlowPointHistoryDestMciNoMatchDiscards, f3PtpSOOCHistoryMaxFwdFlowWeight=f3PtpSOOCHistoryMaxFwdFlowWeight, f3PtpL3PTPPortStatsTable=f3PtpL3PTPPortStatsTable, f3PtpSOOCLastReceivedAnnounceMsg=f3PtpSOOCLastReceivedAnnounceMsg, f3PtpTrafficPortFlowPointEntry=f3PtpTrafficPortFlowPointEntry, f3PtpTCVirtualPortIndex=f3PtpTCVirtualPortIndex, f3PtpPTPPortThresholdVariable=f3PtpPTPPortThresholdVariable, f3PtpTrafficPortFlowPointHistoryIndex=f3PtpTrafficPortFlowPointHistoryIndex, f3PtpL3PTPPortHistoryAvgAnnounceRate=f3PtpL3PTPPortHistoryAvgAnnounceRate, f3PtpPTPPortmAnnounceMsgRate=f3PtpPTPPortmAnnounceMsgRate, f3PtpPTPClockClockAccuracy=f3PtpPTPClockClockAccuracy, f3PtpL3PTPPortStatsValid=f3PtpL3PTPPortStatsValid, f3PtpL3PTPPortStorageType=f3PtpL3PTPPortStorageType, f3PtpNetPortFlowPointStatsMgmtFramesTx=f3PtpNetPortFlowPointStatsMgmtFramesTx, f3PtpMCIIpPriority=f3PtpMCIIpPriority, f3PtpL3PTPPortAutoAsymmetryCompStatus=f3PtpL3PTPPortAutoAsymmetryCompStatus, f3PtpMCIProtGroupEntry=f3PtpMCIProtGroupEntry, f3PtpTrafficPortFlowPointHistoryDelayRspsTx=f3PtpTrafficPortFlowPointHistoryDelayRspsTx, f3PtpRemoteSlaveHistoryTime=f3PtpRemoteSlaveHistoryTime, f3PtpRemoteSlaveHistoryTimesSyncLeaseExp=f3PtpRemoteSlaveHistoryTimesSyncLeaseExp, f3PtpAccPortFlowPointThresholdTable=f3PtpAccPortFlowPointThresholdTable, f3PtpTrafficPortFlowPointStatsSignalingRx=f3PtpTrafficPortFlowPointStatsSignalingRx, f3PtpL3PTPPortHistoryAction=f3PtpL3PTPPortHistoryAction, f3PtpTrafficPortFlowPointHistorySignalingRx=f3PtpTrafficPortFlowPointHistorySignalingRx, f3PtpSOOCSoocClockClass=f3PtpSOOCSoocClockClass, f3PtpL3PTPPortThresholdIndex=f3PtpL3PTPPortThresholdIndex, f3PtpNetPortFlowPointAdminState=f3PtpNetPortFlowPointAdminState, f3PtpEthernetTrafficPortDelayAsymmetry=f3PtpEthernetTrafficPortDelayAsymmetry, f3PtpAccPortFlowPointStatsMinPDelayRspResTime=f3PtpAccPortFlowPointStatsMinPDelayRspResTime, f3PtpAccPortFlowPointOperationalState=f3PtpAccPortFlowPointOperationalState, f3PtpTCVirtualPortFlowPoint=f3PtpTCVirtualPortFlowPoint, f3PtpMCIMasterIpV6AddrPrefixLength=f3PtpMCIMasterIpV6AddrPrefixLength, f3PtpPTPClockRecentSyncPDV=f3PtpPTPClockRecentSyncPDV, f3PtpMCIThresholdValueLo=f3PtpMCIThresholdValueLo, f3PtpTrafficPortFlowPointHistoryAvgPDelayRspResTime=f3PtpTrafficPortFlowPointHistoryAvgPDelayRspResTime, f3PtpTrafficPortFlowPointStorageType=f3PtpTrafficPortFlowPointStorageType, f3PtpStaticRemoteSlaveDelayRspDurRemTime=f3PtpStaticRemoteSlaveDelayRspDurRemTime, f3PtpTCAlias=f3PtpTCAlias, f3PtpNetPortFlowPointClock=f3PtpNetPortFlowPointClock, f3PtpDynamicRemoteSlaveSyncDurRemTime=f3PtpDynamicRemoteSlaveSyncDurRemTime, f3PtpTrafficPortFlowPointStatsMaxPDelayRspResTime=f3PtpTrafficPortFlowPointStatsMaxPDelayRspResTime, f3PtpPTPClockHistoryEntry=f3PtpPTPClockHistoryEntry, f3PtpL3PTPPortBmcaDecisionCode=f3PtpL3PTPPortBmcaDecisionCode, PTPProtectionState=PTPProtectionState, f3PtpTrafficPortFlowPointHistoryMinPDelayRspResTime=f3PtpTrafficPortFlowPointHistoryMinPDelayRspResTime, f3PtpDynamicRemoteSlaveEntry=f3PtpDynamicRemoteSlaveEntry, f3PtpMCIProtGroupActiveMember=f3PtpMCIProtGroupActiveMember, f3PtpNetPortFlowPointHistoryPDelayRspFollowupsRx=f3PtpNetPortFlowPointHistoryPDelayRspFollowupsRx, f3PtpPTPPortHistoryAvgMeanPathDelay=f3PtpPTPPortHistoryAvgMeanPathDelay, f3PtpPTPClockHistoryAvgSyncPathDelay=f3PtpPTPClockHistoryAvgSyncPathDelay, f3PtpTrafficPortFlowPointStatsSignalingTx=f3PtpTrafficPortFlowPointStatsSignalingTx, f3PtpL3PTPPortStatsAvgOffsetFromMaster=f3PtpL3PTPPortStatsAvgOffsetFromMaster, f3PtpPTPClockMaxStepRemoved=f3PtpPTPClockMaxStepRemoved, f3PtpEthernetTrafficPortExtTable=f3PtpEthernetTrafficPortExtTable, f3PtpTrafficPortFlowPointEIRHi=f3PtpTrafficPortFlowPointEIRHi, f3PtpPTPClockActiveGrantsDelayRequestService=f3PtpPTPClockActiveGrantsDelayRequestService, f3PtpSOOCStatsMaxMeanPathDelay=f3PtpSOOCStatsMaxMeanPathDelay, f3PtpAccPortFlowPointStatsSyncsRx=f3PtpAccPortFlowPointStatsSyncsRx, f3PtpNetPortFlowPointHistoryDelayReqsTx=f3PtpNetPortFlowPointHistoryDelayReqsTx, f3PtpSOOCStatsMinRevFlowWeight=f3PtpSOOCStatsMinRevFlowWeight, f3PtpPTPPortStatsAvgOffsetFromMaster=f3PtpPTPPortStatsAvgOffsetFromMaster, f3PtpSOOCHistoryMgmtMsgsDiscarded=f3PtpSOOCHistoryMgmtMsgsDiscarded, f3PtpRemoteSlaveStatsInvalidTLVLenDiscards=f3PtpRemoteSlaveStatsInvalidTLVLenDiscards, f3PtpPTPClockPriority1=f3PtpPTPClockPriority1, f3PtpTrafficPortFlowPointHistoryMaxPDelayReqResTime=f3PtpTrafficPortFlowPointHistoryMaxPDelayReqResTime, f3PtpPTPClockActiveGrantsAnnounceService=f3PtpPTPClockActiveGrantsAnnounceService, f3PtpTrafficPortFlowPointInner1VlanEtherType=f3PtpTrafficPortFlowPointInner1VlanEtherType, f3PtpTSCurrentTOD=f3PtpTSCurrentTOD, f3PtpTSCrossingAlert=f3PtpTSCrossingAlert, f3PtpRemoteSlaveHistoryTimesDelayRspLeaseExp=f3PtpRemoteSlaveHistoryTimesDelayRspLeaseExp, f3PtpPTPPortHistoryEntry=f3PtpPTPPortHistoryEntry, f3PtpAccPortFlowPointStatsDelayRspsTx=f3PtpAccPortFlowPointStatsDelayRspsTx, f3PtpDynamicRemoteSlaveSyncMsgRate=f3PtpDynamicRemoteSlaveSyncMsgRate, f3PtpNetPortFlowPointOperationalState=f3PtpNetPortFlowPointOperationalState, f3PtpAccPortFlowPointStorageType=f3PtpAccPortFlowPointStorageType, f3PtpPTPPortStatsUnknownMasterDiscards=f3PtpPTPPortStatsUnknownMasterDiscards, f3PtpRemoteSlaveHistoryAnnounceMsgsGen=f3PtpRemoteSlaveHistoryAnnounceMsgsGen, f3PtpRemoteSlaveThresholdIndex=f3PtpRemoteSlaveThresholdIndex, f3PtpAccPortFlowPointHistoryDelayRspsRx=f3PtpAccPortFlowPointHistoryDelayRspsRx, f3PtpAccPortFlowPointHistoryPDelayRspsTx=f3PtpAccPortFlowPointHistoryPDelayRspsTx, f3PtpPTPPortHistoryAvgAnnounceRate=f3PtpPTPPortHistoryAvgAnnounceRate, f3PtpTrafficPortFlowPointStatsAnnouncesTx=f3PtpTrafficPortFlowPointStatsAnnouncesTx, BMCARole=BMCARole, f3PtpNetPortFlowPointHistoryFollowupsRx=f3PtpNetPortFlowPointHistoryFollowupsRx, f3PtpPTPPortDelayRespTimeout=f3PtpPTPPortDelayRespTimeout, f3PtpL3PTPPortIpPriority=f3PtpL3PTPPortIpPriority, f3PtpPTPPortEntry=f3PtpPTPPortEntry, f3PtpNetPortFlowPointStatsMaxPDelayRspResTime=f3PtpNetPortFlowPointStatsMaxPDelayRspResTime, f3PtpAccPortFlowPointStatsDelayRspsRx=f3PtpAccPortFlowPointStatsDelayRspsRx, f3PtpMCIAlias=f3PtpMCIAlias, f3PtpNetPortFlowPointStatsValid=f3PtpNetPortFlowPointStatsValid, AnnounceMessageRate=AnnounceMessageRate, f3PtpNetPortFlowPointHistoryMinPDelayReqResTime=f3PtpNetPortFlowPointHistoryMinPDelayReqResTime, f3PtpSOOCStatsInvalidTLVLenDiscards=f3PtpSOOCStatsInvalidTLVLenDiscards, f3PtpPTPPortThresholdMonValue=f3PtpPTPPortThresholdMonValue, f3PtpSOOCHistoryInvalidMsgLenDiscards=f3PtpSOOCHistoryInvalidMsgLenDiscards, f3PtpPTPClockTimeSource=f3PtpPTPClockTimeSource, f3PtpPTPPortHistoryAvgDelayReqRate=f3PtpPTPPortHistoryAvgDelayReqRate, f3PtpMCIGateway=f3PtpMCIGateway, f3PtpPTPClockOperationalState=f3PtpPTPClockOperationalState, f3PtpPTPClockSyncEid=f3PtpPTPClockSyncEid, f3PtpStaticRemoteSlaveAlias=f3PtpStaticRemoteSlaveAlias, f3PtpAccPortFlowPointStatsMgmtFramesTx=f3PtpAccPortFlowPointStatsMgmtFramesTx, f3PtpAccPortFlowPointSecondaryState=f3PtpAccPortFlowPointSecondaryState, f3PtpMCIHistorySyncDeniedEvents=f3PtpMCIHistorySyncDeniedEvents, f3PtpL3PTPPortStatsAvgSyncRate=f3PtpL3PTPPortStatsAvgSyncRate, f3PtpPTPPortMasterClockType=f3PtpPTPPortMasterClockType, f3PtpL3PTPPortSecondaryState=f3PtpL3PTPPortSecondaryState, f3PtpTSAlias=f3PtpTSAlias, f3PtpPTPPortHistoryTime=f3PtpPTPPortHistoryTime, f3PtpPTPClockStatsMaxMeanPathDelay=f3PtpPTPClockStatsMaxMeanPathDelay, f3PtpMCIStatsDelayRspCancelledEvents=f3PtpMCIStatsDelayRspCancelledEvents, f3PtpPTPClockThresholdIndex=f3PtpPTPClockThresholdIndex, f3PtpAccPortFlowPointAlias=f3PtpAccPortFlowPointAlias, f3PtpSOOCHistoryMinRevFlowWeight=f3PtpSOOCHistoryMinRevFlowWeight, f3PtpSOOCStatsTable=f3PtpSOOCStatsTable, f3PtpRemoteSlaveStatsSignallingMsgsGen=f3PtpRemoteSlaveStatsSignallingMsgsGen, f3PtpPerformanceNotifications=f3PtpPerformanceNotifications, f3PtpStaticRemoteSlaveEntry=f3PtpStaticRemoteSlaveEntry, f3PtpL2DynamicRemoteSlaveIndex=f3PtpL2DynamicRemoteSlaveIndex, f3PtpPTPClockCrossingAlert=f3PtpPTPClockCrossingAlert, f3PtpAccPortFlowPointStatsIndex=f3PtpAccPortFlowPointStatsIndex, f3PtpNetPortFlowPointOuterVlanEtherType=f3PtpNetPortFlowPointOuterVlanEtherType, f3PtpMCIStatsPtpDiscards=f3PtpMCIStatsPtpDiscards, f3PtpAccPortFlowPointStatsTable=f3PtpAccPortFlowPointStatsTable, f3PtpNetPortFlowPointStatsMinPDelayReqResTime=f3PtpNetPortFlowPointStatsMinPDelayReqResTime, f3PtpPTPPortHistoryMinSyncPathDelay=f3PtpPTPPortHistoryMinSyncPathDelay, f3PtpMCIThresholdVariable=f3PtpMCIThresholdVariable, f3PtpPTPPortAlias=f3PtpPTPPortAlias, f3PtpSOOCHistoryMulticastAnnounceDiscards=f3PtpSOOCHistoryMulticastAnnounceDiscards, f3PtpSOOCMasterIpV6Address=f3PtpSOOCMasterIpV6Address, f3PtpL3PTPPortStatsAvgAnnounceRate=f3PtpL3PTPPortStatsAvgAnnounceRate, f3PtpStaticRemoteSlaveSyncDurRemTime=f3PtpStaticRemoteSlaveSyncDurRemTime, f3PtpNetPortFlowPointCOS=f3PtpNetPortFlowPointCOS, f3PtpTSClockRecoveryState=f3PtpTSClockRecoveryState, MasterClockType=MasterClockType, f3PtpTSPhaseRecoveryState=f3PtpTSPhaseRecoveryState, f3PtpMCIHistoryValid=f3PtpMCIHistoryValid, f3PtpTrafficPortFlowPointThresholdEntry=f3PtpTrafficPortFlowPointThresholdEntry, f3PtpL3PTPPortHistoryAvgOffsetFromMaster=f3PtpL3PTPPortHistoryAvgOffsetFromMaster, f3PtpBCOperationalState=f3PtpBCOperationalState, f3PtpMCIStatsAnnounceDeniedEvents=f3PtpMCIStatsAnnounceDeniedEvents, f3PtpAccPortFlowPointStatsMaxPDelayReqResTime=f3PtpAccPortFlowPointStatsMaxPDelayReqResTime, f3PtpTrafficPortFlowPointHistoryAnnouncesRx=f3PtpTrafficPortFlowPointHistoryAnnouncesRx, f3PtpMCIProtMemberRowStatus=f3PtpMCIProtMemberRowStatus, f3PtpBoundaryClockObjectGroup=f3PtpBoundaryClockObjectGroup, f3PtpBCPhysicalEntityIndex=f3PtpBCPhysicalEntityIndex, f3PtpStaticRemoteSlaveIpV4Address=f3PtpStaticRemoteSlaveIpV4Address, f3PtpTSHistoryValid=f3PtpTSHistoryValid, f3PtpAccPortFlowPointSecureBlockingEnabled=f3PtpAccPortFlowPointSecureBlockingEnabled, f3PtpMCIHistorySyncCancelledEvents=f3PtpMCIHistorySyncCancelledEvents, f3PtpSOOCMasterDelayRspReceiptTimeout=f3PtpSOOCMasterDelayRspReceiptTimeout, f3PtpPTPPortRowStatus=f3PtpPTPPortRowStatus, f3PtpNetPortFlowPointStatsDestMciNoMatchDiscards=f3PtpNetPortFlowPointStatsDestMciNoMatchDiscards, f3PtpRemoteSlaveThresholdValueLo=f3PtpRemoteSlaveThresholdValueLo, f3PtpTrafficPortFlowPointHistoryEntry=f3PtpTrafficPortFlowPointHistoryEntry, f3PtpNetPortFlowPointHistorySignalingTx=f3PtpNetPortFlowPointHistorySignalingTx, f3PtpL3PTPPortHistoryMaxOffsetFromMaster=f3PtpL3PTPPortHistoryMaxOffsetFromMaster, f3PtpSOOCThresholdInterval=f3PtpSOOCThresholdInterval, f3PtpTrafficPortFlowPointInner1UntaggedEnabled=f3PtpTrafficPortFlowPointInner1UntaggedEnabled, f3PtpObjectGroup=f3PtpObjectGroup, f3PtpL3PTPPortStatsAvgMeanPathDelay=f3PtpL3PTPPortStatsAvgMeanPathDelay, f3PtpPTPPortPtpFlowPointEid=f3PtpPTPPortPtpFlowPointEid, f3PtpDynamicRemoteSlaveIndex=f3PtpDynamicRemoteSlaveIndex, f3PtpNetPortFlowPointStatsMinDelayReqResTime=f3PtpNetPortFlowPointStatsMinDelayReqResTime, f3PtpPTPPortSyncMessageRate=f3PtpPTPPortSyncMessageRate, f3PtpMasterClockClockAccuracy=f3PtpMasterClockClockAccuracy, f3PtpRemoteSlaveHistorySignallingMsgsRx=f3PtpRemoteSlaveHistorySignallingMsgsRx, f3PtpPTPPortMinimumExpectedClockClass=f3PtpPTPPortMinimumExpectedClockClass, f3PtpTrafficPortFlowPointAssociatedQueueProfile=f3PtpTrafficPortFlowPointAssociatedQueueProfile, f3PtpTrafficPortFlowPointStatsMaxSyncResTime=f3PtpTrafficPortFlowPointStatsMaxSyncResTime, f3PtpPTPPortHistoryMaxMeanPathDelay=f3PtpPTPPortHistoryMaxMeanPathDelay, f3PtpSOOCHistoryUnknownDomainDiscards=f3PtpSOOCHistoryUnknownDomainDiscards, f3PtpAccPortFlowPointTable=f3PtpAccPortFlowPointTable, f3PtpTrafficPortFlowPointExtEntry=f3PtpTrafficPortFlowPointExtEntry, f3PtpL3PTPPortStatsMinOffsetFromMaster=f3PtpL3PTPPortStatsMinOffsetFromMaster, f3PtpSOOCE2eDelayAsymmetry=f3PtpSOOCE2eDelayAsymmetry, f3PtpPTPClockStatsMaxSyncPathDelay=f3PtpPTPClockStatsMaxSyncPathDelay, f3PtpNetPortFlowPointInner1VlanMemberList=f3PtpNetPortFlowPointInner1VlanMemberList, f3PtpPTPClockPriority2=f3PtpPTPClockPriority2, f3PtpPTPPortStatsAvgAnnounceRate=f3PtpPTPPortStatsAvgAnnounceRate, ToggleValue=ToggleValue, f3PtpAccPortFlowPointSecureState=f3PtpAccPortFlowPointSecureState, f3PtpPTPPortStatsEntry=f3PtpPTPPortStatsEntry, f3PtpPTPClockStatsAvgSyncPathDelay=f3PtpPTPClockStatsAvgSyncPathDelay, f3PtpMasterClockDomainNumber=f3PtpMasterClockDomainNumber, f3PtpRemoteSlaveStatsSyncMsgsGen=f3PtpRemoteSlaveStatsSyncMsgsGen, f3PtpL3PTPPortEntry=f3PtpL3PTPPortEntry, f3PtpMCISecondaryState=f3PtpMCISecondaryState, f3PtpMCIIfName=f3PtpMCIIfName, f3PtpTrafficPortFlowPointStatsValid=f3PtpTrafficPortFlowPointStatsValid, f3PtpTrafficPortFlowPointThresholdMonValue=f3PtpTrafficPortFlowPointThresholdMonValue, f3PtpNetPortFlowPointStatsAnnouncesTx=f3PtpNetPortFlowPointStatsAnnouncesTx, f3PtpTrafficPortFlowPointService=f3PtpTrafficPortFlowPointService, f3PtpPTPPortThresholdTable=f3PtpPTPPortThresholdTable, f3PtpNetPortFlowPointHistoryAvgPDelayReqResTime=f3PtpNetPortFlowPointHistoryAvgPDelayReqResTime, f3PtpPTPClockHistoryMaxMeanPathDelay=f3PtpPTPClockHistoryMaxMeanPathDelay, f3PtpL3PTPPortStatsMinMeanPathDelay=f3PtpL3PTPPortStatsMinMeanPathDelay, f3PtpL3PTPPortHistoryMismatchDomainDiscards=f3PtpL3PTPPortHistoryMismatchDomainDiscards, PTPClockOperMode=PTPClockOperMode, f3PtpPTPClockClockRecoveryState=f3PtpPTPClockClockRecoveryState, f3PtpL3PTPPortRequestUnicastRestartTimer=f3PtpL3PTPPortRequestUnicastRestartTimer, f3PtpPTPPortThresholdIndex=f3PtpPTPPortThresholdIndex, f3PtpTrafficPortFlowPointInner2VlanEtherType=f3PtpTrafficPortFlowPointInner2VlanEtherType, f3PtpAccPortFlowPointStatsAvgPDelayReqResTime=f3PtpAccPortFlowPointStatsAvgPDelayReqResTime, f3PtpTrafficPortFlowPointCIRLo=f3PtpTrafficPortFlowPointCIRLo, f3PtpSOOCStatsMinSyncPathDelay=f3PtpSOOCStatsMinSyncPathDelay, f3PtpSOOCHistoryAvgSyncPathDelay=f3PtpSOOCHistoryAvgSyncPathDelay, f3PtpMCIIpV6Gateway=f3PtpMCIIpV6Gateway, f3PtpStaticRemoteSlaveClockIdentity=f3PtpStaticRemoteSlaveClockIdentity, f3PtpMCIClockType=f3PtpMCIClockType, f3PtpL3PTPPortIpPriorityMapMode=f3PtpL3PTPPortIpPriorityMapMode, f3PtpTrafficPortFlowPointTable=f3PtpTrafficPortFlowPointTable, f3PtpAccPortFlowPointHistoryIndex=f3PtpAccPortFlowPointHistoryIndex, f3PtpMasterClockServiceAvailableTime=f3PtpMasterClockServiceAvailableTime, f3PtpTrafficPortFlowPointHistoryDelayReqsTx=f3PtpTrafficPortFlowPointHistoryDelayReqsTx, f3PtpAccPortFlowPointStatsAvgSyncResTime=f3PtpAccPortFlowPointStatsAvgSyncResTime, f3PtpTSWtrTime=f3PtpTSWtrTime, f3PtpTrafficPortFlowPointHistoryAvgDelayReqResTime=f3PtpTrafficPortFlowPointHistoryAvgDelayReqResTime, f3PtpTSHistoryTotalTimePR4=f3PtpTSHistoryTotalTimePR4, f3PtpDynamicRemoteSlaveIpV6Address=f3PtpDynamicRemoteSlaveIpV6Address, f3PtpTrafficPortFlowPointOuterVlanMemberList=f3PtpTrafficPortFlowPointOuterVlanMemberList, f3PtpTrafficPortFlowPointInner1VlanMemberList=f3PtpTrafficPortFlowPointInner1VlanMemberList, f3PtpNetPortFlowPointHistoryMinSyncResTime=f3PtpNetPortFlowPointHistoryMinSyncResTime, f3PtpSysTimeOfDayClock=f3PtpSysTimeOfDayClock, f3PtpMasterClockActiveGrantsDelayRequestService=f3PtpMasterClockActiveGrantsDelayRequestService, f3PtpAccPortFlowPointInner1VlanEtherType=f3PtpAccPortFlowPointInner1VlanEtherType, f3PtpTSHistoryIndex=f3PtpTSHistoryIndex, f3PtpPTPPortClockClass=f3PtpPTPPortClockClass, f3PtpMasterClockSmpteSystemFrameRateDenominator=f3PtpMasterClockSmpteSystemFrameRateDenominator, f3PtpPTPClockStatsTable=f3PtpPTPClockStatsTable, f3PtpPTPClockStatsIntervalType=f3PtpPTPClockStatsIntervalType, f3PtpEthernetNetPortExtEntry=f3PtpEthernetNetPortExtEntry, f3PtpSOOCHistoryAvgRevFlowWeight=f3PtpSOOCHistoryAvgRevFlowWeight, f3PtpMCIDefaultGatewayControl=f3PtpMCIDefaultGatewayControl, f3PtpSOOCHistoryMinMeanPathDelay=f3PtpSOOCHistoryMinMeanPathDelay, f3PtpRemoteSlaveStatsDelayReqMsgsRx=f3PtpRemoteSlaveStatsDelayReqMsgsRx, f3PtpBCRowStatus=f3PtpBCRowStatus, f3PtpDynamicRemoteSlaveDelayRspDurRemTime=f3PtpDynamicRemoteSlaveDelayRspDurRemTime, f3PtpNetPortFlowPointHistoryPDelayRspsRx=f3PtpNetPortFlowPointHistoryPDelayRspsRx, f3PtpNetPortFlowPointHistoryMgmtFramesTx=f3PtpNetPortFlowPointHistoryMgmtFramesTx, f3PtpTSStatsTotalTimePR4=f3PtpTSStatsTotalTimePR4)
mibBuilder.exportSymbols("F3-PTP-MIB", f3PtpAccPortFlowPointEIRHi=f3PtpAccPortFlowPointEIRHi, f3PtpAccPortFlowPointStatsMaxSyncResTime=f3PtpAccPortFlowPointStatsMaxSyncResTime, f3PtpMCIThresholdInterval=f3PtpMCIThresholdInterval, f3PtpTrafficPortFlowPointStatsDelayReqsTx=f3PtpTrafficPortFlowPointStatsDelayReqsTx, f3PtpMCIPtpRemoteSlaveAgingTimeout=f3PtpMCIPtpRemoteSlaveAgingTimeout, f3PtpStatusChangeNotifGroup=f3PtpStatusChangeNotifGroup, f3PtpBoundaryClockNotifGroup=f3PtpBoundaryClockNotifGroup, f3PtpNetPortFlowPointHistoryDestMciNoMatchDiscards=f3PtpNetPortFlowPointHistoryDestMciNoMatchDiscards, f3PtpAccPortFlowPointStatsSyncsTx=f3PtpAccPortFlowPointStatsSyncsTx, f3PtpAccPortFlowPointRowStatus=f3PtpAccPortFlowPointRowStatus, f3PtpPTPPortDelayAsymmetryComp=f3PtpPTPPortDelayAsymmetryComp, f3PtpStaticRemoteSlaveTable=f3PtpStaticRemoteSlaveTable, f3PtpAccPortFlowPointCOS=f3PtpAccPortFlowPointCOS, f3PtpPTPClockClockSyncEEnabled=f3PtpPTPClockClockSyncEEnabled, f3PtpNetPortFlowPointTable=f3PtpNetPortFlowPointTable, f3PtpPTPClockStatsMinOffsetFromMaster=f3PtpPTPClockStatsMinOffsetFromMaster, f3PtpSOOCSecondaryState=f3PtpSOOCSecondaryState, f3PtpSOOCMasterSyncReceiptTimeout=f3PtpSOOCMasterSyncReceiptTimeout, f3PtpAccPortFlowPointStatsMinPDelayReqResTime=f3PtpAccPortFlowPointStatsMinPDelayReqResTime, f3PtpTSThresholdTable=f3PtpTSThresholdTable, f3PtpSOOCSoocWtr=f3PtpSOOCSoocWtr, f3PtpPTPClockThresholdValueLo=f3PtpPTPClockThresholdValueLo, f3PtpAccPortFlowPointHistoryMinSyncResTime=f3PtpAccPortFlowPointHistoryMinSyncResTime, f3PtpMCIPtpTransportMode=f3PtpMCIPtpTransportMode, f3PtpPTPPortStatsMsgMiscDiscards=f3PtpPTPPortStatsMsgMiscDiscards, f3PtpMasterClockServiceAvailablePercentage=f3PtpMasterClockServiceAvailablePercentage, f3PtpL2DynamicRemoteSlavePortIdentity=f3PtpL2DynamicRemoteSlavePortIdentity, f3PtpMasterClockAlias=f3PtpMasterClockAlias, f3PtpStaticRemoteSlaveNegDelayRspLeaseDur=f3PtpStaticRemoteSlaveNegDelayRspLeaseDur, f3PtpPTPPortHistoryAvgDelayRespRate=f3PtpPTPPortHistoryAvgDelayRespRate, f3PtpPTPClockGrandMasterID=f3PtpPTPClockGrandMasterID, f3PtpMCIStatsSyncDeniedEvents=f3PtpMCIStatsSyncDeniedEvents, FreqRecoveryTarget=FreqRecoveryTarget, f3PtpMasterVirtualPortRowStatus=f3PtpMasterVirtualPortRowStatus, f3PtpMCIProtMemberObject=f3PtpMCIProtMemberObject, f3PtpPTPClockClockExpectedQL=f3PtpPTPClockClockExpectedQL, f3PtpMCIMasterIpV4SubnetMask=f3PtpMCIMasterIpV4SubnetMask, f3PtpL3PTPPortUnicastMessageNegEnabled=f3PtpL3PTPPortUnicastMessageNegEnabled, f3PtpAccPortFlowPointStatsPDelayReqsTx=f3PtpAccPortFlowPointStatsPDelayReqsTx, f3PtpNetPortFlowPointSecureState=f3PtpNetPortFlowPointSecureState, f3PtpPTPPortStatsMaxSyncPathDelay=f3PtpPTPPortStatsMaxSyncPathDelay, f3PtpPTPClockHistoryAction=f3PtpPTPClockHistoryAction, f3PtpPTPPortDelayResponderType=f3PtpPTPPortDelayResponderType, f3PtpPTPPortFrequencyTraceable=f3PtpPTPPortFrequencyTraceable, f3PtpMCIProtMemberEntry=f3PtpMCIProtMemberEntry, f3PtpMCICrossingAlert=f3PtpMCICrossingAlert, f3PtpRemoteSlaveHistorySyncMsgsGen=f3PtpRemoteSlaveHistorySyncMsgsGen, f3PtpSOOCStatsValid=f3PtpSOOCStatsValid, f3PtpTSHistoryTotalTimeCR4=f3PtpTSHistoryTotalTimeCR4, f3PtpNetPortFlowPointStatsPDelayRspsRx=f3PtpNetPortFlowPointStatsPDelayRspsRx, f3PtpMCIHistoryDynamicSlavesDropped=f3PtpMCIHistoryDynamicSlavesDropped, f3PtpMCITable=f3PtpMCITable, f3PtpNetPortFlowPointStatsSignalingTx=f3PtpNetPortFlowPointStatsSignalingTx, f3PtpPTPPortPeerPortIdentity=f3PtpPTPPortPeerPortIdentity, f3PtpMCIMaxSlavesSupported=f3PtpMCIMaxSlavesSupported, f3PtpPTPClockActiveGrantsSyncService=f3PtpPTPClockActiveGrantsSyncService, f3PtpAccPortFlowPointHistorySignalingRx=f3PtpAccPortFlowPointHistorySignalingRx, f3PtpNetPortFlowPointHistoryMaxSyncResTime=f3PtpNetPortFlowPointHistoryMaxSyncResTime, f3PtpRemoteSlaveStatsAction=f3PtpRemoteSlaveStatsAction, f3PtpL3PTPPortHistoryTable=f3PtpL3PTPPortHistoryTable, f3PtpAccPortFlowPointHistorySyncsTx=f3PtpAccPortFlowPointHistorySyncsTx, f3PtpSOOCStatsTwoStepSyncDiscards=f3PtpSOOCStatsTwoStepSyncDiscards, f3PtpTSTable=f3PtpTSTable, f3PtpTrafficPortFlowPointOuterUntaggedEnabled=f3PtpTrafficPortFlowPointOuterUntaggedEnabled, f3PtpAccPortFlowPointHistoryAvgPDelayRspResTime=f3PtpAccPortFlowPointHistoryAvgPDelayRspResTime, f3PtpNetPortFlowPointStatsEntry=f3PtpNetPortFlowPointStatsEntry, f3PtpPTPPortStatsIndex=f3PtpPTPPortStatsIndex, f3PtpMCIStatsIntervalType=f3PtpMCIStatsIntervalType, f3PtpAccPortFlowPointHistoryPtpUnknownsTx=f3PtpAccPortFlowPointHistoryPtpUnknownsTx, PortIdentity=PortIdentity, f3PtpSOOCMasterClockType=f3PtpSOOCMasterClockType, f3PtpPTPPortAdminState=f3PtpPTPPortAdminState, f3PtpSOOCHistoryTwoStepSyncDiscards=f3PtpSOOCHistoryTwoStepSyncDiscards, f3PtpTSFreqTraceabilityStatus=f3PtpTSFreqTraceabilityStatus, f3PtpSOOCHistoryMaxRevFlowWeight=f3PtpSOOCHistoryMaxRevFlowWeight, f3PtpAccPortFlowPointHistoryAvgSyncResTime=f3PtpAccPortFlowPointHistoryAvgSyncResTime, f3PtpTSStatsIntervalType=f3PtpTSStatsIntervalType, f3PtpMCIHistoryAnnounceCancelledEvents=f3PtpMCIHistoryAnnounceCancelledEvents, f3PtpRemoteSlaveStatsIndex=f3PtpRemoteSlaveStatsIndex, f3PtpSOOCHistoryMaxOffsetFromMaster=f3PtpSOOCHistoryMaxOffsetFromMaster, f3PtpPTPClockStatsAction=f3PtpPTPClockStatsAction, f3PtpAccPortFlowPointInner2UntaggedEnabled=f3PtpAccPortFlowPointInner2UntaggedEnabled, f3PtpSOOCThresholdValueHi=f3PtpSOOCThresholdValueHi, f3PtpMCIProtGroupTable=f3PtpMCIProtGroupTable, f3PtpTSHistoryEntry=f3PtpTSHistoryEntry, f3PtpPTPPortStatsAvgMeanPathDelay=f3PtpPTPPortStatsAvgMeanPathDelay, f3PtpTrafficPortFlowPointHistoryPDelayRspFollowupsTx=f3PtpTrafficPortFlowPointHistoryPDelayRspFollowupsTx, f3PtpSOOCSlaveIpV6Address=f3PtpSOOCSlaveIpV6Address, f3PtpNetPortFlowPointStatsPDelayRspFollowupsTx=f3PtpNetPortFlowPointStatsPDelayRspFollowupsTx, f3PtpNetPortFlowPointHistoryPDelayReqsRx=f3PtpNetPortFlowPointHistoryPDelayReqsRx, f3PtpStaticRemoteSlaveUmnControl=f3PtpStaticRemoteSlaveUmnControl, f3PtpAccPortFlowPointStatsPDelayReqsRx=f3PtpAccPortFlowPointStatsPDelayReqsRx, f3PtpPTPPortLastRcvdDelayReqMsg=f3PtpPTPPortLastRcvdDelayReqMsg, f3PtpTrafficPortFlowPointStatsEntry=f3PtpTrafficPortFlowPointStatsEntry, f3PtpRemoteSlaveCrossingAlert=f3PtpRemoteSlaveCrossingAlert, f3PtpSOOCStatsEntry=f3PtpSOOCStatsEntry, f3PtpBCClockClass=f3PtpBCClockClass, f3PtpTSTargetPhaseRecoveryAccuracy=f3PtpTSTargetPhaseRecoveryAccuracy, f3PtpSOOCHistoryTable=f3PtpSOOCHistoryTable, f3PtpSOOCStatsMaxRevFlowWeight=f3PtpSOOCStatsMaxRevFlowWeight, f3PtpTrafficPortFlowPointStatsMinPDelayReqResTime=f3PtpTrafficPortFlowPointStatsMinPDelayReqResTime, f3PtpNetPortFlowPointHistoryDelayRspsRx=f3PtpNetPortFlowPointHistoryDelayRspsRx, DestMacAddrType=DestMacAddrType, f3PtpRemoteSlaveStatsIntervalType=f3PtpRemoteSlaveStatsIntervalType, f3PtpSOOCAnnounceMsgClockClass=f3PtpSOOCAnnounceMsgClockClass, f3PtpOCSlaveVirtualPortState=f3PtpOCSlaveVirtualPortState, f3PtpPTPPortSyncReceiptTimeout=f3PtpPTPPortSyncReceiptTimeout, f3PtpStaticRemoteSlaveIpV6Address=f3PtpStaticRemoteSlaveIpV6Address, f3PtpSOOCName=f3PtpSOOCName, f3PtpTSClockReceivedQL=f3PtpTSClockReceivedQL, f3PtpAccPortFlowPointThresholdInterval=f3PtpAccPortFlowPointThresholdInterval, f3PtpMCIHistoryEntry=f3PtpMCIHistoryEntry, PTPProfile=PTPProfile, f3PtpSOOCMasterMessageMode=f3PtpSOOCMasterMessageMode, f3PtpTrafficPortFlowPointIndex=f3PtpTrafficPortFlowPointIndex, f3PtpPTPPortStatsMaxOffsetFromMaster=f3PtpPTPPortStatsMaxOffsetFromMaster, f3PtpDynamicRemoteSlaveSecondaryState=f3PtpDynamicRemoteSlaveSecondaryState, f3PtpTrafficPortFlowPointHistoryDelayReqsRx=f3PtpTrafficPortFlowPointHistoryDelayReqsRx, f3PtpSOOCHistoryOutOfSeqAnnounceMsgs=f3PtpSOOCHistoryOutOfSeqAnnounceMsgs, f3PtpL3PTPPortHistoryAvgSyncPathDelay=f3PtpL3PTPPortHistoryAvgSyncPathDelay, f3PtpTCVirtualPortOperationalState=f3PtpTCVirtualPortOperationalState, f3PtpTrafficPortFlowPointHistoryMinSyncResTime=f3PtpTrafficPortFlowPointHistoryMinSyncResTime, f3PtpTSStorageType=f3PtpTSStorageType, f3PtpMasterClockAdminState=f3PtpMasterClockAdminState, f3PtpAccPortFlowPointHistoryPDelayRspFollowupsRx=f3PtpAccPortFlowPointHistoryPDelayRspFollowupsRx, f3PtpAccPortFlowPointLoopAvoidance=f3PtpAccPortFlowPointLoopAvoidance, f3PtpTrafficPortFlowPointStatsAvgSyncResTime=f3PtpTrafficPortFlowPointStatsAvgSyncResTime, f3PtpBCTimingSource=f3PtpBCTimingSource, f3PtpSOOCStatsAvgOffsetFromMaster=f3PtpSOOCStatsAvgOffsetFromMaster, f3PtpTrafficPortFlowPointHistoryMgmtFramesTx=f3PtpTrafficPortFlowPointHistoryMgmtFramesTx, f3PtpTrafficPortFlowPointStatsMgmtFramesTx=f3PtpTrafficPortFlowPointStatsMgmtFramesTx, f3PtpAccPortFlowPointThresholdEntry=f3PtpAccPortFlowPointThresholdEntry, f3PtpTrafficPortFlowPointStatsIndex=f3PtpTrafficPortFlowPointStatsIndex, f3PtpMasterClockIndex=f3PtpMasterClockIndex, f3PtpPTPPortCrossingAlert=f3PtpPTPPortCrossingAlert, f3PtpPTPClockHistoryMaxSyncPathDelay=f3PtpPTPClockHistoryMaxSyncPathDelay, f3PtpNetPortFlowPointStatsPDelayRspsTx=f3PtpNetPortFlowPointStatsPDelayRspsTx, PTPTransportMode=PTPTransportMode, f3PtpTrafficPortFlowPointCIRHi=f3PtpTrafficPortFlowPointCIRHi, f3PtpTCVirtualPortAlias=f3PtpTCVirtualPortAlias, f3PtpPTPClockHistoryMinMeanPathDelay=f3PtpPTPClockHistoryMinMeanPathDelay, f3PtpDynamicRemoteSlaveStorageType=f3PtpDynamicRemoteSlaveStorageType, f3PtpTCAdminState=f3PtpTCAdminState, f3PtpTrafficPortFlowPointType=f3PtpTrafficPortFlowPointType, f3PtpDynamicRemoteSlavePortIdentity=f3PtpDynamicRemoteSlavePortIdentity, f3PtpNetPortFlowPointEntry=f3PtpNetPortFlowPointEntry, f3PtpL3PTPPortHistoryMinMeanPathDelay=f3PtpL3PTPPortHistoryMinMeanPathDelay, f3PtpTCPtpProfile=f3PtpTCPtpProfile, f3PtpTrafficPortFlowPointStatsAvgPDelayRspResTime=f3PtpTrafficPortFlowPointStatsAvgPDelayRspResTime, f3PtpNetPortFlowPointHistoryPtpUnknownsRx=f3PtpNetPortFlowPointHistoryPtpUnknownsRx, f3PtpPTPPortPortIdentity=f3PtpPTPPortPortIdentity, f3PtpDynamicRemoteSlaveAnnounceDurRemTime=f3PtpDynamicRemoteSlaveAnnounceDurRemTime, f3PtpL3PTPPortThresholdTable=f3PtpL3PTPPortThresholdTable, f3PtpTCVirtualPortStorageType=f3PtpTCVirtualPortStorageType, f3PtpL3PTPPortStatsUnknownMasterDiscards=f3PtpL3PTPPortStatsUnknownMasterDiscards, f3PtpL3PTPPortThresholdEntry=f3PtpL3PTPPortThresholdEntry, f3PtpNetPortFlowPointStatsTable=f3PtpNetPortFlowPointStatsTable, f3PtpTrafficPortFlowPointStatsTable=f3PtpTrafficPortFlowPointStatsTable, f3PtpSOOCAlias=f3PtpSOOCAlias, f3PtpTrafficPortFlowPointCOS=f3PtpTrafficPortFlowPointCOS, f3PtpAccPortFlowPointStatsDelayReqsRx=f3PtpAccPortFlowPointStatsDelayReqsRx, f3PtpMasterClockSecondaryState=f3PtpMasterClockSecondaryState, f3PtpNetPortFlowPointStatsPDelayReqsTx=f3PtpNetPortFlowPointStatsPDelayReqsTx, f3PtpSOOCStatsMulticastSyncDiscards=f3PtpSOOCStatsMulticastSyncDiscards, f3PtpRemoteSlaveStatsValid=f3PtpRemoteSlaveStatsValid, f3PtpTrafficPortFlowPointStatsDelayRspsTx=f3PtpTrafficPortFlowPointStatsDelayRspsTx, f3PtpTrafficPortFlowPointThresholdInterval=f3PtpTrafficPortFlowPointThresholdInterval, f3PtpL3PTPPortMasterIpV6Address=f3PtpL3PTPPortMasterIpV6Address, f3PtpAccPortFlowPointHistoryMgmtFramesRx=f3PtpAccPortFlowPointHistoryMgmtFramesRx, f3PtpTCVirtualPortTable=f3PtpTCVirtualPortTable, f3PtpSOOCMasterIpV4Address=f3PtpSOOCMasterIpV4Address, f3PtpSOOCE2eDelayAsymmetryComp=f3PtpSOOCE2eDelayAsymmetryComp, f3PtpOCSlaveVirtualPortIdentity=f3PtpOCSlaveVirtualPortIdentity, f3PtpL3PTPPortPortIdentity=f3PtpL3PTPPortPortIdentity, f3PtpPTPClockHistoryTable=f3PtpPTPClockHistoryTable, f3PtpTSStatsTotalTimePR3=f3PtpTSStatsTotalTimePR3, f3PtpTrafficPortFlowPointStatsFollowupsTx=f3PtpTrafficPortFlowPointStatsFollowupsTx, f3PtpDynamicRemoteSlaveTimeCreated=f3PtpDynamicRemoteSlaveTimeCreated, DelayMechanism=DelayMechanism, f3PtpAccPortFlowPointHistoryAvgDelayReqResTime=f3PtpAccPortFlowPointHistoryAvgDelayReqResTime, f3PtpAccPortFlowPointHistoryMaxPDelayRspResTime=f3PtpAccPortFlowPointHistoryMaxPDelayRspResTime, f3PtpBCMediationControl=f3PtpBCMediationControl, f3PtpEthernetTrafficPortExtEntry=f3PtpEthernetTrafficPortExtEntry, f3PtpAccPortFlowPointHistoryAction=f3PtpAccPortFlowPointHistoryAction, f3PtpTrafficPortFlowPointHistoryFollowupsTx=f3PtpTrafficPortFlowPointHistoryFollowupsTx, f3PtpPTPClockCurrentOffsetFromMaster=f3PtpPTPClockCurrentOffsetFromMaster, f3PtpPTPPortIndex=f3PtpPTPPortIndex, f3PtpTrafficPortFlowPointHistoryPtpUnknownsRx=f3PtpTrafficPortFlowPointHistoryPtpUnknownsRx, f3PtpMasterClockTable=f3PtpMasterClockTable, f3PtpAccPortFlowPointHistoryTable=f3PtpAccPortFlowPointHistoryTable, f3PtpTSEntry=f3PtpTSEntry, f3PtpTrafficPortFlowPointThresholdValueHi=f3PtpTrafficPortFlowPointThresholdValueHi, f3PtpL3PTPPortStatsMismatchDomainDiscards=f3PtpL3PTPPortStatsMismatchDomainDiscards, f3PtpTSThresholdMonValue=f3PtpTSThresholdMonValue, f3PtpRemoteSlaveThresholdEntry=f3PtpRemoteSlaveThresholdEntry, f3PtpAccPortFlowPointHistoryMinPDelayRspResTime=f3PtpAccPortFlowPointHistoryMinPDelayRspResTime, f3PtpSOOCHistoryFollowupDiscards=f3PtpSOOCHistoryFollowupDiscards, f3PtpRemoteSlaveHistoryIndex=f3PtpRemoteSlaveHistoryIndex, f3PtpPerfObjectGroup=f3PtpPerfObjectGroup, f3PtpDynamicRemoteSlaveIpV4Address=f3PtpDynamicRemoteSlaveIpV4Address, f3PtpConfigObjects=f3PtpConfigObjects, f3PtpMCIStatsAnnounceCancelledEvents=f3PtpMCIStatsAnnounceCancelledEvents, f3PtpSOOCMasterDelayMechanism=f3PtpSOOCMasterDelayMechanism, f3PtpNetPortFlowPointThresholdIndex=f3PtpNetPortFlowPointThresholdIndex, PTPClockType=PTPClockType)
