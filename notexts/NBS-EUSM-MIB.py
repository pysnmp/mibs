#
# PySNMP MIB module NBS-EUSM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/mrv/NBS-EUSM-MIB
# Produced by pysmi-1.1.12 at Wed May 29 06:48:21 2024
# On host fv-az1019-850 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
nbsCmmcPortEntry, nbsCmmcSlotEntry = mibBuilder.importSymbols("NBS-CMMC-MIB", "nbsCmmcPortEntry", "nbsCmmcSlotEntry")
nbs, = mibBuilder.importSymbols("NBS-MIB", "nbs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, ObjectIdentity, Counter32, Bits, iso, IpAddress, MibIdentifier, Gauge32, NotificationType, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "ObjectIdentity", "Counter32", "Bits", "iso", "IpAddress", "MibIdentifier", "Gauge32", "NotificationType", "TimeTicks", "Counter64")
TextualConvention, StorageType, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "StorageType", "DisplayString", "RowStatus")
nbsEusmMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 629, 202))
if mibBuilder.loadTexts: nbsEusmMib.setLastUpdated('201103221412Z')
if mibBuilder.loadTexts: nbsEusmMib.setOrganization('NBS')
nbsEusmSlotGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 202, 1))
if mibBuilder.loadTexts: nbsEusmSlotGrp.setStatus('current')
nbsEusmPortGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 202, 2))
if mibBuilder.loadTexts: nbsEusmPortGrp.setStatus('current')
nbsEusmTestGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 202, 3))
if mibBuilder.loadTexts: nbsEusmTestGrp.setStatus('current')
nbsEusmSlotTable = MibTable((1, 3, 6, 1, 4, 1, 629, 202, 1, 1), )
if mibBuilder.loadTexts: nbsEusmSlotTable.setStatus('current')
nbsEusmSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1), )
nbsCmmcSlotEntry.registerAugmentions(("NBS-EUSM-MIB", "nbsEusmSlotEntry"))
nbsEusmSlotEntry.setIndexNames(*nbsCmmcSlotEntry.getIndexNames())
if mibBuilder.loadTexts: nbsEusmSlotEntry.setStatus('current')
nbsEusmSlotSupportsEusm = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notSupported", 1), ("supported", 2))).clone('notSupported')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmSlotSupportsEusm.setStatus('current')
nbsEusmSlotAccControlActionUntag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("permit", 2), ("deny", 3))).clone('permit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotAccControlActionUntag.setStatus('current')
nbsEusmSlotAccControlActionTag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("denyAll", 2), ("denyVlan", 3), ("permitVlan", 4), ("permitAll", 5))).clone('permitAll')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotAccControlActionTag.setStatus('current')
nbsEusmSlotAccControlVidList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotAccControlVidList.setStatus('current')
nbsEusmSlotLinkAggrAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("onRandom", 3), ("onXorAll", 4), ("deprecatedonSmac", 5), ("onDmac", 6), ("onXorSd", 7), ("onIp", 8))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotLinkAggrAdmin.setStatus('current')
nbsEusmSlotLinkAggrOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("onRandom", 3), ("onXorAll", 4), ("onSmac", 5), ("onDmac", 6), ("onXorSd", 7), ("onIp", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmSlotLinkAggrOper.setStatus('current')
nbsEusmSlotStormControlBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotStormControlBroadcast.setStatus('current')
nbsEusmSlotStormControlMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotStormControlMulticast.setStatus('current')
nbsEusmSlotStormControlUnicast = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotStormControlUnicast.setStatus('current')
nbsEusmSlotStormBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotStormBurstSize.setStatus('deprecated')
nbsEusmSlotCoSMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("dscpOnly", 2), ("tagOnly", 3), ("bothTagDscp", 4), ("none", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotCoSMode.setStatus('current')
nbsEusmSlotDscpRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("enable", 2), ("disable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotDscpRemark.setStatus('current')
nbsEusmSlotDscpEgressMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("afMode", 2), ("csMode", 3))).clone('afMode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotDscpEgressMode.setStatus('current')
nbsEusmSlotDscpIngressEf = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("enable", 2), ("disable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotDscpIngressEf.setStatus('current')
nbsEusmSlotDscpIngressAf = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("enable", 2), ("disable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotDscpIngressAf.setStatus('current')
nbsEusmSlotDscpIngressCs = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("enable", 2), ("disable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotDscpIngressCs.setStatus('current')
nbsEusmSlotDscpIngressZeroDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("enable", 2), ("disable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotDscpIngressZeroDscp.setStatus('current')
nbsEusmSlotDscpIngressAllOther = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("enable", 2), ("disable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotDscpIngressAllOther.setStatus('current')
nbsEusmSlotIometrix = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('notSupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotIometrix.setStatus('current')
nbsEusmSlotManagementVid = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)).clone(4094)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotManagementVid.setStatus('current')
nbsEusmSlotUserPortIRAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotUserPortIRAdmin.setStatus('current')
nbsEusmSlotUserPortIROper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmSlotUserPortIROper.setStatus('current')
nbsEusmSlotMaxFlowCfgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 23), Integer32().clone(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmSlotMaxFlowCfgSize.setStatus('current')
nbsEusmSlotMaxVlanTranSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 24), Integer32().clone(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmSlotMaxVlanTranSize.setStatus('current')
nbsEusmSlotMaxDscpMapSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 25), Integer32().clone(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmSlotMaxDscpMapSize.setStatus('current')
nbsEusmSlotMaxCosPrioSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 1, 1, 26), Integer32().clone(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmSlotMaxCosPrioSize.setStatus('current')
nbsEusmFlowCfgTable = MibTable((1, 3, 6, 1, 4, 1, 629, 202, 1, 2), )
if mibBuilder.loadTexts: nbsEusmFlowCfgTable.setStatus('current')
nbsEusmFlowCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 202, 1, 2, 1), ).setIndexNames((0, "NBS-EUSM-MIB", "nbsEusmFlowCfgChassis"), (0, "NBS-EUSM-MIB", "nbsEusmFlowCfgSlot"), (0, "NBS-EUSM-MIB", "nbsEusmFlowCfgVid"), (0, "NBS-EUSM-MIB", "nbsEusmFlowCfgPriority"))
if mibBuilder.loadTexts: nbsEusmFlowCfgEntry.setStatus('current')
nbsEusmFlowCfgChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmFlowCfgChassis.setStatus('current')
nbsEusmFlowCfgSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmFlowCfgSlot.setStatus('current')
nbsEusmFlowCfgVid = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmFlowCfgVid.setStatus('current')
nbsEusmFlowCfgPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmFlowCfgPriority.setStatus('current')
nbsEusmFlowCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsEusmFlowCfgRowStatus.setStatus('current')
nbsEusmFlowCfgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 2, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsEusmFlowCfgStorageType.setStatus('current')
nbsEusmFlowCfgIRAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsEusmFlowCfgIRAdmin.setStatus('current')
nbsEusmFlowCfgIROper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmFlowCfgIROper.setStatus('current')
nbsEusmFlowCfgClearCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("idle", 2), ("inProgress", 3), ("clear", 4))).clone('idle')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsEusmFlowCfgClearCounter.setStatus('current')
nbsEusmFlowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 629, 202, 1, 3), )
if mibBuilder.loadTexts: nbsEusmFlowStatusTable.setStatus('current')
nbsEusmFlowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 202, 1, 3, 1), )
nbsEusmFlowCfgEntry.registerAugmentions(("NBS-EUSM-MIB", "nbsEusmFlowStatusEntry"))
nbsEusmFlowStatusEntry.setIndexNames(*nbsEusmFlowCfgEntry.getIndexNames())
if mibBuilder.loadTexts: nbsEusmFlowStatusEntry.setStatus('current')
nbsEusmFlowStatusRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmFlowStatusRxFrames.setStatus('current')
nbsEusmFlowStatusRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmFlowStatusRxOctets.setStatus('current')
nbsEusmVidMapTable = MibTable((1, 3, 6, 1, 4, 1, 629, 202, 1, 4), )
if mibBuilder.loadTexts: nbsEusmVidMapTable.setStatus('current')
nbsEusmVidMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 202, 1, 4, 1), ).setIndexNames((0, "NBS-EUSM-MIB", "nbsEusmVidMapChassis"), (0, "NBS-EUSM-MIB", "nbsEusmVidMapSlot"), (0, "NBS-EUSM-MIB", "nbsEusmVidMapFromVid"))
if mibBuilder.loadTexts: nbsEusmVidMapEntry.setStatus('current')
nbsEusmVidMapChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmVidMapChassis.setStatus('current')
nbsEusmVidMapSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmVidMapSlot.setStatus('current')
nbsEusmVidMapFromVid = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmVidMapFromVid.setStatus('current')
nbsEusmVidMapToVid = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsEusmVidMapToVid.setStatus('current')
nbsEusmVidMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsEusmVidMapRowStatus.setStatus('current')
nbsEusmVidMapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 4, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsEusmVidMapStorageType.setStatus('current')
nbsEusmCoSDscpMapTable = MibTable((1, 3, 6, 1, 4, 1, 629, 202, 1, 5), )
if mibBuilder.loadTexts: nbsEusmCoSDscpMapTable.setStatus('current')
nbsEusmCoSDscpMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 202, 1, 5, 1), ).setIndexNames((0, "NBS-EUSM-MIB", "nbsEusmCoSDscpMapChassis"), (0, "NBS-EUSM-MIB", "nbsEusmCoSDscpMapSlot"), (0, "NBS-EUSM-MIB", "nbsEusmCoSDscpMapDscp"))
if mibBuilder.loadTexts: nbsEusmCoSDscpMapEntry.setStatus('current')
nbsEusmCoSDscpMapChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmCoSDscpMapChassis.setStatus('current')
nbsEusmCoSDscpMapSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmCoSDscpMapSlot.setStatus('current')
nbsEusmCoSDscpMapDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmCoSDscpMapDscp.setStatus('current')
nbsEusmCoSDscpMapSlcPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("low", 1), ("normal", 2), ("medium", 3), ("high", 4))).clone('low')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsEusmCoSDscpMapSlcPrio.setStatus('current')
nbsEusmCoSDscpMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsEusmCoSDscpMapRowStatus.setStatus('current')
nbsEusmCoSDscpMapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 5, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsEusmCoSDscpMapStorageType.setStatus('current')
nbsEusmCoSTagPrioMapTable = MibTable((1, 3, 6, 1, 4, 1, 629, 202, 1, 6), )
if mibBuilder.loadTexts: nbsEusmCoSTagPrioMapTable.setStatus('current')
nbsEusmCoSTagPrioMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 202, 1, 6, 1), ).setIndexNames((0, "NBS-EUSM-MIB", "nbsEusmCoSTagPrioMapChassis"), (0, "NBS-EUSM-MIB", "nbsEusmCoSTagPrioMapSlot"), (0, "NBS-EUSM-MIB", "nbsEusmCoSTagPrioMapPriority"))
if mibBuilder.loadTexts: nbsEusmCoSTagPrioMapEntry.setStatus('current')
nbsEusmCoSTagPrioMapChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmCoSTagPrioMapChassis.setStatus('current')
nbsEusmCoSTagPrioMapSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmCoSTagPrioMapSlot.setStatus('current')
nbsEusmCoSTagPrioMapPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmCoSTagPrioMapPriority.setStatus('current')
nbsEusmCoSTagPrioMapSlcPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("low", 1), ("normal", 2), ("medium", 3), ("high", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nbsEusmCoSTagPrioMapSlcPrio.setStatus('current')
nbsEusmPortTable = MibTable((1, 3, 6, 1, 4, 1, 629, 202, 2, 1), )
if mibBuilder.loadTexts: nbsEusmPortTable.setStatus('current')
nbsEusmPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 202, 2, 1, 1), )
nbsCmmcPortEntry.registerAugmentions(("NBS-EUSM-MIB", "nbsEusmPortEntry"))
nbsEusmPortEntry.setIndexNames(*nbsCmmcPortEntry.getIndexNames())
if mibBuilder.loadTexts: nbsEusmPortEntry.setStatus('current')
nbsEusmPortSupportsEusm = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notSupported", 1), ("supported", 2))).clone('notSupported')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPortSupportsEusm.setStatus('current')
nbsEusmPortSmartLoopbackAction = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("all", 3), ("onDA", 4), ("onVid", 5), ("onBoth", 6), ("mac", 7))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmPortSmartLoopbackAction.setStatus('current')
nbsEusmPortSmartLoopbackSwap = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("off", 2), ("on", 3))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmPortSmartLoopbackSwap.setStatus('current')
nbsEusmPortSmartLoopbackMac = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmPortSmartLoopbackMac.setStatus('current')
nbsEusmPortSmartLoopbackVid = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmPortSmartLoopbackVid.setStatus('current')
nbsEusmPortVlanTagAction = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("add", 2), ("strip", 3), ("ignore", 4))).clone('ignore')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmPortVlanTagAction.setStatus('current')
nbsEusmPortVlanTagVid = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmPortVlanTagVid.setStatus('current')
nbsEusmPortVlanTagPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmPortVlanTagPriority.setStatus('current')
nbsEusmTgaTable = MibTable((1, 3, 6, 1, 4, 1, 629, 202, 3, 1), )
if mibBuilder.loadTexts: nbsEusmTgaTable.setStatus('current')
nbsEusmTgaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1), )
nbsCmmcPortEntry.registerAugmentions(("NBS-EUSM-MIB", "nbsEusmTgaEntry"))
nbsEusmTgaEntry.setIndexNames(*nbsCmmcPortEntry.getIndexNames())
if mibBuilder.loadTexts: nbsEusmTgaEntry.setStatus('current')
nbsEusmTgaDa = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaDa.setStatus('current')
nbsEusmTgaDaType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("random", 2), ("fixed", 3), ("increment", 4))).clone('random')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaDaType.setStatus('current')
nbsEusmTgaSa = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaSa.setStatus('current')
nbsEusmTgaSaType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("random", 2), ("fixed", 3), ("increment", 4))).clone('random')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaSaType.setStatus('current')
nbsEusmTgaTag = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaTag.setStatus('current')
nbsEusmTgaTagType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("random", 2), ("fixed", 3), ("increment", 4))).clone('random')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaTagType.setStatus('current')
nbsEusmTgaPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2).clone(hexValue="0000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaPattern.setStatus('current')
nbsEusmTgaPatternType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("random", 2), ("fixed", 3))).clone('random')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaPatternType.setStatus('current')
nbsEusmTgaFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 9600)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaFrameSize.setStatus('current')
nbsEusmTgaFrameSizeType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("random", 2), ("fixed", 3))).clone('fixed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaFrameSizeType.setStatus('current')
nbsEusmTgaFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967294)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaFrameCount.setStatus('current')
nbsEusmTgaFrameCountType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("continuous", 2), ("fixed", 3))).clone('continuous')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaFrameCountType.setStatus('current')
nbsEusmTgaInterPacketGap = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(12, 134217727)).clone(1249928)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaInterPacketGap.setStatus('current')
nbsEusmTgaAction = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("start", 2), ("stop", 3))).clone('stop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmTgaAction.setStatus('current')
nbsEusmCableTestTable = MibTable((1, 3, 6, 1, 4, 1, 629, 202, 3, 2), )
if mibBuilder.loadTexts: nbsEusmCableTestTable.setStatus('current')
nbsEusmCableTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 202, 3, 2, 1), )
nbsCmmcPortEntry.registerAugmentions(("NBS-EUSM-MIB", "nbsEusmCableTestEntry"))
nbsEusmCableTestEntry.setIndexNames(*nbsCmmcPortEntry.getIndexNames())
if mibBuilder.loadTexts: nbsEusmCableTestEntry.setStatus('current')
nbsEusmCableTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("testStart", 2), ("testInProgress", 3), ("testCompleted", 4), ("testIdle", 5))).clone('testIdle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmCableTestStatus.setStatus('current')
nbsEusmCableTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmCableTestResult.setStatus('current')
nbsEusmLgaTable = MibTable((1, 3, 6, 1, 4, 1, 629, 202, 3, 3), )
if mibBuilder.loadTexts: nbsEusmLgaTable.setStatus('current')
nbsEusmLgaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1), )
nbsCmmcSlotEntry.registerAugmentions(("NBS-EUSM-MIB", "nbsEusmLgaEntry"))
nbsEusmLgaEntry.setIndexNames(*nbsCmmcSlotEntry.getIndexNames())
if mibBuilder.loadTexts: nbsEusmLgaEntry.setStatus('current')
nbsEusmLgaRdAllFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdAllFrames.setStatus('current')
nbsEusmLgaRducFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRducFrames.setStatus('current')
nbsEusmLgaRdmcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdmcFrames.setStatus('current')
nbsEusmLgaRdbcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdbcFrames.setStatus('current')
nbsEusmLgaRdSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdSize64.setStatus('current')
nbsEusmLgaRdSizeMax127 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdSizeMax127.setStatus('current')
nbsEusmLgaRdSizeMax255 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdSizeMax255.setStatus('current')
nbsEusmLgaRdSizeMax511 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdSizeMax511.setStatus('current')
nbsEusmLgaRdSizeMax1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdSizeMax1023.setStatus('current')
nbsEusmLgaRdSizeMax1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdSizeMax1518.setStatus('current')
nbsEusmLgaRdSizeMax2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdSizeMax2047.setStatus('current')
nbsEusmLgaRdSizeOvr2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdSizeOvr2047.setStatus('current')
nbsEusmLgaRdFrameDivisor = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdFrameDivisor.setStatus('current')
nbsEusmLgaRdAllOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdAllOctets.setStatus('current')
nbsEusmLgaRdOctetDivisor = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdOctetDivisor.setStatus('current')
nbsEusmLgaRdTimeSpan = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaRdTimeSpan.setStatus('current')
nbsEusmLgaAdAllFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdAllFrames.setStatus('current')
nbsEusmLgaAducFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAducFrames.setStatus('current')
nbsEusmLgaAdmcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdmcFrames.setStatus('current')
nbsEusmLgaAdbcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdbcFrames.setStatus('current')
nbsEusmLgaAdSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdSize64.setStatus('current')
nbsEusmLgaAdSizeMax127 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdSizeMax127.setStatus('current')
nbsEusmLgaAdSizeMax255 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdSizeMax255.setStatus('current')
nbsEusmLgaAdSizeMax511 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdSizeMax511.setStatus('current')
nbsEusmLgaAdSizeMax1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdSizeMax1023.setStatus('current')
nbsEusmLgaAdSizeMax1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdSizeMax1518.setStatus('current')
nbsEusmLgaAdSizeMax2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdSizeMax2047.setStatus('current')
nbsEusmLgaAdSizeOvr2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdSizeOvr2047.setStatus('current')
nbsEusmLgaAdFrameDivisor = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdFrameDivisor.setStatus('current')
nbsEusmLgaAdAllOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdAllOctets.setStatus('current')
nbsEusmLgaAdOctetDivisor = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdOctetDivisor.setStatus('current')
nbsEusmLgaAdTimeSpan = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmLgaAdTimeSpan.setStatus('current')
nbsEusmSlotLgaInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 86400)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotLgaInterval.setStatus('current')
nbsEusmSlotLgaAction = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 3, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("inactive", 2), ("start", 3), ("stop", 4), ("inProgress", 5))).clone('notSupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotLgaAction.setStatus('current')
nbsEusmPmTable = MibTable((1, 3, 6, 1, 4, 1, 629, 202, 3, 4), )
if mibBuilder.loadTexts: nbsEusmPmTable.setStatus('current')
nbsEusmPmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1), )
nbsCmmcSlotEntry.registerAugmentions(("NBS-EUSM-MIB", "nbsEusmPmEntry"))
nbsEusmPmEntry.setIndexNames(*nbsCmmcSlotEntry.getIndexNames())
if mibBuilder.loadTexts: nbsEusmPmEntry.setStatus('current')
nbsEusmPmAvgAllSizes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmAvgAllSizes.setStatus('current')
nbsEusmPmAvg64 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmAvg64.setStatus('current')
nbsEusmPmAvg127 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmAvg127.setStatus('current')
nbsEusmPmAvg255 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmAvg255.setStatus('current')
nbsEusmPmAvg511 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmAvg511.setStatus('current')
nbsEusmPmAvg1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmAvg1023.setStatus('current')
nbsEusmPmAvg1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmAvg1518.setStatus('current')
nbsEusmPmAvg2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmAvg2047.setStatus('current')
nbsEusmPmAvgOvr2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmAvgOvr2047.setStatus('current')
nbsEusmPmMinAllSizes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMinAllSizes.setStatus('current')
nbsEusmPmMin64 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMin64.setStatus('current')
nbsEusmPmMin127 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMin127.setStatus('current')
nbsEusmPmMin255 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMin255.setStatus('current')
nbsEusmPmMin511 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMin511.setStatus('current')
nbsEusmPmMin1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMin1023.setStatus('current')
nbsEusmPmMin1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMin1518.setStatus('current')
nbsEusmPmMin2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMin2047.setStatus('current')
nbsEusmPmMinOvr2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMinOvr2047.setStatus('current')
nbsEusmPmMaxAllSizes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMaxAllSizes.setStatus('current')
nbsEusmPmMax64 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMax64.setStatus('current')
nbsEusmPmMax127 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMax127.setStatus('current')
nbsEusmPmMax255 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMax255.setStatus('current')
nbsEusmPmMax511 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMax511.setStatus('current')
nbsEusmPmMax1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMax1023.setStatus('current')
nbsEusmPmMax1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMax1518.setStatus('current')
nbsEusmPmMax2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMax2047.setStatus('current')
nbsEusmPmMaxOvr2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmMaxOvr2047.setStatus('current')
nbsEusmPmFramesAllSizes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmFramesAllSizes.setStatus('current')
nbsEusmPmFrames64 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmFrames64.setStatus('current')
nbsEusmPmFrames127 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmFrames127.setStatus('current')
nbsEusmPmFrames255 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmFrames255.setStatus('current')
nbsEusmPmFrames511 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmFrames511.setStatus('current')
nbsEusmPmFrames1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmFrames1023.setStatus('current')
nbsEusmPmFrames1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmFrames1518.setStatus('current')
nbsEusmPmFrames2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmFrames2047.setStatus('current')
nbsEusmPmFramesOvr2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmFramesOvr2047.setStatus('current')
nbsEusmPmOctetsAllSizes = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmOctetsAllSizes.setStatus('current')
nbsEusmPmOctets64 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmOctets64.setStatus('current')
nbsEusmPmOctets127 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmOctets127.setStatus('current')
nbsEusmPmOctets255 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmOctets255.setStatus('current')
nbsEusmPmOctets511 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmOctets511.setStatus('current')
nbsEusmPmOctets1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmOctets1023.setStatus('current')
nbsEusmPmOctets1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmOctets1518.setStatus('current')
nbsEusmPmOctets2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmOctets2047.setStatus('current')
nbsEusmPmOctetsOvr2047 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmPmOctetsOvr2047.setStatus('current')
nbsEusmSlotPmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 604800)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotPmInterval.setStatus('current')
nbsEusmSlotPmSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("coToCpe", 2), ("cpeToCo", 3), ("cpeTx", 4), ("cpeRx", 5))).clone('notSupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotPmSelector.setStatus('current')
nbsEusmSlotPmAction = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notSupported", 1), ("inactive", 2), ("start", 3), ("stop", 4), ("inProgress", 5), ("complete", 6), ("stopping", 7))).clone('notSupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEusmSlotPmAction.setStatus('current')
nbsEusmSlotPmCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 202, 3, 4, 1, 49), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEusmSlotPmCapabilities.setStatus('current')
mibBuilder.exportSymbols("NBS-EUSM-MIB", nbsEusmPmMin511=nbsEusmPmMin511, nbsEusmPmAvgAllSizes=nbsEusmPmAvgAllSizes, nbsEusmSlotAccControlVidList=nbsEusmSlotAccControlVidList, nbsEusmPmEntry=nbsEusmPmEntry, nbsEusmFlowCfgTable=nbsEusmFlowCfgTable, nbsEusmSlotLinkAggrOper=nbsEusmSlotLinkAggrOper, nbsEusmSlotDscpIngressZeroDscp=nbsEusmSlotDscpIngressZeroDscp, nbsEusmSlotManagementVid=nbsEusmSlotManagementVid, nbsEusmSlotUserPortIRAdmin=nbsEusmSlotUserPortIRAdmin, nbsEusmFlowCfgClearCounter=nbsEusmFlowCfgClearCounter, nbsEusmPortSmartLoopbackAction=nbsEusmPortSmartLoopbackAction, nbsEusmCableTestResult=nbsEusmCableTestResult, nbsEusmPmMaxOvr2047=nbsEusmPmMaxOvr2047, nbsEusmTgaSa=nbsEusmTgaSa, nbsEusmCoSDscpMapSlot=nbsEusmCoSDscpMapSlot, nbsEusmPortSmartLoopbackSwap=nbsEusmPortSmartLoopbackSwap, nbsEusmTestGrp=nbsEusmTestGrp, nbsEusmCableTestTable=nbsEusmCableTestTable, nbsEusmSlotPmInterval=nbsEusmSlotPmInterval, nbsEusmFlowCfgEntry=nbsEusmFlowCfgEntry, nbsEusmVidMapFromVid=nbsEusmVidMapFromVid, nbsEusmCoSDscpMapDscp=nbsEusmCoSDscpMapDscp, nbsEusmSlotStormControlBroadcast=nbsEusmSlotStormControlBroadcast, nbsEusmTgaFrameSizeType=nbsEusmTgaFrameSizeType, nbsEusmSlotStormControlMulticast=nbsEusmSlotStormControlMulticast, nbsEusmPmAvg127=nbsEusmPmAvg127, nbsEusmPmAvg1023=nbsEusmPmAvg1023, nbsEusmSlotPmSelector=nbsEusmSlotPmSelector, nbsEusmSlotTable=nbsEusmSlotTable, nbsEusmLgaAdAllOctets=nbsEusmLgaAdAllOctets, nbsEusmPortSmartLoopbackMac=nbsEusmPortSmartLoopbackMac, nbsEusmTgaPatternType=nbsEusmTgaPatternType, nbsEusmPmOctets1023=nbsEusmPmOctets1023, nbsEusmCableTestStatus=nbsEusmCableTestStatus, nbsEusmPmFrames64=nbsEusmPmFrames64, nbsEusmSlotAccControlActionUntag=nbsEusmSlotAccControlActionUntag, nbsEusmSlotDscpIngressCs=nbsEusmSlotDscpIngressCs, nbsEusmVidMapStorageType=nbsEusmVidMapStorageType, nbsEusmPmMax255=nbsEusmPmMax255, nbsEusmLgaAdTimeSpan=nbsEusmLgaAdTimeSpan, nbsEusmVidMapToVid=nbsEusmVidMapToVid, nbsEusmTgaTagType=nbsEusmTgaTagType, nbsEusmSlotAccControlActionTag=nbsEusmSlotAccControlActionTag, nbsEusmSlotSupportsEusm=nbsEusmSlotSupportsEusm, nbsEusmCoSTagPrioMapTable=nbsEusmCoSTagPrioMapTable, nbsEusmFlowCfgVid=nbsEusmFlowCfgVid, nbsEusmCoSTagPrioMapPriority=nbsEusmCoSTagPrioMapPriority, nbsEusmPortTable=nbsEusmPortTable, nbsEusmLgaRdSizeMax511=nbsEusmLgaRdSizeMax511, nbsEusmPmMax2047=nbsEusmPmMax2047, nbsEusmSlotCoSMode=nbsEusmSlotCoSMode, nbsEusmPortGrp=nbsEusmPortGrp, nbsEusmPmOctets255=nbsEusmPmOctets255, nbsEusmPmOctets2047=nbsEusmPmOctets2047, nbsEusmPortVlanTagAction=nbsEusmPortVlanTagAction, nbsEusmPmOctetsAllSizes=nbsEusmPmOctetsAllSizes, nbsEusmLgaAdSizeOvr2047=nbsEusmLgaAdSizeOvr2047, nbsEusmLgaRdSizeMax127=nbsEusmLgaRdSizeMax127, nbsEusmSlotDscpIngressAllOther=nbsEusmSlotDscpIngressAllOther, nbsEusmCoSTagPrioMapSlot=nbsEusmCoSTagPrioMapSlot, nbsEusmLgaRdAllFrames=nbsEusmLgaRdAllFrames, nbsEusmPmAvg64=nbsEusmPmAvg64, nbsEusmCoSDscpMapTable=nbsEusmCoSDscpMapTable, nbsEusmPmMin127=nbsEusmPmMin127, nbsEusmPmMax1518=nbsEusmPmMax1518, nbsEusmPmOctets1518=nbsEusmPmOctets1518, nbsEusmTgaDaType=nbsEusmTgaDaType, nbsEusmPmFramesAllSizes=nbsEusmPmFramesAllSizes, nbsEusmCoSTagPrioMapEntry=nbsEusmCoSTagPrioMapEntry, nbsEusmLgaRdOctetDivisor=nbsEusmLgaRdOctetDivisor, nbsEusmLgaRdTimeSpan=nbsEusmLgaRdTimeSpan, nbsEusmVidMapSlot=nbsEusmVidMapSlot, nbsEusmPmMinOvr2047=nbsEusmPmMinOvr2047, nbsEusmCoSDscpMapStorageType=nbsEusmCoSDscpMapStorageType, nbsEusmPmMin1518=nbsEusmPmMin1518, nbsEusmLgaAdAllFrames=nbsEusmLgaAdAllFrames, nbsEusmPmAvgOvr2047=nbsEusmPmAvgOvr2047, nbsEusmVidMapEntry=nbsEusmVidMapEntry, nbsEusmPmMax127=nbsEusmPmMax127, nbsEusmLgaRdSizeMax255=nbsEusmLgaRdSizeMax255, nbsEusmSlotDscpRemark=nbsEusmSlotDscpRemark, nbsEusmSlotUserPortIROper=nbsEusmSlotUserPortIROper, nbsEusmPortVlanTagPriority=nbsEusmPortVlanTagPriority, nbsEusmPmMaxAllSizes=nbsEusmPmMaxAllSizes, nbsEusmCoSTagPrioMapSlcPrio=nbsEusmCoSTagPrioMapSlcPrio, nbsEusmSlotLgaInterval=nbsEusmSlotLgaInterval, nbsEusmPmFrames2047=nbsEusmPmFrames2047, nbsEusmLgaRdAllOctets=nbsEusmLgaRdAllOctets, nbsEusmFlowCfgIROper=nbsEusmFlowCfgIROper, nbsEusmCoSDscpMapSlcPrio=nbsEusmCoSDscpMapSlcPrio, nbsEusmLgaEntry=nbsEusmLgaEntry, nbsEusmCoSTagPrioMapChassis=nbsEusmCoSTagPrioMapChassis, nbsEusmPmFramesOvr2047=nbsEusmPmFramesOvr2047, nbsEusmTgaFrameCountType=nbsEusmTgaFrameCountType, nbsEusmVidMapTable=nbsEusmVidMapTable, nbsEusmLgaTable=nbsEusmLgaTable, nbsEusmSlotMaxDscpMapSize=nbsEusmSlotMaxDscpMapSize, nbsEusmCableTestEntry=nbsEusmCableTestEntry, nbsEusmLgaRdbcFrames=nbsEusmLgaRdbcFrames, nbsEusmPortSmartLoopbackVid=nbsEusmPortSmartLoopbackVid, nbsEusmFlowStatusRxFrames=nbsEusmFlowStatusRxFrames, nbsEusmPmAvg1518=nbsEusmPmAvg1518, nbsEusmLgaRdSizeMax2047=nbsEusmLgaRdSizeMax2047, nbsEusmPmFrames255=nbsEusmPmFrames255, nbsEusmLgaRdFrameDivisor=nbsEusmLgaRdFrameDivisor, nbsEusmLgaRdmcFrames=nbsEusmLgaRdmcFrames, nbsEusmPmMin1023=nbsEusmPmMin1023, nbsEusmLgaRducFrames=nbsEusmLgaRducFrames, nbsEusmFlowStatusTable=nbsEusmFlowStatusTable, nbsEusmLgaAdSizeMax2047=nbsEusmLgaAdSizeMax2047, nbsEusmSlotMaxVlanTranSize=nbsEusmSlotMaxVlanTranSize, nbsEusmLgaRdSizeMax1023=nbsEusmLgaRdSizeMax1023, nbsEusmFlowStatusRxOctets=nbsEusmFlowStatusRxOctets, nbsEusmSlotLgaAction=nbsEusmSlotLgaAction, nbsEusmSlotDscpIngressAf=nbsEusmSlotDscpIngressAf, nbsEusmLgaAdSizeMax1023=nbsEusmLgaAdSizeMax1023, nbsEusmPmAvg511=nbsEusmPmAvg511, nbsEusmSlotIometrix=nbsEusmSlotIometrix, nbsEusmLgaRdSize64=nbsEusmLgaRdSize64, nbsEusmPortEntry=nbsEusmPortEntry, nbsEusmSlotMaxFlowCfgSize=nbsEusmSlotMaxFlowCfgSize, nbsEusmTgaTag=nbsEusmTgaTag, nbsEusmCoSDscpMapChassis=nbsEusmCoSDscpMapChassis, nbsEusmPmTable=nbsEusmPmTable, nbsEusmPmMax64=nbsEusmPmMax64, nbsEusmPmMax1023=nbsEusmPmMax1023, nbsEusmFlowCfgRowStatus=nbsEusmFlowCfgRowStatus, nbsEusmSlotLinkAggrAdmin=nbsEusmSlotLinkAggrAdmin, nbsEusmFlowCfgSlot=nbsEusmFlowCfgSlot, nbsEusmFlowCfgChassis=nbsEusmFlowCfgChassis, nbsEusmPmFrames127=nbsEusmPmFrames127, nbsEusmLgaAdmcFrames=nbsEusmLgaAdmcFrames, nbsEusmPmAvg255=nbsEusmPmAvg255, nbsEusmVidMapRowStatus=nbsEusmVidMapRowStatus, nbsEusmSlotStormControlUnicast=nbsEusmSlotStormControlUnicast, nbsEusmSlotPmAction=nbsEusmSlotPmAction, nbsEusmSlotStormBurstSize=nbsEusmSlotStormBurstSize, nbsEusmPmMin64=nbsEusmPmMin64, nbsEusmPmFrames1023=nbsEusmPmFrames1023, nbsEusmPmAvg2047=nbsEusmPmAvg2047, nbsEusmTgaSaType=nbsEusmTgaSaType, nbsEusmSlotEntry=nbsEusmSlotEntry, nbsEusmSlotDscpEgressMode=nbsEusmSlotDscpEgressMode, nbsEusmLgaAdSizeMax1518=nbsEusmLgaAdSizeMax1518, nbsEusmFlowCfgStorageType=nbsEusmFlowCfgStorageType, nbsEusmPmOctets127=nbsEusmPmOctets127, nbsEusmTgaFrameSize=nbsEusmTgaFrameSize, nbsEusmFlowCfgPriority=nbsEusmFlowCfgPriority, nbsEusmFlowStatusEntry=nbsEusmFlowStatusEntry, nbsEusmPortSupportsEusm=nbsEusmPortSupportsEusm, nbsEusmPmFrames511=nbsEusmPmFrames511, nbsEusmPortVlanTagVid=nbsEusmPortVlanTagVid, nbsEusmTgaDa=nbsEusmTgaDa, nbsEusmPmMin2047=nbsEusmPmMin2047, nbsEusmFlowCfgIRAdmin=nbsEusmFlowCfgIRAdmin, nbsEusmTgaEntry=nbsEusmTgaEntry, nbsEusmPmMinAllSizes=nbsEusmPmMinAllSizes, nbsEusmSlotDscpIngressEf=nbsEusmSlotDscpIngressEf, nbsEusmPmMin255=nbsEusmPmMin255, nbsEusmPmOctetsOvr2047=nbsEusmPmOctetsOvr2047, nbsEusmVidMapChassis=nbsEusmVidMapChassis, nbsEusmPmOctets64=nbsEusmPmOctets64, nbsEusmPmFrames1518=nbsEusmPmFrames1518, nbsEusmLgaRdSizeOvr2047=nbsEusmLgaRdSizeOvr2047, nbsEusmTgaInterPacketGap=nbsEusmTgaInterPacketGap, nbsEusmLgaAdSizeMax127=nbsEusmLgaAdSizeMax127, nbsEusmTgaFrameCount=nbsEusmTgaFrameCount, nbsEusmSlotPmCapabilities=nbsEusmSlotPmCapabilities, nbsEusmPmMax511=nbsEusmPmMax511, nbsEusmTgaPattern=nbsEusmTgaPattern, nbsEusmSlotMaxCosPrioSize=nbsEusmSlotMaxCosPrioSize, nbsEusmLgaAducFrames=nbsEusmLgaAducFrames, nbsEusmSlotGrp=nbsEusmSlotGrp, nbsEusmLgaRdSizeMax1518=nbsEusmLgaRdSizeMax1518, nbsEusmCoSDscpMapRowStatus=nbsEusmCoSDscpMapRowStatus, nbsEusmLgaAdbcFrames=nbsEusmLgaAdbcFrames, nbsEusmPmOctets511=nbsEusmPmOctets511, nbsEusmLgaAdFrameDivisor=nbsEusmLgaAdFrameDivisor, nbsEusmLgaAdOctetDivisor=nbsEusmLgaAdOctetDivisor, nbsEusmLgaAdSize64=nbsEusmLgaAdSize64, nbsEusmLgaAdSizeMax255=nbsEusmLgaAdSizeMax255, nbsEusmMib=nbsEusmMib, nbsEusmCoSDscpMapEntry=nbsEusmCoSDscpMapEntry, nbsEusmLgaAdSizeMax511=nbsEusmLgaAdSizeMax511, PYSNMP_MODULE_ID=nbsEusmMib, nbsEusmTgaAction=nbsEusmTgaAction, nbsEusmTgaTable=nbsEusmTgaTable)
