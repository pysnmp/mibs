#
# PySNMP MIB module TPDIN2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/tycon/TPDIN2-MIB
# Produced by pysmi-1.1.12 at Mon Oct  7 02:58:53 2024
# On host fv-az775-99 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, enterprises, iso, Counter64, Bits, NotificationType, Gauge32, ObjectIdentity, Counter32, IpAddress, Integer32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "enterprises", "iso", "Counter64", "Bits", "NotificationType", "Gauge32", "ObjectIdentity", "Counter32", "IpAddress", "Integer32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tpdin2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 45621, 2))
if mibBuilder.loadTexts: tpdin2.setLastUpdated('201703031251Z')
if mibBuilder.loadTexts: tpdin2.setOrganization('Tycon Systems')
tycon = MibIdentifier((1, 3, 6, 1, 4, 1, 45621))
product = MibIdentifier((1, 3, 6, 1, 4, 1, 45621, 2, 1))
monitor = MibIdentifier((1, 3, 6, 1, 4, 1, 45621, 2, 2))
class Tenths(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-1'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 10000)

name = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: name.setStatus('current')
version = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: version.setStatus('current')
builddate = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: builddate.setStatus('current')
relay1 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay1.setStatus('current')
relay2 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay2.setStatus('current')
relay3 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay3.setStatus('current')
relay4 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay4.setStatus('current')
voltage1 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 5), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltage1.setStatus('current')
voltage2 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 6), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltage2.setStatus('current')
voltage3 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 7), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltage3.setStatus('current')
voltage4 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 8), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltage4.setStatus('current')
current1 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 9), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: current1.setStatus('current')
current2 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 10), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: current2.setStatus('current')
current3 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 11), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: current3.setStatus('current')
current4 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 12), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: current4.setStatus('current')
temperature1 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 13), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperature1.setStatus('current')
temperature2 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 14), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperature2.setStatus('current')
mibBuilder.exportSymbols("TPDIN2-MIB", PYSNMP_MODULE_ID=tpdin2, relay4=relay4, monitor=monitor, builddate=builddate, relay2=relay2, voltage1=voltage1, tycon=tycon, relay3=relay3, current4=current4, voltage3=voltage3, current3=current3, version=version, current1=current1, voltage4=voltage4, product=product, tpdin2=tpdin2, relay1=relay1, temperature1=temperature1, Tenths=Tenths, temperature2=temperature2, name=name, current2=current2, voltage2=voltage2)
