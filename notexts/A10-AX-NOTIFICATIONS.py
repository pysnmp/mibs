#
# PySNMP MIB module A10-AX-NOTIFICATIONS (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/a10/A10-AX-NOTIFICATIONS
# Produced by pysmi-1.1.12 at Wed Jul  3 09:33:07 2024
# On host fv-az1766-730 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
axNotification, axLogging = mibBuilder.importSymbols("A10-AX-MIB", "axNotification", "axLogging")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InetAddressType, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, iso, TimeTicks, MibIdentifier, ModuleIdentity, IpAddress, Integer32, Unsigned32, NotificationType, ObjectIdentity, Gauge32, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "TimeTicks", "MibIdentifier", "ModuleIdentity", "IpAddress", "Integer32", "Unsigned32", "NotificationType", "ObjectIdentity", "Gauge32", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, PhysAddress, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "PhysAddress", "DateAndTime")
axNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1))
axNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2))
axSystemNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1))
axAppNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2))
axNetworkNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 3))
axGslbNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5))
axSlbNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 6))
axNotificationMsg = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationMsg.setStatus('current')
axNotificationSLBServer = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationSLBServer.setStatus('current')
axNotificationSLBPort = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationSLBPort.setStatus('current')
axNotificationSLBCurConns = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationSLBCurConns.setStatus('current')
axNotificationVirtualServer = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationVirtualServer.setStatus('current')
axNotificationVirtualServerPort = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationVirtualServerPort.setStatus('current')
axNotificationVirtualServerPortType = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 17, 11, 19, 18, 5))).clone(namedValues=NamedValues(("firewall", 1), ("tcp", 2), ("udp", 3), ("rtsp", 8), ("ftp", 9), ("mms", 10), ("fastHTTP", 12), ("http", 14), ("https", 15), ("sslProxy", 16), ("smtp", 17), ("sip", 11), ("sips", 19), ("sip-TCP", 18), ("others", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationVirtualServerPortType.setStatus('current')
axNotificationDroppedPackets = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationDroppedPackets.setStatus('current')
axNotificationConfiguredThreshold = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationConfiguredThreshold.setStatus('current')
axNotificationCurrentUsage = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationCurrentUsage.setStatus('current')
axNotificationConnLimit = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationConnLimit.setStatus('current')
axNotificationTrunkID = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationTrunkID.setStatus('current')
axNotificationPortThreshold = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationPortThreshold.setStatus('current')
axNotificationCurrentUpPorts = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationCurrentUpPorts.setStatus('current')
axNotificationFanName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationFanName.setStatus('current')
axNotificationPowerSupplyName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationPowerSupplyName.setStatus('current')
axNotificationHAGroup = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationHAGroup.setStatus('current')
axNotificationSLBServiceGroupName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationSLBServiceGroupName.setStatus('current')
axNotificationPartitionId = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationPartitionId.setStatus('current')
axNotificationVrid = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationVrid.setStatus('current')
axNotificationPartitionName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationPartitionName.setStatus('current')
axNotificationGslbSiteName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationGslbSiteName.setStatus('current')
axNotificationGslbSiteSlbDeviceName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationGslbSiteSlbDeviceName.setStatus('current')
axNotificationGslbSiteIpServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationGslbSiteIpServerAddr.setStatus('current')
axNotificationGslbServiceIpName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationGslbServiceIpName.setStatus('current')
axNotificationGslbServiceIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationGslbServiceIpAddr.setStatus('current')
axNotificationGslbServiceIpPortType = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationGslbServiceIpPortType.setStatus('current')
axNotificationGslbZoneName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationGslbZoneName.setStatus('current')
axNotificationGslbZoneServiceProto = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationGslbZoneServiceProto.setStatus('current')
axNotificationGslbZoneServiceName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationGslbZoneServiceName.setStatus('current')
axNotificationGslbGroupName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationGslbGroupName.setStatus('current')
axNotificationGslbGroupEntity = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationGslbGroupEntity.setStatus('current')
axNotificationLicensedModuleName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationLicensedModuleName.setStatus('current')
axNotificationShutdownReason = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tooHighSystemTemperature", 1), ("insufficientPowerSupply", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationShutdownReason.setStatus('current')
axNotificationIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 35), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationIpAddressType.setStatus('current')
axNotificationLicenseDisableDuration = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationLicenseDisableDuration.setStatus('current')
axNotificationSslServerCertificateErrCounter = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationSslServerCertificateErrCounter.setStatus('current')
axNotificationServerSelectionFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 38), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationServerSelectionFailureReason.setStatus('current')
axNotificationConnectionTypeName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationConnectionTypeName.setStatus('current')
axNotificationSlbObjectChange = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationSlbObjectChange.setStatus('current')
axNotificationCertificateName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationCertificateName.setStatus('current')
axNotificationDateTime = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 42), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationDateTime.setStatus('current')
axNotificationSLBServerPortType = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("tcp", 2), ("udp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationSLBServerPortType.setStatus('current')
axNotificationPartitionResourceName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationPartitionResourceName.setStatus('current')
axNotificationPartitionResourceUsageLevel = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("below", 1), ("above", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationPartitionResourceUsageLevel.setStatus('current')
axNotificationTacasServerHost = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 46), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationTacasServerHost.setStatus('current')
axNotificationUpDown = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationUpDown.setStatus('current')
axNotificationTrueFalse = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationTrueFalse.setStatus('current')
axNotificationLsnIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 50), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationLsnIpAddress.setStatus('current')
axNotificationLsnProtoType = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5))).clone(namedValues=NamedValues(("tcp", 2), ("udp", 3), ("icmp", 4), ("icmpV6", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationLsnProtoType.setStatus('current')
axNotificationLsnCurrentUsage = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationLsnCurrentUsage.setStatus('current')
axNotificationLsnPoolName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 53), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationLsnPoolName.setStatus('current')
axNotificationLsnExceededTimes = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationLsnExceededTimes.setStatus('current')
axNotificationLsnFixedNatPortMappingFileName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 55), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationLsnFixedNatPortMappingFileName.setStatus('current')
axNotificationLsnFixedNatPortMappingFileChangeType = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("create", 1), ("delete", 2), ("reconfigure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationLsnFixedNatPortMappingFileChangeType.setStatus('current')
axNotificationOldVcsState = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("vmasterCandidate", 0), ("activatingSlave", 1), ("vBlade", 2), ("vMaster", 3), ("vMasterTakeover", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationOldVcsState.setStatus('current')
axNotificationNewVcsState = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("vmasterCandidate", 0), ("activatingSlave", 1), ("vBlade", 2), ("vMaster", 3), ("vMasterTakeover", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axNotificationNewVcsState.setStatus('current')
axSystemStart = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 1))
if mibBuilder.loadTexts: axSystemStart.setStatus('current')
axSystemShutdown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 2))
if mibBuilder.loadTexts: axSystemShutdown.setStatus('current')
axSystemTempHigh = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 3)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationConfiguredThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUsage"))
if mibBuilder.loadTexts: axSystemTempHigh.setStatus('current')
axFan1Failure = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 4))
if mibBuilder.loadTexts: axFan1Failure.setStatus('deprecated')
axFan2Failure = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 5))
if mibBuilder.loadTexts: axFan2Failure.setStatus('deprecated')
axFan3Failure = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 6))
if mibBuilder.loadTexts: axFan3Failure.setStatus('deprecated')
axUpperPowerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 9))
if mibBuilder.loadTexts: axUpperPowerSupplyFailure.setStatus('deprecated')
axLowerPowerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 10))
if mibBuilder.loadTexts: axLowerPowerSupplyFailure.setStatus('deprecated')
axPrimaryHardDiskFailure = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 11))
if mibBuilder.loadTexts: axPrimaryHardDiskFailure.setStatus('current')
axSecondaryHardDiskFailure = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 12))
if mibBuilder.loadTexts: axSecondaryHardDiskFailure.setStatus('current')
axHardDiskUsageHigh = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 13))
if mibBuilder.loadTexts: axHardDiskUsageHigh.setStatus('current')
axMemoryUsageHigh = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 14))
if mibBuilder.loadTexts: axMemoryUsageHigh.setStatus('current')
axSystemRestart = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 15))
if mibBuilder.loadTexts: axSystemRestart.setStatus('current')
axSystemDropPacketEvent = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 16)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationDroppedPackets"))
if mibBuilder.loadTexts: axSystemDropPacketEvent.setStatus('current')
axSystemRelieveDropPacketEvent = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 17)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationDroppedPackets"))
if mibBuilder.loadTexts: axSystemRelieveDropPacketEvent.setStatus('current')
axSystemControlCpuHigh = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 18)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationConfiguredThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUsage"))
if mibBuilder.loadTexts: axSystemControlCpuHigh.setStatus('current')
axSystemDataCpuHigh = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 19)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationConfiguredThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUsage"))
if mibBuilder.loadTexts: axSystemDataCpuHigh.setStatus('current')
axSystemFanFailure = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 20)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationFanName"))
if mibBuilder.loadTexts: axSystemFanFailure.setStatus('current')
axSystemPowerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 21)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationPowerSupplyName"))
if mibBuilder.loadTexts: axSystemPowerSupplyFailure.setStatus('current')
axSystemLicenseRequired = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 22)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationLicensedModuleName"))
if mibBuilder.loadTexts: axSystemLicenseRequired.setStatus('current')
axSystemLicenseLoadSuccessful = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 23)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationLicensedModuleName"))
if mibBuilder.loadTexts: axSystemLicenseLoadSuccessful.setStatus('current')
axSystemLicenseExpired = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 24)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationLicensedModuleName"))
if mibBuilder.loadTexts: axSystemLicenseExpired.setStatus('current')
axSystemShutdownForReason = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 25)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationShutdownReason"))
if mibBuilder.loadTexts: axSystemShutdownForReason.setStatus('current')
axFileSystemBecomeReadOnly = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 26))
if mibBuilder.loadTexts: axFileSystemBecomeReadOnly.setStatus('current')
axSystemLicensedModuleDisabledForDuration = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 27)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationLicensedModuleName"), ("A10-AX-NOTIFICATIONS", "axNotificationLicenseDisableDuration"))
if mibBuilder.loadTexts: axSystemLicensedModuleDisabledForDuration.setStatus('current')
axSystemControlCpuBecomeNormal = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 28)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationConfiguredThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUsage"))
if mibBuilder.loadTexts: axSystemControlCpuBecomeNormal.setStatus('current')
axSystemDataCpuBecomeNormal = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 29)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationConfiguredThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUsage"))
if mibBuilder.loadTexts: axSystemDataCpuBecomeNormal.setStatus('current')
axSystemTempBecomeNormal = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 30)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationConfiguredThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUsage"))
if mibBuilder.loadTexts: axSystemTempBecomeNormal.setStatus('current')
axHardDiskUsageBecomeNormal = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 31))
if mibBuilder.loadTexts: axHardDiskUsageBecomeNormal.setStatus('current')
axMemoryUsageBecomeNormal = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 32))
if mibBuilder.loadTexts: axMemoryUsageBecomeNormal.setStatus('current')
axSystemFanRecover = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 33)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationFanName"))
if mibBuilder.loadTexts: axSystemFanRecover.setStatus('current')
axSystemPowerSupplyRecover = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 34)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationPowerSupplyName"))
if mibBuilder.loadTexts: axSystemPowerSupplyRecover.setStatus('current')
axSystemConnectionResourceHigh = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 35)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationConnectionTypeName"), ("A10-AX-NOTIFICATIONS", "axNotificationConfiguredThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUsage"))
if mibBuilder.loadTexts: axSystemConnectionResourceHigh.setStatus('current')
axSystemConnectionResourceBecomeNormal = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 36)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationConnectionTypeName"), ("A10-AX-NOTIFICATIONS", "axNotificationConfiguredThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUsage"))
if mibBuilder.loadTexts: axSystemConnectionResourceBecomeNormal.setStatus('current')
axSystemSmpResourceHigh = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 37)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationConnectionTypeName"), ("A10-AX-NOTIFICATIONS", "axNotificationConfiguredThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUsage"))
if mibBuilder.loadTexts: axSystemSmpResourceHigh.setStatus('current')
axSystemSmpResourceBecomeNormal = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 38)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationConnectionTypeName"), ("A10-AX-NOTIFICATIONS", "axNotificationConfiguredThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUsage"))
if mibBuilder.loadTexts: axSystemSmpResourceBecomeNormal.setStatus('current')
axTacacsMonitorServerUpDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 39)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationTacasServerHost"), ("A10-AX-NOTIFICATIONS", "axNotificationUpDown"))
if mibBuilder.loadTexts: axTacacsMonitorServerUpDown.setStatus('current')
axHighPrioritySyslog = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 1, 41)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"))
if mibBuilder.loadTexts: axHighPrioritySyslog.setStatus('current')
axHAStandby = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 1)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationHAGroup"))
if mibBuilder.loadTexts: axHAStandby.setStatus('current')
axHAActive = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 2)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationHAGroup"))
if mibBuilder.loadTexts: axHAActive.setStatus('current')
axHAActiveActive = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 3)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationHAGroup"))
if mibBuilder.loadTexts: axHAActiveActive.setStatus('deprecated')
axServiceDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 4)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"))
if mibBuilder.loadTexts: axServiceDown.setStatus('current')
axServiceUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 5)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"))
if mibBuilder.loadTexts: axServiceUp.setStatus('current')
axServerDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 6)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"))
if mibBuilder.loadTexts: axServerDown.setStatus('current')
axServerUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 7)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"))
if mibBuilder.loadTexts: axServerUp.setStatus('current')
axServerConnLimit = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 8)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBCurConns"))
if mibBuilder.loadTexts: axServerConnLimit.setStatus('current')
axServerConnResume = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 9)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBCurConns"))
if mibBuilder.loadTexts: axServerConnResume.setStatus('current')
axServiceConnLimit = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 10)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBCurConns"))
if mibBuilder.loadTexts: axServiceConnLimit.setStatus('current')
axServiceConnResume = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 11)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBCurConns"))
if mibBuilder.loadTexts: axServiceConnResume.setStatus('current')
axVirtualServerPortDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 12)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServer"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServerPort"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServerPortType"))
if mibBuilder.loadTexts: axVirtualServerPortDown.setStatus('current')
axVirtualServerPortUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 13)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServer"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServerPort"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServerPortType"))
if mibBuilder.loadTexts: axVirtualServerPortUp.setStatus('current')
axApplicationBufferReachLimit = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 14)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationConfiguredThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUsage"))
if mibBuilder.loadTexts: axApplicationBufferReachLimit.setStatus('current')
axVirtualServerPortReachConnLimit = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 15)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"), ("A10-AX-NOTIFICATIONS", "axNotificationConnLimit"))
if mibBuilder.loadTexts: axVirtualServerPortReachConnLimit.setStatus('current')
axVirtualServerPortReachConnRateLimit = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 16)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"), ("A10-AX-NOTIFICATIONS", "axNotificationConnLimit"))
if mibBuilder.loadTexts: axVirtualServerPortReachConnRateLimit.setStatus('current')
axVirtualServerReachConnLimit = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 17)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationConnLimit"))
if mibBuilder.loadTexts: axVirtualServerReachConnLimit.setStatus('current')
axVirtualServerReachConnRateLimit = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 18)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationConnLimit"))
if mibBuilder.loadTexts: axVirtualServerReachConnRateLimit.setStatus('current')
axServerConnRateLimit = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 19)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBCurConns"))
if mibBuilder.loadTexts: axServerConnRateLimit.setStatus('current')
axServiceConnRateLimit = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 20)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBCurConns"))
if mibBuilder.loadTexts: axServiceConnRateLimit.setStatus('current')
axServiceGroupMemberEnabledForNewConn = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 21)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServiceGroupName"))
if mibBuilder.loadTexts: axServiceGroupMemberEnabledForNewConn.setStatus('current')
axServiceGroupMemberDisabledForNewConn = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 22)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServiceGroupName"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"))
if mibBuilder.loadTexts: axServiceGroupMemberDisabledForNewConn.setStatus('current')
axVrrpActive = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 23)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"), ("A10-AX-NOTIFICATIONS", "axNotificationVrid"))
if mibBuilder.loadTexts: axVrrpActive.setStatus('current')
axVrrpStandby = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 24)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"), ("A10-AX-NOTIFICATIONS", "axNotificationVrid"))
if mibBuilder.loadTexts: axVrrpStandby.setStatus('current')
axSslServerCertificateErr = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 25)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSslServerCertificateErrCounter"))
if mibBuilder.loadTexts: axSslServerCertificateErr.setStatus('current')
axServerSelectionFailure = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 26)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"), ("A10-AX-NOTIFICATIONS", "axNotificationServerSelectionFailureReason"))
if mibBuilder.loadTexts: axServerSelectionFailure.setStatus('current')
axVirtualServerUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 27)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServer"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axVirtualServerUp.setStatus('current')
axVirtualServerDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 28)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServer"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axVirtualServerDown.setStatus('current')
axServerDisabled = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 29)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationTrueFalse"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axServerDisabled.setStatus('current')
axServiceGroupUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 30)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServiceGroupName"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServerPortType"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axServiceGroupUp.setStatus('current')
axServiceGroupDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 31)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServiceGroupName"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServerPortType"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axServiceGroupDown.setStatus('current')
axServiceGroupMemberUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 32)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServiceGroupName"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axServiceGroupMemberUp.setStatus('current')
axServiceGroupMemberDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 33)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServiceGroupName"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axServiceGroupMemberDown.setStatus('current')
axVcsStateChange = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 34)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationOldVcsState"), ("A10-AX-NOTIFICATIONS", "axNotificationNewVcsState"))
if mibBuilder.loadTexts: axVcsStateChange.setStatus('current')
axGatewayUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 35)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGatewayUp.setStatus('current')
axGatewayDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 2, 36)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGatewayDown.setStatus('current')
axNetworkTrunkPortsThreshold = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 3, 1)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationTrunkID"), ("A10-AX-NOTIFICATIONS", "axNotificationPortThreshold"), ("A10-AX-NOTIFICATIONS", "axNotificationCurrentUpPorts"))
if mibBuilder.loadTexts: axNetworkTrunkPortsThreshold.setStatus('current')
axSyslogTrapPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 22610, 2, 4, 2, 100))
if mibBuilder.loadTexts: axSyslogTrapPrefix.setStatus('current')
axSyslogTrap = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 2, 100, 1)).setObjects(("A10-AX-NOTIFICATIONS", "axSyslogModuleName"), ("A10-AX-NOTIFICATIONS", "axSyslogPriority"), ("A10-AX-NOTIFICATIONS", "axSyslogMsg"))
if mibBuilder.loadTexts: axSyslogTrap.setStatus('current')
axSyslogTrapObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 22610, 2, 4, 2, 101))
if mibBuilder.loadTexts: axSyslogTrapObjects.setStatus('current')
axSyslogModuleName = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 2, 101, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: axSyslogModuleName.setStatus('current')
axSyslogPriority = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 2, 101, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: axSyslogPriority.setStatus('current')
axSyslogMsg = MibScalar((1, 3, 6, 1, 4, 1, 22610, 2, 4, 2, 101, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1023))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: axSyslogMsg.setStatus('current')
axGslbSiteAdminEnabled = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 1)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbSiteName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbSiteAdminEnabled.setStatus('current')
axGslbSiteAdminDisabled = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 2)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbSiteName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbSiteAdminDisabled.setStatus('current')
axGslbSiteOperationalStateUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 3)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbSiteName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbSiteOperationalStateUp.setStatus('current')
axGslbSiteOperationalStateDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 4)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbSiteName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbSiteOperationalStateDown.setStatus('current')
axGslbSiteSlbDeviceStateUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 5)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbSiteName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbSiteSlbDeviceName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbSiteSlbDeviceStateUp.setStatus('current')
axGslbSiteSlbDeviceStateDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 6)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbSiteName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbSiteSlbDeviceName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbSiteSlbDeviceStateDown.setStatus('current')
axGslbServiceIpAdminEnabled = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 9)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpAddr"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbServiceIpAdminEnabled.setStatus('current')
axGslbServiceIpAdminDisabled = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 10)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpAddr"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbServiceIpAdminDisabled.setStatus('current')
axGslbServiceIpOperationalStateUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 11)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpAddr"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbServiceIpOperationalStateUp.setStatus('current')
axGslbServiceIpOperationalStateDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 12)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpAddr"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbServiceIpOperationalStateDown.setStatus('current')
axGslbServiceIpPortStateUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 13)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpAddr"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpPortType"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbServiceIpPortStateUp.setStatus('current')
axGslbServiceIpPortStateDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 14)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpAddr"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbServiceIpPortType"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbServiceIpPortStateDown.setStatus('current')
axGslbZoneAdminEnabled = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 15)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbZoneAdminEnabled.setStatus('current')
axGslbZoneAdminDisabled = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 16)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbZoneAdminDisabled.setStatus('current')
axGslbZoneOperationalStateUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 17)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbZoneOperationalStateUp.setStatus('current')
axGslbZoneOperationalStateDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 18)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbZoneOperationalStateDown.setStatus('current')
axGslbZoneServiceAdminEnabled = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 19)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneServiceProto"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneServiceName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbZoneServiceAdminEnabled.setStatus('current')
axGslbZoneServiceAdminDisabled = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 20)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneServiceProto"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneServiceName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbZoneServiceAdminDisabled.setStatus('current')
axGslbZoneServiceOperationalStateUp = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 21)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneServiceProto"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneServiceName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbZoneServiceOperationalStateUp.setStatus('current')
axGslbZoneServiceOperationalStateDown = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 22)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneServiceProto"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbZoneServiceName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axGslbZoneServiceOperationalStateDown.setStatus('current')
axGslbGroupBecomeMaster = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 23)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbGroupName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbGroupEntity"))
if mibBuilder.loadTexts: axGslbGroupBecomeMaster.setStatus('current')
axGslbGroupRemovedMaster = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 24)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbGroupName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbGroupEntity"))
if mibBuilder.loadTexts: axGslbGroupRemovedMaster.setStatus('current')
axGslbGroupMemberJoinGroup = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 25)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbGroupName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbGroupEntity"))
if mibBuilder.loadTexts: axGslbGroupMemberJoinGroup.setStatus('current')
axGslbGroupMemberLeaveGroup = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 5, 26)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbGroupName"), ("A10-AX-NOTIFICATIONS", "axNotificationGslbGroupEntity"))
if mibBuilder.loadTexts: axGslbGroupMemberLeaveGroup.setStatus('current')
axVirtualServerCreateDelete = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 6, 1)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServer"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"), ("A10-AX-NOTIFICATIONS", "axNotificationSlbObjectChange"))
if mibBuilder.loadTexts: axVirtualServerCreateDelete.setStatus('current')
axVirtualServerPortCreateDelete = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 6, 2)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServer"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServerPort"), ("A10-AX-NOTIFICATIONS", "axNotificationVirtualServerPortType"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"), ("A10-AX-NOTIFICATIONS", "axNotificationSlbObjectChange"))
if mibBuilder.loadTexts: axVirtualServerPortCreateDelete.setStatus('current')
axServerCreateDelete = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 6, 3)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"), ("A10-AX-NOTIFICATIONS", "axNotificationSlbObjectChange"))
if mibBuilder.loadTexts: axServerCreateDelete.setStatus('current')
axServerPortCreateDelete = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 6, 4)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServer"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBPort"), ("A10-AX-NOTIFICATIONS", "axNotificationSLBServerPortType"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"), ("A10-AX-NOTIFICATIONS", "axNotificationSlbObjectChange"))
if mibBuilder.loadTexts: axServerPortCreateDelete.setStatus('current')
axSslCertificateCreateDelete = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 6, 5)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationCertificateName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"), ("A10-AX-NOTIFICATIONS", "axNotificationSlbObjectChange"))
if mibBuilder.loadTexts: axSslCertificateCreateDelete.setStatus('current')
axSslCertificateExpiring = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 6, 6)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationCertificateName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"), ("A10-AX-NOTIFICATIONS", "axNotificationDateTime"))
if mibBuilder.loadTexts: axSslCertificateExpiring.setStatus('current')
axPartitionResourceUsageWarning = NotificationType((1, 3, 6, 1, 4, 1, 22610, 2, 4, 3, 12, 2, 6, 7)).setObjects(("A10-AX-NOTIFICATIONS", "axNotificationMsg"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionResourceName"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionResourceUsageLevel"), ("A10-AX-NOTIFICATIONS", "axNotificationPartitionName"))
if mibBuilder.loadTexts: axPartitionResourceUsageWarning.setStatus('current')
mibBuilder.exportSymbols("A10-AX-NOTIFICATIONS", axGslbServiceIpPortStateUp=axGslbServiceIpPortStateUp, axNotificationIpAddressType=axNotificationIpAddressType, axSystemControlCpuHigh=axSystemControlCpuHigh, axVrrpStandby=axVrrpStandby, axGslbZoneOperationalStateDown=axGslbZoneOperationalStateDown, axNotificationVirtualServerPort=axNotificationVirtualServerPort, axServiceUp=axServiceUp, axHardDiskUsageBecomeNormal=axHardDiskUsageBecomeNormal, axGslbZoneServiceAdminEnabled=axGslbZoneServiceAdminEnabled, axNotificationTrueFalse=axNotificationTrueFalse, axNotificationLsnProtoType=axNotificationLsnProtoType, axNotificationGslbGroupEntity=axNotificationGslbGroupEntity, axSystemPowerSupplyRecover=axSystemPowerSupplyRecover, axSystemConnectionResourceHigh=axSystemConnectionResourceHigh, axGslbZoneAdminEnabled=axGslbZoneAdminEnabled, axNetworkTrunkPortsThreshold=axNetworkTrunkPortsThreshold, axSystemStart=axSystemStart, axSecondaryHardDiskFailure=axSecondaryHardDiskFailure, axSystemDropPacketEvent=axSystemDropPacketEvent, axSystemShutdown=axSystemShutdown, axNotificationSslServerCertificateErrCounter=axNotificationSslServerCertificateErrCounter, axNotificationSLBCurConns=axNotificationSLBCurConns, axNotificationLsnPoolName=axNotificationLsnPoolName, axHAActive=axHAActive, axSystemPowerSupplyFailure=axSystemPowerSupplyFailure, axSystemLicenseRequired=axSystemLicenseRequired, axHighPrioritySyslog=axHighPrioritySyslog, axNotificationConnLimit=axNotificationConnLimit, axSystemSmpResourceHigh=axSystemSmpResourceHigh, axGslbZoneServiceOperationalStateDown=axGslbZoneServiceOperationalStateDown, axFileSystemBecomeReadOnly=axFileSystemBecomeReadOnly, axVirtualServerPortReachConnRateLimit=axVirtualServerPortReachConnRateLimit, axVirtualServerCreateDelete=axVirtualServerCreateDelete, axNotificationPartitionResourceUsageLevel=axNotificationPartitionResourceUsageLevel, axSystemRelieveDropPacketEvent=axSystemRelieveDropPacketEvent, axGslbServiceIpAdminEnabled=axGslbServiceIpAdminEnabled, axServerPortCreateDelete=axServerPortCreateDelete, axNotificationOldVcsState=axNotificationOldVcsState, axServerCreateDelete=axServerCreateDelete, axGslbNotifications=axGslbNotifications, axNotificationPortThreshold=axNotificationPortThreshold, axSystemControlCpuBecomeNormal=axSystemControlCpuBecomeNormal, axNotificationSlbObjectChange=axNotificationSlbObjectChange, axServerConnRateLimit=axServerConnRateLimit, axGslbServiceIpOperationalStateUp=axGslbServiceIpOperationalStateUp, axSyslogModuleName=axSyslogModuleName, axNotificationTacasServerHost=axNotificationTacasServerHost, axNotificationGslbServiceIpAddr=axNotificationGslbServiceIpAddr, axGslbSiteSlbDeviceStateUp=axGslbSiteSlbDeviceStateUp, axSystemDataCpuHigh=axSystemDataCpuHigh, axSslServerCertificateErr=axSslServerCertificateErr, axVirtualServerReachConnLimit=axVirtualServerReachConnLimit, axNotificationLsnCurrentUsage=axNotificationLsnCurrentUsage, axNotificationLsnExceededTimes=axNotificationLsnExceededTimes, axSystemRestart=axSystemRestart, axServiceConnRateLimit=axServiceConnRateLimit, axNotificationCurrentUsage=axNotificationCurrentUsage, axServiceGroupMemberEnabledForNewConn=axServiceGroupMemberEnabledForNewConn, axServiceGroupDown=axServiceGroupDown, axGslbServiceIpAdminDisabled=axGslbServiceIpAdminDisabled, axGslbGroupRemovedMaster=axGslbGroupRemovedMaster, axHAActiveActive=axHAActiveActive, axNotificationSLBPort=axNotificationSLBPort, axNotificationGslbSiteIpServerAddr=axNotificationGslbSiteIpServerAddr, axHAStandby=axHAStandby, axPartitionResourceUsageWarning=axPartitionResourceUsageWarning, axNotificationSLBServer=axNotificationSLBServer, axNotificationGslbGroupName=axNotificationGslbGroupName, axGslbGroupMemberLeaveGroup=axGslbGroupMemberLeaveGroup, axNotificationLicenseDisableDuration=axNotificationLicenseDisableDuration, axNotificationGslbServiceIpPortType=axNotificationGslbServiceIpPortType, axSyslogPriority=axSyslogPriority, axSslCertificateCreateDelete=axSslCertificateCreateDelete, axSystemLicenseLoadSuccessful=axSystemLicenseLoadSuccessful, axSystemShutdownForReason=axSystemShutdownForReason, axNotificationGslbSiteName=axNotificationGslbSiteName, axFan1Failure=axFan1Failure, axGslbServiceIpPortStateDown=axGslbServiceIpPortStateDown, axLowerPowerSupplyFailure=axLowerPowerSupplyFailure, axPrimaryHardDiskFailure=axPrimaryHardDiskFailure, axGslbSiteOperationalStateDown=axGslbSiteOperationalStateDown, axServerConnLimit=axServerConnLimit, axVirtualServerPortCreateDelete=axVirtualServerPortCreateDelete, axVirtualServerPortUp=axVirtualServerPortUp, axSslCertificateExpiring=axSslCertificateExpiring, axGslbGroupMemberJoinGroup=axGslbGroupMemberJoinGroup, axServiceConnLimit=axServiceConnLimit, axGslbZoneAdminDisabled=axGslbZoneAdminDisabled, axNotificationDroppedPackets=axNotificationDroppedPackets, axServerUp=axServerUp, axSystemTempBecomeNormal=axSystemTempBecomeNormal, axNotifications=axNotifications, axVrrpActive=axVrrpActive, axSystemDataCpuBecomeNormal=axSystemDataCpuBecomeNormal, axSystemSmpResourceBecomeNormal=axSystemSmpResourceBecomeNormal, axServiceGroupMemberUp=axServiceGroupMemberUp, axVirtualServerDown=axVirtualServerDown, axVirtualServerReachConnRateLimit=axVirtualServerReachConnRateLimit, axUpperPowerSupplyFailure=axUpperPowerSupplyFailure, axServiceGroupMemberDown=axServiceGroupMemberDown, axGslbZoneOperationalStateUp=axGslbZoneOperationalStateUp, axNotificationPartitionName=axNotificationPartitionName, axGslbServiceIpOperationalStateDown=axGslbServiceIpOperationalStateDown, axServerDown=axServerDown, axSystemNotifications=axSystemNotifications, axGslbGroupBecomeMaster=axGslbGroupBecomeMaster, axTacacsMonitorServerUpDown=axTacacsMonitorServerUpDown, axSystemLicenseExpired=axSystemLicenseExpired, axGslbSiteSlbDeviceStateDown=axGslbSiteSlbDeviceStateDown, axGslbZoneServiceAdminDisabled=axGslbZoneServiceAdminDisabled, axSystemFanFailure=axSystemFanFailure, axMemoryUsageBecomeNormal=axMemoryUsageBecomeNormal, axNotificationConnectionTypeName=axNotificationConnectionTypeName, axVirtualServerPortDown=axVirtualServerPortDown, axNotificationVirtualServer=axNotificationVirtualServer, axSyslogMsg=axSyslogMsg, axGslbSiteOperationalStateUp=axGslbSiteOperationalStateUp, axNotificationGslbSiteSlbDeviceName=axNotificationGslbSiteSlbDeviceName, axSyslogTrapObjects=axSyslogTrapObjects, axNotificationMsg=axNotificationMsg, axNetworkNotifications=axNetworkNotifications, axGslbSiteAdminDisabled=axGslbSiteAdminDisabled, axVirtualServerPortReachConnLimit=axVirtualServerPortReachConnLimit, axNotificationSLBServiceGroupName=axNotificationSLBServiceGroupName, axNotificationPartitionResourceName=axNotificationPartitionResourceName, axGatewayUp=axGatewayUp, axNotificationSLBServerPortType=axNotificationSLBServerPortType, axServerConnResume=axServerConnResume, axServiceDown=axServiceDown, axNotificationCurrentUpPorts=axNotificationCurrentUpPorts, axNotificationNewVcsState=axNotificationNewVcsState, axNotificationShutdownReason=axNotificationShutdownReason, axGatewayDown=axGatewayDown, axNotificationDateTime=axNotificationDateTime, axFan2Failure=axFan2Failure, axNotificationUpDown=axNotificationUpDown, axServiceGroupMemberDisabledForNewConn=axServiceGroupMemberDisabledForNewConn, axSlbNotifications=axSlbNotifications, axNotificationGslbZoneServiceName=axNotificationGslbZoneServiceName, axVcsStateChange=axVcsStateChange, axNotificationServerSelectionFailureReason=axNotificationServerSelectionFailureReason, axHardDiskUsageHigh=axHardDiskUsageHigh, axNotificationTrunkID=axNotificationTrunkID, axVirtualServerUp=axVirtualServerUp, axSystemLicensedModuleDisabledForDuration=axSystemLicensedModuleDisabledForDuration, axSyslogTrapPrefix=axSyslogTrapPrefix, axGslbZoneServiceOperationalStateUp=axGslbZoneServiceOperationalStateUp, axSystemConnectionResourceBecomeNormal=axSystemConnectionResourceBecomeNormal, axSyslogTrap=axSyslogTrap, axNotificationObjects=axNotificationObjects, axMemoryUsageHigh=axMemoryUsageHigh, axServiceConnResume=axServiceConnResume, axNotificationCertificateName=axNotificationCertificateName, axNotificationVirtualServerPortType=axNotificationVirtualServerPortType, axNotificationFanName=axNotificationFanName, axNotificationHAGroup=axNotificationHAGroup, axApplicationBufferReachLimit=axApplicationBufferReachLimit, axNotificationVrid=axNotificationVrid, axNotificationLicensedModuleName=axNotificationLicensedModuleName, axNotificationPowerSupplyName=axNotificationPowerSupplyName, axAppNotifications=axAppNotifications, axNotificationGslbServiceIpName=axNotificationGslbServiceIpName, axSystemTempHigh=axSystemTempHigh, axServerSelectionFailure=axServerSelectionFailure, axGslbSiteAdminEnabled=axGslbSiteAdminEnabled, axNotificationLsnIpAddress=axNotificationLsnIpAddress, axServiceGroupUp=axServiceGroupUp, axNotificationConfiguredThreshold=axNotificationConfiguredThreshold, axNotificationGslbZoneServiceProto=axNotificationGslbZoneServiceProto, axSystemFanRecover=axSystemFanRecover, axServerDisabled=axServerDisabled, axNotificationGslbZoneName=axNotificationGslbZoneName, axNotificationLsnFixedNatPortMappingFileChangeType=axNotificationLsnFixedNatPortMappingFileChangeType, axNotificationLsnFixedNatPortMappingFileName=axNotificationLsnFixedNatPortMappingFileName, axFan3Failure=axFan3Failure, axNotificationPartitionId=axNotificationPartitionId)
