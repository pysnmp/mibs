#
# PySNMP MIB module AP-DIAMETERAUTH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/oracle/AP-DIAMETERAUTH-MIB
# Produced by pysmi-1.1.12 at Tue May 28 13:40:06 2024
# On host fv-az973-743 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
acmepacketMgmt, = mibBuilder.importSymbols("ACMEPACKET-SMI", "acmepacketMgmt")
ApTransportType, = mibBuilder.importSymbols("ACMEPACKET-TC", "ApTransportType")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
InetAddress, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressType")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, Counter64, ObjectIdentity, Integer32, TimeTicks, Gauge32, iso, NotificationType, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "Counter64", "ObjectIdentity", "Integer32", "TimeTicks", "Gauge32", "iso", "NotificationType", "Unsigned32", "MibIdentifier")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
apDiameterAuthServerModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9148, 3, 20))
apDiameterAuthServerModule.setRevisions(('2017-01-19 00:00', '2017-02-09 00:00',))
if mibBuilder.loadTexts: apDiameterAuthServerModule.setLastUpdated('201702090000Z')
if mibBuilder.loadTexts: apDiameterAuthServerModule.setOrganization('Oracle Communications')
apDiamAuthServerMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1))
apDiamAuthStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1), )
if mibBuilder.loadTexts: apDiamAuthStatsTable.setStatus('current')
apDiamAuthStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1), ).setIndexNames((0, "AP-DIAMETERAUTH-MIB", "apDiamAuthInterfaceType"), (0, "AP-DIAMETERAUTH-MIB", "apDiamAuthServerAddress"))
if mibBuilder.loadTexts: apDiamAuthStatsEntry.setStatus('current')
apDiamAuthInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthInterfaceType.setStatus('current')
apDiamAuthServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthServerAddress.setStatus('current')
apDiamAuthCapExchReqSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthCapExchReqSent.setStatus('current')
apDiamAuthCapExchReqTimedout = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthCapExchReqTimedout.setStatus('current')
apDiamAuthCapExchAnsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthCapExchAnsRcvd.setStatus('current')
apDiamAuthCapExchReqRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthCapExchReqRcvd.setStatus('current')
apDiamAuthCapExchAnsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthCapExchAnsSent.setStatus('current')
apDiamAuthDWDReqSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthDWDReqSent.setStatus('current')
apDiamAuthDWDReqTimedout = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthDWDReqTimedout.setStatus('current')
apDiamAuthDWDAnsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthDWDAnsRcvd.setStatus('current')
apDiamAuthDWDReqRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthDWDReqRcvd.setStatus('current')
apDiamAuthDWDAnsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthDWDAnsSent.setStatus('current')
apDiamAuthDisconPeerReqSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthDisconPeerReqSent.setStatus('current')
apDiamAuthDisconPeerReqTimedout = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthDisconPeerReqTimedout.setStatus('current')
apDiamAuthDisconPeerAnsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthDisconPeerAnsRcvd.setStatus('current')
apDiamAuthDisconPeerReqRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthDisconPeerReqRcvd.setStatus('current')
apDiamAuthDisconPeerAnsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthDisconPeerAnsSent.setStatus('current')
apDiamAuthSessTermReqSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthSessTermReqSent.setStatus('current')
apDiamAuthSessTermReqTimedout = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthSessTermReqTimedout.setStatus('current')
apDiamAuthSessTermAnsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthSessTermAnsRcvd.setStatus('current')
apDiamAuthAbortSessReqRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthAbortSessReqRcvd.setStatus('current')
apDiamAuthAbortSessAnsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthAbortSessAnsSent.setStatus('current')
apDiamAuthEapReqSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthEapReqSent.setStatus('current')
apDiamAuthEapReqTimedout = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthEapReqTimedout.setStatus('current')
apDiamAuthEapAnsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthEapAnsRcvd.setStatus('current')
apDiamAuthEapAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthEapAccepts.setStatus('current')
apDiamAuthEapRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthEapRejects.setStatus('current')
apDiamAuthActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthActiveSessions.setStatus('current')
apDiamAuthServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("initial", 0), ("tcpConInProgress", 1), ("tcpConnComplete", 2), ("capexInProgress", 3), ("inService", 4), ("outOfService", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthServerStatus.setStatus('current')
apDiamAuthErrorStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2), )
if mibBuilder.loadTexts: apDiamAuthErrorStatsTable.setStatus('current')
apDiamAuthErrorStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1), )
apDiamAuthStatsEntry.registerAugmentions(("AP-DIAMETERAUTH-MIB", "apDiamAuthErrorStatsEntry"))
apDiamAuthErrorStatsEntry.setIndexNames(*apDiamAuthStatsEntry.getIndexNames())
if mibBuilder.loadTexts: apDiamAuthErrorStatsEntry.setStatus('current')
apDiamAuthUnknownVersionRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthUnknownVersionRcvd.setStatus('current')
apDiamAuthUnknownExchRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthUnknownExchRcvd.setStatus('current')
apDiamAuthNoCommonAppRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthNoCommonAppRcvd.setStatus('current')
apDiamAuthAppUnsuppRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthAppUnsuppRcvd.setStatus('current')
apDiamAuthCommandUnsuppRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthCommandUnsuppRcvd.setStatus('current')
apDiamAuthUnkownPeerRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthUnkownPeerRcvd.setStatus('current')
apDiamAuthUnkownSessIdRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthUnkownSessIdRcvd.setStatus('current')
apDiamAuthUnableToComplyRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthUnableToComplyRcvd.setStatus('current')
apDiamAuthAvpsUnsupportedRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthAvpsUnsupportedRcvd.setStatus('current')
apDiamAuthMissingAvpRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthMissingAvpRcvd.setStatus('current')
apDiamAuthUnknownUsersRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthUnknownUsersRcvd.setStatus('current')
apDiamAuthAuthorizationRejectedRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthAuthorizationRejectedRcvd.setStatus('current')
apDiamAuthRoamingNotAllowedRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthRoamingNotAllowedRcvd.setStatus('current')
apDiamAuthNoNon3gppSubscriptionRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthNoNon3gppSubscriptionRcvd.setStatus('current')
apDiamAuthNoApnSubscriptionRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthNoApnSubscriptionRcvd.setStatus('current')
apDiamAuthRatTypeNotAllowedRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 20, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apDiamAuthRatTypeNotAllowedRcvd.setStatus('current')
apDiamAuthNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3))
apDiamAuthNotifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3, 1))
apDiamAuthNotifPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3, 2))
apDiamAuthNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3, 2, 0))
apDiamAuthServerType = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3, 1, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apDiamAuthServerType.setStatus('current')
apDiamAuthServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3, 1, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apDiamAuthServerAddr.setStatus('current')
apDiamAuthOriginHostType = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3, 1, 3), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apDiamAuthOriginHostType.setStatus('current')
apDiamAuthOriginHostAddr = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3, 1, 4), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apDiamAuthOriginHostAddr.setStatus('current')
apDiamAuthServerPort = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3, 1, 5), InetPortNumber()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apDiamAuthServerPort.setStatus('current')
apDiamAuthOriginRealm = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apDiamAuthOriginRealm.setStatus('current')
apDiamAuthSrvrEstTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3, 2, 0, 1)).setObjects(("AP-DIAMETERAUTH-MIB", "apDiamAuthServerType"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthServerAddr"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthOriginHostType"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthOriginHostAddr"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthServerPort"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthOriginRealm"))
if mibBuilder.loadTexts: apDiamAuthSrvrEstTrap.setStatus('current')
apDiamAuthSrvrDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 20, 3, 2, 0, 2)).setObjects(("AP-DIAMETERAUTH-MIB", "apDiamAuthServerType"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthServerAddr"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthOriginHostType"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthOriginHostAddr"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthServerPort"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthOriginRealm"))
if mibBuilder.loadTexts: apDiamAuthSrvrDownTrap.setStatus('current')
apDiamAuthServerConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 20, 2))
apDiamAuthObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 20, 2, 1))
apDiamAuthStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 20, 2, 1, 1)).setObjects(("AP-DIAMETERAUTH-MIB", "apDiamAuthCapExchReqSent"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthCapExchReqTimedout"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthCapExchAnsRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthCapExchReqRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthCapExchAnsSent"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthDWDReqSent"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthDWDReqTimedout"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthDWDAnsRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthDWDReqRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthDWDAnsSent"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthDisconPeerReqSent"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthDisconPeerReqTimedout"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthDisconPeerAnsRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthDisconPeerReqRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthDisconPeerAnsSent"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthSessTermReqSent"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthSessTermReqTimedout"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthSessTermAnsRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthAbortSessReqRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthAbortSessAnsSent"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthEapReqSent"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthEapReqTimedout"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthEapAnsRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthEapAccepts"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthEapRejects"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthServerStatus"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthActiveSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apDiamAuthStatsGroup = apDiamAuthStatsGroup.setStatus('current')
apDiamAuthErrorStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 20, 2, 1, 2)).setObjects(("AP-DIAMETERAUTH-MIB", "apDiamAuthUnknownVersionRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthUnknownExchRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthNoCommonAppRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthAppUnsuppRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthCommandUnsuppRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthUnkownPeerRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthUnkownSessIdRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthUnableToComplyRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthAvpsUnsupportedRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthMissingAvpRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthUnknownUsersRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthAuthorizationRejectedRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthRoamingNotAllowedRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthNoNon3gppSubscriptionRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthNoApnSubscriptionRcvd"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthRatTypeNotAllowedRcvd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apDiamAuthErrorStatsGroup = apDiamAuthErrorStatsGroup.setStatus('current')
apDiamAuthNotificationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 20, 2, 1, 3)).setObjects(("AP-DIAMETERAUTH-MIB", "apDiamAuthServerType"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthServerAddr"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthOriginHostType"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthOriginHostAddr"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthServerPort"), ("AP-DIAMETERAUTH-MIB", "apDiamAuthOriginRealm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apDiamAuthNotificationGroup = apDiamAuthNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("AP-DIAMETERAUTH-MIB", apDiamAuthErrorStatsGroup=apDiamAuthErrorStatsGroup, apDiamAuthDisconPeerReqRcvd=apDiamAuthDisconPeerReqRcvd, apDiamAuthStatsTable=apDiamAuthStatsTable, apDiamAuthNoNon3gppSubscriptionRcvd=apDiamAuthNoNon3gppSubscriptionRcvd, apDiamAuthServerConformance=apDiamAuthServerConformance, apDiamAuthOriginHostType=apDiamAuthOriginHostType, apDiamAuthUnkownPeerRcvd=apDiamAuthUnkownPeerRcvd, apDiamAuthDisconPeerReqTimedout=apDiamAuthDisconPeerReqTimedout, apDiamAuthSessTermReqSent=apDiamAuthSessTermReqSent, apDiamAuthInterfaceType=apDiamAuthInterfaceType, apDiamAuthDisconPeerReqSent=apDiamAuthDisconPeerReqSent, apDiamAuthDisconPeerAnsSent=apDiamAuthDisconPeerAnsSent, apDiamAuthSrvrDownTrap=apDiamAuthSrvrDownTrap, apDiamAuthServerAddr=apDiamAuthServerAddr, apDiamAuthErrorStatsEntry=apDiamAuthErrorStatsEntry, PYSNMP_MODULE_ID=apDiameterAuthServerModule, apDiamAuthAuthorizationRejectedRcvd=apDiamAuthAuthorizationRejectedRcvd, apDiamAuthUnableToComplyRcvd=apDiamAuthUnableToComplyRcvd, apDiamAuthServerMIBObjects=apDiamAuthServerMIBObjects, apDiamAuthAppUnsuppRcvd=apDiamAuthAppUnsuppRcvd, apDiamAuthRatTypeNotAllowedRcvd=apDiamAuthRatTypeNotAllowedRcvd, apDiamAuthNotificationObjects=apDiamAuthNotificationObjects, apDiamAuthNoCommonAppRcvd=apDiamAuthNoCommonAppRcvd, apDiamAuthNotifications=apDiamAuthNotifications, apDiamAuthServerAddress=apDiamAuthServerAddress, apDiamAuthNoApnSubscriptionRcvd=apDiamAuthNoApnSubscriptionRcvd, apDiamAuthEapReqSent=apDiamAuthEapReqSent, apDiamAuthObjectGroups=apDiamAuthObjectGroups, apDiamAuthEapReqTimedout=apDiamAuthEapReqTimedout, apDiamAuthDWDAnsRcvd=apDiamAuthDWDAnsRcvd, apDiamAuthNotifPrefix=apDiamAuthNotifPrefix, apDiamAuthCapExchAnsSent=apDiamAuthCapExchAnsSent, apDiamAuthEapAnsRcvd=apDiamAuthEapAnsRcvd, apDiamAuthAbortSessReqRcvd=apDiamAuthAbortSessReqRcvd, apDiamAuthRoamingNotAllowedRcvd=apDiamAuthRoamingNotAllowedRcvd, apDiamAuthCapExchReqSent=apDiamAuthCapExchReqSent, apDiamAuthServerPort=apDiamAuthServerPort, apDiamAuthNotificationGroup=apDiamAuthNotificationGroup, apDiamAuthActiveSessions=apDiamAuthActiveSessions, apDiamAuthCommandUnsuppRcvd=apDiamAuthCommandUnsuppRcvd, apDiamAuthEapAccepts=apDiamAuthEapAccepts, apDiamAuthUnknownExchRcvd=apDiamAuthUnknownExchRcvd, apDiamAuthDWDReqTimedout=apDiamAuthDWDReqTimedout, apDiamAuthSessTermAnsRcvd=apDiamAuthSessTermAnsRcvd, apDiamAuthOriginRealm=apDiamAuthOriginRealm, apDiamAuthCapExchReqRcvd=apDiamAuthCapExchReqRcvd, apDiamAuthOriginHostAddr=apDiamAuthOriginHostAddr, apDiamAuthAbortSessAnsSent=apDiamAuthAbortSessAnsSent, apDiamAuthDWDReqRcvd=apDiamAuthDWDReqRcvd, apDiamAuthUnknownUsersRcvd=apDiamAuthUnknownUsersRcvd, apDiamAuthNotifObjects=apDiamAuthNotifObjects, apDiamAuthStatsGroup=apDiamAuthStatsGroup, apDiamAuthCapExchReqTimedout=apDiamAuthCapExchReqTimedout, apDiamAuthSessTermReqTimedout=apDiamAuthSessTermReqTimedout, apDiameterAuthServerModule=apDiameterAuthServerModule, apDiamAuthAvpsUnsupportedRcvd=apDiamAuthAvpsUnsupportedRcvd, apDiamAuthErrorStatsTable=apDiamAuthErrorStatsTable, apDiamAuthEapRejects=apDiamAuthEapRejects, apDiamAuthUnkownSessIdRcvd=apDiamAuthUnkownSessIdRcvd, apDiamAuthMissingAvpRcvd=apDiamAuthMissingAvpRcvd, apDiamAuthServerType=apDiamAuthServerType, apDiamAuthServerStatus=apDiamAuthServerStatus, apDiamAuthSrvrEstTrap=apDiamAuthSrvrEstTrap, apDiamAuthDisconPeerAnsRcvd=apDiamAuthDisconPeerAnsRcvd, apDiamAuthUnknownVersionRcvd=apDiamAuthUnknownVersionRcvd, apDiamAuthCapExchAnsRcvd=apDiamAuthCapExchAnsRcvd, apDiamAuthDWDReqSent=apDiamAuthDWDReqSent, apDiamAuthDWDAnsSent=apDiamAuthDWDAnsSent, apDiamAuthStatsEntry=apDiamAuthStatsEntry)
