#
# PySNMP MIB module EIP-MON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/efficientip/EIP-MON-MIB
# Produced by pysmi-1.1.12 at Tue Jun 18 01:38:03 2024
# On host fv-az1446-447 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, IpAddress, ModuleIdentity, Unsigned32, Integer32, Bits, MibIdentifier, NotificationType, iso, TimeTicks, ObjectIdentity, Counter64, enterprises, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "ModuleIdentity", "Unsigned32", "Integer32", "Bits", "MibIdentifier", "NotificationType", "iso", "TimeTicks", "ObjectIdentity", "Counter64", "enterprises", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
eip = ModuleIdentity((1, 3, 6, 1, 4, 1, 2440))
eip.setRevisions(('2016-09-21 00:00',))
if mibBuilder.loadTexts: eip.setLastUpdated('201609210000Z')
if mibBuilder.loadTexts: eip.setOrganization('EfficientIP')
products = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1))
eipHw = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 14))
eipHwAppliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 14, 1))
eipHwHdd = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2))
eipHwTemp = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 14, 3))
eipHwFan = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 14, 4))
eipHwPsu = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 14, 5))
eipHwPower = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 14, 6))
eipHwRaid = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 14, 7))
eipHwCpu = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 14, 8))
eipHwMem = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 14, 9))
eipHwChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 14, 10))
eipNet = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 15))
eipNetCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1))
eipNetCarp = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1))
eipNetCarpIf = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1, 1))
eipNetLagg = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 2))
eipNetStat = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2))
eipNetStatHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 1))
eipNetStatDns = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 2))
eipNetStatDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 3))
eipNetStatDb = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 4))
eipNetStatSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 5))
eipSvc = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16))
eipSvcSyslog = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 1))
eipSvcSsh = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 2))
eipSvcApache = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 3))
eipSvcIpmServer = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 4))
eipSvcDatabase = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5))
eipSvcDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6))
eipSvcDhcpMs = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 7))
eipSvcDns = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 8))
eipSvcGuardian = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 9))
eipSvcQuagga = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 10))
eipSvcNtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 11))
eipSvcTftp = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 12))
eipSvcSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 13))
eipSvcSendmail = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 16, 14))
eipSds = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 17))
eipSdsVersion = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 17, 1))
eipSdsMember = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 17, 2))
eipCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2440, 1, 1000))
eipMainCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2440, 1, 1000, 1)).setObjects(("EIP-MON-MIB", "eipNetStatIn"), ("EIP-MON-MIB", "eipNetStatOut"), ("EIP-MON-MIB", "eipSvcStatus"), ("EIP-MON-MIB", "eipSvcCpu"), ("EIP-MON-MIB", "eipSvcMem"), ("EIP-MON-MIB", "eipSvcDiskIoRead"), ("EIP-MON-MIB", "eipSvcDiskIoWrite"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eipMainCompliance = eipMainCompliance.setStatus('current')
eipHwApplianceModel = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwApplianceModel.setStatus('current')
eipHwApplianceSerial = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwApplianceSerial.setStatus('current')
eipHwApplianceBiosVersion = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwApplianceBiosVersion.setStatus('current')
eipHwHddFreeRoot = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2, 1), Counter64()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwHddFreeRoot.setStatus('current')
eipHwHddUsedRootPercent = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2, 2), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwHddUsedRootPercent.setStatus('current')
eipHwHddFreeTmp = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2, 3), Counter64()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwHddFreeTmp.setStatus('current')
eipHwHddUsedTmpPercent = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2, 4), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwHddUsedTmpPercent.setStatus('current')
eipHwHddFreeVar = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2, 5), Counter64()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwHddFreeVar.setStatus('current')
eipHwHddUsedVarPercent = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2, 6), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwHddUsedVarPercent.setStatus('current')
eipHwHddFreeData1 = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2, 7), Counter64()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwHddFreeData1.setStatus('current')
eipHwHddUsedData1Percent = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2, 8), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwHddUsedData1Percent.setStatus('current')
eipHwHddUsedSwap = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2, 50), Counter64()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwHddUsedSwap.setStatus('current')
eipHwHddUsedSwapPercent = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2, 51), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwHddUsedSwapPercent.setStatus('current')
eipHwHddIoLoad = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 2, 100), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwHddIoLoad.setStatus('current')
eipHwTempCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 3, 1), Integer32()).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwTempCpu.setStatus('current')
eipHwTempCpuCoreMax = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 3, 2), Integer32()).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwTempCpuCoreMax.setStatus('current')
eipHwTempCpuCoreMin = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 3, 3), Integer32()).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwTempCpuCoreMin.setStatus('current')
eipHwTempInlet = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 3, 4), Integer32()).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwTempInlet.setStatus('current')
eipHwTempBaseboard = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 3, 5), Integer32()).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwTempBaseboard.setStatus('current')
eipHwTempRaidController = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 3, 6), Integer32()).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwTempRaidController.setStatus('current')
eipHwFan1Speed = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 4, 1), Integer32()).setUnits('RPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwFan1Speed.setStatus('current')
eipHwFan2Speed = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 4, 2), Integer32()).setUnits('RPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwFan2Speed.setStatus('current')
eipHwFan3Speed = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 4, 3), Integer32()).setUnits('RPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwFan3Speed.setStatus('current')
eipHwFan4Speed = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 4, 4), Integer32()).setUnits('RPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwFan4Speed.setStatus('current')
eipHwFan5Speed = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 4, 5), Integer32()).setUnits('RPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwFan5Speed.setStatus('current')
eipHwFan6Speed = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 4, 6), Integer32()).setUnits('RPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwFan6Speed.setStatus('current')
eipHwFan7Speed = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 4, 7), Integer32()).setUnits('RPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwFan7Speed.setStatus('current')
eipHwFan8Speed = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 4, 8), Integer32()).setUnits('RPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwFan8Speed.setStatus('current')
eipHwPsuRedundancy = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("ok", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwPsuRedundancy.setStatus('current')
eipHwPsu1Status = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("ok", 1), ("present", 2), ("notpresent", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwPsu1Status.setStatus('current')
eipHwPsu2Status = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("ok", 1), ("present", 2), ("notpresent", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwPsu2Status.setStatus('current')
eipHwPowerInstant = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 6, 1), Integer32()).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwPowerInstant.setStatus('current')
eipHwPowerCumulative = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 6, 2), Integer32()).setUnits('kWh').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwPowerCumulative.setStatus('current')
eipHwPowerPeak = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 6, 3), Integer32()).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwPowerPeak.setStatus('current')
eipHwPowerPeakAmperage = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 6, 4), Integer32()).setUnits('mA').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwPowerPeakAmperage.setStatus('current')
eipHwRaidController = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 7, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwRaidController.setStatus('current')
eipHwRaidStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("ok", 1), ("degraded", 2), ("offline", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwRaidStatus.setStatus('current')
eipHwRaidDisks = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwRaidDisks.setStatus('current')
eipHwRaidDisksCritical = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 7, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwRaidDisksCritical.setStatus('current')
eipHwRaidDisksFailed = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 7, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwRaidDisksFailed.setStatus('current')
eipHwRaidBbuStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("ok", 1), ("degraded", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwRaidBbuStatus.setStatus('current')
eipHwRaidBbuCharge = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 7, 7), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwRaidBbuCharge.setStatus('current')
eipHwCpuLoadInt = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwCpuLoadInt.setStatus('current')
eipHwCpuCoreNumber = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 8, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwCpuCoreNumber.setStatus('current')
eipHwMemUsed = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 9, 1), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwMemUsed.setStatus('current')
eipHwChassisIntrusion = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 14, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipHwChassisIntrusion.setStatus('current')
eipNetStatIn = ObjectGroup((1, 3, 6, 1, 4, 1, 2440, 1, 15, 201)).setObjects(("EIP-MON-MIB", "eipNetStatHttpInOctets"), ("EIP-MON-MIB", "eipNetStatHttpInPkts"), ("EIP-MON-MIB", "eipNetStatDnsInOctets"), ("EIP-MON-MIB", "eipNetStatDnsInPkts"), ("EIP-MON-MIB", "eipNetStatDhcpInOctets"), ("EIP-MON-MIB", "eipNetStatDhcpInPkts"), ("EIP-MON-MIB", "eipNetStatDbInOctets"), ("EIP-MON-MIB", "eipNetStatDbInPkts"), ("EIP-MON-MIB", "eipNetStatSnmpInOctets"), ("EIP-MON-MIB", "eipNetStatSnmpInPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eipNetStatIn = eipNetStatIn.setStatus('current')
eipNetStatOut = ObjectGroup((1, 3, 6, 1, 4, 1, 2440, 1, 15, 202)).setObjects(("EIP-MON-MIB", "eipNetStatHttpOutOctets"), ("EIP-MON-MIB", "eipNetStatHttpOutPkts"), ("EIP-MON-MIB", "eipNetStatDnsOutOctets"), ("EIP-MON-MIB", "eipNetStatDnsOutPkts"), ("EIP-MON-MIB", "eipNetStatDhcpOutOctets"), ("EIP-MON-MIB", "eipNetStatDhcpOutPkts"), ("EIP-MON-MIB", "eipNetStatDbOutOctets"), ("EIP-MON-MIB", "eipNetStatDbOutPkts"), ("EIP-MON-MIB", "eipNetStatSnmpOutPkts"), ("EIP-MON-MIB", "eipNetStatSnmpOutPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eipNetStatOut = eipNetStatOut.setStatus('current')
eipNetCarpIfNumber = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetCarpIfNumber.setStatus('current')
eipNetCarpIfTable = MibTable((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1, 1, 2), )
if mibBuilder.loadTexts: eipNetCarpIfTable.setStatus('current')
eipNetCarpIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1, 1, 2, 1), ).setIndexNames((0, "EIP-MON-MIB", "eipNetCarpIfIndex"))
if mibBuilder.loadTexts: eipNetCarpIfEntry.setStatus('current')
eipNetCarpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetCarpIfIndex.setStatus('current')
eipNetCarpIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1, 1, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetCarpIfDescr.setStatus('current')
eipNetCarpIfVhid = MibTableColumn((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetCarpIfVhid.setStatus('current')
eipNetCarpIfDev = MibTableColumn((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1, 1, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetCarpIfDev.setStatus('current')
eipNetCarpIfAdvbase = MibTableColumn((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetCarpIfAdvbase.setStatus('current')
eipNetCarpIfAdvskew = MibTableColumn((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetCarpIfAdvskew.setStatus('current')
eipNetCarpIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("init", 0), ("backup", 1), ("master", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetCarpIfState.setStatus('current')
eipNetLaggStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("ok", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetLaggStatus.setStatus('current')
eipNetStatHttpInOctets = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 1, 1), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatHttpInOctets.setStatus('current')
eipNetStatHttpInPkts = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatHttpInPkts.setStatus('current')
eipNetStatHttpOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 1, 3), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatHttpOutOctets.setStatus('current')
eipNetStatHttpOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatHttpOutPkts.setStatus('current')
eipNetStatDnsInOctets = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 2, 1), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDnsInOctets.setStatus('current')
eipNetStatDnsInPkts = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDnsInPkts.setStatus('current')
eipNetStatDnsOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 2, 3), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDnsOutOctets.setStatus('current')
eipNetStatDnsOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDnsOutPkts.setStatus('current')
eipNetStatDhcpInOctets = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 3, 1), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDhcpInOctets.setStatus('current')
eipNetStatDhcpInPkts = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 3, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDhcpInPkts.setStatus('current')
eipNetStatDhcpOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 3, 3), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDhcpOutOctets.setStatus('current')
eipNetStatDhcpOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 3, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDhcpOutPkts.setStatus('current')
eipNetStatDbInOctets = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 4, 1), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDbInOctets.setStatus('current')
eipNetStatDbInPkts = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 4, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDbInPkts.setStatus('current')
eipNetStatDbOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 4, 3), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDbOutOctets.setStatus('current')
eipNetStatDbOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 4, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatDbOutPkts.setStatus('current')
eipNetStatSnmpInOctets = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 5, 1), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatSnmpInOctets.setStatus('current')
eipNetStatSnmpInPkts = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 5, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatSnmpInPkts.setStatus('current')
eipNetStatSnmpOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 5, 3), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatSnmpOutOctets.setStatus('current')
eipNetStatSnmpOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 15, 2, 5, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipNetStatSnmpOutPkts.setStatus('current')
eipSvcStatus = ObjectGroup((1, 3, 6, 1, 4, 1, 2440, 1, 16, 201)).setObjects(("EIP-MON-MIB", "eipSvcSyslogStatus"), ("EIP-MON-MIB", "eipSvcSshStatus"), ("EIP-MON-MIB", "eipSvcApacheStatus"), ("EIP-MON-MIB", "eipSvcIpmServerStatus"), ("EIP-MON-MIB", "eipSvcDatabaseStatus"), ("EIP-MON-MIB", "eipSvcDhcpStatus"), ("EIP-MON-MIB", "eipSvcDhcpMsStatus"), ("EIP-MON-MIB", "eipSvcDnsStatus"), ("EIP-MON-MIB", "eipSvcGuardianStatus"), ("EIP-MON-MIB", "eipSvcQuaggaStatus"), ("EIP-MON-MIB", "eipSvcNtpStatus"), ("EIP-MON-MIB", "eipSvcTftpStatus"), ("EIP-MON-MIB", "eipSvcSnmpStatus"), ("EIP-MON-MIB", "eipSvcSendmailStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eipSvcStatus = eipSvcStatus.setStatus('current')
eipSvcCpu = ObjectGroup((1, 3, 6, 1, 4, 1, 2440, 1, 16, 202)).setObjects(("EIP-MON-MIB", "eipSvcSyslogCpu"), ("EIP-MON-MIB", "eipSvcSshCpu"), ("EIP-MON-MIB", "eipSvcApacheCpu"), ("EIP-MON-MIB", "eipSvcIpmServerCpu"), ("EIP-MON-MIB", "eipSvcDatabaseCpu"), ("EIP-MON-MIB", "eipSvcDhcpCpu"), ("EIP-MON-MIB", "eipSvcDhcpMsCpu"), ("EIP-MON-MIB", "eipSvcDnsCpu"), ("EIP-MON-MIB", "eipSvcGuardianCpu"), ("EIP-MON-MIB", "eipSvcQuaggaCpu"), ("EIP-MON-MIB", "eipSvcNtpCpu"), ("EIP-MON-MIB", "eipSvcTftpCpu"), ("EIP-MON-MIB", "eipSvcSnmpCpu"), ("EIP-MON-MIB", "eipSvcSendmailCpu"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eipSvcCpu = eipSvcCpu.setStatus('current')
eipSvcMem = ObjectGroup((1, 3, 6, 1, 4, 1, 2440, 1, 16, 203)).setObjects(("EIP-MON-MIB", "eipSvcSyslogMem"), ("EIP-MON-MIB", "eipSvcSshMem"), ("EIP-MON-MIB", "eipSvcApacheMem"), ("EIP-MON-MIB", "eipSvcIpmServerMem"), ("EIP-MON-MIB", "eipSvcDatabaseMem"), ("EIP-MON-MIB", "eipSvcDhcpMem"), ("EIP-MON-MIB", "eipSvcDhcpMsMem"), ("EIP-MON-MIB", "eipSvcDnsMem"), ("EIP-MON-MIB", "eipSvcGuardianMem"), ("EIP-MON-MIB", "eipSvcQuaggaMem"), ("EIP-MON-MIB", "eipSvcNtpMem"), ("EIP-MON-MIB", "eipSvcTftpMem"), ("EIP-MON-MIB", "eipSvcSnmpMem"), ("EIP-MON-MIB", "eipSvcSendmailMem"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eipSvcMem = eipSvcMem.setStatus('current')
eipSvcDiskIoRead = ObjectGroup((1, 3, 6, 1, 4, 1, 2440, 1, 16, 204)).setObjects(("EIP-MON-MIB", "eipSvcSyslogDiskIoRead"), ("EIP-MON-MIB", "eipSvcSshDiskIoRead"), ("EIP-MON-MIB", "eipSvcApacheDiskIoRead"), ("EIP-MON-MIB", "eipSvcIpmServerDiskIoRead"), ("EIP-MON-MIB", "eipSvcDatabaseDiskIoRead"), ("EIP-MON-MIB", "eipSvcDhcpDiskIoRead"), ("EIP-MON-MIB", "eipSvcDhcpMsDiskIoRead"), ("EIP-MON-MIB", "eipSvcDnsDiskIoRead"), ("EIP-MON-MIB", "eipSvcGuardianDiskIoRead"), ("EIP-MON-MIB", "eipSvcQuaggaDiskIoRead"), ("EIP-MON-MIB", "eipSvcNtpDiskIoRead"), ("EIP-MON-MIB", "eipSvcTftpDiskIoRead"), ("EIP-MON-MIB", "eipSvcSnmpDiskIoRead"), ("EIP-MON-MIB", "eipSvcSendmailDiskIoRead"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eipSvcDiskIoRead = eipSvcDiskIoRead.setStatus('current')
eipSvcDiskIoWrite = ObjectGroup((1, 3, 6, 1, 4, 1, 2440, 1, 16, 205)).setObjects(("EIP-MON-MIB", "eipSvcSyslogDiskIoWrite"), ("EIP-MON-MIB", "eipSvcSshDiskIoWrite"), ("EIP-MON-MIB", "eipSvcApacheDiskIoWrite"), ("EIP-MON-MIB", "eipSvcIpmServerDiskIoWrite"), ("EIP-MON-MIB", "eipSvcDatabaseDiskIoWrite"), ("EIP-MON-MIB", "eipSvcDhcpDiskIoWrite"), ("EIP-MON-MIB", "eipSvcDhcpMsDiskIoWrite"), ("EIP-MON-MIB", "eipSvcDnsDiskIoWrite"), ("EIP-MON-MIB", "eipSvcGuardianDiskIoWrite"), ("EIP-MON-MIB", "eipSvcQuaggaDiskIoWrite"), ("EIP-MON-MIB", "eipSvcNtpDiskIoWrite"), ("EIP-MON-MIB", "eipSvcTftpDiskIoWrite"), ("EIP-MON-MIB", "eipSvcSnmpDiskIoWrite"), ("EIP-MON-MIB", "eipSvcSendmailDiskIoWrite"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eipSvcDiskIoWrite = eipSvcDiskIoWrite.setStatus('current')
eipSvcSyslogStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSyslogStatus.setStatus('current')
eipSvcSyslogCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 1, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSyslogCpu.setStatus('current')
eipSvcSyslogMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 1, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSyslogMem.setStatus('current')
eipSvcSyslogDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 1, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSyslogDiskIoRead.setStatus('current')
eipSvcSyslogDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 1, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSyslogDiskIoWrite.setStatus('current')
eipSvcSshStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSshStatus.setStatus('current')
eipSvcSshCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 2, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSshCpu.setStatus('current')
eipSvcSshMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 2, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSshMem.setStatus('current')
eipSvcSshDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 2, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSshDiskIoRead.setStatus('current')
eipSvcSshDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 2, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSshDiskIoWrite.setStatus('current')
eipSvcSshConnections = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 2, 6), Integer32()).setUnits('connections').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSshConnections.setStatus('current')
eipSvcApacheStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcApacheStatus.setStatus('current')
eipSvcApacheCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 3, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcApacheCpu.setStatus('current')
eipSvcApacheMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 3, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcApacheMem.setStatus('current')
eipSvcApacheDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 3, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcApacheDiskIoRead.setStatus('current')
eipSvcApacheDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 3, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcApacheDiskIoWrite.setStatus('current')
eipSvcApacheConnections = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 3, 6), Integer32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcApacheConnections.setStatus('current')
eipSvcIpmServerStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcIpmServerStatus.setStatus('current')
eipSvcIpmServerCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 4, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcIpmServerCpu.setStatus('current')
eipSvcIpmServerMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 4, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcIpmServerMem.setStatus('current')
eipSvcIpmServerDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 4, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcIpmServerDiskIoRead.setStatus('current')
eipSvcIpmServerDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 4, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcIpmServerDiskIoWrite.setStatus('current')
eipSvcIpmServerUserSessions = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 4, 6), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcIpmServerUserSessions.setStatus('current')
eipSvcIpmServerThreads = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 4, 7), Counter32()).setUnits('threads').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcIpmServerThreads.setStatus('current')
eipSvcIpmServerDbQueries = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 4, 8), Counter32()).setUnits('queries').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcIpmServerDbQueries.setStatus('current')
eipSvcDatabaseStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDatabaseStatus.setStatus('current')
eipSvcDatabaseCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDatabaseCpu.setStatus('current')
eipSvcDatabaseMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDatabaseMem.setStatus('current')
eipSvcDatabaseDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDatabaseDiskIoRead.setStatus('current')
eipSvcDatabaseDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDatabaseDiskIoWrite.setStatus('current')
eipSvcDatabaseReplicationStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("active", 1), ("initializing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDatabaseReplicationStatus.setStatus('current')
eipSvcDatabaseReplicationOffset = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5, 7), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDatabaseReplicationOffset.setStatus('current')
eipSvcDatabaseReplicationLastReplay = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5, 8), Gauge32()).setUnits('s').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDatabaseReplicationLastReplay.setStatus('current')
eipSvcDatabaseBackends = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDatabaseBackends.setStatus('current')
eipSvcDatabaseDeadlocks = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDatabaseDeadlocks.setStatus('current')
eipSvcDatabaseBloat = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 5, 11), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDatabaseBloat.setStatus('current')
eipSvcDhcpStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpStatus.setStatus('current')
eipSvcDhcpCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpCpu.setStatus('current')
eipSvcDhcpMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpMem.setStatus('current')
eipSvcDhcpDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpDiskIoRead.setStatus('current')
eipSvcDhcpDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpDiskIoWrite.setStatus('current')
eipSvcDhcpFailoverNumber = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpFailoverNumber.setStatus('current')
eipSvcDhcpFailoverTable = MibTable((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6, 7), )
if mibBuilder.loadTexts: eipSvcDhcpFailoverTable.setStatus('current')
eipSvcDhcpFailoverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6, 7, 1), ).setIndexNames((0, "EIP-MON-MIB", "eipSvcDhcpFailoverIndex"))
if mibBuilder.loadTexts: eipSvcDhcpFailoverEntry.setStatus('current')
eipSvcDhcpFailoverIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpFailoverIndex.setStatus('current')
eipSvcDhcpFailoverName = MibTableColumn((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6, 7, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpFailoverName.setStatus('current')
eipSvcDhcpFailoverStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2440, 1, 16, 6, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 254))).clone(namedValues=NamedValues(("unknown", 0), ("startup", 1), ("normal", 2), ("communicationsInterrupted", 3), ("partnerDown", 4), ("potentialConflict", 5), ("recover", 6), ("paused", 7), ("shutdown", 8), ("recoverDone", 9), ("resolutionInterrupted", 10), ("conflictDone", 11), ("recoverWait", 254)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpFailoverStatus.setStatus('current')
eipSvcDhcpMsStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpMsStatus.setStatus('current')
eipSvcDhcpMsCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 7, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpMsCpu.setStatus('current')
eipSvcDhcpMsMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 7, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpMsMem.setStatus('current')
eipSvcDhcpMsDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 7, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpMsDiskIoRead.setStatus('current')
eipSvcDhcpMsDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 7, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDhcpMsDiskIoWrite.setStatus('current')
eipSvcDnsStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDnsStatus.setStatus('current')
eipSvcDnsCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 8, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDnsCpu.setStatus('current')
eipSvcDnsMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 8, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDnsMem.setStatus('current')
eipSvcDnsDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 8, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDnsDiskIoRead.setStatus('current')
eipSvcDnsDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 8, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDnsDiskIoWrite.setStatus('current')
eipSvcDnsEngine = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 8, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcDnsEngine.setStatus('current')
eipSvcGuardianStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcGuardianStatus.setStatus('current')
eipSvcGuardianCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 9, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcGuardianCpu.setStatus('current')
eipSvcGuardianMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 9, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcGuardianMem.setStatus('current')
eipSvcGuardianDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 9, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcGuardianDiskIoRead.setStatus('current')
eipSvcGuardianDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 9, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcGuardianDiskIoWrite.setStatus('current')
eipSvcQuaggaStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcQuaggaStatus.setStatus('current')
eipSvcQuaggaCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 10, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcQuaggaCpu.setStatus('current')
eipSvcQuaggaMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 10, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcQuaggaMem.setStatus('current')
eipSvcQuaggaDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 10, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcQuaggaDiskIoRead.setStatus('current')
eipSvcQuaggaDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 10, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcQuaggaDiskIoWrite.setStatus('current')
eipSvcNtpStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcNtpStatus.setStatus('current')
eipSvcNtpCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 11, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcNtpCpu.setStatus('current')
eipSvcNtpMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 11, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcNtpMem.setStatus('current')
eipSvcNtpDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 11, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcNtpDiskIoRead.setStatus('current')
eipSvcNtpDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 11, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcNtpDiskIoWrite.setStatus('current')
eipSvcTftpStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcTftpStatus.setStatus('current')
eipSvcTftpCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 12, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcTftpCpu.setStatus('current')
eipSvcTftpMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 12, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcTftpMem.setStatus('current')
eipSvcTftpDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 12, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcTftpDiskIoRead.setStatus('current')
eipSvcTftpDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 12, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcTftpDiskIoWrite.setStatus('current')
eipSvcSnmpStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSnmpStatus.setStatus('current')
eipSvcSnmpCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 13, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSnmpCpu.setStatus('current')
eipSvcSnmpMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 13, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSnmpMem.setStatus('current')
eipSvcSnmpDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 13, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSnmpDiskIoRead.setStatus('current')
eipSvcSnmpDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 13, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSnmpDiskIoWrite.setStatus('current')
eipSvcSendmailStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("running", 1), ("misconfigured", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSendmailStatus.setStatus('current')
eipSvcSendmailCpu = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 14, 2), Gauge32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSendmailCpu.setStatus('current')
eipSvcSendmailMem = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 14, 3), Gauge32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSendmailMem.setStatus('current')
eipSvcSendmailDiskIoRead = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 14, 4), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSendmailDiskIoRead.setStatus('current')
eipSvcSendmailDiskIoWrite = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 14, 5), Gauge32()).setUnits('blocks').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSendmailDiskIoWrite.setStatus('current')
eipSvcSendmailQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 16, 14, 6), Integer32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSvcSendmailQueueSize.setStatus('current')
eipSdsVersionOs = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("i386", 0), ("amd64", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSdsVersionOs.setStatus('current')
eipSdsVersionNumber = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSdsVersionNumber.setStatus('current')
eipSdsVersionDate = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 17, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSdsVersionDate.setStatus('current')
eipSdsMemberRole = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 17, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("standalone", 0), ("master", 1), ("hotStandby", 2), ("masterRecovered", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSdsMemberRole.setStatus('current')
eipSdsMemberStatus = MibScalar((1, 3, 6, 1, 4, 1, 2440, 1, 17, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("ok", 0), ("notConfigured", 1), ("upgrading", 2), ("initStandby", 3), ("invalidCredentials", 4), ("remoteManaged", 5), ("timeout", 6), ("splitBrain", 7), ("replicationStopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eipSdsMemberStatus.setStatus('current')
mibBuilder.exportSymbols("EIP-MON-MIB", eipSvcDnsDiskIoWrite=eipSvcDnsDiskIoWrite, eipHwHddUsedRootPercent=eipHwHddUsedRootPercent, eipNetCarpIfAdvskew=eipNetCarpIfAdvskew, eipSvcSnmpCpu=eipSvcSnmpCpu, eipSvcDiskIoRead=eipSvcDiskIoRead, eipSvcDatabaseCpu=eipSvcDatabaseCpu, eipNetCarpIfAdvbase=eipNetCarpIfAdvbase, eipSvcSyslogMem=eipSvcSyslogMem, eipSvcSnmpDiskIoWrite=eipSvcSnmpDiskIoWrite, eipHwPower=eipHwPower, eipSdsMemberStatus=eipSdsMemberStatus, eipSvcSshStatus=eipSvcSshStatus, eipHwPsuRedundancy=eipHwPsuRedundancy, eipNetStatDb=eipNetStatDb, eipHwApplianceSerial=eipHwApplianceSerial, eipSvcDhcpMem=eipSvcDhcpMem, eipNetStat=eipNetStat, eipSvcSyslogDiskIoRead=eipSvcSyslogDiskIoRead, eipHwRaidBbuStatus=eipHwRaidBbuStatus, eipSvcDhcpDiskIoRead=eipSvcDhcpDiskIoRead, eipHwHddFreeVar=eipHwHddFreeVar, eipNetCarpIf=eipNetCarpIf, eipSvcDhcpFailoverTable=eipSvcDhcpFailoverTable, eipSvcDiskIoWrite=eipSvcDiskIoWrite, eipSvcTftp=eipSvcTftp, eipSvcGuardianDiskIoWrite=eipSvcGuardianDiskIoWrite, eipHwPowerPeakAmperage=eipHwPowerPeakAmperage, eipSvcIpmServerThreads=eipSvcIpmServerThreads, eipSvcSendmail=eipSvcSendmail, eipNetStatDbOutOctets=eipNetStatDbOutOctets, eipNetStatSnmpOutOctets=eipNetStatSnmpOutOctets, eipSvcDhcpDiskIoWrite=eipSvcDhcpDiskIoWrite, eipSvcDhcpMsDiskIoWrite=eipSvcDhcpMsDiskIoWrite, eipSvcSendmailDiskIoWrite=eipSvcSendmailDiskIoWrite, eipHwHddIoLoad=eipHwHddIoLoad, eipSvcDatabaseDiskIoRead=eipSvcDatabaseDiskIoRead, eipSvcSnmpMem=eipSvcSnmpMem, eipHwTempCpuCoreMax=eipHwTempCpuCoreMax, eipHw=eipHw, eipNetCarpIfIndex=eipNetCarpIfIndex, eipSvcQuaggaMem=eipSvcQuaggaMem, eipSvcTftpCpu=eipSvcTftpCpu, eipSvcQuaggaStatus=eipSvcQuaggaStatus, eipSvcApacheConnections=eipSvcApacheConnections, eipSvcDatabaseReplicationLastReplay=eipSvcDatabaseReplicationLastReplay, eipHwHddUsedSwap=eipHwHddUsedSwap, eipHwPsu=eipHwPsu, eipNetStatSnmpOutPkts=eipNetStatSnmpOutPkts, eipHwFan7Speed=eipHwFan7Speed, eipSvcDhcpFailoverNumber=eipSvcDhcpFailoverNumber, eipSvcGuardianMem=eipSvcGuardianMem, eipNetStatDnsOutPkts=eipNetStatDnsOutPkts, eipHwTemp=eipHwTemp, eipSvcCpu=eipSvcCpu, eipSvcIpmServerDiskIoWrite=eipSvcIpmServerDiskIoWrite, eipSvcDatabase=eipSvcDatabase, eipNetCarpIfState=eipNetCarpIfState, eipSdsVersionOs=eipSdsVersionOs, eipSvcDnsCpu=eipSvcDnsCpu, eipHwHddUsedSwapPercent=eipHwHddUsedSwapPercent, eipSvcGuardianStatus=eipSvcGuardianStatus, eipNetStatDhcp=eipNetStatDhcp, eipHwChassisIntrusion=eipHwChassisIntrusion, eipNetStatHttpOutOctets=eipNetStatHttpOutOctets, eipSvcGuardianDiskIoRead=eipSvcGuardianDiskIoRead, eipHwFan4Speed=eipHwFan4Speed, eipHwRaidStatus=eipHwRaidStatus, eipSvcSendmailCpu=eipSvcSendmailCpu, eipSvcNtp=eipSvcNtp, eipHwCpuLoadInt=eipHwCpuLoadInt, eipHwRaidBbuCharge=eipHwRaidBbuCharge, eipNetCfg=eipNetCfg, eipNetCarpIfEntry=eipNetCarpIfEntry, eipSvcDns=eipSvcDns, eipSvcSshDiskIoRead=eipSvcSshDiskIoRead, eipHwFan5Speed=eipHwFan5Speed, eipNetCarpIfVhid=eipNetCarpIfVhid, eipSvcTftpStatus=eipSvcTftpStatus, eipSvcDhcpFailoverEntry=eipSvcDhcpFailoverEntry, eipSvcDatabaseMem=eipSvcDatabaseMem, eipSvcSendmailMem=eipSvcSendmailMem, eipNetCarpIfNumber=eipNetCarpIfNumber, eipSdsMember=eipSdsMember, eipNetStatDbInPkts=eipNetStatDbInPkts, eipSvcDatabaseDiskIoWrite=eipSvcDatabaseDiskIoWrite, eipNetStatSnmpInOctets=eipNetStatSnmpInOctets, eipSvcIpmServerStatus=eipSvcIpmServerStatus, eipSvcDatabaseReplicationStatus=eipSvcDatabaseReplicationStatus, eipHwPowerCumulative=eipHwPowerCumulative, eipSvcApacheDiskIoRead=eipSvcApacheDiskIoRead, eipSvcGuardianCpu=eipSvcGuardianCpu, eipHwPsu2Status=eipHwPsu2Status, eipHwPowerPeak=eipHwPowerPeak, eipHwFan=eipHwFan, eipNetStatDhcpInOctets=eipNetStatDhcpInOctets, eipSvcSyslogDiskIoWrite=eipSvcSyslogDiskIoWrite, eipSvcDhcpMsMem=eipSvcDhcpMsMem, eipHwFan1Speed=eipHwFan1Speed, eipNetLagg=eipNetLagg, eipSvcNtpDiskIoWrite=eipSvcNtpDiskIoWrite, eipSvcIpmServer=eipSvcIpmServer, eipSvcApache=eipSvcApache, eipSvcSendmailDiskIoRead=eipSvcSendmailDiskIoRead, eipSvcSshDiskIoWrite=eipSvcSshDiskIoWrite, eipSvcDatabaseReplicationOffset=eipSvcDatabaseReplicationOffset, eipSvc=eipSvc, eipHwHddUsedData1Percent=eipHwHddUsedData1Percent, eipNetStatOut=eipNetStatOut, eipNetCarpIfTable=eipNetCarpIfTable, eipNetStatDnsInOctets=eipNetStatDnsInOctets, eipSdsVersionDate=eipSdsVersionDate, eipSvcIpmServerDiskIoRead=eipSvcIpmServerDiskIoRead, eipSvcDhcpFailoverStatus=eipSvcDhcpFailoverStatus, eipSvcSyslogCpu=eipSvcSyslogCpu, eipSvcDnsDiskIoRead=eipSvcDnsDiskIoRead, eipNetStatSnmp=eipNetStatSnmp, eipNetStatHttpOutPkts=eipNetStatHttpOutPkts, eipSvcDatabaseBackends=eipSvcDatabaseBackends, eipHwRaidDisksFailed=eipHwRaidDisksFailed, eipHwTempBaseboard=eipHwTempBaseboard, eipNetStatIn=eipNetStatIn, eipSvcSshCpu=eipSvcSshCpu, eipSvcIpmServerUserSessions=eipSvcIpmServerUserSessions, eipSvcApacheDiskIoWrite=eipSvcApacheDiskIoWrite, eipNetCarpIfDescr=eipNetCarpIfDescr, eipHwHddUsedTmpPercent=eipHwHddUsedTmpPercent, eipSvcTftpDiskIoWrite=eipSvcTftpDiskIoWrite, eipHwFan8Speed=eipHwFan8Speed, eipNetStatDhcpOutPkts=eipNetStatDhcpOutPkts, eipHwTempCpuCoreMin=eipHwTempCpuCoreMin, eipHwRaidDisksCritical=eipHwRaidDisksCritical, eipSvcTftpDiskIoRead=eipSvcTftpDiskIoRead, eipNetStatSnmpInPkts=eipNetStatSnmpInPkts, eipHwTempCpu=eipHwTempCpu, eipSvcSnmpDiskIoRead=eipSvcSnmpDiskIoRead, eipHwFan2Speed=eipHwFan2Speed, eipSvcSendmailStatus=eipSvcSendmailStatus, eipCompliances=eipCompliances, eipSvcDatabaseDeadlocks=eipSvcDatabaseDeadlocks, eipSvcApacheCpu=eipSvcApacheCpu, eipNetStatHttpInOctets=eipNetStatHttpInOctets, eipHwTempRaidController=eipHwTempRaidController, eipSvcSsh=eipSvcSsh, eipHwPsu1Status=eipHwPsu1Status, eipSvcIpmServerMem=eipSvcIpmServerMem, eipHwRaidController=eipHwRaidController, eipSds=eipSds, eipHwHdd=eipHwHdd, eipHwPowerInstant=eipHwPowerInstant, eipSvcDhcp=eipSvcDhcp, eipSvcNtpDiskIoRead=eipSvcNtpDiskIoRead, eipNetStatDbOutPkts=eipNetStatDbOutPkts, eipSvcDnsMem=eipSvcDnsMem, eipNetCarp=eipNetCarp, eipNetCarpIfDev=eipNetCarpIfDev, eipSdsVersion=eipSdsVersion, eipNetStatDnsOutOctets=eipNetStatDnsOutOctets, eipSvcDhcpMsStatus=eipSvcDhcpMsStatus, eipHwRaidDisks=eipHwRaidDisks, eipSvcMem=eipSvcMem, eipSvcDatabaseStatus=eipSvcDatabaseStatus, eipHwRaid=eipHwRaid, eipSvcDhcpMsCpu=eipSvcDhcpMsCpu, eipSvcNtpStatus=eipSvcNtpStatus, eipSvcApacheStatus=eipSvcApacheStatus, eipSvcSshMem=eipSvcSshMem, eipNetStatDhcpInPkts=eipNetStatDhcpInPkts, eipSvcApacheMem=eipSvcApacheMem, eipHwMem=eipHwMem, eipHwCpu=eipHwCpu, eipSvcTftpMem=eipSvcTftpMem, eipMainCompliance=eipMainCompliance, eipNetStatHttp=eipNetStatHttp, eipHwChassis=eipHwChassis, eipSvcDhcpMs=eipSvcDhcpMs, eipSvcQuaggaDiskIoWrite=eipSvcQuaggaDiskIoWrite, eipSvcSyslog=eipSvcSyslog, eipSvcSshConnections=eipSvcSshConnections, eipSvcQuaggaCpu=eipSvcQuaggaCpu, eipSvcDnsEngine=eipSvcDnsEngine, PYSNMP_MODULE_ID=eip, eipNetStatDbInOctets=eipNetStatDbInOctets, products=products, eipHwHddFreeRoot=eipHwHddFreeRoot, eip=eip, eipNetStatDns=eipNetStatDns, eipHwHddFreeData1=eipHwHddFreeData1, eipSvcDatabaseBloat=eipSvcDatabaseBloat, eipNetLaggStatus=eipNetLaggStatus, eipHwTempInlet=eipHwTempInlet, eipSvcDhcpMsDiskIoRead=eipSvcDhcpMsDiskIoRead, eipHwFan3Speed=eipHwFan3Speed, eipSvcQuaggaDiskIoRead=eipSvcQuaggaDiskIoRead, eipSvcDhcpFailoverIndex=eipSvcDhcpFailoverIndex, eipHwApplianceBiosVersion=eipHwApplianceBiosVersion, eipNetStatHttpInPkts=eipNetStatHttpInPkts, eipSdsMemberRole=eipSdsMemberRole, eipHwFan6Speed=eipHwFan6Speed, eipSvcQuagga=eipSvcQuagga, eipNetStatDnsInPkts=eipNetStatDnsInPkts, eipSvcSyslogStatus=eipSvcSyslogStatus, eipSvcGuardian=eipSvcGuardian, eipHwHddFreeTmp=eipHwHddFreeTmp, eipSdsVersionNumber=eipSdsVersionNumber, eipSvcDnsStatus=eipSvcDnsStatus, eipSvcIpmServerDbQueries=eipSvcIpmServerDbQueries, eipSvcDhcpFailoverName=eipSvcDhcpFailoverName, eipSvcNtpCpu=eipSvcNtpCpu, eipSvcStatus=eipSvcStatus, eipNetStatDhcpOutOctets=eipNetStatDhcpOutOctets, eipSvcNtpMem=eipSvcNtpMem, eipNet=eipNet, eipSvcIpmServerCpu=eipSvcIpmServerCpu, eipSvcSnmp=eipSvcSnmp, eipSvcDhcpStatus=eipSvcDhcpStatus, eipHwHddUsedVarPercent=eipHwHddUsedVarPercent, eipSvcSendmailQueueSize=eipSvcSendmailQueueSize, eipHwCpuCoreNumber=eipHwCpuCoreNumber, eipSvcDhcpCpu=eipSvcDhcpCpu, eipSvcSnmpStatus=eipSvcSnmpStatus, eipHwMemUsed=eipHwMemUsed, eipHwAppliance=eipHwAppliance, eipHwApplianceModel=eipHwApplianceModel)
