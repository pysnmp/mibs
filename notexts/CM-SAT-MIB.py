#
# PySNMP MIB module CM-SAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/CM-SAT-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 13:35:38 2024
# On host fv-az1210-277 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
fsp150cm, = mibBuilder.importSymbols("ADVA-MIB", "fsp150cm")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
VlanPriority, SecondaryState, VlanId, OperationalState, MepDestinationType, AdminState, CmPmBinAction = mibBuilder.importSymbols("CM-COMMON-MIB", "VlanPriority", "SecondaryState", "VlanId", "OperationalState", "MepDestinationType", "AdminState", "CmPmBinAction")
shelfIndex, networkElementEntry, neIndex, slotIndex = mibBuilder.importSymbols("CM-ENTITY-MIB", "shelfIndex", "networkElementEntry", "neIndex", "slotIndex")
PolicerColorMode, = mibBuilder.importSymbols("CM-FACILITY-MIB", "PolicerColorMode")
EsaProbePktIntervalType, = mibBuilder.importSymbols("CM-SA-MIB", "EsaProbePktIntervalType")
Dot1agCfmMepIdOrZero, dot1agCfmMepEntry = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "Dot1agCfmMepIdOrZero", "dot1agCfmMepEntry")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, Bits, Counter64, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, Gauge32, NotificationType, iso, TimeTicks, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "Counter64", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "Gauge32", "NotificationType", "iso", "TimeTicks", "ObjectIdentity", "ModuleIdentity")
MacAddress, StorageType, RowStatus, TextualConvention, DisplayString, VariablePointer, DateAndTime, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "StorageType", "RowStatus", "TextualConvention", "DisplayString", "VariablePointer", "DateAndTime", "TruthValue")
cmServiceActivationMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28))
cmServiceActivationMIB.setRevisions(('2017-04-05 00:00',))
if mibBuilder.loadTexts: cmServiceActivationMIB.setLastUpdated('201704050000Z')
if mibBuilder.loadTexts: cmServiceActivationMIB.setOrganization('ADVA Optical Networking SE')
cmServActivationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1))
cmServActivationNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 2))
cmServActivationConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 3))
class ServiceActivationTestMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("oneWay", 1), ("twoWay", 2))

class SatProceduresType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("none", 1), ("configTestCir", 2), ("configTestEir", 3), ("configTestCbs", 4), ("configTestEbs", 5), ("configTestPolicing", 6), ("performanceTest", 7))

class SatProceduresList(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("configTestCir", 1), ("configTestEir", 2), ("configTestCbs", 3), ("configTestEbs", 4), ("configTestPolicing", 5), ("performance", 6))

class SatStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("completed", 1), ("notStarted", 2), ("inProgress", 3), ("failed", 4), ("aborted", 5))

class SatDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("forward", 1), ("backward", 2))

class SatFramePayloadType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("prbs31", 1), ("custom", 2))

class SatTestAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("start", 1), ("stop", 2), ("notApplicable", 3))

class SatResult(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("pass", 2), ("fail", 3))

satControlTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1), )
if mibBuilder.loadTexts: satControlTable.setStatus('current')
satControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-SAT-MIB", "satControlIndex"))
if mibBuilder.loadTexts: satControlEntry.setStatus('current')
satControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: satControlIndex.setStatus('current')
satControlName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satControlName.setStatus('current')
satControlTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 3), ServiceActivationTestMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satControlTestMode.setStatus('current')
satControlTestProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 4), SatProceduresList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satControlTestProcedures.setStatus('current')
satControlConfigTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satControlConfigTestDuration.setStatus('current')
satControlConfigCIRTestStepNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satControlConfigCIRTestStepNum.setStatus('current')
satControlConfigCIRTestStepDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satControlConfigCIRTestStepDuration.setStatus('current')
satControlPerfTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satControlPerfTestDuration.setStatus('current')
satControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 9), SatStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satControlStatus.setStatus('current')
satControlAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 10), SatTestAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satControlAction.setStatus('current')
satControlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 11), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: satControlStorageType.setStatus('current')
satControlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: satControlRowStatus.setStatus('current')
satControlFailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satControlFailCause.setStatus('current')
satControlTestStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satControlTestStartTime.setStatus('current')
satControlFlpduTagOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satControlFlpduTagOverride.setStatus('current')
satStreamTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2), )
if mibBuilder.loadTexts: satStreamTable.setStatus('current')
satStreamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-SAT-MIB", "satControlIndex"), (0, "CM-SAT-MIB", "satStreamIndex"))
if mibBuilder.loadTexts: satStreamEntry.setStatus('current')
satStreamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: satStreamIndex.setStatus('current')
satStreamName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamName.setStatus('current')
satStreamTestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 3), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamTestPort.setStatus('current')
satStreamTestDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 4), SatDirection()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamTestDirection.setStatus('current')
satStreamDestMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 5), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamDestMacAddress.setStatus('current')
satStreamFramePayloadType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 6), SatFramePayloadType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamFramePayloadType.setStatus('current')
satStreamCustomFramePayload = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamCustomFramePayload.setStatus('current')
satStreamFrameSizeList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamFrameSizeList.setStatus('current')
satStreamSacProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 9), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamSacProfileId.setStatus('current')
satStreamSrcMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 10), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamSrcMepId.setStatus('current')
satStreamDestMepType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 11), MepDestinationType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamDestMepType.setStatus('current')
satStreamDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamDestMepId.setStatus('current')
satStreamDestMepMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 13), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamDestMepMacAddr.setStatus('current')
satStreamDmmPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamDmmPacketSize.setStatus('current')
satStreamDmmPacketInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 15), EsaProbePktIntervalType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamDmmPacketInterval.setStatus('current')
satStreamOverallResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 16), SatResult()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satStreamOverallResult.setStatus('current')
satStreamAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 17), SatTestAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamAction.setStatus('current')
satStreamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 18), SatStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satStreamStatus.setStatus('current')
satStreamCurrentTestProcedure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 19), SatProceduresType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satStreamCurrentTestProcedure.setStatus('current')
satStreamCurrentConfigCirTestStep = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satStreamCurrentConfigCirTestStep.setStatus('current')
satStreamInner1VlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 21), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamInner1VlanId.setStatus('current')
satStreamInner1VlanPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 22), VlanPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamInner1VlanPri.setStatus('current')
satStreamInner1VlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 23), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamInner1VlanEnabled.setStatus('current')
satStreamInner1ValnEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamInner1ValnEtherType.setStatus('current')
satStreamInner2VlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 25), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamInner2VlanId.setStatus('current')
satStreamInner2VlanPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 26), VlanPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamInner2VlanPri.setStatus('current')
satStreamInner2VlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 27), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamInner2VlanEnabled.setStatus('current')
satStreamInner2VlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamInner2VlanEtherType.setStatus('current')
satStreamOuterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 29), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamOuterVlanId.setStatus('current')
satStreamOuterVlanPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 30), VlanPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamOuterVlanPri.setStatus('current')
satStreamOuterVlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 31), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamOuterVlanEnabled.setStatus('current')
satStreamOuterVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamOuterVlanEtherType.setStatus('current')
satStreamDeiEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 33), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamDeiEnabled.setStatus('current')
satStreamGreenPcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamGreenPcp.setStatus('current')
satStreamYellowPcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamYellowPcp.setStatus('current')
satStreamColorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 36), PolicerColorMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamColorMode.setStatus('current')
satStreamCirLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 37), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamCirLo.setStatus('current')
satStreamCirHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 38), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamCirHi.setStatus('current')
satStreamEirLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 39), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamEirLo.setStatus('current')
satStreamEirHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 40), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamEirHi.setStatus('current')
satStreamCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 41), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamCbs.setStatus('current')
satStreamEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 42), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamEbs.setStatus('current')
satStreamStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 43), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: satStreamStorageType.setStatus('current')
satStreamRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 44), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: satStreamRowStatus.setStatus('current')
satStreamDmmPktPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 45), VlanPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamDmmPktPriority.setStatus('current')
satStreamMFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 46), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamMFactor.setStatus('current')
satStreamDestMepEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 47), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamDestMepEnabled.setStatus('current')
satStreamLlActivateEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 2, 1, 48), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satStreamLlActivateEnabled.setStatus('current')
satResultStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3), )
if mibBuilder.loadTexts: satResultStatsTable.setStatus('current')
satResultStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-SAT-MIB", "satControlIndex"), (0, "CM-SAT-MIB", "satStreamIndex"), (0, "CM-SAT-MIB", "satResultStatsTestType"), (0, "CM-SAT-MIB", "satResultStatsStepNumber"))
if mibBuilder.loadTexts: satResultStatsEntry.setStatus('current')
satResultStatsTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 1), SatProceduresType())
if mibBuilder.loadTexts: satResultStatsTestType.setStatus('current')
satResultStatsStepNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 2), Integer32())
if mibBuilder.loadTexts: satResultStatsStepNumber.setStatus('current')
satResultStatsSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsSessionId.setStatus('current')
satResultStatsStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsStartTime.setStatus('current')
satResultStatsEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsEndTime.setStatus('current')
satResultStatsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 6), SatStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsStatus.setStatus('current')
satResultStatsResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 7), SatResult()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsResult.setStatus('current')
satResultStatsMinIRGMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsMinIRGMeasured.setStatus('current')
satResultStatsAvgIRGMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsAvgIRGMeasured.setStatus('current')
satResultStatsMaxIRGMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsMaxIRGMeasured.setStatus('current')
satResultStatsMinIRYMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsMinIRYMeasured.setStatus('current')
satResultStatsAvgIRYMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsAvgIRYMeasured.setStatus('current')
satResultStatsMaxIRYMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsMaxIRYMeasured.setStatus('current')
satResultStatsFlrGMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsFlrGMeasured.setStatus('current')
satResultStatsFlrYMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsFlrYMeasured.setStatus('current')
satResultStatsFlrGCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsFlrGCounts.setStatus('current')
satResultStatsFlrYCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsFlrYCounts.setStatus('current')
satResultStatsMinFTDGMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsMinFTDGMeasured.setStatus('current')
satResultStatsAvgFTDGMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsAvgFTDGMeasured.setStatus('current')
satResultStatsMaxFTDGMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsMaxFTDGMeasured.setStatus('current')
satResultStatsIMinFDVGMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsIMinFDVGMeasured.setStatus('current')
satResultStatsIAvgFDVGMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsIAvgFDVGMeasured.setStatus('current')
satResultStatsIMaxFDVGMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsIMaxFDVGMeasured.setStatus('current')
satResultStatsISyncErrorsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsISyncErrorsNum.setStatus('current')
satResultStatsIfNegFLG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsIfNegFLG.setStatus('current')
satResultStatsIfNegFLY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsIfNegFLY.setStatus('current')
satResultStatsAvgIRT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsAvgIRT.setStatus('current')
satResultStatsFlrTMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsFlrTMeasured.setStatus('current')
satResultStatsFlTCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsFlTCounts.setStatus('current')
satResultStatsIfNegFLT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 3, 1, 30), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResultStatsIfNegFLT.setStatus('current')
satSacProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 4), )
if mibBuilder.loadTexts: satSacProfileTable.setStatus('current')
satSacProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 4, 1), ).setIndexNames((0, "CM-SAT-MIB", "satSacProfileIndex"))
if mibBuilder.loadTexts: satSacProfileEntry.setStatus('current')
satSacProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: satSacProfileIndex.setStatus('current')
satSacProfileAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satSacProfileAlias.setStatus('current')
satSacProfileFLR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satSacProfileFLR.setStatus('current')
satSacProfileFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 4, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satSacProfileFTD.setStatus('current')
satSacProfileFDV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 4, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satSacProfileFDV.setStatus('current')
satSacProfileStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 4, 1, 6), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: satSacProfileStorageType.setStatus('current')
satSacProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 4, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: satSacProfileRowStatus.setStatus('current')
satResponderSessionTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 5), )
if mibBuilder.loadTexts: satResponderSessionTable.setStatus('current')
satResponderSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 5, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-SAT-MIB", "satResponderSessionIndex"))
if mibBuilder.loadTexts: satResponderSessionEntry.setStatus('current')
satResponderSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: satResponderSessionIndex.setStatus('current')
satResponderSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResponderSessionId.setStatus('current')
satResponderSessionControlMepMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 5, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResponderSessionControlMepMacAddr.setStatus('current')
satResponderSessionMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 5, 1, 4), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satResponderSessionMepId.setStatus('current')
satResponderSessionStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 5, 1, 5), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: satResponderSessionStorageType.setStatus('current')
satResponderSessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 5, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: satResponderSessionRowStatus.setStatus('current')
networkElementSatParamsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 6), )
if mibBuilder.loadTexts: networkElementSatParamsTable.setStatus('current')
networkElementSatParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 6, 1), )
networkElementEntry.registerAugmentions(("CM-SAT-MIB", "networkElementSatParamsEntry"))
networkElementSatParamsEntry.setIndexNames(*networkElementEntry.getIndexNames())
if mibBuilder.loadTexts: networkElementSatParamsEntry.setStatus('current')
neSatParamsEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 6, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: neSatParamsEtherType.setStatus('current')
satCfmMepExtTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 7), )
if mibBuilder.loadTexts: satCfmMepExtTable.setStatus('current')
satCfmMepExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 7, 1), )
dot1agCfmMepEntry.registerAugmentions(("CM-SAT-MIB", "satCfmMepExtEntry"))
satCfmMepExtEntry.setIndexNames(*dot1agCfmMepEntry.getIndexNames())
if mibBuilder.loadTexts: satCfmMepExtEntry.setStatus('current')
satCfmMepSatResponderEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 1, 7, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satCfmMepSatResponderEnabled.setStatus('current')
cmServActivationCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 3, 1))
cmServActivationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 3, 2))
cmServActivationCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 3, 1, 1)).setObjects(("CM-SAT-MIB", "cmSatGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmServActivationCompliance = cmServActivationCompliance.setStatus('current')
cmSatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 28, 3, 2, 1)).setObjects(("CM-SAT-MIB", "satControlIndex"), ("CM-SAT-MIB", "satControlName"), ("CM-SAT-MIB", "satControlTestMode"), ("CM-SAT-MIB", "satControlTestProcedures"), ("CM-SAT-MIB", "satControlConfigTestDuration"), ("CM-SAT-MIB", "satControlConfigCIRTestStepNum"), ("CM-SAT-MIB", "satControlConfigCIRTestStepDuration"), ("CM-SAT-MIB", "satControlPerfTestDuration"), ("CM-SAT-MIB", "satControlStatus"), ("CM-SAT-MIB", "satControlAction"), ("CM-SAT-MIB", "satControlFailCause"), ("CM-SAT-MIB", "satControlTestStartTime"), ("CM-SAT-MIB", "satControlFlpduTagOverride"), ("CM-SAT-MIB", "satStreamIndex"), ("CM-SAT-MIB", "satStreamName"), ("CM-SAT-MIB", "satStreamTestPort"), ("CM-SAT-MIB", "satStreamTestDirection"), ("CM-SAT-MIB", "satStreamDestMacAddress"), ("CM-SAT-MIB", "satStreamFramePayloadType"), ("CM-SAT-MIB", "satStreamCustomFramePayload"), ("CM-SAT-MIB", "satStreamFrameSizeList"), ("CM-SAT-MIB", "satStreamSacProfileId"), ("CM-SAT-MIB", "satStreamSrcMepId"), ("CM-SAT-MIB", "satStreamDestMepType"), ("CM-SAT-MIB", "satStreamDestMepId"), ("CM-SAT-MIB", "satStreamDestMepMacAddr"), ("CM-SAT-MIB", "satStreamDmmPacketSize"), ("CM-SAT-MIB", "satStreamDmmPacketInterval"), ("CM-SAT-MIB", "satStreamOverallResult"), ("CM-SAT-MIB", "satStreamAction"), ("CM-SAT-MIB", "satStreamStatus"), ("CM-SAT-MIB", "satStreamCurrentTestProcedure"), ("CM-SAT-MIB", "satStreamCurrentConfigCirTestStep"), ("CM-SAT-MIB", "satStreamInner1VlanId"), ("CM-SAT-MIB", "satStreamInner1VlanPri"), ("CM-SAT-MIB", "satStreamInner1VlanEnabled"), ("CM-SAT-MIB", "satStreamInner1ValnEtherType"), ("CM-SAT-MIB", "satStreamInner2VlanId"), ("CM-SAT-MIB", "satStreamInner2VlanPri"), ("CM-SAT-MIB", "satStreamInner2VlanEnabled"), ("CM-SAT-MIB", "satStreamInner2VlanEtherType"), ("CM-SAT-MIB", "satStreamOuterVlanId"), ("CM-SAT-MIB", "satStreamOuterVlanPri"), ("CM-SAT-MIB", "satStreamOuterVlanEnabled"), ("CM-SAT-MIB", "satStreamOuterVlanEtherType"), ("CM-SAT-MIB", "satStreamDeiEnabled"), ("CM-SAT-MIB", "satStreamGreenPcp"), ("CM-SAT-MIB", "satStreamYellowPcp"), ("CM-SAT-MIB", "satStreamColorMode"), ("CM-SAT-MIB", "satStreamCirLo"), ("CM-SAT-MIB", "satStreamCirHi"), ("CM-SAT-MIB", "satStreamEirLo"), ("CM-SAT-MIB", "satStreamEirHi"), ("CM-SAT-MIB", "satStreamCbs"), ("CM-SAT-MIB", "satStreamEbs"), ("CM-SAT-MIB", "satStreamStorageType"), ("CM-SAT-MIB", "satStreamRowStatus"), ("CM-SAT-MIB", "satControlStorageType"), ("CM-SAT-MIB", "satControlRowStatus"), ("CM-SAT-MIB", "satStreamDmmPktPriority"), ("CM-SAT-MIB", "satStreamMFactor"), ("CM-SAT-MIB", "satStreamDestMepEnabled"), ("CM-SAT-MIB", "satStreamLlActivateEnabled"), ("CM-SAT-MIB", "satResultStatsSessionId"), ("CM-SAT-MIB", "satResultStatsTestType"), ("CM-SAT-MIB", "satResultStatsStepNumber"), ("CM-SAT-MIB", "satResultStatsStartTime"), ("CM-SAT-MIB", "satResultStatsEndTime"), ("CM-SAT-MIB", "satResultStatsStatus"), ("CM-SAT-MIB", "satResultStatsResult"), ("CM-SAT-MIB", "satResultStatsMinIRGMeasured"), ("CM-SAT-MIB", "satResultStatsAvgIRGMeasured"), ("CM-SAT-MIB", "satResultStatsMaxIRGMeasured"), ("CM-SAT-MIB", "satResultStatsMinIRYMeasured"), ("CM-SAT-MIB", "satResultStatsAvgIRYMeasured"), ("CM-SAT-MIB", "satResultStatsMaxIRYMeasured"), ("CM-SAT-MIB", "satResultStatsFlrGMeasured"), ("CM-SAT-MIB", "satResultStatsFlrYMeasured"), ("CM-SAT-MIB", "satResultStatsFlrGCounts"), ("CM-SAT-MIB", "satResultStatsFlrYCounts"), ("CM-SAT-MIB", "satResultStatsMinFTDGMeasured"), ("CM-SAT-MIB", "satResultStatsAvgFTDGMeasured"), ("CM-SAT-MIB", "satResultStatsMaxFTDGMeasured"), ("CM-SAT-MIB", "satResultStatsIMinFDVGMeasured"), ("CM-SAT-MIB", "satResultStatsIAvgFDVGMeasured"), ("CM-SAT-MIB", "satResultStatsIMaxFDVGMeasured"), ("CM-SAT-MIB", "satResultStatsISyncErrorsNum"), ("CM-SAT-MIB", "satResultStatsIfNegFLG"), ("CM-SAT-MIB", "satResultStatsIfNegFLY"), ("CM-SAT-MIB", "satResultStatsAvgIRT"), ("CM-SAT-MIB", "satResultStatsFlrTMeasured"), ("CM-SAT-MIB", "satResultStatsFlTCounts"), ("CM-SAT-MIB", "satResultStatsIfNegFLT"), ("CM-SAT-MIB", "satSacProfileIndex"), ("CM-SAT-MIB", "satSacProfileAlias"), ("CM-SAT-MIB", "satSacProfileFLR"), ("CM-SAT-MIB", "satSacProfileFTD"), ("CM-SAT-MIB", "satSacProfileFDV"), ("CM-SAT-MIB", "satSacProfileStorageType"), ("CM-SAT-MIB", "satSacProfileRowStatus"), ("CM-SAT-MIB", "satResponderSessionIndex"), ("CM-SAT-MIB", "satResponderSessionId"), ("CM-SAT-MIB", "satResponderSessionControlMepMacAddr"), ("CM-SAT-MIB", "satResponderSessionMepId"), ("CM-SAT-MIB", "satResponderSessionStorageType"), ("CM-SAT-MIB", "satResponderSessionRowStatus"), ("CM-SAT-MIB", "satCfmMepSatResponderEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmSatGroup = cmSatGroup.setStatus('current')
mibBuilder.exportSymbols("CM-SAT-MIB", satResultStatsAvgFTDGMeasured=satResultStatsAvgFTDGMeasured, satResultStatsEntry=satResultStatsEntry, satResultStatsMaxIRGMeasured=satResultStatsMaxIRGMeasured, satSacProfileIndex=satSacProfileIndex, satStreamDestMepId=satStreamDestMepId, satStreamInner1VlanPri=satStreamInner1VlanPri, satStreamInner1VlanEnabled=satStreamInner1VlanEnabled, satResultStatsFlrGCounts=satResultStatsFlrGCounts, SatResult=SatResult, satStreamCbs=satStreamCbs, satStreamInner2VlanEtherType=satStreamInner2VlanEtherType, satStreamName=satStreamName, satStreamDestMepMacAddr=satStreamDestMepMacAddr, satControlTestStartTime=satControlTestStartTime, satResultStatsAvgIRGMeasured=satResultStatsAvgIRGMeasured, satStreamEntry=satStreamEntry, satStreamRowStatus=satStreamRowStatus, satStreamInner1VlanId=satStreamInner1VlanId, satControlFailCause=satControlFailCause, cmServActivationCompliance=cmServActivationCompliance, satStreamStorageType=satStreamStorageType, satStreamOuterVlanEtherType=satStreamOuterVlanEtherType, satStreamDmmPacketSize=satStreamDmmPacketSize, satSacProfileFLR=satSacProfileFLR, satResponderSessionIndex=satResponderSessionIndex, satResponderSessionRowStatus=satResponderSessionRowStatus, satControlName=satControlName, satStreamCustomFramePayload=satStreamCustomFramePayload, satResultStatsStatus=satResultStatsStatus, satStreamMFactor=satStreamMFactor, cmServActivationGroups=cmServActivationGroups, satStreamFramePayloadType=satStreamFramePayloadType, satControlAction=satControlAction, satStreamOuterVlanEnabled=satStreamOuterVlanEnabled, satCfmMepExtEntry=satCfmMepExtEntry, satStreamCurrentTestProcedure=satStreamCurrentTestProcedure, satCfmMepSatResponderEnabled=satCfmMepSatResponderEnabled, satSacProfileStorageType=satSacProfileStorageType, satStreamCurrentConfigCirTestStep=satStreamCurrentConfigCirTestStep, satControlConfigTestDuration=satControlConfigTestDuration, cmServActivationNotifications=cmServActivationNotifications, satResponderSessionStorageType=satResponderSessionStorageType, satStreamTestDirection=satStreamTestDirection, neSatParamsEtherType=neSatParamsEtherType, satStreamOverallResult=satStreamOverallResult, satCfmMepExtTable=satCfmMepExtTable, satSacProfileTable=satSacProfileTable, cmSatGroup=cmSatGroup, satControlRowStatus=satControlRowStatus, satSacProfileEntry=satSacProfileEntry, PYSNMP_MODULE_ID=cmServiceActivationMIB, satControlStorageType=satControlStorageType, satStreamEbs=satStreamEbs, satResultStatsIfNegFLY=satResultStatsIfNegFLY, SatDirection=SatDirection, satResultStatsISyncErrorsNum=satResultStatsISyncErrorsNum, satResultStatsAvgIRT=satResultStatsAvgIRT, ServiceActivationTestMode=ServiceActivationTestMode, satControlTable=satControlTable, satResultStatsMaxFTDGMeasured=satResultStatsMaxFTDGMeasured, cmServActivationConformance=cmServActivationConformance, satStreamInner2VlanId=satStreamInner2VlanId, satResultStatsMinIRGMeasured=satResultStatsMinIRGMeasured, satStreamCirHi=satStreamCirHi, satResultStatsStartTime=satResultStatsStartTime, satControlStatus=satControlStatus, satResultStatsSessionId=satResultStatsSessionId, satStreamDeiEnabled=satStreamDeiEnabled, satResultStatsFlrYMeasured=satResultStatsFlrYMeasured, SatTestAction=SatTestAction, networkElementSatParamsTable=networkElementSatParamsTable, satResultStatsFlTCounts=satResultStatsFlTCounts, satStreamCirLo=satStreamCirLo, satControlFlpduTagOverride=satControlFlpduTagOverride, satResultStatsMinFTDGMeasured=satResultStatsMinFTDGMeasured, satControlPerfTestDuration=satControlPerfTestDuration, satResultStatsAvgIRYMeasured=satResultStatsAvgIRYMeasured, satResultStatsFlrYCounts=satResultStatsFlrYCounts, satStreamIndex=satStreamIndex, satStreamSrcMepId=satStreamSrcMepId, satStreamEirLo=satStreamEirLo, satResultStatsIfNegFLG=satResultStatsIfNegFLG, satResponderSessionControlMepMacAddr=satResponderSessionControlMepMacAddr, satStreamDestMacAddress=satStreamDestMacAddress, satStreamInner1ValnEtherType=satStreamInner1ValnEtherType, satStreamGreenPcp=satStreamGreenPcp, satStreamStatus=satStreamStatus, satStreamTable=satStreamTable, satResponderSessionMepId=satResponderSessionMepId, cmServiceActivationMIB=cmServiceActivationMIB, satStreamInner2VlanEnabled=satStreamInner2VlanEnabled, satResultStatsIfNegFLT=satResultStatsIfNegFLT, satResultStatsFlrGMeasured=satResultStatsFlrGMeasured, SatStatus=SatStatus, SatProceduresType=SatProceduresType, satStreamLlActivateEnabled=satStreamLlActivateEnabled, SatFramePayloadType=SatFramePayloadType, satStreamDestMepEnabled=satStreamDestMepEnabled, satStreamColorMode=satStreamColorMode, satResultStatsIMinFDVGMeasured=satResultStatsIMinFDVGMeasured, satResultStatsStepNumber=satResultStatsStepNumber, satControlIndex=satControlIndex, satResultStatsTable=satResultStatsTable, satControlConfigCIRTestStepDuration=satControlConfigCIRTestStepDuration, satSacProfileAlias=satSacProfileAlias, satResultStatsTestType=satResultStatsTestType, satSacProfileFDV=satSacProfileFDV, SatProceduresList=SatProceduresList, satControlTestProcedures=satControlTestProcedures, cmServActivationObjects=cmServActivationObjects, satStreamFrameSizeList=satStreamFrameSizeList, satStreamInner2VlanPri=satStreamInner2VlanPri, satControlEntry=satControlEntry, satStreamOuterVlanId=satStreamOuterVlanId, satResultStatsResult=satResultStatsResult, satControlTestMode=satControlTestMode, satStreamDmmPacketInterval=satStreamDmmPacketInterval, cmServActivationCompliances=cmServActivationCompliances, satStreamOuterVlanPri=satStreamOuterVlanPri, satControlConfigCIRTestStepNum=satControlConfigCIRTestStepNum, satStreamSacProfileId=satStreamSacProfileId, satResultStatsMinIRYMeasured=satResultStatsMinIRYMeasured, networkElementSatParamsEntry=networkElementSatParamsEntry, satResultStatsFlrTMeasured=satResultStatsFlrTMeasured, satResponderSessionTable=satResponderSessionTable, satStreamTestPort=satStreamTestPort, satStreamAction=satStreamAction, satStreamEirHi=satStreamEirHi, satStreamYellowPcp=satStreamYellowPcp, satStreamDmmPktPriority=satStreamDmmPktPriority, satSacProfileRowStatus=satSacProfileRowStatus, satSacProfileFTD=satSacProfileFTD, satResultStatsIMaxFDVGMeasured=satResultStatsIMaxFDVGMeasured, satStreamDestMepType=satStreamDestMepType, satResultStatsIAvgFDVGMeasured=satResultStatsIAvgFDVGMeasured, satResponderSessionId=satResponderSessionId, satResultStatsMaxIRYMeasured=satResultStatsMaxIRYMeasured, satResultStatsEndTime=satResultStatsEndTime, satResponderSessionEntry=satResponderSessionEntry)
