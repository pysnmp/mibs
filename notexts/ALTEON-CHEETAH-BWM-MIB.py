#
# PySNMP MIB module ALTEON-CHEETAH-BWM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/alteonos/ALTEON-CHEETAH-BWM-MIB
# Produced by pysmi-1.1.12 at Wed May 29 07:18:56 2024
# On host fv-az2021-913 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
aws_switch, = mibBuilder.importSymbols("ALTEON-ROOT-MIB", "aws-switch")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, TimeTicks, NotificationType, Integer32, Bits, ObjectIdentity, iso, Counter32, Counter64, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "TimeTicks", "NotificationType", "Integer32", "Bits", "ObjectIdentity", "iso", "Counter32", "Counter64", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bwm = ModuleIdentity((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6))
bwm.setRevisions(('2004-09-01 00:00',))
if mibBuilder.loadTexts: bwm.setLastUpdated('200409010000Z')
if mibBuilder.loadTexts: bwm.setOrganization('Nortel Networks')
bwmConfigs = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1))
bwmStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2))
bwmOpers = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 3))
bwmGeneralConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1))
bwmPolicyConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2))
bwmContractConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3))
bwmContTimePolicyConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4))
bwmContractGroupConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5))
bwmCurCfgGenState = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("on", 2), ("off", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgGenState.setStatus('current')
bwmNewCfgGenState = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("on", 2), ("off", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgGenState.setStatus('current')
bwmCurCfgGenEnforcePolicy = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgGenEnforcePolicy.setStatus('current')
bwmNewCfgGenEnforcePolicy = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgGenEnforcePolicy.setStatus('current')
bwmCurCfgGenSmtpUser = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgGenSmtpUser.setStatus('current')
bwmNewCfgGenSmtpUser = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgGenSmtpUser.setStatus('current')
bwmCurCfgGenEmailFrequency = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgGenEmailFrequency.setStatus('current')
bwmNewCfgGenEmailFrequency = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgGenEmailFrequency.setStatus('current')
bwmCurCfgGenIPUserLimit = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgGenIPUserLimit.setStatus('current')
bwmNewCfgGenIPUserLimit = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgGenIPUserLimit.setStatus('current')
bwmCurCfgGenEmail = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgGenEmail.setStatus('current')
bwmNewCfgGenEmail = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgGenEmail.setStatus('current')
bwmCurCfgGenReport = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgGenReport.setStatus('current')
bwmNewCfgGenReport = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgGenReport.setStatus('current')
bwmPolicyTableMaxEnt = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmPolicyTableMaxEnt.setStatus('current')
bwmCurCfgPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 2), )
if mibBuilder.loadTexts: bwmCurCfgPolicyTable.setStatus('current')
bwmCurCfgPolicyTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 2, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmCurCfgPolicyIndx"))
if mibBuilder.loadTexts: bwmCurCfgPolicyTableEntry.setStatus('current')
bwmCurCfgPolicyIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyIndx.setStatus('current')
bwmCurCfgPolicyTosIn = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyTosIn.setStatus('current')
bwmCurCfgPolicyTosOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyTosOut.setStatus('current')
bwmCurCfgPolicyHard = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyHard.setStatus('current')
bwmCurCfgPolicySoft = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicySoft.setStatus('current')
bwmCurCfgPolicyResv = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyResv.setStatus('current')
bwmCurCfgPolicyBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8192, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyBuffer.setStatus('current')
bwmCurCfgPolicyUserLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyUserLimit.setStatus('current')
bwmNewCfgPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 3), )
if mibBuilder.loadTexts: bwmNewCfgPolicyTable.setStatus('current')
bwmNewCfgPolicyTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 3, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmNewCfgPolicyIndx"))
if mibBuilder.loadTexts: bwmNewCfgPolicyTableEntry.setStatus('current')
bwmNewCfgPolicyIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmNewCfgPolicyIndx.setStatus('current')
bwmNewCfgPolicyTosIn = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgPolicyTosIn.setStatus('current')
bwmNewCfgPolicyTosOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgPolicyTosOut.setStatus('current')
bwmNewCfgPolicyHard = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgPolicyHard.setStatus('current')
bwmNewCfgPolicySoft = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgPolicySoft.setStatus('current')
bwmNewCfgPolicyResv = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgPolicyResv.setStatus('current')
bwmNewCfgPolicyBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8192, 128000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgPolicyBuffer.setStatus('current')
bwmNewCfgPolicyDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("delete", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgPolicyDelete.setStatus('current')
bwmNewCfgPolicyUserLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 2, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgPolicyUserLimit.setStatus('current')
bwmContractTableMaxEnt = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmContractTableMaxEnt.setStatus('current')
bwmCurCfgContractTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2), )
if mibBuilder.loadTexts: bwmCurCfgContractTable.setStatus('current')
bwmCurCfgContractTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmCurCfgContractIndx"))
if mibBuilder.loadTexts: bwmCurCfgContractTableEntry.setStatus('current')
bwmCurCfgContractIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractIndx.setStatus('current')
bwmCurCfgContractName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractName.setStatus('current')
bwmCurCfgContractState = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractState.setStatus('current')
bwmCurCfgContractPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractPolicy.setStatus('current')
bwmCurCfgContractPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractPrec.setStatus('current')
bwmCurCfgContractUseTos = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractUseTos.setStatus('current')
bwmCurCfgContractHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractHistory.setStatus('current')
bwmCurCfgContractShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractShaping.setStatus('current')
bwmCurCfgContractResizeTcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractResizeTcp.setStatus('current')
bwmCurCfgContractIpLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractIpLimit.setStatus('current')
bwmCurCfgContractIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sip", 1), ("dip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractIpType.setStatus('current')
bwmCurCfgContractMonitorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractMonitorMode.setStatus('current')
bwmCurCfgContractGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractGroup.setStatus('current')
bwmCurCfgContractMaxSess = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractMaxSess.setStatus('current')
bwmNewCfgContractTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3), )
if mibBuilder.loadTexts: bwmNewCfgContractTable.setStatus('current')
bwmNewCfgContractTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmNewCfgContractIndx"))
if mibBuilder.loadTexts: bwmNewCfgContractTableEntry.setStatus('current')
bwmNewCfgContractIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmNewCfgContractIndx.setStatus('current')
bwmNewCfgContractName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractName.setStatus('current')
bwmNewCfgContractState = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractState.setStatus('current')
bwmNewCfgContractPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractPolicy.setStatus('current')
bwmNewCfgContractDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("delete", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractDelete.setStatus('current')
bwmNewCfgContractPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractPrec.setStatus('current')
bwmNewCfgContractUseTos = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractUseTos.setStatus('current')
bwmNewCfgContractHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractHistory.setStatus('current')
bwmNewCfgContractShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractShaping.setStatus('current')
bwmNewCfgContractResizeTcp = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractResizeTcp.setStatus('current')
bwmNewCfgContractIpLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractIpLimit.setStatus('current')
bwmNewCfgContractIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sip", 1), ("dip", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractIpType.setStatus('current')
bwmNewCfgContractMonitorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractMonitorMode.setStatus('current')
bwmNewCfgContractGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmNewCfgContractGroup.setStatus('current')
bwmNewCfgContractMaxSess = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 3, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractMaxSess.setStatus('current')
bwmContTimePolicyTableMaxEnt = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmContTimePolicyTableMaxEnt.setStatus('current')
bwmCurCfgContTimePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 2), )
if mibBuilder.loadTexts: bwmCurCfgContTimePolicyTable.setStatus('current')
bwmCurCfgContTimePolicyTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 2, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmCurCfgContTimePolicyContIndx"), (0, "ALTEON-CHEETAH-BWM-MIB", "bwmCurCfgContTimePolicyIndx"))
if mibBuilder.loadTexts: bwmCurCfgContTimePolicyTableEntry.setStatus('current')
bwmCurCfgContTimePolicyContIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContTimePolicyContIndx.setStatus('current')
bwmCurCfgContTimePolicyIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContTimePolicyIndx.setStatus('current')
bwmCurCfgContTimePolicyDay = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7), ("weekday", 8), ("weekend", 9), ("everyday", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContTimePolicyDay.setStatus('current')
bwmCurCfgContTimePolicyFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContTimePolicyFrom.setStatus('current')
bwmCurCfgContTimePolicyTo = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContTimePolicyTo.setStatus('current')
bwmCurCfgContTimePolicyPol = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContTimePolicyPol.setStatus('current')
bwmCurCfgContTimePolicyState = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContTimePolicyState.setStatus('current')
bwmNewCfgContTimePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 3), )
if mibBuilder.loadTexts: bwmNewCfgContTimePolicyTable.setStatus('current')
bwmNewCfgContTimePolicyTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 3, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmNewCfgContTimePolicyContIndx"), (0, "ALTEON-CHEETAH-BWM-MIB", "bwmNewCfgContTimePolicyIndx"))
if mibBuilder.loadTexts: bwmNewCfgContTimePolicyTableEntry.setStatus('current')
bwmNewCfgContTimePolicyContIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmNewCfgContTimePolicyContIndx.setStatus('current')
bwmNewCfgContTimePolicyIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmNewCfgContTimePolicyIndx.setStatus('current')
bwmNewCfgContTimePolicyDay = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7), ("weekday", 8), ("weekend", 9), ("everyday", 10)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContTimePolicyDay.setStatus('current')
bwmNewCfgContTimePolicyFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContTimePolicyFrom.setStatus('current')
bwmNewCfgContTimePolicyTo = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContTimePolicyTo.setStatus('current')
bwmNewCfgContTimePolicyPol = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 3, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContTimePolicyPol.setStatus('current')
bwmNewCfgContTimePolicyState = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContTimePolicyState.setStatus('current')
bwmNewCfgContTimePolicyDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 4, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("delete", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContTimePolicyDelete.setStatus('current')
bwmContractGroupTableMaxEnt = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmContractGroupTableMaxEnt.setStatus('current')
bwmCurCfgContractGroupTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 2), )
if mibBuilder.loadTexts: bwmCurCfgContractGroupTable.setStatus('current')
bwmCurCfgContractGroupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 2, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmCurCfgContractGroupIndx"))
if mibBuilder.loadTexts: bwmCurCfgContractGroupTableEntry.setStatus('current')
bwmCurCfgContractGroupIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractGroupIndx.setStatus('current')
bwmCurCfgContractGroupContracts = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractGroupContracts.setStatus('current')
bwmCurCfgContractGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractGroupName.setStatus('current')
bwmNewCfgContractGroupTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 3), )
if mibBuilder.loadTexts: bwmNewCfgContractGroupTable.setStatus('current')
bwmNewCfgContractGroupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 3, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmNewCfgContractGroupIndx"))
if mibBuilder.loadTexts: bwmNewCfgContractGroupTableEntry.setStatus('current')
bwmNewCfgContractGroupIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmNewCfgContractGroupIndx.setStatus('current')
bwmNewCfgContractGroupContracts = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmNewCfgContractGroupContracts.setStatus('current')
bwmNewCfgContractGroupAddCont = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 3, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractGroupAddCont.setStatus('current')
bwmNewCfgContractGroupRemCont = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractGroupRemCont.setStatus('current')
bwmNewCfgContractGroupDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("delete", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractGroupDelete.setStatus('current')
bwmNewCfgContractGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bwmNewCfgContractGroupName.setStatus('current')
bwmContractGroupTableMaxCont = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 1, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmContractGroupTableMaxCont.setStatus('current')
bwmStatTcTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 1), )
if mibBuilder.loadTexts: bwmStatTcTable.setStatus('current')
bwmStatTcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 1, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmStatTcContractIndex"))
if mibBuilder.loadTexts: bwmStatTcEntry.setStatus('current')
bwmStatTcContractIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcContractIndex.setStatus('current')
bwmStatTcName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcName.setStatus('current')
bwmStatTcOutoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcOutoct.setStatus('current')
bwmStatTcOutdisoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcOutdisoct.setStatus('current')
bwmStatTcBufferUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcBufferUsed.setStatus('current')
bwmStatTcBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcBufferMax.setStatus('current')
bwmStatTcTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcTotalPackets.setStatus('current')
bwmStatTcSessRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcSessRejected.setStatus('current')
bwmStatTcrTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 2), )
if mibBuilder.loadTexts: bwmStatTcrTable.setStatus('current')
bwmStatTcrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 2, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmStatTcrContractIndex"))
if mibBuilder.loadTexts: bwmStatTcrEntry.setStatus('current')
bwmStatTcrContractIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrContractIndex.setStatus('current')
bwmStatTcrName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrName.setStatus('current')
bwmStatTcrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrRate.setStatus('current')
bwmStatTcrOutoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrOutoct.setStatus('current')
bwmStatTcrOutdisoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrOutdisoct.setStatus('current')
bwmStatTcrBufferUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrBufferUsed.setStatus('current')
bwmStatTcrBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrBufferMax.setStatus('current')
bwmStatTcrTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrTotalPackets.setStatus('current')
bwmStatPortTcTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 3), )
if mibBuilder.loadTexts: bwmStatPortTcTable.setStatus('current')
bwmStatPortTcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 3, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmStatPortTcPortIndex"), (0, "ALTEON-CHEETAH-BWM-MIB", "bwmStatPortTcContractIndex"))
if mibBuilder.loadTexts: bwmStatPortTcEntry.setStatus('current')
bwmStatPortTcPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcPortIndex.setStatus('current')
bwmStatPortTcContractIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcContractIndex.setStatus('current')
bwmStatPortTcName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcName.setStatus('current')
bwmStatPortTcOutoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcOutoct.setStatus('current')
bwmStatPortTcOutdisoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcOutdisoct.setStatus('current')
bwmStatPortTcBufferUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcBufferUsed.setStatus('current')
bwmStatPortTcBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcBufferMax.setStatus('current')
bwmStatPortTcTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcTotalPackets.setStatus('current')
bwmStatPortTcrTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 4), )
if mibBuilder.loadTexts: bwmStatPortTcrTable.setStatus('current')
bwmStatPortTcrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 4, 1), ).setIndexNames((0, "ALTEON-CHEETAH-BWM-MIB", "bwmStatPortTcrPortIndex"), (0, "ALTEON-CHEETAH-BWM-MIB", "bwmStatPortTcrContractIndex"))
if mibBuilder.loadTexts: bwmStatPortTcrEntry.setStatus('current')
bwmStatPortTcrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcrPortIndex.setStatus('current')
bwmStatPortTcrContractIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcrContractIndex.setStatus('current')
bwmStatPortTcrName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcrName.setStatus('current')
bwmStatPortTcrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcrRate.setStatus('current')
bwmStatPortTcrOutoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcrOutoct.setStatus('current')
bwmStatPortTcrOutdisoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcrOutdisoct.setStatus('current')
bwmStatPortTcrBufferUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcrBufferUsed.setStatus('current')
bwmStatPortTcrBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcrBufferMax.setStatus('current')
bwmStatPortTcrTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatPortTcrTotalPackets.setStatus('current')
bwmStatsClear = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmStatsClear.setStatus('current')
bwmOperSendSMTP = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 6, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("send", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmOperSendSMTP.setStatus('current')
mibBuilder.exportSymbols("ALTEON-CHEETAH-BWM-MIB", bwmCurCfgContractTable=bwmCurCfgContractTable, bwmNewCfgContractMonitorMode=bwmNewCfgContractMonitorMode, bwmStats=bwmStats, bwmNewCfgPolicyUserLimit=bwmNewCfgPolicyUserLimit, bwmCurCfgContTimePolicyContIndx=bwmCurCfgContTimePolicyContIndx, bwmStatTcrContractIndex=bwmStatTcrContractIndex, bwmContractGroupConfig=bwmContractGroupConfig, bwmCurCfgContractResizeTcp=bwmCurCfgContractResizeTcp, bwmNewCfgContTimePolicyFrom=bwmNewCfgContTimePolicyFrom, bwmCurCfgPolicyTosOut=bwmCurCfgPolicyTosOut, bwmCurCfgContractPolicy=bwmCurCfgContractPolicy, bwmCurCfgContTimePolicyFrom=bwmCurCfgContTimePolicyFrom, bwmCurCfgContractPrec=bwmCurCfgContractPrec, bwmCurCfgPolicyHard=bwmCurCfgPolicyHard, bwm=bwm, bwmNewCfgPolicyBuffer=bwmNewCfgPolicyBuffer, bwmContractGroupTableMaxCont=bwmContractGroupTableMaxCont, bwmCurCfgContractGroupName=bwmCurCfgContractGroupName, bwmCurCfgContractGroupIndx=bwmCurCfgContractGroupIndx, bwmStatPortTcrContractIndex=bwmStatPortTcrContractIndex, bwmCurCfgPolicyUserLimit=bwmCurCfgPolicyUserLimit, bwmCurCfgContractMaxSess=bwmCurCfgContractMaxSess, bwmNewCfgPolicyIndx=bwmNewCfgPolicyIndx, bwmGeneralConfig=bwmGeneralConfig, bwmStatTcrOutoct=bwmStatTcrOutoct, bwmCurCfgContTimePolicyIndx=bwmCurCfgContTimePolicyIndx, bwmNewCfgContTimePolicyTableEntry=bwmNewCfgContTimePolicyTableEntry, bwmNewCfgGenEmailFrequency=bwmNewCfgGenEmailFrequency, bwmNewCfgContractState=bwmNewCfgContractState, bwmStatTcContractIndex=bwmStatTcContractIndex, bwmContractTableMaxEnt=bwmContractTableMaxEnt, bwmContractGroupTableMaxEnt=bwmContractGroupTableMaxEnt, bwmNewCfgContractGroupRemCont=bwmNewCfgContractGroupRemCont, bwmNewCfgContractDelete=bwmNewCfgContractDelete, bwmNewCfgContTimePolicyIndx=bwmNewCfgContTimePolicyIndx, bwmNewCfgPolicyTableEntry=bwmNewCfgPolicyTableEntry, bwmNewCfgContTimePolicyState=bwmNewCfgContTimePolicyState, bwmCurCfgGenState=bwmCurCfgGenState, bwmNewCfgPolicyTable=bwmNewCfgPolicyTable, bwmStatTcEntry=bwmStatTcEntry, bwmCurCfgContTimePolicyTableEntry=bwmCurCfgContTimePolicyTableEntry, bwmNewCfgContractHistory=bwmNewCfgContractHistory, bwmNewCfgContractUseTos=bwmNewCfgContractUseTos, bwmCurCfgPolicyBuffer=bwmCurCfgPolicyBuffer, bwmCurCfgContractGroup=bwmCurCfgContractGroup, bwmCurCfgContractName=bwmCurCfgContractName, bwmCurCfgContTimePolicyState=bwmCurCfgContTimePolicyState, bwmCurCfgGenIPUserLimit=bwmCurCfgGenIPUserLimit, bwmNewCfgContractIpLimit=bwmNewCfgContractIpLimit, bwmStatTcTable=bwmStatTcTable, bwmCurCfgContractUseTos=bwmCurCfgContractUseTos, bwmStatPortTcContractIndex=bwmStatPortTcContractIndex, bwmStatPortTcOutdisoct=bwmStatPortTcOutdisoct, bwmStatPortTcrPortIndex=bwmStatPortTcrPortIndex, bwmCurCfgGenEnforcePolicy=bwmCurCfgGenEnforcePolicy, bwmNewCfgPolicySoft=bwmNewCfgPolicySoft, bwmOpers=bwmOpers, bwmStatPortTcrOutdisoct=bwmStatPortTcrOutdisoct, bwmStatPortTcrTotalPackets=bwmStatPortTcrTotalPackets, bwmNewCfgContTimePolicyDay=bwmNewCfgContTimePolicyDay, bwmStatTcrName=bwmStatTcrName, bwmConfigs=bwmConfigs, bwmOperSendSMTP=bwmOperSendSMTP, bwmNewCfgContractPrec=bwmNewCfgContractPrec, bwmCurCfgGenEmailFrequency=bwmCurCfgGenEmailFrequency, bwmStatTcOutoct=bwmStatTcOutoct, bwmNewCfgContTimePolicyPol=bwmNewCfgContTimePolicyPol, bwmNewCfgContractGroupContracts=bwmNewCfgContractGroupContracts, bwmStatsClear=bwmStatsClear, bwmNewCfgContTimePolicyContIndx=bwmNewCfgContTimePolicyContIndx, bwmStatPortTcrOutoct=bwmStatPortTcrOutoct, bwmStatTcrEntry=bwmStatTcrEntry, bwmNewCfgGenReport=bwmNewCfgGenReport, bwmCurCfgContTimePolicyTable=bwmCurCfgContTimePolicyTable, bwmCurCfgContractGroupTable=bwmCurCfgContractGroupTable, bwmNewCfgGenSmtpUser=bwmNewCfgGenSmtpUser, bwmNewCfgContractTable=bwmNewCfgContractTable, bwmNewCfgContractGroupIndx=bwmNewCfgContractGroupIndx, bwmNewCfgContTimePolicyTable=bwmNewCfgContTimePolicyTable, bwmCurCfgContTimePolicyTo=bwmCurCfgContTimePolicyTo, bwmStatTcrTotalPackets=bwmStatTcrTotalPackets, bwmStatPortTcrEntry=bwmStatPortTcrEntry, bwmCurCfgContractIpLimit=bwmCurCfgContractIpLimit, bwmNewCfgContractShaping=bwmNewCfgContractShaping, bwmNewCfgContractGroupName=bwmNewCfgContractGroupName, bwmCurCfgContractIndx=bwmCurCfgContractIndx, bwmNewCfgPolicyHard=bwmNewCfgPolicyHard, bwmStatPortTcBufferMax=bwmStatPortTcBufferMax, bwmStatPortTcTotalPackets=bwmStatPortTcTotalPackets, bwmNewCfgContractPolicy=bwmNewCfgContractPolicy, bwmStatTcrOutdisoct=bwmStatTcrOutdisoct, bwmCurCfgGenReport=bwmCurCfgGenReport, bwmNewCfgContractGroupTable=bwmNewCfgContractGroupTable, bwmStatTcrRate=bwmStatTcrRate, bwmPolicyConfig=bwmPolicyConfig, bwmNewCfgPolicyTosOut=bwmNewCfgPolicyTosOut, bwmCurCfgPolicyResv=bwmCurCfgPolicyResv, bwmCurCfgPolicyTosIn=bwmCurCfgPolicyTosIn, bwmNewCfgContractTableEntry=bwmNewCfgContractTableEntry, bwmStatPortTcPortIndex=bwmStatPortTcPortIndex, bwmNewCfgPolicyTosIn=bwmNewCfgPolicyTosIn, bwmStatTcTotalPackets=bwmStatTcTotalPackets, bwmCurCfgContractState=bwmCurCfgContractState, bwmContTimePolicyConfig=bwmContTimePolicyConfig, bwmNewCfgPolicyDelete=bwmNewCfgPolicyDelete, bwmCurCfgContractMonitorMode=bwmCurCfgContractMonitorMode, bwmNewCfgContractGroupDelete=bwmNewCfgContractGroupDelete, bwmStatTcBufferMax=bwmStatTcBufferMax, bwmCurCfgContTimePolicyDay=bwmCurCfgContTimePolicyDay, bwmCurCfgGenEmail=bwmCurCfgGenEmail, bwmStatTcrBufferMax=bwmStatTcrBufferMax, bwmStatTcSessRejected=bwmStatTcSessRejected, bwmNewCfgGenState=bwmNewCfgGenState, bwmNewCfgContractGroup=bwmNewCfgContractGroup, bwmCurCfgPolicySoft=bwmCurCfgPolicySoft, bwmNewCfgContractName=bwmNewCfgContractName, bwmNewCfgContTimePolicyTo=bwmNewCfgContTimePolicyTo, bwmStatPortTcrBufferUsed=bwmStatPortTcrBufferUsed, bwmStatPortTcrBufferMax=bwmStatPortTcrBufferMax, bwmNewCfgContractGroupAddCont=bwmNewCfgContractGroupAddCont, bwmStatPortTcOutoct=bwmStatPortTcOutoct, bwmCurCfgContractHistory=bwmCurCfgContractHistory, bwmNewCfgPolicyResv=bwmNewCfgPolicyResv, bwmContTimePolicyTableMaxEnt=bwmContTimePolicyTableMaxEnt, bwmStatTcOutdisoct=bwmStatTcOutdisoct, bwmCurCfgContractIpType=bwmCurCfgContractIpType, bwmNewCfgContTimePolicyDelete=bwmNewCfgContTimePolicyDelete, bwmStatTcrBufferUsed=bwmStatTcrBufferUsed, bwmStatPortTcrRate=bwmStatPortTcrRate, bwmCurCfgContractTableEntry=bwmCurCfgContractTableEntry, bwmContractConfig=bwmContractConfig, bwmCurCfgContractShaping=bwmCurCfgContractShaping, bwmNewCfgContractIndx=bwmNewCfgContractIndx, bwmNewCfgGenEnforcePolicy=bwmNewCfgGenEnforcePolicy, bwmStatTcrTable=bwmStatTcrTable, bwmCurCfgPolicyTableEntry=bwmCurCfgPolicyTableEntry, bwmNewCfgContractResizeTcp=bwmNewCfgContractResizeTcp, bwmStatPortTcrName=bwmStatPortTcrName, bwmPolicyTableMaxEnt=bwmPolicyTableMaxEnt, bwmNewCfgContractIpType=bwmNewCfgContractIpType, bwmNewCfgGenEmail=bwmNewCfgGenEmail, bwmCurCfgPolicyTable=bwmCurCfgPolicyTable, bwmCurCfgContractGroupContracts=bwmCurCfgContractGroupContracts, bwmStatTcName=bwmStatTcName, bwmNewCfgGenIPUserLimit=bwmNewCfgGenIPUserLimit, bwmCurCfgContTimePolicyPol=bwmCurCfgContTimePolicyPol, bwmStatPortTcName=bwmStatPortTcName, PYSNMP_MODULE_ID=bwm, bwmStatPortTcrTable=bwmStatPortTcrTable, bwmStatPortTcEntry=bwmStatPortTcEntry, bwmStatPortTcTable=bwmStatPortTcTable, bwmCurCfgContractGroupTableEntry=bwmCurCfgContractGroupTableEntry, bwmNewCfgContractMaxSess=bwmNewCfgContractMaxSess, bwmCurCfgPolicyIndx=bwmCurCfgPolicyIndx, bwmStatPortTcBufferUsed=bwmStatPortTcBufferUsed, bwmStatTcBufferUsed=bwmStatTcBufferUsed, bwmNewCfgContractGroupTableEntry=bwmNewCfgContractGroupTableEntry, bwmCurCfgGenSmtpUser=bwmCurCfgGenSmtpUser)
