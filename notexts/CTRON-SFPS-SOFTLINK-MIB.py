#
# PySNMP MIB module CTRON-SFPS-SOFTLINK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-SFPS-SOFTLINK-MIB
# Produced by pysmi-1.1.12 at Wed Jul  3 09:55:50 2024
# On host fv-az530-296 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
sfpsVNSFacility, sfpsDiagFacility, sfpsRAFacility, sfpsMcastFacility, sfpsCentersFacility, sfpsFpcFacility, sfpsLiteFacility, sfpsBetaFacility, sfpsCallTapFacility, sfpsFabricFacility, sfpsUpLinkFacility, sfpsVLANFacility = mibBuilder.importSymbols("CTRON-SFPS-INCLUDE-MIB", "sfpsVNSFacility", "sfpsDiagFacility", "sfpsRAFacility", "sfpsMcastFacility", "sfpsCentersFacility", "sfpsFpcFacility", "sfpsLiteFacility", "sfpsBetaFacility", "sfpsCallTapFacility", "sfpsFabricFacility", "sfpsUpLinkFacility", "sfpsVLANFacility")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, iso, Unsigned32, MibIdentifier, ObjectIdentity, TimeTicks, Bits, Integer32, Counter64, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Unsigned32", "MibIdentifier", "ObjectIdentity", "TimeTicks", "Bits", "Integer32", "Counter64", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class HexInteger(Integer32):
    pass

sfpsCentersFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1), )
if mibBuilder.loadTexts: sfpsCentersFacilityTable.setStatus('mandatory')
sfpsCentersFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsCentersFacilityAddress"))
if mibBuilder.loadTexts: sfpsCentersFacilityEntry.setStatus('mandatory')
sfpsCentersFacilityAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 1), HexInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityAddress.setStatus('mandatory')
sfpsCentersFacilityMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityMetric.setStatus('mandatory')
sfpsCentersFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityElementName.setStatus('mandatory')
sfpsCentersFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityOperStatus.setStatus('mandatory')
sfpsCentersFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsCentersFacilityAdminStatus.setStatus('mandatory')
sfpsCentersFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityStatusTime.setStatus('mandatory')
sfpsCentersFacilityRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityRequests.setStatus('mandatory')
sfpsCentersFacilityResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCentersFacilityResponses.setStatus('mandatory')
sfpsBetaFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1), )
if mibBuilder.loadTexts: sfpsBetaFacilityTable.setStatus('mandatory')
sfpsBetaFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsBetaFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsBetaFacilityEntry.setStatus('mandatory')
sfpsBetaFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsBetaFacilityHashIndex.setStatus('mandatory')
sfpsBetaFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsBetaFacilityElementName.setStatus('mandatory')
sfpsBetaFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsBetaFacilityAdminStatus.setStatus('mandatory')
sfpsBetaFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsBetaFacilityOperStatus.setStatus('mandatory')
sfpsBetaFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 21, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsBetaFacilityStatusTime.setStatus('mandatory')
sfpsCallTapFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1), )
if mibBuilder.loadTexts: sfpsCallTapFacilityTable.setStatus('mandatory')
sfpsCallTapFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsCallTapFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsCallTapFacilityEntry.setStatus('mandatory')
sfpsCallTapFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCallTapFacilityHashIndex.setStatus('mandatory')
sfpsCallTapFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCallTapFacilityElementName.setStatus('mandatory')
sfpsCallTapFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsCallTapFacilityAdminStatus.setStatus('mandatory')
sfpsCallTapFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCallTapFacilityOperStatus.setStatus('mandatory')
sfpsCallTapFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 32, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCallTapFacilityStatusTime.setStatus('mandatory')
sfpsDiagFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1), )
if mibBuilder.loadTexts: sfpsDiagFacilityTable.setStatus('mandatory')
sfpsDiagFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsDiagFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsDiagFacilityEntry.setStatus('mandatory')
sfpsDiagFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsDiagFacilityHashIndex.setStatus('mandatory')
sfpsDiagFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsDiagFacilityElementName.setStatus('mandatory')
sfpsDiagFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsDiagFacilityAdminStatus.setStatus('mandatory')
sfpsDiagFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsDiagFacilityOperStatus.setStatus('mandatory')
sfpsDiagFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 4, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsDiagFacilityStatusTime.setStatus('mandatory')
sfpsFabricFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1), )
if mibBuilder.loadTexts: sfpsFabricFacilityTable.setStatus('mandatory')
sfpsFabricFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsFabricFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsFabricFacilityEntry.setStatus('mandatory')
sfpsFabricFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFabricFacilityHashIndex.setStatus('mandatory')
sfpsFabricFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFabricFacilityElementName.setStatus('mandatory')
sfpsFabricFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsFabricFacilityAdminStatus.setStatus('mandatory')
sfpsFabricFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFabricFacilityOperStatus.setStatus('mandatory')
sfpsFabricFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 6, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFabricFacilityStatusTime.setStatus('mandatory')
sfpsLiteFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1), )
if mibBuilder.loadTexts: sfpsLiteFacilityTable.setStatus('mandatory')
sfpsLiteFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsLiteFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsLiteFacilityEntry.setStatus('mandatory')
sfpsLiteFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsLiteFacilityHashIndex.setStatus('mandatory')
sfpsLiteFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsLiteFacilityElementName.setStatus('mandatory')
sfpsLiteFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsLiteFacilityAdminStatus.setStatus('mandatory')
sfpsLiteFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsLiteFacilityOperStatus.setStatus('mandatory')
sfpsLiteFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 7, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsLiteFacilityStatusTime.setStatus('mandatory')
sfpsFpcFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1), )
if mibBuilder.loadTexts: sfpsFpcFacilityTable.setStatus('mandatory')
sfpsFpcFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsFpcFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsFpcFacilityEntry.setStatus('mandatory')
sfpsFpcFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFpcFacilityHashIndex.setStatus('mandatory')
sfpsFpcFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFpcFacilityElementName.setStatus('mandatory')
sfpsFpcFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsFpcFacilityAdminStatus.setStatus('mandatory')
sfpsFpcFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFpcFacilityOperStatus.setStatus('mandatory')
sfpsFpcFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 8, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsFpcFacilityStatusTime.setStatus('mandatory')
sfpsMcastFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1), )
if mibBuilder.loadTexts: sfpsMcastFacilityTable.setStatus('mandatory')
sfpsMcastFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsMcastFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsMcastFacilityEntry.setStatus('mandatory')
sfpsMcastFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMcastFacilityHashIndex.setStatus('mandatory')
sfpsMcastFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMcastFacilityElementName.setStatus('mandatory')
sfpsMcastFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsMcastFacilityAdminStatus.setStatus('mandatory')
sfpsMcastFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMcastFacilityOperStatus.setStatus('mandatory')
sfpsMcastFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 15, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsMcastFacilityStatusTime.setStatus('mandatory')
sfpsVLANFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1), )
if mibBuilder.loadTexts: sfpsVLANFacilityTable.setStatus('mandatory')
sfpsVLANFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsVLANFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsVLANFacilityEntry.setStatus('mandatory')
sfpsVLANFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVLANFacilityHashIndex.setStatus('mandatory')
sfpsVLANFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVLANFacilityElementName.setStatus('mandatory')
sfpsVLANFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsVLANFacilityAdminStatus.setStatus('mandatory')
sfpsVLANFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVLANFacilityOperStatus.setStatus('mandatory')
sfpsVLANFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 3, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVLANFacilityStatusTime.setStatus('mandatory')
sfpsVNSFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1), )
if mibBuilder.loadTexts: sfpsVNSFacilityTable.setStatus('mandatory')
sfpsVNSFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsVNSFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsVNSFacilityEntry.setStatus('mandatory')
sfpsVNSFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVNSFacilityHashIndex.setStatus('mandatory')
sfpsVNSFacilityElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVNSFacilityElementName.setStatus('mandatory')
sfpsVNSFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kControlOther", 1), ("kControlDisable", 2), ("kControlEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsVNSFacilityAdminStatus.setStatus('mandatory')
sfpsVNSFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("kStatusRunning", 1), ("kStatusHalted", 2), ("kStatusPending", 3), ("kStatusFaulted", 4), ("kStatusNotStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVNSFacilityOperStatus.setStatus('mandatory')
sfpsVNSFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 2, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsVNSFacilityStatusTime.setStatus('mandatory')
sfpsRAFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1), )
if mibBuilder.loadTexts: sfpsRAFacilityTable.setStatus('mandatory')
sfpsRAFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsRAFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsRAFacilityEntry.setStatus('mandatory')
sfpsRAFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsRAFacilityHashIndex.setStatus('mandatory')
sfpsRAFacilityName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsRAFacilityName.setStatus('mandatory')
sfpsRAFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsRAFacilityAdminStatus.setStatus('mandatory')
sfpsRAFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("running", 1), ("halted", 2), ("pending", 3), ("faulted", 4), ("notStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsRAFacilityOperStatus.setStatus('mandatory')
sfpsRAFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 14, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsRAFacilityStatusTime.setStatus('mandatory')
sfpsUplinkFacilityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1), )
if mibBuilder.loadTexts: sfpsUplinkFacilityTable.setStatus('mandatory')
sfpsUplinkFacilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SOFTLINK-MIB", "sfpsUplinkFacilityHashIndex"))
if mibBuilder.loadTexts: sfpsUplinkFacilityEntry.setStatus('mandatory')
sfpsUplinkFacilityHashIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsUplinkFacilityHashIndex.setStatus('mandatory')
sfpsUplinkFacilityName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsUplinkFacilityName.setStatus('mandatory')
sfpsUplinkFacilityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsUplinkFacilityAdminStatus.setStatus('mandatory')
sfpsUplinkFacilityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("running", 1), ("halted", 2), ("pending", 3), ("faulted", 4), ("notStarted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsUplinkFacilityOperStatus.setStatus('mandatory')
sfpsUplinkFacilityStatusTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 2, 11, 16, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsUplinkFacilityStatusTime.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-SFPS-SOFTLINK-MIB", sfpsFpcFacilityEntry=sfpsFpcFacilityEntry, sfpsMcastFacilityElementName=sfpsMcastFacilityElementName, sfpsCentersFacilityElementName=sfpsCentersFacilityElementName, sfpsFpcFacilityAdminStatus=sfpsFpcFacilityAdminStatus, sfpsFpcFacilityStatusTime=sfpsFpcFacilityStatusTime, sfpsRAFacilityAdminStatus=sfpsRAFacilityAdminStatus, sfpsMcastFacilityTable=sfpsMcastFacilityTable, sfpsLiteFacilityTable=sfpsLiteFacilityTable, sfpsDiagFacilityOperStatus=sfpsDiagFacilityOperStatus, sfpsBetaFacilityStatusTime=sfpsBetaFacilityStatusTime, sfpsCentersFacilityStatusTime=sfpsCentersFacilityStatusTime, sfpsFabricFacilityAdminStatus=sfpsFabricFacilityAdminStatus, sfpsMcastFacilityEntry=sfpsMcastFacilityEntry, sfpsFpcFacilityElementName=sfpsFpcFacilityElementName, sfpsDiagFacilityElementName=sfpsDiagFacilityElementName, sfpsDiagFacilityAdminStatus=sfpsDiagFacilityAdminStatus, sfpsFpcFacilityHashIndex=sfpsFpcFacilityHashIndex, sfpsUplinkFacilityHashIndex=sfpsUplinkFacilityHashIndex, sfpsVNSFacilityStatusTime=sfpsVNSFacilityStatusTime, sfpsCallTapFacilityElementName=sfpsCallTapFacilityElementName, sfpsVNSFacilityElementName=sfpsVNSFacilityElementName, sfpsBetaFacilityTable=sfpsBetaFacilityTable, sfpsMcastFacilityHashIndex=sfpsMcastFacilityHashIndex, sfpsDiagFacilityTable=sfpsDiagFacilityTable, sfpsFabricFacilityElementName=sfpsFabricFacilityElementName, sfpsRAFacilityEntry=sfpsRAFacilityEntry, sfpsCentersFacilityEntry=sfpsCentersFacilityEntry, sfpsVNSFacilityHashIndex=sfpsVNSFacilityHashIndex, sfpsCentersFacilityMetric=sfpsCentersFacilityMetric, sfpsRAFacilityHashIndex=sfpsRAFacilityHashIndex, sfpsCentersFacilityRequests=sfpsCentersFacilityRequests, sfpsRAFacilityStatusTime=sfpsRAFacilityStatusTime, sfpsCallTapFacilityStatusTime=sfpsCallTapFacilityStatusTime, sfpsDiagFacilityEntry=sfpsDiagFacilityEntry, sfpsFabricFacilityEntry=sfpsFabricFacilityEntry, sfpsUplinkFacilityAdminStatus=sfpsUplinkFacilityAdminStatus, sfpsDiagFacilityHashIndex=sfpsDiagFacilityHashIndex, sfpsVLANFacilityElementName=sfpsVLANFacilityElementName, sfpsUplinkFacilityName=sfpsUplinkFacilityName, sfpsCentersFacilityResponses=sfpsCentersFacilityResponses, sfpsCentersFacilityAddress=sfpsCentersFacilityAddress, sfpsVLANFacilityOperStatus=sfpsVLANFacilityOperStatus, sfpsCallTapFacilityEntry=sfpsCallTapFacilityEntry, sfpsUplinkFacilityOperStatus=sfpsUplinkFacilityOperStatus, sfpsBetaFacilityHashIndex=sfpsBetaFacilityHashIndex, sfpsLiteFacilityEntry=sfpsLiteFacilityEntry, sfpsFabricFacilityOperStatus=sfpsFabricFacilityOperStatus, sfpsFabricFacilityStatusTime=sfpsFabricFacilityStatusTime, sfpsCentersFacilityAdminStatus=sfpsCentersFacilityAdminStatus, sfpsMcastFacilityOperStatus=sfpsMcastFacilityOperStatus, sfpsDiagFacilityStatusTime=sfpsDiagFacilityStatusTime, sfpsVNSFacilityOperStatus=sfpsVNSFacilityOperStatus, sfpsUplinkFacilityEntry=sfpsUplinkFacilityEntry, sfpsCentersFacilityTable=sfpsCentersFacilityTable, sfpsUplinkFacilityStatusTime=sfpsUplinkFacilityStatusTime, sfpsMcastFacilityAdminStatus=sfpsMcastFacilityAdminStatus, sfpsBetaFacilityEntry=sfpsBetaFacilityEntry, sfpsRAFacilityTable=sfpsRAFacilityTable, sfpsUplinkFacilityTable=sfpsUplinkFacilityTable, sfpsVLANFacilityTable=sfpsVLANFacilityTable, sfpsBetaFacilityAdminStatus=sfpsBetaFacilityAdminStatus, sfpsFabricFacilityHashIndex=sfpsFabricFacilityHashIndex, sfpsVLANFacilityStatusTime=sfpsVLANFacilityStatusTime, sfpsRAFacilityOperStatus=sfpsRAFacilityOperStatus, sfpsCallTapFacilityHashIndex=sfpsCallTapFacilityHashIndex, sfpsLiteFacilityHashIndex=sfpsLiteFacilityHashIndex, sfpsLiteFacilityAdminStatus=sfpsLiteFacilityAdminStatus, sfpsVNSFacilityTable=sfpsVNSFacilityTable, sfpsVNSFacilityEntry=sfpsVNSFacilityEntry, sfpsVLANFacilityAdminStatus=sfpsVLANFacilityAdminStatus, sfpsRAFacilityName=sfpsRAFacilityName, sfpsLiteFacilityOperStatus=sfpsLiteFacilityOperStatus, sfpsCallTapFacilityAdminStatus=sfpsCallTapFacilityAdminStatus, sfpsVNSFacilityAdminStatus=sfpsVNSFacilityAdminStatus, sfpsCentersFacilityOperStatus=sfpsCentersFacilityOperStatus, sfpsFpcFacilityTable=sfpsFpcFacilityTable, sfpsCallTapFacilityTable=sfpsCallTapFacilityTable, sfpsBetaFacilityElementName=sfpsBetaFacilityElementName, sfpsFpcFacilityOperStatus=sfpsFpcFacilityOperStatus, HexInteger=HexInteger, sfpsLiteFacilityStatusTime=sfpsLiteFacilityStatusTime, sfpsBetaFacilityOperStatus=sfpsBetaFacilityOperStatus, sfpsCallTapFacilityOperStatus=sfpsCallTapFacilityOperStatus, sfpsVLANFacilityHashIndex=sfpsVLANFacilityHashIndex, sfpsMcastFacilityStatusTime=sfpsMcastFacilityStatusTime, sfpsLiteFacilityElementName=sfpsLiteFacilityElementName, sfpsVLANFacilityEntry=sfpsVLANFacilityEntry, sfpsFabricFacilityTable=sfpsFabricFacilityTable)
