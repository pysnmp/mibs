#
# PySNMP MIB module F3-SYNCJACK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/F3-SYNCJACK-MIB
# Produced by pysmi-1.1.12 at Wed Nov  6 08:26:58 2024
# On host fv-az984-999 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
fsp150cm, = mibBuilder.importSymbols("ADVA-MIB", "fsp150cm")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
AdminState, IpPriorityMapMode, PerfCounter64, SchedActivityStatus, CmPmBinAction, ScheduleType, OperationalState, SecondaryState, IpVersion, CmPmIntervalType, PerfCounter32 = mibBuilder.importSymbols("CM-COMMON-MIB", "AdminState", "IpPriorityMapMode", "PerfCounter64", "SchedActivityStatus", "CmPmBinAction", "ScheduleType", "OperationalState", "SecondaryState", "IpVersion", "CmPmIntervalType", "PerfCounter32")
shelfIndex, neIndex, slotIndex = mibBuilder.importSymbols("CM-ENTITY-MIB", "shelfIndex", "neIndex", "slotIndex")
ScaledNanoseconds, = mibBuilder.importSymbols("F3-PTP-MIB", "ScaledNanoseconds")
SSMQualityLevel, = mibBuilder.importSymbols("F3-SYNC-MIB", "SSMQualityLevel")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, Counter32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Counter64, Bits, IpAddress, ObjectIdentity, ModuleIdentity, NotificationType, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Counter64", "Bits", "IpAddress", "ObjectIdentity", "ModuleIdentity", "NotificationType", "Integer32", "Gauge32")
TruthValue, StorageType, VariablePointer, DisplayString, DateAndTime, RowStatus, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "StorageType", "VariablePointer", "DisplayString", "DateAndTime", "RowStatus", "MacAddress", "TextualConvention")
f3SyncJMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22))
f3SyncJMIB.setRevisions(('2012-05-10 00:00',))
if mibBuilder.loadTexts: f3SyncJMIB.setLastUpdated('201908190000Z')
if mibBuilder.loadTexts: f3SyncJMIB.setOrganization('ADVA Optical Networking SE')
f3SyncJConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1))
f3SyncJPerformanceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2))
f3SyncJNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 3))
f3SyncJConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 4))
class SyncJackTestState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("waiting", 1), ("running", 2), ("completed", 3), ("failed", 4), ("suspended", 5), ("notscheduled", 6))

class MTIEMaskType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))
    namedValues = NamedValues(("g823-e1-ssu", 1), ("g823-e1-sec", 2), ("g823-e1-traffic", 3), ("g823-pdh", 4), ("g824-t1-sync", 5), ("g824-t1-traffic", 6), ("g8261-e1-case1", 7), ("g8261-t1-case1", 8), ("g8261-e1-case2", 9), ("g8261-eec-opt1", 10), ("g8263-const-temp", 11), ("g8272-prtc", 12), ("g8261-1", 13), ("g8262-eec-opt1", 14), ("g8262-eec-opt1-temp", 15), ("g8262-eec-opt2", 16), ("g8262-eec-opt1-tolerrance", 17), ("g8263-var-temp", 18), ("g8273-2", 19), ("g8271-1", 20), ("user-defined", 21))

class TIESourceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("phase", 1), ("frequency", 2))

class TIEMeasurementRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("meas-10per1sec", 1), ("meas-1per1sec", 2), ("meas-1per2sec", 3))

class PTPMeasurementDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("master2slave", 1), ("slave2master", 2), ("twoways", 3), ("master2slave-t4", 4))

class MeasurementType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("phase", 1), ("frequency", 2))

class FFOObserWindow(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("window-100s", 1), ("window-200s", 2), ("window-500s", 3), ("window-1000s", 4), ("window-2000s", 5), ("window-5000s", 6), ("window-10000s", 7))

f3SyncJClockProbeTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1), )
if mibBuilder.loadTexts: f3SyncJClockProbeTable.setStatus('current')
f3SyncJClockProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeIndex"))
if mibBuilder.loadTexts: f3SyncJClockProbeEntry.setStatus('current')
f3SyncJClockProbeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: f3SyncJClockProbeIndex.setStatus('current')
f3SyncJClockProbeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJClockProbeName.setStatus('current')
f3SyncJClockProbeSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 3), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeSource.setStatus('current')
f3SyncJClockProbeReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 4), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeReference.setStatus('current')
f3SyncJClockProbeExpectedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 5), SSMQualityLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeExpectedQL.setStatus('current')
f3SyncJClockProbeSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 6), TIESourceType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJClockProbeSourceType.setStatus('current')
f3SyncJClockProbeMeasurementRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 7), TIEMeasurementRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeMeasurementRate.setStatus('current')
f3SyncJClockProbeMTIEMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 8), MTIEMaskType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeMTIEMaskType.setStatus('current')
f3SyncJClockProbeMTIEMaskMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeMTIEMaskMargin.setStatus('current')
f3SyncJClockProbeScheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 10), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeScheduler.setStatus('current')
f3SyncJClockProbeTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 11), SyncJackTestState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeTestState.setStatus('current')
f3SyncJClockProbeLastTIEResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeLastTIEResult.setStatus('current')
f3SyncJClockProbeLastTIEResultTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeLastTIEResultTime.setStatus('current')
f3SyncJClockProbeSourceFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeSourceFailure.setStatus('current')
f3SyncJClockProbeReferenceFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeReferenceFailure.setStatus('current')
f3SyncJClockProbeActualTestStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 16), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeActualTestStartTime.setStatus('current')
f3SyncJClockProbeActualTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeActualTestDuration.setStatus('current')
f3SyncJClockProbeMTIEMaskCrossedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeMTIEMaskCrossedTime.setStatus('current')
f3SyncJClockProbeMTIEMaskMarginCrossedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeMTIEMaskMarginCrossedTime.setStatus('current')
f3SyncJClockProbeStatusMTIEMaskFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatusMTIEMaskFailed.setStatus('current')
f3SyncJClockProbeStatusMTIEMarginFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatusMTIEMarginFailed.setStatus('current')
f3SyncJClockProbeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 22), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJClockProbeStorageType.setStatus('current')
f3SyncJClockProbeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJClockProbeRowStatus.setStatus('current')
f3SyncJClockProbeFfoTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeFfoTarget.setStatus('current')
f3SyncJClockProbeFfoObserWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 25), FFOObserWindow()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeFfoObserWindow.setStatus('current')
f3SyncJClockProbeLastFFOResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeLastFFOResult.setStatus('current')
f3SyncJClockProbeTimeOfLastFFOResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 27), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeTimeOfLastFFOResult.setStatus('current')
f3SyncJClockProbeRawDataCollectionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 28), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeRawDataCollectionEnabled.setStatus('current')
f3SyncJClockProbeTeAlertThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeTeAlertThreshold.setStatus('deprecated')
f3SyncJClockProbeTeAlertClearThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeTeAlertClearThreshold.setStatus('deprecated')
f3SyncJClockProbeLastTEAlertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 31), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeLastTEAlertTime.setStatus('deprecated')
f3SyncJClockProbeLastTEAlertClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 32), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeLastTEAlertClearTime.setStatus('deprecated')
f3SyncJClockProbeRunningFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeRunningFailedCount.setStatus('current')
f3SyncJClockProbeMeasurementType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 34), MeasurementType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeMeasurementType.setStatus('current')
f3SyncJClockProbeConstTEThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 35), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeConstTEThreshold.setStatus('current')
f3SyncJClockProbeConstTEClrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 36), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeConstTEClrThreshold.setStatus('current')
f3SyncJClockProbeConstTEWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 37), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeConstTEWindow.setStatus('current')
f3SyncJClockProbeMaxTETotAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeMaxTETotAlarmTime.setStatus('current')
f3SyncJClockProbeConstTETotAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeConstTETotAlarmTime.setStatus('current')
f3SyncJClockProbeConstTEMeasurementTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 40), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeConstTEMeasurementTime.setStatus('current')
f3SyncJClockProbeMaxTEMeasurementTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeMaxTEMeasurementTime.setStatus('current')
f3SyncJClockProbeMaxTEThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 42), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeMaxTEThreshold.setStatus('current')
f3SyncJClockProbeMaxTEClrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 43), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeMaxTEClrThreshold.setStatus('current')
f3SyncJClockProbeMTIERestart = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 1, 1, 44), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeMTIERestart.setStatus('current')
f3SyncJClockProbeMTIEValueTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 2), )
if mibBuilder.loadTexts: f3SyncJClockProbeMTIEValueTable.setStatus('current')
f3SyncJClockProbeMTIEValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeMTIEValueIndex"))
if mibBuilder.loadTexts: f3SyncJClockProbeMTIEValueEntry.setStatus('current')
f3SyncJClockProbeMTIEValueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: f3SyncJClockProbeMTIEValueIndex.setStatus('current')
f3SyncJClockProbeMTIEValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeMTIEValue.setStatus('current')
f3SyncJClockProbeResHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3), )
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryTable.setStatus('current')
f3SyncJClockProbeResHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryIndex"))
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryEntry.setStatus('current')
f3SyncJClockProbeResHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryIndex.setStatus('current')
f3SyncJClockProbeResHistoryAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryAlias.setStatus('current')
f3SyncJClockProbeResHistorySource = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistorySource.setStatus('current')
f3SyncJClockProbeResHistoryReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 4), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryReference.setStatus('current')
f3SyncJClockProbeResHistoryExpectedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 5), SSMQualityLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryExpectedQL.setStatus('current')
f3SyncJClockProbeResHistorySourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 6), TIESourceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistorySourceType.setStatus('current')
f3SyncJClockProbeResHistoryMeasurementRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 7), TIEMeasurementRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMeasurementRate.setStatus('current')
f3SyncJClockProbeResHistoryMTIEMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 8), MTIEMaskType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMTIEMaskType.setStatus('current')
f3SyncJClockProbeResHistoryMTIEMaskMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMTIEMaskMargin.setStatus('current')
f3SyncJClockProbeResHistorySourceFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistorySourceFailure.setStatus('current')
f3SyncJClockProbeResHistoryReferenceFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryReferenceFailure.setStatus('current')
f3SyncJClockProbeResHistoryActualTestStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryActualTestStartTime.setStatus('current')
f3SyncJClockProbeResHistoryActualTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryActualTestDuration.setStatus('current')
f3SyncJClockProbeResHistoryMTIEMaskCrossedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMTIEMaskCrossedTime.setStatus('current')
f3SyncJClockProbeResHistoryMTIEMaskMarginCrossedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMTIEMaskMarginCrossedTime.setStatus('current')
f3SyncJClockProbeResHistoryStatusMTIEMaskFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryStatusMTIEMaskFailed.setStatus('current')
f3SyncJClockProbeResHistoryStatusMTIEMarginFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryStatusMTIEMarginFailed.setStatus('current')
f3SyncJClockProbeResHistoryStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 18), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryStorageType.setStatus('current')
f3SyncJClockProbeResHistoryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryRowStatus.setStatus('current')
f3SyncJClockProbeResHistoryMinFFO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMinFFO.setStatus('current')
f3SyncJClockProbeResHistoryMaxFFO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMaxFFO.setStatus('current')
f3SyncJClockProbeResHistoryAvgFFO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryAvgFFO.setStatus('current')
f3SyncJClockProbeResHistoryOutOfTargetFFOTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryOutOfTargetFFOTime.setStatus('current')
f3SyncJClockProbeResHistoryTotalFFOTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryTotalFFOTime.setStatus('current')
f3SyncJClockProbeResHistoryMinPhaseOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMinPhaseOffset.setStatus('current')
f3SyncJClockProbeResHistoryMaxPhaseOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMaxPhaseOffset.setStatus('current')
f3SyncJClockProbeResHistoryAvgPhaseOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryAvgPhaseOffset.setStatus('current')
f3SyncJClockProbeResHistoryOutOfTargetPhaseOffsetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryOutOfTargetPhaseOffsetTime.setStatus('current')
f3SyncJClockProbeResHistoryTotalPhaseOffsetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryTotalPhaseOffsetTime.setStatus('current')
f3SyncJClockProbeResHistoryMeasurementType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 30), MeasurementType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMeasurementType.setStatus('current')
f3SyncJClockProbeResHistoryTeAlertThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryTeAlertThreshold.setStatus('deprecated')
f3SyncJClockProbeResHistoryTeAlertClearThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryTeAlertClearThreshold.setStatus('deprecated')
f3SyncJClockProbeResHistoryLastTEAlertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 33), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryLastTEAlertTime.setStatus('deprecated')
f3SyncJClockProbeResHistoryLastTEAlertClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 34), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryLastTEAlertClearTime.setStatus('deprecated')
f3SyncJClockProbeResHistoryRunningFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryRunningFailedCount.setStatus('current')
f3SyncJClockProbeResHistoryConstTEThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryConstTEThreshold.setStatus('current')
f3SyncJClockProbeResHistoryConstTEClrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryConstTEClrThreshold.setStatus('current')
f3SyncJClockProbeResHistoryConstTEWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryConstTEWindow.setStatus('current')
f3SyncJClockProbeResHistoryMaxTETotAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMaxTETotAlarmTime.setStatus('current')
f3SyncJClockProbeResHistoryConstTETotAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 40), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryConstTETotAlarmTime.setStatus('current')
f3SyncJClockProbeResHistoryConstTEMeasurementTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryConstTEMeasurementTime.setStatus('current')
f3SyncJClockProbeResHistoryMaxTEMeasurementTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMaxTEMeasurementTime.setStatus('current')
f3SyncJClockProbeResHistoryMaxTEThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 43), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMaxTEThreshold.setStatus('current')
f3SyncJClockProbeResHistoryMaxTEClrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 3, 1, 44), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMaxTEClrThreshold.setStatus('current')
f3SyncJClockProbeResHistoryMTIEValueTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 4), )
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMTIEValueTable.setStatus('current')
f3SyncJClockProbeResHistoryMTIEValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 4, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMTIEValueIndex"))
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMTIEValueEntry.setStatus('current')
f3SyncJClockProbeResHistoryMTIEValueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMTIEValueIndex.setStatus('current')
f3SyncJClockProbeResHistoryMTIEValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeResHistoryMTIEValue.setStatus('current')
f3SyncJPTPClockProbeTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5), )
if mibBuilder.loadTexts: f3SyncJPTPClockProbeTable.setStatus('current')
f3SyncJPTPClockProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeIndex"))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeEntry.setStatus('current')
f3SyncJPTPClockProbeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: f3SyncJPTPClockProbeIndex.setStatus('current')
f3SyncJPTPClockProbeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeName.setStatus('current')
f3SyncJPTPClockProbeMeasurementDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 3), PTPMeasurementDirection()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMeasurementDirection.setStatus('current')
f3SyncJPTPClockProbePTPFlowPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 4), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJPTPClockProbePTPFlowPoint.setStatus('current')
f3SyncJPTPClockProbeIpPrototocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 5), IpVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeIpPrototocol.setStatus('current')
f3SyncJPTPClockProbeSlaveIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeSlaveIpV4Address.setStatus('current')
f3SyncJPTPClockProbeMasterIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMasterIpV4Address.setStatus('current')
f3SyncJPTPClockProbeReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 8), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeReference.setStatus('current')
f3SyncJPTPClockProbeExpectedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 9), SSMQualityLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeExpectedQL.setStatus('current')
f3SyncJPTPClockProbeMTIEMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 10), MTIEMaskType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMTIEMaskType.setStatus('current')
f3SyncJPTPClockProbeMTIEMaskMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMTIEMaskMargin.setStatus('current')
f3SyncJPTPClockProbeScheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 12), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeScheduler.setStatus('current')
f3SyncJPTPClockProbeTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 13), SyncJackTestState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeTestState.setStatus('current')
f3SyncJPTPClockProbeLastTIEResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeLastTIEResult.setStatus('current')
f3SyncJPTPClockProbeLastTIEResultTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeLastTIEResultTime.setStatus('current')
f3SyncJPTPClockProbeNoTimestampFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeNoTimestampFailure.setStatus('current')
f3SyncJPTPClockProbeNoEventMessageFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeNoEventMessageFailure.setStatus('current')
f3SyncJPTPClockProbeReferenceFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeReferenceFailure.setStatus('current')
f3SyncJPTPClockProbeActualTestStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeActualTestStartTime.setStatus('current')
f3SyncJPTPClockProbeActualTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeActualTestDuration.setStatus('current')
f3SyncJPTPClockProbeMTIEMaskCrossedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMTIEMaskCrossedTime.setStatus('current')
f3SyncJPTPClockProbeMTIEMaskMarginCrossedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 22), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMTIEMaskMarginCrossedTime.setStatus('current')
f3SyncJPTPClockProbeStatusMTIEMaskFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatusMTIEMaskFailed.setStatus('current')
f3SyncJPTPClockProbeStatusMTIEMarginFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatusMTIEMarginFailed.setStatus('current')
f3SyncJPTPClockProbeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 25), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStorageType.setStatus('current')
f3SyncJPTPClockProbeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 26), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeRowStatus.setStatus('current')
f3SyncJPTPClockProbeFfoTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeFfoTarget.setStatus('current')
f3SyncJPTPClockProbeFfoObserWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 28), FFOObserWindow()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeFfoObserWindow.setStatus('current')
f3SyncJPTPClockProbeLastFFOResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeLastFFOResult.setStatus('current')
f3SyncJPTPClockProbeTimeOfLastFFOResult = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 30), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeTimeOfLastFFOResult.setStatus('current')
f3SyncJPTPClockProbeRawDataCollectionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 31), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeRawDataCollectionEnabled.setStatus('current')
f3SyncJPTPClockProbeTeAlertThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeTeAlertThreshold.setStatus('deprecated')
f3SyncJPTPClockProbeTeAlertClearThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeTeAlertClearThreshold.setStatus('deprecated')
f3SyncJPTPClockProbeLastTEAlertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 34), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeLastTEAlertTime.setStatus('deprecated')
f3SyncJPTPClockProbeLastTEAlertClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 35), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeLastTEAlertClearTime.setStatus('deprecated')
f3SyncJPTPClockProbeRunningFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeRunningFailedCount.setStatus('current')
f3SyncJPTPClockProbeMeasurementType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 37), MeasurementType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMeasurementType.setStatus('current')
f3SyncJPTPClockProbeDelayMS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 38), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeDelayMS.setStatus('deprecated')
f3SyncJPTPClockProbeDelaySM = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeDelaySM.setStatus('deprecated')
f3SyncJPTPClockProbeTAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 40), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeTAsymmetry.setStatus('deprecated')
f3SyncJPTPClockProbeDelayCompensation = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 41), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeDelayCompensation.setStatus('current')
f3SyncJPTPClockProbeConstTEThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 42), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeConstTEThreshold.setStatus('current')
f3SyncJPTPClockProbeConstTEClrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 43), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeConstTEClrThreshold.setStatus('current')
f3SyncJPTPClockProbeConstTEWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 44), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeConstTEWindow.setStatus('current')
f3SyncJPTPClockProbeInstTEThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 45), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeInstTEThreshold.setStatus('current')
f3SyncJPTPClockProbeInstTEClrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 46), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeInstTEClrThreshold.setStatus('current')
f3SyncJPTPClockProbeMaxTETotAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 47), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMaxTETotAlarmTime.setStatus('current')
f3SyncJPTPClockProbeConstTETotAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 48), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeConstTETotAlarmTime.setStatus('current')
f3SyncJPTPClockProbeInstTETotAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeInstTETotAlarmTime.setStatus('current')
f3SyncJPTPClockProbeSlavePortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 50), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeSlavePortIdentity.setStatus('current')
f3SyncJPTPClockProbeMasterPortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 51), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMasterPortIdentity.setStatus('current')
f3SyncJPTPClockProbeConstTEMeasurementTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 52), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeConstTEMeasurementTime.setStatus('current')
f3SyncJPTPClockProbeMaxTEMeasurementTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 53), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMaxTEMeasurementTime.setStatus('current')
f3SyncJPTPClockProbeInstTEMeasurementTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 54), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeInstTEMeasurementTime.setStatus('current')
f3SyncJPTPClockProbeMaxTEThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 55), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMaxTEThreshold.setStatus('current')
f3SyncJPTPClockProbeMaxTEClrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 56), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMaxTEClrThreshold.setStatus('current')
f3SyncJPTPClockProbeMTIERestart = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 5, 1, 57), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMTIERestart.setStatus('current')
f3SyncJPTPClockProbeMTIEValueTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 6), )
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMTIEValueTable.setStatus('current')
f3SyncJPTPClockProbeMTIEValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 6, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeMTIEValueIndex"))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMTIEValueEntry.setStatus('current')
f3SyncJPTPClockProbeMTIEValueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMTIEValueIndex.setStatus('current')
f3SyncJPTPClockProbeMTIEValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeMTIEValue.setStatus('current')
f3SyncJPTPClockProbeResHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7), )
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryTable.setStatus('current')
f3SyncJPTPClockProbeResHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryIndex"))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryEntry.setStatus('current')
f3SyncJPTPClockProbeResHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 1), Integer32())
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryIndex.setStatus('current')
f3SyncJPTPClockProbeResHistoryAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryAlias.setStatus('current')
f3SyncJPTPClockProbeResHistoryMeasurementDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 3), PTPMeasurementDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMeasurementDirection.setStatus('current')
f3SyncJPTPClockProbeResHistoryPTPFlowPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 4), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryPTPFlowPoint.setStatus('current')
f3SyncJPTPClockProbeResHistoryIpPrototocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 5), IpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryIpPrototocol.setStatus('current')
f3SyncJPTPClockProbeResHistorySlaveIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistorySlaveIpV4Address.setStatus('current')
f3SyncJPTPClockProbeResHistoryMasterIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMasterIpV4Address.setStatus('current')
f3SyncJPTPClockProbeResHistoryReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 8), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryReference.setStatus('current')
f3SyncJPTPClockProbeResHistoryExpectedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 9), SSMQualityLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryExpectedQL.setStatus('current')
f3SyncJPTPClockProbeResHistoryMTIEMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 10), MTIEMaskType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMTIEMaskType.setStatus('current')
f3SyncJPTPClockProbeResHistoryMTIEMaskMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMTIEMaskMargin.setStatus('current')
f3SyncJPTPClockProbeResHistoryNoTimestampFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryNoTimestampFailure.setStatus('current')
f3SyncJPTPClockProbeResHistoryNoEventMessageFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryNoEventMessageFailure.setStatus('current')
f3SyncJPTPClockProbeResHistoryReferenceFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryReferenceFailure.setStatus('current')
f3SyncJPTPClockProbeResHistoryActualTestStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryActualTestStartTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryActualTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryActualTestDuration.setStatus('current')
f3SyncJPTPClockProbeResHistoryMTIEMaskCrossedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 17), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMTIEMaskCrossedTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryMTIEMaskMarginCrossedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMTIEMaskMarginCrossedTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryStatusMTIEMaskFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryStatusMTIEMaskFailed.setStatus('current')
f3SyncJPTPClockProbeResHistoryStatusMTIEMarginFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryStatusMTIEMarginFailed.setStatus('current')
f3SyncJPTPClockProbeResHistoryStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 21), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryStorageType.setStatus('current')
f3SyncJPTPClockProbeResHistoryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryRowStatus.setStatus('current')
f3SyncJPTPClockProbeResHistoryMinFFO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMinFFO.setStatus('current')
f3SyncJPTPClockProbeResHistoryMaxFFO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMaxFFO.setStatus('current')
f3SyncJPTPClockProbeResHistoryAvgFFO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryAvgFFO.setStatus('current')
f3SyncJPTPClockProbeResHistoryOutOfTargetFFOTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryOutOfTargetFFOTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryTotalFFOTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryTotalFFOTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryMinPhaseOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMinPhaseOffset.setStatus('current')
f3SyncJPTPClockProbeResHistoryMaxPhaseOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMaxPhaseOffset.setStatus('current')
f3SyncJPTPClockProbeResHistoryAvgPhaseOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryAvgPhaseOffset.setStatus('current')
f3SyncJPTPClockProbeResHistoryOutOfTargetPhaseOffsetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryOutOfTargetPhaseOffsetTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryTotalPhaseOffsetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryTotalPhaseOffsetTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryTeAlertThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryTeAlertThreshold.setStatus('deprecated')
f3SyncJPTPClockProbeResHistoryTeAlertClearThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryTeAlertClearThreshold.setStatus('deprecated')
f3SyncJPTPClockProbeResHistoryLastTEAlertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 35), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryLastTEAlertTime.setStatus('deprecated')
f3SyncJPTPClockProbeResHistoryLastTEAlertClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 36), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryLastTEAlertClearTime.setStatus('deprecated')
f3SyncJPTPClockProbeResHistoryRunningFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryRunningFailedCount.setStatus('current')
f3SyncJPTPClockProbeResHistoryMeasurementType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 38), MeasurementType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMeasurementType.setStatus('current')
f3SyncJPTPClockProbeResHistoryConstTEThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryConstTEThreshold.setStatus('current')
f3SyncJPTPClockProbeResHistoryConstTEClrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 40), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryConstTEClrThreshold.setStatus('current')
f3SyncJPTPClockProbeResHistoryConstTEWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryConstTEWindow.setStatus('current')
f3SyncJPTPClockProbeResHistoryInstTEThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryInstTEThreshold.setStatus('current')
f3SyncJPTPClockProbeResHistoryInstTEClrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 43), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryInstTEClrThreshold.setStatus('current')
f3SyncJPTPClockProbeResHistoryMaxTETotAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 44), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMaxTETotAlarmTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryConstTETotAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 45), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryConstTETotAlarmTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryInstTETotAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 46), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryInstTETotAlarmTime.setStatus('current')
f3SyncJPTPClockProbeResHistorySlavePortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistorySlavePortIdentity.setStatus('current')
f3SyncJPTPClockProbeResHistoryMasterPortIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMasterPortIdentity.setStatus('current')
f3SyncJPTPClockProbeResHistoryConstTEMeasurementTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryConstTEMeasurementTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryMaxTEMeasurementTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 50), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMaxTEMeasurementTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryInstTEMeasurementTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 51), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryInstTEMeasurementTime.setStatus('current')
f3SyncJPTPClockProbeResHistoryMaxTEThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 52), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMaxTEThreshold.setStatus('current')
f3SyncJPTPClockProbeResHistoryMaxTEClrThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 7, 1, 53), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMaxTEClrThreshold.setStatus('current')
f3SyncJPTPClockProbeResHistoryMTIEValueTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 8), )
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMTIEValueTable.setStatus('current')
f3SyncJPTPClockProbeResHistoryMTIEValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 8, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMTIEValueIndex"))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMTIEValueEntry.setStatus('current')
f3SyncJPTPClockProbeResHistoryMTIEValueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMTIEValueIndex.setStatus('current')
f3SyncJPTPClockProbeResHistoryMTIEValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeResHistoryMTIEValue.setStatus('current')
f3SyncJPTPNetworkProbeTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9), )
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeTable.setStatus('current')
f3SyncJPTPNetworkProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeIndex"))
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeEntry.setStatus('current')
f3SyncJPTPNetworkProbeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeIndex.setStatus('current')
f3SyncJPTPNetworkProbeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeName.setStatus('current')
f3SyncJPTPNetworkProbeAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 3), AdminState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeAdminState.setStatus('current')
f3SyncJPTPNetworkProbeOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeOperationalState.setStatus('current')
f3SyncJPTPNetworkProbeSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeSecondaryState.setStatus('current')
f3SyncJPTPNetworkProbePTPFlowPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 6), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbePTPFlowPoint.setStatus('current')
f3SyncJPTPNetworkProbeIpPrototocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 7), IpVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeIpPrototocol.setStatus('current')
f3SyncJPTPNetworkProbeSlaveIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeSlaveIpV4Address.setStatus('current')
f3SyncJPTPNetworkProbeMasterIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeMasterIpV4Address.setStatus('current')
f3SyncJPTPNetworkProbeReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 10), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeReference.setStatus('current')
f3SyncJPTPNetworkProbeExpectedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 11), SSMQualityLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeExpectedQL.setStatus('current')
f3SyncJPTPNetworkProbeActualTestStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeActualTestStartTime.setStatus('current')
f3SyncJPTPNetworkProbeActualTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeActualTestDuration.setStatus('current')
f3SyncJPTPNetworkProbePDVAssuredHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbePDVAssuredHi.setStatus('current')
f3SyncJPTPNetworkProbePDVAssuredLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbePDVAssuredLo.setStatus('current')
f3SyncJPTPNetworkProbePDVSatisfiedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbePDVSatisfiedHi.setStatus('current')
f3SyncJPTPNetworkProbePDVSatisfiedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 17), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbePDVSatisfiedLo.setStatus('current')
f3SyncJPTPNetworkProbeResPDVFwdLowRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 18), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeResPDVFwdLowRange.setStatus('current')
f3SyncJPTPNetworkProbeResPDVFwdMediumRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 19), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeResPDVFwdMediumRange.setStatus('current')
f3SyncJPTPNetworkProbeResPDVFwdHighRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 20), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeResPDVFwdHighRange.setStatus('current')
f3SyncJPTPNetworkProbeResPDVRevLowRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 21), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeResPDVRevLowRange.setStatus('current')
f3SyncJPTPNetworkProbeResPDVRevMediumRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 22), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeResPDVRevMediumRange.setStatus('current')
f3SyncJPTPNetworkProbeResPDVRevHighRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 23), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeResPDVRevHighRange.setStatus('current')
f3SyncJPTPNetworkProbeScheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 24), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeScheduler.setStatus('current')
f3SyncJPTPNetworkProbeTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 25), SyncJackTestState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeTestState.setStatus('current')
f3SyncJPTPNetworkProbeNoTimestampFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeNoTimestampFailure.setStatus('current')
f3SyncJPTPNetworkProbeNoEventMessageFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 27), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeNoEventMessageFailure.setStatus('current')
f3SyncJPTPNetworkProbeFwdScore = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeFwdScore.setStatus('current')
f3SyncJPTPNetworkProbeRevScore = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeRevScore.setStatus('current')
f3SyncJPTPNetworkProbeReferenceFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 30), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeReferenceFailure.setStatus('current')
f3SyncJPTPNetworkProbeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 31), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStorageType.setStatus('current')
f3SyncJPTPNetworkProbeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 32), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeRowStatus.setStatus('current')
f3SyncJPTPNetworkProbeResultsAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 9, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeResultsAvailable.setStatus('current')
f3SyncJScheduleGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 10), )
if mibBuilder.loadTexts: f3SyncJScheduleGroupTable.setStatus('current')
f3SyncJScheduleGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 10, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJScheduleGroupIndex"))
if mibBuilder.loadTexts: f3SyncJScheduleGroupEntry.setStatus('current')
f3SyncJScheduleGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 10, 1, 1), Integer32())
if mibBuilder.loadTexts: f3SyncJScheduleGroupIndex.setStatus('current')
f3SyncJScheduleGroupDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJScheduleGroupDescr.setStatus('current')
f3SyncJScheduleGroupEntityList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 10, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 512))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJScheduleGroupEntityList.setStatus('current')
f3SyncJScheduleGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 10, 1, 4), ScheduleType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJScheduleGroupType.setStatus('current')
f3SyncJScheduleGroupStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 10, 1, 5), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJScheduleGroupStartTime.setStatus('current')
f3SyncJScheduleGroupDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 10, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJScheduleGroupDuration.setStatus('current')
f3SyncJScheduleGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 10, 1, 7), SchedActivityStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJScheduleGroupStatus.setStatus('current')
f3SyncJScheduleGroupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 10, 1, 8), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJScheduleGroupStorageType.setStatus('current')
f3SyncJScheduleGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 10, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncJScheduleGroupRowStatus.setStatus('current')
f3UserDefinedMTIEMaskTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 11), )
if mibBuilder.loadTexts: f3UserDefinedMTIEMaskTable.setStatus('current')
f3UserDefinedMTIEMaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 11, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3UserDefinedMTIEMaskIndex"))
if mibBuilder.loadTexts: f3UserDefinedMTIEMaskEntry.setStatus('current')
f3UserDefinedMTIEMaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 11, 1, 1), Integer32())
if mibBuilder.loadTexts: f3UserDefinedMTIEMaskIndex.setStatus('current')
f3UserDefinedMTIEMaskName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3UserDefinedMTIEMaskName.setStatus('current')
f3UserDefinedMTIEMaskDisplayPoints = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 11, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3UserDefinedMTIEMaskDisplayPoints.setStatus('current')
f3UserDefinedMTIEMaskMeasurmentPoints = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 11, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3UserDefinedMTIEMaskMeasurmentPoints.setStatus('current')
f3UserDefinedMTIEMaskStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 11, 1, 5), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3UserDefinedMTIEMaskStorageType.setStatus('current')
f3UserDefinedMTIEMaskRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 1, 11, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3UserDefinedMTIEMaskRowStatus.setStatus('current')
f3SyncJPTPNetworkProbeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1), )
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsTable.setStatus('current')
f3SyncJPTPNetworkProbeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsIndex"))
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsEntry.setStatus('current')
f3SyncJPTPNetworkProbeStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsIndex.setStatus('current')
f3SyncJPTPNetworkProbeStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsIntervalType.setStatus('current')
f3SyncJPTPNetworkProbeStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsValid.setStatus('current')
f3SyncJPTPNetworkProbeStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsAction.setStatus('current')
f3SyncJPTPNetworkProbeStatsSyncMsgsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 5), PerfCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsSyncMsgsRx.setStatus('current')
f3SyncJPTPNetworkProbeStatsDelayRspMsgsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 6), PerfCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsDelayRspMsgsRx.setStatus('current')
f3SyncJPTPNetworkProbeStatsLostSyncMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 7), PerfCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsLostSyncMsgs.setStatus('current')
f3SyncJPTPNetworkProbeStatsLostDelayRspMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 8), PerfCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsLostDelayRspMsgs.setStatus('current')
f3SyncJPTPNetworkProbeStatsMinMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 9), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsMinMeanPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeStatsMaxMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 10), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsMaxMeanPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeStatsAvgMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 11), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsAvgMeanPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeStatsMinSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 12), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsMinSyncPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeStatsMaxSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 13), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsMaxSyncPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeStatsAvgSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 14), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsAvgSyncPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeStatsAvgResPDVFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 15), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsAvgResPDVFwd.setStatus('current')
f3SyncJPTPNetworkProbeStatsResPDVFwdLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsResPDVFwdLow.setStatus('current')
f3SyncJPTPNetworkProbeStatsResPDVFwdMedium = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsResPDVFwdMedium.setStatus('current')
f3SyncJPTPNetworkProbeStatsResPDVFwdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsResPDVFwdHigh.setStatus('current')
f3SyncJPTPNetworkProbeStatsResPDVFwdTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsResPDVFwdTotal.setStatus('current')
f3SyncJPTPNetworkProbeStatsFwdScore5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsFwdScore5.setStatus('current')
f3SyncJPTPNetworkProbeStatsFwdScore4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsFwdScore4.setStatus('current')
f3SyncJPTPNetworkProbeStatsFwdScore3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsFwdScore3.setStatus('current')
f3SyncJPTPNetworkProbeStatsAvgResPDVRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 23), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsAvgResPDVRev.setStatus('current')
f3SyncJPTPNetworkProbeStatsResPDVRevLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsResPDVRevLow.setStatus('current')
f3SyncJPTPNetworkProbeStatsResPDVRevMedium = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsResPDVRevMedium.setStatus('current')
f3SyncJPTPNetworkProbeStatsResPDVRevHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsResPDVRevHigh.setStatus('current')
f3SyncJPTPNetworkProbeStatsResPDVRevTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsResPDVRevTotal.setStatus('current')
f3SyncJPTPNetworkProbeStatsRevScore5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsRevScore5.setStatus('current')
f3SyncJPTPNetworkProbeStatsRevScore4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsRevScore4.setStatus('current')
f3SyncJPTPNetworkProbeStatsRevScore3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsRevScore3.setStatus('current')
f3SyncJPTPNetworkProbeStatsMinRPDVFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 31), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsMinRPDVFwd.setStatus('current')
f3SyncJPTPNetworkProbeStatsMinRPDVRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 32), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsMinRPDVRev.setStatus('current')
f3SyncJPTPNetworkProbeStatsMinPathAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 33), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsMinPathAsymmetry.setStatus('current')
f3SyncJPTPNetworkProbeStatsMaxPathAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 34), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsMaxPathAsymmetry.setStatus('current')
f3SyncJPTPNetworkProbeStatsAvgPathAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 35), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsAvgPathAsymmetry.setStatus('current')
f3SyncJPTPNetworkProbeStatsPathLossSecondsFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 36), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsPathLossSecondsFwd.setStatus('current')
f3SyncJPTPNetworkProbeStatsPathLossSecondsRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 37), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsPathLossSecondsRev.setStatus('current')
f3SyncJPTPNetworkProbeStatsMinDelayReqPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 38), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsMinDelayReqPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeStatsMaxDelayReqPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 39), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsMaxDelayReqPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeStatsAvgDelayReqPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 1, 1, 40), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatsAvgDelayReqPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2), )
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryTable.setStatus('current')
f3SyncJPTPNetworkProbeHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryIndex"))
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryEntry.setStatus('current')
f3SyncJPTPNetworkProbeHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryIndex.setStatus('current')
f3SyncJPTPNetworkProbeHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryTime.setStatus('current')
f3SyncJPTPNetworkProbeHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryValid.setStatus('current')
f3SyncJPTPNetworkProbeHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryAction.setStatus('current')
f3SyncJPTPNetworkProbeHistorySyncMsgsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 5), PerfCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistorySyncMsgsRx.setStatus('current')
f3SyncJPTPNetworkProbeHistoryDelayRspMsgsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 6), PerfCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryDelayRspMsgsRx.setStatus('current')
f3SyncJPTPNetworkProbeHistoryLostSyncMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 7), PerfCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryLostSyncMsgs.setStatus('current')
f3SyncJPTPNetworkProbeHistoryLostDelayRspMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 8), PerfCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryLostDelayRspMsgs.setStatus('current')
f3SyncJPTPNetworkProbeHistoryMinMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 9), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryMinMeanPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeHistoryMaxMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 10), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryMaxMeanPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeHistoryAvgMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 11), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryAvgMeanPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeHistoryMinSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 12), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryMinSyncPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeHistoryMaxSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 13), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryMaxSyncPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeHistoryAvgSyncPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 14), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryAvgSyncPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeHistoryAvgResPDVFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 15), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryAvgResPDVFwd.setStatus('current')
f3SyncJPTPNetworkProbeHistoryResPDVFwdLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryResPDVFwdLow.setStatus('current')
f3SyncJPTPNetworkProbeHistoryResPDVFwdMedium = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryResPDVFwdMedium.setStatus('current')
f3SyncJPTPNetworkProbeHistoryResPDVFwdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryResPDVFwdHigh.setStatus('current')
f3SyncJPTPNetworkProbeHistoryResPDVFwdTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryResPDVFwdTotal.setStatus('current')
f3SyncJPTPNetworkProbeHistoryFwdScore5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryFwdScore5.setStatus('current')
f3SyncJPTPNetworkProbeHistoryFwdScore4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryFwdScore4.setStatus('current')
f3SyncJPTPNetworkProbeHistoryFwdScore3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryFwdScore3.setStatus('current')
f3SyncJPTPNetworkProbeHistoryAvgResPDVRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 23), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryAvgResPDVRev.setStatus('current')
f3SyncJPTPNetworkProbeHistoryResPDVRevLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryResPDVRevLow.setStatus('current')
f3SyncJPTPNetworkProbeHistoryResPDVRevMedium = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryResPDVRevMedium.setStatus('current')
f3SyncJPTPNetworkProbeHistoryResPDVRevHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryResPDVRevHigh.setStatus('current')
f3SyncJPTPNetworkProbeHistoryResPDVRevTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryResPDVRevTotal.setStatus('current')
f3SyncJPTPNetworkProbeHistoryRevScore5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryRevScore5.setStatus('current')
f3SyncJPTPNetworkProbeHistoryRevScore4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryRevScore4.setStatus('current')
f3SyncJPTPNetworkProbeHistoryRevScore3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryRevScore3.setStatus('current')
f3SyncJPTPNetworkProbeHistoryMinRPDVFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 31), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryMinRPDVFwd.setStatus('current')
f3SyncJPTPNetworkProbeHistoryMinRPDVRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 32), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryMinRPDVRev.setStatus('current')
f3SyncJPTPNetworkProbeHistoryMinPathAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryMinPathAsymmetry.setStatus('current')
f3SyncJPTPNetworkProbeHistoryMaxPathAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryMaxPathAsymmetry.setStatus('current')
f3SyncJPTPNetworkProbeHistoryAvgPathAsymmetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryAvgPathAsymmetry.setStatus('current')
f3SyncJPTPNetworkProbeHistoryMinDelayReqPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 36), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryMinDelayReqPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeHistoryMaxDelayReqPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 37), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryMaxDelayReqPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeHistoryAvgDelayReqPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 2, 1, 38), ScaledNanoseconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeHistoryAvgDelayReqPathDelay.setStatus('current')
f3SyncJPTPNetworkProbeThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 3), )
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeThresholdTable.setStatus('current')
f3SyncJPTPNetworkProbeThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdIndex"))
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeThresholdEntry.setStatus('current')
f3SyncJPTPNetworkProbeThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeThresholdIndex.setStatus('current')
f3SyncJPTPNetworkProbeThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 3, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeThresholdInterval.setStatus('current')
f3SyncJPTPNetworkProbeThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 3, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeThresholdVariable.setStatus('current')
f3SyncJPTPNetworkProbeThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeThresholdValueLo.setStatus('current')
f3SyncJPTPNetworkProbeThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeThresholdValueHi.setStatus('current')
f3SyncJPTPNetworkProbeThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 3, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeThresholdMonValue.setStatus('current')
f3SyncJClockProbeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4), )
if mibBuilder.loadTexts: f3SyncJClockProbeStatsTable.setStatus('current')
f3SyncJClockProbeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsIndex"))
if mibBuilder.loadTexts: f3SyncJClockProbeStatsEntry.setStatus('current')
f3SyncJClockProbeStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: f3SyncJClockProbeStatsIndex.setStatus('current')
f3SyncJClockProbeStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatsIntervalType.setStatus('current')
f3SyncJClockProbeStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatsValid.setStatus('current')
f3SyncJClockProbeStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeStatsAction.setStatus('current')
f3SyncJClockProbeStatsMTIE1s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatsMTIE1s.setStatus('current')
f3SyncJClockProbeStatsMTIE10s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatsMTIE10s.setStatus('current')
f3SyncJClockProbeStatsMTIE100s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatsMTIE100s.setStatus('current')
f3SyncJClockProbeStatsMTIE1000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatsMTIE1000s.setStatus('current')
f3SyncJClockProbeStatsMTIE10000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatsMTIE10000s.setStatus('current')
f3SyncJClockProbeStatsMTIE50000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatsMTIE50000s.setStatus('current')
f3SyncJClockProbeStatsMaxTE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatsMaxTE.setStatus('current')
f3SyncJClockProbeStatsMaxConstTE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeStatsMaxConstTE.setStatus('current')
f3SyncJClockProbeHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5), )
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryTable.setStatus('current')
f3SyncJClockProbeHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryIndex"))
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryEntry.setStatus('current')
f3SyncJClockProbeHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryIndex.setStatus('current')
f3SyncJClockProbeHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryTime.setStatus('current')
f3SyncJClockProbeHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryValid.setStatus('current')
f3SyncJClockProbeHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryAction.setStatus('current')
f3SyncJClockProbeHistoryMTIE1s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryMTIE1s.setStatus('current')
f3SyncJClockProbeHistoryMTIE10s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryMTIE10s.setStatus('current')
f3SyncJClockProbeHistoryMTIE100s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryMTIE100s.setStatus('current')
f3SyncJClockProbeHistoryMTIE1000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryMTIE1000s.setStatus('current')
f3SyncJClockProbeHistoryMTIE10000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryMTIE10000s.setStatus('current')
f3SyncJClockProbeHistoryMTIE50000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryMTIE50000s.setStatus('current')
f3SyncJClockProbeHistoryMaxTE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryMaxTE.setStatus('current')
f3SyncJClockProbeHistoryMaxConstTE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeHistoryMaxConstTE.setStatus('current')
f3SyncJClockProbeThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 6), )
if mibBuilder.loadTexts: f3SyncJClockProbeThresholdTable.setStatus('current')
f3SyncJClockProbeThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 6, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdIndex"))
if mibBuilder.loadTexts: f3SyncJClockProbeThresholdEntry.setStatus('current')
f3SyncJClockProbeThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3SyncJClockProbeThresholdIndex.setStatus('current')
f3SyncJClockProbeThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 6, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeThresholdInterval.setStatus('current')
f3SyncJClockProbeThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 6, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeThresholdVariable.setStatus('current')
f3SyncJClockProbeThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 6, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeThresholdValueLo.setStatus('current')
f3SyncJClockProbeThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 6, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJClockProbeThresholdValueHi.setStatus('current')
f3SyncJClockProbeThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 6, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJClockProbeThresholdMonValue.setStatus('current')
f3SyncJPTPClockProbeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7), )
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsTable.setStatus('current')
f3SyncJPTPClockProbeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsIndex"))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsEntry.setStatus('current')
f3SyncJPTPClockProbeStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsIndex.setStatus('current')
f3SyncJPTPClockProbeStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsIntervalType.setStatus('current')
f3SyncJPTPClockProbeStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsValid.setStatus('current')
f3SyncJPTPClockProbeStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsAction.setStatus('current')
f3SyncJPTPClockProbeStatsMTIE1s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsMTIE1s.setStatus('current')
f3SyncJPTPClockProbeStatsMTIE10s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsMTIE10s.setStatus('current')
f3SyncJPTPClockProbeStatsMTIE100s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsMTIE100s.setStatus('current')
f3SyncJPTPClockProbeStatsMTIE1000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsMTIE1000s.setStatus('current')
f3SyncJPTPClockProbeStatsMTIE10000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsMTIE10000s.setStatus('current')
f3SyncJPTPClockProbeStatsMTIE50000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsMTIE50000s.setStatus('current')
f3SyncJPTPClockProbeStatsMaxTE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsMaxTE.setStatus('current')
f3SyncJPTPClockProbeStatsMaxConstTE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 7, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatsMaxConstTE.setStatus('current')
f3SyncJPTPClockProbeHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8), )
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryTable.setStatus('current')
f3SyncJPTPClockProbeHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryIndex"))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryEntry.setStatus('current')
f3SyncJPTPClockProbeHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryIndex.setStatus('current')
f3SyncJPTPClockProbeHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryTime.setStatus('current')
f3SyncJPTPClockProbeHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryValid.setStatus('current')
f3SyncJPTPClockProbeHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryAction.setStatus('current')
f3SyncJPTPClockProbeHistoryMTIE1s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryMTIE1s.setStatus('current')
f3SyncJPTPClockProbeHistoryMTIE10s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryMTIE10s.setStatus('current')
f3SyncJPTPClockProbeHistoryMTIE100s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryMTIE100s.setStatus('current')
f3SyncJPTPClockProbeHistoryMTIE1000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryMTIE1000s.setStatus('current')
f3SyncJPTPClockProbeHistoryMTIE10000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryMTIE10000s.setStatus('current')
f3SyncJPTPClockProbeHistoryMTIE50000s = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryMTIE50000s.setStatus('current')
f3SyncJPTPClockProbeHistoryMaxTE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryMaxTE.setStatus('current')
f3SyncJPTPClockProbeHistoryMaxConstTE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 8, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeHistoryMaxConstTE.setStatus('current')
f3SyncJPTPClockProbeThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 9), )
if mibBuilder.loadTexts: f3SyncJPTPClockProbeThresholdTable.setStatus('current')
f3SyncJPTPClockProbeThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 9, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsIndex"), (0, "F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdIndex"))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeThresholdEntry.setStatus('current')
f3SyncJPTPClockProbeThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeThresholdIndex.setStatus('current')
f3SyncJPTPClockProbeThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 9, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeThresholdInterval.setStatus('current')
f3SyncJPTPClockProbeThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 9, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeThresholdVariable.setStatus('current')
f3SyncJPTPClockProbeThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 9, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeThresholdValueLo.setStatus('current')
f3SyncJPTPClockProbeThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 9, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeThresholdValueHi.setStatus('current')
f3SyncJPTPClockProbeThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 2, 9, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncJPTPClockProbeThresholdMonValue.setStatus('current')
f3SyncJPTPNetworkProbeThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 3, 1)).setObjects(("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdInterval"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdVariable"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdValueLo"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdValueHi"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdMonValue"))
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeThresholdCrossingAlert.setStatus('current')
f3SyncJClockProbeStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 3, 2)).setObjects(("F3-SYNCJACK-MIB", "f3SyncJClockProbeTestState"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeSourceFailure"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeReferenceFailure"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatusMTIEMaskFailed"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatusMTIEMarginFailed"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeActualTestStartTime"))
if mibBuilder.loadTexts: f3SyncJClockProbeStatusChangeTrap.setStatus('current')
f3SyncJPTPClockProbeStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 3, 3)).setObjects(("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeTestState"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeNoTimestampFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeNoEventMessageFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeReferenceFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatusMTIEMaskFailed"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatusMTIEMarginFailed"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeActualTestStartTime"))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeStatusChangeTrap.setStatus('current')
f3SyncJPTPNetworkProbeStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 3, 4)).setObjects(("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeTestState"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeNoTimestampFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeNoEventMessageFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeReferenceFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeFwdScore"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeRevScore"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeActualTestStartTime"))
if mibBuilder.loadTexts: f3SyncJPTPNetworkProbeStatusChangeTrap.setStatus('current')
f3SyncJClockProbeThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 3, 5)).setObjects(("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdIndex"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdInterval"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdVariable"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdValueLo"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdValueHi"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdMonValue"))
if mibBuilder.loadTexts: f3SyncJClockProbeThresholdCrossingAlert.setStatus('current')
f3SyncJPTPClockProbeThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 3, 6)).setObjects(("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdInterval"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdVariable"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdValueLo"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdValueHi"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdMonValue"))
if mibBuilder.loadTexts: f3SyncJPTPClockProbeThresholdCrossingAlert.setStatus('current')
f3SyncJCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 4, 1))
f3SyncJGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 4, 2))
f3SyncJCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 4, 1, 1)).setObjects(("F3-SYNCJACK-MIB", "f3SyncJObjectGroup"), ("F3-SYNCJACK-MIB", "f3SyncJPerfObjectGroup"), ("F3-SYNCJACK-MIB", "f3SyncJNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3SyncJCompliance = f3SyncJCompliance.setStatus('current')
f3SyncJObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 4, 2, 1)).setObjects(("F3-SYNCJACK-MIB", "f3SyncJClockProbeIndex"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeName"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeSource"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeReference"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeExpectedQL"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeSourceType"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeMeasurementRate"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeMTIEMaskType"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeMTIEMaskMargin"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeScheduler"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeTestState"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeLastTIEResult"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeLastTIEResultTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeSourceFailure"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeReferenceFailure"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeActualTestStartTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeActualTestDuration"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeMTIEMaskCrossedTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeMTIEMaskMarginCrossedTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStorageType"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeRowStatus"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeFfoTarget"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeFfoObserWindow"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeLastFFOResult"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeTimeOfLastFFOResult"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeRawDataCollectionEnabled"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeTeAlertThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeTeAlertClearThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeLastTEAlertTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeLastTEAlertClearTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeRunningFailedCount"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeMeasurementType"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeConstTEThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeConstTEClrThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeConstTEWindow"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeMaxTETotAlarmTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeConstTETotAlarmTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeConstTEMeasurementTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeMaxTEMeasurementTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeMaxTEThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeMaxTEClrThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeMTIERestart"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryIndex"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryAlias"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistorySource"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryReference"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryExpectedQL"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistorySourceType"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMeasurementRate"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMTIEMaskType"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMTIEMaskMargin"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistorySourceFailure"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryReferenceFailure"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryActualTestStartTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryActualTestDuration"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMTIEMaskCrossedTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMTIEMaskMarginCrossedTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryStatusMTIEMaskFailed"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryStatusMTIEMarginFailed"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryStorageType"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryRowStatus"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMinFFO"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMaxFFO"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryAvgFFO"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryOutOfTargetFFOTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryTotalFFOTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMinPhaseOffset"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMaxPhaseOffset"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryAvgPhaseOffset"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryOutOfTargetPhaseOffsetTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryTotalPhaseOffsetTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMeasurementType"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryTeAlertThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryTeAlertClearThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryLastTEAlertTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryLastTEAlertClearTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryRunningFailedCount"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryConstTEThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryConstTEClrThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryConstTEWindow"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMaxTETotAlarmTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryConstTETotAlarmTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMTIEValueIndex"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMTIEValue"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryConstTEMeasurementTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMaxTEMeasurementTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMaxTEThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeResHistoryMaxTEClrThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeName"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeMeasurementDirection"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbePTPFlowPoint"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeIpPrototocol"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeSlaveIpV4Address"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeMasterIpV4Address"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeReference"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeExpectedQL"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeMTIEMaskType"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeMTIEMaskMargin"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeScheduler"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeTestState"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeLastTIEResult"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeLastTIEResultTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeNoTimestampFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeNoEventMessageFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeReferenceFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeActualTestStartTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeActualTestDuration"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeMTIEMaskCrossedTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeMTIEMaskMarginCrossedTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatusMTIEMaskFailed"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatusMTIEMarginFailed"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStorageType"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeRowStatus"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeFfoTarget"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeFfoObserWindow"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeLastFFOResult"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeTimeOfLastFFOResult"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeRawDataCollectionEnabled"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeTeAlertThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeTeAlertClearThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeLastTEAlertTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeLastTEAlertClearTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeRunningFailedCount"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeMeasurementType"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeDelayMS"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeDelaySM"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeTAsymmetry"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeDelayCompensation"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeConstTEThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeConstTEClrThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeConstTEWindow"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeInstTEThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeInstTEClrThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeMaxTETotAlarmTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeConstTETotAlarmTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeInstTETotAlarmTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeSlavePortIdentity"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeMasterPortIdentity"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeMTIERestart"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryAlias"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMeasurementDirection"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryPTPFlowPoint"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryIpPrototocol"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistorySlaveIpV4Address"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMasterIpV4Address"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryReference"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryExpectedQL"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMTIEMaskType"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMTIEMaskMargin"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryNoTimestampFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryNoEventMessageFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryReferenceFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryActualTestStartTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryActualTestDuration"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMTIEMaskCrossedTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMTIEMaskMarginCrossedTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryStatusMTIEMaskFailed"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryStatusMTIEMarginFailed"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryStorageType"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryRowStatus"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMinFFO"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMaxFFO"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryAvgFFO"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryOutOfTargetFFOTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryTotalFFOTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMinPhaseOffset"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMaxPhaseOffset"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryAvgPhaseOffset"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryOutOfTargetPhaseOffsetTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryTotalPhaseOffsetTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryTeAlertThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryTeAlertClearThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryLastTEAlertTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryLastTEAlertClearTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryRunningFailedCount"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMeasurementType"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryConstTEThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryConstTEClrThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryConstTEWindow"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryInstTEThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryInstTEClrThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMaxTETotAlarmTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryConstTETotAlarmTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryInstTETotAlarmTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistorySlavePortIdentity"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMasterPortIdentity"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMTIEValueIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMTIEValue"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryConstTEMeasurementTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMaxTEMeasurementTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryInstTEMeasurementTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMaxTEThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeResHistoryMaxTEClrThreshold"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeName"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeAdminState"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeOperationalState"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeSecondaryState"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbePTPFlowPoint"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeIpPrototocol"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeSlaveIpV4Address"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeMasterIpV4Address"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeReference"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeExpectedQL"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeActualTestStartTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeActualTestDuration"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbePDVAssuredHi"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbePDVAssuredLo"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbePDVSatisfiedHi"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbePDVSatisfiedLo"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeResPDVFwdLowRange"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeResPDVFwdMediumRange"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeResPDVFwdHighRange"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeResPDVRevLowRange"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeResPDVRevMediumRange"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeResPDVRevHighRange"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeScheduler"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeTestState"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeNoTimestampFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeNoEventMessageFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeReferenceFailure"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeFwdScore"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeRevScore"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStorageType"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeRowStatus"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeResultsAvailable"), ("F3-SYNCJACK-MIB", "f3SyncJScheduleGroupIndex"), ("F3-SYNCJACK-MIB", "f3SyncJScheduleGroupDescr"), ("F3-SYNCJACK-MIB", "f3SyncJScheduleGroupEntityList"), ("F3-SYNCJACK-MIB", "f3SyncJScheduleGroupType"), ("F3-SYNCJACK-MIB", "f3SyncJScheduleGroupStartTime"), ("F3-SYNCJACK-MIB", "f3SyncJScheduleGroupDuration"), ("F3-SYNCJACK-MIB", "f3SyncJScheduleGroupStatus"), ("F3-SYNCJACK-MIB", "f3SyncJScheduleGroupStorageType"), ("F3-SYNCJACK-MIB", "f3SyncJScheduleGroupRowStatus"), ("F3-SYNCJACK-MIB", "f3UserDefinedMTIEMaskIndex"), ("F3-SYNCJACK-MIB", "f3UserDefinedMTIEMaskName"), ("F3-SYNCJACK-MIB", "f3UserDefinedMTIEMaskDisplayPoints"), ("F3-SYNCJACK-MIB", "f3UserDefinedMTIEMaskMeasurmentPoints"), ("F3-SYNCJACK-MIB", "f3UserDefinedMTIEMaskStorageType"), ("F3-SYNCJACK-MIB", "f3UserDefinedMTIEMaskRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3SyncJObjectGroup = f3SyncJObjectGroup.setStatus('current')
f3SyncJPerfObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 4, 2, 2)).setObjects(("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsIntervalType"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsValid"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsAction"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsSyncMsgsRx"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsDelayRspMsgsRx"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsLostSyncMsgs"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsLostDelayRspMsgs"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsMinMeanPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsMaxMeanPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsAvgMeanPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsMinSyncPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsMaxSyncPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsAvgSyncPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsAvgResPDVFwd"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsResPDVFwdLow"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsResPDVFwdMedium"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsResPDVFwdHigh"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsResPDVFwdTotal"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsFwdScore5"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsFwdScore4"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsFwdScore3"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsAvgResPDVRev"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsResPDVRevLow"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsResPDVRevMedium"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsResPDVRevHigh"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsResPDVRevTotal"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsRevScore5"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsRevScore4"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsRevScore3"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsMinRPDVFwd"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsMinRPDVRev"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsMinPathAsymmetry"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsMaxPathAsymmetry"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsAvgPathAsymmetry"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsPathLossSecondsFwd"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsPathLossSecondsRev"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsMinDelayReqPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsMaxDelayReqPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatsAvgDelayReqPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryValid"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryAction"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistorySyncMsgsRx"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryDelayRspMsgsRx"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryLostSyncMsgs"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryLostDelayRspMsgs"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryMinMeanPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryMaxMeanPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryAvgMeanPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryMinSyncPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryMaxSyncPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryAvgSyncPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryAvgResPDVFwd"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryResPDVFwdLow"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryResPDVFwdMedium"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryResPDVFwdHigh"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryResPDVFwdTotal"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryFwdScore5"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryFwdScore4"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryFwdScore3"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryAvgResPDVRev"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryResPDVRevLow"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryResPDVRevMedium"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryResPDVRevHigh"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryResPDVRevTotal"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryRevScore5"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryRevScore4"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryRevScore3"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryMinRPDVFwd"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryMinRPDVRev"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryMinPathAsymmetry"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryMaxPathAsymmetry"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryAvgPathAsymmetry"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryMinDelayReqPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryMaxDelayReqPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeHistoryAvgDelayReqPathDelay"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdInterval"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdVariable"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdValueLo"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdValueHi"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdMonValue"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsIndex"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsIntervalType"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsValid"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsAction"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsMTIE1s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsMTIE10s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsMTIE100s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsMTIE1000s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsMTIE10000s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsMTIE50000s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsMaxTE"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatsMaxConstTE"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryIndex"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryTime"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryValid"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryAction"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryMTIE1s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryMTIE10s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryMTIE100s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryMTIE1000s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryMTIE10000s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryMTIE50000s"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryMaxTE"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeHistoryMaxConstTE"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdIndex"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdInterval"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdVariable"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdValueLo"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdValueHi"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdMonValue"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsIntervalType"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsValid"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsAction"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsMTIE1s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsMTIE10s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsMTIE100s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsMTIE1000s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsMTIE10000s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsMTIE50000s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsMaxTE"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatsMaxConstTE"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryTime"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryValid"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryAction"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryMTIE1s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryMTIE10s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryMTIE100s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryMTIE1000s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryMTIE10000s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryMTIE50000s"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryMaxTE"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeHistoryMaxConstTE"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdIndex"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdInterval"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdVariable"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdValueLo"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdValueHi"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3SyncJPerfObjectGroup = f3SyncJPerfObjectGroup.setStatus('current')
f3SyncJNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 22, 4, 2, 3)).setObjects(("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeThresholdCrossingAlert"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeThresholdCrossingAlert"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeThresholdCrossingAlert"), ("F3-SYNCJACK-MIB", "f3SyncJClockProbeStatusChangeTrap"), ("F3-SYNCJACK-MIB", "f3SyncJPTPClockProbeStatusChangeTrap"), ("F3-SYNCJACK-MIB", "f3SyncJPTPNetworkProbeStatusChangeTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3SyncJNotifGroup = f3SyncJNotifGroup.setStatus('current')
mibBuilder.exportSymbols("F3-SYNCJACK-MIB", f3SyncJPTPNetworkProbeStatsEntry=f3SyncJPTPNetworkProbeStatsEntry, f3SyncJClockProbeResHistoryMTIEMaskMargin=f3SyncJClockProbeResHistoryMTIEMaskMargin, f3SyncJPTPClockProbeThresholdInterval=f3SyncJPTPClockProbeThresholdInterval, f3SyncJClockProbeStatsMTIE10000s=f3SyncJClockProbeStatsMTIE10000s, f3SyncJClockProbeRowStatus=f3SyncJClockProbeRowStatus, f3SyncJPTPNetworkProbeActualTestStartTime=f3SyncJPTPNetworkProbeActualTestStartTime, f3SyncJPTPNetworkProbeResPDVRevMediumRange=f3SyncJPTPNetworkProbeResPDVRevMediumRange, f3SyncJPTPNetworkProbeStatsMaxSyncPathDelay=f3SyncJPTPNetworkProbeStatsMaxSyncPathDelay, f3SyncJClockProbeHistoryMTIE1s=f3SyncJClockProbeHistoryMTIE1s, f3SyncJPTPNetworkProbeStatsRevScore3=f3SyncJPTPNetworkProbeStatsRevScore3, f3SyncJClockProbeResHistoryTeAlertClearThreshold=f3SyncJClockProbeResHistoryTeAlertClearThreshold, f3SyncJPTPClockProbeStatusMTIEMarginFailed=f3SyncJPTPClockProbeStatusMTIEMarginFailed, f3SyncJPTPNetworkProbeResPDVFwdLowRange=f3SyncJPTPNetworkProbeResPDVFwdLowRange, f3SyncJClockProbeTable=f3SyncJClockProbeTable, f3SyncJClockProbeStatsMTIE100s=f3SyncJClockProbeStatsMTIE100s, f3SyncJClockProbeResHistoryStatusMTIEMarginFailed=f3SyncJClockProbeResHistoryStatusMTIEMarginFailed, f3SyncJPTPClockProbeStatsIntervalType=f3SyncJPTPClockProbeStatsIntervalType, f3SyncJPTPNetworkProbeResultsAvailable=f3SyncJPTPNetworkProbeResultsAvailable, f3SyncJPTPNetworkProbeStatsAvgPathAsymmetry=f3SyncJPTPNetworkProbeStatsAvgPathAsymmetry, f3SyncJPTPClockProbeResHistoryTotalPhaseOffsetTime=f3SyncJPTPClockProbeResHistoryTotalPhaseOffsetTime, f3SyncJPTPNetworkProbeHistoryResPDVFwdTotal=f3SyncJPTPNetworkProbeHistoryResPDVFwdTotal, f3SyncJPTPClockProbeActualTestStartTime=f3SyncJPTPClockProbeActualTestStartTime, f3SyncJClockProbeResHistoryConstTETotAlarmTime=f3SyncJClockProbeResHistoryConstTETotAlarmTime, f3SyncJPTPNetworkProbeThresholdValueLo=f3SyncJPTPNetworkProbeThresholdValueLo, f3SyncJPTPNetworkProbeReference=f3SyncJPTPNetworkProbeReference, f3SyncJPTPNetworkProbeResPDVRevLowRange=f3SyncJPTPNetworkProbeResPDVRevLowRange, f3SyncJPTPNetworkProbeRevScore=f3SyncJPTPNetworkProbeRevScore, f3SyncJPTPNetworkProbeResPDVFwdMediumRange=f3SyncJPTPNetworkProbeResPDVFwdMediumRange, f3SyncJClockProbeHistoryAction=f3SyncJClockProbeHistoryAction, MTIEMaskType=MTIEMaskType, f3SyncJClockProbeResHistoryTotalFFOTime=f3SyncJClockProbeResHistoryTotalFFOTime, f3SyncJPTPClockProbeResHistoryMTIEValue=f3SyncJPTPClockProbeResHistoryMTIEValue, f3SyncJClockProbeResHistoryMTIEMaskMarginCrossedTime=f3SyncJClockProbeResHistoryMTIEMaskMarginCrossedTime, f3SyncJClockProbeResHistoryOutOfTargetPhaseOffsetTime=f3SyncJClockProbeResHistoryOutOfTargetPhaseOffsetTime, f3SyncJPTPNetworkProbeHistoryMinSyncPathDelay=f3SyncJPTPNetworkProbeHistoryMinSyncPathDelay, f3SyncJPTPClockProbeConstTEClrThreshold=f3SyncJPTPClockProbeConstTEClrThreshold, f3SyncJPTPClockProbeResHistoryPTPFlowPoint=f3SyncJPTPClockProbeResHistoryPTPFlowPoint, f3SyncJPTPClockProbeResHistoryReference=f3SyncJPTPClockProbeResHistoryReference, f3UserDefinedMTIEMaskRowStatus=f3UserDefinedMTIEMaskRowStatus, f3SyncJClockProbeLastFFOResult=f3SyncJClockProbeLastFFOResult, f3SyncJPTPClockProbeReferenceFailure=f3SyncJPTPClockProbeReferenceFailure, f3SyncJPTPClockProbeMTIERestart=f3SyncJPTPClockProbeMTIERestart, f3SyncJPTPClockProbeName=f3SyncJPTPClockProbeName, f3SyncJPTPNetworkProbeStatsMaxPathAsymmetry=f3SyncJPTPNetworkProbeStatsMaxPathAsymmetry, f3SyncJClockProbeResHistoryStatusMTIEMaskFailed=f3SyncJClockProbeResHistoryStatusMTIEMaskFailed, f3SyncJPTPClockProbeResHistoryMaxTEMeasurementTime=f3SyncJPTPClockProbeResHistoryMaxTEMeasurementTime, f3SyncJPTPNetworkProbeStatsResPDVRevLow=f3SyncJPTPNetworkProbeStatsResPDVRevLow, f3SyncJClockProbeResHistoryAvgFFO=f3SyncJClockProbeResHistoryAvgFFO, f3SyncJPTPNetworkProbeSecondaryState=f3SyncJPTPNetworkProbeSecondaryState, f3SyncJClockProbeStatsMaxConstTE=f3SyncJClockProbeStatsMaxConstTE, f3SyncJClockProbeThresholdVariable=f3SyncJClockProbeThresholdVariable, f3SyncJClockProbeRawDataCollectionEnabled=f3SyncJClockProbeRawDataCollectionEnabled, f3SyncJClockProbeMTIEValueTable=f3SyncJClockProbeMTIEValueTable, f3SyncJPTPClockProbeInstTEClrThreshold=f3SyncJPTPClockProbeInstTEClrThreshold, f3SyncJClockProbeSourceType=f3SyncJClockProbeSourceType, f3SyncJPTPClockProbeResHistoryReferenceFailure=f3SyncJPTPClockProbeResHistoryReferenceFailure, f3SyncJPTPNetworkProbeStatsAvgMeanPathDelay=f3SyncJPTPNetworkProbeStatsAvgMeanPathDelay, f3SyncJPTPClockProbeMTIEMaskMarginCrossedTime=f3SyncJPTPClockProbeMTIEMaskMarginCrossedTime, f3SyncJPTPClockProbeMTIEValueEntry=f3SyncJPTPClockProbeMTIEValueEntry, f3SyncJClockProbeMeasurementType=f3SyncJClockProbeMeasurementType, f3SyncJPTPNetworkProbeSlaveIpV4Address=f3SyncJPTPNetworkProbeSlaveIpV4Address, f3SyncJClockProbeActualTestStartTime=f3SyncJClockProbeActualTestStartTime, f3SyncJPTPClockProbeResHistoryConstTEWindow=f3SyncJPTPClockProbeResHistoryConstTEWindow, f3SyncJPTPClockProbeResHistoryConstTETotAlarmTime=f3SyncJPTPClockProbeResHistoryConstTETotAlarmTime, f3SyncJClockProbeName=f3SyncJClockProbeName, f3SyncJClockProbeResHistoryReference=f3SyncJClockProbeResHistoryReference, f3SyncJClockProbeResHistorySourceType=f3SyncJClockProbeResHistorySourceType, f3SyncJClockProbeStatsIndex=f3SyncJClockProbeStatsIndex, f3SyncJPTPNetworkProbeHistoryLostDelayRspMsgs=f3SyncJPTPNetworkProbeHistoryLostDelayRspMsgs, f3SyncJPTPNetworkProbeHistoryAvgPathAsymmetry=f3SyncJPTPNetworkProbeHistoryAvgPathAsymmetry, f3SyncJPTPNetworkProbeStatsResPDVRevHigh=f3SyncJPTPNetworkProbeStatsResPDVRevHigh, f3SyncJClockProbeMaxTEMeasurementTime=f3SyncJClockProbeMaxTEMeasurementTime, f3SyncJClockProbeMaxTEThreshold=f3SyncJClockProbeMaxTEThreshold, f3SyncJPTPClockProbeConstTETotAlarmTime=f3SyncJPTPClockProbeConstTETotAlarmTime, f3SyncJCompliances=f3SyncJCompliances, SyncJackTestState=SyncJackTestState, f3SyncJPTPClockProbeRawDataCollectionEnabled=f3SyncJPTPClockProbeRawDataCollectionEnabled, f3SyncJClockProbeResHistoryRunningFailedCount=f3SyncJClockProbeResHistoryRunningFailedCount, f3SyncJClockProbeStatsEntry=f3SyncJClockProbeStatsEntry, f3SyncJClockProbeHistoryMTIE10000s=f3SyncJClockProbeHistoryMTIE10000s, f3SyncJPTPClockProbeResHistoryConstTEClrThreshold=f3SyncJPTPClockProbeResHistoryConstTEClrThreshold, f3SyncJPTPNetworkProbeStatsMinDelayReqPathDelay=f3SyncJPTPNetworkProbeStatsMinDelayReqPathDelay, f3SyncJPTPNetworkProbeNoTimestampFailure=f3SyncJPTPNetworkProbeNoTimestampFailure, f3SyncJPTPNetworkProbeHistorySyncMsgsRx=f3SyncJPTPNetworkProbeHistorySyncMsgsRx, f3SyncJPTPClockProbeTeAlertThreshold=f3SyncJPTPClockProbeTeAlertThreshold, f3SyncJPTPNetworkProbePDVAssuredHi=f3SyncJPTPNetworkProbePDVAssuredHi, f3SyncJClockProbeResHistorySourceFailure=f3SyncJClockProbeResHistorySourceFailure, f3SyncJPTPNetworkProbeHistoryValid=f3SyncJPTPNetworkProbeHistoryValid, f3SyncJObjectGroup=f3SyncJObjectGroup, f3SyncJPTPClockProbeTeAlertClearThreshold=f3SyncJPTPClockProbeTeAlertClearThreshold, f3SyncJClockProbeResHistoryExpectedQL=f3SyncJClockProbeResHistoryExpectedQL, f3SyncJPTPClockProbeStatusChangeTrap=f3SyncJPTPClockProbeStatusChangeTrap, f3SyncJPTPNetworkProbeThresholdIndex=f3SyncJPTPNetworkProbeThresholdIndex, f3SyncJPTPClockProbeHistoryAction=f3SyncJPTPClockProbeHistoryAction, f3SyncJPTPNetworkProbeHistoryMinRPDVFwd=f3SyncJPTPNetworkProbeHistoryMinRPDVFwd, f3SyncJPTPClockProbeNoTimestampFailure=f3SyncJPTPClockProbeNoTimestampFailure, f3SyncJClockProbeResHistoryMinFFO=f3SyncJClockProbeResHistoryMinFFO, f3SyncJPTPClockProbeDelayMS=f3SyncJPTPClockProbeDelayMS, f3SyncJClockProbeResHistoryConstTEWindow=f3SyncJClockProbeResHistoryConstTEWindow, f3SyncJPTPNetworkProbeStatsValid=f3SyncJPTPNetworkProbeStatsValid, f3SyncJPTPNetworkProbeStatsRevScore5=f3SyncJPTPNetworkProbeStatsRevScore5, f3SyncJPTPClockProbeHistoryIndex=f3SyncJPTPClockProbeHistoryIndex, f3SyncJPTPClockProbeThresholdVariable=f3SyncJPTPClockProbeThresholdVariable, f3SyncJGroups=f3SyncJGroups, f3SyncJScheduleGroupIndex=f3SyncJScheduleGroupIndex, f3SyncJPTPNetworkProbeStatsResPDVFwdLow=f3SyncJPTPNetworkProbeStatsResPDVFwdLow, f3SyncJPTPNetworkProbeHistoryFwdScore4=f3SyncJPTPNetworkProbeHistoryFwdScore4, f3SyncJClockProbeThresholdInterval=f3SyncJClockProbeThresholdInterval, f3SyncJPTPClockProbeMaxTEClrThreshold=f3SyncJPTPClockProbeMaxTEClrThreshold, f3SyncJPTPClockProbeResHistoryTable=f3SyncJPTPClockProbeResHistoryTable, f3SyncJPTPClockProbeLastTIEResult=f3SyncJPTPClockProbeLastTIEResult, f3SyncJPTPClockProbeHistoryMaxConstTE=f3SyncJPTPClockProbeHistoryMaxConstTE, f3SyncJPTPNetworkProbeHistoryMinMeanPathDelay=f3SyncJPTPNetworkProbeHistoryMinMeanPathDelay, f3SyncJPTPNetworkProbeHistoryAvgSyncPathDelay=f3SyncJPTPNetworkProbeHistoryAvgSyncPathDelay, f3SyncJClockProbeHistoryMTIE10s=f3SyncJClockProbeHistoryMTIE10s, f3SyncJScheduleGroupDuration=f3SyncJScheduleGroupDuration, f3SyncJClockProbeResHistoryEntry=f3SyncJClockProbeResHistoryEntry, f3SyncJPTPClockProbeResHistoryStatusMTIEMarginFailed=f3SyncJPTPClockProbeResHistoryStatusMTIEMarginFailed, f3SyncJPTPNetworkProbeStatsResPDVRevTotal=f3SyncJPTPNetworkProbeStatsResPDVRevTotal, f3SyncJPTPClockProbeStatsValid=f3SyncJPTPClockProbeStatsValid, f3SyncJPTPClockProbeFfoTarget=f3SyncJPTPClockProbeFfoTarget, f3SyncJClockProbeStatsMTIE10s=f3SyncJClockProbeStatsMTIE10s, f3SyncJClockProbeMaxTEClrThreshold=f3SyncJClockProbeMaxTEClrThreshold, f3SyncJPTPNetworkProbeHistoryTable=f3SyncJPTPNetworkProbeHistoryTable, f3SyncJClockProbeReferenceFailure=f3SyncJClockProbeReferenceFailure, f3SyncJClockProbeHistoryMaxTE=f3SyncJClockProbeHistoryMaxTE, f3SyncJPTPClockProbeHistoryMTIE1000s=f3SyncJPTPClockProbeHistoryMTIE1000s, f3SyncJPTPClockProbeReference=f3SyncJPTPClockProbeReference, f3SyncJClockProbeLastTIEResultTime=f3SyncJClockProbeLastTIEResultTime, f3SyncJPTPNetworkProbeIpPrototocol=f3SyncJPTPNetworkProbeIpPrototocol, f3SyncJPTPNetworkProbeThresholdMonValue=f3SyncJPTPNetworkProbeThresholdMonValue, f3SyncJPTPNetworkProbeHistoryResPDVRevTotal=f3SyncJPTPNetworkProbeHistoryResPDVRevTotal, f3SyncJPTPNetworkProbeThresholdTable=f3SyncJPTPNetworkProbeThresholdTable, f3SyncJPTPClockProbeResHistoryMinPhaseOffset=f3SyncJPTPClockProbeResHistoryMinPhaseOffset, f3SyncJClockProbeConstTEClrThreshold=f3SyncJClockProbeConstTEClrThreshold, f3SyncJPTPClockProbeMTIEMaskMargin=f3SyncJPTPClockProbeMTIEMaskMargin, f3SyncJClockProbeHistoryMTIE50000s=f3SyncJClockProbeHistoryMTIE50000s, f3SyncJPTPClockProbeThresholdValueLo=f3SyncJPTPClockProbeThresholdValueLo, f3SyncJPTPNetworkProbeStatsMinMeanPathDelay=f3SyncJPTPNetworkProbeStatsMinMeanPathDelay, f3SyncJPTPClockProbeResHistoryNoTimestampFailure=f3SyncJPTPClockProbeResHistoryNoTimestampFailure, f3SyncJScheduleGroupEntityList=f3SyncJScheduleGroupEntityList, f3SyncJClockProbeResHistoryMaxTEThreshold=f3SyncJClockProbeResHistoryMaxTEThreshold, f3SyncJPTPNetworkProbeStatsResPDVFwdTotal=f3SyncJPTPNetworkProbeStatsResPDVFwdTotal, f3SyncJPTPNetworkProbeStatsLostSyncMsgs=f3SyncJPTPNetworkProbeStatsLostSyncMsgs, f3SyncJClockProbeThresholdIndex=f3SyncJClockProbeThresholdIndex, f3SyncJClockProbeResHistoryIndex=f3SyncJClockProbeResHistoryIndex, f3SyncJPTPNetworkProbeStatsPathLossSecondsRev=f3SyncJPTPNetworkProbeStatsPathLossSecondsRev, f3SyncJPTPNetworkProbeHistoryResPDVRevLow=f3SyncJPTPNetworkProbeHistoryResPDVRevLow, f3SyncJPTPClockProbeStatsMTIE50000s=f3SyncJPTPClockProbeStatsMTIE50000s, f3SyncJPTPClockProbeStatsMaxTE=f3SyncJPTPClockProbeStatsMaxTE, f3SyncJClockProbeLastTIEResult=f3SyncJClockProbeLastTIEResult, TIEMeasurementRate=TIEMeasurementRate, f3SyncJClockProbeResHistoryLastTEAlertClearTime=f3SyncJClockProbeResHistoryLastTEAlertClearTime, f3SyncJPTPNetworkProbeName=f3SyncJPTPNetworkProbeName, f3SyncJPTPClockProbePTPFlowPoint=f3SyncJPTPClockProbePTPFlowPoint, f3SyncJPTPClockProbeResHistoryRowStatus=f3SyncJPTPClockProbeResHistoryRowStatus, f3SyncJPerfObjectGroup=f3SyncJPerfObjectGroup, f3SyncJPTPClockProbeConstTEThreshold=f3SyncJPTPClockProbeConstTEThreshold, f3SyncJPTPClockProbeInstTETotAlarmTime=f3SyncJPTPClockProbeInstTETotAlarmTime, f3SyncJPTPClockProbeMTIEValueIndex=f3SyncJPTPClockProbeMTIEValueIndex, f3SyncJPTPClockProbeResHistoryStatusMTIEMaskFailed=f3SyncJPTPClockProbeResHistoryStatusMTIEMaskFailed, f3SyncJPTPNetworkProbeResPDVFwdHighRange=f3SyncJPTPNetworkProbeResPDVFwdHighRange, f3SyncJClockProbeStatsMaxTE=f3SyncJClockProbeStatsMaxTE, f3SyncJPTPNetworkProbeHistoryMaxMeanPathDelay=f3SyncJPTPNetworkProbeHistoryMaxMeanPathDelay, f3SyncJClockProbeMaxTETotAlarmTime=f3SyncJClockProbeMaxTETotAlarmTime, f3SyncJPTPClockProbeHistoryMTIE1s=f3SyncJPTPClockProbeHistoryMTIE1s, f3SyncJClockProbeResHistoryTeAlertThreshold=f3SyncJClockProbeResHistoryTeAlertThreshold, f3SyncJPTPClockProbeStorageType=f3SyncJPTPClockProbeStorageType, f3SyncJScheduleGroupType=f3SyncJScheduleGroupType, f3SyncJClockProbeLastTEAlertTime=f3SyncJClockProbeLastTEAlertTime, f3SyncJPTPNetworkProbeHistoryLostSyncMsgs=f3SyncJPTPNetworkProbeHistoryLostSyncMsgs, f3SyncJPTPNetworkProbeStatsIndex=f3SyncJPTPNetworkProbeStatsIndex, f3SyncJPTPNetworkProbeHistoryAvgResPDVRev=f3SyncJPTPNetworkProbeHistoryAvgResPDVRev, f3SyncJPTPNetworkProbeStatusChangeTrap=f3SyncJPTPNetworkProbeStatusChangeTrap, f3SyncJClockProbeMTIEValueEntry=f3SyncJClockProbeMTIEValueEntry, f3SyncJPTPClockProbeResHistoryOutOfTargetPhaseOffsetTime=f3SyncJPTPClockProbeResHistoryOutOfTargetPhaseOffsetTime, f3SyncJClockProbeResHistoryMeasurementType=f3SyncJClockProbeResHistoryMeasurementType, f3SyncJPTPClockProbeStatsMTIE1s=f3SyncJPTPClockProbeStatsMTIE1s, f3SyncJClockProbeResHistoryMaxFFO=f3SyncJClockProbeResHistoryMaxFFO, f3SyncJPTPClockProbeHistoryMTIE10000s=f3SyncJPTPClockProbeHistoryMTIE10000s, f3SyncJPTPNetworkProbeHistoryRevScore4=f3SyncJPTPNetworkProbeHistoryRevScore4, f3SyncJPTPNetworkProbeHistoryResPDVFwdLow=f3SyncJPTPNetworkProbeHistoryResPDVFwdLow, f3SyncJPTPClockProbeMasterPortIdentity=f3SyncJPTPClockProbeMasterPortIdentity, f3SyncJPTPClockProbeResHistoryOutOfTargetFFOTime=f3SyncJPTPClockProbeResHistoryOutOfTargetFFOTime, f3SyncJClockProbeStatsMTIE1000s=f3SyncJClockProbeStatsMTIE1000s, f3UserDefinedMTIEMaskIndex=f3UserDefinedMTIEMaskIndex, f3SyncJClockProbeResHistoryMTIEMaskCrossedTime=f3SyncJClockProbeResHistoryMTIEMaskCrossedTime, f3SyncJPTPNetworkProbeHistoryEntry=f3SyncJPTPNetworkProbeHistoryEntry, f3SyncJPTPClockProbeMaxTEMeasurementTime=f3SyncJPTPClockProbeMaxTEMeasurementTime, f3SyncJPTPClockProbeIndex=f3SyncJPTPClockProbeIndex, f3SyncJPTPNetworkProbeHistoryAction=f3SyncJPTPNetworkProbeHistoryAction, f3SyncJClockProbeResHistoryOutOfTargetFFOTime=f3SyncJClockProbeResHistoryOutOfTargetFFOTime, f3SyncJPTPClockProbeResHistoryMinFFO=f3SyncJPTPClockProbeResHistoryMinFFO, f3SyncJPTPClockProbeHistoryMTIE100s=f3SyncJPTPClockProbeHistoryMTIE100s, f3SyncJClockProbeFfoTarget=f3SyncJClockProbeFfoTarget, f3SyncJPTPClockProbeConstTEWindow=f3SyncJPTPClockProbeConstTEWindow, f3SyncJPTPClockProbeStatsAction=f3SyncJPTPClockProbeStatsAction, f3SyncJCompliance=f3SyncJCompliance, f3SyncJClockProbeResHistoryAvgPhaseOffset=f3SyncJClockProbeResHistoryAvgPhaseOffset, f3SyncJScheduleGroupStorageType=f3SyncJScheduleGroupStorageType, f3SyncJClockProbeThresholdEntry=f3SyncJClockProbeThresholdEntry, f3UserDefinedMTIEMaskDisplayPoints=f3UserDefinedMTIEMaskDisplayPoints, f3SyncJPTPClockProbeStatsMTIE10s=f3SyncJPTPClockProbeStatsMTIE10s, f3SyncJNotifications=f3SyncJNotifications, f3SyncJPTPClockProbeResHistoryMeasurementDirection=f3SyncJPTPClockProbeResHistoryMeasurementDirection, f3SyncJPTPNetworkProbeHistoryAvgResPDVFwd=f3SyncJPTPNetworkProbeHistoryAvgResPDVFwd, f3SyncJClockProbeHistoryTime=f3SyncJClockProbeHistoryTime, f3SyncJPTPClockProbeHistoryEntry=f3SyncJPTPClockProbeHistoryEntry, f3SyncJClockProbeResHistoryMTIEMaskType=f3SyncJClockProbeResHistoryMTIEMaskType, f3SyncJPTPClockProbeResHistoryMasterPortIdentity=f3SyncJPTPClockProbeResHistoryMasterPortIdentity, f3SyncJClockProbeThresholdTable=f3SyncJClockProbeThresholdTable, f3SyncJPTPNetworkProbeStatsTable=f3SyncJPTPNetworkProbeStatsTable, f3SyncJConfigObjects=f3SyncJConfigObjects, FFOObserWindow=FFOObserWindow, f3SyncJPTPClockProbeInstTEThreshold=f3SyncJPTPClockProbeInstTEThreshold, f3SyncJPTPClockProbeMTIEValue=f3SyncJPTPClockProbeMTIEValue, PYSNMP_MODULE_ID=f3SyncJMIB, f3SyncJClockProbeResHistoryAlias=f3SyncJClockProbeResHistoryAlias, f3SyncJPTPClockProbeStatusMTIEMaskFailed=f3SyncJPTPClockProbeStatusMTIEMaskFailed, f3SyncJClockProbeHistoryMTIE100s=f3SyncJClockProbeHistoryMTIE100s, f3SyncJClockProbeScheduler=f3SyncJClockProbeScheduler, f3SyncJPTPNetworkProbeEntry=f3SyncJPTPNetworkProbeEntry, f3SyncJClockProbeTestState=f3SyncJClockProbeTestState, f3SyncJPTPClockProbeLastFFOResult=f3SyncJPTPClockProbeLastFFOResult, f3SyncJClockProbeMTIEMaskType=f3SyncJClockProbeMTIEMaskType, f3SyncJPTPClockProbeResHistoryEntry=f3SyncJPTPClockProbeResHistoryEntry, f3SyncJPTPClockProbeMeasurementType=f3SyncJPTPClockProbeMeasurementType, f3SyncJPTPNetworkProbeHistoryMaxDelayReqPathDelay=f3SyncJPTPNetworkProbeHistoryMaxDelayReqPathDelay, f3SyncJPTPNetworkProbeAdminState=f3SyncJPTPNetworkProbeAdminState, f3SyncJPTPClockProbeResHistoryIndex=f3SyncJPTPClockProbeResHistoryIndex, f3SyncJPTPClockProbeRunningFailedCount=f3SyncJPTPClockProbeRunningFailedCount, f3SyncJClockProbeTeAlertClearThreshold=f3SyncJClockProbeTeAlertClearThreshold, f3SyncJPTPNetworkProbeResPDVRevHighRange=f3SyncJPTPNetworkProbeResPDVRevHighRange, f3SyncJPTPClockProbeResHistoryMaxFFO=f3SyncJPTPClockProbeResHistoryMaxFFO, f3SyncJClockProbeResHistoryMaxTEMeasurementTime=f3SyncJClockProbeResHistoryMaxTEMeasurementTime, f3SyncJPTPNetworkProbeFwdScore=f3SyncJPTPNetworkProbeFwdScore, f3SyncJPTPNetworkProbeStatsPathLossSecondsFwd=f3SyncJPTPNetworkProbeStatsPathLossSecondsFwd, f3SyncJPTPClockProbeHistoryMTIE10s=f3SyncJPTPClockProbeHistoryMTIE10s, f3SyncJClockProbeMTIEMaskCrossedTime=f3SyncJClockProbeMTIEMaskCrossedTime, f3SyncJPTPNetworkProbeStatsAvgResPDVFwd=f3SyncJPTPNetworkProbeStatsAvgResPDVFwd, f3SyncJClockProbeTimeOfLastFFOResult=f3SyncJClockProbeTimeOfLastFFOResult, f3SyncJScheduleGroupStatus=f3SyncJScheduleGroupStatus, f3SyncJClockProbeEntry=f3SyncJClockProbeEntry, f3SyncJPTPClockProbeResHistoryMaxPhaseOffset=f3SyncJPTPClockProbeResHistoryMaxPhaseOffset, f3SyncJPTPClockProbeTable=f3SyncJPTPClockProbeTable, f3SyncJPTPClockProbeResHistoryTeAlertClearThreshold=f3SyncJPTPClockProbeResHistoryTeAlertClearThreshold, f3SyncJPTPClockProbeResHistoryInstTETotAlarmTime=f3SyncJPTPClockProbeResHistoryInstTETotAlarmTime, f3SyncJPTPNetworkProbeRowStatus=f3SyncJPTPNetworkProbeRowStatus, f3SyncJPTPNetworkProbeTable=f3SyncJPTPNetworkProbeTable, f3SyncJPTPNetworkProbeHistoryResPDVFwdHigh=f3SyncJPTPNetworkProbeHistoryResPDVFwdHigh, f3SyncJPTPClockProbeMTIEMaskCrossedTime=f3SyncJPTPClockProbeMTIEMaskCrossedTime, f3SyncJClockProbeThresholdCrossingAlert=f3SyncJClockProbeThresholdCrossingAlert, f3SyncJPTPClockProbeStatsMTIE10000s=f3SyncJPTPClockProbeStatsMTIE10000s, f3SyncJPTPNetworkProbeHistoryMinRPDVRev=f3SyncJPTPNetworkProbeHistoryMinRPDVRev)
mibBuilder.exportSymbols("F3-SYNCJACK-MIB", f3SyncJClockProbeConstTEThreshold=f3SyncJClockProbeConstTEThreshold, f3SyncJClockProbeHistoryIndex=f3SyncJClockProbeHistoryIndex, f3SyncJClockProbeMeasurementRate=f3SyncJClockProbeMeasurementRate, f3SyncJPTPClockProbeResHistoryAvgPhaseOffset=f3SyncJPTPClockProbeResHistoryAvgPhaseOffset, f3SyncJPTPNetworkProbeThresholdEntry=f3SyncJPTPNetworkProbeThresholdEntry, f3SyncJClockProbeHistoryMaxConstTE=f3SyncJClockProbeHistoryMaxConstTE, f3SyncJClockProbeResHistoryMaxTEClrThreshold=f3SyncJClockProbeResHistoryMaxTEClrThreshold, f3SyncJScheduleGroupTable=f3SyncJScheduleGroupTable, f3SyncJPTPClockProbeHistoryMTIE50000s=f3SyncJPTPClockProbeHistoryMTIE50000s, f3SyncJPTPNetworkProbeStatsFwdScore3=f3SyncJPTPNetworkProbeStatsFwdScore3, f3SyncJClockProbeSource=f3SyncJClockProbeSource, f3SyncJClockProbeConstTETotAlarmTime=f3SyncJClockProbeConstTETotAlarmTime, f3SyncJClockProbeStatsTable=f3SyncJClockProbeStatsTable, f3SyncJClockProbeStatsMTIE50000s=f3SyncJClockProbeStatsMTIE50000s, f3SyncJPTPNetworkProbeHistoryRevScore3=f3SyncJPTPNetworkProbeHistoryRevScore3, f3SyncJClockProbeConstTEWindow=f3SyncJClockProbeConstTEWindow, f3SyncJPTPClockProbeMasterIpV4Address=f3SyncJPTPClockProbeMasterIpV4Address, f3SyncJPTPNetworkProbeStatsMinRPDVRev=f3SyncJPTPNetworkProbeStatsMinRPDVRev, f3SyncJClockProbeMTIEMaskMarginCrossedTime=f3SyncJClockProbeMTIEMaskMarginCrossedTime, f3SyncJPTPClockProbeResHistoryActualTestStartTime=f3SyncJPTPClockProbeResHistoryActualTestStartTime, f3SyncJClockProbeMTIEValueIndex=f3SyncJClockProbeMTIEValueIndex, f3SyncJPTPClockProbeResHistoryNoEventMessageFailure=f3SyncJPTPClockProbeResHistoryNoEventMessageFailure, f3SyncJClockProbeMTIERestart=f3SyncJClockProbeMTIERestart, f3SyncJPTPClockProbeStatsTable=f3SyncJPTPClockProbeStatsTable, f3UserDefinedMTIEMaskName=f3UserDefinedMTIEMaskName, f3SyncJPTPClockProbeResHistoryExpectedQL=f3SyncJPTPClockProbeResHistoryExpectedQL, f3SyncJPTPClockProbeResHistoryMTIEValueTable=f3SyncJPTPClockProbeResHistoryMTIEValueTable, f3SyncJPTPClockProbeStatsMTIE100s=f3SyncJPTPClockProbeStatsMTIE100s, PTPMeasurementDirection=PTPMeasurementDirection, f3SyncJPTPClockProbeResHistoryMTIEValueIndex=f3SyncJPTPClockProbeResHistoryMTIEValueIndex, f3SyncJPTPNetworkProbeStatsSyncMsgsRx=f3SyncJPTPNetworkProbeStatsSyncMsgsRx, f3SyncJPTPNetworkProbeHistoryFwdScore5=f3SyncJPTPNetworkProbeHistoryFwdScore5, f3SyncJPTPNetworkProbeStatsFwdScore4=f3SyncJPTPNetworkProbeStatsFwdScore4, f3SyncJClockProbeHistoryEntry=f3SyncJClockProbeHistoryEntry, f3SyncJPTPClockProbeActualTestDuration=f3SyncJPTPClockProbeActualTestDuration, f3SyncJPTPNetworkProbeHistoryAvgMeanPathDelay=f3SyncJPTPNetworkProbeHistoryAvgMeanPathDelay, f3SyncJClockProbeHistoryValid=f3SyncJClockProbeHistoryValid, f3SyncJPTPClockProbeExpectedQL=f3SyncJPTPClockProbeExpectedQL, f3SyncJPTPNetworkProbeStatsAvgSyncPathDelay=f3SyncJPTPNetworkProbeStatsAvgSyncPathDelay, f3SyncJClockProbeTeAlertThreshold=f3SyncJClockProbeTeAlertThreshold, f3SyncJPTPClockProbeNoEventMessageFailure=f3SyncJPTPClockProbeNoEventMessageFailure, f3SyncJPTPClockProbeSlavePortIdentity=f3SyncJPTPClockProbeSlavePortIdentity, f3SyncJPTPNetworkProbeStatsMinSyncPathDelay=f3SyncJPTPNetworkProbeStatsMinSyncPathDelay, f3SyncJPTPNetworkProbeHistoryMaxPathAsymmetry=f3SyncJPTPNetworkProbeHistoryMaxPathAsymmetry, f3SyncJPTPClockProbeStatsMTIE1000s=f3SyncJPTPClockProbeStatsMTIE1000s, f3SyncJClockProbeRunningFailedCount=f3SyncJClockProbeRunningFailedCount, f3SyncJPTPNetworkProbeHistoryMinPathAsymmetry=f3SyncJPTPNetworkProbeHistoryMinPathAsymmetry, f3UserDefinedMTIEMaskStorageType=f3UserDefinedMTIEMaskStorageType, f3SyncJClockProbeResHistoryActualTestStartTime=f3SyncJClockProbeResHistoryActualTestStartTime, f3SyncJPTPNetworkProbeThresholdInterval=f3SyncJPTPNetworkProbeThresholdInterval, f3SyncJPTPClockProbeResHistoryAlias=f3SyncJPTPClockProbeResHistoryAlias, f3SyncJPTPClockProbeThresholdCrossingAlert=f3SyncJPTPClockProbeThresholdCrossingAlert, f3SyncJPTPClockProbeResHistorySlaveIpV4Address=f3SyncJPTPClockProbeResHistorySlaveIpV4Address, f3SyncJPTPClockProbeMaxTEThreshold=f3SyncJPTPClockProbeMaxTEThreshold, f3SyncJPTPClockProbeStatsMaxConstTE=f3SyncJPTPClockProbeStatsMaxConstTE, f3SyncJPTPClockProbeResHistoryInstTEMeasurementTime=f3SyncJPTPClockProbeResHistoryInstTEMeasurementTime, f3SyncJPTPClockProbeHistoryValid=f3SyncJPTPClockProbeHistoryValid, f3SyncJClockProbeResHistoryTable=f3SyncJClockProbeResHistoryTable, f3SyncJPTPClockProbeThresholdValueHi=f3SyncJPTPClockProbeThresholdValueHi, f3SyncJPTPNetworkProbeHistoryMinDelayReqPathDelay=f3SyncJPTPNetworkProbeHistoryMinDelayReqPathDelay, f3SyncJClockProbeStatusMTIEMarginFailed=f3SyncJClockProbeStatusMTIEMarginFailed, f3SyncJPTPNetworkProbeStatsResPDVFwdHigh=f3SyncJPTPNetworkProbeStatsResPDVFwdHigh, f3SyncJClockProbeResHistoryMTIEValueTable=f3SyncJClockProbeResHistoryMTIEValueTable, f3SyncJPerformanceObjects=f3SyncJPerformanceObjects, f3SyncJClockProbeStatsAction=f3SyncJClockProbeStatsAction, f3SyncJClockProbeThresholdValueHi=f3SyncJClockProbeThresholdValueHi, f3SyncJPTPClockProbeMTIEMaskType=f3SyncJPTPClockProbeMTIEMaskType, f3SyncJPTPClockProbeDelayCompensation=f3SyncJPTPClockProbeDelayCompensation, f3SyncJPTPNetworkProbeHistoryRevScore5=f3SyncJPTPNetworkProbeHistoryRevScore5, f3SyncJPTPClockProbeResHistoryLastTEAlertTime=f3SyncJPTPClockProbeResHistoryLastTEAlertTime, f3SyncJPTPClockProbeMeasurementDirection=f3SyncJPTPClockProbeMeasurementDirection, f3SyncJClockProbeHistoryMTIE1000s=f3SyncJClockProbeHistoryMTIE1000s, f3SyncJPTPNetworkProbeHistoryIndex=f3SyncJPTPNetworkProbeHistoryIndex, f3SyncJPTPNetworkProbeStatsResPDVRevMedium=f3SyncJPTPNetworkProbeStatsResPDVRevMedium, f3UserDefinedMTIEMaskMeasurmentPoints=f3UserDefinedMTIEMaskMeasurmentPoints, f3SyncJClockProbeFfoObserWindow=f3SyncJClockProbeFfoObserWindow, f3SyncJPTPClockProbeTAsymmetry=f3SyncJPTPClockProbeTAsymmetry, f3SyncJClockProbeThresholdValueLo=f3SyncJClockProbeThresholdValueLo, f3SyncJClockProbeStatsIntervalType=f3SyncJClockProbeStatsIntervalType, f3SyncJClockProbeActualTestDuration=f3SyncJClockProbeActualTestDuration, f3SyncJPTPNetworkProbeStatsAction=f3SyncJPTPNetworkProbeStatsAction, f3SyncJPTPClockProbeScheduler=f3SyncJPTPClockProbeScheduler, f3SyncJPTPClockProbeResHistoryMaxTETotAlarmTime=f3SyncJPTPClockProbeResHistoryMaxTETotAlarmTime, f3SyncJClockProbeStorageType=f3SyncJClockProbeStorageType, f3SyncJNotifGroup=f3SyncJNotifGroup, f3SyncJPTPClockProbeRowStatus=f3SyncJPTPClockProbeRowStatus, f3SyncJClockProbeResHistoryConstTEClrThreshold=f3SyncJClockProbeResHistoryConstTEClrThreshold, f3SyncJPTPClockProbeThresholdEntry=f3SyncJPTPClockProbeThresholdEntry, f3SyncJPTPNetworkProbeHistoryFwdScore3=f3SyncJPTPNetworkProbeHistoryFwdScore3, f3SyncJPTPClockProbeSlaveIpV4Address=f3SyncJPTPClockProbeSlaveIpV4Address, f3SyncJClockProbeMTIEValue=f3SyncJClockProbeMTIEValue, f3SyncJPTPNetworkProbeStatsIntervalType=f3SyncJPTPNetworkProbeStatsIntervalType, f3SyncJPTPNetworkProbeHistoryTime=f3SyncJPTPNetworkProbeHistoryTime, f3SyncJConformance=f3SyncJConformance, f3SyncJClockProbeLastTEAlertClearTime=f3SyncJClockProbeLastTEAlertClearTime, f3SyncJClockProbeResHistoryMTIEValueIndex=f3SyncJClockProbeResHistoryMTIEValueIndex, f3SyncJPTPNetworkProbeHistoryResPDVRevHigh=f3SyncJPTPNetworkProbeHistoryResPDVRevHigh, f3SyncJPTPClockProbeHistoryMaxTE=f3SyncJPTPClockProbeHistoryMaxTE, f3SyncJScheduleGroupDescr=f3SyncJScheduleGroupDescr, f3SyncJPTPClockProbeResHistoryMeasurementType=f3SyncJPTPClockProbeResHistoryMeasurementType, f3SyncJPTPNetworkProbeStatsAvgResPDVRev=f3SyncJPTPNetworkProbeStatsAvgResPDVRev, f3SyncJClockProbeHistoryTable=f3SyncJClockProbeHistoryTable, f3SyncJPTPNetworkProbeStatsAvgDelayReqPathDelay=f3SyncJPTPNetworkProbeStatsAvgDelayReqPathDelay, f3SyncJPTPClockProbeLastTEAlertTime=f3SyncJPTPClockProbeLastTEAlertTime, f3SyncJPTPClockProbeResHistoryInstTEClrThreshold=f3SyncJPTPClockProbeResHistoryInstTEClrThreshold, f3SyncJPTPClockProbeResHistoryMTIEValueEntry=f3SyncJPTPClockProbeResHistoryMTIEValueEntry, f3SyncJPTPNetworkProbeStatsFwdScore5=f3SyncJPTPNetworkProbeStatsFwdScore5, f3SyncJMIB=f3SyncJMIB, f3SyncJPTPClockProbeMTIEValueTable=f3SyncJPTPClockProbeMTIEValueTable, f3SyncJPTPClockProbeStatsIndex=f3SyncJPTPClockProbeStatsIndex, f3SyncJPTPNetworkProbeHistoryAvgDelayReqPathDelay=f3SyncJPTPNetworkProbeHistoryAvgDelayReqPathDelay, f3SyncJClockProbeResHistoryMaxTETotAlarmTime=f3SyncJClockProbeResHistoryMaxTETotAlarmTime, f3SyncJPTPNetworkProbeStatsResPDVFwdMedium=f3SyncJPTPNetworkProbeStatsResPDVFwdMedium, TIESourceType=TIESourceType, f3SyncJPTPClockProbeResHistoryTotalFFOTime=f3SyncJPTPClockProbeResHistoryTotalFFOTime, f3SyncJClockProbeResHistoryMTIEValue=f3SyncJClockProbeResHistoryMTIEValue, f3SyncJPTPClockProbeResHistoryMaxTEThreshold=f3SyncJPTPClockProbeResHistoryMaxTEThreshold, f3UserDefinedMTIEMaskEntry=f3UserDefinedMTIEMaskEntry, f3UserDefinedMTIEMaskTable=f3UserDefinedMTIEMaskTable, f3SyncJPTPClockProbeIpPrototocol=f3SyncJPTPClockProbeIpPrototocol, f3SyncJPTPClockProbeResHistoryActualTestDuration=f3SyncJPTPClockProbeResHistoryActualTestDuration, f3SyncJPTPNetworkProbeThresholdVariable=f3SyncJPTPNetworkProbeThresholdVariable, f3SyncJClockProbeResHistoryActualTestDuration=f3SyncJClockProbeResHistoryActualTestDuration, f3SyncJPTPClockProbeMaxTETotAlarmTime=f3SyncJPTPClockProbeMaxTETotAlarmTime, f3SyncJPTPClockProbeResHistoryMasterIpV4Address=f3SyncJPTPClockProbeResHistoryMasterIpV4Address, f3SyncJClockProbeResHistoryRowStatus=f3SyncJClockProbeResHistoryRowStatus, f3SyncJPTPClockProbeThresholdMonValue=f3SyncJPTPClockProbeThresholdMonValue, f3SyncJPTPNetworkProbeStatsMinPathAsymmetry=f3SyncJPTPNetworkProbeStatsMinPathAsymmetry, MeasurementType=MeasurementType, f3SyncJPTPNetworkProbePDVAssuredLo=f3SyncJPTPNetworkProbePDVAssuredLo, f3SyncJPTPClockProbeThresholdIndex=f3SyncJPTPClockProbeThresholdIndex, f3SyncJPTPNetworkProbeStatsMinRPDVFwd=f3SyncJPTPNetworkProbeStatsMinRPDVFwd, f3SyncJPTPNetworkProbeReferenceFailure=f3SyncJPTPNetworkProbeReferenceFailure, f3SyncJPTPNetworkProbeExpectedQL=f3SyncJPTPNetworkProbeExpectedQL, f3SyncJPTPClockProbeFfoObserWindow=f3SyncJPTPClockProbeFfoObserWindow, f3SyncJPTPClockProbeResHistoryMaxTEClrThreshold=f3SyncJPTPClockProbeResHistoryMaxTEClrThreshold, f3SyncJPTPNetworkProbeStatsMaxMeanPathDelay=f3SyncJPTPNetworkProbeStatsMaxMeanPathDelay, f3SyncJPTPClockProbeResHistoryMTIEMaskMarginCrossedTime=f3SyncJPTPClockProbeResHistoryMTIEMaskMarginCrossedTime, f3SyncJPTPNetworkProbeStatsRevScore4=f3SyncJPTPNetworkProbeStatsRevScore4, f3SyncJClockProbeResHistoryLastTEAlertTime=f3SyncJClockProbeResHistoryLastTEAlertTime, f3SyncJClockProbeIndex=f3SyncJClockProbeIndex, f3SyncJPTPClockProbeResHistoryConstTEMeasurementTime=f3SyncJPTPClockProbeResHistoryConstTEMeasurementTime, f3SyncJPTPClockProbeResHistoryConstTEThreshold=f3SyncJPTPClockProbeResHistoryConstTEThreshold, f3SyncJClockProbeResHistoryMaxPhaseOffset=f3SyncJClockProbeResHistoryMaxPhaseOffset, f3SyncJPTPNetworkProbeHistoryDelayRspMsgsRx=f3SyncJPTPNetworkProbeHistoryDelayRspMsgsRx, f3SyncJPTPClockProbeInstTEMeasurementTime=f3SyncJPTPClockProbeInstTEMeasurementTime, f3SyncJClockProbeResHistoryConstTEThreshold=f3SyncJClockProbeResHistoryConstTEThreshold, f3SyncJPTPNetworkProbePDVSatisfiedHi=f3SyncJPTPNetworkProbePDVSatisfiedHi, f3SyncJClockProbeSourceFailure=f3SyncJClockProbeSourceFailure, f3SyncJClockProbeResHistoryReferenceFailure=f3SyncJClockProbeResHistoryReferenceFailure, f3SyncJPTPClockProbeHistoryTime=f3SyncJPTPClockProbeHistoryTime, f3SyncJPTPNetworkProbeThresholdValueHi=f3SyncJPTPNetworkProbeThresholdValueHi, f3SyncJPTPClockProbeResHistoryRunningFailedCount=f3SyncJPTPClockProbeResHistoryRunningFailedCount, f3SyncJScheduleGroupStartTime=f3SyncJScheduleGroupStartTime, f3SyncJClockProbeStatsValid=f3SyncJClockProbeStatsValid, f3SyncJPTPClockProbeLastTEAlertClearTime=f3SyncJPTPClockProbeLastTEAlertClearTime, f3SyncJPTPNetworkProbeTestState=f3SyncJPTPNetworkProbeTestState, f3SyncJPTPNetworkProbeHistoryMaxSyncPathDelay=f3SyncJPTPNetworkProbeHistoryMaxSyncPathDelay, f3SyncJPTPClockProbeResHistoryStorageType=f3SyncJPTPClockProbeResHistoryStorageType, f3SyncJPTPClockProbeConstTEMeasurementTime=f3SyncJPTPClockProbeConstTEMeasurementTime, f3SyncJClockProbeExpectedQL=f3SyncJClockProbeExpectedQL, f3SyncJClockProbeReference=f3SyncJClockProbeReference, f3SyncJPTPNetworkProbeNoEventMessageFailure=f3SyncJPTPNetworkProbeNoEventMessageFailure, f3SyncJPTPNetworkProbePTPFlowPoint=f3SyncJPTPNetworkProbePTPFlowPoint, f3SyncJClockProbeStatusChangeTrap=f3SyncJClockProbeStatusChangeTrap, f3SyncJScheduleGroupRowStatus=f3SyncJScheduleGroupRowStatus, f3SyncJPTPClockProbeThresholdTable=f3SyncJPTPClockProbeThresholdTable, f3SyncJPTPNetworkProbeOperationalState=f3SyncJPTPNetworkProbeOperationalState, f3SyncJPTPNetworkProbeHistoryResPDVFwdMedium=f3SyncJPTPNetworkProbeHistoryResPDVFwdMedium, f3SyncJClockProbeResHistoryMeasurementRate=f3SyncJClockProbeResHistoryMeasurementRate, f3SyncJClockProbeResHistoryConstTEMeasurementTime=f3SyncJClockProbeResHistoryConstTEMeasurementTime, f3SyncJPTPNetworkProbeHistoryResPDVRevMedium=f3SyncJPTPNetworkProbeHistoryResPDVRevMedium, f3SyncJPTPClockProbeStatsEntry=f3SyncJPTPClockProbeStatsEntry, f3SyncJPTPNetworkProbeMasterIpV4Address=f3SyncJPTPNetworkProbeMasterIpV4Address, f3SyncJClockProbeResHistorySource=f3SyncJClockProbeResHistorySource, f3SyncJPTPClockProbeTestState=f3SyncJPTPClockProbeTestState, f3SyncJPTPNetworkProbeScheduler=f3SyncJPTPNetworkProbeScheduler, f3SyncJClockProbeThresholdMonValue=f3SyncJClockProbeThresholdMonValue, f3SyncJPTPNetworkProbeThresholdCrossingAlert=f3SyncJPTPNetworkProbeThresholdCrossingAlert, f3SyncJClockProbeResHistoryTotalPhaseOffsetTime=f3SyncJClockProbeResHistoryTotalPhaseOffsetTime, f3SyncJClockProbeMTIEMaskMargin=f3SyncJClockProbeMTIEMaskMargin, f3SyncJPTPClockProbeTimeOfLastFFOResult=f3SyncJPTPClockProbeTimeOfLastFFOResult, f3SyncJPTPClockProbeResHistorySlavePortIdentity=f3SyncJPTPClockProbeResHistorySlavePortIdentity, f3SyncJPTPNetworkProbeStatsMaxDelayReqPathDelay=f3SyncJPTPNetworkProbeStatsMaxDelayReqPathDelay, f3SyncJPTPNetworkProbeActualTestDuration=f3SyncJPTPNetworkProbeActualTestDuration, f3SyncJClockProbeResHistoryStorageType=f3SyncJClockProbeResHistoryStorageType, f3SyncJPTPNetworkProbeStatsLostDelayRspMsgs=f3SyncJPTPNetworkProbeStatsLostDelayRspMsgs, f3SyncJClockProbeStatsMTIE1s=f3SyncJClockProbeStatsMTIE1s, f3SyncJPTPClockProbeResHistoryLastTEAlertClearTime=f3SyncJPTPClockProbeResHistoryLastTEAlertClearTime, f3SyncJClockProbeResHistoryMTIEValueEntry=f3SyncJClockProbeResHistoryMTIEValueEntry, f3SyncJClockProbeConstTEMeasurementTime=f3SyncJClockProbeConstTEMeasurementTime, f3SyncJPTPNetworkProbeIndex=f3SyncJPTPNetworkProbeIndex, f3SyncJScheduleGroupEntry=f3SyncJScheduleGroupEntry, f3SyncJPTPClockProbeEntry=f3SyncJPTPClockProbeEntry, f3SyncJPTPClockProbeResHistoryMTIEMaskMargin=f3SyncJPTPClockProbeResHistoryMTIEMaskMargin, f3SyncJPTPClockProbeResHistoryAvgFFO=f3SyncJPTPClockProbeResHistoryAvgFFO, f3SyncJPTPClockProbeResHistoryTeAlertThreshold=f3SyncJPTPClockProbeResHistoryTeAlertThreshold, f3SyncJPTPClockProbeResHistoryInstTEThreshold=f3SyncJPTPClockProbeResHistoryInstTEThreshold, f3SyncJClockProbeResHistoryMinPhaseOffset=f3SyncJClockProbeResHistoryMinPhaseOffset, f3SyncJPTPClockProbeResHistoryIpPrototocol=f3SyncJPTPClockProbeResHistoryIpPrototocol, f3SyncJPTPNetworkProbeStatsDelayRspMsgsRx=f3SyncJPTPNetworkProbeStatsDelayRspMsgsRx, f3SyncJPTPClockProbeResHistoryMTIEMaskCrossedTime=f3SyncJPTPClockProbeResHistoryMTIEMaskCrossedTime, f3SyncJPTPClockProbeHistoryTable=f3SyncJPTPClockProbeHistoryTable, f3SyncJClockProbeStatusMTIEMaskFailed=f3SyncJClockProbeStatusMTIEMaskFailed, f3SyncJPTPNetworkProbeStorageType=f3SyncJPTPNetworkProbeStorageType, f3SyncJPTPNetworkProbePDVSatisfiedLo=f3SyncJPTPNetworkProbePDVSatisfiedLo, f3SyncJPTPClockProbeResHistoryMTIEMaskType=f3SyncJPTPClockProbeResHistoryMTIEMaskType, f3SyncJPTPClockProbeLastTIEResultTime=f3SyncJPTPClockProbeLastTIEResultTime, f3SyncJPTPClockProbeDelaySM=f3SyncJPTPClockProbeDelaySM)
