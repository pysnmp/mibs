#
# PySNMP MIB module RS-XX9-DTMB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/rs/RS-XX9-DTMB-MIB
# Produced by pysmi-1.1.12 at Wed Dec  4 17:59:20 2024
# On host fv-az2036-124 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
commonNotificationAlarmClass, = mibBuilder.importSymbols("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass")
rsXx9MibModule, rsXx9Dtmb = mibBuilder.importSymbols("RS-XX9-SMI-MIB", "rsXx9MibModule", "rsXx9Dtmb")
NotificationMask, IndexTransmitter, NotificationPriority, NotificationState, IndexAB, SwitchOnOff = mibBuilder.importSymbols("RS-XX9-TC-MIB", "NotificationMask", "IndexTransmitter", "NotificationPriority", "NotificationState", "IndexAB", "SwitchOnOff")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, Counter32, IpAddress, Gauge32, Unsigned32, ObjectIdentity, Integer32, NotificationType, ModuleIdentity, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "IpAddress", "Gauge32", "Unsigned32", "ObjectIdentity", "Integer32", "NotificationType", "ModuleIdentity", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rsXx9DtmbMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 1, 216, 12))
rsXx9DtmbMibModule.setRevisions(('2015-07-06 12:00', '2015-02-27 15:00', '2014-12-22 16:00', '2014-01-30 11:00', '2013-09-02 11:00', '2013-05-29 15:00',))
if mibBuilder.loadTexts: rsXx9DtmbMibModule.setLastUpdated('201506231100Z')
if mibBuilder.loadTexts: rsXx9DtmbMibModule.setOrganization('Rohde&Schwarz GmbH & Co. KG')
class DtmbChannelBandwidth(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(5, 6, 7))
    namedValues = NamedValues(("mhz6", 5), ("mhz7", 6), ("mhz8", 7))

class DtmbGuardInterval(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 9, 10, 11))
    namedValues = NamedValues(("undefined", 1), ("pn420", 9), ("pn595", 10), ("pn945", 11))

class DtmbModulation(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(5, 6, 7, 8, 9))
    namedValues = NamedValues(("qam16", 5), ("qam64", 6), ("qam32", 7), ("qam4", 8), ("qam4nr", 9))

class DtmbCodeRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 9, 10, 11))
    namedValues = NamedValues(("undefined", 1), ("fourTenth", 9), ("sixTenth", 10), ("eightTenth", 11))

rsXx9DtmbNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 0))
dtmbEncoderSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 0, 1)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationPriority"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationState"))
if mibBuilder.loadTexts: dtmbEncoderSummary.setStatus('current')
dtmbManualConfiguration = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 0, 2)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationPriority"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationState"))
if mibBuilder.loadTexts: dtmbManualConfiguration.setStatus('current')
dtmbActiveConfiguration = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 0, 3)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationPriority"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationState"))
if mibBuilder.loadTexts: dtmbActiveConfiguration.setStatus('current')
dtmbTest = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 0, 4)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationPriority"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationState"))
if mibBuilder.loadTexts: dtmbTest.setStatus('current')
rsXx9DtmbObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1))
dtmbStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1))
dtmbStatusNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 1), )
if mibBuilder.loadTexts: dtmbStatusNotificationTable.setStatus('current')
dtmbStatusNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 1, 1), ).setIndexNames((0, "RS-XX9-DTMB-MIB", "dtmbStatusNotificationTxIdx"), (0, "RS-XX9-DTMB-MIB", "dtmbStatusNotificationExcIdx"), (0, "RS-XX9-DTMB-MIB", "dtmbStatusNotificationIdx"))
if mibBuilder.loadTexts: dtmbStatusNotificationEntry.setStatus('current')
dtmbStatusNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: dtmbStatusNotificationTxIdx.setStatus('current')
dtmbStatusNotificationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: dtmbStatusNotificationExcIdx.setStatus('current')
dtmbStatusNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: dtmbStatusNotificationIdx.setStatus('current')
dtmbStatusNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dtmbEncoderSummary", 1), ("dtmbManualConfiguration", 2), ("dtmbActiveConfiguration", 3), ("dtmbTest", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbStatusNotificationName.setStatus('current')
dtmbStatusNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbStatusNotificationMask.setStatus('current')
dtmbStatusNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbStatusNotificationPriority.setStatus('current')
dtmbStatusNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtmbStatusNotificationState.setStatus('current')
dtmbStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 2), )
if mibBuilder.loadTexts: dtmbStateTable.setStatus('current')
dtmbStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 2, 1), ).setIndexNames((0, "RS-XX9-DTMB-MIB", "dtmbStatusNotificationTxIdx"), (0, "RS-XX9-DTMB-MIB", "dtmbStatusNotificationExcIdx"))
if mibBuilder.loadTexts: dtmbStateEntry.setStatus('current')
dtmbStTxDelayOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 1, 2, 1, 1), Integer32()).setUnits('1/10 micro second').setMaxAccess("readonly")
if mibBuilder.loadTexts: dtmbStTxDelayOffset.setStatus('current')
dtmbSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2))
dtmbConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 1), )
if mibBuilder.loadTexts: dtmbConfigurationTable.setStatus('current')
dtmbConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 1, 1), ).setIndexNames((0, "RS-XX9-DTMB-MIB", "dtmbConfigurationTxIdx"), (0, "RS-XX9-DTMB-MIB", "dtmbConfigurationExcIdx"))
if mibBuilder.loadTexts: dtmbConfigurationEntry.setStatus('current')
dtmbConfigurationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: dtmbConfigurationTxIdx.setStatus('current')
dtmbConfigurationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: dtmbConfigurationExcIdx.setStatus('current')
dtmbConfigurationTpsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 1), ("mip", 2), ("manual", 3), ("sip", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbConfigurationTpsSource.setStatus('current')
dtmbConfigurationInfoPacketReplacement = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("off", 2), ("on", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbConfigurationInfoPacketReplacement.setStatus('current')
dtmbConfigurationNetworkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 1), ("mfn", 2), ("sfnMip", 3), ("sfnSip", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbConfigurationNetworkMode.setStatus('current')
dtmbModulationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 3), )
if mibBuilder.loadTexts: dtmbModulationTable.setStatus('current')
dtmbModulationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 3, 1), )
dtmbConfigurationEntry.registerAugmentions(("RS-XX9-DTMB-MIB", "dtmbModulationEntry"))
dtmbModulationEntry.setIndexNames(*dtmbConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dtmbModulationEntry.setStatus('current')
dtmbModulationChannelBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 3, 1, 3), DtmbChannelBandwidth()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbModulationChannelBandwidth.setStatus('current')
dtmbModulationGuardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 3, 1, 5), DtmbGuardInterval()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbModulationGuardInterval.setStatus('current')
dtmbModulationConstellation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 3, 1, 6), DtmbModulation()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbModulationConstellation.setStatus('current')
dtmbModulationCodeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 3, 1, 7), DtmbCodeRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbModulationCodeRate.setStatus('current')
dtmbModulationTimeInterleaver = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("off", 2), ("s240", 3), ("s720", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbModulationTimeInterleaver.setStatus('current')
dtmbModulationControlFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 3, 1, 9), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbModulationControlFrame.setStatus('obsolete')
dtmbModulationCarrierMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("single", 2), ("multi", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbModulationCarrierMode.setStatus('current')
dtmbModulationDualPilotTone = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 3, 1, 11), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbModulationDualPilotTone.setStatus('current')
dtmbModulationGuardIntervalPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("variable", 2), ("constant", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbModulationGuardIntervalPN.setStatus('current')
dtmbTestTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 4), )
if mibBuilder.loadTexts: dtmbTestTable.setStatus('current')
dtmbTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 4, 1), )
dtmbConfigurationEntry.registerAugmentions(("RS-XX9-DTMB-MIB", "dtmbTestEntry"))
dtmbTestEntry.setIndexNames(*dtmbConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dtmbTestEntry.setStatus('current')
dtmbTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("prbs", 2), ("singleCarrier", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbTestMode.setStatus('current')
dtmbTestCarrierPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbTestCarrierPower.setStatus('current')
dtmbLocalizationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 5), )
if mibBuilder.loadTexts: dtmbLocalizationTable.setStatus('current')
dtmbLocalizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 5, 1), ).setIndexNames((0, "RS-XX9-DTMB-MIB", "dtmbConfigurationTxIdx"), (0, "RS-XX9-DTMB-MIB", "dtmbConfigurationExcIdx"))
if mibBuilder.loadTexts: dtmbLocalizationEntry.setStatus('current')
dtmbLocalizationTxControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("on", 2), ("off", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbLocalizationTxControl.setStatus('current')
dtmbLocalizationTxAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 2, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtmbLocalizationTxAddress.setStatus('current')
dtmbOutput = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 3))
dtmbOutModulationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 3, 1), )
if mibBuilder.loadTexts: dtmbOutModulationTable.setStatus('current')
dtmbOutModulationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 3, 1, 1), ).setIndexNames((0, "RS-XX9-DTMB-MIB", "dtmbConfigurationTxIdx"), (0, "RS-XX9-DTMB-MIB", "dtmbConfigurationExcIdx"))
if mibBuilder.loadTexts: dtmbOutModulationEntry.setStatus('current')
dtmbOutModulationChannelBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 3, 1, 1, 3), DtmbChannelBandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtmbOutModulationChannelBandwidth.setStatus('current')
dtmbOutModulationGuardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 3, 1, 1, 5), DtmbGuardInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtmbOutModulationGuardInterval.setStatus('current')
dtmbOutModulationConstellation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 3, 1, 1, 6), DtmbModulation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtmbOutModulationConstellation.setStatus('current')
dtmbOutModulationCodeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 3, 1, 1, 7), DtmbCodeRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtmbOutModulationCodeRate.setStatus('current')
dtmbOutModulationTimeInterleaver = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("off", 2), ("s240", 3), ("s720", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtmbOutModulationTimeInterleaver.setStatus('current')
dtmbOutModulationCarrierMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("single", 2), ("multi", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtmbOutModulationCarrierMode.setStatus('current')
dtmbOutModulationDualPilotTone = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 3, 1, 1, 11), SwitchOnOff()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtmbOutModulationDualPilotTone.setStatus('current')
dtmbOutModulationGuardIntervalPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("variable", 2), ("constant", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtmbOutModulationGuardIntervalPN.setStatus('current')
rsXx9DtmbConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 2))
rsXx9DtmbCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 2, 1))
dtmbBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 2, 1, 1)).setObjects(("RS-XX9-DTMB-MIB", "dtmbObjBasic"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dtmbBasicCompliance = dtmbBasicCompliance.setStatus('current')
rsXx9DtmbGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 2, 2))
dtmbObjBasic = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 2, 2, 1)).setObjects(("RS-XX9-DTMB-MIB", "dtmbConfigurationTpsSource"), ("RS-XX9-DTMB-MIB", "dtmbModulationChannelBandwidth"), ("RS-XX9-DTMB-MIB", "dtmbModulationGuardInterval"), ("RS-XX9-DTMB-MIB", "dtmbModulationConstellation"), ("RS-XX9-DTMB-MIB", "dtmbModulationCodeRate"), ("RS-XX9-DTMB-MIB", "dtmbModulationTimeInterleaver"), ("RS-XX9-DTMB-MIB", "dtmbModulationCarrierMode"), ("RS-XX9-DTMB-MIB", "dtmbModulationDualPilotTone"), ("RS-XX9-DTMB-MIB", "dtmbModulationGuardIntervalPN"), ("RS-XX9-DTMB-MIB", "dtmbStTxDelayOffset"), ("RS-XX9-DTMB-MIB", "dtmbOutModulationChannelBandwidth"), ("RS-XX9-DTMB-MIB", "dtmbOutModulationGuardInterval"), ("RS-XX9-DTMB-MIB", "dtmbOutModulationConstellation"), ("RS-XX9-DTMB-MIB", "dtmbOutModulationCodeRate"), ("RS-XX9-DTMB-MIB", "dtmbOutModulationTimeInterleaver"), ("RS-XX9-DTMB-MIB", "dtmbOutModulationCarrierMode"), ("RS-XX9-DTMB-MIB", "dtmbOutModulationDualPilotTone"), ("RS-XX9-DTMB-MIB", "dtmbOutModulationGuardIntervalPN"), ("RS-XX9-DTMB-MIB", "dtmbLocalizationTxAddress"), ("RS-XX9-DTMB-MIB", "dtmbLocalizationTxControl"), ("RS-XX9-DTMB-MIB", "dtmbTestMode"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationName"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationMask"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationPriority"), ("RS-XX9-DTMB-MIB", "dtmbStatusNotificationState"), ("RS-XX9-DTMB-MIB", "dtmbConfigurationInfoPacketReplacement"), ("RS-XX9-DTMB-MIB", "dtmbConfigurationNetworkMode"), ("RS-XX9-DTMB-MIB", "dtmbTestCarrierPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dtmbObjBasic = dtmbObjBasic.setStatus('current')
dtmbNotifyBasic = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 2, 2, 2)).setObjects(("RS-XX9-DTMB-MIB", "dtmbEncoderSummary"), ("RS-XX9-DTMB-MIB", "dtmbManualConfiguration"), ("RS-XX9-DTMB-MIB", "dtmbActiveConfiguration"), ("RS-XX9-DTMB-MIB", "dtmbTest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dtmbNotifyBasic = dtmbNotifyBasic.setStatus('current')
dtmbObjBasicObsolete = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 12, 2, 2, 3)).setObjects(("RS-XX9-DTMB-MIB", "dtmbModulationControlFrame"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dtmbObjBasicObsolete = dtmbObjBasicObsolete.setStatus('obsolete')
mibBuilder.exportSymbols("RS-XX9-DTMB-MIB", dtmbModulationCodeRate=dtmbModulationCodeRate, dtmbStateEntry=dtmbStateEntry, dtmbModulationGuardInterval=dtmbModulationGuardInterval, DtmbChannelBandwidth=DtmbChannelBandwidth, dtmbTestCarrierPower=dtmbTestCarrierPower, dtmbBasicCompliance=dtmbBasicCompliance, dtmbLocalizationEntry=dtmbLocalizationEntry, dtmbModulationConstellation=dtmbModulationConstellation, dtmbStatusNotificationTxIdx=dtmbStatusNotificationTxIdx, dtmbOutModulationDualPilotTone=dtmbOutModulationDualPilotTone, dtmbOutModulationCarrierMode=dtmbOutModulationCarrierMode, rsXx9DtmbGroups=rsXx9DtmbGroups, dtmbStatusNotificationState=dtmbStatusNotificationState, rsXx9DtmbNotifications=rsXx9DtmbNotifications, dtmbStatusNotificationMask=dtmbStatusNotificationMask, dtmbLocalizationTxControl=dtmbLocalizationTxControl, dtmbConfigurationTxIdx=dtmbConfigurationTxIdx, dtmbModulationControlFrame=dtmbModulationControlFrame, dtmbObjBasic=dtmbObjBasic, dtmbModulationEntry=dtmbModulationEntry, dtmbOutModulationEntry=dtmbOutModulationEntry, dtmbStatusNotificationIdx=dtmbStatusNotificationIdx, rsXx9DtmbObjects=rsXx9DtmbObjects, DtmbGuardInterval=DtmbGuardInterval, dtmbOutput=dtmbOutput, rsXx9DtmbMibModule=rsXx9DtmbMibModule, dtmbActiveConfiguration=dtmbActiveConfiguration, dtmbStatusNotificationTable=dtmbStatusNotificationTable, dtmbStatusNotificationEntry=dtmbStatusNotificationEntry, dtmbSetup=dtmbSetup, dtmbModulationDualPilotTone=dtmbModulationDualPilotTone, dtmbModulationGuardIntervalPN=dtmbModulationGuardIntervalPN, PYSNMP_MODULE_ID=rsXx9DtmbMibModule, dtmbStatusNotificationName=dtmbStatusNotificationName, rsXx9DtmbConformance=rsXx9DtmbConformance, dtmbTestEntry=dtmbTestEntry, dtmbOutModulationChannelBandwidth=dtmbOutModulationChannelBandwidth, dtmbOutModulationGuardInterval=dtmbOutModulationGuardInterval, dtmbStatus=dtmbStatus, dtmbManualConfiguration=dtmbManualConfiguration, dtmbStatusNotificationExcIdx=dtmbStatusNotificationExcIdx, dtmbEncoderSummary=dtmbEncoderSummary, dtmbConfigurationNetworkMode=dtmbConfigurationNetworkMode, dtmbConfigurationEntry=dtmbConfigurationEntry, dtmbStTxDelayOffset=dtmbStTxDelayOffset, dtmbModulationChannelBandwidth=dtmbModulationChannelBandwidth, dtmbModulationCarrierMode=dtmbModulationCarrierMode, dtmbLocalizationTxAddress=dtmbLocalizationTxAddress, dtmbOutModulationTable=dtmbOutModulationTable, dtmbNotifyBasic=dtmbNotifyBasic, dtmbConfigurationTable=dtmbConfigurationTable, dtmbStatusNotificationPriority=dtmbStatusNotificationPriority, dtmbTestTable=dtmbTestTable, dtmbTestMode=dtmbTestMode, DtmbCodeRate=DtmbCodeRate, dtmbModulationTimeInterleaver=dtmbModulationTimeInterleaver, dtmbStateTable=dtmbStateTable, dtmbConfigurationInfoPacketReplacement=dtmbConfigurationInfoPacketReplacement, dtmbOutModulationConstellation=dtmbOutModulationConstellation, dtmbLocalizationTable=dtmbLocalizationTable, DtmbModulation=DtmbModulation, rsXx9DtmbCompliances=rsXx9DtmbCompliances, dtmbTest=dtmbTest, dtmbConfigurationExcIdx=dtmbConfigurationExcIdx, dtmbOutModulationCodeRate=dtmbOutModulationCodeRate, dtmbOutModulationTimeInterleaver=dtmbOutModulationTimeInterleaver, dtmbObjBasicObsolete=dtmbObjBasicObsolete, dtmbOutModulationGuardIntervalPN=dtmbOutModulationGuardIntervalPN, dtmbModulationTable=dtmbModulationTable, dtmbConfigurationTpsSource=dtmbConfigurationTpsSource)
