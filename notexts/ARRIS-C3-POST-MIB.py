#
# PySNMP MIB module ARRIS-C3-POST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/arris/ARRIS-C3-POST-MIB
# Produced by pysmi-1.1.12 at Tue Jun 25 14:08:46 2024
# On host fv-az837-278 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
cmtsC3, = mibBuilder.importSymbols("ARRIS-MIB", "cmtsC3")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, TimeTicks, ModuleIdentity, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, Gauge32, MibIdentifier, Counter64, IpAddress, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "ModuleIdentity", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "Gauge32", "MibIdentifier", "Counter64", "IpAddress", "NotificationType", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cmtsC3POSTMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13))
if mibBuilder.loadTexts: cmtsC3POSTMIB.setLastUpdated('200403300000Z')
if mibBuilder.loadTexts: cmtsC3POSTMIB.setOrganization('Arris International')
dcxPOSTObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1))
dcxCPUWANPOSTGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 1))
dcxCPUWANPOSTTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 1, 1), )
if mibBuilder.loadTexts: dcxCPUWANPOSTTable.setStatus('current')
dcxCPUWANPOSTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 1, 1, 1), ).setIndexNames((0, "ARRIS-C3-POST-MIB", "dcxCPUWANPOSTType"))
if mibBuilder.loadTexts: dcxCPUWANPOSTEntry.setStatus('current')
dcxCPUWANPOSTType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)))
if mibBuilder.loadTexts: dcxCPUWANPOSTType.setStatus('current')
dcxCPUWANPOSTDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxCPUWANPOSTDescr.setStatus('current')
dcxCPUWANPOSTResult = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("passed", 0), ("skipped", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxCPUWANPOSTResult.setStatus('current')
dcx3212POSTGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 2))
dcx3212POSTTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 2, 1), )
if mibBuilder.loadTexts: dcx3212POSTTable.setStatus('current')
dcx3212POSTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 2, 1, 1), ).setIndexNames((0, "ARRIS-C3-POST-MIB", "dcx3212POSTType"))
if mibBuilder.loadTexts: dcx3212POSTEntry.setStatus('current')
dcx3212POSTType = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)))
if mibBuilder.loadTexts: dcx3212POSTType.setStatus('current')
dcx3212POSTDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcx3212POSTDescr.setStatus('current')
dcx3212POSTResult = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 13, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("passed", 0), ("failed", 1), ("skipped", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcx3212POSTResult.setStatus('current')
mibBuilder.exportSymbols("ARRIS-C3-POST-MIB", PYSNMP_MODULE_ID=cmtsC3POSTMIB, dcxCPUWANPOSTGroup=dcxCPUWANPOSTGroup, dcxPOSTObjects=dcxPOSTObjects, dcxCPUWANPOSTType=dcxCPUWANPOSTType, dcxCPUWANPOSTDescr=dcxCPUWANPOSTDescr, dcx3212POSTGroup=dcx3212POSTGroup, dcx3212POSTEntry=dcx3212POSTEntry, dcx3212POSTResult=dcx3212POSTResult, dcx3212POSTTable=dcx3212POSTTable, dcxCPUWANPOSTEntry=dcxCPUWANPOSTEntry, dcxCPUWANPOSTResult=dcxCPUWANPOSTResult, cmtsC3POSTMIB=cmtsC3POSTMIB, dcxCPUWANPOSTTable=dcxCPUWANPOSTTable, dcx3212POSTDescr=dcx3212POSTDescr, dcx3212POSTType=dcx3212POSTType)
