#
# PySNMP MIB module EdgeSwitch-SWITCHING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/edgeswitch/EdgeSwitch-SWITCHING-MIB
# Produced by pysmi-1.1.12 at Tue Dec  3 10:55:02 2024
# On host fv-az1117-982 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
AgentLogSeverity, = mibBuilder.importSymbols("EdgeSwitch-LOGGING-MIB", "AgentLogSeverity")
AgentPortMask, fastPath = mibBuilder.importSymbols("EdgeSwitch-REF-MIB", "AgentPortMask", "fastPath")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
ifIndex, InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex", "InterfaceIndexOrZero")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
VlanId, dot1qVlanIndex, dot1qFdbId, VlanIndex = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId", "dot1qVlanIndex", "dot1qFdbId", "VlanIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Bits, Integer32, ObjectIdentity, iso, MibIdentifier, Counter32, NotificationType, ModuleIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Bits", "Integer32", "ObjectIdentity", "iso", "MibIdentifier", "Counter32", "NotificationType", "ModuleIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "Counter64")
RowStatus, TextualConvention, DisplayString, DateAndTime, MacAddress, TruthValue, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "DateAndTime", "MacAddress", "TruthValue", "PhysAddress")
fastPathSwitching = ModuleIdentity((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1))
fastPathSwitching.setRevisions(('2014-04-09 00:00', '2013-11-08 00:00', '2013-10-15 00:00', '2013-09-10 00:00', '2013-07-05 00:00', '2013-01-29 00:00', '2013-01-07 00:00', '2013-01-04 00:00', '2011-09-19 00:00', '2010-12-19 00:00', '2009-11-19 00:00', '2010-01-14 00:00', '2009-07-23 00:00', '2009-07-07 00:00', '2009-02-11 00:00', '2007-05-23 00:00', '2003-11-21 00:00', '2003-02-06 18:35',))
if mibBuilder.loadTexts: fastPathSwitching.setLastUpdated('201404090000Z')
if mibBuilder.loadTexts: fastPathSwitching.setOrganization('Broadcom Inc')
class PortList(TextualConvention, OctetString):
    status = 'current'

class VlanList(TextualConvention, OctetString):
    status = 'current'

class Ipv6Address(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

class Ipv6AddressPrefix(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

class Ipv6AddressIfIdentifier(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 8)

class Ipv6IfIndex(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class Ipv6IfIndexOrZero(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class PortId(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 2)
    fixedLength = 2

agentInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1))
agentInventoryGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1))
agentInventorySysDescription = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySysDescription.setStatus('current')
agentInventoryMachineType = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryMachineType.setStatus('current')
agentInventoryMachineModel = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryMachineModel.setStatus('current')
agentInventorySerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySerialNumber.setStatus('current')
agentInventoryFRUNumber = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryFRUNumber.setStatus('current')
agentInventoryMaintenanceLevel = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryMaintenanceLevel.setStatus('current')
agentInventoryPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryPartNumber.setStatus('current')
agentInventoryManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryManufacturer.setStatus('current')
agentInventoryBurnedInMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 9), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryBurnedInMacAddress.setStatus('current')
agentInventoryOperatingSystem = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryOperatingSystem.setStatus('current')
agentInventoryNetworkProcessingDevice = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryNetworkProcessingDevice.setStatus('current')
agentInventoryAdditionalPackages = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryAdditionalPackages.setStatus('current')
agentInventorySoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventorySoftwareVersion.setStatus('current')
agentInventoryHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryHardwareVersion.setStatus('current')
agentTrapLogGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 2))
agentTrapLogTotal = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogTotal.setStatus('current')
agentTrapLogTotalSinceLastViewed = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogTotalSinceLastViewed.setStatus('current')
agentTrapLogTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 2, 4), )
if mibBuilder.loadTexts: agentTrapLogTable.setStatus('current')
agentTrapLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 2, 4, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentTrapLogIndex"))
if mibBuilder.loadTexts: agentTrapLogEntry.setStatus('current')
agentTrapLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogIndex.setStatus('current')
agentTrapLogSystemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 2, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogSystemTime.setStatus('current')
agentTrapLogTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTrapLogTrap.setStatus('current')
agentSupportedMibTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 3), )
if mibBuilder.loadTexts: agentSupportedMibTable.setStatus('current')
agentSupportedMibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 3, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSupportedMibIndex"))
if mibBuilder.loadTexts: agentSupportedMibEntry.setStatus('current')
agentSupportedMibIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSupportedMibIndex.setStatus('current')
agentSupportedMibName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSupportedMibName.setStatus('current')
agentSupportedMibDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSupportedMibDescription.setStatus('current')
agentSwitchCpuProcessGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4))
agentSwitchCpuProcessMemFree = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 1), Integer32()).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessMemFree.setStatus('current')
agentSwitchCpuProcessMemAvailable = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 2), Integer32().clone(2)).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessMemAvailable.setStatus('current')
agentSwitchCpuProcessRisingThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCpuProcessRisingThreshold.setStatus('current')
agentSwitchCpuProcessRisingThresholdInterval = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 86400), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCpuProcessRisingThresholdInterval.setStatus('current')
agentSwitchCpuProcessFallingThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCpuProcessFallingThreshold.setStatus('current')
agentSwitchCpuProcessFallingThresholdInterval = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 86400), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCpuProcessFallingThresholdInterval.setStatus('current')
agentSwitchCpuProcessFreeMemoryThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCpuProcessFreeMemoryThreshold.setStatus('current')
agentSwitchCpuProcessTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 8), )
if mibBuilder.loadTexts: agentSwitchCpuProcessTable.setStatus('current')
agentSwitchCpuProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 8, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchCpuProcessIndex"))
if mibBuilder.loadTexts: agentSwitchCpuProcessEntry.setStatus('current')
agentSwitchCpuProcessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentSwitchCpuProcessIndex.setStatus('current')
agentSwitchCpuProcessName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessName.setStatus('current')
agentSwitchCpuProcessPercentageUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessPercentageUtilization.setStatus('current')
agentSwitchCpuProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 8, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessId.setStatus('current')
agentSwitchCpuProcessTotalUtilization = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 4, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuProcessTotalUtilization.setStatus('current')
agentSwitchCpuCosQDropGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 6))
agentSwitchCpuCosQDropTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 6, 1), )
if mibBuilder.loadTexts: agentSwitchCpuCosQDropTable.setStatus('current')
agentSwitchCpuCosQDropEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 6, 1, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchCpuCosQIndex"))
if mibBuilder.loadTexts: agentSwitchCpuCosQDropEntry.setStatus('current')
agentSwitchCpuCosQIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 6, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentSwitchCpuCosQIndex.setStatus('current')
agentSwitchCpuCosQDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 6, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCpuCosQDrops.setStatus('current')
agentSwitchMbufGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 7))
agentSwitchMbufsTotal = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMbufsTotal.setStatus('current')
agentSwitchMbufsFree = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 7, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMbufsFree.setStatus('current')
agentSwitchMbufsUsed = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 7, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMbufsUsed.setStatus('current')
agentSwitchMbufTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 7, 2), )
if mibBuilder.loadTexts: agentSwitchMbufTable.setStatus('current')
agentSwitchMbufEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 7, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchMbufPrio"))
if mibBuilder.loadTexts: agentSwitchMbufEntry.setStatus('current')
agentSwitchMbufPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 7, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentSwitchMbufPrio.setStatus('current')
agentSwitchMbufClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 7, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMbufClassName.setStatus('current')
agentSwitchMbufAllocAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 7, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMbufAllocAttempts.setStatus('current')
agentSwitchMbufAllocFails = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 1, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMbufAllocFails.setStatus('current')
agentConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2))
agentCLIConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1))
agentLoginSessionTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 1), )
if mibBuilder.loadTexts: agentLoginSessionTable.setStatus('current')
agentLoginSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 1, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentLoginSessionIndex"))
if mibBuilder.loadTexts: agentLoginSessionEntry.setStatus('current')
agentLoginSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionIndex.setStatus('current')
agentLoginSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionUserName.setStatus('current')
agentLoginSessionIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionIPAddress.setStatus('obsolete')
agentLoginSessionConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("serial", 1), ("telnet", 2), ("ssh", 3), ("http", 4), ("https", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionConnectionType.setStatus('current')
agentLoginSessionIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionIdleTime.setStatus('current')
agentLoginSessionSessionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionSessionTime.setStatus('current')
agentLoginSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 1, 1, 7), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLoginSessionStatus.setStatus('current')
agentLoginSessionInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 1, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionInetAddressType.setStatus('current')
agentLoginSessionInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 1, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLoginSessionInetAddress.setStatus('current')
agentTelnetConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 2))
agentTelnetLoginTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTelnetLoginTimeout.setStatus('current')
agentTelnetMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTelnetMaxSessions.setStatus('current')
agentTelnetAllowNewMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTelnetAllowNewMode.setStatus('current')
agentTelnetMgmtPortNum = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTelnetMgmtPortNum.setStatus('current')
agentUserConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3))
agentUserConfigCreate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserConfigCreate.setStatus('current')
agentUserConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2), )
if mibBuilder.loadTexts: agentUserConfigTable.setStatus('current')
agentUserConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentUserIndex"))
if mibBuilder.loadTexts: agentUserConfigEntry.setStatus('current')
agentUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentUserIndex.setStatus('current')
agentUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserName.setStatus('current')
agentUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserPassword.setStatus('current')
agentUserAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("read", 1), ("write", 2), ("suspended", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserAccessMode.setStatus('deprecated')
agentUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserStatus.setStatus('current')
agentUserAuthenticationType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("hmacmd5", 2), ("hmacsha", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserAuthenticationType.setStatus('current')
agentUserEncryptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("des", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserEncryptionType.setStatus('current')
agentUserEncryptionPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserEncryptionPassword.setStatus('current')
agentUserLockoutStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUserLockoutStatus.setStatus('current')
agentUserPasswordExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUserPasswordExpireTime.setStatus('current')
agentUserAccessLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserAccessLevel.setStatus('current')
agentSerialGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 5))
agentSerialTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSerialTimeout.setStatus('current')
agentSerialBaudrate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("baud-1200", 1), ("baud-2400", 2), ("baud-4800", 3), ("baud-9600", 4), ("baud-19200", 5), ("baud-38400", 6), ("baud-57600", 7), ("baud-115200", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSerialBaudrate.setStatus('current')
agentSerialCharacterSize = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialCharacterSize.setStatus('current')
agentSerialHWFlowControlMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialHWFlowControlMode.setStatus('current')
agentSerialStopBits = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialStopBits.setStatus('current')
agentSerialParityType = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("even", 1), ("odd", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSerialParityType.setStatus('current')
agentPasswordManagementConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6))
agentPasswordManagementMinLength = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(8, 64), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementMinLength.setStatus('current')
agentPasswordManagementHistory = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementHistory.setStatus('current')
agentPasswordManagementAging = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 365))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementAging.setStatus('current')
agentPasswordManagementLockAttempts = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementLockAttempts.setStatus('current')
agentPasswordManagementPasswordStrengthCheck = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementPasswordStrengthCheck.setStatus('current')
agentPasswordManagementStrengthMinUpperCase = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMinUpperCase.setStatus('current')
agentPasswordManagementStrengthMinLowerCase = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMinLowerCase.setStatus('current')
agentPasswordManagementStrengthMinNumericNumbers = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMinNumericNumbers.setStatus('current')
agentPasswordManagementStrengthMinSpecialCharacters = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMinSpecialCharacters.setStatus('current')
agentPasswordManagementStrengthMaxConsecutiveCharacters = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMaxConsecutiveCharacters.setStatus('current')
agentPasswordManagementStrengthMaxRepeatedCharacters = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMaxRepeatedCharacters.setStatus('current')
agentPasswordManagementStrengthMinCharacterClasses = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPasswordManagementStrengthMinCharacterClasses.setStatus('current')
agentPasswordMgmtLastPasswordSetResult = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPasswordMgmtLastPasswordSetResult.setStatus('current')
agentPasswordManagementStrengthExcludeKeywordTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 15), )
if mibBuilder.loadTexts: agentPasswordManagementStrengthExcludeKeywordTable.setStatus('current')
agentPasswordManagementStrengthExcludeKeywordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 15, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentPasswordMgmtStrengthExcludeKeyword"))
if mibBuilder.loadTexts: agentPasswordManagementStrengthExcludeKeywordEntry.setStatus('current')
agentPasswordMgmtStrengthExcludeKeyword = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 15, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPasswordMgmtStrengthExcludeKeyword.setStatus('current')
agentPasswordMgmtStrengthExcludeKeywordStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 6, 15, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentPasswordMgmtStrengthExcludeKeywordStatus.setStatus('current')
agentIASUserConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 7))
agentIASUserConfigCreate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 7, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIASUserConfigCreate.setStatus('current')
agentIASUserConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 7, 2), )
if mibBuilder.loadTexts: agentIASUserConfigTable.setStatus('current')
agentIASUserConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 7, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentIASUserIndex"))
if mibBuilder.loadTexts: agentIASUserConfigEntry.setStatus('current')
agentIASUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)))
if mibBuilder.loadTexts: agentIASUserIndex.setStatus('current')
agentIASUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 7, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIASUserName.setStatus('current')
agentIASUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 7, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIASUserPassword.setStatus('current')
agentIASUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 7, 2, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIASUserStatus.setStatus('current')
agentCLIBannerMsgConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 8))
agentCLIBannerMessage = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 1, 8, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCLIBannerMessage.setStatus('current')
agentLagConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2))
agentLagConfigCreate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 15), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagConfigCreate.setStatus('current')
agentLagSummaryConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2), )
if mibBuilder.loadTexts: agentLagSummaryConfigTable.setStatus('current')
agentLagSummaryConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentLagSummaryLagIndex"))
if mibBuilder.loadTexts: agentLagSummaryConfigEntry.setStatus('current')
agentLagSummaryLagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagSummaryLagIndex.setStatus('current')
agentLagSummaryName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryName.setStatus('current')
agentLagSummaryFlushTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryFlushTimer.setStatus('obsolete')
agentLagSummaryLinkTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryLinkTrap.setStatus('current')
agentLagSummaryAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryAdminMode.setStatus('current')
agentLagSummaryStpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryStpMode.setStatus('current')
agentLagSummaryAddPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryAddPort.setStatus('current')
agentLagSummaryDeletePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryDeletePort.setStatus('current')
agentLagSummaryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryStatus.setStatus('current')
agentLagSummaryType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagSummaryType.setStatus('current')
agentLagSummaryStaticCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryStaticCapability.setStatus('current')
agentLagSummaryHashOption = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryHashOption.setStatus('current')
agentLagSummaryMinimumActiveLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryMinimumActiveLinks.setStatus('current')
agentLagSummaryLocalPreferenceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryLocalPreferenceMode.setStatus('current')
agentLagSummaryMtuValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1518, 12288)).clone(1518)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagSummaryMtuValue.setStatus('current')
agentLagSummaryPortCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagSummaryPortCounter.setStatus('current')
agentLagDetailedConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 3), )
if mibBuilder.loadTexts: agentLagDetailedConfigTable.setStatus('current')
agentLagDetailedConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 3, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentLagDetailedLagIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentLagDetailedIfIndex"))
if mibBuilder.loadTexts: agentLagDetailedConfigEntry.setStatus('current')
agentLagDetailedLagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedLagIndex.setStatus('current')
agentLagDetailedIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedIfIndex.setStatus('current')
agentLagDetailedPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 3, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedPortSpeed.setStatus('current')
agentLagDetailedPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedPortStatus.setStatus('current')
agentLagDetailedPortCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLagDetailedPortCounter.setStatus('current')
agentLagConfigStaticCapability = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagConfigStaticCapability.setStatus('obsolete')
agentLagConfigGroupHashOption = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagConfigGroupHashOption.setStatus('current')
agentLagClearCounters = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normalOperation", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLagClearCounters.setStatus('current')
agentNetworkConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3))
agentNetworkIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIPAddress.setStatus('current')
agentNetworkSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkSubnetMask.setStatus('current')
agentNetworkDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkDefaultGateway.setStatus('current')
agentNetworkBurnedInMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkBurnedInMacAddress.setStatus('current')
agentNetworkLocalAdminMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 5), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkLocalAdminMacAddress.setStatus('current')
agentNetworkMacAddressType = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("burned-in", 1), ("local", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkMacAddressType.setStatus('current')
agentNetworkConfigProtocol = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("bootp", 2), ("dhcp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkConfigProtocol.setStatus('current')
agentNetworkConfigProtocolDhcpRenew = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normalOperation", 0), ("renew", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkConfigProtocolDhcpRenew.setStatus('current')
agentNetworkWebMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkWebMode.setStatus('obsolete')
agentNetworkJavaMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkJavaMode.setStatus('obsolete')
agentNetworkMgmtVlan = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkMgmtVlan.setStatus('current')
agentNetworkIpv6AdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIpv6AdminMode.setStatus('current')
agentNetworkIpv6Gateway = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 13), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIpv6Gateway.setStatus('current')
agentNetworkIpv6AddrTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 14), )
if mibBuilder.loadTexts: agentNetworkIpv6AddrTable.setStatus('current')
agentNetworkIpv6AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 14, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentNetworkIpv6AddrPrefix"))
if mibBuilder.loadTexts: agentNetworkIpv6AddrEntry.setStatus('current')
agentNetworkIpv6AddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 14, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: agentNetworkIpv6AddrPrefix.setStatus('current')
agentNetworkIpv6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentNetworkIpv6AddrPrefixLength.setStatus('current')
agentNetworkIpv6AddrEuiFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentNetworkIpv6AddrEuiFlag.setStatus('current')
agentNetworkIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 14, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentNetworkIpv6AddrStatus.setStatus('current')
agentNetworkIpv6AddressAutoConfig = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIpv6AddressAutoConfig.setStatus('current')
agentNetworkIpv6ConfigProtocol = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("dhcp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkIpv6ConfigProtocol.setStatus('current')
agentNetworkDhcp6ClientDuid = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6ClientDuid.setStatus('current')
agentNetworkStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18))
agentNetworkDhcp6ADVERTISEMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6ADVERTISEMessagesReceived.setStatus('current')
agentNetworkDhcp6REPLYMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6REPLYMessagesReceived.setStatus('current')
agentNetworkDhcp6ADVERTISEMessagesDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6ADVERTISEMessagesDiscarded.setStatus('current')
agentNetworkDhcp6REPLYMessagesDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6REPLYMessagesDiscarded.setStatus('current')
agentNetworkDhcp6MalformedMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6MalformedMessagesReceived.setStatus('current')
agentNetworkDhcp6SOLICITMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6SOLICITMessagesSent.setStatus('current')
agentNetworkDhcp6REQUESTMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6REQUESTMessagesSent.setStatus('current')
agentNetworkDhcp6RENEWMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6RENEWMessagesSent.setStatus('current')
agentNetworkDhcp6REBINDMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6REBINDMessagesSent.setStatus('current')
agentNetworkDhcp6RELEASEMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentNetworkDhcp6RELEASEMessagesSent.setStatus('current')
agentNetworkDhcp6StatsReset = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 3, 18, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkDhcp6StatsReset.setStatus('current')
agentServicePortConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4))
agentServicePortIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortIPAddress.setStatus('current')
agentServicePortSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortSubnetMask.setStatus('current')
agentServicePortDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDefaultGateway.setStatus('current')
agentServicePortBurnedInMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortBurnedInMacAddress.setStatus('current')
agentServicePortConfigProtocol = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("bootp", 2), ("dhcp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortConfigProtocol.setStatus('current')
agentServicePortProtocolDhcpRenew = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normalOperation", 0), ("renew", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortProtocolDhcpRenew.setStatus('current')
agentServicePortIpv6AdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortIpv6AdminMode.setStatus('current')
agentServicePortIpv6Gateway = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 8), Ipv6AddressPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortIpv6Gateway.setStatus('current')
agentServicePortIpv6AddrTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 9), )
if mibBuilder.loadTexts: agentServicePortIpv6AddrTable.setStatus('current')
agentServicePortIpv6AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 9, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentServicePortIpv6AddrPrefix"))
if mibBuilder.loadTexts: agentServicePortIpv6AddrEntry.setStatus('current')
agentServicePortIpv6AddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 9, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: agentServicePortIpv6AddrPrefix.setStatus('current')
agentServicePortIpv6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortIpv6AddrPrefixLength.setStatus('current')
agentServicePortIpv6AddrEuiFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortIpv6AddrEuiFlag.setStatus('current')
agentServicePortIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 9, 1, 4), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortIpv6AddrStatus.setStatus('current')
agentServicePortIpv6AddressAutoConfig = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortIpv6AddressAutoConfig.setStatus('current')
agentServicePortIpv6ConfigProtocol = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("dhcp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortIpv6ConfigProtocol.setStatus('current')
agentServicePortDhcp6ClientDuid = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6ClientDuid.setStatus('current')
agentServicePortStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13))
agentServicePortDhcp6ADVERTISEMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6ADVERTISEMessagesReceived.setStatus('current')
agentServicePortDhcp6REPLYMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6REPLYMessagesReceived.setStatus('current')
agentServicePortDhcp6ADVERTISEMessagesDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6ADVERTISEMessagesDiscarded.setStatus('current')
agentServicePortDhcp6REPLYMessagesDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6REPLYMessagesDiscarded.setStatus('current')
agentServicePortDhcp6MalformedMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6MalformedMessagesReceived.setStatus('current')
agentServicePortDhcp6SOLICITMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6SOLICITMessagesSent.setStatus('current')
agentServicePortDhcp6REQUESTMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6REQUESTMessagesSent.setStatus('current')
agentServicePortDhcp6RENEWMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6RENEWMessagesSent.setStatus('current')
agentServicePortDhcp6REBINDMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6REBINDMessagesSent.setStatus('current')
agentServicePortDhcp6RELEASEMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentServicePortDhcp6RELEASEMessagesSent.setStatus('current')
agentServicePortDhcp6StatsReset = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 4, 13, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentServicePortDhcp6StatsReset.setStatus('current')
agentDhcpClientOptionsConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 5))
agentVendorClassOptionConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 5, 1))
agentDhcpClientVendorClassIdMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 5, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpClientVendorClassIdMode.setStatus('current')
agentDhcpClientVendorClassIdString = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpClientVendorClassIdString.setStatus('current')
agentSnmpConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6))
agentSnmpCommunityCreate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityCreate.setStatus('current')
agentSnmpCommunityConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 2), )
if mibBuilder.loadTexts: agentSnmpCommunityConfigTable.setStatus('current')
agentSnmpCommunityConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSnmpCommunityIndex"))
if mibBuilder.loadTexts: agentSnmpCommunityConfigEntry.setStatus('current')
agentSnmpCommunityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSnmpCommunityIndex.setStatus('current')
agentSnmpCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityName.setStatus('current')
agentSnmpCommunityIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityIPAddress.setStatus('current')
agentSnmpCommunityIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityIPMask.setStatus('current')
agentSnmpCommunityAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("read-only", 1), ("read-write", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityAccessMode.setStatus('current')
agentSnmpCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("config", 3), ("destroy", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpCommunityStatus.setStatus('current')
agentSnmpTrapReceiverCreate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverCreate.setStatus('current')
agentSnmpTrapReceiverConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 4), )
if mibBuilder.loadTexts: agentSnmpTrapReceiverConfigTable.setStatus('current')
agentSnmpTrapReceiverConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 4, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSnmpTrapReceiverIndex"))
if mibBuilder.loadTexts: agentSnmpTrapReceiverConfigEntry.setStatus('current')
agentSnmpTrapReceiverIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSnmpTrapReceiverIndex.setStatus('current')
agentSnmpTrapReceiverCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverCommunityName.setStatus('current')
agentSnmpTrapReceiverAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2), ("dns-v4", 3), ("dns-v6", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverAddressType.setStatus('current')
agentSnmpTrapReceiverAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 4, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverAddress.setStatus('current')
agentSnmpTrapReceiverIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverIPAddress.setStatus('obsolete')
agentSnmpTrapReceiverStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("config", 3), ("destroy", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverStatus.setStatus('current')
agentSnmpTrapReceiverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("snmpv1", 1), ("snmpv2c", 2))).clone('snmpv2c')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverVersion.setStatus('current')
agentSnmpTrapReceiverIpv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 4, 1, 6), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapReceiverIpv6Address.setStatus('obsolete')
agentSnmpTrapFlagsConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 5))
agentSnmpAuthenticationTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpAuthenticationTrapFlag.setStatus('current')
agentSnmpLinkUpDownTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpLinkUpDownTrapFlag.setStatus('current')
agentSnmpMultipleUsersTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpMultipleUsersTrapFlag.setStatus('current')
agentSnmpSpanningTreeTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpSpanningTreeTrapFlag.setStatus('current')
agentSnmpBroadcastStormTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpBroadcastStormTrapFlag.setStatus('obsolete')
agentSnmpTrapSourceInterface = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 6), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpTrapSourceInterface.setStatus('current')
agentSnmpServerPortNum = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 6, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(161, 161), ValueRangeConstraint(1025, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSnmpServerPortNum.setStatus('current')
agentSpanningTreeConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 7))
agentSpanningTreeMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSpanningTreeMode.setStatus('obsolete')
agentSwitchConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8))
agentSwitchFdbAddressAgingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchFdbAddressAgingTimeout.setStatus('current')
agentSwitchAddressAgingTimeoutTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 4), )
if mibBuilder.loadTexts: agentSwitchAddressAgingTimeoutTable.setStatus('deprecated')
agentSwitchAddressAgingTimeoutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 4, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qFdbId"))
if mibBuilder.loadTexts: agentSwitchAddressAgingTimeoutEntry.setStatus('deprecated')
agentSwitchAddressAgingTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchAddressAgingTimeout.setStatus('deprecated')
agentSwitchStaticMacFilteringTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 5), )
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringTable.setStatus('current')
agentSwitchStaticMacFilteringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 5, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchStaticMacFilteringVlanId"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchStaticMacFilteringAddress"))
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringEntry.setStatus('current')
agentSwitchStaticMacFilteringVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringVlanId.setStatus('current')
agentSwitchStaticMacFilteringAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringAddress.setStatus('current')
agentSwitchStaticMacFilteringSourcePortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 5, 1, 3), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringSourcePortMask.setStatus('current')
agentSwitchStaticMacFilteringDestPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 5, 1, 4), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringDestPortMask.setStatus('current')
agentSwitchStaticMacFilteringStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchStaticMacFilteringStatus.setStatus('current')
agentSwitchSnoopSSMGroupTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 34), )
if mibBuilder.loadTexts: agentSwitchSnoopSSMGroupTable.setStatus('current')
agentSwitchSnoopSSMGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 34, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMGroupAddressType"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMGroupIfIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMGroupVlanId"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMGroupAddress"))
if mibBuilder.loadTexts: agentSwitchSnoopSSMGroupEntry.setStatus('current')
agentSwitchSnoopSSMGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 34, 1, 1), InetAddressType())
if mibBuilder.loadTexts: agentSwitchSnoopSSMGroupAddressType.setStatus('current')
agentSwitchSnoopSSMGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 34, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: agentSwitchSnoopSSMGroupAddress.setStatus('current')
agentSwitchSnoopSSMGroupIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 34, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: agentSwitchSnoopSSMGroupIfIndex.setStatus('current')
agentSwitchSnoopSSMGroupVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 34, 1, 4), VlanIndex())
if mibBuilder.loadTexts: agentSwitchSnoopSSMGroupVlanId.setStatus('current')
agentSwitchSnoopSSMGroupLastReporter = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 34, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopSSMGroupLastReporter.setStatus('current')
agentSwitchSnoopSSMGroupSourceFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 34, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopSSMGroupSourceFilterMode.setStatus('current')
agentSwitchSnoopSSMSrcListTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 35), )
if mibBuilder.loadTexts: agentSwitchSnoopSSMSrcListTable.setStatus('current')
agentSwitchSnoopSSMSrcListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 35, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMSrcListAddressType"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMSrcListIfIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMSrcListVlanId"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMSrcListHostAddress"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMSrcListAddress"))
if mibBuilder.loadTexts: agentSwitchSnoopSSMSrcListEntry.setStatus('current')
agentSwitchSnoopSSMSrcListAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 35, 1, 1), InetAddressType())
if mibBuilder.loadTexts: agentSwitchSnoopSSMSrcListAddressType.setStatus('current')
agentSwitchSnoopSSMSrcListAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 35, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: agentSwitchSnoopSSMSrcListAddress.setStatus('current')
agentSwitchSnoopSSMSrcListIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 35, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: agentSwitchSnoopSSMSrcListIfIndex.setStatus('current')
agentSwitchSnoopSSMSrcListVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 35, 1, 4), VlanIndex())
if mibBuilder.loadTexts: agentSwitchSnoopSSMSrcListVlanId.setStatus('current')
agentSwitchSnoopSSMSrcListHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 35, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopSSMSrcListHostAddress.setStatus('current')
agentSwitchSnoopSSMFDBTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 36), )
if mibBuilder.loadTexts: agentSwitchSnoopSSMFDBTable.setStatus('current')
agentSwitchSnoopSSMFDBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 36, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMFDBGroupAddressType"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMFDBGroupAddress"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMFDBSourceAddress"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopSSMFDBVlanIndex"))
if mibBuilder.loadTexts: agentSwitchSnoopSSMFDBEntry.setStatus('current')
agentSwitchSnoopSSMFDBVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 36, 1, 1), VlanIndex())
if mibBuilder.loadTexts: agentSwitchSnoopSSMFDBVlanIndex.setStatus('current')
agentSwitchSnoopSSMFDBGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 36, 1, 2), InetAddressType())
if mibBuilder.loadTexts: agentSwitchSnoopSSMFDBGroupAddressType.setStatus('current')
agentSwitchSnoopSSMFDBGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 36, 1, 3), InetAddress())
if mibBuilder.loadTexts: agentSwitchSnoopSSMFDBGroupAddress.setStatus('current')
agentSwitchSnoopSSMFDBSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 36, 1, 4), InetAddress())
if mibBuilder.loadTexts: agentSwitchSnoopSSMFDBSourceAddress.setStatus('current')
agentSwitchSnoopSSMFDBIncludePortList = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 36, 1, 5), AgentPortMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopSSMFDBIncludePortList.setStatus('current')
agentSwitchSnoopSSMFDBExcludePortList = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 36, 1, 6), AgentPortMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopSSMFDBExcludePortList.setStatus('current')
agentSwitchStormControlGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 12))
agentSwitchDot3FlowControlMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("symmetric", 1), ("asymmetric", 2), ("disable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchDot3FlowControlMode.setStatus('current')
agentSwitchBroadcastControlMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 12, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchBroadcastControlMode.setStatus('current')
agentSwitchBroadcastControlThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 12, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 14880000)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchBroadcastControlThreshold.setStatus('current')
agentSwitchBroadcastControlThresholdUnit = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 12, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("pps", 2))).clone('percent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchBroadcastControlThresholdUnit.setStatus('current')
agentSwitchMulticastControlMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 12, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchMulticastControlMode.setStatus('current')
agentSwitchMulticastControlThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 12, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 14880000)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchMulticastControlThreshold.setStatus('current')
agentSwitchMulticastControlThresholdUnit = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 12, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("pps", 2))).clone('percent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchMulticastControlThresholdUnit.setStatus('current')
agentSwitchUnicastControlMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 12, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchUnicastControlMode.setStatus('current')
agentSwitchUnicastControlThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 12, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 14880000)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchUnicastControlThreshold.setStatus('current')
agentSwitchUnicastControlThresholdUnit = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 12, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("pps", 2))).clone('percent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchUnicastControlThresholdUnit.setStatus('current')
agentSwitchSnoopingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 6))
agentSwitchSnoopingCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 6, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingCfgTable.setStatus('current')
agentSwitchSnoopingCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 6, 1, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingCfgEntry.setStatus('current')
agentSwitchSnoopingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 6, 1, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingProtocol.setStatus('current')
agentSwitchSnoopingAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingAdminMode.setStatus('current')
agentSwitchSnoopingPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 6, 1, 1, 3), AgentPortMask().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingPortMask.setStatus('current')
agentSwitchSnoopingMulticastControlFramesProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingMulticastControlFramesProcessed.setStatus('current')
agentSwitchSnoopingProxyQuerierAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingProxyQuerierAdminMode.setStatus('current')
agentSwitchSnoopingIntfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7))
agentSwitchSnoopingIntfTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingIntfTable.setStatus('current')
agentSwitchSnoopingIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingIntfEntry.setStatus('current')
agentSwitchSnoopingIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfIndex.setStatus('current')
agentSwitchSnoopingIntfAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfAdminMode.setStatus('current')
agentSwitchSnoopingIntfGroupMembershipInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 3600)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfGroupMembershipInterval.setStatus('current')
agentSwitchSnoopingIntfMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7, 1, 1, 4), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfMaxResponseTime.setStatus('current')
agentSwitchSnoopingIntfMRPExpirationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfMRPExpirationTime.setStatus('current')
agentSwitchSnoopingIntfFastLeaveAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfFastLeaveAdminMode.setStatus('current')
agentSwitchSnoopingIntfMulticastRouterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfMulticastRouterMode.setStatus('current')
agentSwitchSnoopingIntfVlanIDs = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7, 1, 1, 8), VlanList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfVlanIDs.setStatus('current')
agentSwitchSnoopingIntfProxyQuerierAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingIntfProxyQuerierAdminMode.setStatus('current')
agentSwitchSnoopingVlanGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 8))
agentSwitchSnoopingVlanTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 8, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingVlanTable.setStatus('current')
agentSwitchSnoopingVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 8, 1, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qVlanIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingVlanEntry.setStatus('current')
agentSwitchSnoopingVlanAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanAdminMode.setStatus('current')
agentSwitchSnoopingVlanGroupMembershipInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 3600)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanGroupMembershipInterval.setStatus('current')
agentSwitchSnoopingVlanMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 8, 1, 1, 3), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanMaxResponseTime.setStatus('current')
agentSwitchSnoopingVlanFastLeaveAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanFastLeaveAdminMode.setStatus('current')
agentSwitchSnoopingVlanMRPExpirationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanMRPExpirationTime.setStatus('current')
agentSwitchSnoopingVlanReportSuppMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 8, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanReportSuppMode.setStatus('current')
agentSwitchSnoopingVlanProxyQuerierAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingVlanProxyQuerierAdminMode.setStatus('current')
agentSwitchVlanStaticMrouterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 9))
agentSwitchVlanStaticMrouterTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 9, 1), )
if mibBuilder.loadTexts: agentSwitchVlanStaticMrouterTable.setStatus('current')
agentSwitchVlanStaticMrouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 9, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "Q-BRIDGE-MIB", "dot1qVlanIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchVlanStaticMrouterEntry.setStatus('current')
agentSwitchVlanStaticMrouterAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchVlanStaticMrouterAdminMode.setStatus('current')
agentSwitchMFDBGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10))
agentSwitchMFDBTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 1), )
if mibBuilder.loadTexts: agentSwitchMFDBTable.setStatus('current')
agentSwitchMFDBEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 1, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchMFDBVlanId"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchMFDBMacAddress"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchMFDBProtocolType"))
if mibBuilder.loadTexts: agentSwitchMFDBEntry.setStatus('current')
agentSwitchMFDBVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 1, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBVlanId.setStatus('current')
agentSwitchMFDBMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBMacAddress.setStatus('current')
agentSwitchMFDBProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("static", 1), ("gmrp", 2), ("igmp", 3), ("mld", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBProtocolType.setStatus('current')
agentSwitchMFDBType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBType.setStatus('current')
agentSwitchMFDBDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBDescription.setStatus('current')
agentSwitchMFDBForwardingPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 1, 1, 6), AgentPortMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBForwardingPortMask.setStatus('current')
agentSwitchMFDBFilteringPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 1, 1, 7), AgentPortMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBFilteringPortMask.setStatus('current')
agentSwitchMFDBSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 2), )
if mibBuilder.loadTexts: agentSwitchMFDBSummaryTable.setStatus('current')
agentSwitchMFDBSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchMFDBSummaryVlanId"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchMFDBSummaryMacAddress"))
if mibBuilder.loadTexts: agentSwitchMFDBSummaryEntry.setStatus('current')
agentSwitchMFDBSummaryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 2, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBSummaryVlanId.setStatus('current')
agentSwitchMFDBSummaryMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBSummaryMacAddress.setStatus('current')
agentSwitchMFDBSummaryForwardingPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 2, 1, 3), AgentPortMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBSummaryForwardingPortMask.setStatus('current')
agentSwitchMFDBMaxTableEntries = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBMaxTableEntries.setStatus('current')
agentSwitchMFDBMostEntriesUsed = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBMostEntriesUsed.setStatus('current')
agentSwitchMFDBCurrentEntries = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 10, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMFDBCurrentEntries.setStatus('current')
agentSwitchDVlanTagGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11))
agentSwitchDVlanTagEthertype = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchDVlanTagEthertype.setStatus('current')
agentSwitchDVlanTagTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 2), )
if mibBuilder.loadTexts: agentSwitchDVlanTagTable.setStatus('current')
agentSwitchDVlanTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchDVlanTagTPid"))
if mibBuilder.loadTexts: agentSwitchDVlanTagEntry.setStatus('current')
agentSwitchDVlanTagTPid = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: agentSwitchDVlanTagTPid.setStatus('current')
agentSwitchDVlanTagPrimaryTPid = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchDVlanTagPrimaryTPid.setStatus('current')
agentSwitchDVlanTagRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchDVlanTagRowStatus.setStatus('current')
agentSwitchPortDVlanTagTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 3), )
if mibBuilder.loadTexts: agentSwitchPortDVlanTagTable.setStatus('current')
agentSwitchPortDVlanTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 3, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchPortDVlanTagInterfaceIfIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchPortDVlanTagTPid"))
if mibBuilder.loadTexts: agentSwitchPortDVlanTagEntry.setStatus('current')
agentSwitchPortDVlanTagInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentSwitchPortDVlanTagInterfaceIfIndex.setStatus('current')
agentSwitchPortDVlanTagTPid = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: agentSwitchPortDVlanTagTPid.setStatus('current')
agentSwitchPortDVlanTagMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchPortDVlanTagMode.setStatus('current')
agentSwitchPortDVlanTagCustomerId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchPortDVlanTagCustomerId.setStatus('current')
agentSwitchPortDVlanTagRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 11, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchPortDVlanTagRowStatus.setStatus('current')
agentSwitchVlanMacAssociationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 17))
agentSwitchVlanMacAssociationTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 17, 1), )
if mibBuilder.loadTexts: agentSwitchVlanMacAssociationTable.setStatus('current')
agentSwitchVlanMacAssociationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 17, 1, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchVlanMacAssociationMacAddress"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchVlanMacAssociationVlanId"))
if mibBuilder.loadTexts: agentSwitchVlanMacAssociationEntry.setStatus('current')
agentSwitchVlanMacAssociationMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 17, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: agentSwitchVlanMacAssociationMacAddress.setStatus('current')
agentSwitchVlanMacAssociationVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 17, 1, 1, 2), VlanIndex())
if mibBuilder.loadTexts: agentSwitchVlanMacAssociationVlanId.setStatus('current')
agentSwitchVlanMacAssociationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 17, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchVlanMacAssociationRowStatus.setStatus('current')
agentSwitchProtectedPortConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 18))
agentSwitchProtectedPortTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 18, 1), )
if mibBuilder.loadTexts: agentSwitchProtectedPortTable.setStatus('current')
agentSwitchProtectedPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 18, 1, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchProtectedPortGroupId"))
if mibBuilder.loadTexts: agentSwitchProtectedPortEntry.setStatus('current')
agentSwitchProtectedPortGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentSwitchProtectedPortGroupId.setStatus('current')
agentSwitchProtectedPortGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 18, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchProtectedPortGroupName.setStatus('current')
agentSwitchProtectedPortPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 18, 1, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchProtectedPortPortList.setStatus('current')
agentSwitchVlanSubnetAssociationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 19))
agentSwitchVlanSubnetAssociationTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 19, 1), )
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationTable.setStatus('current')
agentSwitchVlanSubnetAssociationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 19, 1, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchVlanSubnetAssociationIPAddress"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchVlanSubnetAssociationSubnetMask"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchVlanSubnetAssociationVlanId"))
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationEntry.setStatus('current')
agentSwitchVlanSubnetAssociationIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 19, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationIPAddress.setStatus('current')
agentSwitchVlanSubnetAssociationSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 19, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationSubnetMask.setStatus('current')
agentSwitchVlanSubnetAssociationVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 19, 1, 1, 3), VlanIndex())
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationVlanId.setStatus('current')
agentSwitchVlanSubnetAssociationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 19, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchVlanSubnetAssociationRowStatus.setStatus('current')
agentSwitchSnoopingQuerierGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20))
agentSwitchSnoopingQuerierCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 1), )
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierCfgTable.setStatus('current')
agentSwitchSnoopingQuerierCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 1, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierCfgEntry.setStatus('current')
agentSwitchSnoopingQuerierAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierAdminMode.setStatus('current')
agentSwitchSnoopingQuerierVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVersion.setStatus('current')
agentSwitchSnoopingQuerierAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 1, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierAddress.setStatus('current')
agentSwitchSnoopingQuerierQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierQueryInterval.setStatus('current')
agentSwitchSnoopingQuerierExpiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 300)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierExpiryInterval.setStatus('current')
agentSwitchSnoopingQuerierVlanTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 2), )
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanTable.setStatus('current')
agentSwitchSnoopingQuerierVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 2, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qVlanIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchSnoopingProtocol"))
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanEntry.setStatus('current')
agentSwitchSnoopingQuerierVlanAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanAdminMode.setStatus('current')
agentSwitchSnoopingQuerierVlanOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("querier", 1), ("non-querier", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanOperMode.setStatus('current')
agentSwitchSnoopingQuerierElectionParticipateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierElectionParticipateMode.setStatus('current')
agentSwitchSnoopingQuerierVlanAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 2, 1, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierVlanAddress.setStatus('current')
agentSwitchSnoopingQuerierOperVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierOperVersion.setStatus('current')
agentSwitchSnoopingQuerierOperMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierOperMaxResponseTime.setStatus('current')
agentSwitchSnoopingQuerierLastQuerierAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 2, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierLastQuerierAddress.setStatus('current')
agentSwitchSnoopingQuerierLastQuerierVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 20, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchSnoopingQuerierLastQuerierVersion.setStatus('current')
agentTransferConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9))
agentTransferUploadGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1))
agentTransferUploadMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("tftp", 1), ("xmodem", 2), ("ymodem", 3), ("zmodem", 4), ("sftp", 5), ("scp", 6), ("usb", 7), ("ftp", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadMode.setStatus('current')
agentTransferUploadServerIP = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadServerIP.setStatus('deprecated')
agentTransferUploadPath = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadPath.setStatus('current')
agentTransferUploadFilename = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadFilename.setStatus('current')
agentTransferUploadDataType = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("config", 2), ("errorlog", 3), ("messagelog", 4), ("traplog", 5), ("clibanner", 6), ("code", 7), ("lang-pack", 8), ("cpuPktCapture", 9), ("startup-config", 10), ("backup-config", 11), ("factory-default-config", 12), ("config-script", 13), ("startuplog", 14), ("operationallog", 15), ("crash-log", 16), ("tech-support", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadDataType.setStatus('current')
agentTransferUploadStart = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadStart.setStatus('current')
agentTransferUploadStatus = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("notInitiated", 1), ("transferStarting", 2), ("errorStarting", 3), ("wrongFileType", 4), ("updatingConfig", 5), ("invalidConfigFile", 6), ("writingToFlash", 7), ("failureWritingToFlash", 8), ("checkingCRC", 9), ("failedCRC", 10), ("unknownDirection", 11), ("transferSuccessful", 12), ("transferFailed", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTransferUploadStatus.setStatus('current')
agentTransferUploadServerAddressType = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 8), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadServerAddressType.setStatus('current')
agentTransferUploadServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 9), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadServerAddress.setStatus('current')
agentTransferUploadImagename = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("image1", 2), ("image2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadImagename.setStatus('current')
agentTransferUploadUsername = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadUsername.setStatus('current')
agentTransferUploadPassword = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadPassword.setStatus('current')
agentTransferUploadRemoteFilename = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferUploadRemoteFilename.setStatus('current')
agentTransferDownloadGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2))
agentTransferDownloadMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("tftp", 1), ("xmodem", 2), ("ymodem", 3), ("zmodem", 4), ("sftp", 5), ("scp", 6), ("usb", 7), ("ftp", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadMode.setStatus('current')
agentTransferDownloadServerIP = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadServerIP.setStatus('deprecated')
agentTransferDownloadPath = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadPath.setStatus('current')
agentTransferDownloadFilename = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadFilename.setStatus('current')
agentTransferDownloadDataType = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("code", 2), ("config", 3), ("sshkey-rsa1", 4), ("sshkey-rsa2", 5), ("sshkey-dsa", 6), ("sslpem-root", 7), ("sslpem-server", 8), ("sslpem-dhweak", 9), ("sslpem-dhstrong", 10), ("clibanner", 11), ("kernel", 12), ("tr069-acs-sslpem-root", 13), ("tr069-client-ssl-private-key", 14), ("tr069-client-ssl-cert", 15), ("lang-pack", 16), ("ias-users", 17), ("startup-config", 18), ("backup-config", 19), ("factory-default-config", 20), ("config-script", 21), ("publickey-image", 22), ("publickey-script", 23)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadDataType.setStatus('current')
agentTransferDownloadStart = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadStart.setStatus('current')
agentTransferDownloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("notInitiated", 1), ("transferStarting", 2), ("errorStarting", 3), ("wrongFileType", 4), ("updatingConfig", 5), ("invalidConfigFile", 6), ("writingToFlash", 7), ("failureWritingToFlash", 8), ("checkingCRC", 9), ("failedCRC", 10), ("unknownDirection", 11), ("transferSuccessful", 12), ("transferFailed", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTransferDownloadStatus.setStatus('current')
agentTransferDownloadServerAddressType = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 8), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadServerAddressType.setStatus('current')
agentTransferDownloadServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 9), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadServerAddress.setStatus('current')
agentTransferDownloadImagename = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("image1", 2), ("image2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadImagename.setStatus('current')
agentTransferDownloadUsername = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadUsername.setStatus('current')
agentTransferDownloadPassword = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadPassword.setStatus('current')
agentTransferDownloadRemoteFilename = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadRemoteFilename.setStatus('current')
agentTransferDownloadDigitalSignatureVerifySelect = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("verify", 1), ("noverify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDownloadDigitalSignatureVerifySelect.setStatus('current')
agentImageConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 3))
agentImage1 = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentImage1.setStatus('current')
agentImage2 = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentImage2.setStatus('current')
agentActiveImage = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentActiveImage.setStatus('current')
agentNextActiveImage = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 9, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNextActiveImage.setStatus('obsolete')
agentPortMirroringGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10))
agentMirroredPortIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMirroredPortIfIndex.setStatus('obsolete')
agentProbePortIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProbePortIfIndex.setStatus('obsolete')
agentPortMirroringMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirroringMode.setStatus('obsolete')
agentPortMirrorTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4), )
if mibBuilder.loadTexts: agentPortMirrorTable.setStatus('current')
agentPortMirrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentPortMirrorSessionNum"))
if mibBuilder.loadTexts: agentPortMirrorEntry.setStatus('current')
agentPortMirrorSessionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentPortMirrorSessionNum.setStatus('current')
agentPortMirrorDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorDestinationPort.setStatus('current')
agentPortMirrorSourcePortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4, 1, 3), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorSourcePortMask.setStatus('current')
agentPortMirrorAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorAdminMode.setStatus('current')
agentPortMirrorSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4093), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorSourceVlan.setStatus('current')
agentPortMirrorRemoteSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4093), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorRemoteSourceVlan.setStatus('current')
agentPortMirrorRemoteDestinationVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4093), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorRemoteDestinationVlan.setStatus('current')
agentPortMirrorReflectorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorReflectorPort.setStatus('current')
agentPortMirrorIpAccessListNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorIpAccessListNumber.setStatus('current')
agentPortMirrorMacAccessListNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 4, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorMacAccessListNumber.setStatus('current')
agentPortMirrorTypeTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 5), )
if mibBuilder.loadTexts: agentPortMirrorTypeTable.setStatus('current')
agentPortMirrorTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 5, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentPortMirrorSessionNum"), (0, "EdgeSwitch-SWITCHING-MIB", "agentPortMirrorTypeSourcePort"))
if mibBuilder.loadTexts: agentPortMirrorTypeEntry.setStatus('current')
agentPortMirrorTypeSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentPortMirrorTypeSourcePort.setStatus('current')
agentPortMirrorTypeType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tx", 1), ("rx", 2), ("txrx", 3))).clone('txrx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorTypeType.setStatus('current')
agentPortMirrorRemoteVlan = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMirrorRemoteVlan.setStatus('obsolete')
agentPortMirrorRemoteVlanTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 7), )
if mibBuilder.loadTexts: agentPortMirrorRemoteVlanTable.setStatus('current')
agentPortMirrorRemoteVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 7, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentPortMirrorRemoteVlanIndex"))
if mibBuilder.loadTexts: agentPortMirrorRemoteVlanEntry.setStatus('current')
agentPortMirrorRemoteVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 7, 1, 1), VlanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentPortMirrorRemoteVlanIndex.setStatus('current')
agentPortMirrorRemoteVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 10, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentPortMirrorRemoteVlanRowStatus.setStatus('current')
agentDot3adAggPortTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 12), )
if mibBuilder.loadTexts: agentDot3adAggPortTable.setStatus('current')
agentDot3adAggPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 12, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentDot3adAggPort"))
if mibBuilder.loadTexts: agentDot3adAggPortEntry.setStatus('current')
agentDot3adAggPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDot3adAggPort.setStatus('current')
agentDot3adAggPortLACPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDot3adAggPortLACPMode.setStatus('current')
agentSwitchportConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37), )
if mibBuilder.loadTexts: agentSwitchportConfigTable.setStatus('current')
agentSwitchportConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchportIntfIndex"))
if mibBuilder.loadTexts: agentSwitchportConfigEntry.setStatus('current')
agentSwitchportIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchportIntfIndex.setStatus('current')
agentSwitchportMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("access", 1), ("trunk", 2), ("general", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchportMode.setStatus('current')
agentSwitchportAccessVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37, 1, 3), VlanIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchportAccessVlanID.setStatus('current')
agentSwitchportTrunkNativeVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37, 1, 4), VlanIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchportTrunkNativeVlanID.setStatus('current')
agentSwitchportTrunkNativeVlanTagging = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchportTrunkNativeVlanTagging.setStatus('current')
agentSwitchportTrunkAllowedVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37, 1, 6), VlanList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchportTrunkAllowedVlanList.setStatus('current')
agentSwitchportGeneralUntaggedVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37, 1, 7), VlanList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchportGeneralUntaggedVlanList.setStatus('current')
agentSwitchportGeneralTaggedVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37, 1, 8), VlanList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchportGeneralTaggedVlanList.setStatus('current')
agentSwitchportGeneralForbiddenVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37, 1, 9), VlanList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchportGeneralForbiddenVlanList.setStatus('current')
agentSwitchportGeneralDynamicallyAddedVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 37, 1, 10), VlanList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchportGeneralDynamicallyAddedVlanList.setStatus('current')
agentPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13), )
if mibBuilder.loadTexts: agentPortConfigTable.setStatus('current')
agentPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentPortDot1dBasePort"))
if mibBuilder.loadTexts: agentPortConfigEntry.setStatus('current')
agentPortDot1dBasePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortDot1dBasePort.setStatus('current')
agentPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortIfIndex.setStatus('current')
agentPortIanaType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 3), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortIanaType.setStatus('current')
agentPortSTPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dot1d", 1), ("fast", 2), ("off", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSTPMode.setStatus('obsolete')
agentPortSTPState = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("blocking", 1), ("listening", 2), ("learning", 3), ("forwarding", 4), ("disabled", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortSTPState.setStatus('obsolete')
agentPortAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortAdminMode.setStatus('current')
agentPortPhysicalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("auto-negotiate", 1), ("half-10", 2), ("full-10", 3), ("half-100", 4), ("full-100", 5), ("half-100fx", 6), ("full-100fx", 7), ("full-1000sx", 8), ("full-10gsx", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortPhysicalMode.setStatus('obsolete')
agentPortPhysicalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("auto-negotiate", 1), ("half-10", 2), ("full-10", 3), ("half-100", 4), ("full-100", 5), ("half-100fx", 6), ("full-100fx", 7), ("full-1000sx", 8), ("full-10gsx", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortPhysicalStatus.setStatus('obsolete')
agentPortLinkTrapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortLinkTrapMode.setStatus('current')
agentPortClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortClearStats.setStatus('current')
agentPortDefaultType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 11), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortDefaultType.setStatus('current')
agentPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 12), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortType.setStatus('current')
agentPortAutoNegAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortAutoNegAdminStatus.setStatus('current')
agentPortDot3FlowControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("symmetric", 1), ("asymmetric", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortDot3FlowControlMode.setStatus('current')
agentPortDVlanTagMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortDVlanTagMode.setStatus('current')
agentPortDVlanTagEthertype = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortDVlanTagEthertype.setStatus('current')
agentPortDVlanTagCustomerId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortDVlanTagCustomerId.setStatus('current')
agentPortMaxFrameSizeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortMaxFrameSizeLimit.setStatus('current')
agentPortMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMaxFrameSize.setStatus('current')
agentPortBroadcastControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortBroadcastControlMode.setStatus('current')
agentPortBroadcastControlThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14880000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortBroadcastControlThreshold.setStatus('current')
agentPortMulticastControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMulticastControlMode.setStatus('current')
agentPortMulticastControlThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14880000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMulticastControlThreshold.setStatus('current')
agentPortUnicastControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortUnicastControlMode.setStatus('current')
agentPortUnicastControlThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14880000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortUnicastControlThreshold.setStatus('current')
agentPortBroadcastControlThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("pps", 2))).clone('percent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortBroadcastControlThresholdUnit.setStatus('current')
agentPortMulticastControlThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("pps", 2))).clone('percent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortMulticastControlThresholdUnit.setStatus('current')
agentPortUnicastControlThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("pps", 2))).clone('percent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortUnicastControlThresholdUnit.setStatus('current')
agentPortVoiceVlanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("vlanid", 2), ("dot1p", 3), ("untagged", 4), ("disable", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanMode.setStatus('current')
agentPortVoiceVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4093))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanID.setStatus('current')
agentPortVoiceVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanPriority.setStatus('current')
agentPortVoiceVlanDataPriorityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trust", 1), ("untrust", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanDataPriorityMode.setStatus('current')
agentPortVoiceVlanOperationalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortVoiceVlanOperationalStatus.setStatus('current')
agentPortVoiceVlanUntagged = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanUntagged.setStatus('current')
agentPortVoiceVlanNoneMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanNoneMode.setStatus('current')
agentPortVoiceVlanDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanDSCP.setStatus('current')
agentPortVoiceVlanAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortVoiceVlanAuthMode.setStatus('current')
agentPortDot3FlowControlOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortDot3FlowControlOperStatus.setStatus('current')
agentPortSwitchportMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 13, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5))).clone(namedValues=NamedValues(("general", 3), ("host", 4), ("promiscuous", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortSwitchportMode.setStatus('current')
agentProtocolConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14))
agentProtocolGroupCreate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 16), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupCreate.setStatus('obsolete')
agentProtocolGroupTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 2), )
if mibBuilder.loadTexts: agentProtocolGroupTable.setStatus('current')
agentProtocolGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentProtocolGroupId"))
if mibBuilder.loadTexts: agentProtocolGroupEntry.setStatus('current')
agentProtocolGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentProtocolGroupId.setStatus('current')
agentProtocolGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 2, 1, 2), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 16), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupName.setStatus('current')
agentProtocolGroupVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4093))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupVlanId.setStatus('current')
agentProtocolGroupProtocolIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupProtocolIP.setStatus('obsolete')
agentProtocolGroupProtocolARP = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupProtocolARP.setStatus('obsolete')
agentProtocolGroupProtocolIPX = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentProtocolGroupProtocolIPX.setStatus('obsolete')
agentProtocolGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentProtocolGroupStatus.setStatus('current')
agentProtocolGroupPortTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 3), )
if mibBuilder.loadTexts: agentProtocolGroupPortTable.setStatus('current')
agentProtocolGroupPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 3, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentProtocolGroupId"), (0, "EdgeSwitch-SWITCHING-MIB", "agentProtocolGroupPortIfIndex"))
if mibBuilder.loadTexts: agentProtocolGroupPortEntry.setStatus('current')
agentProtocolGroupPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentProtocolGroupPortIfIndex.setStatus('current')
agentProtocolGroupPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentProtocolGroupPortStatus.setStatus('current')
agentProtocolGroupProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 4), )
if mibBuilder.loadTexts: agentProtocolGroupProtocolTable.setStatus('current')
agentProtocolGroupProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 4, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentProtocolGroupId"), (0, "EdgeSwitch-SWITCHING-MIB", "agentProtocolGroupProtocolID"))
if mibBuilder.loadTexts: agentProtocolGroupProtocolEntry.setStatus('current')
agentProtocolGroupProtocolID = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1536, 65535)))
if mibBuilder.loadTexts: agentProtocolGroupProtocolID.setStatus('current')
agentProtocolGroupProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 14, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentProtocolGroupProtocolStatus.setStatus('current')
agentStpSwitchConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15))
agentStpConfigDigestKey = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpConfigDigestKey.setStatus('current')
agentStpConfigFormatSelector = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpConfigFormatSelector.setStatus('current')
agentStpConfigName = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpConfigName.setStatus('current')
agentStpConfigRevision = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpConfigRevision.setStatus('current')
agentStpForceVersion = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dot1d", 1), ("dot1w", 2), ("dot1s", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpForceVersion.setStatus('current')
agentStpAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpAdminMode.setStatus('current')
agentStpPortTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9), )
if mibBuilder.loadTexts: agentStpPortTable.setStatus('current')
agentStpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentStpPortEntry.setStatus('current')
agentStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpPortState.setStatus('current')
agentStpPortStatsMstpBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsMstpBpduRx.setStatus('current')
agentStpPortStatsMstpBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsMstpBpduTx.setStatus('current')
agentStpPortStatsRstpBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsRstpBpduRx.setStatus('current')
agentStpPortStatsRstpBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsRstpBpduTx.setStatus('current')
agentStpPortStatsStpBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsStpBpduRx.setStatus('current')
agentStpPortStatsStpBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortStatsStpBpduTx.setStatus('current')
agentStpPortUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpPortUpTime.setStatus('current')
agentStpPortMigrationCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpPortMigrationCheck.setStatus('current')
agentStpPortHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 9, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpPortHelloTime.setStatus('current')
agentStpCstConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10))
agentStpCstHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstHelloTime.setStatus('current')
agentStpCstMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstMaxAge.setStatus('current')
agentStpCstRegionalRootId = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstRegionalRootId.setStatus('current')
agentStpCstRegionalRootPathCost = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstRegionalRootPathCost.setStatus('current')
agentStpCstRootFwdDelay = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstRootFwdDelay.setStatus('current')
agentStpCstBridgeFwdDelay = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 30)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeFwdDelay.setStatus('current')
agentStpCstBridgeHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstBridgeHelloTime.setStatus('current')
agentStpCstBridgeHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstBridgeHoldTime.setStatus('current')
agentStpCstBridgeMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeMaxAge.setStatus('current')
agentStpCstBridgeMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeMaxHops.setStatus('current')
agentStpCstBridgePriority = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgePriority.setStatus('current')
agentStpCstBridgeHoldCount = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 10, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstBridgeHoldCount.setStatus('current')
agentStpCstPortTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11), )
if mibBuilder.loadTexts: agentStpCstPortTable.setStatus('current')
agentStpCstPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentStpCstPortEntry.setStatus('current')
agentStpCstPortOperEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortOperEdge.setStatus('current')
agentStpCstPortOperPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortOperPointToPoint.setStatus('current')
agentStpCstPortTopologyChangeAck = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortTopologyChangeAck.setStatus('current')
agentStpCstPortEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortEdge.setStatus('current')
agentStpCstPortForwardingState = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("discarding", 1), ("learning", 2), ("forwarding", 3), ("disabled", 4), ("manualFwd", 5), ("notParticipate", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortForwardingState.setStatus('current')
agentStpCstPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 6), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortId.setStatus('current')
agentStpCstPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortPathCost.setStatus('current')
agentStpCstPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortPriority.setStatus('current')
agentStpCstDesignatedBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstDesignatedBridgeId.setStatus('current')
agentStpCstDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstDesignatedCost.setStatus('current')
agentStpCstDesignatedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 11), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstDesignatedPortId.setStatus('current')
agentStpCstExtPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstExtPortPathCost.setStatus('current')
agentStpCstPortBpduGuardEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpCstPortBpduGuardEffect.setStatus('current')
agentStpCstPortBpduFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortBpduFilter.setStatus('current')
agentStpCstPortBpduFlood = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortBpduFlood.setStatus('current')
agentStpCstPortAutoEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortAutoEdge.setStatus('current')
agentStpCstPortRootGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortRootGuard.setStatus('current')
agentStpCstPortTCNGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortTCNGuard.setStatus('current')
agentStpCstPortLoopGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 11, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpCstPortLoopGuard.setStatus('current')
agentStpMstTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12), )
if mibBuilder.loadTexts: agentStpMstTable.setStatus('current')
agentStpMstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentStpMstId"))
if mibBuilder.loadTexts: agentStpMstEntry.setStatus('current')
agentStpMstId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstId.setStatus('current')
agentStpMstBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpMstBridgePriority.setStatus('current')
agentStpMstBridgeIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstBridgeIdentifier.setStatus('current')
agentStpMstDesignatedRootId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedRootId.setStatus('current')
agentStpMstRootPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstRootPathCost.setStatus('current')
agentStpMstRootPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstRootPortId.setStatus('current')
agentStpMstTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstTimeSinceTopologyChange.setStatus('current')
agentStpMstTopologyChangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstTopologyChangeCount.setStatus('current')
agentStpMstTopologyChangeParm = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstTopologyChangeParm.setStatus('current')
agentStpMstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 12, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStpMstRowStatus.setStatus('current')
agentStpMstPortTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13), )
if mibBuilder.loadTexts: agentStpMstPortTable.setStatus('current')
agentStpMstPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentStpMstId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentStpMstPortEntry.setStatus('current')
agentStpMstPortForwardingState = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("discarding", 1), ("learning", 2), ("forwarding", 3), ("disabled", 4), ("manualFwd", 5), ("notParticipate", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortForwardingState.setStatus('current')
agentStpMstPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortId.setStatus('current')
agentStpMstPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpMstPortPathCost.setStatus('current')
agentStpMstPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpMstPortPriority.setStatus('current')
agentStpMstDesignatedBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedBridgeId.setStatus('current')
agentStpMstDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedCost.setStatus('current')
agentStpMstDesignatedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13, 1, 7), PortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstDesignatedPortId.setStatus('current')
agentStpMstPortLoopInconsistentState = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortLoopInconsistentState.setStatus('current')
agentStpMstPortTransitionsIntoLoopInconsistentState = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortTransitionsIntoLoopInconsistentState.setStatus('current')
agentStpMstPortTransitionsOutOfLoopInconsistentState = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentStpMstPortTransitionsOutOfLoopInconsistentState.setStatus('current')
agentStpMstVlanTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 14), )
if mibBuilder.loadTexts: agentStpMstVlanTable.setStatus('current')
agentStpMstVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 14, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentStpMstId"), (0, "Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: agentStpMstVlanEntry.setStatus('current')
agentStpMstVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 14, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStpMstVlanRowStatus.setStatus('current')
agentStpBpduGuardMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpBpduGuardMode.setStatus('current')
agentStpBpduFilterDefault = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStpBpduFilterDefault.setStatus('current')
agentAuthenticationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16))
agentAuthenticationListCreate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListCreate.setStatus('current')
agentAuthenticationListTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 2), )
if mibBuilder.loadTexts: agentAuthenticationListTable.setStatus('current')
agentAuthenticationListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentAuthenticationListIndex"))
if mibBuilder.loadTexts: agentAuthenticationListEntry.setStatus('current')
agentAuthenticationListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentAuthenticationListIndex.setStatus('current')
agentAuthenticationListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentAuthenticationListName.setStatus('current')
agentAuthenticationListMethod1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("undefined", 0), ("enable", 1), ("line", 2), ("local", 3), ("none", 4), ("radius", 5), ("tacacs", 6), ("ias", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod1.setStatus('current')
agentAuthenticationListMethod2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("undefined", 0), ("enable", 1), ("line", 2), ("local", 3), ("none", 4), ("radius", 5), ("tacacs", 6), ("ias", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod2.setStatus('current')
agentAuthenticationListMethod3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("undefined", 0), ("enable", 1), ("line", 2), ("local", 3), ("none", 4), ("radius", 5), ("tacacs", 6), ("ias", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod3.setStatus('current')
agentAuthenticationListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 2, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListStatus.setStatus('current')
agentAuthenticationListMethod4 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("undefined", 0), ("enable", 1), ("line", 2), ("local", 3), ("none", 4), ("radius", 5), ("tacacs", 6), ("ias", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod4.setStatus('current')
agentAuthenticationListMethod5 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("undefined", 0), ("enable", 1), ("line", 2), ("local", 3), ("none", 4), ("radius", 5), ("tacacs", 6), ("ias", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAuthenticationListMethod5.setStatus('current')
agentUserConfigDefaultAuthenticationList = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserConfigDefaultAuthenticationList.setStatus('current')
agentUserAuthenticationConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 4), )
if mibBuilder.loadTexts: agentUserAuthenticationConfigTable.setStatus('current')
agentUserAuthenticationConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 4, 1), )
agentUserConfigEntry.registerAugmentions(("EdgeSwitch-SWITCHING-MIB", "agentUserAuthenticationConfigEntry"))
agentUserAuthenticationConfigEntry.setIndexNames(*agentUserConfigEntry.getIndexNames())
if mibBuilder.loadTexts: agentUserAuthenticationConfigEntry.setStatus('current')
agentUserAuthenticationList = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserAuthenticationList.setStatus('current')
agentUserPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 5), )
if mibBuilder.loadTexts: agentUserPortConfigTable.setStatus('current')
agentUserPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 5, 1), )
agentUserConfigEntry.registerAugmentions(("EdgeSwitch-SWITCHING-MIB", "agentUserPortConfigEntry"))
agentUserPortConfigEntry.setIndexNames(*agentUserConfigEntry.getIndexNames())
if mibBuilder.loadTexts: agentUserPortConfigEntry.setStatus('current')
agentUserPortSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 16, 5, 1, 1), AgentPortMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUserPortSecurity.setStatus('current')
agentExecAccountingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 20))
agentExecAccountingListCreate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 20, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAccountingListCreate.setStatus('current')
agentExecAccountingListTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 20, 2), )
if mibBuilder.loadTexts: agentExecAccountingListTable.setStatus('current')
agentExecAccountingListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 20, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentExecAccountingListIndex"))
if mibBuilder.loadTexts: agentExecAccountingListEntry.setStatus('current')
agentExecAccountingListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 20, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentExecAccountingListIndex.setStatus('current')
agentExecAccountingListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 20, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentExecAccountingListName.setStatus('current')
agentExecAccountingMethodType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("undefined", 0), ("start-stop", 1), ("stop-only", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAccountingMethodType.setStatus('current')
agentExecAccountingListMethod1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 20, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1), ("radius", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAccountingListMethod1.setStatus('current')
agentExecAccountingListMethod2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 20, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1), ("radius", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAccountingListMethod2.setStatus('current')
agentExecAccountingListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 20, 2, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAccountingListStatus.setStatus('current')
agentCmdsAccountingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 21))
agentCmdsAccountingListCreate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 21, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAccountingListCreate.setStatus('current')
agentCmdsAccountingListTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 21, 2), )
if mibBuilder.loadTexts: agentCmdsAccountingListTable.setStatus('current')
agentCmdsAccountingListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 21, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentCmdsAccountingListIndex"))
if mibBuilder.loadTexts: agentCmdsAccountingListEntry.setStatus('current')
agentCmdsAccountingListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 21, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentCmdsAccountingListIndex.setStatus('current')
agentCmdsAccountingListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 21, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCmdsAccountingListName.setStatus('current')
agentCmdsAccountingMethodType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 21, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("undefined", 0), ("start-stop", 1), ("stop-only", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAccountingMethodType.setStatus('current')
agentCmdsAccountingListMethod1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 21, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAccountingListMethod1.setStatus('current')
agentCmdsAccountingListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 21, 2, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAccountingListStatus.setStatus('current')
agentClassOfServiceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 17))
agentClassOfServicePortTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 17, 1), )
if mibBuilder.loadTexts: agentClassOfServicePortTable.setStatus('current')
agentClassOfServicePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 17, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentClassOfServicePortPriority"))
if mibBuilder.loadTexts: agentClassOfServicePortEntry.setStatus('current')
agentClassOfServicePortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 17, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: agentClassOfServicePortPriority.setStatus('current')
agentClassOfServicePortClass = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClassOfServicePortClass.setStatus('current')
agentHTTPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 18))
agentHTTPWebMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPWebMode.setStatus('current')
agentHTTPJavaMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPJavaMode.setStatus('current')
agentHTTPMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 18, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPMaxSessions.setStatus('current')
agentHTTPHardTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 18, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 168))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPHardTimeout.setStatus('current')
agentHTTPSoftTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 18, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPSoftTimeout.setStatus('current')
agentHTTPWebMgmtPortNum = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 18, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(80, 80), ValueRangeConstraint(1025, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentHTTPWebMgmtPortNum.setStatus('current')
agentAutoInstallConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 19))
agentAutoinstallMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 19, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAutoinstallMode.setStatus('current')
agentAutoinstallAutosaveMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 19, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAutoinstallAutosaveMode.setStatus('current')
agentAutoinstallUnicastRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 19, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAutoinstallUnicastRetryCount.setStatus('current')
agentAutoinstallStatus = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 19, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentAutoinstallStatus.setStatus('current')
agentAutoinstallAutoRebootMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 19, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAutoinstallAutoRebootMode.setStatus('current')
agentAutoinstallOperationalMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 19, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentAutoinstallOperationalMode.setStatus('current')
agentCmdsAuthorizationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 23))
agentCmdsAuthorizationListCreate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 23, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 20), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAuthorizationListCreate.setStatus('current')
agentCmdsAuthorizationListTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 23, 2), )
if mibBuilder.loadTexts: agentCmdsAuthorizationListTable.setStatus('current')
agentCmdsAuthorizationListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 23, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentCmdsAuthorizationListIndex"))
if mibBuilder.loadTexts: agentCmdsAuthorizationListEntry.setStatus('current')
agentCmdsAuthorizationListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 23, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentCmdsAuthorizationListIndex.setStatus('current')
agentCmdsAuthorizationListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 23, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCmdsAuthorizationListName.setStatus('current')
agentCmdsAuthorizationListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 23, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAuthorizationListStatus.setStatus('current')
agentCmdsAuthorizationListMethod1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 23, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1), ("radius", 2), ("local", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAuthorizationListMethod1.setStatus('current')
agentCmdsAuthorizationListMethod2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 23, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1), ("radius", 2), ("local", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAuthorizationListMethod2.setStatus('current')
agentCmdsAuthorizationListMethod3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 23, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1), ("radius", 2), ("local", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCmdsAuthorizationListMethod3.setStatus('current')
agentExecAuthorizationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 24))
agentExecAuthorizationListCreate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 24, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 20), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAuthorizationListCreate.setStatus('current')
agentExecAuthorizationListTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 24, 2), )
if mibBuilder.loadTexts: agentExecAuthorizationListTable.setStatus('current')
agentExecAuthorizationListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 24, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentExecAuthorizationListIndex"))
if mibBuilder.loadTexts: agentExecAuthorizationListEntry.setStatus('current')
agentExecAuthorizationListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 24, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentExecAuthorizationListIndex.setStatus('current')
agentExecAuthorizationListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 24, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentExecAuthorizationListName.setStatus('current')
agentExecAuthorizationListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 24, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAuthorizationListStatus.setStatus('current')
agentExecAuthorizationListMethod1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 24, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1), ("radius", 2), ("local", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAuthorizationListMethod1.setStatus('current')
agentExecAuthorizationListMethod2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 24, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1), ("radius", 2), ("local", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAuthorizationListMethod2.setStatus('current')
agentExecAuthorizationListMethod3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 24, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1), ("radius", 2), ("local", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAuthorizationListMethod3.setStatus('current')
agentExecAuthorizationListMethod4 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 24, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("tacacs", 1), ("radius", 2), ("local", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentExecAuthorizationListMethod4.setStatus('current')
agentSwitchMbufConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 25))
agentSwitchMbufRisingThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 25, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchMbufRisingThreshold.setStatus('current')
agentSwitchMbufFallingThreshold = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 25, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchMbufFallingThreshold.setStatus('current')
agentSwitchMbufNotificationSeverity = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 25, 3), AgentLogSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchMbufNotificationSeverity.setStatus('current')
agentDigitalSignatureConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 26))
agentDigitalSignatureVerifyMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 26, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noverify", 0), ("image", 1), ("config", 2), ("all", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDigitalSignatureVerifyMode.setStatus('current')
agentSystemGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3))
agentSaveConfig = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSaveConfig.setStatus('current')
agentClearConfig = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearConfig.setStatus('current')
agentClearLoginSessions = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearLoginSessions.setStatus('current')
agentClearPasswords = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearPasswords.setStatus('current')
agentClearPortStats = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearPortStats.setStatus('current')
agentClearSwitchStats = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearSwitchStats.setStatus('current')
agentClearTrapLog = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearTrapLog.setStatus('current')
agentClearVlan = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentClearVlan.setStatus('current')
agentResetSystem = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentResetSystem.setStatus('current')
agentSaveConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notInitiated", 1), ("savingInProcess", 2), ("savingComplete", 3), ("savingFailed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSaveConfigStatus.setStatus('current')
agentStartupConfigErase = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("erase", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentStartupConfigErase.setStatus('current')
agentFactoryDefaultsErase = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("erase", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFactoryDefaultsErase.setStatus('current')
agentCableTesterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 4))
agentCableTesterStatus = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("success", 2), ("failure", 3), ("uninitialized", 4))).clone('uninitialized')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCableTesterStatus.setStatus('current')
agentCableTesterIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 4, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCableTesterIfIndex.setStatus('current')
agentCableTesterCableStatus = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("open", 2), ("short", 3), ("unknown", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCableTesterCableStatus.setStatus('current')
agentCableTesterMinimumCableLength = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 4, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCableTesterMinimumCableLength.setStatus('current')
agentCableTesterMaximumCableLength = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 4, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCableTesterMaximumCableLength.setStatus('current')
agentCableTesterCableFailureLocation = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 4, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCableTesterCableFailureLocation.setStatus('current')
agentDaiConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21))
agentDaiSrcMacValidate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiSrcMacValidate.setStatus('current')
agentDaiDstMacValidate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiDstMacValidate.setStatus('current')
agentDaiIPValidate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiIPValidate.setStatus('current')
agentDaiVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 4), )
if mibBuilder.loadTexts: agentDaiVlanConfigTable.setStatus('current')
agentDaiVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 4, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentDaiVlanIndex"))
if mibBuilder.loadTexts: agentDaiVlanConfigEntry.setStatus('current')
agentDaiVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 4, 1, 1), VlanIndex())
if mibBuilder.loadTexts: agentDaiVlanIndex.setStatus('current')
agentDaiVlanDynArpInspEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 4, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiVlanDynArpInspEnable.setStatus('current')
agentDaiVlanLoggingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 4, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiVlanLoggingEnable.setStatus('current')
agentDaiVlanArpAclName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiVlanArpAclName.setStatus('current')
agentDaiVlanArpAclStaticFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 4, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiVlanArpAclStaticFlag.setStatus('current')
agentDaiStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiStatsReset.setStatus('current')
agentDaiVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6), )
if mibBuilder.loadTexts: agentDaiVlanStatsTable.setStatus('current')
agentDaiVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentDaiVlanStatsIndex"))
if mibBuilder.loadTexts: agentDaiVlanStatsEntry.setStatus('current')
agentDaiVlanStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6, 1, 1), VlanIndex())
if mibBuilder.loadTexts: agentDaiVlanStatsIndex.setStatus('current')
agentDaiVlanPktsForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanPktsForwarded.setStatus('current')
agentDaiVlanPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanPktsDropped.setStatus('current')
agentDaiVlanDhcpDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanDhcpDrops.setStatus('current')
agentDaiVlanDhcpPermits = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanDhcpPermits.setStatus('current')
agentDaiVlanAclDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanAclDrops.setStatus('current')
agentDaiVlanAclPermits = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanAclPermits.setStatus('current')
agentDaiVlanSrcMacFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanSrcMacFailures.setStatus('current')
agentDaiVlanDstMacFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanDstMacFailures.setStatus('current')
agentDaiVlanIpValidFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDaiVlanIpValidFailures.setStatus('current')
agentDaiIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 7), )
if mibBuilder.loadTexts: agentDaiIfConfigTable.setStatus('current')
agentDaiIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDaiIfConfigEntry.setStatus('current')
agentDaiIfTrustEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 7, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiIfTrustEnable.setStatus('current')
agentDaiIfRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 300), )).clone(15)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiIfRateLimit.setStatus('current')
agentDaiIfBurstInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 21, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDaiIfBurstInterval.setStatus('current')
agentArpAclGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 22))
agentArpAclTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 22, 1), )
if mibBuilder.loadTexts: agentArpAclTable.setStatus('current')
agentArpAclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 22, 1, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentArpAclName"))
if mibBuilder.loadTexts: agentArpAclEntry.setStatus('current')
agentArpAclName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 22, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentArpAclName.setStatus('current')
agentArpAclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 22, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentArpAclRowStatus.setStatus('current')
agentArpAclRuleTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 22, 2), )
if mibBuilder.loadTexts: agentArpAclRuleTable.setStatus('current')
agentArpAclRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 22, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentArpAclName"), (0, "EdgeSwitch-SWITCHING-MIB", "agentArpAclRuleMatchSenderIpAddr"), (0, "EdgeSwitch-SWITCHING-MIB", "agentArpAclRuleMatchSenderMacAddr"))
if mibBuilder.loadTexts: agentArpAclRuleEntry.setStatus('current')
agentArpAclRuleMatchSenderIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 22, 2, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentArpAclRuleMatchSenderIpAddr.setStatus('current')
agentArpAclRuleMatchSenderMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 22, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentArpAclRuleMatchSenderMacAddr.setStatus('current')
agentArpAclRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 22, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentArpAclRuleRowStatus.setStatus('current')
agentDhcpSnoopingConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23))
agentDhcpSnoopingAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingAdminMode.setStatus('current')
agentDhcpSnoopingVerifyMac = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingVerifyMac.setStatus('current')
agentDhcpSnoopingVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 3), )
if mibBuilder.loadTexts: agentDhcpSnoopingVlanConfigTable.setStatus('current')
agentDhcpSnoopingVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 3, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentDhcpSnoopingVlanIndex"))
if mibBuilder.loadTexts: agentDhcpSnoopingVlanConfigEntry.setStatus('current')
agentDhcpSnoopingVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 3, 1, 1), VlanIndex())
if mibBuilder.loadTexts: agentDhcpSnoopingVlanIndex.setStatus('current')
agentDhcpSnoopingVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingVlanEnable.setStatus('current')
agentDhcpSnoopingIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 4), )
if mibBuilder.loadTexts: agentDhcpSnoopingIfConfigTable.setStatus('current')
agentDhcpSnoopingIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDhcpSnoopingIfConfigEntry.setStatus('current')
agentDhcpSnoopingIfTrustEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingIfTrustEnable.setStatus('current')
agentDhcpSnoopingIfLogEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 4, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingIfLogEnable.setStatus('current')
agentDhcpSnoopingIfRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 300), )).clone(-1)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingIfRateLimit.setStatus('current')
agentDhcpSnoopingIfBurstInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 15), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingIfBurstInterval.setStatus('current')
agentIpsgIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 5), )
if mibBuilder.loadTexts: agentIpsgIfConfigTable.setStatus('current')
agentIpsgIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentIpsgIfConfigEntry.setStatus('current')
agentIpsgIfVerifySource = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 5, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpsgIfVerifySource.setStatus('current')
agentIpsgIfPortSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 5, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpsgIfPortSecurity.setStatus('current')
agentDhcpSnoopingStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingStatsReset.setStatus('current')
agentDhcpSnoopingStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 7), )
if mibBuilder.loadTexts: agentDhcpSnoopingStatsTable.setStatus('current')
agentDhcpSnoopingStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDhcpSnoopingStatsEntry.setStatus('current')
agentDhcpSnoopingMacVerifyFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpSnoopingMacVerifyFailures.setStatus('current')
agentDhcpSnoopingInvalidClientMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpSnoopingInvalidClientMessages.setStatus('current')
agentDhcpSnoopingInvalidServerMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpSnoopingInvalidServerMessages.setStatus('current')
agentStaticIpsgBindingTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 8), )
if mibBuilder.loadTexts: agentStaticIpsgBindingTable.setStatus('current')
agentStaticIpsgBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 8, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentStaticIpsgBindingIfIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentStaticIpsgBindingVlanId"), (0, "EdgeSwitch-SWITCHING-MIB", "agentStaticIpsgBindingIpAddr"), (0, "EdgeSwitch-SWITCHING-MIB", "agentStaticIpsgBindingMacAddr"))
if mibBuilder.loadTexts: agentStaticIpsgBindingEntry.setStatus('current')
agentStaticIpsgBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 8, 1, 1), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpsgBindingIfIndex.setStatus('current')
agentStaticIpsgBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 8, 1, 2), VlanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpsgBindingVlanId.setStatus('current')
agentStaticIpsgBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 8, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpsgBindingIpAddr.setStatus('current')
agentStaticIpsgBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 8, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpsgBindingMacAddr.setStatus('current')
agentStaticIpsgBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpsgBindingRowStatus.setStatus('current')
agentDynamicIpsgBindingTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 9), )
if mibBuilder.loadTexts: agentDynamicIpsgBindingTable.setStatus('current')
agentDynamicIpsgBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 9, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentDynamicIpsgBindingIfIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentDynamicIpsgBindingVlanId"), (0, "EdgeSwitch-SWITCHING-MIB", "agentDynamicIpsgBindingIpAddr"), (0, "EdgeSwitch-SWITCHING-MIB", "agentDynamicIpsgBindingMacAddr"))
if mibBuilder.loadTexts: agentDynamicIpsgBindingEntry.setStatus('current')
agentDynamicIpsgBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 9, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpsgBindingIfIndex.setStatus('current')
agentDynamicIpsgBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 9, 1, 2), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpsgBindingVlanId.setStatus('current')
agentDynamicIpsgBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpsgBindingIpAddr.setStatus('current')
agentDynamicIpsgBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 9, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpsgBindingMacAddr.setStatus('current')
agentStaticDsBindingTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 10), )
if mibBuilder.loadTexts: agentStaticDsBindingTable.setStatus('current')
agentStaticDsBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 10, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentStaticDsBindingMacAddr"))
if mibBuilder.loadTexts: agentStaticDsBindingEntry.setStatus('current')
agentStaticDsBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 10, 1, 1), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsBindingIfIndex.setStatus('current')
agentStaticDsBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 10, 1, 2), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsBindingVlanId.setStatus('current')
agentStaticDsBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 10, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsBindingMacAddr.setStatus('current')
agentStaticDsBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 10, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsBindingIpAddr.setStatus('current')
agentStaticDsBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 10, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsBindingRowStatus.setStatus('current')
agentDynamicDsBindingTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 11), )
if mibBuilder.loadTexts: agentDynamicDsBindingTable.setStatus('current')
agentDynamicDsBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 11, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentDynamicDsBindingMacAddr"))
if mibBuilder.loadTexts: agentDynamicDsBindingEntry.setStatus('current')
agentDynamicDsBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 11, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsBindingIfIndex.setStatus('current')
agentDynamicDsBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 11, 1, 2), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsBindingVlanId.setStatus('current')
agentDynamicDsBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 11, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsBindingMacAddr.setStatus('current')
agentDynamicDsBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 11, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsBindingIpAddr.setStatus('current')
agentDynamicDsBindingLeaseRemainingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 11, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsBindingLeaseRemainingTime.setStatus('current')
agentDhcpSnoopingRemoteFileName = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingRemoteFileName.setStatus('current')
agentDhcpSnoopingRemoteIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingRemoteIpAddr.setStatus('current')
agentDhcpSnoopingStoreInterval = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 23, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpSnoopingStoreInterval.setStatus('current')
agentDhcpL2RelayConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24))
agentDhcpL2RelayAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayAdminMode.setStatus('current')
agentDhcpL2RelayIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 2), )
if mibBuilder.loadTexts: agentDhcpL2RelayIfConfigTable.setStatus('current')
agentDhcpL2RelayIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDhcpL2RelayIfConfigEntry.setStatus('current')
agentDhcpL2RelayIfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 2, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayIfEnable.setStatus('current')
agentDhcpL2RelayIfTrustEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayIfTrustEnable.setStatus('current')
agentDhcpL2RelayVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 3), )
if mibBuilder.loadTexts: agentDhcpL2RelayVlanConfigTable.setStatus('current')
agentDhcpL2RelayVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 3, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentDhcpL2RelayVlanIndex"))
if mibBuilder.loadTexts: agentDhcpL2RelayVlanConfigEntry.setStatus('current')
agentDhcpL2RelayVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 3, 1, 1), VlanIndex())
if mibBuilder.loadTexts: agentDhcpL2RelayVlanIndex.setStatus('current')
agentDhcpL2RelayVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayVlanEnable.setStatus('current')
agentDhcpL2RelayCircuitIdVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 3, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayCircuitIdVlanEnable.setStatus('current')
agentDhcpL2RelayRemoteIdVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayRemoteIdVlanEnable.setStatus('current')
agentDhcpL2RelayStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpL2RelayStatsReset.setStatus('current')
agentDhcpL2RelayStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 7), )
if mibBuilder.loadTexts: agentDhcpL2RelayStatsTable.setStatus('current')
agentDhcpL2RelayStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDhcpL2RelayStatsEntry.setStatus('current')
agentDhcpL2RelayUntrustedSrvrMsgsWithOptn82 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpL2RelayUntrustedSrvrMsgsWithOptn82.setStatus('current')
agentDhcpL2RelayUntrustedClntMsgsWithOptn82 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpL2RelayUntrustedClntMsgsWithOptn82.setStatus('current')
agentDhcpL2RelayTrustedSrvrMsgsWithoutOptn82 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpL2RelayTrustedSrvrMsgsWithoutOptn82.setStatus('current')
agentDhcpL2RelayTrustedClntMsgsWithoutOptn82 = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 24, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpL2RelayTrustedClntMsgsWithoutOptn82.setStatus('current')
agentSwitchVoiceVLANGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 25))
agentSwitchVoiceVLANAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 25, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchVoiceVLANAdminMode.setStatus('current')
agentSwitchVoiceVlanDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 25, 2), )
if mibBuilder.loadTexts: agentSwitchVoiceVlanDeviceTable.setStatus('current')
agentSwitchVoiceVlanDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 25, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchVoiceVlanInterfaceNum"), (0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchVoiceVlanDeviceMacAddress"))
if mibBuilder.loadTexts: agentSwitchVoiceVlanDeviceEntry.setStatus('current')
agentSwitchVoiceVlanInterfaceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 25, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchVoiceVlanInterfaceNum.setStatus('current')
agentSwitchVoiceVlanDeviceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 25, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchVoiceVlanDeviceMacAddress.setStatus('current')
agentSwitchAddressConflictGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 26))
agentSwitchAddressConflictDetectionStatus = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 26, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchAddressConflictDetectionStatus.setStatus('current')
agentSwitchAddressConflictDetectionStatusReset = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 26, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchAddressConflictDetectionStatusReset.setStatus('current')
agentSwitchLastConflictingIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 26, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchLastConflictingIPAddr.setStatus('current')
agentSwitchLastConflictingMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 26, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchLastConflictingMacAddr.setStatus('current')
agentSwitchLastConflictReportedTime = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 26, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchLastConflictReportedTime.setStatus('current')
agentSwitchConflictIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 26, 6), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentSwitchConflictIPAddr.setStatus('current')
agentSwitchConflictMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 26, 7), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: agentSwitchConflictMacAddr.setStatus('current')
agentSwitchAddressConflictDetectionRun = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 26, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("run", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchAddressConflictDetectionRun.setStatus('current')
fastPathSwitchingTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0))
multipleUsersTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 1))
if mibBuilder.loadTexts: multipleUsersTrap.setStatus('current')
broadcastStormStartTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 2))
if mibBuilder.loadTexts: broadcastStormStartTrap.setStatus('obsolete')
broadcastStormEndTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 3))
if mibBuilder.loadTexts: broadcastStormEndTrap.setStatus('obsolete')
linkFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 4))
if mibBuilder.loadTexts: linkFailureTrap.setStatus('obsolete')
vlanRequestFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 5)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanRequestFailureTrap.setStatus('obsolete')
vlanDeleteLastTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 6)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanDeleteLastTrap.setStatus('current')
vlanDefaultCfgFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 7)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanDefaultCfgFailureTrap.setStatus('current')
vlanRestoreFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 8)).setObjects(("Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: vlanRestoreFailureTrap.setStatus('obsolete')
fanFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 9))
if mibBuilder.loadTexts: fanFailureTrap.setStatus('obsolete')
stpInstanceNewRootTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 10)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentStpMstId"))
if mibBuilder.loadTexts: stpInstanceNewRootTrap.setStatus('current')
stpInstanceTopologyChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 11)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentStpMstId"))
if mibBuilder.loadTexts: stpInstanceTopologyChangeTrap.setStatus('current')
powerSupplyStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 12))
if mibBuilder.loadTexts: powerSupplyStatusChangeTrap.setStatus('obsolete')
failedUserLoginTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 13))
if mibBuilder.loadTexts: failedUserLoginTrap.setStatus('current')
userLockoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 14))
if mibBuilder.loadTexts: userLockoutTrap.setStatus('current')
daiIntfErrorDisabledTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 15)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: daiIntfErrorDisabledTrap.setStatus('current')
stpInstanceLoopInconsistentStartTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 16)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentStpMstId"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: stpInstanceLoopInconsistentStartTrap.setStatus('current')
stpInstanceLoopInconsistentEndTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 17)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentStpMstId"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: stpInstanceLoopInconsistentEndTrap.setStatus('current')
dhcpSnoopingIntfErrorDisabledTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 18)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dhcpSnoopingIntfErrorDisabledTrap.setStatus('current')
noStartupConfigTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 19))
if mibBuilder.loadTexts: noStartupConfigTrap.setStatus('current')
agentSwitchIpAddressConflictTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 20)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentSwitchConflictIPAddr"), ("EdgeSwitch-SWITCHING-MIB", "agentSwitchConflictMacAddr"))
if mibBuilder.loadTexts: agentSwitchIpAddressConflictTrap.setStatus('current')
agentSwitchCpuRisingThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 21)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentSwitchCpuProcessRisingThreshold"), ("EdgeSwitch-SWITCHING-MIB", "agentSwitchCpuProcessName"))
if mibBuilder.loadTexts: agentSwitchCpuRisingThresholdTrap.setStatus('current')
agentSwitchCpuFallingThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 22)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentSwitchCpuProcessFallingThreshold"))
if mibBuilder.loadTexts: agentSwitchCpuFallingThresholdTrap.setStatus('current')
agentSwitchCpuFreeMemBelowThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 23)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentSwitchCpuProcessFreeMemoryThreshold"))
if mibBuilder.loadTexts: agentSwitchCpuFreeMemBelowThresholdTrap.setStatus('current')
agentSwitchCpuFreeMemAboveThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 24)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentSwitchCpuProcessFreeMemoryThreshold"))
if mibBuilder.loadTexts: agentSwitchCpuFreeMemAboveThresholdTrap.setStatus('current')
topologyChangeInitiatedTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 25)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentStpMstId"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: topologyChangeInitiatedTrap.setStatus('current')
loopDetectedTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 26)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: loopDetectedTrap.setStatus('current')
agentSwitchMbufRisingThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 27)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentSwitchMbufRisingThreshold"), ("EdgeSwitch-SWITCHING-MIB", "agentSwitchMbufsTotal"), ("EdgeSwitch-SWITCHING-MIB", "agentSwitchMbufsUsed"), ("EdgeSwitch-SWITCHING-MIB", "agentSwitchMbufsFree"))
if mibBuilder.loadTexts: agentSwitchMbufRisingThresholdTrap.setStatus('current')
agentSwitchMbufFallingThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 0, 28)).setObjects(("EdgeSwitch-SWITCHING-MIB", "agentSwitchMbufFallingThreshold"), ("EdgeSwitch-SWITCHING-MIB", "agentSwitchMbufsTotal"), ("EdgeSwitch-SWITCHING-MIB", "agentSwitchMbufsUsed"), ("EdgeSwitch-SWITCHING-MIB", "agentSwitchMbufsFree"))
if mibBuilder.loadTexts: agentSwitchMbufFallingThresholdTrap.setStatus('current')
agentSdmPreferConfigEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 27))
agentSdmPreferCurrentTemplate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 27, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dualIPv4andIPv6", 1), ("ipv4RoutingDefault", 2), ("ipv4DataCenter", 3), ("ipv4DataCenterPlus", 4), ("dualDataCenter", 5), ("dualMplsDataCenter", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSdmPreferCurrentTemplate.setStatus('current')
agentSdmPreferNextTemplate = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 27, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("default", 0), ("dualIPv4andIPv6", 1), ("ipv4RoutingDefault", 2), ("ipv4DataCenter", 3), ("ipv4DataCenterPlus", 4), ("dualDataCenter", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSdmPreferNextTemplate.setStatus('current')
agentSdmTemplateSummaryTable = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 28))
agentSdmTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 28, 1), )
if mibBuilder.loadTexts: agentSdmTemplateTable.setStatus('current')
agentSdmTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 28, 1, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSdmTemplateId"))
if mibBuilder.loadTexts: agentSdmTemplateEntry.setStatus('current')
agentSdmTemplateId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 28, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("dualIPv4andIPv6", 1), ("ipv4RoutingDefault", 2), ("ipv4DataCenter", 3), ("ipv4DataCenterPlus", 4), ("dualDataCenter", 5))))
if mibBuilder.loadTexts: agentSdmTemplateId.setStatus('current')
agentArpEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 28, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentArpEntries.setStatus('current')
agentIPv4UnicastRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 28, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv4UnicastRoutes.setStatus('current')
agentIPv6NdpEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 28, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6NdpEntries.setStatus('current')
agentIPv6UnicastRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 28, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6UnicastRoutes.setStatus('current')
agentEcmpNextHops = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 28, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEcmpNextHops.setStatus('current')
agentIPv4MulticastRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 28, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv4MulticastRoutes.setStatus('current')
agentIPv6MulticastRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 28, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIPv6MulticastRoutes.setStatus('current')
agentSwitchCutThroughGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 29))
agentSwitchCutThroughConfigMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 29, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCutThroughConfigMode.setStatus('current')
agentSwitchCutThroughRunningModeStatus = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 29, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("not-supported", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCutThroughRunningModeStatus.setStatus('current')
agentSwitchCutThroughConfiguredModeStatus = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 29, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("not-supported", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCutThroughConfiguredModeStatus.setStatus('current')
agentPortTypeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 30))
agentPortType40GigBaseX = ObjectIdentity((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 30, 1))
if mibBuilder.loadTexts: agentPortType40GigBaseX.setStatus('current')
agentPrivateVlanGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31))
agentPrivateVlanTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31, 1), )
if mibBuilder.loadTexts: agentPrivateVlanTable.setStatus('current')
agentPrivateVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31, 1, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: agentPrivateVlanEntry.setStatus('current')
agentPrivateVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 1), ("isolated", 2), ("community", 3), ("unconfigured", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPrivateVlanType.setStatus('current')
agentPrivateVlanAssociate = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31, 1, 1, 2), VlanList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPrivateVlanAssociate.setStatus('current')
agentPrivateVlanIntfAssocTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31, 2), )
if mibBuilder.loadTexts: agentPrivateVlanIntfAssocTable.setStatus('current')
agentPrivateVlanIntfAssocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentPrivateVlanIntfAssocEntry.setStatus('current')
agentPrivateVlanIntfAssocHostPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPrivateVlanIntfAssocHostPrimary.setStatus('current')
agentPrivateVlanIntfAssocHostSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPrivateVlanIntfAssocHostSecondary.setStatus('current')
agentPrivateVlanIntfAssocPromiscuousPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPrivateVlanIntfAssocPromiscuousPrimary.setStatus('current')
agentPrivateVlanIntfAssocPromiscuousSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31, 2, 1, 4), VlanList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPrivateVlanIntfAssocPromiscuousSecondary.setStatus('current')
agentPrivateVlanIntfAssocOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 31, 2, 1, 5), VlanList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPrivateVlanIntfAssocOperational.setStatus('current')
agentSwitchPrivateGroupConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32))
agentSwitchPrivateGroupTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32, 1), )
if mibBuilder.loadTexts: agentSwitchPrivateGroupTable.setStatus('current')
agentSwitchPrivateGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32, 1, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchPrivateGroupId"))
if mibBuilder.loadTexts: agentSwitchPrivateGroupEntry.setStatus('current')
agentSwitchPrivateGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentSwitchPrivateGroupId.setStatus('current')
agentSwitchPrivateGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchPrivateGroupName.setStatus('current')
agentSwitchPrivateGroupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("isolated", 1), ("community", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchPrivateGroupMode.setStatus('current')
agentSwitchPrivateGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentSwitchPrivateGroupRowStatus.setStatus('current')
agentSwitchPrivateGroupPortTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32, 2), )
if mibBuilder.loadTexts: agentSwitchPrivateGroupPortTable.setStatus('current')
agentSwitchPrivateGroupPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32, 2, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentSwitchPrivateGroupPortGroupId"))
if mibBuilder.loadTexts: agentSwitchPrivateGroupPortEntry.setStatus('current')
agentSwitchPrivateGroupPortGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentSwitchPrivateGroupPortGroupId.setStatus('current')
agentSwitchPrivateGroupPortGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchPrivateGroupPortGroupName.setStatus('current')
agentSwitchPrivateGroupPortPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 32, 2, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchPrivateGroupPortPortList.setStatus('current')
agentDhcpv6SnoopingConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33))
agentDhcpv6SnoopingAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpv6SnoopingAdminMode.setStatus('current')
agentDhcpv6SnoopingVerifyMac = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpv6SnoopingVerifyMac.setStatus('current')
agentDhcpv6SnoopingVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 3), )
if mibBuilder.loadTexts: agentDhcpv6SnoopingVlanConfigTable.setStatus('current')
agentDhcpv6SnoopingVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 3, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentDhcpv6SnoopingVlanIndex"))
if mibBuilder.loadTexts: agentDhcpv6SnoopingVlanConfigEntry.setStatus('current')
agentDhcpv6SnoopingVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 3, 1, 1), VlanIndex())
if mibBuilder.loadTexts: agentDhcpv6SnoopingVlanIndex.setStatus('current')
agentDhcpv6SnoopingVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpv6SnoopingVlanEnable.setStatus('current')
agentDhcpv6SnoopingIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 4), )
if mibBuilder.loadTexts: agentDhcpv6SnoopingIfConfigTable.setStatus('current')
agentDhcpv6SnoopingIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDhcpv6SnoopingIfConfigEntry.setStatus('current')
agentDhcpv6SnoopingIfTrustEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpv6SnoopingIfTrustEnable.setStatus('current')
agentDhcpv6SnoopingIfLogEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 4, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpv6SnoopingIfLogEnable.setStatus('current')
agentDhcpv6SnoopingIfRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 300), )).clone(-1)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpv6SnoopingIfRateLimit.setStatus('current')
agentDhcpv6SnoopingIfBurstInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 15), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpv6SnoopingIfBurstInterval.setStatus('current')
agentIpv6sgIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 5), )
if mibBuilder.loadTexts: agentIpv6sgIfConfigTable.setStatus('current')
agentIpv6sgIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentIpv6sgIfConfigEntry.setStatus('current')
agentIpv6sgIfVerifySource = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 5, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6sgIfVerifySource.setStatus('current')
agentIpv6sgIfPortSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 5, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6sgIfPortSecurity.setStatus('current')
agentDhcpv6SnoopingStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpv6SnoopingStatsReset.setStatus('current')
agentDhcpv6SnoopingStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 7), )
if mibBuilder.loadTexts: agentDhcpv6SnoopingStatsTable.setStatus('current')
agentDhcpv6SnoopingStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentDhcpv6SnoopingStatsEntry.setStatus('current')
agentDhcpv6SnoopingMacVerifyFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpv6SnoopingMacVerifyFailures.setStatus('current')
agentDhcpv6SnoopingInvalidClientMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpv6SnoopingInvalidClientMessages.setStatus('current')
agentDhcpv6SnoopingInvalidServerMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcpv6SnoopingInvalidServerMessages.setStatus('current')
agentStaticIpv6sgBindingTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 8), )
if mibBuilder.loadTexts: agentStaticIpv6sgBindingTable.setStatus('current')
agentStaticIpv6sgBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 8, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentStaticIpv6sgBindingIfIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentStaticIpv6sgBindingVlanId"), (0, "EdgeSwitch-SWITCHING-MIB", "agentStaticIpv6sgBindingIpAddr"), (0, "EdgeSwitch-SWITCHING-MIB", "agentStaticIpv6sgBindingMacAddr"))
if mibBuilder.loadTexts: agentStaticIpv6sgBindingEntry.setStatus('current')
agentStaticIpv6sgBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 8, 1, 1), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpv6sgBindingIfIndex.setStatus('current')
agentStaticIpv6sgBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 8, 1, 2), VlanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpv6sgBindingVlanId.setStatus('current')
agentStaticIpv6sgBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 8, 1, 3), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpv6sgBindingIpAddr.setStatus('current')
agentStaticIpv6sgBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 8, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpv6sgBindingMacAddr.setStatus('current')
agentStaticIpv6sgBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticIpv6sgBindingRowStatus.setStatus('current')
agentDynamicIpv6sgBindingTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 9), )
if mibBuilder.loadTexts: agentDynamicIpv6sgBindingTable.setStatus('current')
agentDynamicIpv6sgBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 9, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentDynamicIpv6sgBindingIfIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentDynamicIpv6sgBindingVlanId"), (0, "EdgeSwitch-SWITCHING-MIB", "agentDynamicIpv6sgBindingIpAddr"), (0, "EdgeSwitch-SWITCHING-MIB", "agentDynamicIpv6sgBindingMacAddr"))
if mibBuilder.loadTexts: agentDynamicIpv6sgBindingEntry.setStatus('current')
agentDynamicIpv6sgBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 9, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpv6sgBindingIfIndex.setStatus('current')
agentDynamicIpv6sgBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 9, 1, 2), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpv6sgBindingVlanId.setStatus('current')
agentDynamicIpv6sgBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 9, 1, 3), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpv6sgBindingIpAddr.setStatus('current')
agentDynamicIpv6sgBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 9, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicIpv6sgBindingMacAddr.setStatus('current')
agentStaticDsv6BindingTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 10), )
if mibBuilder.loadTexts: agentStaticDsv6BindingTable.setStatus('current')
agentStaticDsv6BindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 10, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentStaticDsv6BindingMacAddr"))
if mibBuilder.loadTexts: agentStaticDsv6BindingEntry.setStatus('current')
agentStaticDsv6BindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 10, 1, 1), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsv6BindingIfIndex.setStatus('current')
agentStaticDsv6BindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 10, 1, 2), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsv6BindingVlanId.setStatus('current')
agentStaticDsv6BindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 10, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsv6BindingMacAddr.setStatus('current')
agentStaticDsv6BindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 10, 1, 4), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsv6BindingIpAddr.setStatus('current')
agentStaticDsv6BindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 10, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentStaticDsv6BindingRowStatus.setStatus('current')
agentDynamicDsv6BindingTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 11), )
if mibBuilder.loadTexts: agentDynamicDsv6BindingTable.setStatus('current')
agentDynamicDsv6BindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 11, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentDynamicDsv6BindingMacAddr"))
if mibBuilder.loadTexts: agentDynamicDsv6BindingEntry.setStatus('current')
agentDynamicDsv6BindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 11, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsv6BindingIfIndex.setStatus('current')
agentDynamicDsv6BindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 11, 1, 2), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsv6BindingVlanId.setStatus('current')
agentDynamicDsv6BindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 11, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsv6BindingMacAddr.setStatus('current')
agentDynamicDsv6BindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 11, 1, 4), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsv6BindingIpAddr.setStatus('current')
agentDynamicDsv6BindingLeaseRemainingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 11, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDynamicDsv6BindingLeaseRemainingTime.setStatus('current')
agentDhcpv6SnoopingRemoteFileName = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpv6SnoopingRemoteFileName.setStatus('current')
agentDhcpv6SnoopingRemoteIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpv6SnoopingRemoteIpAddr.setStatus('current')
agentDhcpv6SnoopingStoreInterval = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 8, 33, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDhcpv6SnoopingStoreInterval.setStatus('current')
agentPvrstpSwitchConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15))
agentPvstpAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPvstpAdminMode.setStatus('current')
agentPvrstpAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPvrstpAdminMode.setStatus('current')
agentPvrstpUplinkFast = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPvrstpUplinkFast.setStatus('current')
agentPvrstpBackboneFast = MibScalar((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPvrstpBackboneFast.setStatus('current')
agentPvrstpVlanTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 5), )
if mibBuilder.loadTexts: agentPvrstpVlanTable.setStatus('current')
agentPvrstpVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 5, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentPvrstpVlanTableIndex"))
if mibBuilder.loadTexts: agentPvrstpVlanEntry.setStatus('current')
agentPvrstpVlanTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 5, 1, 1), VlanId())
if mibBuilder.loadTexts: agentPvrstpVlanTableIndex.setStatus('current')
agentPvrstpVlanRootPriSec = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPvrstpVlanRootPriSec.setStatus('current')
agentPvrstpVlanHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPvrstpVlanHelloTime.setStatus('current')
agentPvrstpVlanFwdDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPvrstpVlanFwdDelayTime.setStatus('current')
agentPvrstpVlanMaxAgeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPvrstpVlanMaxAgeTime.setStatus('current')
agentPvrstpPortVlanTable = MibTable((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 6), )
if mibBuilder.loadTexts: agentPvrstpPortVlanTable.setStatus('current')
agentPvrstpPortVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 6, 1), ).setIndexNames((0, "EdgeSwitch-SWITCHING-MIB", "agentPvrstpPortIndex"), (0, "EdgeSwitch-SWITCHING-MIB", "agentPvrstpVlanIndex"))
if mibBuilder.loadTexts: agentPvrstpPortVlanEntry.setStatus('current')
agentPvrstpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentPvrstpPortIndex.setStatus('current')
agentPvrstpVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 6, 1, 2), Unsigned32())
if mibBuilder.loadTexts: agentPvrstpVlanIndex.setStatus('current')
agentPvrstpPortVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPvrstpPortVlanPriority.setStatus('current')
agentPvrstpVlanCost = MibTableColumn((1, 3, 6, 1, 4, 1, 4413, 1, 1, 1, 2, 15, 15, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPvrstpVlanCost.setStatus('current')
mibBuilder.exportSymbols("EdgeSwitch-SWITCHING-MIB", agentServicePortIpv6ConfigProtocol=agentServicePortIpv6ConfigProtocol, agentStpMstPortEntry=agentStpMstPortEntry, agentSwitchportGeneralTaggedVlanList=agentSwitchportGeneralTaggedVlanList, agentSnmpTrapFlagsConfigGroup=agentSnmpTrapFlagsConfigGroup, agentUserConfigDefaultAuthenticationList=agentUserConfigDefaultAuthenticationList, agentIASUserConfigTable=agentIASUserConfigTable, noStartupConfigTrap=noStartupConfigTrap, agentSwitchFdbAddressAgingTimeout=agentSwitchFdbAddressAgingTimeout, agentSwitchSnoopingQuerierCfgEntry=agentSwitchSnoopingQuerierCfgEntry, agentTrapLogEntry=agentTrapLogEntry, agentCmdsAccountingListEntry=agentCmdsAccountingListEntry, agentSwitchSnoopingQuerierAdminMode=agentSwitchSnoopingQuerierAdminMode, agentNetworkDhcp6ClientDuid=agentNetworkDhcp6ClientDuid, agentPortMirrorRemoteVlan=agentPortMirrorRemoteVlan, agentSpanningTreeMode=agentSpanningTreeMode, agentSwitchSnoopingQuerierVlanEntry=agentSwitchSnoopingQuerierVlanEntry, agentNetworkWebMode=agentNetworkWebMode, agentSwitchSnoopingIntfFastLeaveAdminMode=agentSwitchSnoopingIntfFastLeaveAdminMode, agentSwitchProtectedPortTable=agentSwitchProtectedPortTable, agentSwitchCpuFreeMemAboveThresholdTrap=agentSwitchCpuFreeMemAboveThresholdTrap, agentStpCstPortTopologyChangeAck=agentStpCstPortTopologyChangeAck, agentPortUnicastControlThresholdUnit=agentPortUnicastControlThresholdUnit, agentIpsgIfPortSecurity=agentIpsgIfPortSecurity, agentInventoryBurnedInMacAddress=agentInventoryBurnedInMacAddress, agentLagDetailedConfigEntry=agentLagDetailedConfigEntry, agentDhcpL2RelayRemoteIdVlanEnable=agentDhcpL2RelayRemoteIdVlanEnable, agentSwitchSnoopingGroup=agentSwitchSnoopingGroup, agentPortMirrorIpAccessListNumber=agentPortMirrorIpAccessListNumber, agentPortVoiceVlanID=agentPortVoiceVlanID, Ipv6AddressPrefix=Ipv6AddressPrefix, agentProtocolGroupCreate=agentProtocolGroupCreate, agentSwitchMFDBCurrentEntries=agentSwitchMFDBCurrentEntries, agentPortDVlanTagMode=agentPortDVlanTagMode, agentDynamicDsv6BindingTable=agentDynamicDsv6BindingTable, agentSupportedMibTable=agentSupportedMibTable, agentSwitchPrivateGroupConfigGroup=agentSwitchPrivateGroupConfigGroup, agentSwitchVlanMacAssociationEntry=agentSwitchVlanMacAssociationEntry, agentSwitchSnoopingVlanMRPExpirationTime=agentSwitchSnoopingVlanMRPExpirationTime, agentFactoryDefaultsErase=agentFactoryDefaultsErase, agentStpMstPortTable=agentStpMstPortTable, agentPrivateVlanIntfAssocPromiscuousPrimary=agentPrivateVlanIntfAssocPromiscuousPrimary, agentTransferUploadPassword=agentTransferUploadPassword, agentServicePortConfigProtocol=agentServicePortConfigProtocol, agentPortMirrorRemoteVlanRowStatus=agentPortMirrorRemoteVlanRowStatus, agentArpAclTable=agentArpAclTable, agentServicePortIpv6AddrStatus=agentServicePortIpv6AddrStatus, agentSwitchVlanSubnetAssociationSubnetMask=agentSwitchVlanSubnetAssociationSubnetMask, agentStpMstDesignatedPortId=agentStpMstDesignatedPortId, agentPasswordManagementStrengthMinCharacterClasses=agentPasswordManagementStrengthMinCharacterClasses, agentPrivateVlanIntfAssocPromiscuousSecondary=agentPrivateVlanIntfAssocPromiscuousSecondary, agentSystemGroup=agentSystemGroup, agentSwitchportGeneralUntaggedVlanList=agentSwitchportGeneralUntaggedVlanList, agentPvrstpUplinkFast=agentPvrstpUplinkFast, agentSwitchSnoopingQuerierLastQuerierAddress=agentSwitchSnoopingQuerierLastQuerierAddress, agentPrivateVlanTable=agentPrivateVlanTable, agentStpCstPortLoopGuard=agentStpCstPortLoopGuard, agentStaticIpsgBindingTable=agentStaticIpsgBindingTable, agentDhcpSnoopingIfConfigTable=agentDhcpSnoopingIfConfigTable, agentConfigGroup=agentConfigGroup, agentPortType=agentPortType, agentSwitchMFDBDescription=agentSwitchMFDBDescription, agentUserConfigTable=agentUserConfigTable, agentExecAccountingListName=agentExecAccountingListName, agentDhcpL2RelayStatsEntry=agentDhcpL2RelayStatsEntry, agentProtocolGroupVlanId=agentProtocolGroupVlanId, agentPasswordManagementStrengthMinNumericNumbers=agentPasswordManagementStrengthMinNumericNumbers, agentServicePortDhcp6SOLICITMessagesSent=agentServicePortDhcp6SOLICITMessagesSent, agentImage1=agentImage1, agentSwitchDVlanTagPrimaryTPid=agentSwitchDVlanTagPrimaryTPid, agentStpCstBridgeMaxHops=agentStpCstBridgeMaxHops, agentStpCstBridgeHoldCount=agentStpCstBridgeHoldCount, agentHTTPJavaMode=agentHTTPJavaMode, agentSwitchSnoopSSMFDBVlanIndex=agentSwitchSnoopSSMFDBVlanIndex, agentTransferUploadDataType=agentTransferUploadDataType, agentTransferDownloadRemoteFilename=agentTransferDownloadRemoteFilename, agentNetworkIpv6AddrPrefix=agentNetworkIpv6AddrPrefix, agentSwitchSnoopingQuerierElectionParticipateMode=agentSwitchSnoopingQuerierElectionParticipateMode, agentCmdsAuthorizationListName=agentCmdsAuthorizationListName, agentDhcpSnoopingInvalidClientMessages=agentDhcpSnoopingInvalidClientMessages, agentLagDetailedPortStatus=agentLagDetailedPortStatus, agentPasswordManagementStrengthMaxRepeatedCharacters=agentPasswordManagementStrengthMaxRepeatedCharacters, agentSwitchMbufAllocFails=agentSwitchMbufAllocFails, agentTransferDownloadStart=agentTransferDownloadStart, agentSwitchVlanSubnetAssociationIPAddress=agentSwitchVlanSubnetAssociationIPAddress, agentDhcpSnoopingStatsEntry=agentDhcpSnoopingStatsEntry, agentSwitchSnoopingCfgEntry=agentSwitchSnoopingCfgEntry, agentStpCstPortRootGuard=agentStpCstPortRootGuard, agentUserEncryptionType=agentUserEncryptionType, agentSnmpCommunityAccessMode=agentSnmpCommunityAccessMode, agentSwitchSnoopingPortMask=agentSwitchSnoopingPortMask, agentDhcpClientVendorClassIdMode=agentDhcpClientVendorClassIdMode, agentAutoinstallStatus=agentAutoinstallStatus, agentDhcpSnoopingIfRateLimit=agentDhcpSnoopingIfRateLimit, agentProtocolGroupName=agentProtocolGroupName, agentCmdsAuthorizationListMethod3=agentCmdsAuthorizationListMethod3, agentStaticIpsgBindingVlanId=agentStaticIpsgBindingVlanId, agentDhcpL2RelayAdminMode=agentDhcpL2RelayAdminMode, agentTransferDownloadUsername=agentTransferDownloadUsername, agentSnmpTrapSourceInterface=agentSnmpTrapSourceInterface, agentTransferDownloadStatus=agentTransferDownloadStatus, agentPrivateVlanGroup=agentPrivateVlanGroup, agentDhcpSnoopingVlanConfigEntry=agentDhcpSnoopingVlanConfigEntry, agentStpCstRegionalRootPathCost=agentStpCstRegionalRootPathCost, agentDhcpSnoopingMacVerifyFailures=agentDhcpSnoopingMacVerifyFailures, agentSwitchVlanStaticMrouterAdminMode=agentSwitchVlanStaticMrouterAdminMode, agentProtocolGroupEntry=agentProtocolGroupEntry, agentDaiIPValidate=agentDaiIPValidate, agentSwitchSnoopingVlanMaxResponseTime=agentSwitchSnoopingVlanMaxResponseTime, agentStpPortStatsStpBpduTx=agentStpPortStatsStpBpduTx, agentSwitchMFDBForwardingPortMask=agentSwitchMFDBForwardingPortMask, agentDhcpSnoopingStoreInterval=agentDhcpSnoopingStoreInterval, agentPvrstpVlanTable=agentPvrstpVlanTable, agentInventorySerialNumber=agentInventorySerialNumber, agentSnmpBroadcastStormTrapFlag=agentSnmpBroadcastStormTrapFlag, agentArpAclRuleMatchSenderMacAddr=agentArpAclRuleMatchSenderMacAddr, agentLoginSessionTable=agentLoginSessionTable, agentPortSTPState=agentPortSTPState, agentPasswordManagementStrengthMaxConsecutiveCharacters=agentPasswordManagementStrengthMaxConsecutiveCharacters, agentDaiVlanDhcpPermits=agentDaiVlanDhcpPermits, agentDynamicIpsgBindingEntry=agentDynamicIpsgBindingEntry, agentDhcpv6SnoopingInvalidClientMessages=agentDhcpv6SnoopingInvalidClientMessages, agentSwitchMbufsUsed=agentSwitchMbufsUsed, agentSwitchSnoopSSMSrcListVlanId=agentSwitchSnoopSSMSrcListVlanId, agentSnmpTrapReceiverIpv6Address=agentSnmpTrapReceiverIpv6Address, agentStaticDsv6BindingIfIndex=agentStaticDsv6BindingIfIndex, agentDhcpL2RelayTrustedClntMsgsWithoutOptn82=agentDhcpL2RelayTrustedClntMsgsWithoutOptn82, agentIASUserConfigCreate=agentIASUserConfigCreate, agentSwitchPortDVlanTagMode=agentSwitchPortDVlanTagMode, agentSpanningTreeConfigGroup=agentSpanningTreeConfigGroup, agentStpPortStatsRstpBpduRx=agentStpPortStatsRstpBpduRx, agentArpAclRuleTable=agentArpAclRuleTable, agentDynamicDsBindingMacAddr=agentDynamicDsBindingMacAddr, agentStpCstPortTable=agentStpCstPortTable, agentLagDetailedConfigTable=agentLagDetailedConfigTable, agentSwitchCpuProcessMemFree=agentSwitchCpuProcessMemFree, agentSwitchMFDBSummaryVlanId=agentSwitchMFDBSummaryVlanId, agentSwitchPortDVlanTagEntry=agentSwitchPortDVlanTagEntry, agentSwitchPortDVlanTagCustomerId=agentSwitchPortDVlanTagCustomerId, agentStpPortStatsMstpBpduTx=agentStpPortStatsMstpBpduTx, agentStpMstTable=agentStpMstTable, agentDaiConfigGroup=agentDaiConfigGroup, agentUserAccessLevel=agentUserAccessLevel, agentServicePortDhcp6StatsReset=agentServicePortDhcp6StatsReset, agentDynamicDsv6BindingVlanId=agentDynamicDsv6BindingVlanId, agentPrivateVlanType=agentPrivateVlanType, VlanList=VlanList, agentSwitchCpuProcessName=agentSwitchCpuProcessName, agentProtocolGroupStatus=agentProtocolGroupStatus, agentSwitchMbufFallingThresholdTrap=agentSwitchMbufFallingThresholdTrap, agentUserIndex=agentUserIndex, agentDhcpv6SnoopingVerifyMac=agentDhcpv6SnoopingVerifyMac, agentSwitchportGeneralForbiddenVlanList=agentSwitchportGeneralForbiddenVlanList, agentSwitchSnoopingQuerierOperVersion=agentSwitchSnoopingQuerierOperVersion, agentSwitchMbufAllocAttempts=agentSwitchMbufAllocAttempts, agentSwitchPortDVlanTagTPid=agentSwitchPortDVlanTagTPid, agentStpCstPortId=agentStpCstPortId, agentSwitchMFDBGroup=agentSwitchMFDBGroup, agentSwitchSnoopSSMGroupVlanId=agentSwitchSnoopSSMGroupVlanId, agentNetworkConfigGroup=agentNetworkConfigGroup, agentSwitchProtectedPortGroupName=agentSwitchProtectedPortGroupName, agentHTTPWebMgmtPortNum=agentHTTPWebMgmtPortNum, agentSwitchProtectedPortConfigGroup=agentSwitchProtectedPortConfigGroup, agentProtocolGroupProtocolARP=agentProtocolGroupProtocolARP, agentNetworkIpv6AddrStatus=agentNetworkIpv6AddrStatus, agentUserAuthenticationConfigEntry=agentUserAuthenticationConfigEntry, agentCmdsAccountingListCreate=agentCmdsAccountingListCreate, agentSwitchVlanSubnetAssociationTable=agentSwitchVlanSubnetAssociationTable, agentPortVoiceVlanDataPriorityMode=agentPortVoiceVlanDataPriorityMode, agentSwitchCutThroughConfiguredModeStatus=agentSwitchCutThroughConfiguredModeStatus, agentSwitchMbufRisingThreshold=agentSwitchMbufRisingThreshold, agentDaiVlanSrcMacFailures=agentDaiVlanSrcMacFailures, agentAuthenticationListIndex=agentAuthenticationListIndex, agentIASUserConfigEntry=agentIASUserConfigEntry, agentStpCstRootFwdDelay=agentStpCstRootFwdDelay, agentResetSystem=agentResetSystem, agentNetworkBurnedInMacAddress=agentNetworkBurnedInMacAddress, agentTransferUploadImagename=agentTransferUploadImagename, agentSwitchSnoopSSMFDBGroupAddressType=agentSwitchSnoopSSMFDBGroupAddressType, agentLoginSessionEntry=agentLoginSessionEntry, agentDynamicIpv6sgBindingVlanId=agentDynamicIpv6sgBindingVlanId, agentSerialHWFlowControlMode=agentSerialHWFlowControlMode, agentSwitchStaticMacFilteringTable=agentSwitchStaticMacFilteringTable, agentSwitchVlanMacAssociationVlanId=agentSwitchVlanMacAssociationVlanId, agentSwitchSnoopingQuerierExpiryInterval=agentSwitchSnoopingQuerierExpiryInterval, agentSwitchSnoopingIntfMaxResponseTime=agentSwitchSnoopingIntfMaxResponseTime, agentClassOfServicePortClass=agentClassOfServicePortClass, agentUserEncryptionPassword=agentUserEncryptionPassword, agentExecAccountingMethodType=agentExecAccountingMethodType, agentSnmpCommunityStatus=agentSnmpCommunityStatus, agentDaiDstMacValidate=agentDaiDstMacValidate, agentSwitchMbufRisingThresholdTrap=agentSwitchMbufRisingThresholdTrap, agentLagConfigGroup=agentLagConfigGroup, agentPortDVlanTagEthertype=agentPortDVlanTagEthertype, agentNetworkIpv6AddressAutoConfig=agentNetworkIpv6AddressAutoConfig, agentSwitchVoiceVlanDeviceTable=agentSwitchVoiceVlanDeviceTable, agentMirroredPortIfIndex=agentMirroredPortIfIndex, agentStpCstHelloTime=agentStpCstHelloTime, agentStaticIpsgBindingIpAddr=agentStaticIpsgBindingIpAddr, agentDhcpL2RelayVlanEnable=agentDhcpL2RelayVlanEnable, agentStaticIpv6sgBindingRowStatus=agentStaticIpv6sgBindingRowStatus, agentStaticDsv6BindingEntry=agentStaticDsv6BindingEntry, agentSwitchSnoopSSMFDBSourceAddress=agentSwitchSnoopSSMFDBSourceAddress, agentPasswordManagementMinLength=agentPasswordManagementMinLength, agentSwitchMFDBSummaryTable=agentSwitchMFDBSummaryTable, agentSwitchAddressConflictDetectionRun=agentSwitchAddressConflictDetectionRun, agentPrivateVlanEntry=agentPrivateVlanEntry, agentSwitchPortDVlanTagTable=agentSwitchPortDVlanTagTable, agentSdmPreferNextTemplate=agentSdmPreferNextTemplate, agentExecAccountingListMethod2=agentExecAccountingListMethod2, agentSwitchSnoopSSMGroupIfIndex=agentSwitchSnoopSSMGroupIfIndex, agentSwitchMFDBFilteringPortMask=agentSwitchMFDBFilteringPortMask, agentPasswordMgmtStrengthExcludeKeyword=agentPasswordMgmtStrengthExcludeKeyword, agentHTTPHardTimeout=agentHTTPHardTimeout, agentCmdsAuthorizationListMethod2=agentCmdsAuthorizationListMethod2, agentDhcpv6SnoopingIfBurstInterval=agentDhcpv6SnoopingIfBurstInterval, agentServicePortIPAddress=agentServicePortIPAddress, agentInventoryMachineModel=agentInventoryMachineModel, agentServicePortDhcp6REBINDMessagesSent=agentServicePortDhcp6REBINDMessagesSent, agentProbePortIfIndex=agentProbePortIfIndex, agentPortMirrorTypeEntry=agentPortMirrorTypeEntry, agentLoginSessionInetAddress=agentLoginSessionInetAddress, agentExecAccountingListMethod1=agentExecAccountingListMethod1, agentSwitchStaticMacFilteringSourcePortMask=agentSwitchStaticMacFilteringSourcePortMask, agentSwitchMFDBSummaryMacAddress=agentSwitchMFDBSummaryMacAddress, agentAutoinstallOperationalMode=agentAutoinstallOperationalMode, agentDynamicDsBindingIpAddr=agentDynamicDsBindingIpAddr, agentClearPasswords=agentClearPasswords, agentArpAclName=agentArpAclName, agentDhcpL2RelayVlanConfigEntry=agentDhcpL2RelayVlanConfigEntry, agentSwitchCpuFallingThresholdTrap=agentSwitchCpuFallingThresholdTrap, agentSwitchSnoopingQuerierLastQuerierVersion=agentSwitchSnoopingQuerierLastQuerierVersion, agentPortMirrorDestinationPort=agentPortMirrorDestinationPort, agentDaiVlanAclPermits=agentDaiVlanAclPermits, Ipv6IfIndexOrZero=Ipv6IfIndexOrZero, PYSNMP_MODULE_ID=fastPathSwitching, agentDhcpSnoopingInvalidServerMessages=agentDhcpSnoopingInvalidServerMessages, agentStaticDsv6BindingTable=agentStaticDsv6BindingTable, agentSwitchMFDBTable=agentSwitchMFDBTable, agentStpForceVersion=agentStpForceVersion, agentStpConfigName=agentStpConfigName, agentExecAuthorizationListStatus=agentExecAuthorizationListStatus, agentSwitchVlanSubnetAssociationRowStatus=agentSwitchVlanSubnetAssociationRowStatus, agentPvrstpVlanFwdDelayTime=agentPvrstpVlanFwdDelayTime, agentSerialStopBits=agentSerialStopBits, agentLagDetailedLagIndex=agentLagDetailedLagIndex, agentTransferDownloadPassword=agentTransferDownloadPassword, agentStpMstTopologyChangeParm=agentStpMstTopologyChangeParm, agentSwitchSnoopingMulticastControlFramesProcessed=agentSwitchSnoopingMulticastControlFramesProcessed, agentArpAclEntry=agentArpAclEntry, agentStaticDsv6BindingMacAddr=agentStaticDsv6BindingMacAddr, agentIASUserIndex=agentIASUserIndex, fastPathSwitchingTraps=fastPathSwitchingTraps, agentSwitchCpuCosQIndex=agentSwitchCpuCosQIndex, agentSdmTemplateEntry=agentSdmTemplateEntry)
mibBuilder.exportSymbols("EdgeSwitch-SWITCHING-MIB", agentPvrstpSwitchConfigGroup=agentPvrstpSwitchConfigGroup, agentStpCstDesignatedCost=agentStpCstDesignatedCost, agentDhcpv6SnoopingConfigGroup=agentDhcpv6SnoopingConfigGroup, agentDhcpv6SnoopingStatsTable=agentDhcpv6SnoopingStatsTable, agentSwitchMbufEntry=agentSwitchMbufEntry, agentProtocolGroupId=agentProtocolGroupId, agentExecAuthorizationListCreate=agentExecAuthorizationListCreate, agentSwitchVoiceVLANAdminMode=agentSwitchVoiceVLANAdminMode, agentDaiVlanDhcpDrops=agentDaiVlanDhcpDrops, agentSerialBaudrate=agentSerialBaudrate, agentServicePortIpv6AddrPrefixLength=agentServicePortIpv6AddrPrefixLength, agentExecAccountingListTable=agentExecAccountingListTable, agentSwitchDVlanTagEthertype=agentSwitchDVlanTagEthertype, agentStpCstPortEdge=agentStpCstPortEdge, agentDigitalSignatureConfigGroup=agentDigitalSignatureConfigGroup, agentPortDot3FlowControlMode=agentPortDot3FlowControlMode, agentSwitchMFDBSummaryForwardingPortMask=agentSwitchMFDBSummaryForwardingPortMask, agentDaiVlanIpValidFailures=agentDaiVlanIpValidFailures, agentSwitchSnoopingQuerierVlanOperMode=agentSwitchSnoopingQuerierVlanOperMode, agentCLIConfigGroup=agentCLIConfigGroup, agentStpCstBridgePriority=agentStpCstBridgePriority, agentSnmpTrapReceiverAddressType=agentSnmpTrapReceiverAddressType, agentSwitchAddressConflictDetectionStatus=agentSwitchAddressConflictDetectionStatus, agentSwitchMFDBMaxTableEntries=agentSwitchMFDBMaxTableEntries, agentStpPortStatsMstpBpduRx=agentStpPortStatsMstpBpduRx, agentSwitchSnoopSSMGroupEntry=agentSwitchSnoopSSMGroupEntry, agentServicePortIpv6AddressAutoConfig=agentServicePortIpv6AddressAutoConfig, agentSwitchMFDBEntry=agentSwitchMFDBEntry, agentSwitchportConfigEntry=agentSwitchportConfigEntry, agentSupportedMibName=agentSupportedMibName, agentServicePortDhcp6ClientDuid=agentServicePortDhcp6ClientDuid, agentClearPortStats=agentClearPortStats, agentStpPortStatsStpBpduRx=agentStpPortStatsStpBpduRx, agentDaiIfConfigEntry=agentDaiIfConfigEntry, agentSwitchAddressConflictDetectionStatusReset=agentSwitchAddressConflictDetectionStatusReset, agentNetworkIpv6Gateway=agentNetworkIpv6Gateway, agentPrivateVlanIntfAssocHostPrimary=agentPrivateVlanIntfAssocHostPrimary, agentPortMulticastControlMode=agentPortMulticastControlMode, agentPasswordManagementPasswordStrengthCheck=agentPasswordManagementPasswordStrengthCheck, agentStpCstPortBpduGuardEffect=agentStpCstPortBpduGuardEffect, agentServicePortStatsGroup=agentServicePortStatsGroup, agentStpPortUpTime=agentStpPortUpTime, agentStpCstExtPortPathCost=agentStpCstExtPortPathCost, Ipv6IfIndex=Ipv6IfIndex, agentDhcpL2RelayUntrustedClntMsgsWithOptn82=agentDhcpL2RelayUntrustedClntMsgsWithOptn82, agentPasswordManagementStrengthMinSpecialCharacters=agentPasswordManagementStrengthMinSpecialCharacters, agentDhcpSnoopingIfBurstInterval=agentDhcpSnoopingIfBurstInterval, agentStaticDsv6BindingRowStatus=agentStaticDsv6BindingRowStatus, agentSwitchCpuProcessRisingThreshold=agentSwitchCpuProcessRisingThreshold, agentSwitchSnoopSSMGroupLastReporter=agentSwitchSnoopSSMGroupLastReporter, agentSwitchMFDBProtocolType=agentSwitchMFDBProtocolType, agentStpCstBridgeHoldTime=agentStpCstBridgeHoldTime, agentDynamicDsv6BindingLeaseRemainingTime=agentDynamicDsv6BindingLeaseRemainingTime, agentPortPhysicalMode=agentPortPhysicalMode, agentExecAccountingGroup=agentExecAccountingGroup, agentUserStatus=agentUserStatus, agentStpPortEntry=agentStpPortEntry, agentUserPortSecurity=agentUserPortSecurity, agentDynamicIpsgBindingIpAddr=agentDynamicIpsgBindingIpAddr, agentDhcpv6SnoopingAdminMode=agentDhcpv6SnoopingAdminMode, agentPvrstpVlanEntry=agentPvrstpVlanEntry, agentPvrstpPortVlanTable=agentPvrstpPortVlanTable, agentSwitchCpuCosQDrops=agentSwitchCpuCosQDrops, agentStpMstDesignatedBridgeId=agentStpMstDesignatedBridgeId, agentIpv6sgIfPortSecurity=agentIpv6sgIfPortSecurity, Ipv6AddressIfIdentifier=Ipv6AddressIfIdentifier, agentSwitchMbufsTotal=agentSwitchMbufsTotal, agentStaticDsBindingEntry=agentStaticDsBindingEntry, agentCmdsAccountingListMethod1=agentCmdsAccountingListMethod1, agentSwitchSnoopSSMSrcListEntry=agentSwitchSnoopSSMSrcListEntry, agentTransferDownloadPath=agentTransferDownloadPath, agentClassOfServicePortTable=agentClassOfServicePortTable, agentNetworkIPAddress=agentNetworkIPAddress, agentStpMstVlanEntry=agentStpMstVlanEntry, agentSnmpConfigGroup=agentSnmpConfigGroup, agentStpCstBridgeHelloTime=agentStpCstBridgeHelloTime, agentSwitchSnoopingVlanGroupMembershipInterval=agentSwitchSnoopingVlanGroupMembershipInterval, agentStpMstPortForwardingState=agentStpMstPortForwardingState, agentClearVlan=agentClearVlan, agentStpCstPortForwardingState=agentStpCstPortForwardingState, agentDhcpSnoopingVerifyMac=agentDhcpSnoopingVerifyMac, agentDynamicIpsgBindingTable=agentDynamicIpsgBindingTable, agentStpCstBridgeFwdDelay=agentStpCstBridgeFwdDelay, agentDhcpv6SnoopingStatsReset=agentDhcpv6SnoopingStatsReset, agentNetworkConfigProtocol=agentNetworkConfigProtocol, agentSwitchStaticMacFilteringEntry=agentSwitchStaticMacFilteringEntry, agentStpBpduFilterDefault=agentStpBpduFilterDefault, agentSnmpCommunityCreate=agentSnmpCommunityCreate, agentNetworkIpv6AdminMode=agentNetworkIpv6AdminMode, agentSwitchSnoopingAdminMode=agentSwitchSnoopingAdminMode, agentSwitchSnoopingIntfGroupMembershipInterval=agentSwitchSnoopingIntfGroupMembershipInterval, agentSwitchMFDBType=agentSwitchMFDBType, agentPortClearStats=agentPortClearStats, agentIPv4UnicastRoutes=agentIPv4UnicastRoutes, agentServicePortDhcp6ADVERTISEMessagesReceived=agentServicePortDhcp6ADVERTISEMessagesReceived, agentUserLockoutStatus=agentUserLockoutStatus, PortList=PortList, agentLoginSessionIndex=agentLoginSessionIndex, agentPortTypeGroup=agentPortTypeGroup, agentDhcpSnoopingIfLogEnable=agentDhcpSnoopingIfLogEnable, agentInventoryOperatingSystem=agentInventoryOperatingSystem, agentStpPortHelloTime=agentStpPortHelloTime, agentTransferUploadFilename=agentTransferUploadFilename, agentPortVoiceVlanPriority=agentPortVoiceVlanPriority, agentSwitchMFDBVlanId=agentSwitchMFDBVlanId, agentUserPortConfigTable=agentUserPortConfigTable, agentDhcpL2RelayVlanIndex=agentDhcpL2RelayVlanIndex, agentStpCstPortEntry=agentStpCstPortEntry, stpInstanceTopologyChangeTrap=stpInstanceTopologyChangeTrap, agentSwitchStaticMacFilteringDestPortMask=agentSwitchStaticMacFilteringDestPortMask, agentSwitchSnoopSSMGroupAddressType=agentSwitchSnoopSSMGroupAddressType, agentArpAclRuleMatchSenderIpAddr=agentArpAclRuleMatchSenderIpAddr, agentDhcpL2RelayConfigGroup=agentDhcpL2RelayConfigGroup, agentSnmpCommunityName=agentSnmpCommunityName, agentExecAuthorizationListMethod2=agentExecAuthorizationListMethod2, agentPvrstpVlanTableIndex=agentPvrstpVlanTableIndex, agentDhcpv6SnoopingStoreInterval=agentDhcpv6SnoopingStoreInterval, agentStpPortMigrationCheck=agentStpPortMigrationCheck, agentUserConfigGroup=agentUserConfigGroup, agentSwitchStormControlGroup=agentSwitchStormControlGroup, agentSwitchVlanStaticMrouterTable=agentSwitchVlanStaticMrouterTable, agentTelnetMgmtPortNum=agentTelnetMgmtPortNum, agentSwitchCpuCosQDropEntry=agentSwitchCpuCosQDropEntry, agentHTTPConfigGroup=agentHTTPConfigGroup, agentSwitchMbufPrio=agentSwitchMbufPrio, agentSwitchCutThroughGroup=agentSwitchCutThroughGroup, agentPasswordManagementHistory=agentPasswordManagementHistory, agentTransferDownloadGroup=agentTransferDownloadGroup, multipleUsersTrap=multipleUsersTrap, agentSwitchPortDVlanTagInterfaceIfIndex=agentSwitchPortDVlanTagInterfaceIfIndex, agentSwitchSnoopingIntfEntry=agentSwitchSnoopingIntfEntry, agentTransferDownloadDigitalSignatureVerifySelect=agentTransferDownloadDigitalSignatureVerifySelect, agentSwitchCutThroughConfigMode=agentSwitchCutThroughConfigMode, agentSwitchPrivateGroupPortEntry=agentSwitchPrivateGroupPortEntry, agentIPv6NdpEntries=agentIPv6NdpEntries, agentPortMirrorReflectorPort=agentPortMirrorReflectorPort, agentUserAuthenticationList=agentUserAuthenticationList, agentStpMstVlanTable=agentStpMstVlanTable, agentSwitchSnoopingIntfVlanIDs=agentSwitchSnoopingIntfVlanIDs, agentSwitchDVlanTagTPid=agentSwitchDVlanTagTPid, agentLagSummaryAdminMode=agentLagSummaryAdminMode, agentExecAuthorizationListTable=agentExecAuthorizationListTable, agentInventoryGroup=agentInventoryGroup, agentSdmTemplateTable=agentSdmTemplateTable, agentNetworkIpv6ConfigProtocol=agentNetworkIpv6ConfigProtocol, agentSwitchVlanSubnetAssociationVlanId=agentSwitchVlanSubnetAssociationVlanId, agentSwitchDVlanTagTable=agentSwitchDVlanTagTable, agentDhcpv6SnoopingMacVerifyFailures=agentDhcpv6SnoopingMacVerifyFailures, agentPortVoiceVlanAuthMode=agentPortVoiceVlanAuthMode, agentPortType40GigBaseX=agentPortType40GigBaseX, agentPortMulticastControlThresholdUnit=agentPortMulticastControlThresholdUnit, agentSwitchVlanSubnetAssociationEntry=agentSwitchVlanSubnetAssociationEntry, agentProtocolGroupProtocolIP=agentProtocolGroupProtocolIP, agentSupportedMibEntry=agentSupportedMibEntry, agentStaticIpsgBindingMacAddr=agentStaticIpsgBindingMacAddr, agentSwitchVoiceVlanInterfaceNum=agentSwitchVoiceVlanInterfaceNum, agentDaiVlanConfigTable=agentDaiVlanConfigTable, agentSwitchportTrunkAllowedVlanList=agentSwitchportTrunkAllowedVlanList, agentDynamicIpv6sgBindingTable=agentDynamicIpv6sgBindingTable, agentSwitchProtectedPortGroupId=agentSwitchProtectedPortGroupId, agentSwitchVlanSubnetAssociationGroup=agentSwitchVlanSubnetAssociationGroup, agentStpPortTable=agentStpPortTable, agentAuthenticationListEntry=agentAuthenticationListEntry, agentCmdsAuthorizationListIndex=agentCmdsAuthorizationListIndex, agentDhcpSnoopingVlanConfigTable=agentDhcpSnoopingVlanConfigTable, agentSwitchSnoopingQuerierQueryInterval=agentSwitchSnoopingQuerierQueryInterval, agentDaiVlanIndex=agentDaiVlanIndex, agentDhcpL2RelayIfEnable=agentDhcpL2RelayIfEnable, agentSnmpTrapReceiverConfigTable=agentSnmpTrapReceiverConfigTable, agentSwitchUnicastControlMode=agentSwitchUnicastControlMode, agentLagDetailedPortCounter=agentLagDetailedPortCounter, agentSnmpCommunityIndex=agentSnmpCommunityIndex, agentDaiIfTrustEnable=agentDaiIfTrustEnable, agentSwitchportAccessVlanID=agentSwitchportAccessVlanID, agentDhcpL2RelayVlanConfigTable=agentDhcpL2RelayVlanConfigTable, agentProtocolGroupPortIfIndex=agentProtocolGroupPortIfIndex, agentSwitchMbufNotificationSeverity=agentSwitchMbufNotificationSeverity, agentSwitchSnoopSSMFDBIncludePortList=agentSwitchSnoopSSMFDBIncludePortList, agentPortMirroringGroup=agentPortMirroringGroup, agentLagClearCounters=agentLagClearCounters, agentStpCstConfigGroup=agentStpCstConfigGroup, agentSwitchAddressConflictGroup=agentSwitchAddressConflictGroup, agentStpConfigFormatSelector=agentStpConfigFormatSelector, agentStpMstBridgeIdentifier=agentStpMstBridgeIdentifier, agentPasswordMgmtLastPasswordSetResult=agentPasswordMgmtLastPasswordSetResult, agentSwitchSnoopingIntfIndex=agentSwitchSnoopingIntfIndex, agentSwitchSnoopingVlanProxyQuerierAdminMode=agentSwitchSnoopingVlanProxyQuerierAdminMode, agentDhcpSnoopingRemoteIpAddr=agentDhcpSnoopingRemoteIpAddr, agentLoginSessionIPAddress=agentLoginSessionIPAddress, agentSwitchLastConflictReportedTime=agentSwitchLastConflictReportedTime, agentServicePortDhcp6REPLYMessagesDiscarded=agentServicePortDhcp6REPLYMessagesDiscarded, agentPvstpAdminMode=agentPvstpAdminMode, agentSwitchSnoopingQuerierCfgTable=agentSwitchSnoopingQuerierCfgTable, agentSwitchDVlanTagEntry=agentSwitchDVlanTagEntry, agentSdmPreferCurrentTemplate=agentSdmPreferCurrentTemplate, agentLagSummaryFlushTimer=agentLagSummaryFlushTimer, agentPortMirrorSessionNum=agentPortMirrorSessionNum, agentNetworkSubnetMask=agentNetworkSubnetMask, agentSwitchSnoopingQuerierVlanAdminMode=agentSwitchSnoopingQuerierVlanAdminMode, agentCLIBannerMessage=agentCLIBannerMessage, agentTransferUploadServerAddressType=agentTransferUploadServerAddressType, agentDaiVlanArpAclName=agentDaiVlanArpAclName, agentDhcpv6SnoopingIfConfigTable=agentDhcpv6SnoopingIfConfigTable, agentSwitchSnoopingIntfMRPExpirationTime=agentSwitchSnoopingIntfMRPExpirationTime, agentSwitchSnoopSSMGroupAddress=agentSwitchSnoopSSMGroupAddress, agentSwitchBroadcastControlThresholdUnit=agentSwitchBroadcastControlThresholdUnit, agentAuthenticationGroup=agentAuthenticationGroup, agentSwitchStaticMacFilteringStatus=agentSwitchStaticMacFilteringStatus, agentAuthenticationListStatus=agentAuthenticationListStatus, agentSwitchBroadcastControlThreshold=agentSwitchBroadcastControlThreshold, agentCableTesterGroup=agentCableTesterGroup, agentDaiVlanAclDrops=agentDaiVlanAclDrops, agentPvrstpVlanCost=agentPvrstpVlanCost, agentVendorClassOptionConfigGroup=agentVendorClassOptionConfigGroup, agentTransferUploadRemoteFilename=agentTransferUploadRemoteFilename, agentPasswordManagementStrengthMinLowerCase=agentPasswordManagementStrengthMinLowerCase, agentPortDot3FlowControlOperStatus=agentPortDot3FlowControlOperStatus, agentPvrstpVlanHelloTime=agentPvrstpVlanHelloTime, agentPasswordManagementLockAttempts=agentPasswordManagementLockAttempts, agentIASUserStatus=agentIASUserStatus, agentSwitchSnoopSSMGroupTable=agentSwitchSnoopSSMGroupTable, agentStpCstPortAutoEdge=agentStpCstPortAutoEdge, agentServicePortIpv6AddrPrefix=agentServicePortIpv6AddrPrefix, agentNetworkDhcp6MalformedMessagesReceived=agentNetworkDhcp6MalformedMessagesReceived, agentSwitchDVlanTagGroup=agentSwitchDVlanTagGroup, agentDaiVlanStatsTable=agentDaiVlanStatsTable, agentDhcpv6SnoopingIfRateLimit=agentDhcpv6SnoopingIfRateLimit, agentUserPortConfigEntry=agentUserPortConfigEntry, agentNetworkDefaultGateway=agentNetworkDefaultGateway, agentSdmTemplateSummaryTable=agentSdmTemplateSummaryTable, agentInfoGroup=agentInfoGroup, agentPortMirrorRemoteVlanTable=agentPortMirrorRemoteVlanTable, agentDot3adAggPortLACPMode=agentDot3adAggPortLACPMode, agentStpCstBridgeMaxAge=agentStpCstBridgeMaxAge, agentServicePortConfigGroup=agentServicePortConfigGroup, agentPrivateVlanIntfAssocHostSecondary=agentPrivateVlanIntfAssocHostSecondary, agentInventoryHardwareVersion=agentInventoryHardwareVersion, agentProtocolGroupPortStatus=agentProtocolGroupPortStatus, agentSnmpMultipleUsersTrapFlag=agentSnmpMultipleUsersTrapFlag, agentStartupConfigErase=agentStartupConfigErase, agentNetworkMacAddressType=agentNetworkMacAddressType, agentStpCstDesignatedPortId=agentStpCstDesignatedPortId, agentSerialTimeout=agentSerialTimeout, agentAutoInstallConfigGroup=agentAutoInstallConfigGroup, agentCmdsAuthorizationListEntry=agentCmdsAuthorizationListEntry, agentSerialParityType=agentSerialParityType, agentNetworkDhcp6SOLICITMessagesSent=agentNetworkDhcp6SOLICITMessagesSent, agentStpCstRegionalRootId=agentStpCstRegionalRootId, agentSwitchConflictIPAddr=agentSwitchConflictIPAddr, agentSwitchCpuRisingThresholdTrap=agentSwitchCpuRisingThresholdTrap, agentSwitchMbufConfigGroup=agentSwitchMbufConfigGroup, agentSwitchVoiceVlanDeviceEntry=agentSwitchVoiceVlanDeviceEntry, agentDhcpL2RelayUntrustedSrvrMsgsWithOptn82=agentDhcpL2RelayUntrustedSrvrMsgsWithOptn82, agentCableTesterCableFailureLocation=agentCableTesterCableFailureLocation)
mibBuilder.exportSymbols("EdgeSwitch-SWITCHING-MIB", agentSwitchAddressAgingTimeoutEntry=agentSwitchAddressAgingTimeoutEntry, agentPortVoiceVlanOperationalStatus=agentPortVoiceVlanOperationalStatus, agentStpConfigRevision=agentStpConfigRevision, agentNetworkDhcp6REPLYMessagesReceived=agentNetworkDhcp6REPLYMessagesReceived, agentIASUserName=agentIASUserName, agentDynamicDsBindingEntry=agentDynamicDsBindingEntry, agentCmdsAuthorizationGroup=agentCmdsAuthorizationGroup, agentSwitchBroadcastControlMode=agentSwitchBroadcastControlMode, agentStpCstMaxAge=agentStpCstMaxAge, agentPortMirrorEntry=agentPortMirrorEntry, agentDhcpL2RelayStatsReset=agentDhcpL2RelayStatsReset, agentIASUserConfigGroup=agentIASUserConfigGroup, agentLagSummaryStatus=agentLagSummaryStatus, agentCmdsAuthorizationListCreate=agentCmdsAuthorizationListCreate, agentSwitchSnoopingProtocol=agentSwitchSnoopingProtocol, agentArpAclRuleEntry=agentArpAclRuleEntry, agentDaiVlanStatsEntry=agentDaiVlanStatsEntry, agentDaiStatsReset=agentDaiStatsReset, agentLoginSessionStatus=agentLoginSessionStatus, agentNetworkLocalAdminMacAddress=agentNetworkLocalAdminMacAddress, agentSwitchportTrunkNativeVlanID=agentSwitchportTrunkNativeVlanID, agentPortDVlanTagCustomerId=agentPortDVlanTagCustomerId, agentSwitchStaticMacFilteringAddress=agentSwitchStaticMacFilteringAddress, agentCmdsAuthorizationListTable=agentCmdsAuthorizationListTable, agentPasswordManagementStrengthExcludeKeywordTable=agentPasswordManagementStrengthExcludeKeywordTable, agentSwitchMFDBSummaryEntry=agentSwitchMFDBSummaryEntry, failedUserLoginTrap=failedUserLoginTrap, agentSwitchCutThroughRunningModeStatus=agentSwitchCutThroughRunningModeStatus, agentPvrstpPortIndex=agentPvrstpPortIndex, agentUserAuthenticationType=agentUserAuthenticationType, agentSwitchVlanMacAssociationTable=agentSwitchVlanMacAssociationTable, agentSnmpTrapReceiverAddress=agentSnmpTrapReceiverAddress, agentStpConfigDigestKey=agentStpConfigDigestKey, agentTelnetMaxSessions=agentTelnetMaxSessions, agentProtocolGroupPortEntry=agentProtocolGroupPortEntry, agentStaticIpv6sgBindingIpAddr=agentStaticIpv6sgBindingIpAddr, agentProtocolGroupProtocolID=agentProtocolGroupProtocolID, agentSwitchVlanStaticMrouterGroup=agentSwitchVlanStaticMrouterGroup, agentSwitchportConfigTable=agentSwitchportConfigTable, agentTransferUploadPath=agentTransferUploadPath, agentDynamicDsv6BindingIpAddr=agentDynamicDsv6BindingIpAddr, agentServicePortProtocolDhcpRenew=agentServicePortProtocolDhcpRenew, agentPvrstpPortVlanEntry=agentPvrstpPortVlanEntry, agentPortMirrorTypeTable=agentPortMirrorTypeTable, vlanRequestFailureTrap=vlanRequestFailureTrap, agentLagSummaryLagIndex=agentLagSummaryLagIndex, agentCmdsAccountingMethodType=agentCmdsAccountingMethodType, agentTransferDownloadServerAddress=agentTransferDownloadServerAddress, agentIPv4MulticastRoutes=agentIPv4MulticastRoutes, agentSwitchVlanMacAssociationRowStatus=agentSwitchVlanMacAssociationRowStatus, agentSwitchMFDBMacAddress=agentSwitchMFDBMacAddress, agentSwitchSnoopingProxyQuerierAdminMode=agentSwitchSnoopingProxyQuerierAdminMode, agentPvrstpBackboneFast=agentPvrstpBackboneFast, agentStpCstPortOperPointToPoint=agentStpCstPortOperPointToPoint, agentDhcpClientOptionsConfigGroup=agentDhcpClientOptionsConfigGroup, agentLagSummaryHashOption=agentLagSummaryHashOption, agentSwitchMulticastControlMode=agentSwitchMulticastControlMode, agentPrivateVlanIntfAssocTable=agentPrivateVlanIntfAssocTable, agentDhcpSnoopingIfTrustEnable=agentDhcpSnoopingIfTrustEnable, agentSwitchSnoopSSMSrcListTable=agentSwitchSnoopSSMSrcListTable, agentSwitchSnoopSSMSrcListHostAddress=agentSwitchSnoopSSMSrcListHostAddress, agentNetworkMgmtVlan=agentNetworkMgmtVlan, agentPortIfIndex=agentPortIfIndex, agentStpCstDesignatedBridgeId=agentStpCstDesignatedBridgeId, agentDigitalSignatureVerifyMode=agentDigitalSignatureVerifyMode, agentSwitchPrivateGroupRowStatus=agentSwitchPrivateGroupRowStatus, agentNetworkStatsGroup=agentNetworkStatsGroup, agentIPv6MulticastRoutes=agentIPv6MulticastRoutes, agentPvrstpVlanRootPriSec=agentPvrstpVlanRootPriSec, agentSwitchSnoopingIntfProxyQuerierAdminMode=agentSwitchSnoopingIntfProxyQuerierAdminMode, broadcastStormStartTrap=broadcastStormStartTrap, agentArpEntries=agentArpEntries, broadcastStormEndTrap=broadcastStormEndTrap, agentSwitchCpuProcessTotalUtilization=agentSwitchCpuProcessTotalUtilization, agentIpv6sgIfConfigEntry=agentIpv6sgIfConfigEntry, agentDaiVlanLoggingEnable=agentDaiVlanLoggingEnable, agentPasswordManagementConfigGroup=agentPasswordManagementConfigGroup, agentPasswordManagementAging=agentPasswordManagementAging, agentSwitchSnoopSSMSrcListAddressType=agentSwitchSnoopSSMSrcListAddressType, agentSwitchIpAddressConflictTrap=agentSwitchIpAddressConflictTrap, agentSwitchPrivateGroupPortGroupName=agentSwitchPrivateGroupPortGroupName, agentDaiVlanArpAclStaticFlag=agentDaiVlanArpAclStaticFlag, agentDynamicIpv6sgBindingEntry=agentDynamicIpv6sgBindingEntry, agentStpCstPortPathCost=agentStpCstPortPathCost, agentSwitchCpuProcessTable=agentSwitchCpuProcessTable, agentDhcpSnoopingConfigGroup=agentDhcpSnoopingConfigGroup, agentDaiVlanPktsForwarded=agentDaiVlanPktsForwarded, agentStpMstTopologyChangeCount=agentStpMstTopologyChangeCount, agentStpMstPortPathCost=agentStpMstPortPathCost, agentInventoryNetworkProcessingDevice=agentInventoryNetworkProcessingDevice, agentProtocolGroupProtocolIPX=agentProtocolGroupProtocolIPX, agentSwitchSnoopSSMGroupSourceFilterMode=agentSwitchSnoopSSMGroupSourceFilterMode, agentAutoinstallMode=agentAutoinstallMode, agentDhcpv6SnoopingIfLogEnable=agentDhcpv6SnoopingIfLogEnable, agentSwitchSnoopSSMSrcListIfIndex=agentSwitchSnoopSSMSrcListIfIndex, agentSwitchSnoopingCfgTable=agentSwitchSnoopingCfgTable, agentPortDefaultType=agentPortDefaultType, agentStpPortState=agentStpPortState, agentLagSummaryName=agentLagSummaryName, agentStpMstId=agentStpMstId, agentHTTPMaxSessions=agentHTTPMaxSessions, agentSaveConfigStatus=agentSaveConfigStatus, agentTransferDownloadFilename=agentTransferDownloadFilename, agentSnmpTrapReceiverIndex=agentSnmpTrapReceiverIndex, agentSnmpCommunityConfigTable=agentSnmpCommunityConfigTable, agentSwitchMbufFallingThreshold=agentSwitchMbufFallingThreshold, agentSwitchConfigGroup=agentSwitchConfigGroup, agentHTTPSoftTimeout=agentHTTPSoftTimeout, agentNetworkDhcp6ADVERTISEMessagesDiscarded=agentNetworkDhcp6ADVERTISEMessagesDiscarded, agentStpMstDesignatedCost=agentStpMstDesignatedCost, agentDaiIfRateLimit=agentDaiIfRateLimit, agentProtocolGroupTable=agentProtocolGroupTable, agentPortMirrorTypeSourcePort=agentPortMirrorTypeSourcePort, agentSwitchCpuFreeMemBelowThresholdTrap=agentSwitchCpuFreeMemBelowThresholdTrap, agentCableTesterStatus=agentCableTesterStatus, agentSwitchVlanStaticMrouterEntry=agentSwitchVlanStaticMrouterEntry, dhcpSnoopingIntfErrorDisabledTrap=dhcpSnoopingIntfErrorDisabledTrap, agentSerialCharacterSize=agentSerialCharacterSize, agentStpSwitchConfigGroup=agentStpSwitchConfigGroup, agentSwitchSnoopingIntfTable=agentSwitchSnoopingIntfTable, agentSwitchCpuCosQDropGroup=agentSwitchCpuCosQDropGroup, agentPortSTPMode=agentPortSTPMode, agentAutoinstallAutoRebootMode=agentAutoinstallAutoRebootMode, agentServicePortDhcp6RENEWMessagesSent=agentServicePortDhcp6RENEWMessagesSent, agentTrapLogTotal=agentTrapLogTotal, agentPortVoiceVlanMode=agentPortVoiceVlanMode, agentDynamicDsv6BindingMacAddr=agentDynamicDsv6BindingMacAddr, agentUserPasswordExpireTime=agentUserPasswordExpireTime, agentLagSummaryAddPort=agentLagSummaryAddPort, agentNetworkIpv6AddrPrefixLength=agentNetworkIpv6AddrPrefixLength, agentSdmPreferConfigEntry=agentSdmPreferConfigEntry, agentInventoryPartNumber=agentInventoryPartNumber, agentSwitchCpuProcessMemAvailable=agentSwitchCpuProcessMemAvailable, agentProtocolGroupProtocolEntry=agentProtocolGroupProtocolEntry, agentStpMstVlanRowStatus=agentStpMstVlanRowStatus, agentStaticIpv6sgBindingMacAddr=agentStaticIpv6sgBindingMacAddr, agentPrivateVlanAssociate=agentPrivateVlanAssociate, agentPvrstpVlanMaxAgeTime=agentPvrstpVlanMaxAgeTime, agentPvrstpVlanIndex=agentPvrstpVlanIndex, agentSwitchportMode=agentSwitchportMode, agentPortAutoNegAdminStatus=agentPortAutoNegAdminStatus, agentDot3adAggPort=agentDot3adAggPort, agentLagConfigStaticCapability=agentLagConfigStaticCapability, agentPortMirrorRemoteVlanIndex=agentPortMirrorRemoteVlanIndex, agentStpCstPortBpduFlood=agentStpCstPortBpduFlood, agentTelnetLoginTimeout=agentTelnetLoginTimeout, agentSnmpCommunityIPAddress=agentSnmpCommunityIPAddress, agentSdmTemplateId=agentSdmTemplateId, agentDot3adAggPortTable=agentDot3adAggPortTable, agentStpMstDesignatedRootId=agentStpMstDesignatedRootId, agentPortUnicastControlMode=agentPortUnicastControlMode, agentPortSwitchportMode=agentPortSwitchportMode, agentUserAuthenticationConfigTable=agentUserAuthenticationConfigTable, agentSwitchVoiceVlanDeviceMacAddress=agentSwitchVoiceVlanDeviceMacAddress, agentSwitchSnoopingVlanGroup=agentSwitchSnoopingVlanGroup, agentSwitchAddressAgingTimeoutTable=agentSwitchAddressAgingTimeoutTable, agentPortPhysicalStatus=agentPortPhysicalStatus, agentExecAuthorizationListMethod4=agentExecAuthorizationListMethod4, agentPortMirrorTable=agentPortMirrorTable, agentPortMirrorRemoteDestinationVlan=agentPortMirrorRemoteDestinationVlan, agentAuthenticationListName=agentAuthenticationListName, agentSwitchMbufGroup=agentSwitchMbufGroup, agentPvrstpAdminMode=agentPvrstpAdminMode, agentExecAccountingListCreate=agentExecAccountingListCreate, agentSwitchSnoopingIntfGroup=agentSwitchSnoopingIntfGroup, agentDhcpSnoopingIfConfigEntry=agentDhcpSnoopingIfConfigEntry, agentStaticDsBindingVlanId=agentStaticDsBindingVlanId, agentDaiVlanDynArpInspEnable=agentDaiVlanDynArpInspEnable, agentTrapLogTrap=agentTrapLogTrap, agentExecAccountingListIndex=agentExecAccountingListIndex, agentCableTesterMaximumCableLength=agentCableTesterMaximumCableLength, agentSwitchDot3FlowControlMode=agentSwitchDot3FlowControlMode, agentLoginSessionConnectionType=agentLoginSessionConnectionType, agentStpCstPortTCNGuard=agentStpCstPortTCNGuard, agentSwitchUnicastControlThreshold=agentSwitchUnicastControlThreshold, agentStpMstPortLoopInconsistentState=agentStpMstPortLoopInconsistentState, agentPortVoiceVlanNoneMode=agentPortVoiceVlanNoneMode, agentPortAdminMode=agentPortAdminMode, agentDynamicIpv6sgBindingMacAddr=agentDynamicIpv6sgBindingMacAddr, agentServicePortIpv6AddrEuiFlag=agentServicePortIpv6AddrEuiFlag, agentTransferUploadMode=agentTransferUploadMode, agentTrapLogGroup=agentTrapLogGroup, agentLagSummaryConfigEntry=agentLagSummaryConfigEntry, fastPathSwitching=fastPathSwitching, agentCableTesterMinimumCableLength=agentCableTesterMinimumCableLength, agentServicePortDhcp6RELEASEMessagesSent=agentServicePortDhcp6RELEASEMessagesSent, agentPvrstpPortVlanPriority=agentPvrstpPortVlanPriority, agentLagSummaryMinimumActiveLinks=agentLagSummaryMinimumActiveLinks, agentSwitchMFDBMostEntriesUsed=agentSwitchMFDBMostEntriesUsed, agentExecAccountingListEntry=agentExecAccountingListEntry, agentPortMirrorSourceVlan=agentPortMirrorSourceVlan, agentStpPortStatsRstpBpduTx=agentStpPortStatsRstpBpduTx, agentServicePortIpv6AdminMode=agentServicePortIpv6AdminMode, agentInventorySysDescription=agentInventorySysDescription, agentDhcpL2RelayIfConfigEntry=agentDhcpL2RelayIfConfigEntry, agentSaveConfig=agentSaveConfig, agentServicePortSubnetMask=agentServicePortSubnetMask, agentDhcpL2RelayStatsTable=agentDhcpL2RelayStatsTable, agentCmdsAccountingListIndex=agentCmdsAccountingListIndex, agentSwitchSnoopingVlanReportSuppMode=agentSwitchSnoopingVlanReportSuppMode, agentSnmpTrapReceiverCommunityName=agentSnmpTrapReceiverCommunityName, agentExecAuthorizationListMethod3=agentExecAuthorizationListMethod3, agentDhcpSnoopingStatsReset=agentDhcpSnoopingStatsReset, agentSnmpTrapReceiverCreate=agentSnmpTrapReceiverCreate, agentDhcpv6SnoopingRemoteIpAddr=agentDhcpv6SnoopingRemoteIpAddr, agentStaticDsBindingIpAddr=agentStaticDsBindingIpAddr, agentSwitchPrivateGroupId=agentSwitchPrivateGroupId, agentCableTesterCableStatus=agentCableTesterCableStatus, agentCmdsAccountingListStatus=agentCmdsAccountingListStatus, agentAuthenticationListMethod2=agentAuthenticationListMethod2, agentNetworkDhcp6StatsReset=agentNetworkDhcp6StatsReset, agentDhcpSnoopingAdminMode=agentDhcpSnoopingAdminMode, agentDhcpv6SnoopingVlanIndex=agentDhcpv6SnoopingVlanIndex, agentSwitchLastConflictingMacAddr=agentSwitchLastConflictingMacAddr, Ipv6Address=Ipv6Address, agentLagSummaryLocalPreferenceMode=agentLagSummaryLocalPreferenceMode, agentNetworkDhcp6RENEWMessagesSent=agentNetworkDhcp6RENEWMessagesSent, agentSwitchSnoopingIntfAdminMode=agentSwitchSnoopingIntfAdminMode, agentNextActiveImage=agentNextActiveImage, topologyChangeInitiatedTrap=topologyChangeInitiatedTrap, agentSwitchCpuProcessFallingThresholdInterval=agentSwitchCpuProcessFallingThresholdInterval, agentSwitchPrivateGroupPortTable=agentSwitchPrivateGroupPortTable, agentDhcpv6SnoopingIfConfigEntry=agentDhcpv6SnoopingIfConfigEntry, agentDhcpv6SnoopingVlanConfigTable=agentDhcpv6SnoopingVlanConfigTable, agentPortBroadcastControlThreshold=agentPortBroadcastControlThreshold, agentSupportedMibIndex=agentSupportedMibIndex, agentSwitchProtectedPortEntry=agentSwitchProtectedPortEntry, agentStaticIpsgBindingEntry=agentStaticIpsgBindingEntry, agentLoginSessionSessionTime=agentLoginSessionSessionTime, agentSerialGroup=agentSerialGroup, agentSwitchStaticMacFilteringVlanId=agentSwitchStaticMacFilteringVlanId, agentAuthenticationListCreate=agentAuthenticationListCreate, agentAutoinstallAutosaveMode=agentAutoinstallAutosaveMode, agentSwitchSnoopingQuerierGroup=agentSwitchSnoopingQuerierGroup, agentSwitchVlanMacAssociationMacAddress=agentSwitchVlanMacAssociationMacAddress, agentDhcpL2RelayTrustedSrvrMsgsWithoutOptn82=agentDhcpL2RelayTrustedSrvrMsgsWithoutOptn82, agentCLIBannerMsgConfigGroup=agentCLIBannerMsgConfigGroup, agentSwitchMbufClassName=agentSwitchMbufClassName, agentStpMstEntry=agentStpMstEntry, agentImage2=agentImage2, agentStpMstPortTransitionsIntoLoopInconsistentState=agentStpMstPortTransitionsIntoLoopInconsistentState, agentLagSummaryType=agentLagSummaryType, agentServicePortDhcp6MalformedMessagesReceived=agentServicePortDhcp6MalformedMessagesReceived, agentCableTesterIfIndex=agentCableTesterIfIndex, agentIpsgIfVerifySource=agentIpsgIfVerifySource, agentNetworkConfigProtocolDhcpRenew=agentNetworkConfigProtocolDhcpRenew, agentPortMirroringMode=agentPortMirroringMode, agentStpMstPortPriority=agentStpMstPortPriority, agentTransferUploadServerAddress=agentTransferUploadServerAddress, agentLagSummaryStaticCapability=agentLagSummaryStaticCapability, agentSnmpCommunityConfigEntry=agentSnmpCommunityConfigEntry, agentInventorySoftwareVersion=agentInventorySoftwareVersion, agentDynamicIpsgBindingVlanId=agentDynamicIpsgBindingVlanId, agentServicePortDefaultGateway=agentServicePortDefaultGateway)
mibBuilder.exportSymbols("EdgeSwitch-SWITCHING-MIB", agentUserName=agentUserName, powerSupplyStatusChangeTrap=powerSupplyStatusChangeTrap, agentPortConfigEntry=agentPortConfigEntry, agentExecAuthorizationListMethod1=agentExecAuthorizationListMethod1, agentStaticIpsgBindingRowStatus=agentStaticIpsgBindingRowStatus, agentSwitchPrivateGroupMode=agentSwitchPrivateGroupMode, agentDaiIfConfigTable=agentDaiIfConfigTable, agentServicePortDhcp6ADVERTISEMessagesDiscarded=agentServicePortDhcp6ADVERTISEMessagesDiscarded, agentSwitchPrivateGroupPortPortList=agentSwitchPrivateGroupPortPortList, agentSwitchCpuProcessRisingThresholdInterval=agentSwitchCpuProcessRisingThresholdInterval, agentDhcpSnoopingVlanIndex=agentDhcpSnoopingVlanIndex, agentSwitchportIntfIndex=agentSwitchportIntfIndex, agentPortMirrorSourcePortMask=agentPortMirrorSourcePortMask, agentServicePortDhcp6REQUESTMessagesSent=agentServicePortDhcp6REQUESTMessagesSent, agentSwitchSnoopSSMFDBGroupAddress=agentSwitchSnoopSSMFDBGroupAddress, agentSwitchConflictMacAddr=agentSwitchConflictMacAddr, agentDhcpv6SnoopingVlanEnable=agentDhcpv6SnoopingVlanEnable, agentLoginSessionUserName=agentLoginSessionUserName, agentDynamicIpsgBindingMacAddr=agentDynamicIpsgBindingMacAddr, agentTrapLogIndex=agentTrapLogIndex, agentPasswordManagementStrengthMinUpperCase=agentPasswordManagementStrengthMinUpperCase, agentSwitchSnoopSSMSrcListAddress=agentSwitchSnoopSSMSrcListAddress, agentSwitchCpuProcessId=agentSwitchCpuProcessId, agentNetworkDhcp6REBINDMessagesSent=agentNetworkDhcp6REBINDMessagesSent, agentDhcpv6SnoopingRemoteFileName=agentDhcpv6SnoopingRemoteFileName, agentLagSummaryDeletePort=agentLagSummaryDeletePort, agentSwitchPortDVlanTagRowStatus=agentSwitchPortDVlanTagRowStatus, agentSupportedMibDescription=agentSupportedMibDescription, agentStpMstPortTransitionsOutOfLoopInconsistentState=agentStpMstPortTransitionsOutOfLoopInconsistentState, agentSwitchMbufTable=agentSwitchMbufTable, agentTransferDownloadServerIP=agentTransferDownloadServerIP, agentNetworkJavaMode=agentNetworkJavaMode, agentPortBroadcastControlThresholdUnit=agentPortBroadcastControlThresholdUnit, agentSwitchSnoopingIntfMulticastRouterMode=agentSwitchSnoopingIntfMulticastRouterMode, agentDhcpClientVendorClassIdString=agentDhcpClientVendorClassIdString, vlanRestoreFailureTrap=vlanRestoreFailureTrap, agentNetworkDhcp6RELEASEMessagesSent=agentNetworkDhcp6RELEASEMessagesSent, agentSwitchAddressAgingTimeout=agentSwitchAddressAgingTimeout, agentProtocolGroupProtocolTable=agentProtocolGroupProtocolTable, agentSnmpAuthenticationTrapFlag=agentSnmpAuthenticationTrapFlag, agentPasswordManagementStrengthExcludeKeywordEntry=agentPasswordManagementStrengthExcludeKeywordEntry, daiIntfErrorDisabledTrap=daiIntfErrorDisabledTrap, agentLagDetailedIfIndex=agentLagDetailedIfIndex, agentSwitchPrivateGroupName=agentSwitchPrivateGroupName, agentInventoryFRUNumber=agentInventoryFRUNumber, agentTrapLogTotalSinceLastViewed=agentTrapLogTotalSinceLastViewed, agentInventoryManufacturer=agentInventoryManufacturer, agentDynamicIpsgBindingIfIndex=agentDynamicIpsgBindingIfIndex, agentTransferDownloadMode=agentTransferDownloadMode, agentPrivateVlanIntfAssocOperational=agentPrivateVlanIntfAssocOperational, vlanDefaultCfgFailureTrap=vlanDefaultCfgFailureTrap, agentIpv6sgIfVerifySource=agentIpv6sgIfVerifySource, agentLagSummaryConfigTable=agentLagSummaryConfigTable, agentPortVoiceVlanUntagged=agentPortVoiceVlanUntagged, agentSwitchSnoopingVlanEntry=agentSwitchSnoopingVlanEntry, PortId=PortId, agentSwitchCpuProcessFallingThreshold=agentSwitchCpuProcessFallingThreshold, agentIpsgIfConfigTable=agentIpsgIfConfigTable, agentDhcpv6SnoopingInvalidServerMessages=agentDhcpv6SnoopingInvalidServerMessages, agentSnmpSpanningTreeTrapFlag=agentSnmpSpanningTreeTrapFlag, agentClearSwitchStats=agentClearSwitchStats, agentProtocolConfigGroup=agentProtocolConfigGroup, stpInstanceLoopInconsistentEndTrap=stpInstanceLoopInconsistentEndTrap, agentPasswordMgmtStrengthExcludeKeywordStatus=agentPasswordMgmtStrengthExcludeKeywordStatus, agentSwitchSnoopingVlanFastLeaveAdminMode=agentSwitchSnoopingVlanFastLeaveAdminMode, agentSwitchVlanMacAssociationGroup=agentSwitchVlanMacAssociationGroup, agentNetworkIpv6AddrTable=agentNetworkIpv6AddrTable, agentDaiSrcMacValidate=agentDaiSrcMacValidate, agentDhcpSnoopingStatsTable=agentDhcpSnoopingStatsTable, agentSwitchSnoopSSMFDBExcludePortList=agentSwitchSnoopSSMFDBExcludePortList, agentCmdsAccountingListName=agentCmdsAccountingListName, agentAuthenticationListMethod5=agentAuthenticationListMethod5, agentDaiVlanStatsIndex=agentDaiVlanStatsIndex, agentPortUnicastControlThreshold=agentPortUnicastControlThreshold, agentTrapLogTable=agentTrapLogTable, agentPortMaxFrameSizeLimit=agentPortMaxFrameSizeLimit, agentDaiVlanDstMacFailures=agentDaiVlanDstMacFailures, agentStpCstPortOperEdge=agentStpCstPortOperEdge, agentPortMirrorMacAccessListNumber=agentPortMirrorMacAccessListNumber, agentServicePortBurnedInMacAddress=agentServicePortBurnedInMacAddress, stpInstanceNewRootTrap=stpInstanceNewRootTrap, agentStaticDsv6BindingVlanId=agentStaticDsv6BindingVlanId, agentSwitchMulticastControlThreshold=agentSwitchMulticastControlThreshold, agentStaticDsBindingMacAddr=agentStaticDsBindingMacAddr, agentStaticIpv6sgBindingVlanId=agentStaticIpv6sgBindingVlanId, agentTransferUploadStart=agentTransferUploadStart, agentLoginSessionIdleTime=agentLoginSessionIdleTime, agentSwitchCpuProcessPercentageUtilization=agentSwitchCpuProcessPercentageUtilization, agentStpBpduGuardMode=agentStpBpduGuardMode, agentSwitchSnoopSSMFDBTable=agentSwitchSnoopSSMFDBTable, agentSnmpTrapReceiverVersion=agentSnmpTrapReceiverVersion, agentNetworkIpv6AddrEuiFlag=agentNetworkIpv6AddrEuiFlag, agentTransferConfigGroup=agentTransferConfigGroup, agentImageConfigGroup=agentImageConfigGroup, agentSwitchSnoopingQuerierAddress=agentSwitchSnoopingQuerierAddress, agentTransferUploadGroup=agentTransferUploadGroup, userLockoutTrap=userLockoutTrap, agentTransferDownloadImagename=agentTransferDownloadImagename, agentStpCstPortBpduFilter=agentStpCstPortBpduFilter, agentCmdsAccountingListTable=agentCmdsAccountingListTable, agentDaiIfBurstInterval=agentDaiIfBurstInterval, agentSwitchCpuProcessEntry=agentSwitchCpuProcessEntry, agentTransferUploadServerIP=agentTransferUploadServerIP, agentArpAclRuleRowStatus=agentArpAclRuleRowStatus, agentClearLoginSessions=agentClearLoginSessions, agentPrivateVlanIntfAssocEntry=agentPrivateVlanIntfAssocEntry, agentClassOfServiceGroup=agentClassOfServiceGroup, agentExecAuthorizationGroup=agentExecAuthorizationGroup, agentClearTrapLog=agentClearTrapLog, agentPortMaxFrameSize=agentPortMaxFrameSize, agentServicePortIpv6Gateway=agentServicePortIpv6Gateway, stpInstanceLoopInconsistentStartTrap=stpInstanceLoopInconsistentStartTrap, agentUserConfigEntry=agentUserConfigEntry, agentIpsgIfConfigEntry=agentIpsgIfConfigEntry, agentStaticDsBindingIfIndex=agentStaticDsBindingIfIndex, agentSwitchSnoopingVlanTable=agentSwitchSnoopingVlanTable, agentDynamicIpv6sgBindingIfIndex=agentDynamicIpv6sgBindingIfIndex, agentServicePortIpv6AddrEntry=agentServicePortIpv6AddrEntry, agentTransferUploadStatus=agentTransferUploadStatus, agentNetworkDhcp6ADVERTISEMessagesReceived=agentNetworkDhcp6ADVERTISEMessagesReceived, agentLagSummaryLinkTrap=agentLagSummaryLinkTrap, agentServicePortDhcp6REPLYMessagesReceived=agentServicePortDhcp6REPLYMessagesReceived, agentLagSummaryMtuValue=agentLagSummaryMtuValue, agentSwitchSnoopingQuerierVersion=agentSwitchSnoopingQuerierVersion, agentSwitchMulticastControlThresholdUnit=agentSwitchMulticastControlThresholdUnit, agentSwitchSnoopingQuerierOperMaxResponseTime=agentSwitchSnoopingQuerierOperMaxResponseTime, agentTransferUploadUsername=agentTransferUploadUsername, agentArpAclRowStatus=agentArpAclRowStatus, agentStaticIpsgBindingIfIndex=agentStaticIpsgBindingIfIndex, agentStaticIpv6sgBindingEntry=agentStaticIpv6sgBindingEntry, agentStaticDsv6BindingIpAddr=agentStaticDsv6BindingIpAddr, agentPortMirrorAdminMode=agentPortMirrorAdminMode, agentLagConfigCreate=agentLagConfigCreate, agentNetworkDhcp6REQUESTMessagesSent=agentNetworkDhcp6REQUESTMessagesSent, agentDynamicDsBindingIfIndex=agentDynamicDsBindingIfIndex, agentSwitchSnoopingQuerierVlanAddress=agentSwitchSnoopingQuerierVlanAddress, agentStpAdminMode=agentStpAdminMode, agentDhcpv6SnoopingIfTrustEnable=agentDhcpv6SnoopingIfTrustEnable, agentDynamicDsv6BindingEntry=agentDynamicDsv6BindingEntry, agentSwitchSnoopingVlanAdminMode=agentSwitchSnoopingVlanAdminMode, agentInventoryAdditionalPackages=agentInventoryAdditionalPackages, agentSnmpTrapReceiverConfigEntry=agentSnmpTrapReceiverConfigEntry, agentArpAclGroup=agentArpAclGroup, agentNetworkIpv6AddrEntry=agentNetworkIpv6AddrEntry, agentPortMirrorRemoteSourceVlan=agentPortMirrorRemoteSourceVlan, agentTelnetAllowNewMode=agentTelnetAllowNewMode, linkFailureTrap=linkFailureTrap, agentLoginSessionInetAddressType=agentLoginSessionInetAddressType, agentStpMstRowStatus=agentStpMstRowStatus, agentLagSummaryPortCounter=agentLagSummaryPortCounter, agentStpCstPortPriority=agentStpCstPortPriority, agentSwitchPrivateGroupPortGroupId=agentSwitchPrivateGroupPortGroupId, agentStpMstRootPathCost=agentStpMstRootPathCost, agentSnmpCommunityIPMask=agentSnmpCommunityIPMask, agentPortDot1dBasePort=agentPortDot1dBasePort, agentStpMstBridgePriority=agentStpMstBridgePriority, agentTrapLogSystemTime=agentTrapLogSystemTime, agentDhcpL2RelayIfConfigTable=agentDhcpL2RelayIfConfigTable, loopDetectedTrap=loopDetectedTrap, agentDhcpL2RelayCircuitIdVlanEnable=agentDhcpL2RelayCircuitIdVlanEnable, agentDhcpSnoopingVlanEnable=agentDhcpSnoopingVlanEnable, agentAutoinstallUnicastRetryCount=agentAutoinstallUnicastRetryCount, agentDaiVlanConfigEntry=agentDaiVlanConfigEntry, agentSnmpLinkUpDownTrapFlag=agentSnmpLinkUpDownTrapFlag, agentActiveImage=agentActiveImage, agentDynamicDsBindingVlanId=agentDynamicDsBindingVlanId, agentCmdsAccountingGroup=agentCmdsAccountingGroup, agentSwitchCpuProcessGroup=agentSwitchCpuProcessGroup, agentDynamicDsv6BindingIfIndex=agentDynamicDsv6BindingIfIndex, agentAuthenticationListMethod1=agentAuthenticationListMethod1, agentDot3adAggPortEntry=agentDot3adAggPortEntry, agentExecAccountingListStatus=agentExecAccountingListStatus, agentDhcpv6SnoopingStatsEntry=agentDhcpv6SnoopingStatsEntry, agentTransferDownloadServerAddressType=agentTransferDownloadServerAddressType, agentSwitchSnoopSSMFDBEntry=agentSwitchSnoopSSMFDBEntry, agentPortLinkTrapMode=agentPortLinkTrapMode, agentProtocolGroupPortTable=agentProtocolGroupPortTable, agentInventoryMachineType=agentInventoryMachineType, agentLagDetailedPortSpeed=agentLagDetailedPortSpeed, agentAuthenticationListTable=agentAuthenticationListTable, agentSnmpTrapReceiverIPAddress=agentSnmpTrapReceiverIPAddress, agentClearConfig=agentClearConfig, agentPortMirrorRemoteVlanEntry=agentPortMirrorRemoteVlanEntry, agentAuthenticationListMethod3=agentAuthenticationListMethod3, agentLagConfigGroupHashOption=agentLagConfigGroupHashOption, vlanDeleteLastTrap=vlanDeleteLastTrap, agentIpv6sgIfConfigTable=agentIpv6sgIfConfigTable, agentPortVoiceVlanDSCP=agentPortVoiceVlanDSCP, agentProtocolGroupProtocolStatus=agentProtocolGroupProtocolStatus, agentSwitchCpuCosQDropTable=agentSwitchCpuCosQDropTable, agentHTTPWebMode=agentHTTPWebMode, agentServicePortIpv6AddrTable=agentServicePortIpv6AddrTable, agentInventoryMaintenanceLevel=agentInventoryMaintenanceLevel, agentSnmpTrapReceiverStatus=agentSnmpTrapReceiverStatus, agentSwitchSnoopingQuerierVlanTable=agentSwitchSnoopingQuerierVlanTable, agentDynamicDsBindingLeaseRemainingTime=agentDynamicDsBindingLeaseRemainingTime, agentStpMstTimeSinceTopologyChange=agentStpMstTimeSinceTopologyChange, agentTransferDownloadDataType=agentTransferDownloadDataType, agentPortMirrorTypeType=agentPortMirrorTypeType, agentSwitchportGeneralDynamicallyAddedVlanList=agentSwitchportGeneralDynamicallyAddedVlanList, agentLagSummaryStpMode=agentLagSummaryStpMode, agentSwitchVoiceVLANGroup=agentSwitchVoiceVLANGroup, agentDhcpv6SnoopingVlanConfigEntry=agentDhcpv6SnoopingVlanConfigEntry, agentClassOfServicePortPriority=agentClassOfServicePortPriority, agentSwitchLastConflictingIPAddr=agentSwitchLastConflictingIPAddr, agentDynamicIpv6sgBindingIpAddr=agentDynamicIpv6sgBindingIpAddr, agentStpMstPortId=agentStpMstPortId, agentTelnetConfigGroup=agentTelnetConfigGroup, agentDynamicDsBindingTable=agentDynamicDsBindingTable, agentStaticIpv6sgBindingIfIndex=agentStaticIpv6sgBindingIfIndex, agentAuthenticationListMethod4=agentAuthenticationListMethod4, agentSwitchUnicastControlThresholdUnit=agentSwitchUnicastControlThresholdUnit, agentPortConfigTable=agentPortConfigTable, agentClassOfServicePortEntry=agentClassOfServicePortEntry, agentStaticDsBindingTable=agentStaticDsBindingTable, agentSwitchportTrunkNativeVlanTagging=agentSwitchportTrunkNativeVlanTagging, agentSwitchCpuProcessFreeMemoryThreshold=agentSwitchCpuProcessFreeMemoryThreshold, fanFailureTrap=fanFailureTrap, agentEcmpNextHops=agentEcmpNextHops, agentUserConfigCreate=agentUserConfigCreate, agentSnmpServerPortNum=agentSnmpServerPortNum, agentCmdsAuthorizationListMethod1=agentCmdsAuthorizationListMethod1, agentDhcpSnoopingRemoteFileName=agentDhcpSnoopingRemoteFileName, agentDhcpL2RelayIfTrustEnable=agentDhcpL2RelayIfTrustEnable, agentSwitchProtectedPortPortList=agentSwitchProtectedPortPortList, agentPortMulticastControlThreshold=agentPortMulticastControlThreshold, agentNetworkDhcp6REPLYMessagesDiscarded=agentNetworkDhcp6REPLYMessagesDiscarded, agentSwitchMbufsFree=agentSwitchMbufsFree, agentUserAccessMode=agentUserAccessMode, agentIASUserPassword=agentIASUserPassword, agentStaticIpv6sgBindingTable=agentStaticIpv6sgBindingTable, agentSwitchDVlanTagRowStatus=agentSwitchDVlanTagRowStatus, agentUserPassword=agentUserPassword, agentExecAuthorizationListName=agentExecAuthorizationListName, agentDaiVlanPktsDropped=agentDaiVlanPktsDropped, agentSwitchPrivateGroupEntry=agentSwitchPrivateGroupEntry, agentSwitchCpuProcessIndex=agentSwitchCpuProcessIndex, agentStpMstRootPortId=agentStpMstRootPortId, agentIPv6UnicastRoutes=agentIPv6UnicastRoutes, agentSwitchPrivateGroupTable=agentSwitchPrivateGroupTable, agentPortIanaType=agentPortIanaType, agentExecAuthorizationListEntry=agentExecAuthorizationListEntry, agentStaticDsBindingRowStatus=agentStaticDsBindingRowStatus, agentExecAuthorizationListIndex=agentExecAuthorizationListIndex, agentPortBroadcastControlMode=agentPortBroadcastControlMode, agentCmdsAuthorizationListStatus=agentCmdsAuthorizationListStatus)
