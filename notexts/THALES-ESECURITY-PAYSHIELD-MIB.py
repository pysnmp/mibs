#
# PySNMP MIB module THALES-ESECURITY-PAYSHIELD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/thales/THALES-ESECURITY-PAYSHIELD-MIB
# Produced by pysmi-1.1.12 at Sat Jul  6 01:14:10 2024
# On host fv-az1532-138 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
enterprises, Bits, iso, MibIdentifier, Unsigned32, NotificationType, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, ModuleIdentity, Counter32, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Bits", "iso", "MibIdentifier", "Unsigned32", "NotificationType", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "ModuleIdentity", "Counter32", "Integer32", "Gauge32")
TruthValue, DisplayString, MacAddress, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "MacAddress", "DateAndTime", "TextualConvention")
payShieldMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000))
payShieldMIB.setRevisions(('2021-12-25 08:10', '2019-02-26 08:10', '2019-02-26 08:10', '2018-11-12 08:10',))
if mibBuilder.loadTexts: payShieldMIB.setLastUpdated('202112250810Z')
if mibBuilder.loadTexts: payShieldMIB.setOrganization('Thales eSecurity')
thalesEsecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 4096))
thalesEsecurityDevs = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 1))
payshield = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 1, 10000))
thalesEsecurityMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2))
raProductMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2))
payShieldUtil = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 1))
payShieldState = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2))
payShieldStateTamper = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 2))
payShieldStateFan = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 3))
payShieldStatePSU = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 4))
payShieldLmk = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3))
payShieldComms = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4))
payShieldCommsMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4, 1))
payShieldCommsHost = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4, 2))
payShieldCommsHostPort = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4, 2, 4))
payShieldSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 5))
payShieldFraud = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 6))
payShieldVersion = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 7))
payShieldLicensing = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 8))
payShieldEnabledHostCommands = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 9))
payShieldLogs = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 10))
payShieldLogsErrorlog = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 10, 1))
payShieldLogsAuditlog = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 10, 2))
payShieldHealth = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11))
payShieldHealthDiagSelfTest = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 1))
payShieldHealthCheckCounts = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 2))
payShieldHostConnection = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12))
payShieldHostConnectionEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3))
payShieldHostConnectionFICON = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 4))
payShieldManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 13))
payShieldManagementEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 13, 1))
payShieldPrinter = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 14))
payShieldSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 15))
payShieldAuxiliaryEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 16))
notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999))
payShieldNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2))
payShieldAlarmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1))
payShieldTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2))
payShieldAlarmFans = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 1))
payShieldAlarmPSU = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 2))
payShieldAlarmBadPortData = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 3))
payShieldAlarmErrorLog = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 4))
payShieldAlarmBattery = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 5))
payShieldAlarmDiagnostic = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 6))
payShieldAlarmFraud = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 7))
payShieldAlarmErase = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 8))
payShieldAlarmSettingsModified = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 9))
payShieldAlarmStateChange = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 10))
payShieldAlarmTamper = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 11))
payShieldUtilLoad = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldUtilLoad.setStatus('current')
payShieldUtilHostCmdVolume = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 484))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldUtilHostCmdVolume.setStatus('current')
payShieldUtilEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldUtilEnabled.setStatus('current')
payShieldStateDevice = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("stateUnavailable", 1), ("stateOnline", 2), ("stateOffline", 3), ("stateSecure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldStateDevice.setStatus('current')
payShieldStateTamperState = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stateUnknown", 1), ("stateOK", 2), ("stateTampered", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldStateTamperState.setStatus('current')
payShieldStateTamperDate = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 2, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldStateTamperDate.setStatus('current')
payShieldStateTamperCause = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("causeUnavailable", 1), ("causeTemperatureOutOfRange", 2), ("causeBatteryLow", 3), ("causeEraseButtonPressed", 4), ("causeSensorProcessorWatchdog", 5), ("causeSensorProcessorRestart", 6), ("causeVoltageOutOfRange", 7), ("causeMotionDetected", 8), ("causeCaseTampered", 9), ("causePowerLoss", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldStateTamperCause.setStatus('current')
payShieldStateFanTable = MibTable((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 3, 1), )
if mibBuilder.loadTexts: payShieldStateFanTable.setStatus('current')
payShieldStateFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 3, 1, 1), ).setIndexNames((0, "THALES-ESECURITY-PAYSHIELD-MIB", "payShieldStateFanIndex"))
if mibBuilder.loadTexts: payShieldStateFanEntry.setStatus('current')
payShieldStateFanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: payShieldStateFanIndex.setStatus('current')
payShieldStateFanSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldStateFanSerialNum.setStatus('current')
payShieldStateFanState = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stateOK", 1), ("stateFailure", 2), ("stateNotDetected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldStateFanState.setStatus('current')
payShieldStatePSUTable = MibTable((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 4, 1), )
if mibBuilder.loadTexts: payShieldStatePSUTable.setStatus('current')
payShieldStatePSUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 4, 1, 1), ).setIndexNames((0, "THALES-ESECURITY-PAYSHIELD-MIB", "payShieldStatePSUIndex"))
if mibBuilder.loadTexts: payShieldStatePSUEntry.setStatus('current')
payShieldStatePSUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: payShieldStatePSUIndex.setStatus('current')
payShieldStatePSUSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldStatePSUSerialNum.setStatus('current')
payShieldStatePSUState = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stateOK", 1), ("stateFailure", 2), ("stateNotDetected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldStatePSUState.setStatus('current')
payShieldStateBattery = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stateOK", 1), ("stateWarning", 2), ("stateFailure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldStateBattery.setStatus('current')
payShieldLmkNumLoaded = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLmkNumLoaded.setStatus('current')
payShieldLmkNumTestLmksLoaded = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLmkNumTestLmksLoaded.setStatus('current')
payShieldLmkNumOldLmksLoaded = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLmkNumOldLmksLoaded.setStatus('current')
payShieldLmkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 4), )
if mibBuilder.loadTexts: payShieldLmkStatusTable.setStatus('current')
payShieldLmkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 4, 1), ).setIndexNames((0, "THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkStatusIndex"))
if mibBuilder.loadTexts: payShieldLmkStatusEntry.setStatus('current')
payShieldLmkStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: payShieldLmkStatusIndex.setStatus('current')
payShieldLmkStatusLoaded = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 4, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLmkStatusLoaded.setStatus('current')
payShieldLmkStatusAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLmkStatusAuth.setStatus('current')
payShieldLmkStatusNumAuthActivities = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLmkStatusNumAuthActivities.setStatus('current')
payShieldLmkStatusScheme = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lmkSchemeUnknown", 1), ("lmkSchemeVariant", 2), ("lmkSchemeKeyblock", 3), ("lmkSchemeAES", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLmkStatusScheme.setStatus('current')
payShieldLmkStatusAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lmkAlgorithmUnknown", 1), ("lmkAlgorithm3DES2Key", 2), ("lmkAlgorithm3DES3Key", 3), ("lmkAlgorithmAES256", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLmkStatusAlgorithm.setStatus('current')
payShieldLmkStatusLiveTest = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lmkStatusUnknown", 1), ("lmkStatusLive", 2), ("lmkStatusTest", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLmkStatusLiveTest.setStatus('current')
payShieldLmkStatusComments = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 4, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 41))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLmkStatusComments.setStatus('current')
payShieldLmkStatusCheckDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 3, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLmkStatusCheckDigits.setStatus('current')
payShieldCommsMgmtConsoleState = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("consoleUp", 1), ("consoleDown", 2), ("consoleDisabledByGui", 3), ("consoleUnavailable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldCommsMgmtConsoleState.setStatus('current')
payShieldCommsMgmtGuiState = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("guiUp", 1), ("guiDown", 2), ("guiUnavailable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldCommsMgmtGuiState.setStatus('current')
payShieldCommsHostTCPServer = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("serverUp", 1), ("serverDown", 2), ("serverNotEnabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldCommsHostTCPServer.setStatus('current')
payShieldCommsHostUDPServer = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("serverUp", 1), ("serverDown", 2), ("serverNotEnabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldCommsHostUDPServer.setStatus('current')
payShieldCommsHostFICONServer = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("serverUp", 1), ("serverDown", 2), ("serverNotEnabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldCommsHostFICONServer.setStatus('current')
payShieldCommsHostPortEthernet1 = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("portUp", 1), ("portDown", 2), ("portUnavailable", 3), ("portNotConfigured", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldCommsHostPortEthernet1.setStatus('current')
payShieldCommsHostPortEthernet2 = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("portUp", 1), ("portDown", 2), ("portUnavailable", 3), ("portNotConfigured", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldCommsHostPortEthernet2.setStatus('current')
payShieldCommsHostPortFICON = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 4, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("portUp", 1), ("portDown", 2), ("portUnavailable", 3), ("portNotConfigured", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldCommsHostPortFICON.setStatus('current')
payShieldSystemDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 5, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldSystemDateAndTime.setStatus('current')
payShieldSystemSerialNum = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 5, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldSystemSerialNum.setStatus('current')
payShieldSystemModel = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 5, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldSystemModel.setStatus('current')
payShieldFraudPinVerifyLimitsExceeded = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 6, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldFraudPinVerifyLimitsExceeded.setStatus('current')
payShieldFraudPinAttackLimitsExceeded = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 6, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldFraudPinAttackLimitsExceeded.setStatus('current')
payShieldVersionSoftwareBaseRelease = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 7, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldVersionSoftwareBaseRelease.setStatus('current')
payShieldVersionSoftwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 7, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldVersionSoftwareRevision.setStatus('current')
payShieldVersionSoftwareBuildNumber = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 7, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldVersionSoftwareBuildNumber.setStatus('deprecated')
payShieldVersionSoftwareHSMCoreAPIVersion = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldVersionSoftwareHSMCoreAPIVersion.setStatus('deprecated')
payShieldVersionSoftwareCPLDVersion = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 7, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldVersionSoftwareCPLDVersion.setStatus('current')
payShieldVersionSoftwareSPVersion = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 7, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldVersionSoftwareSPVersion.setStatus('current')
payShieldVersionSoftwareSPBootVersion = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 7, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldVersionSoftwareSPBootVersion.setStatus('current')
payShieldVersionSoftwareBootstrapVersion = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 7, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldVersionSoftwareBootstrapVersion.setStatus('current')
payShieldVersionSoftwareFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 7, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldVersionSoftwareFirmwareVersion.setStatus('current')
payShieldVersionSoftwareDeploymentVersion = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 7, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldVersionSoftwareDeploymentVersion.setStatus('current')
payShieldLicensingPerformanceModel = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLicensingPerformanceModel.setStatus('current')
payShieldLicensingPackage = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 8, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLicensingPackage.setStatus('current')
payShieldLicensingOptionalLicenseCount = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 8, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLicensingOptionalLicenseCount.setStatus('current')
payShieldLicensingOptionalLicensesList = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 8, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLicensingOptionalLicensesList.setStatus('current')
payShieldLicensingCryptoAlgorithmCount = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 8, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLicensingCryptoAlgorithmCount.setStatus('current')
payShieldLicensingCryptoAlgorithmList = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 8, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLicensingCryptoAlgorithmList.setStatus('current')
payShieldEnabledHostCommandsCount = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldEnabledHostCommandsCount.setStatus('current')
payShieldEnabledHostCommandsList = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 9, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldEnabledHostCommandsList.setStatus('current')
payShieldLogsErrorlogTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLogsErrorlogTotalCount.setStatus('current')
payShieldLogsErrorlogMaxLength = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLogsErrorlogMaxLength.setStatus('current')
payShieldLogsAuditlogTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 10, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLogsAuditlogTotalCount.setStatus('current')
payShieldLogsAuditlogMaxLength = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 10, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldLogsAuditlogMaxLength.setStatus('current')
payShieldHealthDiagSelfTestTimeOfDay = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthDiagSelfTestTimeOfDay.setStatus('current')
payShieldHealthDiagSelfTestOK = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthDiagSelfTestOK.setStatus('current')
payShieldHealthDiagSelfTestCount = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthDiagSelfTestCount.setStatus('current')
payShieldHealthDiagSelfTestList = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthDiagSelfTestList.setStatus('current')
payShieldHealthHealthCheckEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 2, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthHealthCheckEnabled.setStatus('current')
payShieldHealthCheckCountsStartTime = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 2, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthCheckCountsStartTime.setStatus('current')
payShieldHealthCheckCountsEndTime = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 2, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthCheckCountsEndTime.setStatus('current')
payShieldHealthCheckCountsRebootCount = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthCheckCountsRebootCount.setStatus('current')
payShieldHealthCheckCountsTamperCount = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthCheckCountsTamperCount.setStatus('current')
payShieldHealthCheckCountsPinFailuresMinuteLimit = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthCheckCountsPinFailuresMinuteLimit.setStatus('current')
payShieldHealthCheckCountsPinFailuresHourLimit = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthCheckCountsPinFailuresHourLimit.setStatus('current')
payShieldHealthCheckCountsPinAttackLimitExceeded = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 11, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHealthCheckCountsPinAttackLimitExceeded.setStatus('current')
payShieldHostConnectionEthernetEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetEnabled.setStatus('current')
payShieldHostConnectionFICONEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionFICONEnabled.setStatus('current')
payShieldHostConnectionEthernetIfCount = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetIfCount.setStatus('current')
payShieldHostConnectionEthernetSSLEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetSSLEnabled.setStatus('current')
payShieldHostConnectionEthernetACLsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetACLsEnabled.setStatus('current')
payShieldHostConnectionEthernetUDPEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetUDPEnabled.setStatus('current')
payShieldHostConnectionEthernetTCPEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetTCPEnabled.setStatus('current')
payShieldHostConnectionEthernetMaxTCPConnections = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetMaxTCPConnections.setStatus('current')
payShieldHostConnectionEthernetTCPKeepalive = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetTCPKeepalive.setStatus('current')
payShieldHostConnectionEthernetWellKnownPortTCP = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetWellKnownPortTCP.setStatus('current')
payShieldHostConnectionEthernetWellKnownPortTLS = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetWellKnownPortTLS.setStatus('current')
payShieldHostConnectionEthernetTable = MibTable((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10), )
if mibBuilder.loadTexts: payShieldHostConnectionEthernetTable.setStatus('current')
payShieldHostConnectionEthernetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1), ).setIndexNames((0, "THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetIndex"))
if mibBuilder.loadTexts: payShieldHostConnectionEthernetEntry.setStatus('current')
payShieldHostConnectionEthernetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: payShieldHostConnectionEthernetIndex.setStatus('current')
payShieldHostConnectionEthernetConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetConfigured.setStatus('current')
payShieldHostConnectionEthernetInterfaceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetInterfaceNumber.setStatus('current')
payShieldHostConnectionEthernetConfigMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ipMethodUnknown", 0), ("ipMethodStatic", 1), ("ipMethodDHCP", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetConfigMethod.setStatus('current')
payShieldHostConnectionEthernetHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetHostName.setStatus('current')
payShieldHostConnectionEthernetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetIpAddress.setStatus('current')
payShieldHostConnectionEthernetSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetSubnetMask.setStatus('current')
payShieldHostConnectionEthernetGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetGateway.setStatus('current')
payShieldHostConnectionEthernetMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 9), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetMacAddress.setStatus('current')
payShieldHostConnectionEthernetPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetPortSpeed.setStatus('current')
payShieldHostConnectionNumberOfConnectionsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionNumberOfConnectionsUsed.setStatus('current')
payShieldHostConnectionEthernetLoadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 3, 10, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionEthernetLoadCount.setStatus('current')
payShieldHostConnectionFICONControlUnitImage = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 4, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionFICONControlUnitImage.setStatus('current')
payShieldHostConnectionFICONControlUnitAddress = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 4, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionFICONControlUnitAddress.setStatus('current')
payShieldHostConnectionFICONMIH = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 12, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldHostConnectionFICONMIH.setStatus('current')
payShieldManagementEthernetEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 13, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldManagementEthernetEnabled.setStatus('current')
payShieldManagementEthernetConfigMethod = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ipMethodUnknown", 0), ("ipMethodStatic", 1), ("ipMethodDHCP", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldManagementEthernetConfigMethod.setStatus('current')
payShieldManagementEthernetNetworkName = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 13, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldManagementEthernetNetworkName.setStatus('current')
payShieldManagementEthernetIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 13, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldManagementEthernetIpAddress.setStatus('current')
payShieldManagementEthernetSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 13, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldManagementEthernetSubnetMask.setStatus('current')
payShieldManagementEthernetGateway = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 13, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldManagementEthernetGateway.setStatus('current')
payShieldManagementEthernetMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 13, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldManagementEthernetMacAddress.setStatus('current')
payShieldManagementEthernetPortSpeed = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 13, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldManagementEthernetPortSpeed.setStatus('current')
payShieldPrinterLFCRReversed = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 14, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldPrinterLFCRReversed.setStatus('current')
payShieldPrinterTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 14, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldPrinterTimeout.setStatus('current')
payShieldPrinterDelay = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 14, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldPrinterDelay.setStatus('current')
payShieldPrinterReport = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 14, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldPrinterReport.setStatus('current')
payShieldSettingsPCICompliant = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 15, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldSettingsPCICompliant.setStatus('current')
payShieldSettingsHashSecuritySetting = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 15, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldSettingsHashSecuritySetting.setStatus('current')
payShieldSettingsHashGeneralSetting = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 15, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldSettingsHashGeneralSetting.setStatus('current')
payShieldSettingsHashConfigureCommand = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 15, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldSettingsHashConfigureCommand.setStatus('current')
payShieldSettingsHashAuditSetting = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 15, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldSettingsHashAuditSetting.setStatus('current')
payShieldSettingsHashLMK = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 15, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldSettingsHashLMK.setStatus('current')
payShieldAuxiliaryEthernetEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 16, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldAuxiliaryEthernetEnabled.setStatus('current')
payShieldAuxiliaryEthernetConfigMethod = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 16, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ipMethodUnknown", 0), ("ipMethodStatic", 1), ("ipMethodDHCP", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldAuxiliaryEthernetConfigMethod.setStatus('current')
payShieldAuxiliaryEthernetNetworkName = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 16, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldAuxiliaryEthernetNetworkName.setStatus('current')
payShieldAuxiliaryEthernetIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 16, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldAuxiliaryEthernetIpAddress.setStatus('current')
payShieldAuxiliaryEthernetSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 16, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldAuxiliaryEthernetSubnetMask.setStatus('current')
payShieldAuxiliaryEthernetGateway = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 16, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldAuxiliaryEthernetGateway.setStatus('current')
payShieldAuxiliaryEthernetMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 16, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldAuxiliaryEthernetMacAddress.setStatus('current')
payShieldAuxiliaryEthernetPortSpeed = MibScalar((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 16, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: payShieldAuxiliaryEthernetPortSpeed.setStatus('current')
payShieldFanNumber = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fan1", 1), ("fan2", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldFanNumber.setStatus('current')
payShieldFanState = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stateOK", 1), ("stateFailure", 2), ("stateNotDetected", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldFanState.setStatus('current')
payShieldPSUNumber = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("psu1", 1), ("psu2", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldPSUNumber.setStatus('current')
payShieldPSUState = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stateOK", 1), ("stateFailure", 2), ("stateNotDetected", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldPSUState.setStatus('current')
payShieldBadDataPhysicalPort = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("portHost1", 1), ("portHost2", 2), ("portFICON", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldBadDataPhysicalPort.setStatus('current')
payShieldBadDataProtocol = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("protocolTCP", 1), ("protocolUDP", 2), ("protocolFICON", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldBadDataProtocol.setStatus('current')
payShieldErrorLogData = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 4, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldErrorLogData.setStatus('current')
payShieldBatteryState = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stateOK", 1), ("stateWarning", 2), ("stateFailure", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldBatteryState.setStatus('current')
payShieldDiagnosticID = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("diagDES", 1), ("diagAES", 2), ("diagECDSA", 3), ("diagHMAC", 4), ("diagMD5", 5), ("diagSHA", 6), ("diagRSA", 7), ("diagRNG", 8), ("diagRTC", 9), ("diagMemory", 10), ("diagPower", 11), ("diagBattery", 12), ("diagFans", 13), ("diagTemperature", 14), ("diagVoltage", 15), ("diagUDP", 16), ("diagTCP", 17), ("diagFICON", 18)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldDiagnosticID.setStatus('current')
payShieldDiagnosticString = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 6, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldDiagnosticString.setStatus('current')
payShieldFraudType = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fraudExceededFailuresPerMinute", 1), ("fraudExceededFailuresPerHour", 2), ("fraudExceededAttackLimit", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldFraudType.setStatus('current')
payShieldAlarmEraseTimeandDate = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 8, 1), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldAlarmEraseTimeandDate.setStatus('current')
payShieldModifiedSetting = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("settingSecurity", 1), ("settingPCI", 2), ("settingAuditedItems", 3), ("settingEnabledPinblocks", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldModifiedSetting.setStatus('current')
payShieldDeviceState = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("stateUnavailable", 1), ("stateOnline", 2), ("stateOffline", 3), ("stateSecure", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldDeviceState.setStatus('current')
payShieldTamperCause = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("causeUnavailable", 1), ("causeTemperatureOutOfRange", 2), ("causeBatteryLow", 3), ("causeEraseButtonPressed", 4), ("causeSensorProcessorWatchdog", 5), ("causeSensorProcessorRestart", 6), ("causeVoltageOutOfRange", 7), ("causeMotionDetected", 8), ("causeCaseTampered", 9), ("causePowerLoss", 10)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldTamperCause.setStatus('current')
payShieldTamperDate = MibScalar((1, 3, 6, 1, 4, 1, 4096, 999, 2, 1, 11, 2), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: payShieldTamperDate.setStatus('current')
payShieldPowerOnAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 1))
if mibBuilder.loadTexts: payShieldPowerOnAlarm.setStatus('current')
payShieldRestartAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 2))
if mibBuilder.loadTexts: payShieldRestartAlarm.setStatus('deprecated')
payShieldEraseAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 3)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldAlarmEraseTimeandDate"))
if mibBuilder.loadTexts: payShieldEraseAlarm.setStatus('current')
payShieldNewLicenseAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 4))
if mibBuilder.loadTexts: payShieldNewLicenseAlarm.setStatus('current')
payShieldNewSoftwareAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 5))
if mibBuilder.loadTexts: payShieldNewSoftwareAlarm.setStatus('current')
payShieldPSUAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 6)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldPSUNumber"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldPSUState"))
if mibBuilder.loadTexts: payShieldPSUAlarm.setStatus('current')
payShieldBatteryAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 7)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldBatteryState"))
if mibBuilder.loadTexts: payShieldBatteryAlarm.setStatus('current')
payShieldFanAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 8)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldFanNumber"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldFanState"))
if mibBuilder.loadTexts: payShieldFanAlarm.setStatus('current')
payShieldTamperAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 9)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldTamperCause"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldTamperDate"))
if mibBuilder.loadTexts: payShieldTamperAlarm.setStatus('current')
payShieldHostPortBadDataAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 10)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldBadDataPhysicalPort"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldBadDataProtocol"))
if mibBuilder.loadTexts: payShieldHostPortBadDataAlarm.setStatus('current')
payShieldFraudAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 11)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldFraudType"))
if mibBuilder.loadTexts: payShieldFraudAlarm.setStatus('current')
payShieldDiagnosticTestFailureAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 12)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldDiagnosticID"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldDiagnosticString"))
if mibBuilder.loadTexts: payShieldDiagnosticTestFailureAlarm.setStatus('current')
payShieldErrorlogAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 13)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldErrorLogData"))
if mibBuilder.loadTexts: payShieldErrorlogAlarm.setStatus('current')
payShieldSettingsModifiedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 14)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldModifiedSetting"))
if mibBuilder.loadTexts: payShieldSettingsModifiedAlarm.setStatus('current')
payShieldDeviceStateAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4096, 999, 2, 2, 15)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldDeviceState"))
if mibBuilder.loadTexts: payShieldDeviceStateAlarm.setStatus('current')
payShieldMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 100))
payShieldMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 100, 1))
payShieldMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 100, 2))
payShieldMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 100, 1, 1)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldDeprecatedObjectGroup"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldDeprecatedNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    payShieldMIBCompliance = payShieldMIBCompliance.setStatus('deprecated')
payShieldMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 100, 1, 2)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldObjectGroup"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldAlarmObjectGroup"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    payShieldMIBCompliance2 = payShieldMIBCompliance2.setStatus('current')
payShieldObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 100, 2, 1)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldUtilLoad"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldUtilHostCmdVolume"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldUtilEnabled"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldStateDevice"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldStateTamperState"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldStateTamperDate"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldStateTamperCause"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldStateFanSerialNum"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldStateFanState"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldStatePSUSerialNum"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldStatePSUState"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldStateBattery"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkNumLoaded"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkNumTestLmksLoaded"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkNumOldLmksLoaded"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkStatusLoaded"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkStatusAuth"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkStatusNumAuthActivities"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkStatusScheme"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkStatusAlgorithm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkStatusLiveTest"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkStatusComments"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLmkStatusCheckDigits"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldCommsMgmtConsoleState"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldCommsMgmtGuiState"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldCommsHostTCPServer"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldCommsHostUDPServer"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldCommsHostFICONServer"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldCommsHostPortEthernet1"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldCommsHostPortEthernet2"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldCommsHostPortFICON"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldSystemDateAndTime"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldSystemSerialNum"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldSystemModel"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldFraudPinVerifyLimitsExceeded"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldFraudPinAttackLimitsExceeded"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldVersionSoftwareBaseRelease"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldVersionSoftwareRevision"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldVersionSoftwareBuildNumber"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldVersionSoftwareCPLDVersion"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldVersionSoftwareSPVersion"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldVersionSoftwareSPBootVersion"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldVersionSoftwareBootstrapVersion"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLicensingPerformanceModel"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLicensingPackage"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLicensingOptionalLicenseCount"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLicensingOptionalLicensesList"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLicensingCryptoAlgorithmCount"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLicensingCryptoAlgorithmList"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldEnabledHostCommandsCount"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldEnabledHostCommandsList"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLogsErrorlogTotalCount"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLogsErrorlogMaxLength"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLogsAuditlogTotalCount"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldLogsAuditlogMaxLength"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthDiagSelfTestTimeOfDay"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthDiagSelfTestOK"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthDiagSelfTestCount"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthDiagSelfTestList"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthHealthCheckEnabled"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthCheckCountsStartTime"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthCheckCountsEndTime"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthCheckCountsRebootCount"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthCheckCountsTamperCount"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthCheckCountsPinFailuresMinuteLimit"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthCheckCountsPinFailuresHourLimit"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHealthCheckCountsPinAttackLimitExceeded"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetEnabled"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionFICONEnabled"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetIfCount"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetSSLEnabled"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetACLsEnabled"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetUDPEnabled"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetTCPEnabled"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetMaxTCPConnections"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetTCPKeepalive"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetWellKnownPortTCP"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetWellKnownPortTLS"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetConfigured"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetInterfaceNumber"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetConfigMethod"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetHostName"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetIpAddress"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetSubnetMask"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetGateway"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetMacAddress"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetPortSpeed"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionNumberOfConnectionsUsed"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionEthernetLoadCount"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionFICONControlUnitImage"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionFICONControlUnitAddress"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostConnectionFICONMIH"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldManagementEthernetEnabled"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldManagementEthernetConfigMethod"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldManagementEthernetNetworkName"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldManagementEthernetIpAddress"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldManagementEthernetSubnetMask"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldManagementEthernetGateway"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldManagementEthernetMacAddress"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldManagementEthernetPortSpeed"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldPrinterLFCRReversed"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldPrinterTimeout"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldPrinterDelay"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldPrinterReport"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldSettingsPCICompliant"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldSettingsHashSecuritySetting"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldSettingsHashGeneralSetting"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldSettingsHashConfigureCommand"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldSettingsHashAuditSetting"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldSettingsHashLMK"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldAuxiliaryEthernetEnabled"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldAuxiliaryEthernetConfigMethod"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldAuxiliaryEthernetNetworkName"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldAuxiliaryEthernetIpAddress"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldAuxiliaryEthernetSubnetMask"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldAuxiliaryEthernetGateway"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldAuxiliaryEthernetMacAddress"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldAuxiliaryEthernetPortSpeed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    payShieldObjectGroup = payShieldObjectGroup.setStatus('current')
payShieldDeprecatedObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 100, 2, 2)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldVersionSoftwareHSMCoreAPIVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    payShieldDeprecatedObjectGroup = payShieldDeprecatedObjectGroup.setStatus('deprecated')
payShieldAlarmObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 100, 2, 3)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldFanNumber"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldFanState"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldPSUNumber"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldPSUState"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldBadDataPhysicalPort"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldBadDataProtocol"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldErrorLogData"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldBatteryState"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldDiagnosticID"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldDiagnosticString"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldFraudType"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldAlarmEraseTimeandDate"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldModifiedSetting"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldDeviceState"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldTamperCause"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldTamperDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    payShieldAlarmObjectGroup = payShieldAlarmObjectGroup.setStatus('current')
payShieldNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 100, 2, 4)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldPowerOnAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldEraseAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldNewLicenseAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldNewSoftwareAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldPSUAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldBatteryAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldFanAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldTamperAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldHostPortBadDataAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldFraudAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldDiagnosticTestFailureAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldErrorlogAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldSettingsModifiedAlarm"), ("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldDeviceStateAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    payShieldNotificationGroup = payShieldNotificationGroup.setStatus('current')
payShieldDeprecatedNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4096, 2, 2, 10000, 100, 2, 5)).setObjects(("THALES-ESECURITY-PAYSHIELD-MIB", "payShieldRestartAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    payShieldDeprecatedNotificationGroup = payShieldDeprecatedNotificationGroup.setStatus('deprecated')
mibBuilder.exportSymbols("THALES-ESECURITY-PAYSHIELD-MIB", payShieldPSUAlarm=payShieldPSUAlarm, payShieldLogsErrorlogMaxLength=payShieldLogsErrorlogMaxLength, payShieldHealthCheckCountsPinFailuresHourLimit=payShieldHealthCheckCountsPinFailuresHourLimit, payShieldHealthCheckCountsPinAttackLimitExceeded=payShieldHealthCheckCountsPinAttackLimitExceeded, payShieldHostConnectionEthernet=payShieldHostConnectionEthernet, payShieldStatePSUIndex=payShieldStatePSUIndex, payShieldVersionSoftwareHSMCoreAPIVersion=payShieldVersionSoftwareHSMCoreAPIVersion, payShieldStateTamperDate=payShieldStateTamperDate, payShieldLicensingPerformanceModel=payShieldLicensingPerformanceModel, payShieldHealth=payShieldHealth, payShieldFraudPinVerifyLimitsExceeded=payShieldFraudPinVerifyLimitsExceeded, payShieldLicensingCryptoAlgorithmList=payShieldLicensingCryptoAlgorithmList, payShieldLogsAuditlogTotalCount=payShieldLogsAuditlogTotalCount, payShieldHealthDiagSelfTestCount=payShieldHealthDiagSelfTestCount, payShieldHealthHealthCheckEnabled=payShieldHealthHealthCheckEnabled, payShieldSettings=payShieldSettings, payShieldHostConnectionEthernetMaxTCPConnections=payShieldHostConnectionEthernetMaxTCPConnections, payShieldHostConnectionEthernetConfigMethod=payShieldHostConnectionEthernetConfigMethod, payShieldHostConnectionEthernetSubnetMask=payShieldHostConnectionEthernetSubnetMask, payShieldMIBCompliance=payShieldMIBCompliance, payShieldCommsHostUDPServer=payShieldCommsHostUDPServer, payShieldCommsMgmtConsoleState=payShieldCommsMgmtConsoleState, payShieldCommsHostPortEthernet1=payShieldCommsHostPortEthernet1, payShieldSystemSerialNum=payShieldSystemSerialNum, payShieldErrorLogData=payShieldErrorLogData, payShieldFraudAlarm=payShieldFraudAlarm, payShieldVersionSoftwareRevision=payShieldVersionSoftwareRevision, payShieldHostConnectionEthernetEnabled=payShieldHostConnectionEthernetEnabled, payShieldAuxiliaryEthernetIpAddress=payShieldAuxiliaryEthernetIpAddress, payShieldState=payShieldState, payShieldUtilLoad=payShieldUtilLoad, payShieldManagementEthernet=payShieldManagementEthernet, payShieldCommsHostPortEthernet2=payShieldCommsHostPortEthernet2, payShieldTraps=payShieldTraps, payShieldLicensingCryptoAlgorithmCount=payShieldLicensingCryptoAlgorithmCount, payShieldLicensingPackage=payShieldLicensingPackage, payShieldDeviceState=payShieldDeviceState, payShieldCommsHost=payShieldCommsHost, payShieldAlarmPSU=payShieldAlarmPSU, payShieldHostConnectionFICONEnabled=payShieldHostConnectionFICONEnabled, payShieldAlarmErase=payShieldAlarmErase, payShieldUtilEnabled=payShieldUtilEnabled, payShieldManagementEthernetSubnetMask=payShieldManagementEthernetSubnetMask, payShieldAlarmObjects=payShieldAlarmObjects, payShieldLmkStatusScheme=payShieldLmkStatusScheme, payShieldAuxiliaryEthernetGateway=payShieldAuxiliaryEthernetGateway, payShieldSystemDateAndTime=payShieldSystemDateAndTime, payShieldStatePSUTable=payShieldStatePSUTable, payShieldManagementEthernetEnabled=payShieldManagementEthernetEnabled, payShieldPrinterDelay=payShieldPrinterDelay, payShieldMIBConformance=payShieldMIBConformance, payShieldHostConnectionFICONControlUnitAddress=payShieldHostConnectionFICONControlUnitAddress, payShieldHealthDiagSelfTestOK=payShieldHealthDiagSelfTestOK, payShieldPrinter=payShieldPrinter, payShieldLmkStatusAlgorithm=payShieldLmkStatusAlgorithm, payShieldStateFanIndex=payShieldStateFanIndex, payShieldLmkStatusComments=payShieldLmkStatusComments, payShieldBatteryAlarm=payShieldBatteryAlarm, payShieldAuxiliaryEthernet=payShieldAuxiliaryEthernet, payShieldHostConnectionEthernetWellKnownPortTCP=payShieldHostConnectionEthernetWellKnownPortTCP, payShieldVersionSoftwareBootstrapVersion=payShieldVersionSoftwareBootstrapVersion, payShieldStateBattery=payShieldStateBattery, payShieldHealthCheckCountsEndTime=payShieldHealthCheckCountsEndTime, payShieldLmkStatusIndex=payShieldLmkStatusIndex, payShieldStateFanEntry=payShieldStateFanEntry, payShieldFanState=payShieldFanState, payShieldHostConnectionEthernetTCPKeepalive=payShieldHostConnectionEthernetTCPKeepalive, payShieldStateFanTable=payShieldStateFanTable, payShieldModifiedSetting=payShieldModifiedSetting, payShieldLicensingOptionalLicenseCount=payShieldLicensingOptionalLicenseCount, payShieldTamperAlarm=payShieldTamperAlarm, payShieldPSUNumber=payShieldPSUNumber, thalesEsecurityMibs=thalesEsecurityMibs, payShieldPrinterLFCRReversed=payShieldPrinterLFCRReversed, payShieldHostPortBadDataAlarm=payShieldHostPortBadDataAlarm, payShieldNotifications=payShieldNotifications, payShieldLogs=payShieldLogs, payShieldLogsErrorlogTotalCount=payShieldLogsErrorlogTotalCount, payShieldStateFanState=payShieldStateFanState, payShieldStateTamper=payShieldStateTamper, payShieldSettingsPCICompliant=payShieldSettingsPCICompliant, payShieldHealthDiagSelfTest=payShieldHealthDiagSelfTest, payShieldStateFanSerialNum=payShieldStateFanSerialNum, payShieldFanAlarm=payShieldFanAlarm, payShieldUtil=payShieldUtil, payShieldSettingsHashConfigureCommand=payShieldSettingsHashConfigureCommand, payShieldVersionSoftwareBuildNumber=payShieldVersionSoftwareBuildNumber, payShieldVersionSoftwareBaseRelease=payShieldVersionSoftwareBaseRelease, payShieldSettingsHashSecuritySetting=payShieldSettingsHashSecuritySetting, payShieldFanNumber=payShieldFanNumber, payShieldDiagnosticString=payShieldDiagnosticString, payShieldHostConnectionEthernetPortSpeed=payShieldHostConnectionEthernetPortSpeed, PYSNMP_MODULE_ID=payShieldMIB, payShieldStateTamperState=payShieldStateTamperState, payShieldStateFan=payShieldStateFan, payShieldLmk=payShieldLmk, payShieldHostConnectionEthernetWellKnownPortTLS=payShieldHostConnectionEthernetWellKnownPortTLS, payShieldPSUState=payShieldPSUState, payShieldLmkStatusEntry=payShieldLmkStatusEntry, payShieldLmkStatusTable=payShieldLmkStatusTable, payShieldHostConnectionEthernetConfigured=payShieldHostConnectionEthernetConfigured, payShieldVersionSoftwareSPBootVersion=payShieldVersionSoftwareSPBootVersion, payShieldAuxiliaryEthernetEnabled=payShieldAuxiliaryEthernetEnabled, payShieldCommsMgmt=payShieldCommsMgmt, payShieldHostConnectionFICON=payShieldHostConnectionFICON, payShieldCommsMgmtGuiState=payShieldCommsMgmtGuiState, payShieldAlarmDiagnostic=payShieldAlarmDiagnostic, payShieldCommsHostFICONServer=payShieldCommsHostFICONServer, payShieldDiagnosticID=payShieldDiagnosticID, payShieldTamperDate=payShieldTamperDate, payShieldLicensingOptionalLicensesList=payShieldLicensingOptionalLicensesList, payShieldSettingsModifiedAlarm=payShieldSettingsModifiedAlarm, payShieldDeviceStateAlarm=payShieldDeviceStateAlarm, payShieldHostConnectionEthernetTCPEnabled=payShieldHostConnectionEthernetTCPEnabled, payShieldHostConnectionEthernetUDPEnabled=payShieldHostConnectionEthernetUDPEnabled, payShieldBadDataProtocol=payShieldBadDataProtocol, payShieldMIBGroups=payShieldMIBGroups, payShieldHostConnectionEthernetHostName=payShieldHostConnectionEthernetHostName, payShieldFraud=payShieldFraud, payShieldFraudType=payShieldFraudType, payShieldSettingsHashAuditSetting=payShieldSettingsHashAuditSetting, payShieldManagementEthernetNetworkName=payShieldManagementEthernetNetworkName, payShieldStatePSU=payShieldStatePSU, payShieldAlarmFraud=payShieldAlarmFraud, payShieldDeprecatedNotificationGroup=payShieldDeprecatedNotificationGroup, payShieldHostConnectionEthernetGateway=payShieldHostConnectionEthernetGateway, payShieldManagementEthernetGateway=payShieldManagementEthernetGateway, payShieldAlarmSettingsModified=payShieldAlarmSettingsModified, payShieldLmkNumLoaded=payShieldLmkNumLoaded, payShieldEnabledHostCommandsList=payShieldEnabledHostCommandsList, thalesEsecurity=thalesEsecurity, payShieldStatePSUSerialNum=payShieldStatePSUSerialNum, payShieldSystem=payShieldSystem, payShieldMIB=payShieldMIB, payShieldLogsAuditlog=payShieldLogsAuditlog, payShieldMIBCompliance2=payShieldMIBCompliance2, payShieldObjectGroup=payShieldObjectGroup, payShieldDiagnosticTestFailureAlarm=payShieldDiagnosticTestFailureAlarm, payShieldHostConnectionEthernetTable=payShieldHostConnectionEthernetTable, payshield=payshield, payShieldLmkStatusNumAuthActivities=payShieldLmkStatusNumAuthActivities, payShieldNotificationGroup=payShieldNotificationGroup, payShieldTamperCause=payShieldTamperCause, payShieldDeprecatedObjectGroup=payShieldDeprecatedObjectGroup, payShieldHealthCheckCountsPinFailuresMinuteLimit=payShieldHealthCheckCountsPinFailuresMinuteLimit, payShieldEnabledHostCommands=payShieldEnabledHostCommands, payShieldAuxiliaryEthernetConfigMethod=payShieldAuxiliaryEthernetConfigMethod, payShieldMIBCompliances=payShieldMIBCompliances, payShieldAlarmStateChange=payShieldAlarmStateChange, payShieldHostConnectionEthernetIfCount=payShieldHostConnectionEthernetIfCount, payShieldAlarmTamper=payShieldAlarmTamper, payShieldVersionSoftwareDeploymentVersion=payShieldVersionSoftwareDeploymentVersion, payShieldRestartAlarm=payShieldRestartAlarm, payShieldStateDevice=payShieldStateDevice, payShieldPrinterReport=payShieldPrinterReport, payShieldHealthDiagSelfTestTimeOfDay=payShieldHealthDiagSelfTestTimeOfDay, payShieldAlarmEraseTimeandDate=payShieldAlarmEraseTimeandDate, payShieldAuxiliaryEthernetPortSpeed=payShieldAuxiliaryEthernetPortSpeed, payShieldNewLicenseAlarm=payShieldNewLicenseAlarm, payShieldHostConnectionEthernetEntry=payShieldHostConnectionEthernetEntry, payShieldPowerOnAlarm=payShieldPowerOnAlarm, payShieldManagementEthernetMacAddress=payShieldManagementEthernetMacAddress, payShieldLmkStatusCheckDigits=payShieldLmkStatusCheckDigits, payShieldLmkStatusAuth=payShieldLmkStatusAuth, payShieldLogsErrorlog=payShieldLogsErrorlog, raProductMibs=raProductMibs, payShieldStatePSUState=payShieldStatePSUState, payShieldEnabledHostCommandsCount=payShieldEnabledHostCommandsCount, payShieldStateTamperCause=payShieldStateTamperCause, payShieldHostConnectionEthernetMacAddress=payShieldHostConnectionEthernetMacAddress, payShieldHostConnectionEthernetSSLEnabled=payShieldHostConnectionEthernetSSLEnabled, payShieldAlarmErrorLog=payShieldAlarmErrorLog, payShieldErrorlogAlarm=payShieldErrorlogAlarm, payShieldLicensing=payShieldLicensing, payShieldManagementEthernetIpAddress=payShieldManagementEthernetIpAddress, payShieldEraseAlarm=payShieldEraseAlarm, payShieldCommsHostPortFICON=payShieldCommsHostPortFICON, payShieldHostConnectionEthernetLoadCount=payShieldHostConnectionEthernetLoadCount, payShieldSettingsHashLMK=payShieldSettingsHashLMK, payShieldPrinterTimeout=payShieldPrinterTimeout, notifications=notifications, payShieldAlarmObjectGroup=payShieldAlarmObjectGroup, payShieldHostConnection=payShieldHostConnection, payShieldStatePSUEntry=payShieldStatePSUEntry, payShieldHealthCheckCounts=payShieldHealthCheckCounts, payShieldSystemModel=payShieldSystemModel, payShieldLmkNumOldLmksLoaded=payShieldLmkNumOldLmksLoaded, payShieldHostConnectionFICONMIH=payShieldHostConnectionFICONMIH, payShieldSettingsHashGeneralSetting=payShieldSettingsHashGeneralSetting, payShieldAlarmBattery=payShieldAlarmBattery, payShieldHostConnectionFICONControlUnitImage=payShieldHostConnectionFICONControlUnitImage, payShieldAlarmFans=payShieldAlarmFans, payShieldHealthCheckCountsStartTime=payShieldHealthCheckCountsStartTime, payShieldCommsHostTCPServer=payShieldCommsHostTCPServer, payShieldHostConnectionEthernetACLsEnabled=payShieldHostConnectionEthernetACLsEnabled, payShieldAuxiliaryEthernetMacAddress=payShieldAuxiliaryEthernetMacAddress, payShieldLogsAuditlogMaxLength=payShieldLogsAuditlogMaxLength, payShieldVersion=payShieldVersion, payShieldHostConnectionEthernetIndex=payShieldHostConnectionEthernetIndex, payShieldUtilHostCmdVolume=payShieldUtilHostCmdVolume, payShieldVersionSoftwareCPLDVersion=payShieldVersionSoftwareCPLDVersion, payShieldManagementEthernetPortSpeed=payShieldManagementEthernetPortSpeed, thalesEsecurityDevs=thalesEsecurityDevs, payShieldBatteryState=payShieldBatteryState, payShieldComms=payShieldComms, payShieldAlarmBadPortData=payShieldAlarmBadPortData, payShieldFraudPinAttackLimitsExceeded=payShieldFraudPinAttackLimitsExceeded, payShieldBadDataPhysicalPort=payShieldBadDataPhysicalPort, payShieldCommsHostPort=payShieldCommsHostPort, payShieldManagement=payShieldManagement, payShieldLmkStatusLiveTest=payShieldLmkStatusLiveTest, payShieldHostConnectionEthernetIpAddress=payShieldHostConnectionEthernetIpAddress, payShieldAuxiliaryEthernetNetworkName=payShieldAuxiliaryEthernetNetworkName, payShieldHostConnectionEthernetInterfaceNumber=payShieldHostConnectionEthernetInterfaceNumber, payShieldLmkStatusLoaded=payShieldLmkStatusLoaded, payShieldHealthCheckCountsRebootCount=payShieldHealthCheckCountsRebootCount, payShieldHostConnectionNumberOfConnectionsUsed=payShieldHostConnectionNumberOfConnectionsUsed, payShieldNewSoftwareAlarm=payShieldNewSoftwareAlarm, payShieldManagementEthernetConfigMethod=payShieldManagementEthernetConfigMethod, payShieldAuxiliaryEthernetSubnetMask=payShieldAuxiliaryEthernetSubnetMask, payShieldVersionSoftwareSPVersion=payShieldVersionSoftwareSPVersion, payShieldVersionSoftwareFirmwareVersion=payShieldVersionSoftwareFirmwareVersion, payShieldHealthDiagSelfTestList=payShieldHealthDiagSelfTestList, payShieldLmkNumTestLmksLoaded=payShieldLmkNumTestLmksLoaded, payShieldHealthCheckCountsTamperCount=payShieldHealthCheckCountsTamperCount)
