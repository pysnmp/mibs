#
# PySNMP MIB module LIEBERT-GP-AGENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/liebert/LIEBERT-GP-AGENT-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 15:13:10 2024
# On host fv-az692-788 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
lgpNetworkName, lgpConditionDescription, lgpConditionsPresent = mibBuilder.importSymbols("LIEBERT-GP-CONDITIONS-MIB", "lgpNetworkName", "lgpConditionDescription", "lgpConditionsPresent")
liebertAgentModuleReg, lgpAgentNotifications, lgpAgentDevice, lgpAgentIdent, lgpAgentControl = mibBuilder.importSymbols("LIEBERT-GP-REGISTRATION-MIB", "liebertAgentModuleReg", "lgpAgentNotifications", "lgpAgentDevice", "lgpAgentIdent", "lgpAgentControl")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
Unsigned32, TimeTicks, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, Integer32, ObjectIdentity, Counter64, Gauge32, Bits, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "Integer32", "ObjectIdentity", "Counter64", "Gauge32", "Bits", "Counter32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
liebertAgentModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 2, 1))
liebertAgentModule.setRevisions(('2008-11-17 00:00', '2008-07-02 00:00', '2008-01-10 00:00', '2007-05-29 00:00', '2006-02-22 00:00',))
if mibBuilder.loadTexts: liebertAgentModule.setLastUpdated('200811170000Z')
if mibBuilder.loadTexts: liebertAgentModule.setOrganization('Liebert Corporation')
lgpAgentIdentManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentIdentManufacturer.setStatus('current')
lgpAgentIdentModel = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentIdentModel.setStatus('current')
lgpAgentIdentFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentIdentFirmwareVersion.setStatus('current')
lgpAgentIdentSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentIdentSerialNumber.setStatus('current')
lgpAgentIdentPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentIdentPartNumber.setStatus('current')
lgpAgentConnectedDeviceCount = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentConnectedDeviceCount.setStatus('current')
lgpAgentEventNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0))
if mibBuilder.loadTexts: lgpAgentEventNotifications.setStatus('current')
lgpAgentDeviceCommunicationLost = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 1)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentDeviceCommunicationLost.setStatus('current')
lgpAgentFirmwareUpdateSuccessful = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 5)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentFirmwareUpdateSuccessful.setStatus('current')
lgpAgentFirmwareCorrupt = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 6)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentFirmwareCorrupt.setStatus('current')
lgpAgentHeartbeat = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 7)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionsPresent"), ("LIEBERT-GP-AGENT-MIB", "lgpAgentConnectedDeviceCount"))
if mibBuilder.loadTexts: lgpAgentHeartbeat.setStatus('current')
lgpAgentDnsLookupFailure = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 8)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpNetworkName"))
if mibBuilder.loadTexts: lgpAgentDnsLookupFailure.setStatus('current')
lgpAgentEventNotificationsLegacy = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0))
if mibBuilder.loadTexts: lgpAgentEventNotificationsLegacy.setStatus('current')
lgpAgentDeviceCommunicationLostLegacy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0, 1)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentDeviceCommunicationLostLegacy.setStatus('current')
lgpAgentFirmwareUpdateSuccessfulLegacy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0, 5)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentFirmwareUpdateSuccessfulLegacy.setStatus('current')
lgpAgentFirmwareCorruptLegacy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0, 6)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentFirmwareCorruptLegacy.setStatus('current')
lgpAgentHeartbeatLegacy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0, 7)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionsPresent"), ("LIEBERT-GP-AGENT-MIB", "lgpAgentConnectedDeviceCount"))
if mibBuilder.loadTexts: lgpAgentHeartbeatLegacy.setStatus('current')
lgpAgentDnsLookupFailureLegacy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0, 8)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpNetworkName"))
if mibBuilder.loadTexts: lgpAgentDnsLookupFailureLegacy.setStatus('current')
lgpAgentManagedDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2), )
if mibBuilder.loadTexts: lgpAgentManagedDeviceTable.setStatus('current')
lgpAgentManagedDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1), ).setIndexNames((0, "LIEBERT-GP-AGENT-MIB", "lgpAgentDeviceIndex"))
if mibBuilder.loadTexts: lgpAgentManagedDeviceEntry.setStatus('current')
lgpAgentDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceIndex.setStatus('current')
lgpAgentDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceId.setStatus('current')
lgpAgentDeviceManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceManufacturer.setStatus('current')
lgpAgentDeviceModel = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceModel.setStatus('current')
lgpAgentDeviceFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceFirmwareVersion.setStatus('current')
lgpAgentDeviceUnitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceUnitNumber.setStatus('current')
lgpAgentDeviceSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceSerialNumber.setStatus('current')
lgpAgentDeviceManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceManufactureDate.setStatus('current')
lgpAgentDeviceServiceContact = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServiceContact.setStatus('current')
lgpAgentDeviceServicePhoneNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServicePhoneNumber.setStatus('current')
lgpAgentDeviceServiceAddrLine1 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServiceAddrLine1.setStatus('current')
lgpAgentDeviceServiceAddrLine2 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServiceAddrLine2.setStatus('current')
lgpAgentDeviceServiceAddrLine3 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServiceAddrLine3.setStatus('current')
lgpAgentDeviceServiceAddrLine4 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServiceAddrLine4.setStatus('current')
lgpAgentDeviceUnitName = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceUnitName.setStatus('current')
lgpAgentDeviceSiteIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceSiteIdentifier.setStatus('current')
lgpAgentDeviceTagNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceTagNumber.setStatus('current')
lgpAgentDeviceOrderLine1 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceOrderLine1.setStatus('current')
lgpAgentDeviceOrderLine2 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceOrderLine2.setStatus('current')
lgpAgentReboot = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentReboot.setStatus('current')
lgpAgentTelnetEnabled = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentTelnetEnabled.setStatus('current')
lgpAgentVelocityServerEnabled = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentVelocityServerEnabled.setStatus('current')
lgpAgentWebServerMode = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("http", 1), ("https", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentWebServerMode.setStatus('current')
mibBuilder.exportSymbols("LIEBERT-GP-AGENT-MIB", liebertAgentModule=liebertAgentModule, lgpAgentDeviceModel=lgpAgentDeviceModel, lgpAgentIdentManufacturer=lgpAgentIdentManufacturer, lgpAgentDeviceCommunicationLostLegacy=lgpAgentDeviceCommunicationLostLegacy, lgpAgentFirmwareUpdateSuccessful=lgpAgentFirmwareUpdateSuccessful, lgpAgentVelocityServerEnabled=lgpAgentVelocityServerEnabled, lgpAgentIdentPartNumber=lgpAgentIdentPartNumber, lgpAgentDeviceTagNumber=lgpAgentDeviceTagNumber, lgpAgentDeviceOrderLine1=lgpAgentDeviceOrderLine1, lgpAgentConnectedDeviceCount=lgpAgentConnectedDeviceCount, lgpAgentFirmwareCorruptLegacy=lgpAgentFirmwareCorruptLegacy, lgpAgentDeviceServiceAddrLine2=lgpAgentDeviceServiceAddrLine2, lgpAgentEventNotificationsLegacy=lgpAgentEventNotificationsLegacy, lgpAgentDnsLookupFailure=lgpAgentDnsLookupFailure, lgpAgentManagedDeviceTable=lgpAgentManagedDeviceTable, lgpAgentHeartbeatLegacy=lgpAgentHeartbeatLegacy, lgpAgentManagedDeviceEntry=lgpAgentManagedDeviceEntry, lgpAgentDeviceServiceAddrLine4=lgpAgentDeviceServiceAddrLine4, lgpAgentWebServerMode=lgpAgentWebServerMode, lgpAgentDeviceOrderLine2=lgpAgentDeviceOrderLine2, lgpAgentIdentSerialNumber=lgpAgentIdentSerialNumber, lgpAgentDeviceSiteIdentifier=lgpAgentDeviceSiteIdentifier, lgpAgentDnsLookupFailureLegacy=lgpAgentDnsLookupFailureLegacy, lgpAgentDeviceSerialNumber=lgpAgentDeviceSerialNumber, lgpAgentDeviceServiceContact=lgpAgentDeviceServiceContact, lgpAgentTelnetEnabled=lgpAgentTelnetEnabled, lgpAgentDeviceId=lgpAgentDeviceId, lgpAgentDeviceFirmwareVersion=lgpAgentDeviceFirmwareVersion, lgpAgentDeviceManufactureDate=lgpAgentDeviceManufactureDate, lgpAgentFirmwareUpdateSuccessfulLegacy=lgpAgentFirmwareUpdateSuccessfulLegacy, lgpAgentDeviceCommunicationLost=lgpAgentDeviceCommunicationLost, lgpAgentDeviceUnitNumber=lgpAgentDeviceUnitNumber, lgpAgentDeviceServicePhoneNumber=lgpAgentDeviceServicePhoneNumber, lgpAgentFirmwareCorrupt=lgpAgentFirmwareCorrupt, lgpAgentReboot=lgpAgentReboot, lgpAgentDeviceManufacturer=lgpAgentDeviceManufacturer, lgpAgentIdentModel=lgpAgentIdentModel, lgpAgentDeviceServiceAddrLine3=lgpAgentDeviceServiceAddrLine3, lgpAgentDeviceServiceAddrLine1=lgpAgentDeviceServiceAddrLine1, PYSNMP_MODULE_ID=liebertAgentModule, lgpAgentDeviceUnitName=lgpAgentDeviceUnitName, lgpAgentEventNotifications=lgpAgentEventNotifications, lgpAgentHeartbeat=lgpAgentHeartbeat, lgpAgentIdentFirmwareVersion=lgpAgentIdentFirmwareVersion, lgpAgentDeviceIndex=lgpAgentDeviceIndex)
