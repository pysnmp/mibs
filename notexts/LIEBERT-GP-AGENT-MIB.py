#
# PySNMP MIB module LIEBERT-GP-AGENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/liebert/LIEBERT-GP-AGENT-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 10:08:27 2024
# On host fv-az1773-903 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
lgpNetworkName, lgpConditionDescription, lgpConditionsPresent = mibBuilder.importSymbols("LIEBERT-GP-CONDITIONS-MIB", "lgpNetworkName", "lgpConditionDescription", "lgpConditionsPresent")
lgpAgentDevice, lgpAgentControl, lgpAgentIdent, liebertAgentModuleReg, lgpAgentNotifications = mibBuilder.importSymbols("LIEBERT-GP-REGISTRATION-MIB", "lgpAgentDevice", "lgpAgentControl", "lgpAgentIdent", "liebertAgentModuleReg", "lgpAgentNotifications")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
iso, Gauge32, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, Bits, ObjectIdentity, Counter32, Integer32, ModuleIdentity, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "Bits", "ObjectIdentity", "Counter32", "Integer32", "ModuleIdentity", "Counter64", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
liebertAgentModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 2, 1))
liebertAgentModule.setRevisions(('2008-11-17 00:00', '2008-07-02 00:00', '2008-01-10 00:00', '2007-05-29 00:00', '2006-02-22 00:00',))
if mibBuilder.loadTexts: liebertAgentModule.setLastUpdated('200811170000Z')
if mibBuilder.loadTexts: liebertAgentModule.setOrganization('Liebert Corporation')
lgpAgentIdentManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentIdentManufacturer.setStatus('current')
lgpAgentIdentModel = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentIdentModel.setStatus('current')
lgpAgentIdentFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentIdentFirmwareVersion.setStatus('current')
lgpAgentIdentSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentIdentSerialNumber.setStatus('current')
lgpAgentIdentPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentIdentPartNumber.setStatus('current')
lgpAgentConnectedDeviceCount = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentConnectedDeviceCount.setStatus('current')
lgpAgentEventNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0))
if mibBuilder.loadTexts: lgpAgentEventNotifications.setStatus('current')
lgpAgentDeviceCommunicationLost = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 1)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentDeviceCommunicationLost.setStatus('current')
lgpAgentFirmwareUpdateSuccessful = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 5)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentFirmwareUpdateSuccessful.setStatus('current')
lgpAgentFirmwareCorrupt = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 6)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentFirmwareCorrupt.setStatus('current')
lgpAgentHeartbeat = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 7)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionsPresent"), ("LIEBERT-GP-AGENT-MIB", "lgpAgentConnectedDeviceCount"))
if mibBuilder.loadTexts: lgpAgentHeartbeat.setStatus('current')
lgpAgentDnsLookupFailure = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 8)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpNetworkName"))
if mibBuilder.loadTexts: lgpAgentDnsLookupFailure.setStatus('current')
lgpAgentEventNotificationsLegacy = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0))
if mibBuilder.loadTexts: lgpAgentEventNotificationsLegacy.setStatus('current')
lgpAgentDeviceCommunicationLostLegacy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0, 1)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentDeviceCommunicationLostLegacy.setStatus('current')
lgpAgentFirmwareUpdateSuccessfulLegacy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0, 5)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentFirmwareUpdateSuccessfulLegacy.setStatus('current')
lgpAgentFirmwareCorruptLegacy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0, 6)).setObjects(("SNMPv2-MIB", "sysUpTime"))
if mibBuilder.loadTexts: lgpAgentFirmwareCorruptLegacy.setStatus('current')
lgpAgentHeartbeatLegacy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0, 7)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpConditionsPresent"), ("LIEBERT-GP-AGENT-MIB", "lgpAgentConnectedDeviceCount"))
if mibBuilder.loadTexts: lgpAgentHeartbeatLegacy.setStatus('current')
lgpAgentDnsLookupFailureLegacy = NotificationType((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3, 0, 0, 8)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("LIEBERT-GP-CONDITIONS-MIB", "lgpNetworkName"))
if mibBuilder.loadTexts: lgpAgentDnsLookupFailureLegacy.setStatus('current')
lgpAgentManagedDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2), )
if mibBuilder.loadTexts: lgpAgentManagedDeviceTable.setStatus('current')
lgpAgentManagedDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1), ).setIndexNames((0, "LIEBERT-GP-AGENT-MIB", "lgpAgentDeviceIndex"))
if mibBuilder.loadTexts: lgpAgentManagedDeviceEntry.setStatus('current')
lgpAgentDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceIndex.setStatus('current')
lgpAgentDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceId.setStatus('current')
lgpAgentDeviceManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceManufacturer.setStatus('current')
lgpAgentDeviceModel = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceModel.setStatus('current')
lgpAgentDeviceFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceFirmwareVersion.setStatus('current')
lgpAgentDeviceUnitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceUnitNumber.setStatus('current')
lgpAgentDeviceSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceSerialNumber.setStatus('current')
lgpAgentDeviceManufactureDate = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lgpAgentDeviceManufactureDate.setStatus('current')
lgpAgentDeviceServiceContact = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServiceContact.setStatus('current')
lgpAgentDeviceServicePhoneNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServicePhoneNumber.setStatus('current')
lgpAgentDeviceServiceAddrLine1 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServiceAddrLine1.setStatus('current')
lgpAgentDeviceServiceAddrLine2 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServiceAddrLine2.setStatus('current')
lgpAgentDeviceServiceAddrLine3 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServiceAddrLine3.setStatus('current')
lgpAgentDeviceServiceAddrLine4 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceServiceAddrLine4.setStatus('current')
lgpAgentDeviceUnitName = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceUnitName.setStatus('current')
lgpAgentDeviceSiteIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceSiteIdentifier.setStatus('current')
lgpAgentDeviceTagNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceTagNumber.setStatus('current')
lgpAgentDeviceOrderLine1 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceOrderLine1.setStatus('current')
lgpAgentDeviceOrderLine2 = MibTableColumn((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentDeviceOrderLine2.setStatus('current')
lgpAgentReboot = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentReboot.setStatus('current')
lgpAgentTelnetEnabled = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentTelnetEnabled.setStatus('current')
lgpAgentVelocityServerEnabled = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentVelocityServerEnabled.setStatus('current')
lgpAgentWebServerMode = MibScalar((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("http", 1), ("https", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lgpAgentWebServerMode.setStatus('current')
mibBuilder.exportSymbols("LIEBERT-GP-AGENT-MIB", lgpAgentIdentFirmwareVersion=lgpAgentIdentFirmwareVersion, lgpAgentFirmwareUpdateSuccessful=lgpAgentFirmwareUpdateSuccessful, lgpAgentIdentManufacturer=lgpAgentIdentManufacturer, lgpAgentDnsLookupFailureLegacy=lgpAgentDnsLookupFailureLegacy, lgpAgentIdentSerialNumber=lgpAgentIdentSerialNumber, lgpAgentDeviceIndex=lgpAgentDeviceIndex, lgpAgentReboot=lgpAgentReboot, lgpAgentDeviceSiteIdentifier=lgpAgentDeviceSiteIdentifier, lgpAgentFirmwareUpdateSuccessfulLegacy=lgpAgentFirmwareUpdateSuccessfulLegacy, lgpAgentWebServerMode=lgpAgentWebServerMode, lgpAgentManagedDeviceTable=lgpAgentManagedDeviceTable, lgpAgentHeartbeatLegacy=lgpAgentHeartbeatLegacy, lgpAgentDnsLookupFailure=lgpAgentDnsLookupFailure, lgpAgentEventNotificationsLegacy=lgpAgentEventNotificationsLegacy, lgpAgentEventNotifications=lgpAgentEventNotifications, lgpAgentDeviceModel=lgpAgentDeviceModel, lgpAgentDeviceServiceAddrLine1=lgpAgentDeviceServiceAddrLine1, lgpAgentDeviceServicePhoneNumber=lgpAgentDeviceServicePhoneNumber, lgpAgentDeviceServiceAddrLine3=lgpAgentDeviceServiceAddrLine3, lgpAgentDeviceOrderLine1=lgpAgentDeviceOrderLine1, lgpAgentDeviceServiceContact=lgpAgentDeviceServiceContact, lgpAgentIdentModel=lgpAgentIdentModel, lgpAgentFirmwareCorrupt=lgpAgentFirmwareCorrupt, lgpAgentDeviceSerialNumber=lgpAgentDeviceSerialNumber, lgpAgentDeviceCommunicationLost=lgpAgentDeviceCommunicationLost, lgpAgentDeviceId=lgpAgentDeviceId, PYSNMP_MODULE_ID=liebertAgentModule, lgpAgentDeviceManufacturer=lgpAgentDeviceManufacturer, lgpAgentVelocityServerEnabled=lgpAgentVelocityServerEnabled, lgpAgentTelnetEnabled=lgpAgentTelnetEnabled, lgpAgentDeviceUnitName=lgpAgentDeviceUnitName, lgpAgentConnectedDeviceCount=lgpAgentConnectedDeviceCount, lgpAgentDeviceTagNumber=lgpAgentDeviceTagNumber, lgpAgentDeviceManufactureDate=lgpAgentDeviceManufactureDate, lgpAgentDeviceServiceAddrLine2=lgpAgentDeviceServiceAddrLine2, lgpAgentDeviceCommunicationLostLegacy=lgpAgentDeviceCommunicationLostLegacy, lgpAgentFirmwareCorruptLegacy=lgpAgentFirmwareCorruptLegacy, liebertAgentModule=liebertAgentModule, lgpAgentIdentPartNumber=lgpAgentIdentPartNumber, lgpAgentDeviceUnitNumber=lgpAgentDeviceUnitNumber, lgpAgentDeviceServiceAddrLine4=lgpAgentDeviceServiceAddrLine4, lgpAgentManagedDeviceEntry=lgpAgentManagedDeviceEntry, lgpAgentDeviceFirmwareVersion=lgpAgentDeviceFirmwareVersion, lgpAgentDeviceOrderLine2=lgpAgentDeviceOrderLine2, lgpAgentHeartbeat=lgpAgentHeartbeat)
