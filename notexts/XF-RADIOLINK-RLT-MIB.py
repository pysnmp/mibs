#
# PySNMP MIB module XF-RADIOLINK-RLT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/ericsson/XF-RADIOLINK-RLT-MIB
# Produced by pysmi-1.1.12 at Wed Jul  3 09:11:03 2024
# On host fv-az2021-432 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
entPhysicalIndex, entLogicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex", "entLogicalIndex")
HCPerfCurrentCount, = mibBuilder.importSymbols("HC-PerfHist-TC-MIB", "HCPerfCurrentCount")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressIPv6, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6")
PerfCurrentCount, PerfIntervalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfCurrentCount", "PerfIntervalCount")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter64, iso, Gauge32, ObjectIdentity, Unsigned32, Integer32, ModuleIdentity, IpAddress, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter64", "iso", "Gauge32", "ObjectIdentity", "Unsigned32", "Integer32", "ModuleIdentity", "IpAddress", "NotificationType", "TimeTicks")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
xfRadioLink, = mibBuilder.importSymbols("XF-TOP-MIB", "xfRadioLink")
xfRadioLinkRltMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5))
xfRadioLinkRltMIB.setRevisions(('2020-11-05 00:00', '2020-09-17 00:00', '2020-06-10 00:00', '2020-06-03 00:00', '2020-05-28 00:00', '2020-04-30 00:00', '2020-03-04 00:00', '2019-10-14 00:00', '2019-10-09 00:00', '2019-07-18 00:00', '2019-06-07 00:00', '2019-03-26 00:00', '2019-03-25 00:00', '2019-02-28 00:00', '2019-02-20 00:00', '2019-01-30 00:00', '2019-01-11 00:00', '2018-11-24 00:00', '2018-10-24 00:00', '2018-10-03 00:00', '2018-09-17 00:00', '2018-08-27 00:00', '2018-08-16 00:00', '2018-07-09 00:00', '2018-04-13 00:00', '2018-04-09 00:00', '2018-03-23 00:00', '2018-03-13 00:00', '2018-01-30 00:00', '2017-12-27 00:00', '2017-09-19 00:00', '2017-08-03 00:00', '2017-05-03 00:00', '2017-02-01 00:00', '2017-01-30 00:00', '2016-11-04 00:00', '2016-09-29 00:00', '2016-09-08 00:00', '2016-07-18 00:00', '2016-06-10 00:00', '2016-06-06 00:00', '2016-06-01 00:00', '2016-05-02 00:00', '2016-04-29 00:00', '2016-04-12 00:00', '2016-03-01 00:00', '2016-02-22 00:00', '2016-02-05 00:00', '2015-11-25 00:00', '2015-11-16 00:00', '2015-11-10 00:00', '2015-11-05 00:00', '2015-09-16 00:00', '2015-08-27 00:00', '2015-08-20 00:00', '2015-07-07 00:00', '2015-06-30 00:00', '2015-06-04 00:00', '2015-06-03 00:00', '2015-05-11 00:00', '2015-05-08 00:00', '2015-05-06 00:00', '2015-04-20 00:00', '2015-04-13 00:00', '2015-03-30 00:00', '2015-03-19 00:00', '2015-03-11 00:00', '2015-03-09 00:00', '2015-03-06 00:00', '2015-03-05 00:00', '2015-02-25 00:00', '2015-02-18 00:00', '2015-02-10 00:00', '2015-01-29 00:00', '2014-12-12 00:00', '2014-12-10 00:00', '2014-12-02 00:00', '2014-12-01 00:00', '2014-11-11 00:00',))
if mibBuilder.loadTexts: xfRadioLinkRltMIB.setLastUpdated('202011050000Z')
if mibBuilder.loadTexts: xfRadioLinkRltMIB.setOrganization('Ericsson AB')
class CarrierTermACMIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36))
    namedValues = NamedValues(("acm4QAMStrong", 1), ("acm4QAMStd", 2), ("acm4QAMLight", 3), ("acm16QAMStrong", 4), ("acm16QAMStd", 5), ("acm16QAMLight", 6), ("acm32QAMStrong", 7), ("acm32QAMStd", 8), ("acm32QAMLight", 9), ("acm64QAMStrong", 10), ("acm64QAMStd", 11), ("acm64QAMLight", 12), ("acm128QAMStrong", 13), ("acm128QAMStd", 14), ("acm128QAMLight", 15), ("acm256QAMStrong", 16), ("acm256QAMStd", 17), ("acm256QAMLight", 18), ("acm512QAMStrong", 19), ("acm512QAMStd", 20), ("acm512QAMLight", 21), ("acm1024QAMStrong", 22), ("acm1024QAMStd", 23), ("acm1024QAMLight", 24), ("acm2048QAMStrong", 25), ("acm2048QAMStd", 26), ("acm2048QAMLight", 27), ("acm4096QAMStrong", 28), ("acm4096QAMStd", 29), ("acm4096QAMLight", 30), ("acm8192QAMStrong", 31), ("acm8192QAMStd", 32), ("acm8192QAMLight", 33), ("acm16384QAMStrong", 34), ("acm16384QAMStd", 35), ("acm16384QAMLight", 36))

xfRadioLinkRltObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1))
xfRadioLinkRltPmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2))
xfRadioLinkRltConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 3))
xfChannelGroupTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 1), )
if mibBuilder.loadTexts: xfChannelGroupTable.setStatus('current')
xfChannelGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 1, 1), ).setIndexNames((0, "XF-RADIOLINK-RLT-MIB", "cgIfIndex"), (0, "XF-RADIOLINK-RLT-MIB", "cgTypeIndex"))
if mibBuilder.loadTexts: xfChannelGroupEntry.setStatus('current')
cgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgIfIndex.setStatus('current')
cgTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("bonding", 2), ("rlp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgTypeIndex.setStatus('current')
xfIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("ready", 2), ("notReady", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfIfStatus.setStatus('current')
xfLIMappingTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 2), )
if mibBuilder.loadTexts: xfLIMappingTable.setStatus('current')
xfLIMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 2, 1), ).setIndexNames((0, "XF-RADIOLINK-RLT-MIB", "liEntLogicalIndex"), (0, "XF-RADIOLINK-RLT-MIB", "liIfIndex"))
if mibBuilder.loadTexts: xfLIMappingEntry.setStatus('current')
liEntLogicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: liEntLogicalIndex.setStatus('current')
liIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: liIfIndex.setStatus('current')
xfLIName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfLIName.setStatus('current')
xfLIIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfLIIfDescr.setStatus('current')
xfCarrierTerminationTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3), )
if mibBuilder.loadTexts: xfCarrierTerminationTable.setStatus('current')
xfCarrierTerminationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entLogicalIndex"))
if mibBuilder.loadTexts: xfCarrierTerminationEntry.setStatus('current')
xfCarrierTermDistinguishedName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermDistinguishedName.setStatus('current')
xfCarrierTermLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermLabel.setStatus('current')
xfCarrierTermOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("down", 2), ("up", 3), ("degraded", 4), ("testing", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermOperStatus.setStatus('current')
xfCarrierTermRadioFrameId = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermRadioFrameId.setStatus('current')
xfCarrierTermPreamble = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSpecified", 1), ("preambleA", 2), ("preambleB", 3), ("preambleC", 4), ("preambleD", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermPreamble.setStatus('current')
xfCarrierTermSelectedMinACM = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 6), CarrierTermACMIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermSelectedMinACM.setStatus('current')
xfCarrierTermActualACM = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 7), CarrierTermACMIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermActualACM.setStatus('current')
xfCarrierTermSelectedMaxACM = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 8), CarrierTermACMIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermSelectedMaxACM.setStatus('current')
xfCarrierTermCapabilitiesLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermCapabilitiesLastChange.setStatus('current')
xfCarrierTermReferenceSEC = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("notSpecified", 1), ("sec2", 2), ("sec4L", 3), ("sec4H", 4), ("sec5LB", 5), ("sec5HB", 6), ("sec6LB", 7), ("sec6HB", 8), ("sec7B", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermReferenceSEC.setStatus('current')
xfCarrierTermWantedLicensedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermWantedLicensedCapacity.setStatus('current')
xfCarrierTermActualLicensedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermActualLicensedCapacity.setStatus('current')
xfCarrierTermActualCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermActualCapacity.setStatus('current')
xfCarrierTermPolarization = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSpecified", 1), ("horizontal", 2), ("vertical", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermPolarization.setStatus('current')
xfCarrierTermXPICOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("locked", 2), ("unlocked", 3), ("mute", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermXPICOperStatus.setStatus('current')
xfCarrierTermMIMOOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("locked", 2), ("unlocked", 3), ("mute", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermMIMOOperStatus.setStatus('current')
xfCarrierTermSNIR = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermSNIR.setStatus('current')
xfCarrierTermXPI = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermXPI.setStatus('current')
xfCarrierTermReset = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("noReset", 2), ("reset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermReset.setStatus('current')
xfCarrierTermRestore = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("noRestore", 2), ("restore", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermRestore.setStatus('current')
xfCarrierTermAutoRemoveLoopEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermAutoRemoveLoopEnable.setStatus('current')
xfCarrierTermBerAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("ber1e3", 2), ("ber1e4", 3), ("ber1e5", 4), ("ber1e6", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfCarrierTermBerAlarmThreshold.setStatus('current')
xfCarrierTermActualRxACM = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 23), CarrierTermACMIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermActualRxACM.setStatus('current')
xfCarrierTermFeCTSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 3, 1, 24), Bits().clone(namedValues=NamedValues(("feCtSeverity0", 0), ("feCtSeverity1", 1), ("feCtSeverity2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCarrierTermFeCTSeverity.setStatus('current')
xfCarrierTerminationCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 4), )
if mibBuilder.loadTexts: xfCarrierTerminationCapabilityTable.setStatus('current')
xfCarrierTerminationCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entLogicalIndex"), (0, "XF-RADIOLINK-RLT-MIB", "xfRadioFrameId"))
if mibBuilder.loadTexts: xfCarrierTerminationCapabilityEntry.setStatus('current')
xfRadioFrameId = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRadioFrameId.setStatus('current')
xfChannelSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("chspOther", 1), ("chsp3500kHz", 2), ("chsp7MHz", 3), ("chsp10MHz", 4), ("chsp14MHz", 5), ("chsp20MHz", 6), ("chsp28MHz", 7), ("chsp30MHz", 8), ("chsp40MHz", 9), ("chsp50MHz", 10), ("chsp56MHz", 11), ("chsp60MHz", 12), ("chsp80MHz", 13), ("chsp112MHz", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfChannelSpacing.setStatus('current')
xfFrameFormatType = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("other", 1), ("standard", 2), ("xpic", 3), ("mimo", 4), ("longHaulStandard", 5), ("longHaulXpic", 6), ("xpic2boards", 7), ("longHaulXpic2boards", 8), ("mimo2boards", 9), ("sisoCA", 10), ("xpicCA", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfFrameFormatType.setStatus('current')
xfMinACMCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfMinACMCapacity.setStatus('current')
xfMaxACMCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfMaxACMCapacity.setStatus('current')
xfACMProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 4, 1, 6), Bits().clone(namedValues=NamedValues(("none", 0), ("qam4Strong", 1), ("qam4Std", 2), ("qam4Light", 3), ("qam16Strong", 4), ("qam16Std", 5), ("qam16Light", 6), ("qam32Strong", 7), ("qam32Std", 8), ("qam32Light", 9), ("qam64Strong", 10), ("qam64Std", 11), ("qam64Light", 12), ("qam128Strong", 13), ("qam128Std", 14), ("qam128Light", 15), ("qam256Strong", 16), ("qam256Std", 17), ("qam256Light", 18), ("qam512Strong", 19), ("qam512Std", 20), ("qam512Light", 21), ("qam1024Strong", 22), ("qam1024Std", 23), ("qam1024Light", 24), ("qam2048Strong", 25), ("qam2048Std", 26), ("qam2048Light", 27), ("qam4096Strong", 28), ("qam4096Std", 29), ("qam4096Light", 30), ("qam8192Strong", 31), ("qam8192Std", 32), ("qam8192Light", 33), ("qam16384Strong", 34), ("qam16384Std", 35), ("qam16384Light", 36)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfACMProfile.setStatus('current')
xfACMProfileCapacityTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 5), )
if mibBuilder.loadTexts: xfACMProfileCapacityTable.setStatus('current')
xfACMProfileCapacityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 5, 1), ).setIndexNames((0, "ENTITY-MIB", "entLogicalIndex"), (0, "XF-RADIOLINK-RLT-MIB", "xfACMIndex"))
if mibBuilder.loadTexts: xfACMProfileCapacityEntry.setStatus('current')
xfACMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 5, 1, 1), CarrierTermACMIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfACMIndex.setStatus('current')
xfACMCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfACMCapacity.setStatus('current')
xfRLTTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6), )
if mibBuilder.loadTexts: xfRLTTable.setStatus('current')
xfRLTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1), ).setIndexNames((0, "XF-RADIOLINK-RLT-MIB", "rltEntLogicalIndex"))
if mibBuilder.loadTexts: xfRLTEntry.setStatus('current')
rltEntLogicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rltEntLogicalIndex.setStatus('current')
xfRLTDistinguishedName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTDistinguishedName.setStatus('current')
xfRLTIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTIpAddress.setStatus('current')
xfRLTIPv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 4), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTIPv6Address.setStatus('current')
xfRLTNeName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTNeName.setStatus('current')
xfRLTNeType = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTNeType.setStatus('current')
xfRLTId = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTId.setStatus('current')
xfRLTExpectedFarEndId = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTExpectedFarEndId.setStatus('current')
xfRLTFarEndIdCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTFarEndIdCheck.setStatus('current')
xfRLTStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("down", 2), ("up", 3), ("degraded", 4), ("resourceUnavailable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTStatus.setStatus('current')
xfRLTMode = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("onePlusZero", 2), ("onePlusOneRadioLinkProtection", 3), ("twoPlusZeroAdvancedRadioLinkBonding", 4), ("onePlusOneRadioLinkProtectionAndEquipmentProtection", 5), ("twoPlusZeroRadioLinkBondingAndEquipmentProtection", 6), ("twoPlusTwoRadioLinkProtectionAndEquipmentProtection", 7), ("fourPlusZeroRadioLinkBondingAndEquipmentProtection", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTMode.setStatus('current')
xfRLTActualTXTotalCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTActualTXTotalCapacity.setStatus('current')
xfRLTActualTXPacketCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTActualTXPacketCapacity.setStatus('current')
xfRLTLimitedTotalCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTLimitedTotalCapacity.setStatus('current')
xfRLTRltSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 15), Bits().clone(namedValues=NamedValues(("rltSeverity0", 0), ("rltSeverity1", 1), ("rltSeverity2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTRltSeverity.setStatus('current')
xfRLTCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 16), Bits().clone(namedValues=NamedValues(("xpicCapability0", 0), ("capTDMWithEQP", 1), ("capCsPlurality", 2), ("capCtAutoSelection", 3), ("capOnePlusZero", 4), ("capOnePlusOneRadioLinkProtection", 5), ("capTwoPlusZeroAdvancedRadioLinkBonding", 6), ("capOnePlusOneRadioLinkProtectionWithEQP", 7), ("capTwoPlusZeroRadioLinkBondingWithEQP", 8), ("capTwoPlusTwoRadioLinkProtectionWithEQP", 9), ("capFourPlusZeroRadioLinkBondingWithEQP", 10), ("capXpicBetweenBoards", 11), ("capXpicMembersAutoSelection", 12), ("capManualEqpSwitch", 13), ("capEnhAcmMaxCapacity", 14), ("capEnhAcmMaxProtection", 15), ("capRLEncryption", 16), ("capMIMO", 17), ("capTXswoAndSSD", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTCapability.setStatus('current')
xfRLTInventoryLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTInventoryLastChange.setStatus('current')
xfRLTCpriMode = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTCpriMode.setStatus('current')
xfRLTReset = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("rltNoReset", 2), ("rltReset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTReset.setStatus('current')
xfRLTMeasuredHopLength = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTMeasuredHopLength.setStatus('current')
xfTrafficTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 7), )
if mibBuilder.loadTexts: xfTrafficTable.setStatus('current')
xfTrafficEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 7, 1), ).setIndexNames((0, "XF-RADIOLINK-RLT-MIB", "trEntLogicalIndex"))
if mibBuilder.loadTexts: xfTrafficEntry.setStatus('current')
trEntLogicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trEntLogicalIndex.setStatus('current')
xfTDMEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfTDMEnable.setStatus('current')
xfRLTDMIfTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 8), )
if mibBuilder.loadTexts: xfRLTDMIfTable.setStatus('current')
xfRLTDMIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 8, 1), ).setIndexNames((0, "XF-RADIOLINK-RLT-MIB", "xfRLTDMIfIndex"))
if mibBuilder.loadTexts: xfRLTDMIfEntry.setStatus('current')
xfRLTDMIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTDMIfIndex.setStatus('current')
xfActualTDMCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfActualTDMCapacity.setStatus('current')
xfWantedTDMAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 8, 1, 3), Bits().clone(namedValues=NamedValues(("firstE1", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfWantedTDMAllocation.setStatus('current')
xfActualTDMAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 8, 1, 4), Bits().clone(namedValues=NamedValues(("firstE1", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfActualTDMAllocation.setStatus('current')
xfTDMIfAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 8, 1, 5), Bits().clone(namedValues=NamedValues(("ber0", 0), ("ber1", 1), ("ber2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfTDMIfAlarms.setStatus('current')
xfTDMRxLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfTDMRxLoop.setStatus('current')
xfTDMDistinguishedName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 8, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfTDMDistinguishedName.setStatus('current')
xfTDMMaxTributaries = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfTDMMaxTributaries.setStatus('current')
xfTDMHopLength = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 8, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfTDMHopLength.setStatus('current')
xfCGIfTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 9), )
if mibBuilder.loadTexts: xfCGIfTable.setStatus('current')
xfCGIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 9, 1), ).setIndexNames((0, "XF-RADIOLINK-RLT-MIB", "xfCGIfIndex"))
if mibBuilder.loadTexts: xfCGIfEntry.setStatus('current')
xfCGIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCGIfIndex.setStatus('current')
xfCGIfMinSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCGIfMinSpeed.setStatus('current')
xfCGIfMaxSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCGIfMaxSpeed.setStatus('current')
xfCGIfRCNum = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCGIfRCNum.setStatus('current')
xfCGIfAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 9, 1, 5), Bits().clone(namedValues=NamedValues(("hccNe0", 0), ("hccNe1", 1), ("hccNe2", 2), ("rltId0", 3), ("rltId1", 4), ("rltId2", 5), ("txSwitchover0", 6), ("txSwitchover1", 7), ("txSwitchover2", 8), ("remoteTxSwitchOver0", 9), ("remoteTxSwitchOver1", 10), ("remoteTxSwitchOver2", 11), ("unableToProtect0", 12), ("unableToProtect1", 13), ("unableToProtect2", 14), ("rfInputThresholdProtection0", 15), ("rfInputThresholdProtection1", 16), ("rfInputThresholdProtection2", 17), ("unableToProtectEqp0", 18), ("unableToProtectEqp1", 19), ("unableToProtectEqp2", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCGIfAlarms.setStatus('current')
xfCGIfHopViewStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("down", 2), ("up", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfCGIfHopViewStatus.setStatus('current')
xfXPICPairTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 10), )
if mibBuilder.loadTexts: xfXPICPairTable.setStatus('current')
xfXPICPairEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 10, 1), ).setIndexNames((0, "ENTITY-MIB", "entLogicalIndex"), (0, "XF-RADIOLINK-RLT-MIB", "xfXpicPairIndex"))
if mibBuilder.loadTexts: xfXPICPairEntry.setStatus('current')
xpicPairEntLogicalIIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpicPairEntLogicalIIndex.setStatus('current')
xfXPICPairAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfXPICPairAdminStatus.setStatus('current')
xfXPICPairNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 10, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfXPICPairNumber.setStatus('current')
xfXPICPairRecovery = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfXPICPairRecovery.setStatus('current')
xfXPICPairRestore = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("xpicNoRestore", 2), ("xpicRestore", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfXPICPairRestore.setStatus('current')
xfXPICCTmember1 = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfXPICCTmember1.setStatus('current')
xfXPICCTmember2 = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 10, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfXPICCTmember2.setStatus('current')
xfXPICAutoRestore = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfXPICAutoRestore.setStatus('current')
xfXpicPairIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 10, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfXpicPairIndex.setStatus('current')
xfMIMOGroupTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 11), )
if mibBuilder.loadTexts: xfMIMOGroupTable.setStatus('current')
xfMIMOGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 11, 1), ).setIndexNames((0, "ENTITY-MIB", "entLogicalIndex"))
if mibBuilder.loadTexts: xfMIMOGroupEntry.setStatus('current')
mimoGroupEntLogicalIIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mimoGroupEntLogicalIIndex.setStatus('current')
xfMIMOGroupAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfMIMOGroupAdminStatus.setStatus('current')
xfMIMOGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 11, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfMIMOGroupNumber.setStatus('current')
xfMIMOGroupRecovery = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfMIMOGroupRecovery.setStatus('current')
xfMIMOGroupRestore = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("mimoNoRestore", 2), ("mimoRestore", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfMIMOGroupRestore.setStatus('current')
xfMIMOCTmember1 = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 11, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfMIMOCTmember1.setStatus('current')
xfMIMOCTmember2 = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 11, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfMIMOCTmember2.setStatus('current')
xfMIMOCTmember3 = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 11, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfMIMOCTmember3.setStatus('current')
xfMIMOCTmember4 = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 11, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfMIMOCTmember4.setStatus('current')
xfRLWANIfTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 12), )
if mibBuilder.loadTexts: xfRLWANIfTable.setStatus('current')
xfRLWANIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 12, 1), ).setIndexNames((0, "XF-RADIOLINK-RLT-MIB", "xfRLWANIfIndex"))
if mibBuilder.loadTexts: xfRLWANIfEntry.setStatus('current')
xfRLWANIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLWANIfIndex.setStatus('current')
xfRLWANDistinguishedName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLWANDistinguishedName.setStatus('current')
xfRLWANCompAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("down", 2), ("mlhcUp", 3), ("mlhcPlcUp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLWANCompAdminStatus.setStatus('current')
xfRLWANCompConnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disconnected", 2), ("connected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLWANCompConnStatus.setStatus('current')
xfRLWANMlhcMplsMode = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("mplsOnly", 2), ("controlWord", 3), ("l2", 4), ("l3", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLWANMlhcMplsMode.setStatus('current')
xfRLWANMlhcOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("down", 2), ("up", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLWANMlhcOperStatus.setStatus('current')
xfRLWANPlcOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("down", 2), ("up", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLWANPlcOperStatus.setStatus('current')
xfRLWANActualCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 12, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLWANActualCapacity.setStatus('current')
xfRLWANLimitedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 12, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLWANLimitedCapacity.setStatus('current')
xfRLTHierarchyModuleTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13), )
if mibBuilder.loadTexts: xfRLTHierarchyModuleTable.setStatus('current')
xfRLTHierarchyModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1), ).setIndexNames((0, "XF-RADIOLINK-RLT-MIB", "xfRLTMHIndex"), (0, "XF-RADIOLINK-RLT-MIB", "xfRLTModuleIndex"))
if mibBuilder.loadTexts: xfRLTHierarchyModuleEntry.setStatus('current')
xfRLTMHIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTMHIndex.setStatus('current')
xfRLTModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTModuleIndex.setStatus('current')
xfRLTEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTEntPhysicalIndex.setStatus('current')
xfRLTPhysicalCointainedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTPhysicalCointainedIn.setStatus('current')
xfRLTPhysicalParentRelPos = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTPhysicalParentRelPos.setStatus('current')
xfRLTEntityPhysicalDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTEntityPhysicalDescr.setStatus('current')
xfRLTModuleSlotPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTModuleSlotPosition.setStatus('current')
xfRLTFEDistinguishedName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTFEDistinguishedName.setStatus('current')
xfRLTNEDistinguishedName = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTNEDistinguishedName.setStatus('current')
xfRLTInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTInterfaceIndex.setStatus('current')
xfRLTHighestSeverityAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 13, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("critical", 0), ("major", 1), ("minor", 2), ("warning", 3), ("clear", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTHighestSeverityAlarm.setStatus('current')
xfRLTProtectionTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14), )
if mibBuilder.loadTexts: xfRLTProtectionTable.setStatus('current')
xfRLTProtectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1), ).setIndexNames((0, "XF-RADIOLINK-RLT-MIB", "xfRLTProtIndex"))
if mibBuilder.loadTexts: xfRLTProtectionEntry.setStatus('current')
xfRLTProtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTProtIndex.setStatus('current')
xfRLTProtectionSwitchMode = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("auto", 2), ("manual", 3), ("autoRevertive", 4), ("txSwitchDisable", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTProtectionSwitchMode.setStatus('current')
xfRLTProtectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("unprotected", 2), ("protected", 3), ("unableToProtect", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTProtectionStatus.setStatus('current')
xfRLTRevertivePreferredTX = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTRevertivePreferredTX.setStatus('current')
xfRLTProtectionWaitToRestoreTime = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTProtectionWaitToRestoreTime.setStatus('current')
xfRLTFadeNotificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTFadeNotificationTimer.setStatus('current')
xfRLTManualSwitchCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("txManualSwitch", 2), ("txManualNoSwitch", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTManualSwitchCommand.setStatus('current')
xfRLTTxSwitchOverConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("notSupported", 2), ("enable", 3), ("disable", 4), ("enableLocal", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTTxSwitchOverConfiguration.setStatus('current')
xfRLTTxSwitchOverAlarmReset = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("txSwitchOverAlarmNoReset", 2), ("txSwitchOverAlarmReset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTTxSwitchOverAlarmReset.setStatus('current')
xfRLTNumOfRLPSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTNumOfRLPSwitch.setStatus('current')
xfRLTEnhancedACMProtectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("activeTransmitter", 2), ("maximumCapacity", 3), ("maximumProtection", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTEnhancedACMProtectionMode.setStatus('current')
xfRLTEnhancedACMProtectionOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 14, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("notApplicable", 2), ("enhAcmProtActive", 3), ("enhAcmProtNotActive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTEnhancedACMProtectionOperStatus.setStatus('current')
xfRLTEncryptionTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 15), )
if mibBuilder.loadTexts: xfRLTEncryptionTable.setStatus('current')
xfRLTEncryptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 15, 1), ).setIndexNames((0, "XF-RADIOLINK-RLT-MIB", "xfRLTEncryptionIndex"))
if mibBuilder.loadTexts: xfRLTEncryptionEntry.setStatus('current')
xfRLTEncryptionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTEncryptionIndex.setStatus('current')
xfRLTEncryptionAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTEncryptionAdminStatus.setStatus('current')
xfRLTEncryptionOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfRLTEncryptionOperStatus.setStatus('current')
xfRLTEncryptionMasterKey = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 1, 15, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfRLTEncryptionMasterKey.setStatus('current')
xfRLPMContinuousCounterTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1), )
if mibBuilder.loadTexts: xfRLPMContinuousCounterTable.setStatus('current')
xfRLPMContinuousCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xfRLPMContinuousCounterEntry.setStatus('current')
xfPMTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1, 1, 1), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMTimeElapsed.setStatus('current')
xfPMCurrentES = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1, 1, 2), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMCurrentES.setStatus('current')
xfPMCurrentSES = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1, 1, 3), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMCurrentSES.setStatus('current')
xfPMCurrentBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1, 1, 4), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMCurrentBBE.setStatus('current')
xfPMCurrentUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1, 1, 5), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMCurrentUAS.setStatus('current')
xfPMCurrentBB = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1, 1, 6), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMCurrentBB.setStatus('current')
xfPMPerfReset = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("noReset", 2), ("reset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfPMPerfReset.setStatus('current')
xfPMCurrentESR = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1, 1, 8), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMCurrentESR.setStatus('current')
xfPMCurrentSESR = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1, 1, 9), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMCurrentSESR.setStatus('current')
xfPMCurrentBBER = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 1, 1, 10), HCPerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMCurrentBBER.setStatus('current')
xfRLPMACMConfigTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 2), )
if mibBuilder.loadTexts: xfRLPMACMConfigTable.setStatus('current')
xfRLPMACMConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xfRLPMACMConfigEntry.setStatus('current')
xfPMACMSetThreshold15m = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfPMACMSetThreshold15m.setStatus('current')
xfPMACMSetThreshold24h = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfPMACMSetThreshold24h.setStatus('current')
xfPMACMResetThreshold15m = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xfPMACMResetThreshold15m.setStatus('current')
xfPMACMStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 2, 1, 4), Bits().clone(namedValues=NamedValues(("acm15m0", 0), ("acm15m1", 1), ("acm15m2", 2), ("acm24h0", 3), ("acm24h1", 4), ("acm24h2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMStatus.setStatus('current')
xfPMACMValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 2, 1, 5), Bits().clone(namedValues=NamedValues(("valid15m4QAMStrong", 0), ("valid15m4QAMStd", 1), ("valid15m4QAMLight", 2), ("valid15m16QAMStrong", 3), ("valid15m16QAMStd", 4), ("valid15m16QAMLight", 5), ("valid15m32QAMStrong", 6), ("valid15m32QAMStd", 7), ("valid15m32QAMLight", 8), ("valid15m64QAMStrong", 9), ("valid15m64QAMStd", 10), ("valid15m64QAMLight", 11), ("valid15m128QAMStrong", 12), ("valid15m128QAMStd", 13), ("valid15m128QAMLight", 14), ("valid15m256QAMStrong", 15), ("valid15m256QAMStd", 16), ("valid15m256QAMLight", 17), ("valid15m512QAMStrong", 18), ("valid15m512QAMStd", 19), ("valid15m512QAMLight", 20), ("valid15m1024QAMStrong", 21), ("valid15m1024QAMStd", 22), ("valid15m1024QAMLight", 23), ("valid15m2048QAMStrong", 24), ("valid15m2048QAMStd", 25), ("valid15m2048QAMLight", 26), ("valid15m4096QAMStrong", 27), ("valid15m4096QAMStd", 28), ("valid15m4096QAMLight", 29), ("valid15m8192QAMStrong", 30), ("valid15m8192QAMStd", 31), ("valid15m8192QAMLight", 32), ("valid15m16384QAMStrong", 33), ("valid15m16384QAMStd", 34), ("valid15m16384QAMLight", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMValidData.setStatus('current')
xfRLPMACMCurrent24hTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3), )
if mibBuilder.loadTexts: xfRLPMACMCurrent24hTable.setStatus('current')
xfRLPMACMCurrent24hEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xfRLPMACMCurrent24hEntry.setStatus('current')
xfPMACMCurrent24h4QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 1), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h4QAMStrong.setStatus('current')
xfPMACMCurrent24h4QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 2), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h4QAMStd.setStatus('current')
xfPMACMCurrent24h4QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 3), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h4QAMLight.setStatus('current')
xfPMACMCurrent24h16QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 4), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h16QAMStrong.setStatus('current')
xfPMACMCurrent24h16QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 5), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h16QAMStd.setStatus('current')
xfPMACMCurrent24h16QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 6), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h16QAMLight.setStatus('current')
xfPMACMCurrent24h32QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 7), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h32QAMStrong.setStatus('current')
xfPMACMCurrent24h32QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 8), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h32QAMStd.setStatus('current')
xfPMACMCurrent24h32QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 9), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h32QAMLight.setStatus('current')
xfPMACMCurrent24h64QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 10), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h64QAMStrong.setStatus('current')
xfPMACMCurrent24h64QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 11), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h64QAMStd.setStatus('current')
xfPMACMCurrent24h64QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 12), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h64QAMLight.setStatus('current')
xfPMACMCurrent24h128QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 13), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h128QAMStrong.setStatus('current')
xfPMACMCurrent24h128QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 14), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h128QAMStd.setStatus('current')
xfPMACMCurrent24h128QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 15), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h128QAMLight.setStatus('current')
xfPMACMCurrent24h256QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 16), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h256QAMStrong.setStatus('current')
xfPMACMCurrent24h256QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 17), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h256QAMStd.setStatus('current')
xfPMACMCurrent24h256QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 18), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h256QAMLight.setStatus('current')
xfPMACMCurrent24h512QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 19), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h512QAMStrong.setStatus('current')
xfPMACMCurrent24h512QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 20), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h512QAMStd.setStatus('current')
xfPMACMCurrent24h512QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 21), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h512QAMLight.setStatus('current')
xfPMACMCurrent24h1024QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 22), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h1024QAMStrong.setStatus('current')
xfPMACMCurrent24h1024QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 23), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h1024QAMStd.setStatus('current')
xfPMACMCurrent24h1024QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 24), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h1024QAMLight.setStatus('current')
xfPMACMCurrent24h2048QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 25), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h2048QAMStrong.setStatus('current')
xfPMACMCurrent24h2048QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 26), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h2048QAMStd.setStatus('current')
xfPMACMCurrent24h2048QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 27), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h2048QAMLight.setStatus('current')
xfPMACMCurrent24h4096QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 28), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h4096QAMStrong.setStatus('current')
xfPMACMCurrent24h4096QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 29), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h4096QAMStd.setStatus('current')
xfPMACMCurrent24h4096QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 30), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h4096QAMLight.setStatus('current')
xfPMACMCurrent24h8192QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 31), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h8192QAMStrong.setStatus('current')
xfPMACMCurrent24h8192QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 32), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h8192QAMStd.setStatus('current')
xfPMACMCurrent24h8192QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 33), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h8192QAMLight.setStatus('current')
xfPMACMCurrent24h16384QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 34), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h16384QAMStrong.setStatus('current')
xfPMACMCurrent24h16384QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 35), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h16384QAMStd.setStatus('current')
xfPMACMCurrent24h16384QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 3, 1, 36), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent24h16384QAMLight.setStatus('current')
xfRLPMACMInterval24hTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4), )
if mibBuilder.loadTexts: xfRLPMACMInterval24hTable.setStatus('current')
xfRLPMACMInterval24hEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xfRLPMACMInterval24hEntry.setStatus('current')
xfPMACMInterval24h4QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 1), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h4QAMStrong.setStatus('current')
xfPMACMInterval24h4QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 2), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h4QAMStd.setStatus('current')
xfPMACMInterval24h4QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 3), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h4QAMLight.setStatus('current')
xfPMACMInterval24h16QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 4), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h16QAMStrong.setStatus('current')
xfPMACMInterval24h16QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h16QAMStd.setStatus('current')
xfPMACMInterval24h16QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 6), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h16QAMLight.setStatus('current')
xfPMACMInterval24h32QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 7), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h32QAMStrong.setStatus('current')
xfPMACMInterval24h32QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 8), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h32QAMStd.setStatus('current')
xfPMACMInterval24h32QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 9), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h32QAMLight.setStatus('current')
xfPMACMInterval24h64QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 10), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h64QAMStrong.setStatus('current')
xfPMACMInterval24h64QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 11), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h64QAMStd.setStatus('current')
xfPMACMInterval24h64QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 12), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h64QAMLight.setStatus('current')
xfPMACMInterval24h128QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 13), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h128QAMStrong.setStatus('current')
xfPMACMInterval24h128QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 14), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h128QAMStd.setStatus('current')
xfPMACMInterval24h128QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 15), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h128QAMLight.setStatus('current')
xfPMACMInterval24h256QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 16), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h256QAMStrong.setStatus('current')
xfPMACMInterval24h256QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 17), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h256QAMStd.setStatus('current')
xfPMACMInterval24h256QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 18), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h256QAMLight.setStatus('current')
xfPMACMInterval24h512QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 19), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h512QAMStrong.setStatus('current')
xfPMACMInterval24h512QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 20), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h512QAMStd.setStatus('current')
xfPMACMInterval24h512QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 21), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h512QAMLight.setStatus('current')
xfPMACMInterval24h1024QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 22), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h1024QAMStrong.setStatus('current')
xfPMACMInterval24h1024QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 23), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h1024QAMStd.setStatus('current')
xfPMACMInterval24h1024QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 24), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h1024QAMLight.setStatus('current')
xfPMACMInterval24h2048QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 25), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h2048QAMStrong.setStatus('current')
xfPMACMInterval24h2048QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 26), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h2048QAMStd.setStatus('current')
xfPMACMInterval24h2048QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 27), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h2048QAMLight.setStatus('current')
xfPMACMInterval24h4096QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 28), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h4096QAMStrong.setStatus('current')
xfPMACMInterval24h4096QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 29), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h4096QAMStd.setStatus('current')
xfPMACMInterval24h4096QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 30), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h4096QAMLight.setStatus('current')
xfPMACMInterval24hValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24hValidData.setStatus('current')
xfPMACMInterval24h8192QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 32), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h8192QAMStrong.setStatus('current')
xfPMACMInterval24h8192QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 33), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h8192QAMStd.setStatus('current')
xfPMACMInterval24h8192QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 34), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h8192QAMLight.setStatus('current')
xfPMACMInterval24h16384QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 35), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h16384QAMStrong.setStatus('current')
xfPMACMInterval24h16384QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 36), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h16384QAMStd.setStatus('current')
xfPMACMInterval24h16384QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 4, 1, 37), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval24h16384QAMLight.setStatus('current')
xfRLPMACMCurrent15mTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5), )
if mibBuilder.loadTexts: xfRLPMACMCurrent15mTable.setStatus('current')
xfRLPMACMCurrent15mEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xfRLPMACMCurrent15mEntry.setStatus('current')
xfPMACMCurrent15m4QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 1), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m4QAMStrong.setStatus('current')
xfPMACMCurrent15m4QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 2), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m4QAMStd.setStatus('current')
xfPMACMCurrent15m4QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 3), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m4QAMLight.setStatus('current')
xfPMACMCurrent15m16QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 4), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m16QAMStrong.setStatus('current')
xfPMACMCurrent15m16QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 5), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m16QAMStd.setStatus('current')
xfPMACMCurrent15m16QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 6), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m16QAMLight.setStatus('current')
xfPMACMCurrent15m32QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 7), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m32QAMStrong.setStatus('current')
xfPMACMCurrent15m32QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 8), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m32QAMStd.setStatus('current')
xfPMACMCurrent15m32QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 9), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m32QAMLight.setStatus('current')
xfPMACMCurrent15m64QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 10), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m64QAMStrong.setStatus('current')
xfPMACMCurrent15m64QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 11), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m64QAMStd.setStatus('current')
xfPMACMCurrent15m64QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 12), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m64QAMLight.setStatus('current')
xfPMACMCurrent15m128QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 13), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m128QAMStrong.setStatus('current')
xfPMACMCurrent15m128QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 14), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m128QAMStd.setStatus('current')
xfPMACMCurrent15m128QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 15), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m128QAMLight.setStatus('current')
xfPMACMCurrent15m256QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 16), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m256QAMStrong.setStatus('current')
xfPMACMCurrent15m256QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 17), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m256QAMStd.setStatus('current')
xfPMACMCurrent15m256QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 18), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m256QAMLight.setStatus('current')
xfPMACMCurrent15m512QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 19), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m512QAMStrong.setStatus('current')
xfPMACMCurrent15m512QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 20), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m512QAMStd.setStatus('current')
xfPMACMCurrent15m512QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 21), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m512QAMLight.setStatus('current')
xfPMACMCurrent15m1024QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 22), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m1024QAMStrong.setStatus('current')
xfPMACMCurrent15m1024QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 23), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m1024QAMStd.setStatus('current')
xfPMACMCurrent15m1024QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 24), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m1024QAMLight.setStatus('current')
xfPMACMCurrent15m2048QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 25), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m2048QAMStrong.setStatus('current')
xfPMACMCurrent15m2048QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 26), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m2048QAMStd.setStatus('current')
xfPMACMCurrent15m2048QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 27), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m2048QAMLight.setStatus('current')
xfPMACMCurrent15m4096QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 28), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m4096QAMStrong.setStatus('current')
xfPMACMCurrent15m4096QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 29), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m4096QAMStd.setStatus('current')
xfPMACMCurrent15m4096QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 30), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m4096QAMLight.setStatus('current')
xfPMACMCurrent15m8192QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 31), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m8192QAMStrong.setStatus('current')
xfPMACMCurrent15m8192QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 32), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m8192QAMStd.setStatus('current')
xfPMACMCurrent15m8192QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 33), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m8192QAMLight.setStatus('current')
xfPMACMCurrent15m16384QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 34), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m16384QAMStrong.setStatus('current')
xfPMACMCurrent15m16384QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 35), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m16384QAMStd.setStatus('current')
xfPMACMCurrent15m16384QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 5, 1, 36), PerfCurrentCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMCurrent15m16384QAMLight.setStatus('current')
xfRLPMACMInterval15mTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6), )
if mibBuilder.loadTexts: xfRLPMACMInterval15mTable.setStatus('current')
xfRLPMACMInterval15mEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15mIntervalNumber"))
if mibBuilder.loadTexts: xfRLPMACMInterval15mEntry.setStatus('current')
xfPMACMInterval15mIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15mIntervalNumber.setStatus('current')
xfPMACMInterval15m4QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 2), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m4QAMStrong.setStatus('current')
xfPMACMInterval15m4QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 3), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m4QAMStd.setStatus('current')
xfPMACMInterval15m4QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 4), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m4QAMLight.setStatus('current')
xfPMACMInterval15m16QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 5), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m16QAMStrong.setStatus('current')
xfPMACMInterval15m16QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 6), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m16QAMStd.setStatus('current')
xfPMACMInterval15m16QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 7), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m16QAMLight.setStatus('current')
xfPMACMInterval15m32QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 8), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m32QAMStrong.setStatus('current')
xfPMACMInterval15m32QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 9), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m32QAMStd.setStatus('current')
xfPMACMInterval15m32QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 10), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m32QAMLight.setStatus('current')
xfPMACMInterval15m64QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 11), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m64QAMStrong.setStatus('current')
xfPMACMInterval15m64QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 12), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m64QAMStd.setStatus('current')
xfPMACMInterval15m64QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 13), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m64QAMLight.setStatus('current')
xfPMACMInterval15m128QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 14), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m128QAMStrong.setStatus('current')
xfPMACMInterval15m128QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 15), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m128QAMStd.setStatus('current')
xfPMACMInterval15m128QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 16), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m128QAMLight.setStatus('current')
xfPMACMInterval15m256QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 17), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m256QAMStrong.setStatus('current')
xfPMACMInterval15m256QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 18), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m256QAMStd.setStatus('current')
xfPMACMInterval15m256QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 19), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m256QAMLight.setStatus('current')
xfPMACMInterval15m512QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 20), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m512QAMStrong.setStatus('current')
xfPMACMInterval15m512QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 21), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m512QAMStd.setStatus('current')
xfPMACMInterval15m512QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 22), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m512QAMLight.setStatus('current')
xfPMACMInterval15m1024QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 23), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m1024QAMStrong.setStatus('current')
xfPMACMInterval15m1024QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 24), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m1024QAMStd.setStatus('current')
xfPMACMInterval15m1024QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 25), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m1024QAMLight.setStatus('current')
xfPMACMInterval15m2048QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 26), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m2048QAMStrong.setStatus('current')
xfPMACMInterval15m2048QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 27), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m2048QAMStd.setStatus('current')
xfPMACMInterval15m2048QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 28), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m2048QAMLight.setStatus('current')
xfPMACMInterval15m4096QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 29), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m4096QAMStrong.setStatus('current')
xfPMACMInterval15m4096QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 30), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m4096QAMStd.setStatus('current')
xfPMACMInterval15m4096QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 31), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m4096QAMLight.setStatus('current')
xfPMACMInterval15mValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 32), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15mValidData.setStatus('current')
xfPMACMInterval15m8192QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 33), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m8192QAMStrong.setStatus('current')
xfPMACMInterval15m8192QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 34), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m8192QAMStd.setStatus('current')
xfPMACMInterval15m8192QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 35), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m8192QAMLight.setStatus('current')
xfPMACMInterval15m16384QAMStrong = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 36), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m16384QAMStrong.setStatus('current')
xfPMACMInterval15m16384QAMStd = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 37), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m16384QAMStd.setStatus('current')
xfPMACMInterval15m16384QAMLight = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 6, 1, 38), PerfIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMACMInterval15m16384QAMLight.setStatus('current')
xfRLPMMimoCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 7), )
if mibBuilder.loadTexts: xfRLPMMimoCurrentTable.setStatus('current')
xfRLPMMimoCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xfRLPMMimoCurrentEntry.setStatus('current')
xfPMPerfCurrentEta = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfCurrentEta.setStatus('current')
xfPMPerfEtaMinLast7days = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfEtaMinLast7days.setStatus('current')
xfPMPerfEtaMaxLast7days = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfEtaMaxLast7days.setStatus('current')
xfRLPMMimoCurrent24hTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 8), )
if mibBuilder.loadTexts: xfRLPMMimoCurrent24hTable.setStatus('current')
xfRLPMMimoCurrent24hEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xfRLPMMimoCurrent24hEntry.setStatus('current')
xfPMPerfCurrent24hElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 8, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfCurrent24hElapsedTime.setStatus('current')
xfPMPerfCurrent24hEtaMin = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfCurrent24hEtaMin.setStatus('current')
xfPMPerfCurrent24hEtaMax = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfCurrent24hEtaMax.setStatus('current')
xfRLPMMimoInterval24hTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 9), )
if mibBuilder.loadTexts: xfRLPMMimoInterval24hTable.setStatus('current')
xfRLPMMimoInterval24hEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xfRLPMMimoInterval24hEntry.setStatus('current')
xfPMPerfInterval24hValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfInterval24hValidData.setStatus('current')
xfPMPerfInterval24hEtaMin = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfInterval24hEtaMin.setStatus('current')
xfPMPerfInterval24hEtaMax = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfInterval24hEtaMax.setStatus('current')
xfRLPMMimoCurrent15mTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 10), )
if mibBuilder.loadTexts: xfRLPMMimoCurrent15mTable.setStatus('current')
xfRLPMMimoCurrent15mEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: xfRLPMMimoCurrent15mEntry.setStatus('current')
xfPMPerfCurrent15mElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfCurrent15mElapsedTime.setStatus('current')
xfPMPerfCurrent15mEtaMin = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfCurrent15mEtaMin.setStatus('current')
xfPMPerfCurrent15mEtaMax = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfCurrent15mEtaMax.setStatus('current')
xfRLPMMimoInterval15mTable = MibTable((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 11), )
if mibBuilder.loadTexts: xfRLPMMimoInterval15mTable.setStatus('current')
xfRLPMMimoInterval15mEntry = MibTableRow((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "XF-RADIOLINK-RLT-MIB", "xfPMPerfInterval15mIntervalNumber"))
if mibBuilder.loadTexts: xfRLPMMimoInterval15mEntry.setStatus('current')
xfPMPerfInterval15mIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfInterval15mIntervalNumber.setStatus('current')
xfPMPerfInterval15mEtaMin = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfInterval15mEtaMin.setStatus('current')
xfPMPerfInterval15mEtaMax = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfInterval15mEtaMax.setStatus('current')
xfPMPerfInterval15mValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 2, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xfPMPerfInterval15mValidData.setStatus('current')
xfRadioLinkRltCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 3, 1))
xfRadioLinkRltGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 3, 2))
xfRadioLinkRltFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 3, 1, 1)).setObjects(("XF-RADIOLINK-RLT-MIB", "xfRadioLinkRltCompleteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xfRadioLinkRltFullCompliance = xfRadioLinkRltFullCompliance.setStatus('current')
xfRadioLinkRltCompleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 193, 81, 3, 4, 5, 3, 2, 1))
for _xfRadioLinkRltCompleteGroup_obj in [[("XF-RADIOLINK-RLT-MIB", "cgIfIndex"), ("XF-RADIOLINK-RLT-MIB", "cgTypeIndex"), ("XF-RADIOLINK-RLT-MIB", "xfIfStatus"), ("XF-RADIOLINK-RLT-MIB", "liEntLogicalIndex"), ("XF-RADIOLINK-RLT-MIB", "liIfIndex"), ("XF-RADIOLINK-RLT-MIB", "xfLIName"), ("XF-RADIOLINK-RLT-MIB", "xfLIIfDescr"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermDistinguishedName"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermLabel"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermOperStatus"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermRadioFrameId"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermPreamble"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermSelectedMinACM"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermActualACM"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermSelectedMaxACM"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermCapabilitiesLastChange"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermReferenceSEC"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermWantedLicensedCapacity"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermActualLicensedCapacity"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermActualCapacity"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermPolarization"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermXPICOperStatus"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermMIMOOperStatus"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermSNIR"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermXPI"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermReset"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermRestore"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermAutoRemoveLoopEnable"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermBerAlarmThreshold"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermActualRxACM"), ("XF-RADIOLINK-RLT-MIB", "xfCarrierTermFeCTSeverity"), ("XF-RADIOLINK-RLT-MIB", "xfRadioFrameId"), ("XF-RADIOLINK-RLT-MIB", "xfChannelSpacing"), ("XF-RADIOLINK-RLT-MIB", "xfFrameFormatType"), ("XF-RADIOLINK-RLT-MIB", "xfMinACMCapacity"), ("XF-RADIOLINK-RLT-MIB", "xfMaxACMCapacity"), ("XF-RADIOLINK-RLT-MIB", "xfACMProfile"), ("XF-RADIOLINK-RLT-MIB", "xfACMIndex"), ("XF-RADIOLINK-RLT-MIB", "xfACMCapacity"), ("XF-RADIOLINK-RLT-MIB", "rltEntLogicalIndex"), ("XF-RADIOLINK-RLT-MIB", "xfRLTDistinguishedName"), ("XF-RADIOLINK-RLT-MIB", "xfRLTIpAddress"), ("XF-RADIOLINK-RLT-MIB", "xfRLTIPv6Address"), ("XF-RADIOLINK-RLT-MIB", "xfRLTNeName"), ("XF-RADIOLINK-RLT-MIB", "xfRLTNeType"), ("XF-RADIOLINK-RLT-MIB", "xfRLTId"), ("XF-RADIOLINK-RLT-MIB", "xfRLTExpectedFarEndId"), ("XF-RADIOLINK-RLT-MIB", "xfRLTFarEndIdCheck"), ("XF-RADIOLINK-RLT-MIB", "xfRLTStatus"), ("XF-RADIOLINK-RLT-MIB", "xfRLTMode"), ("XF-RADIOLINK-RLT-MIB", "xfRLTActualTXTotalCapacity"), ("XF-RADIOLINK-RLT-MIB", "xfRLTActualTXPacketCapacity"), ("XF-RADIOLINK-RLT-MIB", "xfRLTLimitedTotalCapacity"), ("XF-RADIOLINK-RLT-MIB", "xfRLTRltSeverity"), ("XF-RADIOLINK-RLT-MIB", "xfRLTCapability"), ("XF-RADIOLINK-RLT-MIB", "xfRLTInventoryLastChange"), ("XF-RADIOLINK-RLT-MIB", "xfRLTCpriMode"), ("XF-RADIOLINK-RLT-MIB", "xfRLTReset"), ("XF-RADIOLINK-RLT-MIB", "xfRLTMeasuredHopLength"), ("XF-RADIOLINK-RLT-MIB", "trEntLogicalIndex"), ("XF-RADIOLINK-RLT-MIB", "xfTDMEnable"), ("XF-RADIOLINK-RLT-MIB", "xfRLTDMIfIndex"), ("XF-RADIOLINK-RLT-MIB", "xfActualTDMCapacity"), ("XF-RADIOLINK-RLT-MIB", "xfWantedTDMAllocation"), ("XF-RADIOLINK-RLT-MIB", "xfActualTDMAllocation"), ("XF-RADIOLINK-RLT-MIB", "xfTDMIfAlarms"), ("XF-RADIOLINK-RLT-MIB", "xfTDMRxLoop"), ("XF-RADIOLINK-RLT-MIB", "xfTDMDistinguishedName"), ("XF-RADIOLINK-RLT-MIB", "xfTDMMaxTributaries"), ("XF-RADIOLINK-RLT-MIB", "xfTDMHopLength"), ("XF-RADIOLINK-RLT-MIB", "xfCGIfIndex"), ("XF-RADIOLINK-RLT-MIB", "xfCGIfMinSpeed"), ("XF-RADIOLINK-RLT-MIB", "xfCGIfMaxSpeed"), ("XF-RADIOLINK-RLT-MIB", "xfCGIfRCNum"), ("XF-RADIOLINK-RLT-MIB", "xfCGIfAlarms"), ("XF-RADIOLINK-RLT-MIB", "xfCGIfHopViewStatus"), ("XF-RADIOLINK-RLT-MIB", "xpicPairEntLogicalIIndex"), ("XF-RADIOLINK-RLT-MIB", "xfXPICPairAdminStatus"), ("XF-RADIOLINK-RLT-MIB", "xfXPICPairNumber"), ("XF-RADIOLINK-RLT-MIB", "xfXPICPairRecovery"), ("XF-RADIOLINK-RLT-MIB", "xfXPICPairRestore"), ("XF-RADIOLINK-RLT-MIB", "xfXPICCTmember1"), ("XF-RADIOLINK-RLT-MIB", "xfXPICCTmember2"), ("XF-RADIOLINK-RLT-MIB", "xfXPICAutoRestore"), ("XF-RADIOLINK-RLT-MIB", "xfXpicPairIndex"), ("XF-RADIOLINK-RLT-MIB", "mimoGroupEntLogicalIIndex"), ("XF-RADIOLINK-RLT-MIB", "xfMIMOGroupAdminStatus"), ("XF-RADIOLINK-RLT-MIB", "xfMIMOGroupNumber"), ("XF-RADIOLINK-RLT-MIB", "xfMIMOGroupRecovery"), ("XF-RADIOLINK-RLT-MIB", "xfMIMOGroupRestore"), ("XF-RADIOLINK-RLT-MIB", "xfMIMOCTmember1"), ("XF-RADIOLINK-RLT-MIB", "xfMIMOCTmember2"), ("XF-RADIOLINK-RLT-MIB", "xfMIMOCTmember3"), ("XF-RADIOLINK-RLT-MIB", "xfMIMOCTmember4"), ("XF-RADIOLINK-RLT-MIB", "xfPMTimeElapsed"), ("XF-RADIOLINK-RLT-MIB", "xfPMCurrentES"), ("XF-RADIOLINK-RLT-MIB", "xfPMCurrentSES"), ("XF-RADIOLINK-RLT-MIB", "xfPMCurrentBBE"), ("XF-RADIOLINK-RLT-MIB", "xfPMCurrentUAS"), ("XF-RADIOLINK-RLT-MIB", "xfPMCurrentBB"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfReset"), ("XF-RADIOLINK-RLT-MIB", "xfPMCurrentESR"), ("XF-RADIOLINK-RLT-MIB", "xfPMCurrentSESR"), ("XF-RADIOLINK-RLT-MIB", "xfPMCurrentBBER"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMSetThreshold15m"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMSetThreshold24h"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMResetThreshold15m"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMStatus"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMValidData"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h4QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h4QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h4QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h16QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h16QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h16QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h32QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h32QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h32QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h64QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h64QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h64QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h128QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h128QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h128QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h256QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h256QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h256QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h512QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h512QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h512QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h1024QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h1024QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h1024QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h2048QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h2048QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h2048QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h4096QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h4096QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h4096QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h8192QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h8192QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h8192QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h16384QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h16384QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent24h16384QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h4QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h4QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h4QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h16QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h16QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h16QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h32QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h32QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h32QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h64QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h64QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h64QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h128QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h128QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h128QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h256QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h256QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h256QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h512QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h512QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h512QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h1024QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h1024QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h1024QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h2048QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h2048QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h2048QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h4096QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h4096QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h4096QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24hValidData"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h8192QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h8192QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h8192QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h16384QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h16384QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval24h16384QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m4QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m4QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m4QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m16QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m16QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m16QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m32QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m32QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m32QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m64QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m64QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m64QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m128QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m128QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m128QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m256QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m256QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m256QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m512QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m512QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m512QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m1024QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m1024QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m1024QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m2048QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m2048QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m2048QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m4096QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m4096QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m4096QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m8192QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m8192QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m8192QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m16384QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m16384QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMCurrent15m16384QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15mIntervalNumber"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m4QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m4QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m4QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m16QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m16QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m16QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m32QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m32QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m32QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m64QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m64QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m64QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m128QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m128QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m128QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m256QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m256QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m256QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m512QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m512QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m512QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m1024QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m1024QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m1024QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m2048QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m2048QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m2048QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m4096QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m4096QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m4096QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15mValidData"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m8192QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m8192QAMStd"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m8192QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m16384QAMStrong"), ("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m16384QAMStd")], [("XF-RADIOLINK-RLT-MIB", "xfPMACMInterval15m16384QAMLight"), ("XF-RADIOLINK-RLT-MIB", "xfRLWANIfIndex"), ("XF-RADIOLINK-RLT-MIB", "xfRLWANDistinguishedName"), ("XF-RADIOLINK-RLT-MIB", "xfRLWANCompAdminStatus"), ("XF-RADIOLINK-RLT-MIB", "xfRLWANCompConnStatus"), ("XF-RADIOLINK-RLT-MIB", "xfRLWANMlhcMplsMode"), ("XF-RADIOLINK-RLT-MIB", "xfRLWANMlhcOperStatus"), ("XF-RADIOLINK-RLT-MIB", "xfRLWANPlcOperStatus"), ("XF-RADIOLINK-RLT-MIB", "xfRLWANActualCapacity"), ("XF-RADIOLINK-RLT-MIB", "xfRLWANLimitedCapacity"), ("XF-RADIOLINK-RLT-MIB", "xfRLTMHIndex"), ("XF-RADIOLINK-RLT-MIB", "xfRLTModuleIndex"), ("XF-RADIOLINK-RLT-MIB", "xfRLTEntPhysicalIndex"), ("XF-RADIOLINK-RLT-MIB", "xfRLTPhysicalCointainedIn"), ("XF-RADIOLINK-RLT-MIB", "xfRLTPhysicalParentRelPos"), ("XF-RADIOLINK-RLT-MIB", "xfRLTEntityPhysicalDescr"), ("XF-RADIOLINK-RLT-MIB", "xfRLTModuleSlotPosition"), ("XF-RADIOLINK-RLT-MIB", "xfRLTNEDistinguishedName"), ("XF-RADIOLINK-RLT-MIB", "xfRLTFEDistinguishedName"), ("XF-RADIOLINK-RLT-MIB", "xfRLTInterfaceIndex"), ("XF-RADIOLINK-RLT-MIB", "xfRLTHighestSeverityAlarm"), ("XF-RADIOLINK-RLT-MIB", "xfRLTProtIndex"), ("XF-RADIOLINK-RLT-MIB", "xfRLTProtectionSwitchMode"), ("XF-RADIOLINK-RLT-MIB", "xfRLTProtectionStatus"), ("XF-RADIOLINK-RLT-MIB", "xfRLTRevertivePreferredTX"), ("XF-RADIOLINK-RLT-MIB", "xfRLTProtectionWaitToRestoreTime"), ("XF-RADIOLINK-RLT-MIB", "xfRLTFadeNotificationTimer"), ("XF-RADIOLINK-RLT-MIB", "xfRLTManualSwitchCommand"), ("XF-RADIOLINK-RLT-MIB", "xfRLTTxSwitchOverConfiguration"), ("XF-RADIOLINK-RLT-MIB", "xfRLTTxSwitchOverAlarmReset"), ("XF-RADIOLINK-RLT-MIB", "xfRLTNumOfRLPSwitch"), ("XF-RADIOLINK-RLT-MIB", "xfRLTEnhancedACMProtectionMode"), ("XF-RADIOLINK-RLT-MIB", "xfRLTEnhancedACMProtectionOperStatus"), ("XF-RADIOLINK-RLT-MIB", "xfRLTEncryptionIndex"), ("XF-RADIOLINK-RLT-MIB", "xfRLTEncryptionAdminStatus"), ("XF-RADIOLINK-RLT-MIB", "xfRLTEncryptionOperStatus"), ("XF-RADIOLINK-RLT-MIB", "xfRLTEncryptionMasterKey"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfCurrentEta"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfEtaMinLast7days"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfEtaMaxLast7days"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfCurrent24hElapsedTime"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfCurrent24hEtaMin"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfCurrent24hEtaMax"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfInterval24hValidData"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfInterval24hEtaMin"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfInterval24hEtaMax"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfCurrent15mElapsedTime"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfCurrent15mEtaMin"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfCurrent15mEtaMax"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfInterval15mIntervalNumber"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfInterval15mEtaMin"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfInterval15mEtaMax"), ("XF-RADIOLINK-RLT-MIB", "xfPMPerfInterval15mValidData")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        xfRadioLinkRltCompleteGroup = xfRadioLinkRltCompleteGroup.setObjects(*_xfRadioLinkRltCompleteGroup_obj)
    else:
        xfRadioLinkRltCompleteGroup = xfRadioLinkRltCompleteGroup.setObjects(*_xfRadioLinkRltCompleteGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xfRadioLinkRltCompleteGroup = xfRadioLinkRltCompleteGroup.setStatus('current')
mibBuilder.exportSymbols("XF-RADIOLINK-RLT-MIB", xfCarrierTermCapabilitiesLastChange=xfCarrierTermCapabilitiesLastChange, xfCarrierTermXPI=xfCarrierTermXPI, xfPMACMInterval24h512QAMLight=xfPMACMInterval24h512QAMLight, CarrierTermACMIndex=CarrierTermACMIndex, xfRLPMMimoInterval15mTable=xfRLPMMimoInterval15mTable, xfPMACMInterval24h1024QAMLight=xfPMACMInterval24h1024QAMLight, xfPMACMInterval15m32QAMStrong=xfPMACMInterval15m32QAMStrong, xfRLTProtectionWaitToRestoreTime=xfRLTProtectionWaitToRestoreTime, xfRLTEntPhysicalIndex=xfRLTEntPhysicalIndex, xfXPICCTmember2=xfXPICCTmember2, xfRLTProtectionTable=xfRLTProtectionTable, xfPMACMInterval15mIntervalNumber=xfPMACMInterval15mIntervalNumber, xfRLTEntityPhysicalDescr=xfRLTEntityPhysicalDescr, xfPMACMInterval24h16QAMStrong=xfPMACMInterval24h16QAMStrong, xfCGIfMinSpeed=xfCGIfMinSpeed, xfCarrierTermActualLicensedCapacity=xfCarrierTermActualLicensedCapacity, xfPMPerfInterval15mEtaMax=xfPMPerfInterval15mEtaMax, xfTDMHopLength=xfTDMHopLength, xfLIIfDescr=xfLIIfDescr, xfPMACMCurrent15m4QAMLight=xfPMACMCurrent15m4QAMLight, xfMIMOCTmember2=xfMIMOCTmember2, xfRLPMMimoCurrent24hEntry=xfRLPMMimoCurrent24hEntry, liIfIndex=liIfIndex, xfRadioLinkRltGroups=xfRadioLinkRltGroups, xfPMACMCurrent24h4QAMLight=xfPMACMCurrent24h4QAMLight, xfRLTPhysicalParentRelPos=xfRLTPhysicalParentRelPos, xfPMACMCurrent15m16QAMStd=xfPMACMCurrent15m16QAMStd, xfCarrierTermAutoRemoveLoopEnable=xfCarrierTermAutoRemoveLoopEnable, xfMIMOCTmember4=xfMIMOCTmember4, xfPMACMCurrent24h16QAMLight=xfPMACMCurrent24h16QAMLight, xfRadioLinkRltFullCompliance=xfRadioLinkRltFullCompliance, xfPMPerfEtaMinLast7days=xfPMPerfEtaMinLast7days, xfTDMEnable=xfTDMEnable, xfPMACMCurrent15m16QAMLight=xfPMACMCurrent15m16QAMLight, xfRLTEncryptionTable=xfRLTEncryptionTable, xfRLTNEDistinguishedName=xfRLTNEDistinguishedName, xfTDMMaxTributaries=xfTDMMaxTributaries, xfCGIfTable=xfCGIfTable, xfRLPMContinuousCounterTable=xfRLPMContinuousCounterTable, xfCarrierTermOperStatus=xfCarrierTermOperStatus, xfXPICAutoRestore=xfXPICAutoRestore, xfCarrierTermActualCapacity=xfCarrierTermActualCapacity, xfPMACMInterval24h2048QAMStd=xfPMACMInterval24h2048QAMStd, xfPMACMCurrent24h256QAMLight=xfPMACMCurrent24h256QAMLight, xfCGIfIndex=xfCGIfIndex, xfPMACMInterval15m2048QAMStrong=xfPMACMInterval15m2048QAMStrong, xfCarrierTerminationTable=xfCarrierTerminationTable, xfCarrierTermActualACM=xfCarrierTermActualACM, xfRLTIpAddress=xfRLTIpAddress, xfRLTEncryptionMasterKey=xfRLTEncryptionMasterKey, xfFrameFormatType=xfFrameFormatType, xfPMACMInterval15m128QAMStd=xfPMACMInterval15m128QAMStd, xfPMACMInterval15m64QAMLight=xfPMACMInterval15m64QAMLight, xfRLTInventoryLastChange=xfRLTInventoryLastChange, xfPMPerfInterval24hValidData=xfPMPerfInterval24hValidData, liEntLogicalIndex=liEntLogicalIndex, xfTDMIfAlarms=xfTDMIfAlarms, xfPMACMInterval15m16384QAMLight=xfPMACMInterval15m16384QAMLight, xfPMACMCurrent15m16QAMStrong=xfPMACMCurrent15m16QAMStrong, xfRLPMACMCurrent24hTable=xfRLPMACMCurrent24hTable, xfPMACMCurrent15m1024QAMLight=xfPMACMCurrent15m1024QAMLight, xfPMACMCurrent15m4096QAMLight=xfPMACMCurrent15m4096QAMLight, xfPMACMCurrent24h128QAMStd=xfPMACMCurrent24h128QAMStd, xfRLWANDistinguishedName=xfRLWANDistinguishedName, xfPMACMInterval15m16384QAMStd=xfPMACMInterval15m16384QAMStd, xfRLTTxSwitchOverConfiguration=xfRLTTxSwitchOverConfiguration, xfRLTFEDistinguishedName=xfRLTFEDistinguishedName, xfRLTDMIfEntry=xfRLTDMIfEntry, xfPMACMInterval24h16384QAMLight=xfPMACMInterval24h16384QAMLight, xfRLPMACMCurrent24hEntry=xfRLPMACMCurrent24hEntry, xfRadioLinkRltObjects=xfRadioLinkRltObjects, PYSNMP_MODULE_ID=xfRadioLinkRltMIB, xfPMPerfCurrent24hEtaMin=xfPMPerfCurrent24hEtaMin, xfRLTModuleIndex=xfRLTModuleIndex, xfRadioFrameId=xfRadioFrameId, xfRLTFadeNotificationTimer=xfRLTFadeNotificationTimer, xfRLPMMimoCurrent15mEntry=xfRLPMMimoCurrent15mEntry, xfRLPMACMInterval24hTable=xfRLPMACMInterval24hTable, xfPMTimeElapsed=xfPMTimeElapsed, xfPMACMCurrent15m2048QAMStd=xfPMACMCurrent15m2048QAMStd, xfPMACMCurrent15m8192QAMStrong=xfPMACMCurrent15m8192QAMStrong, xfPMACMCurrent15m32QAMStd=xfPMACMCurrent15m32QAMStd, xfRLPMMimoCurrentEntry=xfRLPMMimoCurrentEntry, xfRLPMMimoCurrentTable=xfRLPMMimoCurrentTable, xfPMACMInterval15m8192QAMLight=xfPMACMInterval15m8192QAMLight, xfRLTDMIfIndex=xfRLTDMIfIndex, xfPMACMSetThreshold15m=xfPMACMSetThreshold15m, xfRLTTxSwitchOverAlarmReset=xfRLTTxSwitchOverAlarmReset, xfPMPerfInterval15mIntervalNumber=xfPMPerfInterval15mIntervalNumber, xfTrafficTable=xfTrafficTable, xfPMACMCurrent15m256QAMLight=xfPMACMCurrent15m256QAMLight, xfPMACMInterval24h4QAMStd=xfPMACMInterval24h4QAMStd, xfPMCurrentBB=xfPMCurrentBB, xfPMCurrentBBER=xfPMCurrentBBER, xfRLTActualTXTotalCapacity=xfRLTActualTXTotalCapacity, xfPMACMValidData=xfPMACMValidData, xfPMACMCurrent24h128QAMLight=xfPMACMCurrent24h128QAMLight, xfRLPMMimoCurrent24hTable=xfRLPMMimoCurrent24hTable, xfPMCurrentBBE=xfPMCurrentBBE, xfPMACMInterval24h16384QAMStd=xfPMACMInterval24h16384QAMStd, xfPMACMInterval15m512QAMStd=xfPMACMInterval15m512QAMStd, trEntLogicalIndex=trEntLogicalIndex, xfPMPerfCurrentEta=xfPMPerfCurrentEta, xfPMACMInterval15m32QAMStd=xfPMACMInterval15m32QAMStd, xfPMACMInterval24h2048QAMStrong=xfPMACMInterval24h2048QAMStrong, xfPMACMInterval24h128QAMStrong=xfPMACMInterval24h128QAMStrong, xfRLTId=xfRLTId, xfPMACMInterval15m4QAMStd=xfPMACMInterval15m4QAMStd, cgTypeIndex=cgTypeIndex, xfMIMOGroupRestore=xfMIMOGroupRestore, xfRLTProtIndex=xfRLTProtIndex, xfRLWANIfIndex=xfRLWANIfIndex, xfRLWANCompAdminStatus=xfRLWANCompAdminStatus, xfPMACMInterval24h128QAMLight=xfPMACMInterval24h128QAMLight, xfCarrierTermSelectedMaxACM=xfCarrierTermSelectedMaxACM, xfRLTLimitedTotalCapacity=xfRLTLimitedTotalCapacity, xfPMACMCurrent24h2048QAMLight=xfPMACMCurrent24h2048QAMLight, xfRLPMACMInterval24hEntry=xfRLPMACMInterval24hEntry, xfPMACMInterval24h64QAMLight=xfPMACMInterval24h64QAMLight, xfPMCurrentES=xfPMCurrentES, xfPMACMInterval24h8192QAMStrong=xfPMACMInterval24h8192QAMStrong, xfPMACMInterval15m16QAMStrong=xfPMACMInterval15m16QAMStrong, xfMIMOGroupAdminStatus=xfMIMOGroupAdminStatus, xfPMACMCurrent24h8192QAMStrong=xfPMACMCurrent24h8192QAMStrong, xfPMACMInterval24h64QAMStrong=xfPMACMInterval24h64QAMStrong, xfRLTProtectionStatus=xfRLTProtectionStatus, xfACMIndex=xfACMIndex, xfXPICPairRestore=xfXPICPairRestore, xfPMACMCurrent15m2048QAMStrong=xfPMACMCurrent15m2048QAMStrong, xfPMACMCurrent15m512QAMStrong=xfPMACMCurrent15m512QAMStrong, xfPMACMInterval15m4QAMStrong=xfPMACMInterval15m4QAMStrong, xfRLPMACMConfigEntry=xfRLPMACMConfigEntry, xfACMProfileCapacityTable=xfACMProfileCapacityTable, xfChannelGroupEntry=xfChannelGroupEntry, xfXPICCTmember1=xfXPICCTmember1, xfPMACMCurrent15m256QAMStd=xfPMACMCurrent15m256QAMStd, xfPMCurrentESR=xfPMCurrentESR, xfPMACMCurrent15m4QAMStrong=xfPMACMCurrent15m4QAMStrong, xfCarrierTermBerAlarmThreshold=xfCarrierTermBerAlarmThreshold, xfPMACMInterval15m256QAMStd=xfPMACMInterval15m256QAMStd, xfRLTEnhancedACMProtectionMode=xfRLTEnhancedACMProtectionMode, xfPMACMInterval24h512QAMStd=xfPMACMInterval24h512QAMStd, xfCarrierTermPolarization=xfCarrierTermPolarization, xfPMPerfCurrent15mElapsedTime=xfPMPerfCurrent15mElapsedTime, xfPMACMInterval24h512QAMStrong=xfPMACMInterval24h512QAMStrong, xfPMACMInterval15m1024QAMStd=xfPMACMInterval15m1024QAMStd, xfXpicPairIndex=xfXpicPairIndex, xfPMACMCurrent15m16384QAMStrong=xfPMACMCurrent15m16384QAMStrong, xfRLTNumOfRLPSwitch=xfRLTNumOfRLPSwitch, xfPMACMInterval24h32QAMStrong=xfPMACMInterval24h32QAMStrong, xfRLPMACMCurrent15mEntry=xfRLPMACMCurrent15mEntry, xfPMCurrentSES=xfPMCurrentSES, xfRadioLinkRltCompliances=xfRadioLinkRltCompliances, xfPMACMCurrent24h64QAMStrong=xfPMACMCurrent24h64QAMStrong, xfPMACMCurrent15m4QAMStd=xfPMACMCurrent15m4QAMStd, xfMinACMCapacity=xfMinACMCapacity, xfRLPMMimoInterval24hTable=xfRLPMMimoInterval24hTable, xfPMACMInterval24h128QAMStd=xfPMACMInterval24h128QAMStd, xfPMACMCurrent24h16QAMStd=xfPMACMCurrent24h16QAMStd, xfPMACMCurrent24h4096QAMStd=xfPMACMCurrent24h4096QAMStd, xfMIMOGroupRecovery=xfMIMOGroupRecovery, xfRLTRevertivePreferredTX=xfRLTRevertivePreferredTX, xfPMACMCurrent15m1024QAMStd=xfPMACMCurrent15m1024QAMStd, xfPMACMCurrent24h32QAMStd=xfPMACMCurrent24h32QAMStd, xfRLTEntry=xfRLTEntry, xfPMACMCurrent15m4096QAMStd=xfPMACMCurrent15m4096QAMStd, xfRLTEncryptionIndex=xfRLTEncryptionIndex, xfRLTProtectionSwitchMode=xfRLTProtectionSwitchMode, xfPMACMInterval15mValidData=xfPMACMInterval15mValidData, xfCarrierTermReferenceSEC=xfCarrierTermReferenceSEC, xfPMACMCurrent24h512QAMLight=xfPMACMCurrent24h512QAMLight, xfRLPMACMInterval15mTable=xfRLPMACMInterval15mTable, xfPMACMInterval15m4096QAMLight=xfPMACMInterval15m4096QAMLight, xfPMACMInterval24h8192QAMStd=xfPMACMInterval24h8192QAMStd, xfPMACMInterval24h4096QAMStd=xfPMACMInterval24h4096QAMStd, xfPMACMCurrent15m64QAMStd=xfPMACMCurrent15m64QAMStd, xfRLTModuleSlotPosition=xfRLTModuleSlotPosition, xfPMACMInterval24h1024QAMStd=xfPMACMInterval24h1024QAMStd, xfPMACMInterval24hValidData=xfPMACMInterval24hValidData, xfCGIfRCNum=xfCGIfRCNum, xfActualTDMCapacity=xfActualTDMCapacity, xfCarrierTermDistinguishedName=xfCarrierTermDistinguishedName, xfACMProfileCapacityEntry=xfACMProfileCapacityEntry, xfPMACMInterval24h32QAMLight=xfPMACMInterval24h32QAMLight, xfRLTHierarchyModuleEntry=xfRLTHierarchyModuleEntry, xfPMACMInterval15m8192QAMStd=xfPMACMInterval15m8192QAMStd, xfRLTPhysicalCointainedIn=xfRLTPhysicalCointainedIn, xfChannelSpacing=xfChannelSpacing, xfRadioLinkRltCompleteGroup=xfRadioLinkRltCompleteGroup, xfRLTMHIndex=xfRLTMHIndex, xfCarrierTerminationCapabilityTable=xfCarrierTerminationCapabilityTable, xfRLTEncryptionEntry=xfRLTEncryptionEntry, xfRLPMACMInterval15mEntry=xfRLPMACMInterval15mEntry, xfPMACMCurrent15m8192QAMLight=xfPMACMCurrent15m8192QAMLight, xfRLWANMlhcMplsMode=xfRLWANMlhcMplsMode, xfPMACMCurrent15m8192QAMStd=xfPMACMCurrent15m8192QAMStd, xfPMACMCurrent15m32QAMLight=xfPMACMCurrent15m32QAMLight, xfRLWANIfTable=xfRLWANIfTable, xfLIName=xfLIName, xfChannelGroupTable=xfChannelGroupTable, xfPMACMCurrent15m128QAMStd=xfPMACMCurrent15m128QAMStd, xfPMACMCurrent15m32QAMStrong=xfPMACMCurrent15m32QAMStrong, xfPMACMCurrent15m64QAMLight=xfPMACMCurrent15m64QAMLight, xfCGIfEntry=xfCGIfEntry, xfPMACMCurrent15m512QAMStd=xfPMACMCurrent15m512QAMStd, xfPMACMInterval24h4QAMLight=xfPMACMInterval24h4QAMLight, xfPMACMInterval15m2048QAMStd=xfPMACMInterval15m2048QAMStd, xfPMACMCurrent15m128QAMStrong=xfPMACMCurrent15m128QAMStrong, xfPMACMCurrent24h32QAMStrong=xfPMACMCurrent24h32QAMStrong, xfPMACMInterval24h1024QAMStrong=xfPMACMInterval24h1024QAMStrong, xfRLPMMimoInterval24hEntry=xfRLPMMimoInterval24hEntry, xfPMPerfCurrent24hEtaMax=xfPMPerfCurrent24hEtaMax, mimoGroupEntLogicalIIndex=mimoGroupEntLogicalIIndex, xfPMACMCurrent24h256QAMStd=xfPMACMCurrent24h256QAMStd, xfRLTNeName=xfRLTNeName, xfPMPerfInterval24hEtaMin=xfPMPerfInterval24hEtaMin, xfRadioLinkRltPmObjects=xfRadioLinkRltPmObjects, xfPMACMCurrent15m1024QAMStrong=xfPMACMCurrent15m1024QAMStrong, xfRLTMode=xfRLTMode, xfPMACMInterval15m1024QAMStrong=xfPMACMInterval15m1024QAMStrong, xfPMACMCurrent15m2048QAMLight=xfPMACMCurrent15m2048QAMLight, xfXPICPairAdminStatus=xfXPICPairAdminStatus, cgIfIndex=cgIfIndex, xfRLTHighestSeverityAlarm=xfRLTHighestSeverityAlarm, xfPMACMCurrent24h16384QAMStd=xfPMACMCurrent24h16384QAMStd, xfRLTRltSeverity=xfRLTRltSeverity, xfPMACMCurrent24h32QAMLight=xfPMACMCurrent24h32QAMLight, xfPMACMInterval15m64QAMStrong=xfPMACMInterval15m64QAMStrong, xfPMACMCurrent15m16384QAMStd=xfPMACMCurrent15m16384QAMStd, xfPMACMInterval15m64QAMStd=xfPMACMInterval15m64QAMStd, xfPMACMCurrent24h2048QAMStrong=xfPMACMCurrent24h2048QAMStrong, xfPMACMCurrent24h8192QAMLight=xfPMACMCurrent24h8192QAMLight, xfRLTProtectionEntry=xfRLTProtectionEntry, xfCarrierTermReset=xfCarrierTermReset, xfCarrierTerminationEntry=xfCarrierTerminationEntry, xfCGIfMaxSpeed=xfCGIfMaxSpeed, xfMIMOGroupNumber=xfMIMOGroupNumber, xfRLTCapability=xfRLTCapability, xfRLTEncryptionAdminStatus=xfRLTEncryptionAdminStatus, xfPMACMCurrent15m256QAMStrong=xfPMACMCurrent15m256QAMStrong, xfPMACMInterval24h64QAMStd=xfPMACMInterval24h64QAMStd, xfPMACMInterval15m2048QAMLight=xfPMACMInterval15m2048QAMLight, xfCGIfHopViewStatus=xfCGIfHopViewStatus, xfPMACMCurrent24h16384QAMStrong=xfPMACMCurrent24h16384QAMStrong, xfRLWANLimitedCapacity=xfRLWANLimitedCapacity, xfCarrierTerminationCapabilityEntry=xfCarrierTerminationCapabilityEntry, xfRLPMACMCurrent15mTable=xfRLPMACMCurrent15mTable, xfWantedTDMAllocation=xfWantedTDMAllocation, xfPMACMCurrent15m128QAMLight=xfPMACMCurrent15m128QAMLight, xfRadioLinkRltConformance=xfRadioLinkRltConformance, xfPMACMInterval24h16384QAMStrong=xfPMACMInterval24h16384QAMStrong, xfRLPMACMConfigTable=xfRLPMACMConfigTable, xfPMACMInterval24h16QAMLight=xfPMACMInterval24h16QAMLight, xfTrafficEntry=xfTrafficEntry)
mibBuilder.exportSymbols("XF-RADIOLINK-RLT-MIB", xfPMACMCurrent24h64QAMLight=xfPMACMCurrent24h64QAMLight, xfPMACMInterval24h16QAMStd=xfPMACMInterval24h16QAMStd, xfPMACMInterval15m8192QAMStrong=xfPMACMInterval15m8192QAMStrong, xfPMACMCurrent24h4096QAMLight=xfPMACMCurrent24h4096QAMLight, xfPMACMCurrent24h4QAMStd=xfPMACMCurrent24h4QAMStd, xfPMACMCurrent24h16QAMStrong=xfPMACMCurrent24h16QAMStrong, xfPMACMInterval24h4096QAMStrong=xfPMACMInterval24h4096QAMStrong, xfPMCurrentSESR=xfPMCurrentSESR, xfPMACMCurrent24h1024QAMLight=xfPMACMCurrent24h1024QAMLight, xfMIMOGroupTable=xfMIMOGroupTable, xfPMACMCurrent15m64QAMStrong=xfPMACMCurrent15m64QAMStrong, xfPMACMInterval15m1024QAMLight=xfPMACMInterval15m1024QAMLight, xfRLWANMlhcOperStatus=xfRLWANMlhcOperStatus, xfPMACMCurrent24h4096QAMStrong=xfPMACMCurrent24h4096QAMStrong, xfCarrierTermFeCTSeverity=xfCarrierTermFeCTSeverity, xfPMACMSetThreshold24h=xfPMACMSetThreshold24h, xfRLTManualSwitchCommand=xfRLTManualSwitchCommand, xfPMPerfCurrent15mEtaMin=xfPMPerfCurrent15mEtaMin, xfMIMOCTmember3=xfMIMOCTmember3, xfPMPerfReset=xfPMPerfReset, xfPMACMCurrent24h1024QAMStd=xfPMACMCurrent24h1024QAMStd, xfRLTInterfaceIndex=xfRLTInterfaceIndex, xfLIMappingTable=xfLIMappingTable, xfRLTHierarchyModuleTable=xfRLTHierarchyModuleTable, xfPMACMInterval24h256QAMStd=xfPMACMInterval24h256QAMStd, xfRLTMeasuredHopLength=xfRLTMeasuredHopLength, xfPMPerfInterval15mValidData=xfPMPerfInterval15mValidData, xfPMACMInterval24h256QAMLight=xfPMACMInterval24h256QAMLight, xfCarrierTermActualRxACM=xfCarrierTermActualRxACM, xfPMACMCurrent24h256QAMStrong=xfPMACMCurrent24h256QAMStrong, xfPMACMInterval15m4096QAMStd=xfPMACMInterval15m4096QAMStd, xfRadioLinkRltMIB=xfRadioLinkRltMIB, xfACMCapacity=xfACMCapacity, xfCarrierTermSNIR=xfCarrierTermSNIR, xfCarrierTermWantedLicensedCapacity=xfCarrierTermWantedLicensedCapacity, xfPMACMCurrent24h512QAMStrong=xfPMACMCurrent24h512QAMStrong, xfRLTFarEndIdCheck=xfRLTFarEndIdCheck, xfPMACMInterval15m256QAMStrong=xfPMACMInterval15m256QAMStrong, xfMIMOGroupEntry=xfMIMOGroupEntry, xfXPICPairNumber=xfXPICPairNumber, xfPMACMInterval24h32QAMStd=xfPMACMInterval24h32QAMStd, xfXPICPairRecovery=xfXPICPairRecovery, xfRLTActualTXPacketCapacity=xfRLTActualTXPacketCapacity, rltEntLogicalIndex=rltEntLogicalIndex, xfRLTNeType=xfRLTNeType, xfPMACMCurrent24h512QAMStd=xfPMACMCurrent24h512QAMStd, xfPMACMCurrent15m4096QAMStrong=xfPMACMCurrent15m4096QAMStrong, xfPMACMCurrent15m16384QAMLight=xfPMACMCurrent15m16384QAMLight, xfRLTEncryptionOperStatus=xfRLTEncryptionOperStatus, xfCGIfAlarms=xfCGIfAlarms, xfRLTEnhancedACMProtectionOperStatus=xfRLTEnhancedACMProtectionOperStatus, xfRLTDMIfTable=xfRLTDMIfTable, xfPMACMInterval24h8192QAMLight=xfPMACMInterval24h8192QAMLight, xfPMACMStatus=xfPMACMStatus, xfPMACMInterval15m16QAMLight=xfPMACMInterval15m16QAMLight, xpicPairEntLogicalIIndex=xpicPairEntLogicalIIndex, xfPMACMInterval15m16384QAMStrong=xfPMACMInterval15m16384QAMStrong, xfRLTCpriMode=xfRLTCpriMode, xfTDMRxLoop=xfTDMRxLoop, xfPMACMInterval24h4096QAMLight=xfPMACMInterval24h4096QAMLight, xfCarrierTermMIMOOperStatus=xfCarrierTermMIMOOperStatus, xfPMACMInterval15m512QAMStrong=xfPMACMInterval15m512QAMStrong, xfRLTReset=xfRLTReset, xfRLWANPlcOperStatus=xfRLWANPlcOperStatus, xfRLTStatus=xfRLTStatus, xfRLWANIfEntry=xfRLWANIfEntry, xfPMACMCurrent24h64QAMStd=xfPMACMCurrent24h64QAMStd, xfACMProfile=xfACMProfile, xfPMACMInterval24h256QAMStrong=xfPMACMInterval24h256QAMStrong, xfPMACMCurrent24h2048QAMStd=xfPMACMCurrent24h2048QAMStd, xfActualTDMAllocation=xfActualTDMAllocation, xfPMACMCurrent24h1024QAMStrong=xfPMACMCurrent24h1024QAMStrong, xfXPICPairEntry=xfXPICPairEntry, xfPMACMCurrent24h16384QAMLight=xfPMACMCurrent24h16384QAMLight, xfMaxACMCapacity=xfMaxACMCapacity, xfRLWANCompConnStatus=xfRLWANCompConnStatus, xfCarrierTermPreamble=xfCarrierTermPreamble, xfPMACMCurrent24h8192QAMStd=xfPMACMCurrent24h8192QAMStd, xfPMPerfInterval15mEtaMin=xfPMPerfInterval15mEtaMin, xfCarrierTermRadioFrameId=xfCarrierTermRadioFrameId, xfCarrierTermSelectedMinACM=xfCarrierTermSelectedMinACM, xfCarrierTermXPICOperStatus=xfCarrierTermXPICOperStatus, xfPMACMInterval15m256QAMLight=xfPMACMInterval15m256QAMLight, xfPMACMInterval15m4096QAMStrong=xfPMACMInterval15m4096QAMStrong, xfPMACMInterval24h4QAMStrong=xfPMACMInterval24h4QAMStrong, xfRLTIPv6Address=xfRLTIPv6Address, xfPMACMInterval24h2048QAMLight=xfPMACMInterval24h2048QAMLight, xfRLPMMimoCurrent15mTable=xfRLPMMimoCurrent15mTable, xfPMACMCurrent15m512QAMLight=xfPMACMCurrent15m512QAMLight, xfPMPerfInterval24hEtaMax=xfPMPerfInterval24hEtaMax, xfCarrierTermLabel=xfCarrierTermLabel, xfPMPerfEtaMaxLast7days=xfPMPerfEtaMaxLast7days, xfPMPerfCurrent15mEtaMax=xfPMPerfCurrent15mEtaMax, xfRLWANActualCapacity=xfRLWANActualCapacity, xfMIMOCTmember1=xfMIMOCTmember1, xfRLTTable=xfRLTTable, xfRLTDistinguishedName=xfRLTDistinguishedName, xfPMPerfCurrent24hElapsedTime=xfPMPerfCurrent24hElapsedTime, xfPMACMCurrent24h4QAMStrong=xfPMACMCurrent24h4QAMStrong, xfPMACMInterval15m16QAMStd=xfPMACMInterval15m16QAMStd, xfTDMDistinguishedName=xfTDMDistinguishedName, xfRLPMMimoInterval15mEntry=xfRLPMMimoInterval15mEntry, xfRLPMContinuousCounterEntry=xfRLPMContinuousCounterEntry, xfLIMappingEntry=xfLIMappingEntry, xfPMACMInterval15m32QAMLight=xfPMACMInterval15m32QAMLight, xfPMACMInterval15m128QAMStrong=xfPMACMInterval15m128QAMStrong, xfPMCurrentUAS=xfPMCurrentUAS, xfPMACMCurrent24h128QAMStrong=xfPMACMCurrent24h128QAMStrong, xfPMACMResetThreshold15m=xfPMACMResetThreshold15m, xfCarrierTermRestore=xfCarrierTermRestore, xfPMACMInterval15m512QAMLight=xfPMACMInterval15m512QAMLight, xfPMACMInterval15m4QAMLight=xfPMACMInterval15m4QAMLight, xfPMACMInterval15m128QAMLight=xfPMACMInterval15m128QAMLight, xfIfStatus=xfIfStatus, xfXPICPairTable=xfXPICPairTable, xfRLTExpectedFarEndId=xfRLTExpectedFarEndId)
