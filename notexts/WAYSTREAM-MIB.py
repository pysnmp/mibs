#
# PySNMP MIB module WAYSTREAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/waystream/WAYSTREAM-MIB
# Produced by pysmi-1.1.12 at Fri Jul 19 10:07:55 2024
# On host fv-az1251-884 platform Linux version 6.5.0-1023-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Integer32, Gauge32, TimeTicks, ModuleIdentity, IpAddress, Bits, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter64, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Gauge32", "TimeTicks", "ModuleIdentity", "IpAddress", "Bits", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter64", "NotificationType", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wsMgmt, wsExperiment = mibBuilder.importSymbols("WAYSTREAM-SMI", "wsMgmt", "wsExperiment")
ibos = ModuleIdentity((1, 3, 6, 1, 4, 1, 9303, 4, 1))
ibos.setRevisions(('2017-10-23 11:00', '2017-09-18 11:00', '2017-02-10 11:00', '2012-07-05 19:30', '2011-12-20 09:08', '2011-12-06 09:34', '2011-01-11 17:55', '2009-04-17 15:29', '2009-03-23 11:02', '2008-04-30 14:26', '2007-10-03 18:35', '2007-06-13 14:37', '2006-10-18 13:41', '2006-08-23 11:00', '2006-01-25 13:30', '2005-05-10 11:24', '2005-02-01 09:11', '2005-01-14 15:00', '2004-10-20 14:34', '2004-05-14 11:55',))
if mibBuilder.loadTexts: ibos.setLastUpdated('201702101100Z')
if mibBuilder.loadTexts: ibos.setOrganization('Waystream AB')
wsSystem = ObjectIdentity((1, 3, 6, 1, 4, 1, 9303, 4, 1, 1))
if mibBuilder.loadTexts: wsSystem.setStatus('current')
wsWritedummy = MibScalar((1, 3, 6, 1, 4, 1, 9303, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsWritedummy.setStatus('current')
wsReload = MibScalar((1, 3, 6, 1, 4, 1, 9303, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsReload.setStatus('current')
wsVersion = MibScalar((1, 3, 6, 1, 4, 1, 9303, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVersion.setStatus('current')
wsAsrRevision = MibScalar((1, 3, 6, 1, 4, 1, 9303, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAsrRevision.setStatus('current')
wsVersionString = MibScalar((1, 3, 6, 1, 4, 1, 9303, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVersionString.setStatus('current')
wsEnvironment = ObjectIdentity((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2))
if mibBuilder.loadTexts: wsEnvironment.setStatus('current')
wsTempTable = MibTable((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 1), )
if mibBuilder.loadTexts: wsTempTable.setStatus('current')
wsTempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 1, 1), ).setIndexNames((0, "WAYSTREAM-MIB", "wsTempSensor"))
if mibBuilder.loadTexts: wsTempEntry.setStatus('current')
wsTempSensor = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTempSensor.setStatus('current')
wsTempMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTempMeasured.setStatus('current')
wsTempTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTempTOS.setStatus('current')
wsTempTHYST = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTempTHYST.setStatus('current')
wsTempThresholdLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTempThresholdLow.setStatus('current')
wsTempThresholdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTempThresholdHigh.setStatus('current')
wsTempStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2, 4))).clone(namedValues=NamedValues(("failed", -1), ("ok", 0), ("high", 1), ("low", 2), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTempStatus.setStatus('current')
wsVoltTable = MibTable((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 2), )
if mibBuilder.loadTexts: wsVoltTable.setStatus('current')
wsVoltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 2, 1), ).setIndexNames((0, "WAYSTREAM-MIB", "wsVoltChannel"))
if mibBuilder.loadTexts: wsVoltEntry.setStatus('current')
wsVoltChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVoltChannel.setStatus('current')
wsVoltNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVoltNominal.setStatus('current')
wsVoltMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVoltMeasured.setStatus('current')
wsVoltThresholdLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVoltThresholdLow.setStatus('current')
wsVoltThresholdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVoltThresholdHigh.setStatus('current')
wsVoltStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-3, -1, 0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("na", -3), ("failed", -1), ("ok", 0), ("high", 1), ("low", 2), ("notPresent", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsVoltStatus.setStatus('current')
wsFanTable = MibTable((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 3), )
if mibBuilder.loadTexts: wsFanTable.setStatus('current')
wsFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 3, 1), ).setIndexNames((0, "WAYSTREAM-MIB", "wsFanNumber"))
if mibBuilder.loadTexts: wsFanEntry.setStatus('current')
wsFanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFanNumber.setStatus('current')
wsFanRPM = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFanRPM.setStatus('current')
wsFanVoltage = MibScalar((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFanVoltage.setStatus('current')
wsIbosEnvironmentTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsIbosEnvironmentTrapEnable.setStatus('current')
wsPFDP = ObjectIdentity((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3))
if mibBuilder.loadTexts: wsPFDP.setStatus('current')
wsNeighboursTable = MibTable((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1), )
if mibBuilder.loadTexts: wsNeighboursTable.setStatus('current')
wsNeighboursEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1), ).setIndexNames((0, "WAYSTREAM-MIB", "wsNeighbourIfIndex"), (0, "WAYSTREAM-MIB", "wsNeighbourNIndex"))
if mibBuilder.loadTexts: wsNeighboursEntry.setStatus('current')
wsNeighbourIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourIfIndex.setStatus('current')
wsNeighbourNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourNIndex.setStatus('current')
wsNeighbourHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourHostname.setStatus('current')
wsNeighbourLocalIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourLocalIf.setStatus('current')
wsNeighbourRemoteIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourRemoteIf.setStatus('current')
wsNeighbourModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourModel.setStatus('current')
wsNeighbourLastAct = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourLastAct.setStatus('current')
wsNeighbourOSVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourOSVersion.setStatus('current')
wsNeighbourSNPA = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourSNPA.setStatus('current')
wsNeighbourUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourUptime.setStatus('current')
wsNeighbourState = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bidirectional", 1), ("unidirectional", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourState.setStatus('current')
wsNeighbourDBCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourDBCount.setStatus('current')
wsNeighbourCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourCreated.setStatus('current')
wsNeighbourPacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPacketsIn.setStatus('current')
wsNeighbourPacketErrorsrIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPacketErrorsrIn.setStatus('current')
wsNeighbourPortsTable = MibTable((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2), )
if mibBuilder.loadTexts: wsNeighbourPortsTable.setStatus('current')
wsNeighbourPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1), ).setIndexNames((0, "WAYSTREAM-MIB", "wsNeighbourPortIfIndex"), (0, "WAYSTREAM-MIB", "wsNeighbourPortNIndex"), (0, "WAYSTREAM-MIB", "wsNeighbourPortPIndex"))
if mibBuilder.loadTexts: wsNeighbourPortsEntry.setStatus('current')
wsNeighbourPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortIfIndex.setStatus('current')
wsNeighbourPortNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortNIndex.setStatus('current')
wsNeighbourPortPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortPIndex.setStatus('current')
wsNeighbourPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortName.setStatus('current')
wsNeighbourPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 5), Bits().clone(namedValues=NamedValues(("reserved0", 0), ("reserved1", 1), ("reserved2", 2), ("reserved3", 3), ("vlaninfo", 4), ("s100mbit", 5), ("fullduplex", 6), ("up", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortState.setStatus('current')
wsNeighbourPortTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortTxOctets.setStatus('current')
wsNeighbourPortTxDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortTxDropPkts.setStatus('current')
wsNeighbourPortTxBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortTxBroadcastPkts.setStatus('current')
wsNeighbourPortTxMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortTxMulticastPkts.setStatus('current')
wsNeighbourPortTxUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortTxUnicastPkts.setStatus('current')
wsNeighbourPortTxCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortTxCollisions.setStatus('current')
wsNeighbourPortTxDeferredTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortTxDeferredTransmit.setStatus('current')
wsNeighbourPortTxFrameInDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortTxFrameInDisc.setStatus('current')
wsNeighbourPortRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxOctets.setStatus('current')
wsNeighbourPortRxUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxUndersizePkts.setStatus('current')
wsNeighbourPortPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortPkts64Octets.setStatus('current')
wsNeighbourPortPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortPkts65to127Octets.setStatus('current')
wsNeighbourPortPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortPkts128to255Octets.setStatus('current')
wsNeighbourPortPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortPkts256to511Octets.setStatus('current')
wsNeighbourPortPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortPkts512to1023Octets.setStatus('current')
wsNeighbourPortPkts1024to1522Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortPkts1024to1522Octets.setStatus('current')
wsNeighbourPortRxOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxOversizePkts.setStatus('current')
wsNeighbourPortRxJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxJabbers.setStatus('current')
wsNeighbourPortRxAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxAlignmentErrors.setStatus('current')
wsNeighbourPortRxFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxFCSErrors.setStatus('current')
wsNeighbourPortRxGoodOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxGoodOctets.setStatus('current')
wsNeighbourPortRxDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxDropPkts.setStatus('current')
wsNeighbourPortRxUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxUnicastPkts.setStatus('current')
wsNeighbourPortRxMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxMulticastPkts.setStatus('current')
wsNeighbourPortRxBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxBroadcastPkts.setStatus('current')
wsNeighbourPortRxFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxFragments.setStatus('current')
wsNeighbourPortRxExcessSizeDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxExcessSizeDisc.setStatus('current')
wsNeighbourPortRxSymbolError = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 2, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortRxSymbolError.setStatus('current')
wsNeighbourPortSNPATable = MibTable((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 3), )
if mibBuilder.loadTexts: wsNeighbourPortSNPATable.setStatus('current')
wsNeighbourPortSNPAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 3, 1), ).setIndexNames((0, "WAYSTREAM-MIB", "wsNeighbourPortSNPAIfIndex"), (0, "WAYSTREAM-MIB", "wsNeighbourPortSNPANIndex"), (0, "WAYSTREAM-MIB", "wsNeighbourPortSNPAPIndex"), (0, "WAYSTREAM-MIB", "wsNeighbourPortSNPASIndex"))
if mibBuilder.loadTexts: wsNeighbourPortSNPAEntry.setStatus('current')
wsNeighbourPortSNPAIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortSNPAIfIndex.setStatus('current')
wsNeighbourPortSNPANIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortSNPANIndex.setStatus('current')
wsNeighbourPortSNPAPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortSNPAPIndex.setStatus('current')
wsNeighbourPortSNPASIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortSNPASIndex.setStatus('current')
wsNeighbourPortSNPASMCast = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortSNPASMCast.setStatus('current')
wsNeighbourPortSNPA = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 3, 3, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNeighbourPortSNPA.setStatus('current')
wsSFPTable = MibTable((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4), )
if mibBuilder.loadTexts: wsSFPTable.setStatus('current')
wsSFPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1), ).setIndexNames((0, "WAYSTREAM-MIB", "wsSFPIndex"))
if mibBuilder.loadTexts: wsSFPEntry.setStatus('current')
wsSFPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPIndex.setStatus('current')
wsSFPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ok", 0), ("missing", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPStatus.setStatus('current')
wsSFPConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6, 7, 8, 9, 10, 11, 32, 33))).clone(namedValues=NamedValues(("sc", 1), ("fiberJack", 6), ("lc", 7), ("mtrj", 8), ("mu", 9), ("sg", 10), ("opticalPigtail", 11), ("hssdcii", 32), ("copperPigtail", 33)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPConnector.setStatus('current')
wsSFPTransceiver = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 4), Bits().clone(namedValues=NamedValues(("sBasePX", 0), ("sBaseBX10", 1), ("s100BaseFX", 2), ("s100BaseLX", 3), ("s1000BaseT", 4), ("s1000BaseCX", 5), ("s1000BaseLX", 6), ("s1000BaseSX", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTransceiver.setStatus('current')
wsSFPEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("e8B10B", 1), ("e4B5B", 2), ("eNRZ", 3), ("eManchester", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPEncoding.setStatus('current')
wsSFPBitrate = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPBitrate.setStatus('current')
wsSFPSingleModeLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPSingleModeLen.setStatus('current')
wsSFPMultiMode50Len = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPMultiMode50Len.setStatus('current')
wsSFPMultiMode625Len = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPMultiMode625Len.setStatus('current')
wsSFPCopperLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPCopperLen.setStatus('current')
wsSFPTempStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("alarmLow", 1), ("warnLow", 2), ("ok", 3), ("warnHigh", 4), ("alarmHigh", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTempStatus.setStatus('current')
wsSFPTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTemp.setStatus('current')
wsSFPVoltStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("alarmLow", 1), ("warnLow", 2), ("ok", 3), ("warnHigh", 4), ("alarmHigh", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPVoltStatus.setStatus('current')
wsSFPVolt = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPVolt.setStatus('current')
wsSFPTXCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("alarmLow", 1), ("warnLow", 2), ("ok", 3), ("warnHigh", 4), ("alarmHigh", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXCurrentStatus.setStatus('current')
wsSFPTXCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXCurrent.setStatus('current')
wsSFPTXPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("alarmLow", 1), ("warnLow", 2), ("ok", 3), ("warnHigh", 4), ("alarmHigh", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXPowerStatus.setStatus('current')
wsSFPTXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXPower.setStatus('current')
wsSFPRXPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("alarmLow", 1), ("warnLow", 2), ("ok", 3), ("warnHigh", 4), ("alarmHigh", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPRXPowerStatus.setStatus('current')
wsSFPRXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPRXPower.setStatus('current')
wsSFPTransceiverExt = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 21), Bits().clone(namedValues=NamedValues(("s10000BaseER", 0), ("s10000BaseLRM", 1), ("s10000BaseLR", 2), ("s10000BaseSR", 3), ("sActiveCable", 4), ("sPassiveCable", 5), ("reserved6", 6), ("reserved7", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTransceiverExt.setStatus('current')
wsSFPTXdBmPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXdBmPower.setStatus('current')
wsSFPRXdBmPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPRXdBmPower.setStatus('current')
wsSFPTempNormalLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTempNormalLow.setStatus('current')
wsSFPTempNormalHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTempNormalHigh.setStatus('current')
wsSFPTempWarningLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTempWarningLow.setStatus('current')
wsSFPTempWarningHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTempWarningHigh.setStatus('current')
wsSFPVoltNormalLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPVoltNormalLow.setStatus('current')
wsSFPVoltNormalHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPVoltNormalHigh.setStatus('current')
wsSFPVoltWarningLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPVoltWarningLow.setStatus('current')
wsSFPVoltWarningHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPVoltWarningHigh.setStatus('current')
wsSFPTXCurrentNormalLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXCurrentNormalLow.setStatus('current')
wsSFPTXCurrentNormalHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXCurrentNormalHigh.setStatus('current')
wsSFPTXCurrentWarningLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXCurrentWarningLow.setStatus('current')
wsSFPTXCurrentWarningHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXCurrentWarningHigh.setStatus('current')
wsSFPTXOutputPowNormalLowuW = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXOutputPowNormalLowuW.setStatus('current')
wsSFPTXOutputPowNormalHighuW = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXOutputPowNormalHighuW.setStatus('current')
wsSFPTXOutputPowWarningLowuW = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXOutputPowWarningLowuW.setStatus('current')
wsSFPTXOutputPowWarningHighuW = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXOutputPowWarningHighuW.setStatus('current')
wsSFPTXOutputPowNormalLowdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXOutputPowNormalLowdBm.setStatus('current')
wsSFPTXOutputPowNormalHighdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXOutputPowNormalHighdBm.setStatus('current')
wsSFPTXOutputPowWarningLowdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXOutputPowWarningLowdBm.setStatus('current')
wsSFPTXOutputPowWarningHighdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPTXOutputPowWarningHighdBm.setStatus('current')
wsSFPRXInputPowNormalLowuW = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPRXInputPowNormalLowuW.setStatus('current')
wsSFPRXInputPowNormalHighuW = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPRXInputPowNormalHighuW.setStatus('current')
wsSFPRXInputPowWarningLowuW = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPRXInputPowWarningLowuW.setStatus('current')
wsSFPRXInputPowWarningHighuW = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPRXInputPowWarningHighuW.setStatus('current')
wsSFPRXInputPowNormalLowdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPRXInputPowNormalLowdBm.setStatus('current')
wsSFPRXInputPowNormalHighdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPRXInputPowNormalHighdBm.setStatus('current')
wsSFPRXInputPowWarningLowdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPRXInputPowWarningLowdBm.setStatus('current')
wsSFPRXInputPowWarningHighdBm = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPRXInputPowWarningHighdBm.setStatus('current')
wsSFPPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 52), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPPartNumber.setStatus('current')
wsSFPSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 4, 1, 53), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSFPSerialNumber.setStatus('current')
wsAccounting = ObjectIdentity((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5))
if mibBuilder.loadTexts: wsAccounting.setStatus('current')
wsPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1), )
if mibBuilder.loadTexts: wsPolicyTable.setStatus('current')
wsPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1), ).setIndexNames((0, "WAYSTREAM-MIB", "wsPolicyIfIndex"), (0, "WAYSTREAM-MIB", "wsPolicyName"))
if mibBuilder.loadTexts: wsPolicyEntry.setStatus('current')
wsPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPolicyIfIndex.setStatus('current')
wsPolicyIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPolicyIfName.setStatus('current')
wsPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPolicyName.setStatus('current')
wsPolicyCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPolicyCookie.setStatus('current')
wsPolicyInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPolicyInPkts.setStatus('current')
wsPolicyInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPolicyInBytes.setStatus('current')
wsPolicyInDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPolicyInDrops.setStatus('current')
wsPolicyOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPolicyOutPkts.setStatus('current')
wsPolicyOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPolicyOutBytes.setStatus('current')
wsPolicyOutDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPolicyOutDrops.setStatus('current')
wsPolicyUsedCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 5, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPolicyUsedCnt.setStatus('current')
wsXFPTable = MibTable((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6), )
if mibBuilder.loadTexts: wsXFPTable.setStatus('current')
wsXFPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1), ).setIndexNames((0, "WAYSTREAM-MIB", "wsXFPIndex"))
if mibBuilder.loadTexts: wsXFPEntry.setStatus('current')
wsXFPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPIndex.setStatus('current')
wsXFPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ok", 0), ("missing", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPStatus.setStatus('current')
wsXFPConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6, 7, 8, 9, 10, 11, 32, 33))).clone(namedValues=NamedValues(("sc", 1), ("fiberJack", 6), ("lc", 7), ("mtrj", 8), ("mu", 9), ("sg", 10), ("opticalPigtail", 11), ("hssdcii", 32), ("copperPigtail", 33)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPConnector.setStatus('current')
wsXFPTransceiver = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 4), Bits().clone(namedValues=NamedValues(("reserved0", 0), ("s10GBaseEW", 1), ("s10GBaseLW", 2), ("s10GBaseSW", 3), ("s10GBaseLRM", 4), ("s10GBaseER", 5), ("s10GBaseLR", 6), ("s10GBaseSR", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPTransceiver.setStatus('current')
wsXFPEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 5), Bits().clone(namedValues=NamedValues(("reserved0", 0), ("reserved1", 1), ("reserved2", 2), ("eRZ", 3), ("eNRZ", 4), ("eSonetScrambl", 5), ("e8B10B", 6), ("e64B66B", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPEncoding.setStatus('current')
wsXFPBitrateMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPBitrateMin.setStatus('current')
wsXFPBitrateMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPBitrateMax.setStatus('current')
wsXFPSingleModeLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPSingleModeLen.setStatus('current')
wsXFPMultiMode50Len = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPMultiMode50Len.setStatus('current')
wsXFPMultiMode625Len = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPMultiMode625Len.setStatus('current')
wsXFPCopperLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPCopperLen.setStatus('current')
wsXFPTempStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("alarmLow", 1), ("warnLow", 2), ("ok", 3), ("warnHigh", 4), ("alarmHigh", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPTempStatus.setStatus('current')
wsXFPTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPTemp.setStatus('current')
wsXFPTXCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("alarmLow", 1), ("warnLow", 2), ("ok", 3), ("warnHigh", 4), ("alarmHigh", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPTXCurrentStatus.setStatus('current')
wsXFPTXCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPTXCurrent.setStatus('current')
wsXFPTXPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("alarmLow", 1), ("warnLow", 2), ("ok", 3), ("warnHigh", 4), ("alarmHigh", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPTXPowerStatus.setStatus('current')
wsXFPTXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPTXPower.setStatus('current')
wsXFPRXPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("alarmLow", 1), ("warnLow", 2), ("ok", 3), ("warnHigh", 4), ("alarmHigh", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPRXPowerStatus.setStatus('current')
wsXFPRXPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9303, 4, 1, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsXFPRXPower.setStatus('current')
wsIbosEnvironmentNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 0))
wsIbosTempLow = NotificationType((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 0, 1)).setObjects(("WAYSTREAM-MIB", "wsTempSensor"), ("WAYSTREAM-MIB", "wsTempMeasured"), ("WAYSTREAM-MIB", "wsTempThresholdLow"), ("WAYSTREAM-MIB", "wsTempStatus"))
if mibBuilder.loadTexts: wsIbosTempLow.setStatus('current')
wsIbosTempHigh = NotificationType((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 0, 2)).setObjects(("WAYSTREAM-MIB", "wsTempSensor"), ("WAYSTREAM-MIB", "wsTempMeasured"), ("WAYSTREAM-MIB", "wsTempThresholdHigh"), ("WAYSTREAM-MIB", "wsTempStatus"))
if mibBuilder.loadTexts: wsIbosTempHigh.setStatus('current')
wsIbosVoltLow = NotificationType((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 0, 3)).setObjects(("WAYSTREAM-MIB", "wsVoltChannel"), ("WAYSTREAM-MIB", "wsVoltMeasured"), ("WAYSTREAM-MIB", "wsVoltThresholdLow"), ("WAYSTREAM-MIB", "wsVoltStatus"))
if mibBuilder.loadTexts: wsIbosVoltLow.setStatus('current')
wsIbosVoltHigh = NotificationType((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 0, 4)).setObjects(("WAYSTREAM-MIB", "wsVoltChannel"), ("WAYSTREAM-MIB", "wsVoltMeasured"), ("WAYSTREAM-MIB", "wsVoltThresholdHigh"), ("WAYSTREAM-MIB", "wsVoltStatus"))
if mibBuilder.loadTexts: wsIbosVoltHigh.setStatus('current')
wsIbosFanRPMLow = NotificationType((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 0, 5)).setObjects(("WAYSTREAM-MIB", "wsFanNumber"), ("WAYSTREAM-MIB", "wsFanRPM"))
if mibBuilder.loadTexts: wsIbosFanRPMLow.setStatus('current')
wsIbosFanOutVoltLow = NotificationType((1, 3, 6, 1, 4, 1, 9303, 4, 1, 2, 0, 6)).setObjects(("WAYSTREAM-MIB", "wsFanVoltage"))
if mibBuilder.loadTexts: wsIbosFanOutVoltLow.setStatus('current')
mibBuilder.exportSymbols("WAYSTREAM-MIB", wsTempSensor=wsTempSensor, wsSFPSingleModeLen=wsSFPSingleModeLen, wsNeighbourPortTxMulticastPkts=wsNeighbourPortTxMulticastPkts, wsIbosEnvironmentTrapEnable=wsIbosEnvironmentTrapEnable, wsPolicyIfName=wsPolicyIfName, wsNeighbourPortRxGoodOctets=wsNeighbourPortRxGoodOctets, wsSFPTempNormalLow=wsSFPTempNormalLow, wsSFPTXOutputPowNormalHighdBm=wsSFPTXOutputPowNormalHighdBm, wsXFPConnector=wsXFPConnector, wsXFPIndex=wsXFPIndex, wsSFPTXCurrentWarningHigh=wsSFPTXCurrentWarningHigh, wsXFPTXCurrent=wsXFPTXCurrent, wsSFPRXInputPowNormalHighdBm=wsSFPRXInputPowNormalHighdBm, wsNeighbourPacketsIn=wsNeighbourPacketsIn, wsSFPMultiMode50Len=wsSFPMultiMode50Len, wsNeighbourPortState=wsNeighbourPortState, wsNeighbourPortTxDropPkts=wsNeighbourPortTxDropPkts, wsNeighbourRemoteIf=wsNeighbourRemoteIf, PYSNMP_MODULE_ID=ibos, wsSFPTXPowerStatus=wsSFPTXPowerStatus, wsSFPRXPower=wsSFPRXPower, wsSFPRXInputPowNormalLowdBm=wsSFPRXInputPowNormalLowdBm, wsVersion=wsVersion, wsPolicyTable=wsPolicyTable, wsWritedummy=wsWritedummy, wsSFPEntry=wsSFPEntry, wsXFPTXPowerStatus=wsXFPTXPowerStatus, wsXFPStatus=wsXFPStatus, wsNeighbourPortSNPASIndex=wsNeighbourPortSNPASIndex, wsTempEntry=wsTempEntry, wsTempTOS=wsTempTOS, wsTempMeasured=wsTempMeasured, wsNeighbourPortIfIndex=wsNeighbourPortIfIndex, wsNeighbourPortPkts65to127Octets=wsNeighbourPortPkts65to127Octets, wsSFPTransceiver=wsSFPTransceiver, wsNeighbourPortTxUnicastPkts=wsNeighbourPortTxUnicastPkts, wsTempStatus=wsTempStatus, wsNeighbourPortRxOversizePkts=wsNeighbourPortRxOversizePkts, wsNeighbourPortRxJabbers=wsNeighbourPortRxJabbers, wsSFPPartNumber=wsSFPPartNumber, wsPolicyInBytes=wsPolicyInBytes, wsReload=wsReload, wsVoltChannel=wsVoltChannel, wsNeighbourPortRxFragments=wsNeighbourPortRxFragments, wsSFPTXOutputPowNormalLowdBm=wsSFPTXOutputPowNormalLowdBm, wsSFPRXInputPowWarningHighuW=wsSFPRXInputPowWarningHighuW, wsXFPEntry=wsXFPEntry, wsNeighbourDBCount=wsNeighbourDBCount, wsXFPTXPower=wsXFPTXPower, wsNeighbourPortPkts512to1023Octets=wsNeighbourPortPkts512to1023Octets, wsSFPTable=wsSFPTable, wsSFPMultiMode625Len=wsSFPMultiMode625Len, wsVersionString=wsVersionString, wsSFPTempWarningHigh=wsSFPTempWarningHigh, wsAccounting=wsAccounting, wsVoltMeasured=wsVoltMeasured, wsSFPIndex=wsSFPIndex, wsNeighbourPortPkts64Octets=wsNeighbourPortPkts64Octets, wsPolicyOutPkts=wsPolicyOutPkts, wsPolicyInPkts=wsPolicyInPkts, wsNeighboursEntry=wsNeighboursEntry, wsNeighbourPortSNPAEntry=wsNeighbourPortSNPAEntry, wsXFPMultiMode625Len=wsXFPMultiMode625Len, wsNeighbourPortPkts1024to1522Octets=wsNeighbourPortPkts1024to1522Octets, wsNeighbourPortTxOctets=wsNeighbourPortTxOctets, wsNeighbourPortRxMulticastPkts=wsNeighbourPortRxMulticastPkts, wsSFPEncoding=wsSFPEncoding, wsVoltThresholdHigh=wsVoltThresholdHigh, wsVoltNominal=wsVoltNominal, wsIbosVoltHigh=wsIbosVoltHigh, wsNeighbourCreated=wsNeighbourCreated, wsNeighbourState=wsNeighbourState, wsTempThresholdLow=wsTempThresholdLow, wsIbosTempHigh=wsIbosTempHigh, wsSFPTXOutputPowWarningHighuW=wsSFPTXOutputPowWarningHighuW, wsSFPTXdBmPower=wsSFPTXdBmPower, wsNeighbourIfIndex=wsNeighbourIfIndex, wsSFPSerialNumber=wsSFPSerialNumber, wsNeighbourPortRxFCSErrors=wsNeighbourPortRxFCSErrors, wsNeighbourPortSNPANIndex=wsNeighbourPortSNPANIndex, wsNeighbourNIndex=wsNeighbourNIndex, wsNeighbourOSVersion=wsNeighbourOSVersion, wsSFPTXOutputPowWarningLowdBm=wsSFPTXOutputPowWarningLowdBm, wsSFPRXInputPowNormalLowuW=wsSFPRXInputPowNormalLowuW, wsSFPTXCurrentNormalLow=wsSFPTXCurrentNormalLow, wsSFPTXOutputPowWarningLowuW=wsSFPTXOutputPowWarningLowuW, wsXFPTXCurrentStatus=wsXFPTXCurrentStatus, wsTempTHYST=wsTempTHYST, wsSFPRXInputPowWarningLowdBm=wsSFPRXInputPowWarningLowdBm, wsNeighbourPortRxUnicastPkts=wsNeighbourPortRxUnicastPkts, wsNeighbourPortRxDropPkts=wsNeighbourPortRxDropPkts, wsPolicyName=wsPolicyName, wsPolicyOutDrops=wsPolicyOutDrops, wsNeighbourSNPA=wsNeighbourSNPA, wsNeighbourPortSNPASMCast=wsNeighbourPortSNPASMCast, wsNeighbourModel=wsNeighbourModel, wsSFPTXCurrentWarningLow=wsSFPTXCurrentWarningLow, wsTempTable=wsTempTable, wsVoltThresholdLow=wsVoltThresholdLow, wsNeighbourLastAct=wsNeighbourLastAct, wsSFPConnector=wsSFPConnector, wsSFPVoltStatus=wsSFPVoltStatus, wsSFPRXdBmPower=wsSFPRXdBmPower, wsNeighboursTable=wsNeighboursTable, wsNeighbourUptime=wsNeighbourUptime, wsNeighbourPortPIndex=wsNeighbourPortPIndex, wsNeighbourPortName=wsNeighbourPortName, wsSFPTempWarningLow=wsSFPTempWarningLow, wsXFPMultiMode50Len=wsXFPMultiMode50Len, wsPolicyOutBytes=wsPolicyOutBytes, wsXFPRXPowerStatus=wsXFPRXPowerStatus, wsXFPTemp=wsXFPTemp, wsSFPVoltWarningHigh=wsSFPVoltWarningHigh, wsPolicyEntry=wsPolicyEntry, wsAsrRevision=wsAsrRevision, wsNeighbourPortTxBroadcastPkts=wsNeighbourPortTxBroadcastPkts, ibos=ibos, wsNeighbourPortTxFrameInDisc=wsNeighbourPortTxFrameInDisc, wsSFPRXInputPowWarningHighdBm=wsSFPRXInputPowWarningHighdBm, wsNeighbourLocalIf=wsNeighbourLocalIf, wsSFPTXPower=wsSFPTXPower, wsNeighbourPortRxSymbolError=wsNeighbourPortRxSymbolError, wsNeighbourPortTxCollisions=wsNeighbourPortTxCollisions, wsVoltStatus=wsVoltStatus, wsPolicyIfIndex=wsPolicyIfIndex, wsNeighbourPortSNPATable=wsNeighbourPortSNPATable, wsPolicyUsedCnt=wsPolicyUsedCnt, wsNeighbourPortRxExcessSizeDisc=wsNeighbourPortRxExcessSizeDisc, wsTempThresholdHigh=wsTempThresholdHigh, wsEnvironment=wsEnvironment, wsSystem=wsSystem, wsNeighbourPortSNPAPIndex=wsNeighbourPortSNPAPIndex, wsFanTable=wsFanTable, wsNeighbourPortRxOctets=wsNeighbourPortRxOctets, wsSFPVoltNormalHigh=wsSFPVoltNormalHigh, wsSFPTemp=wsSFPTemp, wsXFPTable=wsXFPTable, wsNeighbourPortsTable=wsNeighbourPortsTable, wsFanEntry=wsFanEntry, wsNeighbourPortTxDeferredTransmit=wsNeighbourPortTxDeferredTransmit, wsPFDP=wsPFDP, wsSFPRXInputPowNormalHighuW=wsSFPRXInputPowNormalHighuW, wsIbosVoltLow=wsIbosVoltLow, wsNeighbourPortRxAlignmentErrors=wsNeighbourPortRxAlignmentErrors, wsSFPVoltNormalLow=wsSFPVoltNormalLow, wsPolicyInDrops=wsPolicyInDrops, wsSFPRXPowerStatus=wsSFPRXPowerStatus, wsIbosTempLow=wsIbosTempLow, wsSFPTXOutputPowNormalLowuW=wsSFPTXOutputPowNormalLowuW, wsSFPBitrate=wsSFPBitrate, wsNeighbourPacketErrorsrIn=wsNeighbourPacketErrorsrIn, wsSFPTXCurrentStatus=wsSFPTXCurrentStatus, wsSFPCopperLen=wsSFPCopperLen, wsXFPSingleModeLen=wsXFPSingleModeLen, wsIbosFanRPMLow=wsIbosFanRPMLow, wsSFPTempNormalHigh=wsSFPTempNormalHigh, wsNeighbourPortRxBroadcastPkts=wsNeighbourPortRxBroadcastPkts, wsXFPTempStatus=wsXFPTempStatus, wsNeighbourPortSNPA=wsNeighbourPortSNPA, wsSFPTransceiverExt=wsSFPTransceiverExt, wsVoltEntry=wsVoltEntry, wsNeighbourPortPkts256to511Octets=wsNeighbourPortPkts256to511Octets, wsIbosEnvironmentNotifications=wsIbosEnvironmentNotifications, wsIbosFanOutVoltLow=wsIbosFanOutVoltLow, wsPolicyCookie=wsPolicyCookie, wsXFPBitrateMin=wsXFPBitrateMin, wsSFPTXCurrent=wsSFPTXCurrent, wsNeighbourPortPkts128to255Octets=wsNeighbourPortPkts128to255Octets, wsXFPBitrateMax=wsXFPBitrateMax, wsXFPEncoding=wsXFPEncoding, wsVoltTable=wsVoltTable, wsXFPRXPower=wsXFPRXPower, wsNeighbourPortSNPAIfIndex=wsNeighbourPortSNPAIfIndex, wsSFPVolt=wsSFPVolt, wsXFPCopperLen=wsXFPCopperLen, wsSFPTXOutputPowNormalHighuW=wsSFPTXOutputPowNormalHighuW, wsSFPTXOutputPowWarningHighdBm=wsSFPTXOutputPowWarningHighdBm, wsNeighbourPortNIndex=wsNeighbourPortNIndex, wsSFPVoltWarningLow=wsSFPVoltWarningLow, wsFanNumber=wsFanNumber, wsFanVoltage=wsFanVoltage, wsNeighbourHostname=wsNeighbourHostname, wsNeighbourPortRxUndersizePkts=wsNeighbourPortRxUndersizePkts, wsXFPTransceiver=wsXFPTransceiver, wsSFPTXCurrentNormalHigh=wsSFPTXCurrentNormalHigh, wsFanRPM=wsFanRPM, wsSFPRXInputPowWarningLowuW=wsSFPRXInputPowWarningLowuW, wsNeighbourPortsEntry=wsNeighbourPortsEntry, wsSFPStatus=wsSFPStatus, wsSFPTempStatus=wsSFPTempStatus)
