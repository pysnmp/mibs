#
# PySNMP MIB module CTRON-DOWNLOAD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-DOWNLOAD-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 11:57:54 2024
# On host fv-az1385-213 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ctDownLoad, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctDownLoad")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, Counter32, Unsigned32, MibIdentifier, IpAddress, Counter64, Bits, ModuleIdentity, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "Counter32", "Unsigned32", "MibIdentifier", "IpAddress", "Counter64", "Bits", "ModuleIdentity", "TimeTicks", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ctDL = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1))
ctDLForceOnBoot = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDLForceOnBoot.setStatus('obsolete')
ctDLCommitRAMToFlash = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDLCommitRAMToFlash.setStatus('obsolete')
ctDLInitiateColdBoot = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDLInitiateColdBoot.setStatus('mandatory')
ctDLTFTPRequestHost = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDLTFTPRequestHost.setStatus('obsolete')
ctDLTFTPRequest = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDLTFTPRequest.setStatus('obsolete')
ctDLLastImageFilename = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLLastImageFilename.setStatus('mandatory')
ctDLLastServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLLastServerIPAddress.setStatus('mandatory')
ctDLFlashSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLFlashSize.setStatus('obsolete')
ctDLFlashCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLFlashCount.setStatus('obsolete')
ctDLFirmwareBase = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLFirmwareBase.setStatus('obsolete')
ctDLFirmwareTop = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLFirmwareTop.setStatus('obsolete')
ctDLFirmwareStart = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLFirmwareStart.setStatus('obsolete')
ctDLBootRev = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLBootRev.setStatus('obsolete')
ctDLForceBootp = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDLForceBootp.setStatus('obsolete')
ctDLServerName = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 15), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDLServerName.setStatus('obsolete')
ctDLOnLineDownLoad = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("normalOperation", 1), ("forceDownLoad", 2), ("forceDownLoadReset", 3), ("downLoadConfiguration", 4), ("upLoadConfiguration", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDLOnLineDownLoad.setStatus('mandatory')
ctDLOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("normalOperation", 3), ("downLoadActive", 4), ("downLoadCompleteError", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLOperStatus.setStatus('mandatory')
ctDLNetAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 18), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDLNetAddress.setStatus('mandatory')
ctDLFileName = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDLFileName.setStatus('mandatory')
ctDLErrorString = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLErrorString.setStatus('mandatory')
ctDLTftpServerGatewayIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDLTftpServerGatewayIPAddress.setStatus('obsolete')
ctDLBlockCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLBlockCount.setStatus('mandatory')
ctDLBootPartitionStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 8, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("good", 1), ("bad", 2), ("inProgress", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDLBootPartitionStatus.setStatus('obsolete')
mibBuilder.exportSymbols("CTRON-DOWNLOAD-MIB", ctDLFlashSize=ctDLFlashSize, ctDLServerName=ctDLServerName, ctDLBlockCount=ctDLBlockCount, ctDLFlashCount=ctDLFlashCount, ctDLTftpServerGatewayIPAddress=ctDLTftpServerGatewayIPAddress, ctDLErrorString=ctDLErrorString, ctDLBootPartitionStatus=ctDLBootPartitionStatus, ctDLFirmwareBase=ctDLFirmwareBase, ctDLForceOnBoot=ctDLForceOnBoot, ctDLBootRev=ctDLBootRev, ctDLTFTPRequestHost=ctDLTFTPRequestHost, ctDLFirmwareStart=ctDLFirmwareStart, ctDLOperStatus=ctDLOperStatus, ctDLForceBootp=ctDLForceBootp, ctDLInitiateColdBoot=ctDLInitiateColdBoot, ctDLNetAddress=ctDLNetAddress, ctDLCommitRAMToFlash=ctDLCommitRAMToFlash, ctDLLastServerIPAddress=ctDLLastServerIPAddress, ctDLOnLineDownLoad=ctDLOnLineDownLoad, ctDL=ctDL, ctDLLastImageFilename=ctDLLastImageFilename, ctDLFileName=ctDLFileName, ctDLFirmwareTop=ctDLFirmwareTop, ctDLTFTPRequest=ctDLTFTPRequest)
