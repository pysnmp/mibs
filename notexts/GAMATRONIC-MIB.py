#
# PySNMP MIB module GAMATRONIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/gamatronic/GAMATRONIC-MIB
# Produced by pysmi-1.1.12 at Mon Oct 28 02:09:54 2024
# On host fv-az1014-591 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, Counter64, Integer32, Unsigned32, ModuleIdentity, NotificationType, Bits, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter32, TimeTicks, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Counter64", "Integer32", "Unsigned32", "ModuleIdentity", "NotificationType", "Bits", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter32", "TimeTicks", "IpAddress", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
gamatronicLTD = ModuleIdentity((1, 3, 6, 1, 4, 1, 6050))
if mibBuilder.loadTexts: gamatronicLTD.setLastUpdated('0005150000Z')
if mibBuilder.loadTexts: gamatronicLTD.setOrganization(' GAMATRONIC Ltd.')
psMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1))
class PsAlarmSeverity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("critical", 1), ("major", 2), ("minor", 3), ("warning", 4))

psUnit = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 1))
psBattery = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 2))
psPSU = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 3))
psINU = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 4))
psACInput = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 5))
psDCOutput = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 6))
psContuctor = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 7))
psConfNominal = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 8))
psStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 9))
psStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 10))
psLog = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 11))
psTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 12))
psAlarmSet = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 13))
psSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 14))
psCommand = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 15))
psSeverityMap = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 16))
psSpare = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 17))
psDial = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 18))
psPowerPlus = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 19))
psBatteryNumber = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryNumber.setStatus('current')
psBatteryVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryVoltage.setStatus('current')
psBatteryTestStatus = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryTestStatus.setStatus('current')
psBatteryNominalCapacity = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatteryNominalCapacity.setStatus('current')
psBatteryActualCapacity = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryActualCapacity.setStatus('current')
psBatteryTestTime = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryTestTime.setStatus('current')
psBatteryLoadTime = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryLoadTime.setStatus('current')
psBatteryNearestTestMonth = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatteryNearestTestMonth.setStatus('current')
psBatteryNearestTestDay = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatteryNearestTestDay.setStatus('current')
psBatteryNearestTestHour = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatteryNearestTestHour.setStatus('current')
psBatteryNearestTestMinute = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatteryNearestTestMinute.setStatus('current')
psBatteryChargeMode = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("floating", 0), ("equalizes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryChargeMode.setStatus('current')
psBatteryEqRunTimeHours = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryEqRunTimeHours.setStatus('current')
psBatteryEqRunTimeMinutes = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryEqRunTimeMinutes.setStatus('current')
psBatterySpareRead1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatterySpareRead1.setStatus('current')
psBatterySpareRead2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatterySpareRead2.setStatus('current')
psBatterySpareRead3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatterySpareRead3.setStatus('current')
psBatterySpareWrite1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatterySpareWrite1.setStatus('current')
psBatterySpareWrite2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatterySpareWrite2.setStatus('current')
psBatterySpareWrite3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatterySpareWrite3.setStatus('current')
psBatterySpareWrite4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatterySpareWrite4.setStatus('current')
psBatterySpareWrite5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatterySpareWrite5.setStatus('current')
psBatterySpareWrite6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatterySpareWrite6.setStatus('current')
psBatterySpareWrite7 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatterySpareWrite7.setStatus('current')
psBatterySpareWrite8 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 2, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatterySpareWrite8.setStatus('current')
psBatteryTable = MibTable((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26), )
if mibBuilder.loadTexts: psBatteryTable.setStatus('current')
psBatteryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26, 1), ).setIndexNames((0, "GAMATRONIC-MIB", "psBatteryIndex"))
if mibBuilder.loadTexts: psBatteryEntry.setStatus('current')
psBatteryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryIndex.setStatus('current')
psBatteryCurrentDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryCurrentDirection.setStatus('current')
psBatteryCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryCurrent.setStatus('current')
psBatteryTemperatureSign = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("positive", 0), ("negative", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryTemperatureSign.setStatus('current')
psBatteryTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryTemperature.setStatus('current')
psBatteryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("passed", 0), ("failed", 1), ("low", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryStatus.setStatus('current')
psBatteryFuseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBatteryFuseStatus.setStatus('current')
psBatteryInstalationYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatteryInstalationYear.setStatus('current')
psBatteryInstalationMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatteryInstalationMonth.setStatus('current')
psBatteryInstalationDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 2, 26, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBatteryInstalationDay.setStatus('current')
psPSUNumber = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUNumber.setStatus('current')
psPSUTable = MibTable((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2), )
if mibBuilder.loadTexts: psPSUTable.setStatus('current')
psPSUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1), ).setIndexNames((0, "GAMATRONIC-MIB", "psPSUIndex"))
if mibBuilder.loadTexts: psPSUEntry.setStatus('current')
psPSUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUIndex.setStatus('current')
psPSUVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUVoltage.setStatus('current')
psPSUCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUCurrent.setStatus('current')
psPSUTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUTemperature.setStatus('current')
psPSUActivity = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psPSUActivity.setStatus('current')
psPSUPsType = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUPsType.setStatus('current')
psPSUStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUStatus.setStatus('current')
psPSUPsOK = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUPsOK.setStatus('current')
psPSUNotRespond = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUNotRespond.setStatus('current')
psPSUNOOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUNOOut.setStatus('current')
psPSUPSpareBit = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUPSpareBit.setStatus('current')
psPSUBadSharing = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUBadSharing.setStatus('current')
psPSUReserve1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUReserve1.setStatus('current')
psPSUReserve2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUReserve2.setStatus('current')
psPSUReserve3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUReserve3.setStatus('current')
psPSUShutInstruction = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUShutInstruction.setStatus('current')
psPSUTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notintest", 0), ("inprogress", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUTestStatus.setStatus('current')
psPSUCurrentLimitDecreased = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUCurrentLimitDecreased.setStatus('current')
psPSUACInputOK = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUACInputOK.setStatus('current')
psPSUSelfTestPass = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUSelfTestPass.setStatus('current')
psPSUCurrentLimitExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUCurrentLimitExceed.setStatus('current')
psPSUShutHighTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUShutHighTemp.setStatus('current')
psPSUShutHighVolt = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUShutHighVolt.setStatus('current')
psPSURemoteMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSURemoteMode.setStatus('current')
psPSUFloatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUFloatingMode.setStatus('current')
psPSUEqualizeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUEqualizeMode.setStatus('current')
psPSUFanStataus = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUFanStataus.setStatus('current')
psPSUIndication = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 3, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("pscurrent", 0), ("voltage", 1), ("temperature", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPSUIndication.setStatus('current')
psINUNumber = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUNumber.setStatus('current')
psINUTable = MibTable((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2), )
if mibBuilder.loadTexts: psINUTable.setStatus('current')
psINUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1), ).setIndexNames((0, "GAMATRONIC-MIB", "psINUIndex"))
if mibBuilder.loadTexts: psINUEntry.setStatus('current')
psINUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUIndex.setStatus('current')
psINUVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUVoltage.setStatus('current')
psINUCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUCurrent.setStatus('current')
psINUTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUTemperature.setStatus('current')
psINUActivity = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psINUActivity.setStatus('current')
psINUPsType = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUPsType.setStatus('current')
psINUStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUStatus.setStatus('current')
psINUPsOK = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUPsOK.setStatus('current')
psINUNotRespond = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUNotRespond.setStatus('current')
psINUNOOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUNOOut.setStatus('current')
psINUPSpareBit = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUPSpareBit.setStatus('current')
psINUBadSharing = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUBadSharing.setStatus('current')
psINUReserve1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUReserve1.setStatus('current')
psINUReserve2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUReserve2.setStatus('current')
psINUReserve3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUReserve3.setStatus('current')
psINUShutInstruction = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUShutInstruction.setStatus('current')
psINUReserve7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUReserve7.setStatus('current')
psINUCurrentLimitDecreased = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUCurrentLimitDecreased.setStatus('current')
psINUReserve8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUReserve8.setStatus('current')
psINUSelfTestPass = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUSelfTestPass.setStatus('current')
psINUCurrentLimitExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUCurrentLimitExceed.setStatus('current')
psINUShutHighTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUShutHighTemp.setStatus('current')
psINUShutHighVolt = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUShutHighVolt.setStatus('current')
psINURemoteMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINURemoteMode.setStatus('current')
psINUReserve9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUReserve9.setStatus('current')
psINUReserve10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUReserve10.setStatus('current')
psINUFanStataus = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("bad", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUFanStataus.setStatus('current')
psINUIndication = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 4, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("pscurrent", 0), ("voltage", 1), ("temperature", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psINUIndication.setStatus('current')
psACInputVoltage1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputVoltage1.setStatus('current')
psACInputVoltage2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputVoltage2.setStatus('current')
psACInputVoltage3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputVoltage3.setStatus('current')
psACInputCurrent1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputCurrent1.setStatus('current')
psACInputCurrent2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputCurrent2.setStatus('current')
psACInputCurrent3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputCurrent3.setStatus('current')
psACInputFrequency = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputFrequency.setStatus('current')
psACInputACStatus = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputACStatus.setStatus('current')
psACInputSurgeStatus = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputSurgeStatus.setStatus('current')
psACInputSpareInp0 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputSpareInp0.setStatus('current')
psACInputSpareInp1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputSpareInp1.setStatus('current')
psACInputSpareInp2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputSpareInp2.setStatus('current')
psACInputSpareInp3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputSpareInp3.setStatus('current')
psACInputSpareInp4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputSpareInp4.setStatus('current')
psACInputSpareInp5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputSpareInp5.setStatus('current')
psACInputSpareInp6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 5, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psACInputSpareInp6.setStatus('current')
psDCoutputVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputVoltage.setStatus('current')
psDCoutputCurrent1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputCurrent1.setStatus('current')
psDCoutputCurrent2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputCurrent2.setStatus('current')
psDCoutputCurrent3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputCurrent3.setStatus('current')
psDCoutputCurrent4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputCurrent4.setStatus('current')
psDCoutputCurrent5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputCurrent5.setStatus('current')
psDCoutputDCStatus = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ok", 0), ("overvoltage", 1), ("undervoltage", 2), ("disconnected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputDCStatus.setStatus('current')
psDCoutputSurgeStatus = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ok", 0), ("notok", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputSurgeStatus.setStatus('current')
psDCoutputInvertorVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputInvertorVoltage.setStatus('current')
psDCOutputDCOutput = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ok", 0), ("overvoltage", 1), ("undervoltage", 2), ("disconnect", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCOutputDCOutput.setStatus('current')
psDCoutputSpare1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputSpare1.setStatus('current')
psDCoutputSpare2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputSpare2.setStatus('current')
psDCoutputSpare3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputSpare3.setStatus('current')
psDCoutputSpare4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputSpare4.setStatus('current')
psDCoutputSpare5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputSpare5.setStatus('current')
psDCoutputSpare6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 6, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDCoutputSpare6.setStatus('current')
psContuctor1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("close", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psContuctor1.setStatus('current')
psContuctor2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("close", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psContuctor2.setStatus('current')
psContuctor3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("close", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psContuctor3.setStatus('current')
psContuctor4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("close", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psContuctor4.setStatus('current')
psContuctor5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("close", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psContuctor5.setStatus('current')
psContuctor6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("close", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psContuctor6.setStatus('current')
psContuctor7 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("close", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psContuctor7.setStatus('current')
psContuctor8 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("close", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psContuctor8.setStatus('current')
psContuctor9 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("close", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psContuctor9.setStatus('current')
psContuctor10 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("close", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psContuctor10.setStatus('current')
psDryContactTable = MibTable((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11), )
if mibBuilder.loadTexts: psDryContactTable.setStatus('current')
psDryContactorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1), ).setIndexNames((0, "GAMATRONIC-MIB", "psDryContactorIndex"))
if mibBuilder.loadTexts: psDryContactorEntry.setStatus('current')
psDryContactorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDryContactorIndex.setStatus('current')
psDryContactorAlarm1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm1.setStatus('current')
psDryContactorAlarm2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm2.setStatus('current')
psDryContactorAlarm3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm3.setStatus('current')
psDryContactorAlarm4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm4.setStatus('current')
psDryContactorAlarm5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm5.setStatus('current')
psDryContactorAlarm6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm6.setStatus('current')
psDryContactorAlarm7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm7.setStatus('current')
psDryContactorAlarm8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm8.setStatus('current')
psDryContactorAlarm9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm9.setStatus('current')
psDryContactorAlarm10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm10.setStatus('current')
psDryContactorAlarm11 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm11.setStatus('current')
psDryContactorAlarm12 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm12.setStatus('current')
psDryContactorAlarm13 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm13.setStatus('current')
psDryContactorAlarm14 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm14.setStatus('current')
psDryContactorAlarm15 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm15.setStatus('current')
psDryContactorAlarm16 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm16.setStatus('current')
psDryContactorAlarm17 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm17.setStatus('current')
psDryContactorAlarm18 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm18.setStatus('current')
psDryContactorAlarm19 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm19.setStatus('current')
psDryContactorAlarm20 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm20.setStatus('current')
psDryContactorAlarm21 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm21.setStatus('current')
psDryContactorAlarm22 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm22.setStatus('current')
psDryContactorAlarm23 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm23.setStatus('current')
psDryContactorAlarm24 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm24.setStatus('current')
psDryContactorAlarm25 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm25.setStatus('current')
psDryContactorAlarm26 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm26.setStatus('current')
psDryContactorAlarm27 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm27.setStatus('current')
psDryContactorAlarm28 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm28.setStatus('current')
psDryContactorAlarm29 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm29.setStatus('current')
psDryContactorAlarm30 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm30.setStatus('current')
psDryContactorAlarm31 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm31.setStatus('current')
psDryContactorAlarm32 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 11, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactorAlarm32.setStatus('current')
psDryContactStatus = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDryContactStatus.setStatus('current')
psDryContact1Table = MibTable((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13), )
if mibBuilder.loadTexts: psDryContact1Table.setStatus('current')
psDryContactor1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1), ).setIndexNames((0, "GAMATRONIC-MIB", "psDryContactor1Index"))
if mibBuilder.loadTexts: psDryContactor1Entry.setStatus('current')
psDryContactor1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDryContactor1Index.setStatus('current')
psDryContactor1Alarm1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm1.setStatus('current')
psDryContactor1Alarm2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm2.setStatus('current')
psDryContactor1Alarm3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm3.setStatus('current')
psDryContactor1Alarm4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm4.setStatus('current')
psDryContactor1Alarm5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm5.setStatus('current')
psDryContactor1Alarm6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm6.setStatus('current')
psDryContactor1Alarm7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm7.setStatus('current')
psDryContactor1Alarm8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm8.setStatus('current')
psDryContactor1Alarm9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm9.setStatus('current')
psDryContactor1Alarm10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm10.setStatus('current')
psDryContactor1Alarm11 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm11.setStatus('current')
psDryContactor1Alarm12 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm12.setStatus('current')
psDryContactor1Alarm13 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm13.setStatus('current')
psDryContactor1Alarm14 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm14.setStatus('current')
psDryContactor1Alarm15 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm15.setStatus('current')
psDryContactor1Alarm16 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm16.setStatus('current')
psDryContactor1Alarm17 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm17.setStatus('current')
psDryContactor1Alarm18 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm18.setStatus('current')
psDryContactor1Alarm19 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm19.setStatus('current')
psDryContactor1Alarm20 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm20.setStatus('current')
psDryContactor1Alarm21 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm21.setStatus('current')
psDryContactor1Alarm22 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm22.setStatus('current')
psDryContactor1Alarm23 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm23.setStatus('current')
psDryContactor1Alarm24 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm24.setStatus('current')
psDryContactor1Alarm25 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm25.setStatus('current')
psDryContactor1Alarm26 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm26.setStatus('current')
psDryContactor1Alarm27 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm27.setStatus('current')
psDryContactor1Alarm28 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm28.setStatus('current')
psDryContactor1Alarm29 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm29.setStatus('current')
psDryContactor1Alarm30 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm30.setStatus('current')
psDryContactor1Alarm31 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm31.setStatus('current')
psDryContactor1Alarm32 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 13, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor1Alarm32.setStatus('current')
psDryContact1Status = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDryContact1Status.setStatus('current')
psDryContact2Table = MibTable((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15), )
if mibBuilder.loadTexts: psDryContact2Table.setStatus('current')
psDryContactor2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1), ).setIndexNames((0, "GAMATRONIC-MIB", "psDryContactor2Index"))
if mibBuilder.loadTexts: psDryContactor2Entry.setStatus('current')
psDryContactor2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDryContactor2Index.setStatus('current')
psDryContactor2Alarm1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm1.setStatus('current')
psDryContactor2Alarm2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm2.setStatus('current')
psDryContactor2Alarm3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm3.setStatus('current')
psDryContactor2Alarm4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm4.setStatus('current')
psDryContactor2Alarm5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm5.setStatus('current')
psDryContactor2Alarm6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm6.setStatus('current')
psDryContactor2Alarm7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm7.setStatus('current')
psDryContactor2Alarm8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm8.setStatus('current')
psDryContactor2Alarm9 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm9.setStatus('current')
psDryContactor2Alarm10 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm10.setStatus('current')
psDryContactor2Alarm11 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm11.setStatus('current')
psDryContactor2Alarm12 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm12.setStatus('current')
psDryContactor2Alarm13 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm13.setStatus('current')
psDryContactor2Alarm14 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm14.setStatus('current')
psDryContactor2Alarm15 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm15.setStatus('current')
psDryContactor2Alarm16 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm16.setStatus('current')
psDryContactor2Alarm17 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm17.setStatus('current')
psDryContactor2Alarm18 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm18.setStatus('current')
psDryContactor2Alarm19 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm19.setStatus('current')
psDryContactor2Alarm20 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm20.setStatus('current')
psDryContactor2Alarm21 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm21.setStatus('current')
psDryContactor2Alarm22 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm22.setStatus('current')
psDryContactor2Alarm23 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm23.setStatus('current')
psDryContactor2Alarm24 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm24.setStatus('current')
psDryContactor2Alarm25 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm25.setStatus('current')
psDryContactor2Alarm26 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm26.setStatus('current')
psDryContactor2Alarm27 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm27.setStatus('current')
psDryContactor2Alarm28 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm28.setStatus('current')
psDryContactor2Alarm29 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm29.setStatus('current')
psDryContactor2Alarm30 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm30.setStatus('current')
psDryContactor2Alarm31 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm31.setStatus('current')
psDryContactor2Alarm32 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 7, 15, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("set", 1), ("notset", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDryContactor2Alarm32.setStatus('current')
psDryContact2Status = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 7, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDryContact2Status.setStatus('current')
psSeverityMapTable = MibTable((1, 3, 6, 1, 4, 1, 6050, 1, 16, 1), )
if mibBuilder.loadTexts: psSeverityMapTable.setStatus('current')
psSeverityMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6050, 1, 16, 1, 1), ).setIndexNames((0, "GAMATRONIC-MIB", "psSeverityMapIndex"))
if mibBuilder.loadTexts: psSeverityMapEntry.setStatus('current')
psSeverityMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 16, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSeverityMapIndex.setStatus('current')
psSeverityMapAlarm1to32 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 16, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSeverityMapAlarm1to32.setStatus('current')
psSeverityMapAlarm33to64 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 16, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSeverityMapAlarm33to64.setStatus('current')
psSeverityMapAlarm65to96 = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 16, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSeverityMapAlarm65to96.setStatus('current')
psConfEnableCurrentLimit = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEnableCurrentLimit.setStatus('current')
psConfEnablePeriodicEqualize = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEnablePeriodicEqualize.setStatus('current')
psConfGHighTempAlarm = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfGHighTempAlarm.setStatus('current')
psConfLowTempAlarmSign = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("positive", 0), ("negative", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfLowTempAlarmSign.setStatus('current')
psConfLowTempAlarm = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfLowTempAlarm.setStatus('current')
psConfTemperatureCoefficient = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfTemperatureCoefficient.setStatus('current')
psConfNumOfInvertors = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNumOfInvertors.setStatus('current')
psConfNumOfRectifiers = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNumOfRectifiers.setStatus('current')
psConfACHigh = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfACHigh.setStatus('current')
psConfACLow = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfACLow.setStatus('current')
psConfCurrentLimit = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfCurrentLimit.setStatus('current')
psConfHIA = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfHIA.setStatus('current')
psConfBDOC = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfBDOC.setStatus('current')
psConfBatteryNominalCapacity = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfBatteryNominalCapacity.setStatus('current')
psConfEqualStopTime = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEqualStopTime.setStatus('current')
psConfEqualStopCurrent = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEqualStopCurrent.setStatus('current')
psConfEqualPeriod = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEqualPeriod.setStatus('current')
psConfEqualStartCurrent = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEqualStartCurrent.setStatus('current')
psConfMajorLowVoltage1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfMajorLowVoltage1.setStatus('current')
psConfMajorLowVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfMajorLowVoltage.setStatus('current')
psConfMinorLowVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfMinorLowVoltage.setStatus('current')
psConfMinorHighVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfMinorHighVoltage.setStatus('current')
psConfMajorHighVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfMajorHighVoltage.setStatus('current')
psConfFloatingVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfFloatingVoltage.setStatus('current')
psConfEqualizingVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEqualizingVoltage.setStatus('current')
psConfNumberOfBattery = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNumberOfBattery.setStatus('current')
psConfEnableTempComp = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEnableTempComp.setStatus('current')
psConfNumberOfLVD = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNumberOfLVD.setStatus('current')
psConfEqMajorLowVoltageLV1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEqMajorLowVoltageLV1.setStatus('current')
psConfEqMajorLowVoltageLv = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEqMajorLowVoltageLv.setStatus('current')
psConfEqMinorLowVoltageLV = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 31), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEqMinorLowVoltageLV.setStatus('current')
psConfEqMinorHighVoltageHV = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEqMinorHighVoltageHV.setStatus('current')
psConfEqMajorHighVoltageHV = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfEqMajorHighVoltageHV.setStatus('current')
psConfInvertorVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfInvertorVoltage.setStatus('current')
psConfInvertorHighVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfInvertorHighVoltage.setStatus('current')
psConfInvertorLowVoltage = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfInvertorLowVoltage.setStatus('current')
psConfLVDDisconnectTime = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 37), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfLVDDisconnectTime.setStatus('current')
psConfNomSpare0 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 38), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNomSpare0.setStatus('current')
psConfNomSpare1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNomSpare1.setStatus('current')
psConfNomSpare2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 40), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNomSpare2.setStatus('current')
psConfNomSpare3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 41), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNomSpare3.setStatus('current')
psConfNomSpare4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 42), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNomSpare4.setStatus('current')
psConfNomSpare5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 43), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNomSpare5.setStatus('current')
psConfNomSpare6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 44), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNomSpare6.setStatus('current')
psConfNomSpare7 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 45), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNomSpare7.setStatus('current')
psConfNomSpare8 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNomSpare8.setStatus('current')
psConfNomSpare9 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 47), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNomSpare9.setStatus('current')
psConfNomSpare10 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 8, 48), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psConfNomSpare10.setStatus('current')
psStatusAlarm1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm1.setStatus('current')
psStatusAlarm2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm2.setStatus('current')
psStatusAlarm3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm3.setStatus('current')
psStatusAlarm4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm4.setStatus('current')
psStatusAlarm5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm5.setStatus('current')
psStatusAlarm6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm6.setStatus('current')
psStatusAlarm7 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm7.setStatus('current')
psStatusAlarm8 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm8.setStatus('current')
psStatusAlarm9 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm9.setStatus('current')
psStatusAlarm10 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm10.setStatus('current')
psStatusAlarm11 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm11.setStatus('current')
psStatusAlarm12 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm12.setStatus('current')
psStatusAlarm13 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm13.setStatus('current')
psStatusAlarm14 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm14.setStatus('current')
psStatusAlarm15 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm15.setStatus('current')
psStatusAlarm16 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm16.setStatus('current')
psStatusAlarm17 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm17.setStatus('current')
psStatusAlarm18 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm18.setStatus('current')
psStatusAlarm19 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm19.setStatus('current')
psStatusAlarm20 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm20.setStatus('current')
psStatusAlarm21 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm21.setStatus('current')
psStatusAlarm22 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm22.setStatus('current')
psStatusAlarm23 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm23.setStatus('current')
psStatusAlarm24 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm24.setStatus('current')
psStatusAlarm25 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm25.setStatus('current')
psStatusAlarm26 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm26.setStatus('current')
psStatusAlarm27 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm27.setStatus('current')
psStatusAlarm28 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm28.setStatus('current')
psStatusAlarm29 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm29.setStatus('current')
psStatusAlarm30 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm30.setStatus('current')
psStatusAlarm31 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm31.setStatus('current')
psStatusAlarm32 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm32.setStatus('current')
psStatusAlarm33 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm33.setStatus('current')
psStatusAlarm34 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm34.setStatus('current')
psStatusAlarm35 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm35.setStatus('current')
psStatusAlarm36 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm36.setStatus('current')
psStatusAlarm37 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm37.setStatus('current')
psStatusAlarm38 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm38.setStatus('current')
psStatusAlarm39 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm39.setStatus('current')
psStatusAlarm40 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm40.setStatus('current')
psStatusAlarm41 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm41.setStatus('current')
psStatusAlarm42 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm42.setStatus('current')
psStatusAlarm43 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm43.setStatus('current')
psStatusAlarm44 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm44.setStatus('current')
psStatusAlarm45 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm45.setStatus('current')
psStatusAlarm46 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm46.setStatus('current')
psStatusAlarm47 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm47.setStatus('current')
psStatusAlarm48 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm48.setStatus('current')
psStatusAlarm49 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm49.setStatus('current')
psStatusAlarm50 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm50.setStatus('current')
psStatusAlarm51 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm51.setStatus('current')
psStatusAlarm52 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm52.setStatus('current')
psStatusAlarm53 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm53.setStatus('current')
psStatusAlarm54 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm54.setStatus('current')
psStatusAlarm55 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm55.setStatus('current')
psStatusAlarm56 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm56.setStatus('current')
psStatusAlarm57 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm57.setStatus('current')
psStatusAlarm58 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm58.setStatus('current')
psStatusAlarm59 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm59.setStatus('current')
psStatusAlarm60 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm60.setStatus('current')
psStatusAlarm61 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm61.setStatus('current')
psStatusAlarm62 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm62.setStatus('current')
psStatusAlarm63 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm63.setStatus('current')
psStatusAlarm64 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm64.setStatus('current')
psStatusAlarm65 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm65.setStatus('current')
psStatusAlarm66 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm66.setStatus('current')
psStatusAlarm67 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm67.setStatus('current')
psStatusAlarm68 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm68.setStatus('current')
psStatusAlarm69 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm69.setStatus('current')
psStatusAlarm70 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm70.setStatus('current')
psStatusAlarm71 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm71.setStatus('current')
psStatusAlarm72 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 72), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm72.setStatus('current')
psStatusAlarm73 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm73.setStatus('current')
psStatusAlarm74 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm74.setStatus('current')
psStatusAlarm75 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm75.setStatus('current')
psStatusAlarm76 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm76.setStatus('current')
psStatusAlarm77 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 77), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm77.setStatus('current')
psStatusAlarm78 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm78.setStatus('current')
psStatusAlarm79 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 79), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm79.setStatus('current')
psStatusAlarm80 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm80.setStatus('current')
psStatusAlarm81 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 81), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm81.setStatus('current')
psStatusAlarm82 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm82.setStatus('current')
psStatusAlarm83 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm83.setStatus('current')
psStatusAlarm84 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 84), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm84.setStatus('current')
psStatusAlarm85 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 85), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm85.setStatus('current')
psStatusAlarm86 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 86), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm86.setStatus('current')
psStatusAlarm87 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 87), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm87.setStatus('current')
psStatusAlarm88 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 88), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm88.setStatus('current')
psStatusAlarm89 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm89.setStatus('current')
psStatusAlarm90 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm90.setStatus('current')
psStatusAlarm91 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 91), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm91.setStatus('current')
psStatusAlarm92 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 92), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm92.setStatus('current')
psStatusAlarm93 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 93), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm93.setStatus('current')
psStatusAlarm94 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 94), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm94.setStatus('current')
psStatusAlarm95 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 95), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm95.setStatus('current')
psStatusAlarm96 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 96), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 3, 2, 1))).clone(namedValues=NamedValues(("notactive", 0), ("warning", 4), ("minor", 3), ("major", 2), ("critical", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psStatusAlarm96.setStatus('current')
psStatusAlarmStruct = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 97), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psStatusAlarmStruct.setStatus('current')
psStatusAlarmStruct1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 98), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psStatusAlarmStruct1.setStatus('current')
psStatusAlarmStruct2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 9, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psStatusAlarmStruct2.setStatus('current')
psUnitSysName = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psUnitSysName.setStatus('current')
psUnitManufacture = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psUnitManufacture.setStatus('current')
psUnitBatteryType = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psUnitBatteryType.setStatus('current')
psUnitPSType = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psUnitPSType.setStatus('current')
psUnitControllerType = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psUnitControllerType.setStatus('current')
psUnitSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psUnitSoftwareVersion.setStatus('current')
psUnitComProtocolVersion = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psUnitComProtocolVersion.setStatus('current')
psUnitSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psUnitSerialNumber.setStatus('current')
psUnitRTCDay = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psUnitRTCDay.setStatus('current')
psUnitRTCMonth = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psUnitRTCMonth.setStatus('current')
psUnitRTCYear = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psUnitRTCYear.setStatus('current')
psUnitRTCHour = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psUnitRTCHour.setStatus('current')
psUnitRTCMinute = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psUnitRTCMinute.setStatus('current')
psUnitRTCSecond = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psUnitRTCSecond.setStatus('current')
psWorkingTime = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psWorkingTime.setStatus('current')
psScreenShot = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(160, 160)).setFixedLength(160)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psScreenShot.setStatus('current')
psSpareIde0 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpareIde0.setStatus('current')
psSpareIde1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpareIde1.setStatus('current')
psSpareIde2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpareIde2.setStatus('current')
psSpareIde3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpareIde3.setStatus('current')
psSpareIde4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpareIde4.setStatus('current')
psSpareIde5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpareIde5.setStatus('current')
psSpareIde6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpareIde6.setStatus('current')
psSpareIde7 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpareIde7.setStatus('current')
psHourlyTable = MibTable((1, 3, 6, 1, 4, 1, 6050, 1, 10, 1), )
if mibBuilder.loadTexts: psHourlyTable.setStatus('current')
psHourlyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6050, 1, 10, 1, 1), ).setIndexNames((0, "GAMATRONIC-MIB", "psHourlyIndex"))
if mibBuilder.loadTexts: psHourlyEntry.setStatus('current')
psHourlyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psHourlyIndex.setStatus('current')
psHourlyMaxVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psHourlyMaxVoltage.setStatus('current')
psHourlyMinVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psHourlyMinVoltage.setStatus('current')
psHourlyAvrVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psHourlyAvrVoltage.setStatus('current')
psHourlyMinCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psHourlyMinCurrent.setStatus('current')
psHourlyMaxCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psHourlyMaxCurrent.setStatus('current')
psHourlyAvrCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psHourlyAvrCurrent.setStatus('current')
psHourlyEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psHourlyEndTime.setStatus('current')
psDailyTable = MibTable((1, 3, 6, 1, 4, 1, 6050, 1, 10, 2), )
if mibBuilder.loadTexts: psDailyTable.setStatus('current')
psDailyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6050, 1, 10, 2, 1), ).setIndexNames((0, "GAMATRONIC-MIB", "psDailyIndex"))
if mibBuilder.loadTexts: psDailyEntry.setStatus('current')
psDailyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDailyIndex.setStatus('current')
psDailyMaxVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDailyMaxVoltage.setStatus('current')
psDailyMinVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDailyMinVoltage.setStatus('current')
psDailyAvrVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDailyAvrVoltage.setStatus('current')
psDailyMinCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDailyMinCurrent.setStatus('current')
psDailyMaxCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDailyMaxCurrent.setStatus('current')
psDailyAvrCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDailyAvrCurrent.setStatus('current')
psDailyDayOfMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDailyDayOfMonth.setStatus('current')
psMonthlyTable = MibTable((1, 3, 6, 1, 4, 1, 6050, 1, 10, 3), )
if mibBuilder.loadTexts: psMonthlyTable.setStatus('current')
psMonthlyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6050, 1, 10, 3, 1), ).setIndexNames((0, "GAMATRONIC-MIB", "psMonthlyIndex"))
if mibBuilder.loadTexts: psMonthlyEntry.setStatus('current')
psMonthlyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMonthlyIndex.setStatus('current')
psMonthlyMaxVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMonthlyMaxVoltage.setStatus('current')
psMonthlyMinVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMonthlyMinVoltage.setStatus('current')
psMonthlyAvrVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMonthlyAvrVoltage.setStatus('current')
psMonthlyMinCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMonthlyMinCurrent.setStatus('current')
psMonthlyMaxCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMonthlyMaxCurrent.setStatus('current')
psMonthlyAvrCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMonthlyAvrCurrent.setStatus('current')
psMonthlyMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 10, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMonthlyMonth.setStatus('current')
psHourlyFirst = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 10, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psHourlyFirst.setStatus('current')
psHourlyLast = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 10, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psHourlyLast.setStatus('current')
psDailyFirst = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 10, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDailyFirst.setStatus('current')
psDailyLast = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 10, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDailyLast.setStatus('current')
psMonthlyFirst = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 10, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMonthlyFirst.setStatus('current')
psMonthlyLast = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 10, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMonthlyLast.setStatus('current')
psLogTable = MibTable((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1), )
if mibBuilder.loadTexts: psLogTable.setStatus('current')
psLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1), ).setIndexNames((0, "GAMATRONIC-MIB", "psLogIndex"))
if mibBuilder.loadTexts: psLogEntry.setStatus('current')
psLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogIndex.setStatus('current')
psLogDateYear = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogDateYear.setStatus('current')
psLogDateMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogDateMonth.setStatus('current')
psLogDateDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogDateDay.setStatus('current')
psLogDateHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogDateHour.setStatus('current')
psLogDateMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogDateMinute.setStatus('current')
psLogDateSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogDateSecond.setStatus('current')
psLogDCVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogDCVoltage.setStatus('current')
psLogStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogStatus.setStatus('current')
psLogAlarmCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogAlarmCode.setStatus('current')
psLogDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogDateTime.setStatus('current')
psLogGeneral = MibTableColumn((1, 3, 6, 1, 4, 1, 6050, 1, 11, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogGeneral.setStatus('current')
psLogFirst = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 11, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogFirst.setStatus('current')
psLogLast = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 11, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psLogLast.setStatus('current')
psTrapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 12, 1), PsAlarmSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psTrapSeverity.setStatus('current')
psTrapStatus = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psTrapStatus.setStatus('current')
psTrapActivation = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 12, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psTrapActivation.setStatus('current')
psAlarm1006 = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10))
psTrapPrefix1006 = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0))
psTrap1006ACLow = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 1)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006ACLow.setStatus('current')
psTrap1006Battery2TestFault = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 2)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006Battery2TestFault.setStatus('current')
psTrap1006Battery1TestFault = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 3)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006Battery1TestFault.setStatus('current')
psTrap1006LVD2Open = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 4)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006LVD2Open.setStatus('current')
psTrap1006LVD1Open = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 5)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006LVD1Open.setStatus('current')
psTrap1006AUXContactOpen = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 6)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006AUXContactOpen.setStatus('current')
psTrap1006AUXBreakerOpen = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 7)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006AUXBreakerOpen.setStatus('current')
psTrap1006BatteryBreakerOpen = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 8)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006BatteryBreakerOpen.setStatus('current')
psTrap1006LoadBreakerOpen = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 9)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006LoadBreakerOpen.setStatus('current')
psTrap1006DCLOWLow = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 10)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006DCLOWLow.setStatus('current')
psTrap1006Rectifier = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 11)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006Rectifier.setStatus('current')
psTrap1006OverTemptature = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 12)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006OverTemptature.setStatus('current')
psTrap1006LVDBypassOpen = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 13)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006LVDBypassOpen.setStatus('current')
psTrap1006DCHigh = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 14)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006DCHigh.setStatus('current')
psTrap1006DCLow = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 15)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006DCLow.setStatus('current')
psTrap1006ACHigh = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 10, 0, 16)).setObjects(("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrap1006ACHigh.setStatus('current')
psAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11))
psTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0))
psTrapRFAMAJ = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 1)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapRFAMAJ.setStatus('current')
psTrapRFAMIN = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 2)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapRFAMIN.setStatus('current')
psTrapACFAIL = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 3)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapACFAIL.setStatus('current')
psTrapLVDX2 = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 4)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapLVDX2.setStatus('current')
psTrapSYSOT = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 5)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapSYSOT.setStatus('current')
psTrapLVDX1 = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 6)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapLVDX1.setStatus('current')
psTrapCBOPEN = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 7)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapCBOPEN.setStatus('current')
psTrapEQHST = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 8)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapEQHST.setStatus('current')
psTrapBATTST = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 9)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapBATTST.setStatus('current')
psTrapINUBAD = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 10)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapINUBAD.setStatus('current')
psTrapUNIVPD = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 11)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapUNIVPD.setStatus('current')
psTrapIBADIN = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 12)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapIBADIN.setStatus('current')
psTrapRBADIN = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 13)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapRBADIN.setStatus('current')
psTrapSLFTST = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 14)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapSLFTST.setStatus('current')
psTrapFUSEBD = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 15)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapFUSEBD.setStatus('current')
psTrapLOADHI = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 16)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapLOADHI.setStatus('current')
psTrapSURGBD = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 17)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapSURGBD.setStatus('current')
psTrapEQLONG = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 18)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapEQLONG.setStatus('current')
psTrapFUSE24 = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 19)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapFUSE24.setStatus('current')
psTrapFUSE48 = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 20)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapFUSE48.setStatus('current')
psTrapBYPS2 = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 21)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapBYPS2.setStatus('current')
psTrapBYPS1 = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 22)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapBYPS1.setStatus('current')
psTrapCB24CR = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 23)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapCB24CR.setStatus('current')
psTrapCB48CR = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 24)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapCB48CR.setStatus('current')
psTrapBATOT = NotificationType((1, 3, 6, 1, 4, 1, 6050, 1, 12, 11, 0, 25)).setObjects(("GAMATRONIC-MIB", "psTrapSeverity"), ("GAMATRONIC-MIB", "psTrapStatus"))
if mibBuilder.loadTexts: psTrapBATOT.setStatus('current')
psAlarmSet1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet1.setStatus('current')
psAlarmSet2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet2.setStatus('current')
psAlarmSet3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet3.setStatus('current')
psAlarmSet4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet4.setStatus('current')
psAlarmSet5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet5.setStatus('current')
psAlarmSet6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet6.setStatus('current')
psAlarmSet7 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet7.setStatus('current')
psAlarmSet8 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet8.setStatus('current')
psAlarmSet9 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet9.setStatus('current')
psAlarmSet10 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet10.setStatus('current')
psAlarmSet11 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet11.setStatus('current')
psAlarmSet12 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet12.setStatus('current')
psAlarmSet13 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet13.setStatus('current')
psAlarmSet14 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet14.setStatus('current')
psAlarmSet15 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet15.setStatus('current')
psAlarmSet16 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet16.setStatus('current')
psAlarmSet17 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet17.setStatus('current')
psAlarmSet18 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet18.setStatus('current')
psAlarmSet19 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet19.setStatus('current')
psAlarmSet20 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet20.setStatus('current')
psAlarmSet21 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet21.setStatus('current')
psAlarmSet22 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet22.setStatus('current')
psAlarmSet23 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet23.setStatus('current')
psAlarmSet24 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet24.setStatus('current')
psAlarmSet25 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet25.setStatus('current')
psAlarmSet26 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet26.setStatus('current')
psAlarmSet27 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet27.setStatus('current')
psAlarmSet28 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet28.setStatus('current')
psAlarmSet29 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet29.setStatus('current')
psAlarmSet30 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet30.setStatus('current')
psAlarmSet31 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet31.setStatus('current')
psAlarmSet32 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet32.setStatus('current')
psAlarmSet33 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet33.setStatus('current')
psAlarmSet34 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet34.setStatus('current')
psAlarmSet35 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet35.setStatus('current')
psAlarmSet36 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet36.setStatus('current')
psAlarmSet37 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet37.setStatus('current')
psAlarmSet38 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet38.setStatus('current')
psAlarmSet39 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet39.setStatus('current')
psAlarmSet40 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet40.setStatus('current')
psAlarmSet41 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet41.setStatus('current')
psAlarmSet42 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet42.setStatus('current')
psAlarmSet43 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet43.setStatus('current')
psAlarmSet44 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet44.setStatus('current')
psAlarmSet45 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet45.setStatus('current')
psAlarmSet46 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet46.setStatus('current')
psAlarmSet47 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet47.setStatus('current')
psAlarmSet48 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet48.setStatus('current')
psAlarmSet49 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet49.setStatus('current')
psAlarmSet50 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet50.setStatus('current')
psAlarmSet51 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet51.setStatus('current')
psAlarmSet52 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet52.setStatus('current')
psAlarmSet53 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet53.setStatus('current')
psAlarmSet54 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet54.setStatus('current')
psAlarmSet55 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet55.setStatus('current')
psAlarmSet56 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet56.setStatus('current')
psAlarmSet57 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet57.setStatus('current')
psAlarmSet58 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet58.setStatus('current')
psAlarmSet59 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet59.setStatus('current')
psAlarmSet60 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet60.setStatus('current')
psAlarmSet61 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet61.setStatus('current')
psAlarmSet62 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet62.setStatus('current')
psAlarmSet63 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet63.setStatus('current')
psAlarmSet64 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet64.setStatus('current')
psAlarmSet65 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet65.setStatus('current')
psAlarmSet66 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet66.setStatus('current')
psAlarmSet67 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet67.setStatus('current')
psAlarmSet68 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet68.setStatus('current')
psAlarmSet69 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet69.setStatus('current')
psAlarmSet70 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet70.setStatus('current')
psAlarmSet71 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet71.setStatus('current')
psAlarmSet72 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 72), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet72.setStatus('current')
psAlarmSet73 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet73.setStatus('current')
psAlarmSet74 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet74.setStatus('current')
psAlarmSet75 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet75.setStatus('current')
psAlarmSet76 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet76.setStatus('current')
psAlarmSet77 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 77), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet77.setStatus('current')
psAlarmSet78 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet78.setStatus('current')
psAlarmSet79 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 79), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet79.setStatus('current')
psAlarmSet80 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet80.setStatus('current')
psAlarmSet81 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 81), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet81.setStatus('current')
psAlarmSet82 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet82.setStatus('current')
psAlarmSet83 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet83.setStatus('current')
psAlarmSet84 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 84), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet84.setStatus('current')
psAlarmSet85 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 85), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet85.setStatus('current')
psAlarmSet86 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 86), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet86.setStatus('current')
psAlarmSet87 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 87), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet87.setStatus('current')
psAlarmSet88 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 88), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet88.setStatus('current')
psAlarmSet89 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet89.setStatus('current')
psAlarmSet90 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet90.setStatus('current')
psAlarmSet91 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 91), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet91.setStatus('current')
psAlarmSet92 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 92), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet92.setStatus('current')
psAlarmSet93 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 93), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet93.setStatus('current')
psAlarmSet94 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 94), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet94.setStatus('current')
psAlarmSet95 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 95), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet95.setStatus('current')
psAlarmSet96 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 13, 96), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psAlarmSet96.setStatus('current')
psSecurityComunity1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityComunity1.setStatus('current')
psSecurityComunity2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityComunity2.setStatus('current')
psSecurityComunity3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityComunity3.setStatus('current')
psSecurityPasswordComunity = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityPasswordComunity.setStatus('current')
psSecurityPasswordSet = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityPasswordSet.setStatus('current')
psSecuritySetGetPassword = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecuritySetGetPassword.setStatus('current')
psSecurityErasePassword = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("reset", 1), ("dont", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityErasePassword.setStatus('current')
psSecurityTrapIp1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityTrapIp1.setStatus('current')
psSecurityTrapIp2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityTrapIp2.setStatus('current')
psSecurityTrapIp3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityTrapIp3.setStatus('current')
psSecurityTrapIp4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityTrapIp4.setStatus('current')
psSecurityInterfaceIP = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityInterfaceIP.setStatus('current')
psSecurityInterfaceNetMask = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityInterfaceNetMask.setStatus('current')
psSecurityInterfaceGateWay = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityInterfaceGateWay.setStatus('current')
psSecurityInterfaceActivate = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 14, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("donot", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSecurityInterfaceActivate.setStatus('current')
psCommandGoFloat = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandGoFloat.setStatus('current')
psCommandGoEqualizing = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 72))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandGoEqualizing.setStatus('current')
psCommandDoSelfTest = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandDoSelfTest.setStatus('current')
psCommandRunFlash1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("activate", 1), ("dontactivate", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandRunFlash1.setStatus('current')
psCommandRunFlash2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("activate", 1), ("dontactivate", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandRunFlash2.setStatus('current')
psCommandTestBatteryAll = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandTestBatteryAll.setStatus('current')
psCommandDoBoot = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("do", 1), ("dont", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandDoBoot.setStatus('current')
psCommandLoadDefault = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("load", 1), ("dontload", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandLoadDefault.setStatus('current')
psCommandProgramNonActiveFlash = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("load", 1), ("dontload", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandProgramNonActiveFlash.setStatus('current')
psCommandNonActiveFlash = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandNonActiveFlash.setStatus('current')
psCommandNonActiveStatus = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandNonActiveStatus.setStatus('current')
psCommandDownLoadSoftware = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandDownLoadSoftware.setStatus('current')
psCommandDownLoadCheck = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("completeok", 0), ("inprogress", 1), ("notok1", 2), ("notok2", 3), ("notok3", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandDownLoadCheck.setStatus('current')
psCommandFileName = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandFileName.setStatus('current')
psCommandIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandIpAddress.setStatus('current')
psCommandAbortBatTest = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("abort", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandAbortBatTest.setStatus('current')
psCommandEraseTotalTime = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("erase", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandEraseTotalTime.setStatus('current')
psCommandAbortProgramFlash = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandAbortProgramFlash.setStatus('current')
psCommandUserDefine2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandUserDefine2.setStatus('current')
psCommandUserDefine3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandUserDefine3.setStatus('current')
psCommandUserDefine4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandUserDefine4.setStatus('current')
psCommandUserDefine5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandUserDefine5.setStatus('current')
psCommandFlash1Protect = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandFlash1Protect.setStatus('current')
psCommandFlash2Protect = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandFlash2Protect.setStatus('current')
psCommandFlashFix = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandFlashFix.setStatus('current')
psCommandFlashFixNumber = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandFlashFixNumber.setStatus('current')
psCommandRemoteTest = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandRemoteTest.setStatus('current')
psCommandControlerStatus = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandControlerStatus.setStatus('current')
psCommandFirmwareRev = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 29), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandFirmwareRev.setStatus('current')
psCommandFlash2SWRev = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 30), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandFlash2SWRev.setStatus('current')
psCommandFlash1SWRev = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandFlash1SWRev.setStatus('current')
psCommandMBXSWRev = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandMBXSWRev.setStatus('current')
psCommandLeds = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandLeds.setStatus('current')
psCommandProgramingInProcess = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandProgramingInProcess.setStatus('current')
psCommandLoadUserDefaults = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandLoadUserDefaults.setStatus('current')
psCommandStoreUserDefaults = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandStoreUserDefaults.setStatus('current')
psCommandLoadUserParameters = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandLoadUserParameters.setStatus('current')
psCommandStoreUserParameters = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandStoreUserParameters.setStatus('current')
psCommandDryInStatus = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandDryInStatus.setStatus('current')
psCommandSpareR0 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandSpareR0.setStatus('current')
psCommandSpareR1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandSpareR1.setStatus('current')
psCommandSpareR2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandSpareR2.setStatus('current')
psCommandSpareR3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandSpareR3.setStatus('current')
psCommandSpareR4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandSpareR4.setStatus('current')
psCommandSpareR5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandSpareR5.setStatus('current')
psCommandSpareR6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandSpareR6.setStatus('current')
psCommandSpareR7 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandSpareR7.setStatus('current')
psCommandSpareR8 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandSpareR8.setStatus('current')
psCommandSpareR9 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandSpareR9.setStatus('current')
psCommandSpareR10 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCommandSpareR10.setStatus('current')
psCommandSpareW0 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 51), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW0.setStatus('current')
psCommandSpareW1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 52), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW1.setStatus('current')
psCommandSpareW2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 53), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW2.setStatus('current')
psCommandSpareW3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 54), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW3.setStatus('current')
psCommandSpareW4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 55), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW4.setStatus('current')
psCommandSpareW5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 56), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW5.setStatus('current')
psCommandSpareW6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 57), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW6.setStatus('current')
psCommandSpareW7 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 58), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW7.setStatus('current')
psCommandSpareW8 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 59), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW8.setStatus('current')
psCommandSpareW9 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 60), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW9.setStatus('current')
psCommandSpareW10 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 61), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW10.setStatus('current')
psCommandSpareW11 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 62), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW11.setStatus('current')
psCommandSpareW12 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 15, 63), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psCommandSpareW12.setStatus('current')
psSpare1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare1.setStatus('current')
psSpare2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare2.setStatus('current')
psSpare3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare3.setStatus('current')
psSpare4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare4.setStatus('current')
psSpare5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare5.setStatus('current')
psSpare6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare6.setStatus('current')
psSpare7 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare7.setStatus('current')
psSpare8 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare8.setStatus('current')
psSpare9 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare9.setStatus('current')
psSpare10 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare10.setStatus('current')
psSpare11 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare11.setStatus('current')
psSpare12 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare12.setStatus('current')
psSpare13 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare13.setStatus('current')
psSpare14 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare14.setStatus('current')
psSpare15 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare15.setStatus('current')
psSpare16 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSpare16.setStatus('current')
psSpare17 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare17.setStatus('current')
psSpare18 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare18.setStatus('current')
psSpare19 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare19.setStatus('current')
psSpare20 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare20.setStatus('current')
psSpare21 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare21.setStatus('current')
psSpare22 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare22.setStatus('current')
psSpare23 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare23.setStatus('current')
psSpare24 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare24.setStatus('current')
psSpare25 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare25.setStatus('current')
psSpare26 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare26.setStatus('current')
psSpare27 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare27.setStatus('current')
psSpare28 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare28.setStatus('current')
psSpare29 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare29.setStatus('current')
psSpare30 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare30.setStatus('current')
psSpare31 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare31.setStatus('current')
psSpare32 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 17, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSpare32.setStatus('current')
psDialATDModemSetUp = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 18, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDialATDModemSetUp.setStatus('current')
psDialATDDialOut = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 18, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDialATDDialOut.setStatus('current')
psDialOutFlag = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 18, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nodialout", 0), ("dialout", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDialOutFlag.setStatus('current')
psDialOutNumRetries = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 18, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDialOutNumRetries.setStatus('current')
psDialOutNumRetriesActual = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 18, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psDialOutNumRetriesActual.setStatus('current')
psDialTimeOutBetweenRetries = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 18, 6), Integer32()).setUnits('10 Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDialTimeOutBetweenRetries.setStatus('current')
psDialTimeOutAfterLastSuccess = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 18, 7), Integer32()).setUnits('10 Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDialTimeOutAfterLastSuccess.setStatus('current')
psDialTimeOutAfterLastRetryFailed = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 18, 8), Integer32()).setUnits('Minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: psDialTimeOutAfterLastRetryFailed.setStatus('current')
psPowerPlus1 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus1.setStatus('current')
psPowerPlus2 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus2.setStatus('current')
psPowerPlus3 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus3.setStatus('current')
psPowerPlus4 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus4.setStatus('current')
psPowerPlus5 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus5.setStatus('current')
psPowerPlus6 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus6.setStatus('current')
psPowerPlus7 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus7.setStatus('current')
psPowerPlus8 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus8.setStatus('current')
psPowerPlus9 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus9.setStatus('current')
psPowerPlus10 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus10.setStatus('current')
psPowerPlus11 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus11.setStatus('current')
psPowerPlus12 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus12.setStatus('current')
psPowerPlus13 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus13.setStatus('current')
psPowerPlus14 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus14.setStatus('current')
psPowerPlus15 = MibScalar((1, 3, 6, 1, 4, 1, 6050, 1, 19, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPowerPlus15.setStatus('current')
mibBuilder.exportSymbols("GAMATRONIC-MIB", psDryContactorAlarm30=psDryContactorAlarm30, psUnitRTCHour=psUnitRTCHour, psLogDateMonth=psLogDateMonth, psDialTimeOutAfterLastSuccess=psDialTimeOutAfterLastSuccess, psSpareIde7=psSpareIde7, psINUReserve9=psINUReserve9, psDailyFirst=psDailyFirst, psCommandSpareR5=psCommandSpareR5, psDCoutputVoltage=psDCoutputVoltage, psBatteryNearestTestDay=psBatteryNearestTestDay, psDryContactorAlarm6=psDryContactorAlarm6, psStatusAlarm69=psStatusAlarm69, psDryContactorAlarm1=psDryContactorAlarm1, psConfNumOfRectifiers=psConfNumOfRectifiers, psPSUVoltage=psPSUVoltage, psConfEnablePeriodicEqualize=psConfEnablePeriodicEqualize, psMonthlyMaxVoltage=psMonthlyMaxVoltage, psBatteryCurrentDirection=psBatteryCurrentDirection, psAlarmSet55=psAlarmSet55, psStatusAlarm23=psStatusAlarm23, psCommandSpareW12=psCommandSpareW12, psPowerPlus10=psPowerPlus10, psAlarmSet27=psAlarmSet27, psConfNomSpare10=psConfNomSpare10, psStatusAlarm43=psStatusAlarm43, psDialOutNumRetries=psDialOutNumRetries, psCommandSpareR3=psCommandSpareR3, psDryContactor1Alarm16=psDryContactor1Alarm16, psConfACLow=psConfACLow, psAlarmSet85=psAlarmSet85, psTrap1006DCHigh=psTrap1006DCHigh, psCommandAbortProgramFlash=psCommandAbortProgramFlash, psBatteryInstalationDay=psBatteryInstalationDay, psAlarmSet8=psAlarmSet8, psBatteryIndex=psBatteryIndex, psAlarmSet60=psAlarmSet60, psCommandSpareR0=psCommandSpareR0, psStatusAlarm79=psStatusAlarm79, psAlarmSet19=psAlarmSet19, psStatusAlarm82=psStatusAlarm82, psLogLast=psLogLast, psStatusAlarm53=psStatusAlarm53, psSpare14=psSpare14, psDryContactTable=psDryContactTable, psAlarmSet96=psAlarmSet96, psConfBDOC=psConfBDOC, psAlarmSet69=psAlarmSet69, psINUShutInstruction=psINUShutInstruction, psDryContactor2Alarm6=psDryContactor2Alarm6, psDCoutputSpare3=psDCoutputSpare3, psDailyMinVoltage=psDailyMinVoltage, psINUCurrent=psINUCurrent, psHourlyIndex=psHourlyIndex, psMonthlyMinCurrent=psMonthlyMinCurrent, psINUCurrentLimitExceed=psINUCurrentLimitExceed, psStatusAlarm39=psStatusAlarm39, psTrapLVDX1=psTrapLVDX1, psDryContact2Status=psDryContact2Status, psDryContactor1Alarm18=psDryContactor1Alarm18, psCommandIpAddress=psCommandIpAddress, psSecurityTrapIp4=psSecurityTrapIp4, psContuctor6=psContuctor6, psContuctor10=psContuctor10, psINUFanStataus=psINUFanStataus, psDryContactor2Alarm3=psDryContactor2Alarm3, psDryContactor1Alarm32=psDryContactor1Alarm32, psLogDateDay=psLogDateDay, psDryContactor2Alarm5=psDryContactor2Alarm5, psLogFirst=psLogFirst, psDryContactor2Alarm21=psDryContactor2Alarm21, psStatusAlarm9=psStatusAlarm9, psStatusAlarm22=psStatusAlarm22, psTrap1006LoadBreakerOpen=psTrap1006LoadBreakerOpen, psAlarmSet28=psAlarmSet28, psCommandProgramNonActiveFlash=psCommandProgramNonActiveFlash, psAlarmSet11=psAlarmSet11, psContuctor3=psContuctor3, psStatusAlarm19=psStatusAlarm19, psACInputSpareInp4=psACInputSpareInp4, psCommandFirmwareRev=psCommandFirmwareRev, psMonthlyAvrCurrent=psMonthlyAvrCurrent, psStatusAlarm15=psStatusAlarm15, psSpare11=psSpare11, psTrapCBOPEN=psTrapCBOPEN, psINUShutHighVolt=psINUShutHighVolt, psStatusAlarm6=psStatusAlarm6, psCommandRemoteTest=psCommandRemoteTest, psCommandDryInStatus=psCommandDryInStatus, psAlarmSet47=psAlarmSet47, psDialTimeOutBetweenRetries=psDialTimeOutBetweenRetries, psAlarmSet48=psAlarmSet48, psSpare4=psSpare4, psDryContactor2Alarm9=psDryContactor2Alarm9, psAlarmSet9=psAlarmSet9, psAlarmSet90=psAlarmSet90, psConfEqualizingVoltage=psConfEqualizingVoltage, psTrap1006AUXBreakerOpen=psTrap1006AUXBreakerOpen, psHourlyMaxCurrent=psHourlyMaxCurrent, psSpare28=psSpare28, psStatusAlarm3=psStatusAlarm3, psDialOutFlag=psDialOutFlag, psDryContactorAlarm7=psDryContactorAlarm7, psPSUTestStatus=psPSUTestStatus, psDryContactor2Alarm18=psDryContactor2Alarm18, psDCoutputSpare6=psDCoutputSpare6, psDryContactor1Alarm26=psDryContactor1Alarm26, psDryContactor1Alarm29=psDryContactor1Alarm29, psAlarmSet72=psAlarmSet72, psAlarmSet16=psAlarmSet16, psINUCurrentLimitDecreased=psINUCurrentLimitDecreased, psBatterySpareWrite6=psBatterySpareWrite6, psDCOutputDCOutput=psDCOutputDCOutput, psContuctor7=psContuctor7, psStatusAlarm56=psStatusAlarm56, psHourlyEndTime=psHourlyEndTime, psDailyIndex=psDailyIndex, psDailyAvrVoltage=psDailyAvrVoltage, psCommandProgramingInProcess=psCommandProgramingInProcess, psSpare2=psSpare2, psSpare8=psSpare8, psPowerPlus6=psPowerPlus6, psSpare15=psSpare15, psSpare=psSpare, psSpareIde3=psSpareIde3, psConfMajorLowVoltage=psConfMajorLowVoltage, psConfTemperatureCoefficient=psConfTemperatureCoefficient, psStatusAlarm13=psStatusAlarm13, psAlarmSet32=psAlarmSet32, psINUReserve8=psINUReserve8, psAlarmSet62=psAlarmSet62, PsAlarmSeverity=PsAlarmSeverity, psBatterySpareWrite5=psBatterySpareWrite5, psINUNOOut=psINUNOOut, psDryContactStatus=psDryContactStatus, psBatterySpareWrite3=psBatterySpareWrite3, psAlarmSet43=psAlarmSet43, psPSUACInputOK=psPSUACInputOK, psStatusAlarm85=psStatusAlarm85, psCommandStoreUserParameters=psCommandStoreUserParameters, psAlarmSet51=psAlarmSet51, psBattery=psBattery, psStatusAlarm37=psStatusAlarm37, psDryContactorAlarm12=psDryContactorAlarm12, psConfEqualStartCurrent=psConfEqualStartCurrent, psDryContact1Status=psDryContact1Status, psTrap1006DCLow=psTrap1006DCLow, psStatusAlarm74=psStatusAlarm74, psSpare7=psSpare7, psSeverityMap=psSeverityMap, psINUEntry=psINUEntry, psTrap1006Rectifier=psTrap1006Rectifier, psUnitRTCSecond=psUnitRTCSecond, psCommandRunFlash2=psCommandRunFlash2, psDryContactor1Alarm20=psDryContactor1Alarm20, psDryContactor2Alarm15=psDryContactor2Alarm15, psSpare20=psSpare20, psSeverityMapTable=psSeverityMapTable, psDailyDayOfMonth=psDailyDayOfMonth, psDryContactor2Alarm13=psDryContactor2Alarm13, psTrap1006Battery2TestFault=psTrap1006Battery2TestFault, psStatusAlarm30=psStatusAlarm30, psStatusAlarm96=psStatusAlarm96, psCommandUserDefine2=psCommandUserDefine2, psDryContactorIndex=psDryContactorIndex, psDailyMinCurrent=psDailyMinCurrent, psTrap1006BatteryBreakerOpen=psTrap1006BatteryBreakerOpen, psSecurityComunity2=psSecurityComunity2, psConfNomSpare7=psConfNomSpare7, psDryContactor1Alarm15=psDryContactor1Alarm15, psBatteryEqRunTimeMinutes=psBatteryEqRunTimeMinutes, psMonthlyTable=psMonthlyTable, psConfMinorLowVoltage=psConfMinorLowVoltage, psConfMajorLowVoltage1=psConfMajorLowVoltage1, psDryContactorAlarm26=psDryContactorAlarm26, psUnitRTCYear=psUnitRTCYear, psStatusAlarm45=psStatusAlarm45, psConfNomSpare0=psConfNomSpare0, psSpareIde2=psSpareIde2, psCommandLeds=psCommandLeds, psCommandFlash1Protect=psCommandFlash1Protect, psAlarmSet71=psAlarmSet71, psDryContactor2Alarm31=psDryContactor2Alarm31, psTrapSLFTST=psTrapSLFTST, psDryContactor2Alarm23=psDryContactor2Alarm23, psAlarmSet3=psAlarmSet3, psAlarmSet36=psAlarmSet36, psCommandSpareR7=psCommandSpareR7, psDryContactor1Alarm30=psDryContactor1Alarm30, psAlarmSet81=psAlarmSet81, psStatusAlarm40=psStatusAlarm40, psAlarmSet53=psAlarmSet53, psDryContactorAlarm10=psDryContactorAlarm10, psAlarmSet63=psAlarmSet63, psDryContactor2Alarm27=psDryContactor2Alarm27, psAlarmSet61=psAlarmSet61, psDryContactor1Alarm5=psDryContactor1Alarm5, psSecurityTrapIp3=psSecurityTrapIp3, psStatusAlarm52=psStatusAlarm52, psCommandFlashFixNumber=psCommandFlashFixNumber, psAlarmSet38=psAlarmSet38, psINUReserve2=psINUReserve2, psSpare30=psSpare30, psStatusAlarmStruct1=psStatusAlarmStruct1, psCommandAbortBatTest=psCommandAbortBatTest, psStatusAlarm59=psStatusAlarm59, psConfLowTempAlarmSign=psConfLowTempAlarmSign, psPSUFloatingMode=psPSUFloatingMode, psTrap=psTrap, psSecurityPasswordSet=psSecurityPasswordSet, psSeverityMapIndex=psSeverityMapIndex, psMonthlyAvrVoltage=psMonthlyAvrVoltage, psAlarmSet35=psAlarmSet35, psConfNomSpare1=psConfNomSpare1, psStatusAlarm61=psStatusAlarm61, psACInput=psACInput, psSecuritySetGetPassword=psSecuritySetGetPassword, psUnitBatteryType=psUnitBatteryType, psDailyLast=psDailyLast, psContuctor=psContuctor, psConfBatteryNominalCapacity=psConfBatteryNominalCapacity, psCommandGoEqualizing=psCommandGoEqualizing, psAlarmSet=psAlarmSet, psStatusAlarm94=psStatusAlarm94, psDCOutput=psDCOutput, psDCoutputCurrent1=psDCoutputCurrent1, psCommandUserDefine5=psCommandUserDefine5, psTrap1006LVDBypassOpen=psTrap1006LVDBypassOpen, psINUPSpareBit=psINUPSpareBit, psConfEnableTempComp=psConfEnableTempComp, psDCoutputSpare4=psDCoutputSpare4, psDryContactorAlarm23=psDryContactorAlarm23, psMonthlyMinVoltage=psMonthlyMinVoltage, psAlarmSet14=psAlarmSet14, psMonthlyMonth=psMonthlyMonth, psAlarmSet70=psAlarmSet70, psConfHIA=psConfHIA, psUnitSerialNumber=psUnitSerialNumber, psDryContactor2Alarm22=psDryContactor2Alarm22, psSpare5=psSpare5, psStatusAlarm92=psStatusAlarm92, psPSUReserve2=psPSUReserve2, psStatusAlarm32=psStatusAlarm32, psDryContactor1Alarm14=psDryContactor1Alarm14, psAlarmSet7=psAlarmSet7, psACInputVoltage2=psACInputVoltage2, psStatusAlarm2=psStatusAlarm2, psStatusAlarm5=psStatusAlarm5, psAlarmSet52=psAlarmSet52, psCommandFileName=psCommandFileName, psBatterySpareWrite7=psBatterySpareWrite7, psPSUShutInstruction=psPSUShutInstruction, psDryContactor1Alarm28=psDryContactor1Alarm28, psCommandFlash1SWRev=psCommandFlash1SWRev, psDryContactor2Alarm14=psDryContactor2Alarm14)
mibBuilder.exportSymbols("GAMATRONIC-MIB", psDryContactorAlarm17=psDryContactorAlarm17, psDryContactorAlarm19=psDryContactorAlarm19, psINUNumber=psINUNumber, psDryContact1Table=psDryContact1Table, psCommandLoadUserParameters=psCommandLoadUserParameters, psStatusAlarm46=psStatusAlarm46, psStatusAlarm38=psStatusAlarm38, psStatusAlarm80=psStatusAlarm80, psDryContactorAlarm21=psDryContactorAlarm21, psHourlyMinVoltage=psHourlyMinVoltage, psDCoutputSpare1=psDCoutputSpare1, psDryContactor2Alarm30=psDryContactor2Alarm30, psDial=psDial, psPowerPlus9=psPowerPlus9, psConfEqualStopCurrent=psConfEqualStopCurrent, psStatusAlarm25=psStatusAlarm25, psSpare18=psSpare18, psStatusAlarm35=psStatusAlarm35, psCommandSpareW6=psCommandSpareW6, psConfNumberOfLVD=psConfNumberOfLVD, psSpare19=psSpare19, psDryContactorAlarm25=psDryContactorAlarm25, psDryContactorAlarm4=psDryContactorAlarm4, psSecurityComunity1=psSecurityComunity1, psSecurityInterfaceActivate=psSecurityInterfaceActivate, psAlarmSet82=psAlarmSet82, psINUTemperature=psINUTemperature, psStatusAlarm62=psStatusAlarm62, psAlarm1006=psAlarm1006, psAlarmSet2=psAlarmSet2, psBatteryTestTime=psBatteryTestTime, psDryContactorAlarm22=psDryContactorAlarm22, psACInputVoltage1=psACInputVoltage1, psScreenShot=psScreenShot, psAlarmSet34=psAlarmSet34, psPowerPlus14=psPowerPlus14, psDryContactor2Alarm4=psDryContactor2Alarm4, psAlarmSet88=psAlarmSet88, psSpareIde1=psSpareIde1, gamatronicLTD=gamatronicLTD, psLogStatus=psLogStatus, psTrapRBADIN=psTrapRBADIN, psAlarmSet41=psAlarmSet41, psLog=psLog, psDryContactor2Alarm10=psDryContactor2Alarm10, psContuctor5=psContuctor5, psConfNomSpare6=psConfNomSpare6, psTrapSURGBD=psTrapSURGBD, psAlarmSet65=psAlarmSet65, psBatteryTemperature=psBatteryTemperature, psDryContactorAlarm3=psDryContactorAlarm3, psConfNomSpare3=psConfNomSpare3, psMIB=psMIB, psConfEqMinorLowVoltageLV=psConfEqMinorLowVoltageLV, psMonthlyLast=psMonthlyLast, psContuctor4=psContuctor4, psStatusAlarm76=psStatusAlarm76, psTrapPrefix=psTrapPrefix, psStatusAlarm36=psStatusAlarm36, psDryContactor2Alarm2=psDryContactor2Alarm2, psStatusAlarm54=psStatusAlarm54, psPSU=psPSU, psPSUNotRespond=psPSUNotRespond, psDryContactorAlarm31=psDryContactorAlarm31, psAlarmSet86=psAlarmSet86, psDryContactorAlarm24=psDryContactorAlarm24, psUnitComProtocolVersion=psUnitComProtocolVersion, psPSUTemperature=psPSUTemperature, psBatteryEntry=psBatteryEntry, psConfNomSpare5=psConfNomSpare5, psDryContactor1Alarm31=psDryContactor1Alarm31, psAlarmSet20=psAlarmSet20, psConfNumOfInvertors=psConfNumOfInvertors, psCommandDownLoadSoftware=psCommandDownLoadSoftware, psStatusAlarm24=psStatusAlarm24, psStatusAlarm58=psStatusAlarm58, psSpare9=psSpare9, psSpare32=psSpare32, psStatusAlarm47=psStatusAlarm47, psTrap1006AUXContactOpen=psTrap1006AUXContactOpen, psDryContactor2Index=psDryContactor2Index, psTrapSeverity=psTrapSeverity, psDryContactorAlarm14=psDryContactorAlarm14, psUnitSoftwareVersion=psUnitSoftwareVersion, psStatusAlarm78=psStatusAlarm78, psAlarmSet79=psAlarmSet79, psConfGHighTempAlarm=psConfGHighTempAlarm, psAlarmSet64=psAlarmSet64, psAlarmSet94=psAlarmSet94, psCommandDoSelfTest=psCommandDoSelfTest, psSpare23=psSpare23, psCommandLoadUserDefaults=psCommandLoadUserDefaults, psAlarmSet83=psAlarmSet83, psStatusAlarm83=psStatusAlarm83, psBatteryNominalCapacity=psBatteryNominalCapacity, psAlarmSet73=psAlarmSet73, psCommandSpareR9=psCommandSpareR9, psDryContactor2Alarm17=psDryContactor2Alarm17, psTrapActivation=psTrapActivation, psConfEnableCurrentLimit=psConfEnableCurrentLimit, psSpare10=psSpare10, psPowerPlus1=psPowerPlus1, psBatteryVoltage=psBatteryVoltage, psPSUEqualizeMode=psPSUEqualizeMode, psAlarmSet23=psAlarmSet23, psAlarmSet58=psAlarmSet58, psSpare16=psSpare16, psDryContactorAlarm15=psDryContactorAlarm15, psSpare22=psSpare22, psCommandEraseTotalTime=psCommandEraseTotalTime, psStatusAlarm66=psStatusAlarm66, psStatusAlarm18=psStatusAlarm18, psTrapBYPS1=psTrapBYPS1, psAlarmSet31=psAlarmSet31, psStatusAlarm84=psStatusAlarm84, psConfLVDDisconnectTime=psConfLVDDisconnectTime, psStatusAlarm50=psStatusAlarm50, psAlarmSet68=psAlarmSet68, psBatteryActualCapacity=psBatteryActualCapacity, psStatusAlarm89=psStatusAlarm89, psMonthlyIndex=psMonthlyIndex, psLogDateTime=psLogDateTime, psCommandSpareW2=psCommandSpareW2, psBatterySpareWrite1=psBatterySpareWrite1, psTrapBATTST=psTrapBATTST, psCommandNonActiveFlash=psCommandNonActiveFlash, psACInputSpareInp0=psACInputSpareInp0, psDryContactor1Alarm23=psDryContactor1Alarm23, psDryContactor2Alarm1=psDryContactor2Alarm1, psCommandGoFloat=psCommandGoFloat, psPSUCurrentLimitDecreased=psPSUCurrentLimitDecreased, psDryContactor2Alarm19=psDryContactor2Alarm19, psDryContactorEntry=psDryContactorEntry, psDryContactorAlarm27=psDryContactorAlarm27, psHourlyFirst=psHourlyFirst, psConfInvertorLowVoltage=psConfInvertorLowVoltage, psDryContactor2Entry=psDryContactor2Entry, psStatusAlarm29=psStatusAlarm29, psStatusAlarm65=psStatusAlarm65, psDryContactor1Alarm7=psDryContactor1Alarm7, psDailyTable=psDailyTable, psSpare31=psSpare31, psAlarmSet4=psAlarmSet4, psTrapIBADIN=psTrapIBADIN, psSecurityInterfaceGateWay=psSecurityInterfaceGateWay, psTrapBATOT=psTrapBATOT, psPSUCurrent=psPSUCurrent, psCommandRunFlash1=psCommandRunFlash1, psHourlyLast=psHourlyLast, psStatus=psStatus, psDCoutputInvertorVoltage=psDCoutputInvertorVoltage, psUnitRTCDay=psUnitRTCDay, psDCoutputSurgeStatus=psDCoutputSurgeStatus, psAlarmSet42=psAlarmSet42, psTrapLVDX2=psTrapLVDX2, psDryContactor1Alarm22=psDryContactor1Alarm22, psSpare21=psSpare21, psDryContactor1Alarm1=psDryContactor1Alarm1, psCommandDoBoot=psCommandDoBoot, psPSUSelfTestPass=psPSUSelfTestPass, psDryContact2Table=psDryContact2Table, psAlarmSet22=psAlarmSet22, psCommandSpareW8=psCommandSpareW8, psAlarmSet18=psAlarmSet18, psSpare17=psSpare17, psDryContactor1Alarm11=psDryContactor1Alarm11, psINUPsType=psINUPsType, psStatusAlarm10=psStatusAlarm10, psDCoutputCurrent4=psDCoutputCurrent4, psTrapCB24CR=psTrapCB24CR, psBatterySpareWrite2=psBatterySpareWrite2, psDryContactorAlarm32=psDryContactorAlarm32, psDryContactorAlarm9=psDryContactorAlarm9, psStatusAlarm55=psStatusAlarm55, psAlarmSet30=psAlarmSet30, psAlarmSet77=psAlarmSet77, psSeverityMapAlarm65to96=psSeverityMapAlarm65to96, psCommandMBXSWRev=psCommandMBXSWRev, psDryContactor1Alarm10=psDryContactor1Alarm10, psCommandUserDefine4=psCommandUserDefine4, psBatterySpareWrite8=psBatterySpareWrite8, psAlarmSet46=psAlarmSet46, psTrap1006LVD1Open=psTrap1006LVD1Open, psINUReserve1=psINUReserve1, psAlarmSet12=psAlarmSet12, psBatteryCurrent=psBatteryCurrent, psBatteryInstalationYear=psBatteryInstalationYear, psTrapFUSE48=psTrapFUSE48, psConfMajorHighVoltage=psConfMajorHighVoltage, psDryContactor1Entry=psDryContactor1Entry, psStatusAlarm31=psStatusAlarm31, psDCoutputDCStatus=psDCoutputDCStatus, psDryContactorAlarm5=psDryContactorAlarm5, psTrapFUSE24=psTrapFUSE24, psAlarmSet17=psAlarmSet17, psDryContactor1Alarm19=psDryContactor1Alarm19, psStatusAlarm48=psStatusAlarm48, psAlarmSet1=psAlarmSet1, psLogDateHour=psLogDateHour, psCommandFlash2Protect=psCommandFlash2Protect, psINUVoltage=psINUVoltage, psStatusAlarm60=psStatusAlarm60, psDryContactor2Alarm11=psDryContactor2Alarm11, psCommandLoadDefault=psCommandLoadDefault, psDCoutputCurrent5=psDCoutputCurrent5, psUnitControllerType=psUnitControllerType, psINUShutHighTemp=psINUShutHighTemp, psSpare29=psSpare29, psDryContactorAlarm18=psDryContactorAlarm18, psDryContactorAlarm2=psDryContactorAlarm2, psStatusAlarm27=psStatusAlarm27, psStatusAlarm90=psStatusAlarm90, psUnitPSType=psUnitPSType, psINUReserve3=psINUReserve3, psUnit=psUnit, psTrap1006ACHigh=psTrap1006ACHigh, psTrap1006ACLow=psTrap1006ACLow, psBatteryEqRunTimeHours=psBatteryEqRunTimeHours, psACInputSpareInp3=psACInputSpareInp3, psDryContactor2Alarm8=psDryContactor2Alarm8, psAlarmSet57=psAlarmSet57, psDryContactor1Index=psDryContactor1Index, psPSUActivity=psPSUActivity, psUnitRTCMinute=psUnitRTCMinute, psBatteryNearestTestHour=psBatteryNearestTestHour, psAlarmSet5=psAlarmSet5, psPowerPlus5=psPowerPlus5, psCommandSpareW1=psCommandSpareW1, psStatusAlarm68=psStatusAlarm68, psLogDCVoltage=psLogDCVoltage, psStatusAlarm34=psStatusAlarm34, psSecurityTrapIp1=psSecurityTrapIp1, psConfMinorHighVoltage=psConfMinorHighVoltage, psConfEqMajorLowVoltageLV1=psConfEqMajorLowVoltageLV1, psLogDateSecond=psLogDateSecond, psConfLowTempAlarm=psConfLowTempAlarm, psStatusAlarm91=psStatusAlarm91, psAlarmSet26=psAlarmSet26, psSpareIde5=psSpareIde5, psDryContactorAlarm13=psDryContactorAlarm13, psStatusAlarm71=psStatusAlarm71, psINUTable=psINUTable, psSeverityMapAlarm1to32=psSeverityMapAlarm1to32, psDryContactor1Alarm25=psDryContactor1Alarm25, psStatusAlarm41=psStatusAlarm41, psPowerPlus2=psPowerPlus2, psDryContactor1Alarm8=psDryContactor1Alarm8, psINURemoteMode=psINURemoteMode, psBatteryNumber=psBatteryNumber, psPSUBadSharing=psPSUBadSharing, psAlarm=psAlarm, psStatusAlarm64=psStatusAlarm64, psTrapEQLONG=psTrapEQLONG, psStatusAlarm28=psStatusAlarm28)
mibBuilder.exportSymbols("GAMATRONIC-MIB", psPowerPlus11=psPowerPlus11, psINUStatus=psINUStatus, psAlarmSet92=psAlarmSet92, psTrapACFAIL=psTrapACFAIL, psAlarmSet44=psAlarmSet44, psSeverityMapAlarm33to64=psSeverityMapAlarm33to64, psPowerPlus7=psPowerPlus7, psSpareIde4=psSpareIde4, psCommandFlashFix=psCommandFlashFix, psDryContactor1Alarm9=psDryContactor1Alarm9, psStatusAlarm8=psStatusAlarm8, psPSUIndication=psPSUIndication, psCommandDownLoadCheck=psCommandDownLoadCheck, psPSUEntry=psPSUEntry, psLogAlarmCode=psLogAlarmCode, psINUBadSharing=psINUBadSharing, psStatusAlarm12=psStatusAlarm12, psSecurityTrapIp2=psSecurityTrapIp2, psTrapCB48CR=psTrapCB48CR, psPSUFanStataus=psPSUFanStataus, psAlarmSet74=psAlarmSet74, psStatusAlarm81=psStatusAlarm81, psConfInvertorHighVoltage=psConfInvertorHighVoltage, psStatusAlarm11=psStatusAlarm11, psHourlyTable=psHourlyTable, psDryContactor2Alarm20=psDryContactor2Alarm20, psContuctor8=psContuctor8, psConfEqualPeriod=psConfEqualPeriod, psConfNumberOfBattery=psConfNumberOfBattery, psAlarmSet13=psAlarmSet13, psPSUIndex=psPSUIndex, psConfNomSpare4=psConfNomSpare4, psMonthlyEntry=psMonthlyEntry, psTrapLOADHI=psTrapLOADHI, psTrapRFAMIN=psTrapRFAMIN, psDryContactor2Alarm28=psDryContactor2Alarm28, psTrap1006LVD2Open=psTrap1006LVD2Open, psDryContactorAlarm20=psDryContactorAlarm20, psAlarmSet95=psAlarmSet95, psACInputSpareInp5=psACInputSpareInp5, psStatusAlarm33=psStatusAlarm33, psStatusAlarm57=psStatusAlarm57, psCommandNonActiveStatus=psCommandNonActiveStatus, psSpare3=psSpare3, psDryContactor1Alarm21=psDryContactor1Alarm21, psStatusAlarm49=psStatusAlarm49, psPSUPsType=psPSUPsType, psStatusAlarm86=psStatusAlarm86, psINUReserve10=psINUReserve10, psCommandSpareW7=psCommandSpareW7, psStatusAlarm42=psStatusAlarm42, psStatusAlarmStruct=psStatusAlarmStruct, psStatusAlarm63=psStatusAlarm63, psMonthlyFirst=psMonthlyFirst, psDryContactor1Alarm27=psDryContactor1Alarm27, psLogIndex=psLogIndex, psAlarmSet75=psAlarmSet75, psContuctor9=psContuctor9, psTrap1006Battery1TestFault=psTrap1006Battery1TestFault, psDryContactorAlarm28=psDryContactorAlarm28, psConfEqualStopTime=psConfEqualStopTime, psPSUPsOK=psPSUPsOK, psHourlyEntry=psHourlyEntry, psDryContactorAlarm11=psDryContactorAlarm11, psLogTable=psLogTable, psAlarmSet76=psAlarmSet76, psAlarmSet67=psAlarmSet67, psConfCurrentLimit=psConfCurrentLimit, psDailyMaxVoltage=psDailyMaxVoltage, psACInputSpareInp6=psACInputSpareInp6, psCommandSpareW5=psCommandSpareW5, psConfACHigh=psConfACHigh, psSecurityErasePassword=psSecurityErasePassword, psStatusAlarm1=psStatusAlarm1, psPSUShutHighTemp=psPSUShutHighTemp, psConfFloatingVoltage=psConfFloatingVoltage, psPSUReserve3=psPSUReserve3, psCommandSpareW9=psCommandSpareW9, psSpare6=psSpare6, psStatusAlarm75=psStatusAlarm75, psAlarmSet39=psAlarmSet39, psAlarmSet54=psAlarmSet54, psSpare1=psSpare1, psContuctor2=psContuctor2, psCommand=psCommand, psPSUReserve1=psPSUReserve1, psSpare27=psSpare27, psStatusAlarm51=psStatusAlarm51, psHourlyAvrCurrent=psHourlyAvrCurrent, psAlarmSet33=psAlarmSet33, psStatusAlarm87=psStatusAlarm87, psDCoutputSpare2=psDCoutputSpare2, psBatteryFuseStatus=psBatteryFuseStatus, psAlarmSet45=psAlarmSet45, psCommandSpareW3=psCommandSpareW3, psSecurityInterfaceNetMask=psSecurityInterfaceNetMask, psACInputSpareInp1=psACInputSpareInp1, psAlarmSet21=psAlarmSet21, psBatteryNearestTestMonth=psBatteryNearestTestMonth, psDryContactor1Alarm13=psDryContactor1Alarm13, psAlarmSet37=psAlarmSet37, psCommandSpareW11=psCommandSpareW11, psCommandFlash2SWRev=psCommandFlash2SWRev, psAlarmSet49=psAlarmSet49, psBatterySpareWrite4=psBatterySpareWrite4, psStatusAlarm88=psStatusAlarm88, psINUIndication=psINUIndication, psStatusAlarm16=psStatusAlarm16, psSecurityPasswordComunity=psSecurityPasswordComunity, psDryContactorAlarm29=psDryContactorAlarm29, psACInputCurrent3=psACInputCurrent3, psDialATDDialOut=psDialATDDialOut, psConfEqMajorLowVoltageLv=psConfEqMajorLowVoltageLv, psDryContactor2Alarm29=psDryContactor2Alarm29, psACInputSpareInp2=psACInputSpareInp2, psStatusAlarm93=psStatusAlarm93, psAlarmSet87=psAlarmSet87, psAlarmSet80=psAlarmSet80, psTrapUNIVPD=psTrapUNIVPD, psSpareIde6=psSpareIde6, psAlarmSet15=psAlarmSet15, psDryContactor1Alarm3=psDryContactor1Alarm3, psDailyEntry=psDailyEntry, psDryContactor2Alarm24=psDryContactor2Alarm24, psDryContactor1Alarm6=psDryContactor1Alarm6, psLogGeneral=psLogGeneral, psPSUNumber=psPSUNumber, psPSUPSpareBit=psPSUPSpareBit, psDryContactor1Alarm24=psDryContactor1Alarm24, psINU=psINU, psStatusAlarm77=psStatusAlarm77, psCommandControlerStatus=psCommandControlerStatus, psPSUNOOut=psPSUNOOut, psStatusAlarmStruct2=psStatusAlarmStruct2, psDryContactor2Alarm12=psDryContactor2Alarm12, psPowerPlus13=psPowerPlus13, psCommandStoreUserDefaults=psCommandStoreUserDefaults, psAlarmSet25=psAlarmSet25, psPowerPlus8=psPowerPlus8, psConfNominal=psConfNominal, psStatusAlarm70=psStatusAlarm70, psStatusAlarm21=psStatusAlarm21, psTrapRFAMAJ=psTrapRFAMAJ, psTrapPrefix1006=psTrapPrefix1006, psPowerPlus3=psPowerPlus3, psCommandSpareR4=psCommandSpareR4, psDCoutputCurrent3=psDCoutputCurrent3, psTrapINUBAD=psTrapINUBAD, psCommandTestBatteryAll=psCommandTestBatteryAll, psPSUTable=psPSUTable, psPSURemoteMode=psPSURemoteMode, psDryContactor1Alarm2=psDryContactor1Alarm2, psCommandSpareR2=psCommandSpareR2, psACInputACStatus=psACInputACStatus, psAlarmSet59=psAlarmSet59, psCommandSpareR8=psCommandSpareR8, psHourlyAvrVoltage=psHourlyAvrVoltage, psSecurity=psSecurity, psTrapFUSEBD=psTrapFUSEBD, psBatteryStatus=psBatteryStatus, psDailyAvrCurrent=psDailyAvrCurrent, psSpareIde0=psSpareIde0, psDryContactor1Alarm17=psDryContactor1Alarm17, psTrapEQHST=psTrapEQHST, psDialTimeOutAfterLastRetryFailed=psDialTimeOutAfterLastRetryFailed, psWorkingTime=psWorkingTime, psStatusAlarm26=psStatusAlarm26, psStatusAlarm44=psStatusAlarm44, psACInputSurgeStatus=psACInputSurgeStatus, psAlarmSet93=psAlarmSet93, psAlarmSet56=psAlarmSet56, psContuctor1=psContuctor1, psBatteryTemperatureSign=psBatteryTemperatureSign, psStatusAlarm72=psStatusAlarm72, psHourlyMaxVoltage=psHourlyMaxVoltage, psCommandSpareR6=psCommandSpareR6, psBatterySpareRead2=psBatterySpareRead2, psTrap1006DCLOWLow=psTrap1006DCLOWLow, psBatterySpareRead3=psBatterySpareRead3, psAlarmSet78=psAlarmSet78, psSeverityMapEntry=psSeverityMapEntry, psBatteryInstalationMonth=psBatteryInstalationMonth, psConfNomSpare8=psConfNomSpare8, psUnitRTCMonth=psUnitRTCMonth, psPSUCurrentLimitExceed=psPSUCurrentLimitExceed, psSpare13=psSpare13, psSpare24=psSpare24, psConfNomSpare9=psConfNomSpare9, psACInputCurrent2=psACInputCurrent2, psLogEntry=psLogEntry, psINUIndex=psINUIndex, psAlarmSet6=psAlarmSet6, psDryContactor2Alarm32=psDryContactor2Alarm32, psCommandSpareW10=psCommandSpareW10, psDialOutNumRetriesActual=psDialOutNumRetriesActual, psConfNomSpare2=psConfNomSpare2, psCommandSpareW4=psCommandSpareW4, psDryContactor2Alarm16=psDryContactor2Alarm16, psSpare26=psSpare26, psDCoutputSpare5=psDCoutputSpare5, psStatusAlarm20=psStatusAlarm20, psStatusAlarm95=psStatusAlarm95, psStatusAlarm7=psStatusAlarm7, psUnitSysName=psUnitSysName, psSecurityComunity3=psSecurityComunity3, psINUNotRespond=psINUNotRespond, psDryContactor1Alarm4=psDryContactor1Alarm4, psAlarmSet91=psAlarmSet91, psTrap1006OverTemptature=psTrap1006OverTemptature, psCommandSpareR10=psCommandSpareR10, psDialATDModemSetUp=psDialATDModemSetUp, psStatusAlarm73=psStatusAlarm73, psUnitManufacture=psUnitManufacture, psDCoutputCurrent2=psDCoutputCurrent2, psDailyMaxCurrent=psDailyMaxCurrent, psAlarmSet66=psAlarmSet66, psStatusAlarm17=psStatusAlarm17, psBatteryNearestTestMinute=psBatteryNearestTestMinute, psAlarmSet29=psAlarmSet29, psDryContactor2Alarm7=psDryContactor2Alarm7, psSecurityInterfaceIP=psSecurityInterfaceIP, psAlarmSet10=psAlarmSet10, psCommandSpareW0=psCommandSpareW0, psDryContactorAlarm8=psDryContactorAlarm8, psBatteryLoadTime=psBatteryLoadTime, psACInputCurrent1=psACInputCurrent1, psTrapBYPS2=psTrapBYPS2, psCommandUserDefine3=psCommandUserDefine3, psDryContactor2Alarm25=psDryContactor2Alarm25, psStatusAlarm4=psStatusAlarm4, psStatusAlarm14=psStatusAlarm14, psBatteryTestStatus=psBatteryTestStatus, psLogDateYear=psLogDateYear, psCommandSpareR1=psCommandSpareR1, psAlarmSet50=psAlarmSet50, psPSUStatus=psPSUStatus, psINUActivity=psINUActivity, psACInputFrequency=psACInputFrequency, psStatusAlarm67=psStatusAlarm67, psAlarmSet40=psAlarmSet40, psDryContactor1Alarm12=psDryContactor1Alarm12, psPSUShutHighVolt=psPSUShutHighVolt, psPowerPlus=psPowerPlus, psINUSelfTestPass=psINUSelfTestPass, psDryContactorAlarm16=psDryContactorAlarm16, psSpare12=psSpare12, psSpare25=psSpare25, psAlarmSet84=psAlarmSet84, psMonthlyMaxCurrent=psMonthlyMaxCurrent, psINUPsOK=psINUPsOK, psConfEqMajorHighVoltageHV=psConfEqMajorHighVoltageHV, psBatteryChargeMode=psBatteryChargeMode, psBatterySpareRead1=psBatterySpareRead1, psHourlyMinCurrent=psHourlyMinCurrent)
mibBuilder.exportSymbols("GAMATRONIC-MIB", psTrapStatus=psTrapStatus, psAlarmSet89=psAlarmSet89, psAlarmSet24=psAlarmSet24, psACInputVoltage3=psACInputVoltage3, psTrapSYSOT=psTrapSYSOT, psPowerPlus4=psPowerPlus4, psLogDateMinute=psLogDateMinute, psINUReserve7=psINUReserve7, psConfEqMinorHighVoltageHV=psConfEqMinorHighVoltageHV, psDryContactor2Alarm26=psDryContactor2Alarm26, psPowerPlus12=psPowerPlus12, PYSNMP_MODULE_ID=gamatronicLTD, psPowerPlus15=psPowerPlus15, psStatistics=psStatistics, psBatteryTable=psBatteryTable, psConfInvertorVoltage=psConfInvertorVoltage)
