#
# PySNMP MIB module STORMSHIELD-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/stormshield/STORMSHIELD-IF-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 16:03:20 2024
# On host fv-az1205-935 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, MibIdentifier, Bits, Gauge32, Integer32, Counter64, Counter32, iso, ObjectIdentity, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "Bits", "Gauge32", "Integer32", "Counter64", "Counter32", "iso", "ObjectIdentity", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
stormshieldMIB, = mibBuilder.importSymbols("STORMSHIELD-SMI-MIB", "stormshieldMIB")
snsif = ModuleIdentity((1, 3, 6, 1, 4, 1, 11256, 1, 4))
snsif.setRevisions(('2017-02-20 00:00',))
if mibBuilder.loadTexts: snsif.setLastUpdated('201702200000Z')
if mibBuilder.loadTexts: snsif.setOrganization('Stormshield')
snsifTable = MibTable((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1), )
if mibBuilder.loadTexts: snsifTable.setStatus('current')
snsifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1), ).setIndexNames((0, "STORMSHIELD-IF-MIB", "snsifIndex"))
if mibBuilder.loadTexts: snsifEntry.setStatus('current')
snsifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifIndex.setStatus('current')
snsifUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifUserName.setStatus('current')
snsifName = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifName.setStatus('current')
snsifAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifAddr.setStatus('current')
snsifMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifMask.setStatus('current')
snsifType = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifType.setStatus('current')
snsifColor = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifColor.setStatus('current')
snsifMacThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifMacThroughput.setStatus('current')
snsifCurThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifCurThroughput.setStatus('current')
snsifMaxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifMaxThroughput.setStatus('current')
snsifPktAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifPktAccepted.setStatus('current')
snsifPktBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifPktBlocked.setStatus('current')
snsifPktFragmented = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifPktFragmented.setStatus('current')
snsifPktTcp = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifPktTcp.setStatus('current')
snsifPktUdp = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifPktUdp.setStatus('current')
snsifPktIcmp = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifPktIcmp.setStatus('current')
snsifTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifTotalBytes.setStatus('current')
snsifTcpBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifTcpBytes.setStatus('current')
snsifUdpBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifUdpBytes.setStatus('current')
snsifIcmpBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifIcmpBytes.setStatus('current')
snsifTcpConn = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifTcpConn.setStatus('current')
snsifUdpConn = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifUdpConn.setStatus('current')
snsifTcpConnCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifTcpConnCount.setStatus('current')
snsifUdpConnCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifUdpConnCount.setStatus('current')
snsifInCurThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifInCurThroughput.setStatus('current')
snsifOutCurThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifOutCurThroughput.setStatus('current')
snsifInMaxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifInMaxThroughput.setStatus('current')
snsifOutMaxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifOutMaxThroughput.setStatus('current')
snsifInTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifInTotalBytes.setStatus('current')
snsifOutTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifOutTotalBytes.setStatus('current')
snsifInTcpBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifInTcpBytes.setStatus('current')
snsifOutTcpBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifOutTcpBytes.setStatus('current')
snsifInUdpBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifInUdpBytes.setStatus('current')
snsifOutUdpBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifOutUdpBytes.setStatus('current')
snsifInIcmpBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifInIcmpBytes.setStatus('current')
snsifOutIcmpBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifOutIcmpBytes.setStatus('current')
snsifProtected = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifProtected.setStatus('current')
snsifDrvName = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 4, 1, 1, 38), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsifDrvName.setStatus('current')
mibBuilder.exportSymbols("STORMSHIELD-IF-MIB", snsifOutUdpBytes=snsifOutUdpBytes, snsifInCurThroughput=snsifInCurThroughput, snsif=snsif, snsifInIcmpBytes=snsifInIcmpBytes, snsifTcpBytes=snsifTcpBytes, snsifEntry=snsifEntry, snsifIcmpBytes=snsifIcmpBytes, PYSNMP_MODULE_ID=snsif, snsifPktTcp=snsifPktTcp, snsifOutIcmpBytes=snsifOutIcmpBytes, snsifInTotalBytes=snsifInTotalBytes, snsifDrvName=snsifDrvName, snsifPktBlocked=snsifPktBlocked, snsifTable=snsifTable, snsifType=snsifType, snsifOutMaxThroughput=snsifOutMaxThroughput, snsifInUdpBytes=snsifInUdpBytes, snsifColor=snsifColor, snsifUdpConnCount=snsifUdpConnCount, snsifInTcpBytes=snsifInTcpBytes, snsifAddr=snsifAddr, snsifProtected=snsifProtected, snsifPktIcmp=snsifPktIcmp, snsifInMaxThroughput=snsifInMaxThroughput, snsifTotalBytes=snsifTotalBytes, snsifUdpConn=snsifUdpConn, snsifOutTotalBytes=snsifOutTotalBytes, snsifName=snsifName, snsifPktUdp=snsifPktUdp, snsifTcpConn=snsifTcpConn, snsifMacThroughput=snsifMacThroughput, snsifUserName=snsifUserName, snsifPktAccepted=snsifPktAccepted, snsifMask=snsifMask, snsifCurThroughput=snsifCurThroughput, snsifMaxThroughput=snsifMaxThroughput, snsifIndex=snsifIndex, snsifOutCurThroughput=snsifOutCurThroughput, snsifPktFragmented=snsifPktFragmented, snsifUdpBytes=snsifUdpBytes, snsifOutTcpBytes=snsifOutTcpBytes, snsifTcpConnCount=snsifTcpConnCount)
