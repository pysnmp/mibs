#
# PySNMP MIB module STXN-GLOBALREGISTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/aviat-wtm/STXN-GLOBALREGISTER-MIB
# Produced by pysmi-1.1.12 at Wed Jul  3 12:19:58 2024
# On host fv-az1022-995 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType, Unsigned32, enterprises, Integer32, IpAddress, MibIdentifier, TimeTicks, Counter64, iso, Counter32, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType", "Unsigned32", "enterprises", "Integer32", "IpAddress", "MibIdentifier", "TimeTicks", "Counter64", "iso", "Counter32", "Bits", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
stxnGlobalRegModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2509, 6, 1))
stxnGlobalRegModule.setRevisions(('2014-01-21 03:58', '2011-11-28 00:07', '2011-03-14 01:19', '2009-07-23 04:15', '2009-04-16 23:58', '2004-02-20 00:55', '2003-01-29 03:31', '2002-11-28 23:58', '2002-10-08 19:35', '2002-09-03 23:15', '2001-11-15 01:10', '2001-03-14 20:41', '2001-02-13 20:21',))
if mibBuilder.loadTexts: stxnGlobalRegModule.setLastUpdated('201401210358Z')
if mibBuilder.loadTexts: stxnGlobalRegModule.setOrganization('Aviat Networks')
dmc = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509))
if mibBuilder.loadTexts: dmc.setStatus('current')
dmcNet = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1))
if mibBuilder.loadTexts: dmcNet.setStatus('current')
proxyAgent = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 1))
if mibBuilder.loadTexts: proxyAgent.setStatus('current')
nonsnmpRadio = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 2))
if mibBuilder.loadTexts: nonsnmpRadio.setStatus('current')
snmpRadio = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 3))
if mibBuilder.loadTexts: snmpRadio.setStatus('current')
dmcEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 4))
if mibBuilder.loadTexts: dmcEvents.setStatus('current')
dmcSecurity = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 5))
if mibBuilder.loadTexts: dmcSecurity.setStatus('current')
sp2Radio = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 3, 1))
if mibBuilder.loadTexts: sp2Radio.setStatus('current')
altium = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 3, 2))
if mibBuilder.loadTexts: altium.setStatus('current')
dmcModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 2))
if mibBuilder.loadTexts: dmcModules.setStatus('current')
stxnEngineering = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 4))
if mibBuilder.loadTexts: stxnEngineering.setStatus('current')
stxnProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5))
if mibBuilder.loadTexts: stxnProducts.setStatus('current')
stxnLMCDR = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 1))
if mibBuilder.loadTexts: stxnLMCDR.setStatus('current')
stxnAOU = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 2))
if mibBuilder.loadTexts: stxnAOU.setStatus('current')
stxnCTU = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 3))
if mibBuilder.loadTexts: stxnCTU.setStatus('current')
stxnUNITY = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 4))
if mibBuilder.loadTexts: stxnUNITY.setStatus('current')
stxnProVision = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 5))
if mibBuilder.loadTexts: stxnProVision.setStatus('current')
stxnEfficientSite = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 6))
if mibBuilder.loadTexts: stxnEfficientSite.setStatus('current')
stxnEfficientSiteControllerUnit = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 6, 1))
if mibBuilder.loadTexts: stxnEfficientSiteControllerUnit.setStatus('current')
stxnProductOIDs = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 10))
if mibBuilder.loadTexts: stxnProductOIDs.setStatus('current')
stxnModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 6))
if mibBuilder.loadTexts: stxnModules.setStatus('current')
stxnEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7))
if mibBuilder.loadTexts: stxnEvents.setStatus('current')
stxnGeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 8))
if mibBuilder.loadTexts: stxnGeneric.setStatus('current')
aviatModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 9))
if mibBuilder.loadTexts: aviatModules.setStatus('current')
aviatAfModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 1000))
if mibBuilder.loadTexts: aviatAfModules.setStatus('current')
aviatAaModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 1001))
if mibBuilder.loadTexts: aviatAaModules.setStatus('current')
aviatAlModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 1002))
if mibBuilder.loadTexts: aviatAlModules.setStatus('current')
aviatAmModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 1003))
if mibBuilder.loadTexts: aviatAmModules.setStatus('current')
aviatEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 10))
if mibBuilder.loadTexts: aviatEvents.setStatus('current')
aviatProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 11))
if mibBuilder.loadTexts: aviatProducts.setStatus('current')
stxnOvationEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7, 1))
if mibBuilder.loadTexts: stxnOvationEvents.setStatus('current')
stxnUnityAOUEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7, 2))
if mibBuilder.loadTexts: stxnUnityAOUEvents.setStatus('current')
stxnUnityCTUEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7, 3))
if mibBuilder.loadTexts: stxnUnityCTUEvents.setStatus('current')
stxnUnityIDUEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7, 4))
if mibBuilder.loadTexts: stxnUnityIDUEvents.setStatus('current')
stxnEfficientSiteEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7, 5))
if mibBuilder.loadTexts: stxnEfficientSiteEvents.setStatus('current')
mibBuilder.exportSymbols("STXN-GLOBALREGISTER-MIB", stxnCTU=stxnCTU, stxnProductOIDs=stxnProductOIDs, stxnProVision=stxnProVision, aviatModules=aviatModules, stxnUNITY=stxnUNITY, nonsnmpRadio=nonsnmpRadio, altium=altium, aviatAmModules=aviatAmModules, aviatAfModules=aviatAfModules, dmcModules=dmcModules, aviatEvents=aviatEvents, dmc=dmc, stxnAOU=stxnAOU, PYSNMP_MODULE_ID=stxnGlobalRegModule, snmpRadio=snmpRadio, stxnEfficientSiteControllerUnit=stxnEfficientSiteControllerUnit, stxnUnityCTUEvents=stxnUnityCTUEvents, stxnEngineering=stxnEngineering, stxnGlobalRegModule=stxnGlobalRegModule, stxnModules=stxnModules, aviatAaModules=aviatAaModules, stxnLMCDR=stxnLMCDR, stxnUnityAOUEvents=stxnUnityAOUEvents, stxnEfficientSite=stxnEfficientSite, aviatProducts=aviatProducts, stxnOvationEvents=stxnOvationEvents, aviatAlModules=aviatAlModules, stxnEfficientSiteEvents=stxnEfficientSiteEvents, dmcNet=dmcNet, stxnProducts=stxnProducts, stxnGeneric=stxnGeneric, stxnEvents=stxnEvents, dmcSecurity=dmcSecurity, sp2Radio=sp2Radio, stxnUnityIDUEvents=stxnUnityIDUEvents, proxyAgent=proxyAgent, dmcEvents=dmcEvents)
