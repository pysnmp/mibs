#
# PySNMP MIB module WIPIPE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/cradlepoint/WIPIPE-MIB
# Produced by pysmi-1.1.12 at Wed Jul  3 09:54:19 2024
# On host fv-az530-296 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Integer32, Counter32, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ObjectIdentity, TimeTicks, Counter64, Gauge32, NotificationType, Unsigned32, MibIdentifier, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "Counter32", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ObjectIdentity", "TimeTicks", "Counter64", "Gauge32", "NotificationType", "Unsigned32", "MibIdentifier", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

class PhysAddress(OctetString):
    pass

wipipe = MibIdentifier((1, 3, 6, 1, 4, 1, 20992))
wipipeMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 1))
wipipeProd = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2))
mbr1000 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 1))
ctr500 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 2))
mbr800 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 3))
mbr1100 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 4))
mbr1200 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 5))
mbr900 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 6))
cba250 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 7))
cba750 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 8))
cx111 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 9))
mbr1400 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 10))
mbr1200b = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 11))
cbr400 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 12))
cbr450 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 13))
ibr600 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 14))
ibr650 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 15))
mbr1400v2 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 16))
cba750b = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 17))
aer2100 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 18))
ibr1150 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 19))
ibr1100 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 20))
cba850 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 21))
ibr350 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 22))
aer3100 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 23))
aer1600 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 24))
ibr650b = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 25))
aer3150 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 26))
aer1650 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 27))
aer2150 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 28))
ibr600b = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 29))
ibr950 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 30))
ibr900 = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 2, 31))
wipipeDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 1, 1))
wipipeCellMdm = MibIdentifier((1, 3, 6, 1, 4, 1, 20992, 1, 2))
devFWVersion = MibScalar((1, 3, 6, 1, 4, 1, 20992, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: devFWVersion.setStatus('mandatory')
devFWUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 20992, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("auto", 2), ("manual", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devFWUpgrade.setStatus('mandatory')
devFWUpgradeURL = MibScalar((1, 3, 6, 1, 4, 1, 20992, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devFWUpgradeURL.setStatus('mandatory')
devFWUpgradeStatus = MibScalar((1, 3, 6, 1, 4, 1, 20992, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 1), ("upgrading", 2), ("uptodate", 3), ("updateAvail", 4), ("failure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: devFWUpgradeStatus.setStatus('mandatory')
devGpioConfigInput = MibScalar((1, 3, 6, 1, 4, 1, 20992, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("input", 2), ("reboot", 3), ("ignitionSensing", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devGpioConfigInput.setStatus('mandatory')
devGpioReadInput = MibScalar((1, 3, 6, 1, 4, 1, 20992, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: devGpioReadInput.setStatus('mandatory')
devGpioConfigOutput = MibScalar((1, 3, 6, 1, 4, 1, 20992, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("low", 1), ("high", 2), ("routerRunning", 3), ("modemConnected", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: devGpioConfigOutput.setStatus('mandatory')
devGpioReadOutput = MibScalar((1, 3, 6, 1, 4, 1, 20992, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: devGpioReadOutput.setStatus('mandatory')
mdmNumber = MibScalar((1, 3, 6, 1, 4, 1, 20992, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmNumber.setStatus('mandatory')
mdmTable = MibTable((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2), )
if mibBuilder.loadTexts: mdmTable.setStatus('mandatory')
mdmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1), ).setIndexNames((0, "WIPIPE-MIB", "mdmIndex"))
if mibBuilder.loadTexts: mdmEntry.setStatus('mandatory')
mdmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIndex.setStatus('mandatory')
mdmDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDescr.setStatus('mandatory')
mdmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmPort.setStatus('mandatory')
mdmSignalStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-120, -30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmSignalStrength.setStatus('mandatory')
mdmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("established", 1), ("establishing", 2), ("ready", 3), ("error", 4), ("disconnected", 5), ("disconnecting", 6), ("suspended", 7), ("empty", 8), ("notconfigured", 9), ("userstopped", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmStatus.setStatus('mandatory')
mdmECIO = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-120, 0))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmECIO.setStatus('mandatory')
mdmSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmSerialNumber.setStatus('mandatory')
mdmFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmFirmwareVersion.setStatus('mandatory')
mdmMDN = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmMDN.setStatus('mandatory')
mdmSERDIS = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmSERDIS.setStatus('mandatory')
mdmPROF = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmPROF.setStatus('mandatory')
mdmCINR = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-120, 0))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmCINR.setStatus('mandatory')
mdmSINR = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-20, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmSINR.setStatus('mandatory')
mdmRSRP = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-120, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRSRP.setStatus('mandatory')
mdmRSRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-120, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRSRQ.setStatus('mandatory')
mdmROAM = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmROAM.setStatus('mandatory')
mdmRFBAND = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRFBAND.setStatus('mandatory')
mdmHOMECARRIER = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmHOMECARRIER.setStatus('mandatory')
mdmIMSI = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIMSI.setStatus('mandatory')
mdmIMEI = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmIMEI.setStatus('mandatory')
mdmAPN = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmAPN.setStatus('mandatory')
mdmRFCHANNEL = MibTableColumn((1, 3, 6, 1, 4, 1, 20992, 1, 2, 2, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRFCHANNEL.setStatus('mandatory')
mibBuilder.exportSymbols("WIPIPE-MIB", ibr350=ibr350, ibr650=ibr650, wipipeProd=wipipeProd, ibr900=ibr900, mdmIMSI=mdmIMSI, wipipeDevice=wipipeDevice, aer2150=aer2150, ibr600=ibr600, ibr1100=ibr1100, cx111=cx111, mdmSINR=mdmSINR, devFWUpgrade=devFWUpgrade, PhysAddress=PhysAddress, ibr1150=ibr1150, wipipeCellMdm=wipipeCellMdm, mdmPROF=mdmPROF, mdmIMEI=mdmIMEI, aer3150=aer3150, mdmStatus=mdmStatus, mdmRFCHANNEL=mdmRFCHANNEL, mdmCINR=mdmCINR, mdmAPN=mdmAPN, ibr650b=ibr650b, devGpioConfigOutput=devGpioConfigOutput, ibr950=ibr950, mbr1400v2=mbr1400v2, mdmPort=mdmPort, mdmSignalStrength=mdmSignalStrength, ibr600b=ibr600b, mdmRFBAND=mdmRFBAND, wipipe=wipipe, mbr1100=mbr1100, mdmSerialNumber=mdmSerialNumber, mbr800=mbr800, ctr500=ctr500, devFWUpgradeURL=devFWUpgradeURL, devGpioReadInput=devGpioReadInput, cba750b=cba750b, mdmEntry=mdmEntry, cbr450=cbr450, devFWUpgradeStatus=devFWUpgradeStatus, mdmTable=mdmTable, mdmFirmwareVersion=mdmFirmwareVersion, DisplayString=DisplayString, mdmECIO=mdmECIO, cba250=cba250, mbr1400=mbr1400, mdmSERDIS=mdmSERDIS, aer3100=aer3100, devFWVersion=devFWVersion, mdmDescr=mdmDescr, mdmMDN=mdmMDN, mdmRSRQ=mdmRSRQ, devGpioReadOutput=devGpioReadOutput, mdmIndex=mdmIndex, cba850=cba850, aer2100=aer2100, aer1650=aer1650, devGpioConfigInput=devGpioConfigInput, mdmRSRP=mdmRSRP, mbr1200=mbr1200, cbr400=cbr400, mbr1000=mbr1000, aer1600=aer1600, mdmROAM=mdmROAM, wipipeMgmt=wipipeMgmt, mdmNumber=mdmNumber, mdmHOMECARRIER=mdmHOMECARRIER, mbr900=mbr900, mbr1200b=mbr1200b, cba750=cba750)
