#
# PySNMP MIB module BKTEL-HFC862-OA-V01-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/bktel/BKTEL-HFC862-OA-V01-MIB
# Produced by pysmi-1.1.12 at Wed Nov  6 08:27:52 2024
# On host fv-az984-999 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
DisplayString, NESlotValue, ModuleWidthValue, modules, TruthValue, PerceivedSeverityValue = mibBuilder.importSymbols("BKTEL-HFC862-BASE-MIB", "DisplayString", "NESlotValue", "ModuleWidthValue", "modules", "TruthValue", "PerceivedSeverityValue")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, Counter32, Unsigned32, Integer32, iso, NotificationType, TimeTicks, Counter64, MibIdentifier, Bits, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "Counter32", "Unsigned32", "Integer32", "iso", "NotificationType", "TimeTicks", "Counter64", "MibIdentifier", "Bits", "ModuleIdentity", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
oa = MibIdentifier((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116))
oaCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 1))
oaStates = MibIdentifier((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2))
oaConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 3))
oaControl = MibIdentifier((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 4))
oaMeasuringValues = MibIdentifier((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5))
oaDisplay = MibIdentifier((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6))
class RegulationMode(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("regModeConstantOutputPower", 1), ("regModeConstantGain", 2))

class SbsEvaluationMode(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("evalModeDefault", 1), ("evalModeFullScan", 2))

class SbsEvaluationState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("evaluationNotSupported", 1), ("evaluationDone", 2), ("evaluationInProgress", 3), ("evaluationFailed", 4))

class ExtIOmode(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("modeActiveLowOutput", 1), ("modeActiveHighOutput", 2), ("modeRedundantMasterIrreversible", 3), ("modeRedundantMasterFallback", 4), ("modeRedundantSlave", 5))

class ExtIOmask(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("maskAlarmsOnly", 1), ("maskAlarmsAndWarnings", 2), ("maskSpecial", 3))

class LaserFeatures(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31))
    namedValues = NamedValues(("lasNonExistent", 0), ("lasCurrent", 1), ("lasCurrentLasTec", 3), ("lasCurrentLasTemperature", 5), ("lasCurrentLasTecLasTemperature", 7), ("lasCurrentLasVoltage", 9), ("lasCurrentLasTecLasVoltage", 11), ("lasCurrentLasTemperatureLasVoltage", 13), ("lasCurrentLasTecLasTemperatureLasVoltage", 15), ("lasCurrentLasPumpPower", 17), ("lasCurrentLasTecLasPumpPower", 19), ("lasCurrentLasTemperatureLasPumpPower", 21), ("lasCurrentLasTecLasTemperatureLasPumpPower", 23), ("lasCurrentLasVoltageLasPumpPower", 25), ("lasCurrentLasTecLasVoltageLasPumpPower", 27), ("lasCurrentLasTemperatureLasVoltageLasPumpPower", 29), ("lasCurrentLasTecLasTemperatureLasVoltageLasPumpPower", 31))

class NESlotWriteValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-1, 99)

oaCommonNumberOfModules = MibScalar((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaCommonNumberOfModules.setStatus('mandatory')
oaCommonTable = MibTable((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 1, 2), )
if mibBuilder.loadTexts: oaCommonTable.setStatus('mandatory')
oaCommonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 1, 2, 1), ).setIndexNames((0, "BKTEL-HFC862-OA-V01-MIB", "oaNESlot"))
if mibBuilder.loadTexts: oaCommonEntry.setStatus('mandatory')
oaNESlot = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 1, 2, 1, 1), NESlotValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaNESlot.setStatus('mandatory')
oaCommonType = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaCommonType.setStatus('mandatory')
oaCommonDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 1, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaCommonDescr.setStatus('mandatory')
oaCommonFirmwareId = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaCommonFirmwareId.setStatus('mandatory')
oaCommonModuleWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 1, 2, 1, 5), ModuleWidthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaCommonModuleWidth.setStatus('optional')
oaMeasuringValuesTable = MibTable((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1), )
if mibBuilder.loadTexts: oaMeasuringValuesTable.setStatus('mandatory')
oaMeasuringValuesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1), ).setIndexNames((0, "BKTEL-HFC862-OA-V01-MIB", "oaNESlot"))
if mibBuilder.loadTexts: oaMeasuringValuesEntry.setStatus('mandatory')
oaTemperatureLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaTemperatureLoLo.setStatus('mandatory')
oaTemperatureLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaTemperatureLo.setStatus('mandatory')
oaTemperatureValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaTemperatureValue.setStatus('mandatory')
oaTemperatureHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaTemperatureHi.setStatus('mandatory')
oaTemperatureHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaTemperatureHiHi.setStatus('mandatory')
oaInputPowerLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaInputPowerLoLo.setStatus('mandatory')
oaInputPowerLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaInputPowerLo.setStatus('mandatory')
oaInputPowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInputPowerValue.setStatus('mandatory')
oaInputPowerHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaInputPowerHi.setStatus('mandatory')
oaInputPowerHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaInputPowerHiHi.setStatus('mandatory')
oaOutputPwrOrGainLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaOutputPwrOrGainLoLo.setStatus('mandatory')
oaOutputPwrOrGainLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaOutputPwrOrGainLo.setStatus('mandatory')
oaOutputPwrOrGainValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaOutputPwrOrGainValue.setStatus('mandatory')
oaOutputPwrOrGainHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaOutputPwrOrGainHi.setStatus('mandatory')
oaOutputPwrOrGainHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaOutputPwrOrGainHiHi.setStatus('mandatory')
oaReturnLossLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaReturnLossLoLo.setStatus('mandatory')
oaReturnLossLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaReturnLossLo.setStatus('mandatory')
oaReturnLossValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaReturnLossValue.setStatus('mandatory')
oaReturnLossHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaReturnLossHi.setStatus('mandatory')
oaReturnLossHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaReturnLossHiHi.setStatus('mandatory')
oaInputVoltageLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInputVoltageLoLo.setStatus('mandatory')
oaInputVoltageLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInputVoltageLo.setStatus('mandatory')
oaInputVoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInputVoltageValue.setStatus('mandatory')
oaInputVoltageHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInputVoltageHi.setStatus('mandatory')
oaInputVoltageHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInputVoltageHiHi.setStatus('mandatory')
oaInternalVoltage1LoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage1LoLo.setStatus('optional')
oaInternalVoltage1Lo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage1Lo.setStatus('optional')
oaInternalVoltage1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage1Value.setStatus('optional')
oaInternalVoltage1Hi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage1Hi.setStatus('optional')
oaInternalVoltage1HiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage1HiHi.setStatus('optional')
oaInternalVoltage2LoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage2LoLo.setStatus('optional')
oaInternalVoltage2Lo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage2Lo.setStatus('optional')
oaInternalVoltage2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage2Value.setStatus('optional')
oaInternalVoltage2Hi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage2Hi.setStatus('optional')
oaInternalVoltage2HiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage2HiHi.setStatus('optional')
oaInternalVoltage3LoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage3LoLo.setStatus('optional')
oaInternalVoltage3Lo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage3Lo.setStatus('optional')
oaInternalVoltage3Value = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage3Value.setStatus('optional')
oaInternalVoltage3Hi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage3Hi.setStatus('optional')
oaInternalVoltage3HiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInternalVoltage3HiHi.setStatus('optional')
oaLaser1CurrentRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 86), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1CurrentRelLoLo.setStatus('mandatory')
oaLaser1CurrentRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 87), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1CurrentRelLo.setStatus('mandatory')
oaLaser1CurrentRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 88), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1CurrentRelValue.setStatus('mandatory')
oaLaser1CurrentRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 89), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1CurrentRelHi.setStatus('mandatory')
oaLaser1CurrentRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 90), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1CurrentRelHiHi.setStatus('mandatory')
oaLaser1TecRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 91), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1TecRelLoLo.setStatus('mandatory')
oaLaser1TecRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1TecRelLo.setStatus('mandatory')
oaLaser1TecRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 93), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1TecRelValue.setStatus('mandatory')
oaLaser1TecRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 94), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1TecRelHi.setStatus('mandatory')
oaLaser1TecRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 95), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1TecRelHiHi.setStatus('mandatory')
oaLaser1TemperatureLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 96), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1TemperatureLoLo.setStatus('mandatory')
oaLaser1TemperatureLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 97), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1TemperatureLo.setStatus('mandatory')
oaLaser1TemperatureValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 98), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1TemperatureValue.setStatus('mandatory')
oaLaser1TemperatureHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1TemperatureHi.setStatus('mandatory')
oaLaser1TemperatureHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1TemperatureHiHi.setStatus('mandatory')
oaLaser1VoltageLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1VoltageLoLo.setStatus('optional')
oaLaser1VoltageLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1VoltageLo.setStatus('optional')
oaLaser1VoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 103), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1VoltageValue.setStatus('optional')
oaLaser1VoltageHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1VoltageHi.setStatus('optional')
oaLaser1VoltageHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser1VoltageHiHi.setStatus('optional')
oaLaser2CurrentRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 111), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2CurrentRelLoLo.setStatus('mandatory')
oaLaser2CurrentRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 112), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2CurrentRelLo.setStatus('mandatory')
oaLaser2CurrentRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 113), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2CurrentRelValue.setStatus('mandatory')
oaLaser2CurrentRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 114), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2CurrentRelHi.setStatus('mandatory')
oaLaser2CurrentRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 115), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2CurrentRelHiHi.setStatus('mandatory')
oaLaser2TecRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 116), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2TecRelLoLo.setStatus('mandatory')
oaLaser2TecRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 117), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2TecRelLo.setStatus('mandatory')
oaLaser2TecRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 118), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2TecRelValue.setStatus('mandatory')
oaLaser2TecRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 119), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2TecRelHi.setStatus('mandatory')
oaLaser2TecRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 120), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2TecRelHiHi.setStatus('mandatory')
oaLaser2TemperatureLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 121), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2TemperatureLoLo.setStatus('mandatory')
oaLaser2TemperatureLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 122), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2TemperatureLo.setStatus('mandatory')
oaLaser2TemperatureValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 123), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2TemperatureValue.setStatus('mandatory')
oaLaser2TemperatureHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 124), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2TemperatureHi.setStatus('mandatory')
oaLaser2TemperatureHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 125), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2TemperatureHiHi.setStatus('mandatory')
oaLaser2VoltageLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 126), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2VoltageLoLo.setStatus('optional')
oaLaser2VoltageLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 127), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2VoltageLo.setStatus('optional')
oaLaser2VoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 128), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2VoltageValue.setStatus('optional')
oaLaser2VoltageHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 129), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2VoltageHi.setStatus('optional')
oaLaser2VoltageHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 130), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser2VoltageHiHi.setStatus('optional')
oaLaser3CurrentRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 136), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3CurrentRelLoLo.setStatus('mandatory')
oaLaser3CurrentRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 137), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3CurrentRelLo.setStatus('mandatory')
oaLaser3CurrentRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 138), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3CurrentRelValue.setStatus('mandatory')
oaLaser3CurrentRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 139), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3CurrentRelHi.setStatus('mandatory')
oaLaser3CurrentRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 140), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3CurrentRelHiHi.setStatus('mandatory')
oaLaser3TecRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 141), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3TecRelLoLo.setStatus('mandatory')
oaLaser3TecRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 142), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3TecRelLo.setStatus('mandatory')
oaLaser3TecRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 143), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3TecRelValue.setStatus('mandatory')
oaLaser3TecRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 144), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3TecRelHi.setStatus('mandatory')
oaLaser3TecRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 145), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3TecRelHiHi.setStatus('mandatory')
oaLaser3TemperatureLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 146), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3TemperatureLoLo.setStatus('mandatory')
oaLaser3TemperatureLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 147), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3TemperatureLo.setStatus('mandatory')
oaLaser3TemperatureValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 148), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3TemperatureValue.setStatus('mandatory')
oaLaser3TemperatureHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 149), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3TemperatureHi.setStatus('mandatory')
oaLaser3TemperatureHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 150), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3TemperatureHiHi.setStatus('mandatory')
oaLaser3VoltageLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 151), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3VoltageLoLo.setStatus('optional')
oaLaser3VoltageLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 152), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3VoltageLo.setStatus('optional')
oaLaser3VoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 153), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3VoltageValue.setStatus('optional')
oaLaser3VoltageHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 154), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3VoltageHi.setStatus('optional')
oaLaser3VoltageHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 155), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser3VoltageHiHi.setStatus('optional')
oaLaser4CurrentRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 161), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4CurrentRelLoLo.setStatus('mandatory')
oaLaser4CurrentRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 162), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4CurrentRelLo.setStatus('mandatory')
oaLaser4CurrentRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 163), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4CurrentRelValue.setStatus('mandatory')
oaLaser4CurrentRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 164), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4CurrentRelHi.setStatus('mandatory')
oaLaser4CurrentRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 165), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4CurrentRelHiHi.setStatus('mandatory')
oaLaser4TecRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 166), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4TecRelLoLo.setStatus('mandatory')
oaLaser4TecRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 167), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4TecRelLo.setStatus('mandatory')
oaLaser4TecRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 168), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4TecRelValue.setStatus('mandatory')
oaLaser4TecRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 169), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4TecRelHi.setStatus('mandatory')
oaLaser4TecRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 170), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4TecRelHiHi.setStatus('mandatory')
oaLaser4TemperatureLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 171), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4TemperatureLoLo.setStatus('mandatory')
oaLaser4TemperatureLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 172), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4TemperatureLo.setStatus('mandatory')
oaLaser4TemperatureValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 173), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4TemperatureValue.setStatus('mandatory')
oaLaser4TemperatureHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 174), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4TemperatureHi.setStatus('mandatory')
oaLaser4TemperatureHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 175), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4TemperatureHiHi.setStatus('mandatory')
oaLaser4VoltageLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 176), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4VoltageLoLo.setStatus('optional')
oaLaser4VoltageLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 177), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4VoltageLo.setStatus('optional')
oaLaser4VoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 178), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4VoltageValue.setStatus('optional')
oaLaser4VoltageHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 179), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4VoltageHi.setStatus('optional')
oaLaser4VoltageHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 180), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser4VoltageHiHi.setStatus('optional')
oaLaser5CurrentRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 186), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5CurrentRelLoLo.setStatus('mandatory')
oaLaser5CurrentRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 187), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5CurrentRelLo.setStatus('mandatory')
oaLaser5CurrentRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 188), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5CurrentRelValue.setStatus('mandatory')
oaLaser5CurrentRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 189), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5CurrentRelHi.setStatus('mandatory')
oaLaser5CurrentRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 190), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5CurrentRelHiHi.setStatus('mandatory')
oaLaser5TecRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 191), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5TecRelLoLo.setStatus('mandatory')
oaLaser5TecRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 192), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5TecRelLo.setStatus('mandatory')
oaLaser5TecRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 193), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5TecRelValue.setStatus('mandatory')
oaLaser5TecRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 194), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5TecRelHi.setStatus('mandatory')
oaLaser5TecRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 195), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5TecRelHiHi.setStatus('mandatory')
oaLaser5TemperatureLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 196), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5TemperatureLoLo.setStatus('mandatory')
oaLaser5TemperatureLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 197), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5TemperatureLo.setStatus('mandatory')
oaLaser5TemperatureValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 198), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5TemperatureValue.setStatus('mandatory')
oaLaser5TemperatureHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 199), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5TemperatureHi.setStatus('mandatory')
oaLaser5TemperatureHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 200), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5TemperatureHiHi.setStatus('mandatory')
oaLaser5VoltageLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 201), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5VoltageLoLo.setStatus('optional')
oaLaser5VoltageLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5VoltageLo.setStatus('optional')
oaLaser5VoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5VoltageValue.setStatus('optional')
oaLaser5VoltageHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5VoltageHi.setStatus('optional')
oaLaser5VoltageHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 205), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser5VoltageHiHi.setStatus('optional')
oaLaser6CurrentRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 211), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6CurrentRelLoLo.setStatus('mandatory')
oaLaser6CurrentRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 212), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6CurrentRelLo.setStatus('mandatory')
oaLaser6CurrentRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 213), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6CurrentRelValue.setStatus('mandatory')
oaLaser6CurrentRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 214), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6CurrentRelHi.setStatus('mandatory')
oaLaser6CurrentRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 215), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6CurrentRelHiHi.setStatus('mandatory')
oaLaser6TecRelLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 216), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6TecRelLoLo.setStatus('mandatory')
oaLaser6TecRelLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 217), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6TecRelLo.setStatus('mandatory')
oaLaser6TecRelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 218), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6TecRelValue.setStatus('mandatory')
oaLaser6TecRelHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 219), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6TecRelHi.setStatus('mandatory')
oaLaser6TecRelHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 220), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6TecRelHiHi.setStatus('mandatory')
oaLaser6TemperatureLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 221), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6TemperatureLoLo.setStatus('mandatory')
oaLaser6TemperatureLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 222), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6TemperatureLo.setStatus('mandatory')
oaLaser6TemperatureValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 223), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6TemperatureValue.setStatus('mandatory')
oaLaser6TemperatureHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 224), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6TemperatureHi.setStatus('mandatory')
oaLaser6TemperatureHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 225), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6TemperatureHiHi.setStatus('mandatory')
oaLaser6VoltageLoLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 226), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6VoltageLoLo.setStatus('optional')
oaLaser6VoltageLo = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 227), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6VoltageLo.setStatus('optional')
oaLaser6VoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 228), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6VoltageValue.setStatus('optional')
oaLaser6VoltageHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 229), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6VoltageHi.setStatus('optional')
oaLaser6VoltageHiHi = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 5, 1, 1, 230), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaLaser6VoltageHiHi.setStatus('optional')
oaStatesTable = MibTable((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1), )
if mibBuilder.loadTexts: oaStatesTable.setStatus('mandatory')
oaStatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1), ).setIndexNames((0, "BKTEL-HFC862-OA-V01-MIB", "oaNESlot"))
if mibBuilder.loadTexts: oaStatesEntry.setStatus('mandatory')
oaStatesBootloader = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 1), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesBootloader.setStatus('mandatory')
oaStatesCommLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 2), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesCommLoss.setStatus('mandatory')
oaStatesInitializing = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 3), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesInitializing.setStatus('mandatory')
oaStatesLaserShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 4), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesLaserShutdown.setStatus('mandatory')
oaStatesTemperatureLow = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 5), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesTemperatureLow.setStatus('mandatory')
oaStatesTemperatureHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 6), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesTemperatureHigh.setStatus('mandatory')
oaStatesSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 7), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesSystem.setStatus('mandatory')
oaStatesInputPwrLow = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 8), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesInputPwrLow.setStatus('mandatory')
oaStatesInputPwrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 9), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesInputPwrHigh.setStatus('mandatory')
oaStatesOutputPwrOrGainLow = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 10), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesOutputPwrOrGainLow.setStatus('mandatory')
oaStatesOutputPwrOrGainHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 11), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesOutputPwrOrGainHigh.setStatus('mandatory')
oaStatesReturnLossLow = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 12), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesReturnLossLow.setStatus('mandatory')
oaStatesReturnLossHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 13), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesReturnLossHigh.setStatus('mandatory')
oaStatesRedundancySwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 14), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesRedundancySwitch.setStatus('mandatory')
oaStatesInputVoltageLow = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 15), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesInputVoltageLow.setStatus('mandatory')
oaStatesInputVoltageHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 16), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesInputVoltageHigh.setStatus('mandatory')
oaStatesPowerSupplyLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 25), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesPowerSupplyLeft.setStatus('mandatory')
oaStatesPowerSupplyRight = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 26), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesPowerSupplyRight.setStatus('mandatory')
oaStatesFanLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 27), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesFanLeft.setStatus('mandatory')
oaStatesFanRight = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 28), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesFanRight.setStatus('mandatory')
oaStatesInternalVoltageLow = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 29), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesInternalVoltageLow.setStatus('mandatory')
oaStatesInternalVoltageHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 30), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesInternalVoltageHigh.setStatus('mandatory')
oaStatesLaserCurrentLow = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 31), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesLaserCurrentLow.setStatus('mandatory')
oaStatesLaserCurrentHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 32), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesLaserCurrentHigh.setStatus('mandatory')
oaStatesTecCurrentLow = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 33), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesTecCurrentLow.setStatus('mandatory')
oaStatesTecCurrentHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 34), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesTecCurrentHigh.setStatus('mandatory')
oaStatesLaserTempLow = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 35), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesLaserTempLow.setStatus('mandatory')
oaStatesLaserTempHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 36), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesLaserTempHigh.setStatus('mandatory')
oaStatesLaserVoltageLow = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 37), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesLaserVoltageLow.setStatus('mandatory')
oaStatesLaserVoltageHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 38), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesLaserVoltageHigh.setStatus('mandatory')
oaStatesRamanBackReflectionRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 39), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesRamanBackReflectionRatio.setStatus('mandatory')
oaStatesRamanOscSignalMissing = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 2, 1, 1, 40), PerceivedSeverityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaStatesRamanOscSignalMissing.setStatus('mandatory')
oaControlTable = MibTable((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 4, 1), )
if mibBuilder.loadTexts: oaControlTable.setStatus('mandatory')
oaControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 4, 1, 1), ).setIndexNames((0, "BKTEL-HFC862-OA-V01-MIB", "oaNESlot"))
if mibBuilder.loadTexts: oaControlEntry.setStatus('mandatory')
oaControlLaserShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 4, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaControlLaserShutdown.setStatus('mandatory')
oaControlReset = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 4, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaControlReset.setStatus('mandatory')
oaControlModuleLedBlink = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 4, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaControlModuleLedBlink.setStatus('mandatory')
oaControlSbsEvaluationStart = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 4, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaControlSbsEvaluationStart.setStatus('mandatory')
oaConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 3, 1), )
if mibBuilder.loadTexts: oaConfigurationTable.setStatus('mandatory')
oaConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 3, 1, 1), ).setIndexNames((0, "BKTEL-HFC862-OA-V01-MIB", "oaNESlot"))
if mibBuilder.loadTexts: oaConfigurationEntry.setStatus('mandatory')
oaConfigNESlotWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 3, 1, 1, 1), NESlotWriteValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaConfigNESlotWrite.setStatus('optional')
oaConfigRegulationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 3, 1, 1, 2), RegulationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaConfigRegulationMode.setStatus('mandatory')
oaConfigOutputPwrOrGainAdjust = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 3, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaConfigOutputPwrOrGainAdjust.setStatus('mandatory')
oaConfigModeExtIO = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 3, 1, 1, 4), ExtIOmode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaConfigModeExtIO.setStatus('mandatory')
oaConfigMaskExtIO = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 3, 1, 1, 5), ExtIOmask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaConfigMaskExtIO.setStatus('mandatory')
oaConfigSbsEvaluationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 3, 1, 1, 6), SbsEvaluationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oaConfigSbsEvaluationMode.setStatus('mandatory')
oaDisplayTable = MibTable((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1), )
if mibBuilder.loadTexts: oaDisplayTable.setStatus('mandatory')
oaDisplayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1), ).setIndexNames((0, "BKTEL-HFC862-OA-V01-MIB", "oaNESlot"))
if mibBuilder.loadTexts: oaDisplayEntry.setStatus('mandatory')
oaDisplayNumberOfLasers = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayNumberOfLasers.setStatus('mandatory')
oaDisplayNumberOfInternalVoltages = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayNumberOfInternalVoltages.setStatus('optional')
oaDisplayExtIOSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayExtIOSupported.setStatus('mandatory')
oaDisplaySbsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplaySbsSupported.setStatus('mandatory')
oaDisplayReturnLossSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayReturnLossSupported.setStatus('mandatory')
oaDisplaySbsEvaluatedThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplaySbsEvaluatedThreshold.setStatus('mandatory')
oaDisplaySbsLastEvaluationState = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 7), SbsEvaluationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplaySbsLastEvaluationState.setStatus('mandatory')
oaDisplaySbsLastEvaluationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplaySbsLastEvaluationTime.setStatus('mandatory')
oaDisplayOutputPwrOrGainNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayOutputPwrOrGainNominal.setStatus('mandatory')
oaDisplayOutputPwrOrGainAdjusted = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayOutputPwrOrGainAdjusted.setStatus('mandatory')
oaDisplayInputVoltageNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayInputVoltageNominal.setStatus('optional')
oaDisplayInternalVoltage1Nominal = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayInternalVoltage1Nominal.setStatus('optional')
oaDisplayInternalVoltage2Nominal = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayInternalVoltage2Nominal.setStatus('optional')
oaDisplayInternalVoltage3Nominal = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayInternalVoltage3Nominal.setStatus('optional')
oaDisplayLaser1VoltageNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser1VoltageNominal.setStatus('optional')
oaDisplayLaser2VoltageNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser2VoltageNominal.setStatus('optional')
oaDisplayLaser3VoltageNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser3VoltageNominal.setStatus('optional')
oaDisplayLaser4VoltageNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser4VoltageNominal.setStatus('optional')
oaDisplayLaser5VoltageNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser5VoltageNominal.setStatus('optional')
oaDisplayLaser6VoltageNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser6VoltageNominal.setStatus('optional')
oaDisplayLaser1PumpPowerRel = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser1PumpPowerRel.setStatus('mandatory')
oaDisplayLaser2PumpPowerRel = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser2PumpPowerRel.setStatus('mandatory')
oaDisplayLaser3PumpPowerRel = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser3PumpPowerRel.setStatus('mandatory')
oaDisplayLaser4PumpPowerRel = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser4PumpPowerRel.setStatus('mandatory')
oaDisplayLaser5PumpPowerRel = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser5PumpPowerRel.setStatus('mandatory')
oaDisplayLaser6PumpPowerRel = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser6PumpPowerRel.setStatus('mandatory')
oaDisplayLaser1FeaturesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 40), LaserFeatures()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser1FeaturesSupported.setStatus('mandatory')
oaDisplayLaser2FeaturesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 41), LaserFeatures()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser2FeaturesSupported.setStatus('mandatory')
oaDisplayLaser3FeaturesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 42), LaserFeatures()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser3FeaturesSupported.setStatus('mandatory')
oaDisplayLaser4FeaturesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 43), LaserFeatures()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser4FeaturesSupported.setStatus('mandatory')
oaDisplayLaser5FeaturesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 44), LaserFeatures()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser5FeaturesSupported.setStatus('mandatory')
oaDisplayLaser6FeaturesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 45), LaserFeatures()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayLaser6FeaturesSupported.setStatus('mandatory')
oaDisplayAmplifierIsRamanType = MibTableColumn((1, 3, 6, 1, 4, 1, 7501, 1, 2, 116, 6, 1, 1, 50), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDisplayAmplifierIsRamanType.setStatus('mandatory')
mibBuilder.exportSymbols("BKTEL-HFC862-OA-V01-MIB", oaLaser1VoltageHiHi=oaLaser1VoltageHiHi, oaLaser6TemperatureLoLo=oaLaser6TemperatureLoLo, oaLaser4TemperatureHi=oaLaser4TemperatureHi, oa=oa, oaControlLaserShutdown=oaControlLaserShutdown, oaCommonTable=oaCommonTable, oaStatesTemperatureHigh=oaStatesTemperatureHigh, oaOutputPwrOrGainHi=oaOutputPwrOrGainHi, oaStatesOutputPwrOrGainHigh=oaStatesOutputPwrOrGainHigh, oaConfigOutputPwrOrGainAdjust=oaConfigOutputPwrOrGainAdjust, oaLaser4CurrentRelHiHi=oaLaser4CurrentRelHiHi, oaDisplayLaser4FeaturesSupported=oaDisplayLaser4FeaturesSupported, oaLaser3TecRelLoLo=oaLaser3TecRelLoLo, oaLaser1TecRelHi=oaLaser1TecRelHi, oaInputVoltageHi=oaInputVoltageHi, oaLaser6CurrentRelLoLo=oaLaser6CurrentRelLoLo, oaCommonNumberOfModules=oaCommonNumberOfModules, oaDisplayLaser1FeaturesSupported=oaDisplayLaser1FeaturesSupported, oaLaser1TemperatureValue=oaLaser1TemperatureValue, oaLaser1CurrentRelHiHi=oaLaser1CurrentRelHiHi, oaInternalVoltage3Hi=oaInternalVoltage3Hi, oaMeasuringValuesEntry=oaMeasuringValuesEntry, oaLaser4TemperatureHiHi=oaLaser4TemperatureHiHi, oaDisplayInternalVoltage3Nominal=oaDisplayInternalVoltage3Nominal, oaLaser5VoltageHi=oaLaser5VoltageHi, oaStatesRedundancySwitch=oaStatesRedundancySwitch, oaInternalVoltage2LoLo=oaInternalVoltage2LoLo, oaLaser3TemperatureValue=oaLaser3TemperatureValue, oaInputPowerHi=oaInputPowerHi, oaLaser2TemperatureHi=oaLaser2TemperatureHi, oaInternalVoltage1Value=oaInternalVoltage1Value, oaStatesTecCurrentLow=oaStatesTecCurrentLow, oaTemperatureLo=oaTemperatureLo, oaLaser6TecRelLoLo=oaLaser6TecRelLoLo, oaConfigSbsEvaluationMode=oaConfigSbsEvaluationMode, oaInternalVoltage1Lo=oaInternalVoltage1Lo, oaLaser5VoltageHiHi=oaLaser5VoltageHiHi, oaStatesInternalVoltageHigh=oaStatesInternalVoltageHigh, oaDisplayReturnLossSupported=oaDisplayReturnLossSupported, oaLaser4TemperatureLoLo=oaLaser4TemperatureLoLo, oaLaser1TecRelLo=oaLaser1TecRelLo, oaTemperatureHi=oaTemperatureHi, oaLaser3TecRelValue=oaLaser3TecRelValue, oaInternalVoltage2Hi=oaInternalVoltage2Hi, oaDisplayLaser5VoltageNominal=oaDisplayLaser5VoltageNominal, oaLaser4TemperatureValue=oaLaser4TemperatureValue, oaInternalVoltage1LoLo=oaInternalVoltage1LoLo, oaMeasuringValuesTable=oaMeasuringValuesTable, oaLaser4TecRelLo=oaLaser4TecRelLo, oaLaser1VoltageValue=oaLaser1VoltageValue, oaLaser5CurrentRelValue=oaLaser5CurrentRelValue, oaControl=oaControl, ExtIOmask=ExtIOmask, oaCommonFirmwareId=oaCommonFirmwareId, oaLaser3TecRelLo=oaLaser3TecRelLo, oaLaser3TemperatureHi=oaLaser3TemperatureHi, SbsEvaluationMode=SbsEvaluationMode, oaInternalVoltage3LoLo=oaInternalVoltage3LoLo, oaLaser2TemperatureLoLo=oaLaser2TemperatureLoLo, ExtIOmode=ExtIOmode, oaLaser3TecRelHi=oaLaser3TecRelHi, oaTemperatureValue=oaTemperatureValue, oaLaser6CurrentRelLo=oaLaser6CurrentRelLo, oaControlEntry=oaControlEntry, oaConfigMaskExtIO=oaConfigMaskExtIO, oaLaser4VoltageValue=oaLaser4VoltageValue, oaInputVoltageLo=oaInputVoltageLo, oaCommonDescr=oaCommonDescr, oaLaser6TecRelLo=oaLaser6TecRelLo, oaLaser2TecRelLoLo=oaLaser2TecRelLoLo, oaLaser2TecRelHiHi=oaLaser2TecRelHiHi, oaLaser5VoltageValue=oaLaser5VoltageValue, oaStatesReturnLossLow=oaStatesReturnLossLow, oaLaser5TecRelLoLo=oaLaser5TecRelLoLo, oaNESlot=oaNESlot, oaDisplayNumberOfLasers=oaDisplayNumberOfLasers, oaDisplayInternalVoltage1Nominal=oaDisplayInternalVoltage1Nominal, oaLaser6CurrentRelHiHi=oaLaser6CurrentRelHiHi, oaControlTable=oaControlTable, oaLaser2CurrentRelLo=oaLaser2CurrentRelLo, oaDisplayLaser6VoltageNominal=oaDisplayLaser6VoltageNominal, oaLaser2CurrentRelHi=oaLaser2CurrentRelHi, oaStatesLaserTempHigh=oaStatesLaserTempHigh, oaDisplayInputVoltageNominal=oaDisplayInputVoltageNominal, oaLaser1TemperatureHi=oaLaser1TemperatureHi, oaInternalVoltage2Lo=oaInternalVoltage2Lo, oaLaser2VoltageLo=oaLaser2VoltageLo, oaDisplaySbsLastEvaluationTime=oaDisplaySbsLastEvaluationTime, oaDisplayInternalVoltage2Nominal=oaDisplayInternalVoltage2Nominal, oaLaser1VoltageLoLo=oaLaser1VoltageLoLo, oaDisplayLaser5PumpPowerRel=oaDisplayLaser5PumpPowerRel, oaLaser3TemperatureHiHi=oaLaser3TemperatureHiHi, oaInternalVoltage1HiHi=oaInternalVoltage1HiHi, oaStatesInputPwrHigh=oaStatesInputPwrHigh, oaLaser6TecRelValue=oaLaser6TecRelValue, oaStatesPowerSupplyLeft=oaStatesPowerSupplyLeft, oaStatesLaserCurrentHigh=oaStatesLaserCurrentHigh, oaControlSbsEvaluationStart=oaControlSbsEvaluationStart, oaLaser1TemperatureLoLo=oaLaser1TemperatureLoLo, oaDisplayExtIOSupported=oaDisplayExtIOSupported, oaLaser6TemperatureLo=oaLaser6TemperatureLo, oaStatesInitializing=oaStatesInitializing, oaDisplay=oaDisplay, oaCommonModuleWidth=oaCommonModuleWidth, oaLaser6CurrentRelHi=oaLaser6CurrentRelHi, oaDisplayLaser1VoltageNominal=oaDisplayLaser1VoltageNominal, oaDisplayLaser2FeaturesSupported=oaDisplayLaser2FeaturesSupported, oaOutputPwrOrGainValue=oaOutputPwrOrGainValue, oaDisplayLaser6FeaturesSupported=oaDisplayLaser6FeaturesSupported, oaConfigurationEntry=oaConfigurationEntry, oaDisplayLaser3PumpPowerRel=oaDisplayLaser3PumpPowerRel, oaLaser5TecRelHiHi=oaLaser5TecRelHiHi, oaDisplayLaser2VoltageNominal=oaDisplayLaser2VoltageNominal, oaLaser2CurrentRelValue=oaLaser2CurrentRelValue, oaInputPowerLo=oaInputPowerLo, oaLaser2TecRelLo=oaLaser2TecRelLo, oaLaser2TemperatureLo=oaLaser2TemperatureLo, oaDisplayLaser2PumpPowerRel=oaDisplayLaser2PumpPowerRel, oaInternalVoltage1Hi=oaInternalVoltage1Hi, oaConfigModeExtIO=oaConfigModeExtIO, oaInputPowerHiHi=oaInputPowerHiHi, NESlotWriteValue=NESlotWriteValue, oaDisplayEntry=oaDisplayEntry, oaLaser4CurrentRelLo=oaLaser4CurrentRelLo, oaLaser5TemperatureHi=oaLaser5TemperatureHi, oaStatesTemperatureLow=oaStatesTemperatureLow, oaLaser5VoltageLoLo=oaLaser5VoltageLoLo, oaDisplaySbsSupported=oaDisplaySbsSupported, oaStatesInternalVoltageLow=oaStatesInternalVoltageLow, oaLaser3TemperatureLoLo=oaLaser3TemperatureLoLo, oaStatesFanLeft=oaStatesFanLeft, oaLaser2TecRelHi=oaLaser2TecRelHi, oaStatesLaserVoltageLow=oaStatesLaserVoltageLow, oaStatesLaserVoltageHigh=oaStatesLaserVoltageHigh, oaLaser5VoltageLo=oaLaser5VoltageLo, oaReturnLossValue=oaReturnLossValue, oaLaser4CurrentRelLoLo=oaLaser4CurrentRelLoLo, oaStatesLaserCurrentLow=oaStatesLaserCurrentLow, oaInternalVoltage3Lo=oaInternalVoltage3Lo, oaStatesInputPwrLow=oaStatesInputPwrLow, oaLaser4TecRelValue=oaLaser4TecRelValue, oaLaser6TemperatureHi=oaLaser6TemperatureHi, oaStatesTecCurrentHigh=oaStatesTecCurrentHigh, oaDisplayLaser1PumpPowerRel=oaDisplayLaser1PumpPowerRel, oaOutputPwrOrGainLoLo=oaOutputPwrOrGainLoLo, oaLaser3CurrentRelHiHi=oaLaser3CurrentRelHiHi, oaLaser6VoltageValue=oaLaser6VoltageValue, oaInputVoltageLoLo=oaInputVoltageLoLo, oaLaser2CurrentRelHiHi=oaLaser2CurrentRelHiHi, oaLaser3CurrentRelValue=oaLaser3CurrentRelValue, oaLaser2VoltageHiHi=oaLaser2VoltageHiHi, oaControlReset=oaControlReset, oaLaser6TemperatureValue=oaLaser6TemperatureValue, oaLaser1CurrentRelValue=oaLaser1CurrentRelValue, oaLaser3TecRelHiHi=oaLaser3TecRelHiHi, oaLaser3TemperatureLo=oaLaser3TemperatureLo, oaLaser3VoltageLoLo=oaLaser3VoltageLoLo, oaDisplaySbsLastEvaluationState=oaDisplaySbsLastEvaluationState, oaLaser1TecRelHiHi=oaLaser1TecRelHiHi, oaDisplayLaser3VoltageNominal=oaDisplayLaser3VoltageNominal, oaLaser5TecRelHi=oaLaser5TecRelHi, oaInputVoltageHiHi=oaInputVoltageHiHi, oaLaser1CurrentRelLo=oaLaser1CurrentRelLo, oaLaser1TemperatureHiHi=oaLaser1TemperatureHiHi, oaInternalVoltage3Value=oaInternalVoltage3Value, oaLaser5TecRelValue=oaLaser5TecRelValue, oaLaser5CurrentRelLo=oaLaser5CurrentRelLo, oaStatesRamanOscSignalMissing=oaStatesRamanOscSignalMissing, oaDisplayLaser4PumpPowerRel=oaDisplayLaser4PumpPowerRel, oaLaser1VoltageLo=oaLaser1VoltageLo, oaDisplayLaser6PumpPowerRel=oaDisplayLaser6PumpPowerRel, oaLaser3CurrentRelLoLo=oaLaser3CurrentRelLoLo, oaLaser5CurrentRelLoLo=oaLaser5CurrentRelLoLo, oaLaser4VoltageLoLo=oaLaser4VoltageLoLo, oaStatesBootloader=oaStatesBootloader, oaLaser1VoltageHi=oaLaser1VoltageHi, oaLaser4VoltageHiHi=oaLaser4VoltageHiHi, oaLaser4TemperatureLo=oaLaser4TemperatureLo, oaLaser5TemperatureLoLo=oaLaser5TemperatureLoLo, oaLaser4TecRelLoLo=oaLaser4TecRelLoLo, oaDisplaySbsEvaluatedThreshold=oaDisplaySbsEvaluatedThreshold, oaDisplayLaser4VoltageNominal=oaDisplayLaser4VoltageNominal, oaStatesInputVoltageHigh=oaStatesInputVoltageHigh, oaLaser3VoltageHi=oaLaser3VoltageHi, oaLaser1TecRelValue=oaLaser1TecRelValue, oaStatesFanRight=oaStatesFanRight, oaDisplayLaser3FeaturesSupported=oaDisplayLaser3FeaturesSupported, oaLaser1CurrentRelHi=oaLaser1CurrentRelHi, oaOutputPwrOrGainHiHi=oaOutputPwrOrGainHiHi, oaReturnLossHiHi=oaReturnLossHiHi, oaLaser6TecRelHi=oaLaser6TecRelHi, oaStatesLaserShutdown=oaStatesLaserShutdown, oaLaser3VoltageHiHi=oaLaser3VoltageHiHi, oaLaser4CurrentRelHi=oaLaser4CurrentRelHi, oaLaser1TemperatureLo=oaLaser1TemperatureLo, oaLaser4VoltageLo=oaLaser4VoltageLo, oaLaser2VoltageLoLo=oaLaser2VoltageLoLo, oaLaser3VoltageLo=oaLaser3VoltageLo, oaLaser2TemperatureValue=oaLaser2TemperatureValue, oaConfigNESlotWrite=oaConfigNESlotWrite, oaLaser5CurrentRelHiHi=oaLaser5CurrentRelHiHi, oaCommon=oaCommon, oaLaser2TecRelValue=oaLaser2TecRelValue, oaOutputPwrOrGainLo=oaOutputPwrOrGainLo, oaLaser1TecRelLoLo=oaLaser1TecRelLoLo, oaLaser5TecRelLo=oaLaser5TecRelLo, oaLaser6VoltageHiHi=oaLaser6VoltageHiHi, RegulationMode=RegulationMode, oaConfiguration=oaConfiguration, oaLaser3CurrentRelHi=oaLaser3CurrentRelHi, oaStatesRamanBackReflectionRatio=oaStatesRamanBackReflectionRatio, oaDisplayTable=oaDisplayTable, oaStates=oaStates, oaCommonType=oaCommonType, oaInputPowerValue=oaInputPowerValue, oaStatesSystem=oaStatesSystem, oaLaser6VoltageHi=oaLaser6VoltageHi, oaConfigurationTable=oaConfigurationTable, oaLaser5TemperatureLo=oaLaser5TemperatureLo, oaLaser4VoltageHi=oaLaser4VoltageHi, oaReturnLossHi=oaReturnLossHi, oaStatesCommLoss=oaStatesCommLoss, oaLaser5CurrentRelHi=oaLaser5CurrentRelHi, oaStatesEntry=oaStatesEntry, oaReturnLossLo=oaReturnLossLo, oaTemperatureHiHi=oaTemperatureHiHi, oaLaser6VoltageLoLo=oaLaser6VoltageLoLo, SbsEvaluationState=SbsEvaluationState, oaInternalVoltage3HiHi=oaInternalVoltage3HiHi, oaLaser6VoltageLo=oaLaser6VoltageLo, oaControlModuleLedBlink=oaControlModuleLedBlink, oaTemperatureLoLo=oaTemperatureLoLo, oaMeasuringValues=oaMeasuringValues, oaLaser4TecRelHi=oaLaser4TecRelHi, oaLaser2TemperatureHiHi=oaLaser2TemperatureHiHi, oaInternalVoltage2Value=oaInternalVoltage2Value, oaInternalVoltage2HiHi=oaInternalVoltage2HiHi, oaLaser1CurrentRelLoLo=oaLaser1CurrentRelLoLo, oaLaser3VoltageValue=oaLaser3VoltageValue, oaLaser4CurrentRelValue=oaLaser4CurrentRelValue, oaStatesReturnLossHigh=oaStatesReturnLossHigh, oaStatesInputVoltageLow=oaStatesInputVoltageLow, oaCommonEntry=oaCommonEntry, LaserFeatures=LaserFeatures, oaLaser4TecRelHiHi=oaLaser4TecRelHiHi, oaLaser5TemperatureHiHi=oaLaser5TemperatureHiHi, oaDisplayOutputPwrOrGainAdjusted=oaDisplayOutputPwrOrGainAdjusted, oaDisplayLaser5FeaturesSupported=oaDisplayLaser5FeaturesSupported, oaStatesOutputPwrOrGainLow=oaStatesOutputPwrOrGainLow, oaInputVoltageValue=oaInputVoltageValue, oaStatesPowerSupplyRight=oaStatesPowerSupplyRight, oaStatesTable=oaStatesTable, oaLaser3CurrentRelLo=oaLaser3CurrentRelLo, oaInputPowerLoLo=oaInputPowerLoLo)
mibBuilder.exportSymbols("BKTEL-HFC862-OA-V01-MIB", oaLaser5TemperatureValue=oaLaser5TemperatureValue, oaLaser6TemperatureHiHi=oaLaser6TemperatureHiHi, oaReturnLossLoLo=oaReturnLossLoLo, oaLaser2CurrentRelLoLo=oaLaser2CurrentRelLoLo, oaDisplayOutputPwrOrGainNominal=oaDisplayOutputPwrOrGainNominal, oaStatesLaserTempLow=oaStatesLaserTempLow, oaLaser6TecRelHiHi=oaLaser6TecRelHiHi, oaDisplayAmplifierIsRamanType=oaDisplayAmplifierIsRamanType, oaLaser2VoltageValue=oaLaser2VoltageValue, oaLaser6CurrentRelValue=oaLaser6CurrentRelValue, oaLaser2VoltageHi=oaLaser2VoltageHi, oaDisplayNumberOfInternalVoltages=oaDisplayNumberOfInternalVoltages, oaConfigRegulationMode=oaConfigRegulationMode)
