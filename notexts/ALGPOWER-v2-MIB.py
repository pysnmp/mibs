#
# PySNMP MIB module ALGPOWER-v2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/algcom/ALGPOWER-v2
# Produced by pysmi-1.1.12 at Wed Jul  3 09:52:50 2024
# On host fv-az530-296 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, enterprises, Bits, NotificationType, Integer32, ModuleIdentity, Counter64, Unsigned32, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "enterprises", "Bits", "NotificationType", "Integer32", "ModuleIdentity", "Counter64", "Unsigned32", "Counter32", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
algcom = MibIdentifier((1, 3, 6, 1, 4, 1, 49136))
upsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 49136, 1))
output = MibIdentifier((1, 3, 6, 1, 4, 1, 49136, 1, 1))
battery = MibIdentifier((1, 3, 6, 1, 4, 1, 49136, 1, 2))
input = MibIdentifier((1, 3, 6, 1, 4, 1, 49136, 1, 3))
temperature = MibIdentifier((1, 3, 6, 1, 4, 1, 49136, 1, 4))
watchdog = MibIdentifier((1, 3, 6, 1, 4, 1, 49136, 1, 5))
supply = MibIdentifier((1, 3, 6, 1, 4, 1, 49136, 1, 6))
installation = MibIdentifier((1, 3, 6, 1, 4, 1, 49136, 1, 7))
bat_tst = MibIdentifier((1, 3, 6, 1, 4, 1, 49136, 1, 8)).setLabel("bat-tst")
outputVoltage = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outputVoltage.setStatus('mandatory')
outputCurrent = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outputCurrent.setStatus('mandatory')
oidNotUsed0 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oidNotUsed0.setStatus('mandatory')
oidNotUsed1 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oidNotUsed1.setStatus('mandatory')
batteryVoltage = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryVoltage.setStatus('mandatory')
batteryCurrent = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryCurrent.setStatus('mandatory')
chargerStatus = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chargerStatus.setStatus('mandatory')
alarmOnBattery = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmOnBattery.setStatus('mandatory')
acFail = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acFail.setStatus('mandatory')
batteryCharging = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryCharging.setStatus('mandatory')
batteryDischarging = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryDischarging.setStatus('mandatory')
overheat = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: overheat.setStatus('mandatory')
overload = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: overload.setStatus('mandatory')
fanAfail = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanAfail.setStatus('mandatory')
fanBfail = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanBfail.setStatus('mandatory')
oidNotUsed2 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oidNotUsed2.setStatus('mandatory')
oidNotUsed3 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oidNotUsed3.setStatus('mandatory')
upTime = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upTime.setStatus('mandatory')
innerTemperature = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: innerTemperature.setStatus('mandatory')
outerTemperature = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outerTemperature.setStatus('mandatory')
heatSinkTemperature = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: heatSinkTemperature.setStatus('mandatory')
watchdogPing1 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogPing1.setStatus('mandatory')
watchdogPing2 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogPing2.setStatus('mandatory')
watchdogPing3 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogPing3.setStatus('mandatory')
watchdogPing4 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogPing4.setStatus('mandatory')
watchdogPing5 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogPing5.setStatus('mandatory')
watchdogPing6 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogPing6.setStatus('mandatory')
watchdogPing7 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogPing7.setStatus('mandatory')
watchdogPing8 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogPing8.setStatus('mandatory')
watchdogPing9 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 5, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogPing9.setStatus('mandatory')
watchdogPing10 = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 5, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogPing10.setStatus('mandatory')
supplyVoltage = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: supplyVoltage.setStatus('mandatory')
popName = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 7, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(30, 30)).setFixedLength(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: popName.setStatus('mandatory')
facilityAddr = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 7, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityAddr.setStatus('mandatory')
facilityCity = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 7, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(30, 30)).setFixedLength(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityCity.setStatus('mandatory')
instDate = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 7, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: instDate.setStatus('mandatory')
batCapacity = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 7, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batCapacity.setStatus('mandatory')
batBrand = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 7, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(30, 30)).setFixedLength(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: batBrand.setStatus('mandatory')
batInstDate = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 7, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: batInstDate.setStatus('mandatory')
respPers = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 7, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(50, 50)).setFixedLength(50)).setMaxAccess("readonly")
if mibBuilder.loadTexts: respPers.setStatus('mandatory')
btst_date = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 8, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setLabel("btst-date").setMaxAccess("readonly")
if mibBuilder.loadTexts: btst_date.setStatus('mandatory')
btst_status = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 8, 2), Integer32()).setLabel("btst-status").setMaxAccess("readonly")
if mibBuilder.loadTexts: btst_status.setStatus('mandatory')
btst_duration = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 8, 3), Integer32()).setLabel("btst-duration").setMaxAccess("readonly")
if mibBuilder.loadTexts: btst_duration.setStatus('mandatory')
btst_elapsed = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 8, 4), Integer32()).setLabel("btst-elapsed").setMaxAccess("readonly")
if mibBuilder.loadTexts: btst_elapsed.setStatus('mandatory')
btst_volt_i = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 8, 5), Integer32()).setLabel("btst-volt-i").setMaxAccess("readonly")
if mibBuilder.loadTexts: btst_volt_i.setStatus('mandatory')
btst_amp_i = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 8, 6), Integer32()).setLabel("btst-amp-i").setMaxAccess("readonly")
if mibBuilder.loadTexts: btst_amp_i.setStatus('mandatory')
btst_volt_f = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 8, 7), Integer32()).setLabel("btst-volt-f").setMaxAccess("readonly")
if mibBuilder.loadTexts: btst_volt_f.setStatus('mandatory')
btst_amp_f = MibScalar((1, 3, 6, 1, 4, 1, 49136, 1, 8, 8), Integer32()).setLabel("btst-amp-f").setMaxAccess("readonly")
if mibBuilder.loadTexts: btst_amp_f.setStatus('mandatory')
mibBuilder.exportSymbols("ALGPOWER-v2-MIB", btst_elapsed=btst_elapsed, upsObjects=upsObjects, algcom=algcom, watchdogPing5=watchdogPing5, watchdogPing7=watchdogPing7, batteryVoltage=batteryVoltage, instDate=instDate, batInstDate=batInstDate, watchdogPing3=watchdogPing3, battery=battery, innerTemperature=innerTemperature, outerTemperature=outerTemperature, facilityCity=facilityCity, alarmOnBattery=alarmOnBattery, watchdogPing6=watchdogPing6, bat_tst=bat_tst, respPers=respPers, btst_status=btst_status, temperature=temperature, heatSinkTemperature=heatSinkTemperature, btst_amp_f=btst_amp_f, overheat=overheat, batteryCurrent=batteryCurrent, watchdogPing8=watchdogPing8, chargerStatus=chargerStatus, oidNotUsed0=oidNotUsed0, fanAfail=fanAfail, watchdog=watchdog, batBrand=batBrand, outputVoltage=outputVoltage, fanBfail=fanBfail, supplyVoltage=supplyVoltage, facilityAddr=facilityAddr, popName=popName, btst_volt_i=btst_volt_i, btst_amp_i=btst_amp_i, btst_date=btst_date, upTime=upTime, oidNotUsed1=oidNotUsed1, watchdogPing9=watchdogPing9, outputCurrent=outputCurrent, btst_duration=btst_duration, oidNotUsed3=oidNotUsed3, watchdogPing1=watchdogPing1, watchdogPing2=watchdogPing2, btst_volt_f=btst_volt_f, oidNotUsed2=oidNotUsed2, watchdogPing4=watchdogPing4, output=output, batteryDischarging=batteryDischarging, overload=overload, installation=installation, acFail=acFail, watchdogPing10=watchdogPing10, batteryCharging=batteryCharging, batCapacity=batCapacity, supply=supply, input=input)
