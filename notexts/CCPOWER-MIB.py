#
# PySNMP MIB module CCPOWER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/ccpower/CCPOWER-MIB
# Produced by pysmi-1.1.12 at Thu Nov 28 02:55:27 2024
# On host fv-az885-149 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, iso, enterprises, TimeTicks, Counter32, Counter64, MibIdentifier, Bits, ModuleIdentity, IpAddress, NotificationType, Gauge32, Unsigned32, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "enterprises", "TimeTicks", "Counter32", "Counter64", "MibIdentifier", "Bits", "ModuleIdentity", "IpAddress", "NotificationType", "Gauge32", "Unsigned32", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ccpower = MibIdentifier((1, 3, 6, 1, 4, 1, 18642))
dcSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1))
readWriteObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1, 1))
settings = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1))
floatVoltage = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: floatVoltage.setStatus('mandatory')
overloadCurrent = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: overloadCurrent.setStatus('mandatory')
highVoltageAlarm = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: highVoltageAlarm.setStatus('mandatory')
lowVoltageAlarm = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lowVoltageAlarm.setStatus('mandatory')
disconnect1Voltage = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect1Voltage.setStatus('mandatory')
disconnect1Temperature = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect1Temperature.setStatus('mandatory')
disconnect1LoadShedSundayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect1LoadShedSundayOff.setStatus('mandatory')
disconnect1LoadShedMondayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect1LoadShedMondayOff.setStatus('mandatory')
disconnect1LoadShedTuesdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect1LoadShedTuesdayOff.setStatus('mandatory')
disconnect1LoadShedWednesdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect1LoadShedWednesdayOff.setStatus('mandatory')
disconnect1LoadShedThursdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect1LoadShedThursdayOff.setStatus('mandatory')
disconnect1LoadShedFridayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect1LoadShedFridayOff.setStatus('mandatory')
disconnect1LoadShedSaturdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect1LoadShedSaturdayOff.setStatus('mandatory')
disconnect2Voltage = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect2Voltage.setStatus('mandatory')
disconnect2Temperature = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect2Temperature.setStatus('mandatory')
disconnect2LoadShedSundayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect2LoadShedSundayOff.setStatus('mandatory')
disconnect2LoadShedMondayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect2LoadShedMondayOff.setStatus('mandatory')
disconnect2LoadShedTuesdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect2LoadShedTuesdayOff.setStatus('mandatory')
disconnect2LoadShedWednesdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect2LoadShedWednesdayOff.setStatus('mandatory')
disconnect2LoadShedThursdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect2LoadShedThursdayOff.setStatus('mandatory')
disconnect2LoadShedFridayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect2LoadShedFridayOff.setStatus('mandatory')
disconnect2LoadShedSaturdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect2LoadShedSaturdayOff.setStatus('mandatory')
disconnect3Voltage = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect3Voltage.setStatus('mandatory')
disconnect3Temperature = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect3Temperature.setStatus('mandatory')
disconnect3LoadShedSundayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect3LoadShedSundayOff.setStatus('mandatory')
disconnect3LoadShedMondayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect3LoadShedMondayOff.setStatus('mandatory')
disconnect3LoadShedTuesdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect3LoadShedTuesdayOff.setStatus('mandatory')
disconnect3LoadShedWednesdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect3LoadShedWednesdayOff.setStatus('mandatory')
disconnect3LoadShedThursdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect3LoadShedThursdayOff.setStatus('mandatory')
disconnect3LoadShedFridayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect3LoadShedFridayOff.setStatus('mandatory')
disconnect3LoadShedSaturdayOff = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect3LoadShedSaturdayOff.setStatus('mandatory')
reconnect1Voltage = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect1Voltage.setStatus('mandatory')
reconnect1LoadShedSundayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 33), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect1LoadShedSundayOn.setStatus('mandatory')
reconnect1LoadShedMondayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect1LoadShedMondayOn.setStatus('mandatory')
reconnect1LoadShedTuesdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 35), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect1LoadShedTuesdayOn.setStatus('mandatory')
reconnect1LoadShedWednesdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect1LoadShedWednesdayOn.setStatus('mandatory')
reconnect1LoadShedThursdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 37), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect1LoadShedThursdayOn.setStatus('mandatory')
reconnect1LoadShedFridayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 38), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect1LoadShedFridayOn.setStatus('mandatory')
reconnect1LoadShedSaturdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 39), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect1LoadShedSaturdayOn.setStatus('mandatory')
reconnect2Voltage = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 40), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect2Voltage.setStatus('mandatory')
reconnect2LoadShedSundayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 41), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect2LoadShedSundayOn.setStatus('mandatory')
reconnect2LoadShedMondayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 42), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect2LoadShedMondayOn.setStatus('mandatory')
reconnect2LoadShedTuesdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 43), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect2LoadShedTuesdayOn.setStatus('mandatory')
reconnect2LoadShedWednesdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect2LoadShedWednesdayOn.setStatus('mandatory')
reconnect2LoadShedThursdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 45), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect2LoadShedThursdayOn.setStatus('mandatory')
reconnect2LoadShedFridayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 46), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect2LoadShedFridayOn.setStatus('mandatory')
reconnect2LoadShedSaturdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 47), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect2LoadShedSaturdayOn.setStatus('mandatory')
reconnect3Voltage = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 48), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect3Voltage.setStatus('mandatory')
reconnect3LoadShedSundayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 49), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect3LoadShedSundayOn.setStatus('mandatory')
reconnect3LoadShedMondayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 50), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect3LoadShedMondayOn.setStatus('mandatory')
reconnect3LoadShedTuesdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect3LoadShedTuesdayOn.setStatus('mandatory')
reconnect3LoadShedWednesdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect3LoadShedWednesdayOn.setStatus('mandatory')
reconnect3LoadShedThursdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 53), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect3LoadShedThursdayOn.setStatus('mandatory')
reconnect3LoadShedFridayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 54), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect3LoadShedFridayOn.setStatus('mandatory')
reconnect3LoadShedSaturdayOn = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 55), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reconnect3LoadShedSaturdayOn.setStatus('mandatory')
equalizeTime = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 56), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equalizeTime.setStatus('mandatory')
equalizeVoltage = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 57), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equalizeVoltage.setStatus('mandatory')
batteryResistancePercentChange = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 58), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: batteryResistancePercentChange.setStatus('mandatory')
batteryResistanceTestInterval = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 59), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: batteryResistanceTestInterval.setStatus('mandatory')
loadShedTimeControl = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loadShedTimeControl.setStatus('mandatory')
batteryFloatCurrent = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 1, 1, 61), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: batteryFloatCurrent.setStatus('mandatory')
readOnlyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1, 2))
rectifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1, 2, 1))
rectifierFloatVoltage = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rectifierFloatVoltage.setStatus('mandatory')
rectifierLoadCurrent = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rectifierLoadCurrent.setStatus('mandatory')
batteries = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2))
batteryCurrent = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryCurrent.setStatus('mandatory')
batteryTemperature = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryTemperature.setStatus('mandatory')
batteryResistanceReference = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryResistanceReference.setStatus('mandatory')
batteryResistanceReading = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryResistanceReading.setStatus('mandatory')
batteryResistanceChange = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryResistanceChange.setStatus('mandatory')
batteryCycles1 = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryCycles1.setStatus('mandatory')
batteryCycles1to5 = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryCycles1to5.setStatus('mandatory')
batteryCycles5to15 = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryCycles5to15.setStatus('mandatory')
batteryCycles15 = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryCycles15.setStatus('mandatory')
batteryCycles15LastCycleDate = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryCycles15LastCycleDate.setStatus('mandatory')
batteryCycles15LastDuration = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryCycles15LastDuration.setStatus('mandatory')
batteryTestFault = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("abort1", 1), ("abort2", 2), ("abort3", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryTestFault.setStatus('mandatory')
factorySettings = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3))
floatVoltagePresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: floatVoltagePresets.setStatus('mandatory')
highVoltageAlarmPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: highVoltageAlarmPresets.setStatus('mandatory')
lowVoltageAlarmPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowVoltageAlarmPresets.setStatus('mandatory')
disconnect1VoltagePresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect1VoltagePresets.setStatus('mandatory')
disconnect1TemperaturePreset = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect1TemperaturePreset.setStatus('mandatory')
disconnect1LoadShedSundayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect1LoadShedSundayPresets.setStatus('mandatory')
disconnect1LoadShedMondayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect1LoadShedMondayPresets.setStatus('mandatory')
disconnect1LoadShedTuesdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect1LoadShedTuesdayPresets.setStatus('mandatory')
disconnect1LoadShedWednesdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect1LoadShedWednesdayPresets.setStatus('mandatory')
disconnect1LoadShedThursdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect1LoadShedThursdayPresets.setStatus('mandatory')
disconnect1LoadShedFridayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect1LoadShedFridayPresets.setStatus('mandatory')
disconnect1LoadShedSaturdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect1LoadShedSaturdayPresets.setStatus('mandatory')
reconnectVoltage1Presets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: reconnectVoltage1Presets.setStatus('mandatory')
disconnect2VoltagePresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect2VoltagePresets.setStatus('mandatory')
disconnect2TemperaturePreset = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect2TemperaturePreset.setStatus('mandatory')
disconnect2LoadShedSundayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect2LoadShedSundayPresets.setStatus('mandatory')
disconnect2LoadShedMondayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect2LoadShedMondayPresets.setStatus('mandatory')
disconnect2LoadShedTuesdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect2LoadShedTuesdayPresets.setStatus('mandatory')
disconnect2LoadShedWednesdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect2LoadShedWednesdayPresets.setStatus('mandatory')
disconnect2LoadShedThursdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect2LoadShedThursdayPresets.setStatus('mandatory')
disconnect2LoadShedFridayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect2LoadShedFridayPresets.setStatus('mandatory')
disconnect2LoadShedSaturdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect2LoadShedSaturdayPresets.setStatus('mandatory')
reconnect2VoltagePresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: reconnect2VoltagePresets.setStatus('mandatory')
disconnect3VoltagePresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect3VoltagePresets.setStatus('mandatory')
disconnect3TemperaturePreset = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect3TemperaturePreset.setStatus('mandatory')
disconnect3LoadShedSundayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect3LoadShedSundayPresets.setStatus('mandatory')
disconnect3LoadShedMondayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect3LoadShedMondayPresets.setStatus('mandatory')
disconnect3LoadShedTuesdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect3LoadShedTuesdayPresets.setStatus('mandatory')
disconnect3LoadShedWednesdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect3LoadShedWednesdayPresets.setStatus('mandatory')
disconnect3LoadShedThursdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect3LoadShedThursdayPresets.setStatus('mandatory')
disconnect3LoadShedFridayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect3LoadShedFridayPresets.setStatus('mandatory')
disconnect3LoadShedSaturdayPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: disconnect3LoadShedSaturdayPresets.setStatus('mandatory')
reconnect3VoltagePresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: reconnect3VoltagePresets.setStatus('mandatory')
overloadCurrentPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: overloadCurrentPresets.setStatus('mandatory')
maximumCurrentPreset = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: maximumCurrentPreset.setStatus('mandatory')
batteryFloatCurrentPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryFloatCurrentPresets.setStatus('mandatory')
equalizeTimePresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 37), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: equalizeTimePresets.setStatus('mandatory')
equalizeVoltagePresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 38), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: equalizeVoltagePresets.setStatus('mandatory')
batteryResistancePresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryResistancePresets.setStatus('mandatory')
batteryTestIntervalPresets = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 3, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryTestIntervalPresets.setStatus('mandatory')
alarmStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4))
highVoltageAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: highVoltageAlarmStatus.setStatus('mandatory')
lowVoltageAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowVoltageAlarmStatus.setStatus('mandatory')
overloadAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: overloadAlarmStatus.setStatus('mandatory')
breakerAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: breakerAlarmStatus.setStatus('mandatory')
acFailureAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acFailureAlarmStatus.setStatus('mandatory')
fanFailureAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanFailureAlarmStatus.setStatus('mandatory')
rectifierFailureAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rectifierFailureAlarmStatus.setStatus('mandatory')
majorAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: majorAlarmStatus.setStatus('mandatory')
lowVoltageDisconnect1TemperatureAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowVoltageDisconnect1TemperatureAlarmStatus.setStatus('mandatory')
lowVoltageDisconnect2TemperatureAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowVoltageDisconnect2TemperatureAlarmStatus.setStatus('mandatory')
lowVoltageDisconnect3TemperatureAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowVoltageDisconnect3TemperatureAlarmStatus.setStatus('mandatory')
lowVoltageDisconnect1VoltageAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowVoltageDisconnect1VoltageAlarmStatus.setStatus('mandatory')
lowVoltageDisconnect2VoltageAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowVoltageDisconnect2VoltageAlarmStatus.setStatus('mandatory')
lowVoltageDisconnect3VoltageAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowVoltageDisconnect3VoltageAlarmStatus.setStatus('mandatory')
batteryResistanceAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryResistanceAlarmStatus.setStatus('mandatory')
batteryCurrentAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryCurrentAlarmStatus.setStatus('mandatory')
batteryTestAbortCondition1AlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryTestAbortCondition1AlarmStatus.setStatus('mandatory')
batteryTestAbortCondition2AlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryTestAbortCondition2AlarmStatus.setStatus('mandatory')
batteryTestAbortCondition3AlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryTestAbortCondition3AlarmStatus.setStatus('mandatory')
batteryDisconnectAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: batteryDisconnectAlarmStatus.setStatus('mandatory')
fuseAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 18642, 1, 2, 4, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fuseAlarmStatus.setStatus('mandatory')
digitalSensorAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1, 2, 5))
breakerTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,0))
fuseTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,1))
batteryDisconnectTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,2))
programmableTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,3))
systemAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1, 2, 6))
highVoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,4))
lowVoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,5))
loadOverCurrentTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,6))
batteryFloatCurrentTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,7))
loadDisconnect1VoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,8))
loadDisconnect2VoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,9))
loadDisconnect3VoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,10))
loadDisconnect1TemperatureTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,11))
loadDisconnect2TemperatureTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,12))
loadDisconnect3TemperatureTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,13))
rectifierFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,14))
fanFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,15))
acFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,16))
majorFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,17))
batteryResistanceTrap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,18))
batteryTestAbort1Trap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,19))
batteryTestAbort2Trap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,20))
batteryTestAbort3Trap = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,21))
digitalSensorAlarmClears = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1, 2, 7))
breakerTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,100))
fuseTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,101))
batteryDisconnectTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,102))
programmableTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,103))
systemAlarmClears = MibIdentifier((1, 3, 6, 1, 4, 1, 18642, 1, 2, 8))
highVoltageTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,104))
lowVoltageTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,105))
loadOverCurrentTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,106))
batteryFloatCurrentTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,107))
loadDisconnect1VoltageTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,108))
loadDisconnect2VoltageTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,109))
loadDisconnect3VoltageTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,110))
loadDisconnect1TemperatureTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,111))
loadDisconnect2TemperatureTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,112))
loadDisconnect3TemperatureTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,113))
rectifierFailureTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,114))
fanFailureTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,115))
acFailureTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,116))
majorFailureTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,117))
batteryResistanceTrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,118))
batteryTestAbort1TrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,119))
batteryTestAbort2TrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,120))
batteryTestAbort3TrapClear = NotificationType((1, 3, 6, 1, 4, 1, 18642) + (0,121))
mibBuilder.exportSymbols("CCPOWER-MIB", disconnect1LoadShedMondayPresets=disconnect1LoadShedMondayPresets, digitalSensorAlarmClears=digitalSensorAlarmClears, batteryTestAbort2TrapClear=batteryTestAbort2TrapClear, batteryResistanceChange=batteryResistanceChange, disconnect1LoadShedSundayPresets=disconnect1LoadShedSundayPresets, maximumCurrentPreset=maximumCurrentPreset, overloadCurrentPresets=overloadCurrentPresets, loadDisconnect3TemperatureTrap=loadDisconnect3TemperatureTrap, highVoltageAlarmStatus=highVoltageAlarmStatus, highVoltageTrap=highVoltageTrap, fuseTrap=fuseTrap, overloadAlarmStatus=overloadAlarmStatus, programmableTrap=programmableTrap, disconnect3LoadShedSundayOff=disconnect3LoadShedSundayOff, reconnect1LoadShedMondayOn=reconnect1LoadShedMondayOn, reconnect2LoadShedFridayOn=reconnect2LoadShedFridayOn, disconnect2LoadShedSaturdayPresets=disconnect2LoadShedSaturdayPresets, disconnect3LoadShedMondayPresets=disconnect3LoadShedMondayPresets, batteryResistanceReference=batteryResistanceReference, loadDisconnect3VoltageTrapClear=loadDisconnect3VoltageTrapClear, batteryTestIntervalPresets=batteryTestIntervalPresets, disconnect3LoadShedSundayPresets=disconnect3LoadShedSundayPresets, loadDisconnect2TemperatureTrap=loadDisconnect2TemperatureTrap, batteryCycles15LastDuration=batteryCycles15LastDuration, reconnect3LoadShedTuesdayOn=reconnect3LoadShedTuesdayOn, batteryDisconnectTrapClear=batteryDisconnectTrapClear, disconnect1LoadShedWednesdayPresets=disconnect1LoadShedWednesdayPresets, reconnect1LoadShedTuesdayOn=reconnect1LoadShedTuesdayOn, disconnect3TemperaturePreset=disconnect3TemperaturePreset, reconnect2LoadShedTuesdayOn=reconnect2LoadShedTuesdayOn, breakerTrapClear=breakerTrapClear, disconnect2LoadShedTuesdayPresets=disconnect2LoadShedTuesdayPresets, disconnect2LoadShedWednesdayPresets=disconnect2LoadShedWednesdayPresets, reconnect3LoadShedMondayOn=reconnect3LoadShedMondayOn, reconnect2Voltage=reconnect2Voltage, fanFailureTrapClear=fanFailureTrapClear, batteryCurrent=batteryCurrent, lowVoltageAlarmPresets=lowVoltageAlarmPresets, disconnect2LoadShedWednesdayOff=disconnect2LoadShedWednesdayOff, disconnect3LoadShedWednesdayOff=disconnect3LoadShedWednesdayOff, disconnect2Temperature=disconnect2Temperature, settings=settings, batteryFloatCurrentTrapClear=batteryFloatCurrentTrapClear, batteryCycles1=batteryCycles1, breakerAlarmStatus=breakerAlarmStatus, lowVoltageDisconnect2TemperatureAlarmStatus=lowVoltageDisconnect2TemperatureAlarmStatus, batteries=batteries, disconnect2LoadShedSaturdayOff=disconnect2LoadShedSaturdayOff, lowVoltageAlarmStatus=lowVoltageAlarmStatus, disconnect1LoadShedMondayOff=disconnect1LoadShedMondayOff, reconnect3Voltage=reconnect3Voltage, reconnect2LoadShedSundayOn=reconnect2LoadShedSundayOn, majorFailureTrapClear=majorFailureTrapClear, highVoltageAlarm=highVoltageAlarm, disconnect2LoadShedThursdayOff=disconnect2LoadShedThursdayOff, batteryTestAbortCondition2AlarmStatus=batteryTestAbortCondition2AlarmStatus, batteryTestAbort3Trap=batteryTestAbort3Trap, equalizeTime=equalizeTime, loadShedTimeControl=loadShedTimeControl, fanFailureTrap=fanFailureTrap, readOnlyObjects=readOnlyObjects, batteryTestAbort2Trap=batteryTestAbort2Trap, loadDisconnect2VoltageTrapClear=loadDisconnect2VoltageTrapClear, reconnect1Voltage=reconnect1Voltage, disconnect1Temperature=disconnect1Temperature, reconnectVoltage1Presets=reconnectVoltage1Presets, reconnect1LoadShedWednesdayOn=reconnect1LoadShedWednesdayOn, reconnect3VoltagePresets=reconnect3VoltagePresets, fuseAlarmStatus=fuseAlarmStatus, batteryTemperature=batteryTemperature, lowVoltageTrap=lowVoltageTrap, majorFailureTrap=majorFailureTrap, acFailureTrapClear=acFailureTrapClear, reconnect2LoadShedThursdayOn=reconnect2LoadShedThursdayOn, batteryTestAbortCondition3AlarmStatus=batteryTestAbortCondition3AlarmStatus, disconnect1LoadShedThursdayPresets=disconnect1LoadShedThursdayPresets, rectifierFloatVoltage=rectifierFloatVoltage, disconnect1Voltage=disconnect1Voltage, loadDisconnect3VoltageTrap=loadDisconnect3VoltageTrap, disconnect2LoadShedMondayPresets=disconnect2LoadShedMondayPresets, reconnect2LoadShedSaturdayOn=reconnect2LoadShedSaturdayOn, disconnect3LoadShedMondayOff=disconnect3LoadShedMondayOff, disconnect3LoadShedWednesdayPresets=disconnect3LoadShedWednesdayPresets, reconnect2LoadShedWednesdayOn=reconnect2LoadShedWednesdayOn, loadDisconnect2VoltageTrap=loadDisconnect2VoltageTrap, disconnect2LoadShedThursdayPresets=disconnect2LoadShedThursdayPresets, batteryResistanceReading=batteryResistanceReading, rectifiers=rectifiers, batteryCurrentAlarmStatus=batteryCurrentAlarmStatus, lowVoltageDisconnect1TemperatureAlarmStatus=lowVoltageDisconnect1TemperatureAlarmStatus, lowVoltageDisconnect3VoltageAlarmStatus=lowVoltageDisconnect3VoltageAlarmStatus, systemAlarms=systemAlarms, rectifierLoadCurrent=rectifierLoadCurrent, batteryFloatCurrentTrap=batteryFloatCurrentTrap, floatVoltagePresets=floatVoltagePresets, disconnect2Voltage=disconnect2Voltage, disconnect3LoadShedFridayOff=disconnect3LoadShedFridayOff, reconnect1LoadShedThursdayOn=reconnect1LoadShedThursdayOn, equalizeVoltagePresets=equalizeVoltagePresets, reconnect1LoadShedFridayOn=reconnect1LoadShedFridayOn, lowVoltageDisconnect2VoltageAlarmStatus=lowVoltageDisconnect2VoltageAlarmStatus, reconnect2VoltagePresets=reconnect2VoltagePresets, batteryResistancePresets=batteryResistancePresets, disconnect1LoadShedTuesdayOff=disconnect1LoadShedTuesdayOff, alarmStatus=alarmStatus, disconnect1VoltagePresets=disconnect1VoltagePresets, batteryResistanceAlarmStatus=batteryResistanceAlarmStatus, breakerTrap=breakerTrap, disconnect3LoadShedTuesdayOff=disconnect3LoadShedTuesdayOff, batteryDisconnectTrap=batteryDisconnectTrap, disconnect1LoadShedSaturdayOff=disconnect1LoadShedSaturdayOff, loadDisconnect1TemperatureTrap=loadDisconnect1TemperatureTrap, rectifierFailureTrap=rectifierFailureTrap, batteryResistanceTrapClear=batteryResistanceTrapClear, batteryTestAbortCondition1AlarmStatus=batteryTestAbortCondition1AlarmStatus, loadDisconnect1VoltageTrapClear=loadDisconnect1VoltageTrapClear, disconnect2LoadShedTuesdayOff=disconnect2LoadShedTuesdayOff, disconnect3LoadShedThursdayOff=disconnect3LoadShedThursdayOff, disconnect2LoadShedMondayOff=disconnect2LoadShedMondayOff, acFailureTrap=acFailureTrap, rectifierFailureTrapClear=rectifierFailureTrapClear, disconnect3LoadShedTuesdayPresets=disconnect3LoadShedTuesdayPresets, disconnect3LoadShedFridayPresets=disconnect3LoadShedFridayPresets, floatVoltage=floatVoltage, programmableTrapClear=programmableTrapClear, dcSystem=dcSystem, reconnect3LoadShedWednesdayOn=reconnect3LoadShedWednesdayOn, batteryDisconnectAlarmStatus=batteryDisconnectAlarmStatus, disconnect3LoadShedThursdayPresets=disconnect3LoadShedThursdayPresets, disconnect1LoadShedFridayOff=disconnect1LoadShedFridayOff, reconnect3LoadShedFridayOn=reconnect3LoadShedFridayOn, batteryFloatCurrent=batteryFloatCurrent, batteryTestAbort3TrapClear=batteryTestAbort3TrapClear, reconnect3LoadShedSundayOn=reconnect3LoadShedSundayOn, disconnect2LoadShedFridayPresets=disconnect2LoadShedFridayPresets, lowVoltageDisconnect3TemperatureAlarmStatus=lowVoltageDisconnect3TemperatureAlarmStatus, loadOverCurrentTrap=loadOverCurrentTrap, disconnect3LoadShedSaturdayOff=disconnect3LoadShedSaturdayOff, disconnect3VoltagePresets=disconnect3VoltagePresets, disconnect1LoadShedWednesdayOff=disconnect1LoadShedWednesdayOff, disconnect2VoltagePresets=disconnect2VoltagePresets, disconnect2TemperaturePreset=disconnect2TemperaturePreset, highVoltageAlarmPresets=highVoltageAlarmPresets, rectifierFailureAlarmStatus=rectifierFailureAlarmStatus, disconnect1LoadShedFridayPresets=disconnect1LoadShedFridayPresets, overloadCurrent=overloadCurrent, lowVoltageTrapClear=lowVoltageTrapClear, systemAlarmClears=systemAlarmClears, disconnect3Voltage=disconnect3Voltage, batteryCycles5to15=batteryCycles5to15, reconnect1LoadShedSundayOn=reconnect1LoadShedSundayOn, batteryCycles15LastCycleDate=batteryCycles15LastCycleDate, batteryResistancePercentChange=batteryResistancePercentChange, equalizeTimePresets=equalizeTimePresets, majorAlarmStatus=majorAlarmStatus, batteryTestAbort1TrapClear=batteryTestAbort1TrapClear, loadDisconnect3TemperatureTrapClear=loadDisconnect3TemperatureTrapClear, lowVoltageAlarm=lowVoltageAlarm, batteryTestFault=batteryTestFault, highVoltageTrapClear=highVoltageTrapClear, batteryTestAbort1Trap=batteryTestAbort1Trap, batteryFloatCurrentPresets=batteryFloatCurrentPresets, disconnect1LoadShedThursdayOff=disconnect1LoadShedThursdayOff, equalizeVoltage=equalizeVoltage, disconnect3Temperature=disconnect3Temperature, loadDisconnect1VoltageTrap=loadDisconnect1VoltageTrap, reconnect3LoadShedThursdayOn=reconnect3LoadShedThursdayOn, factorySettings=factorySettings, batteryCycles1to5=batteryCycles1to5, disconnect2LoadShedSundayOff=disconnect2LoadShedSundayOff, disconnect1LoadShedSaturdayPresets=disconnect1LoadShedSaturdayPresets, loadDisconnect2TemperatureTrapClear=loadDisconnect2TemperatureTrapClear, disconnect2LoadShedFridayOff=disconnect2LoadShedFridayOff, loadOverCurrentTrapClear=loadOverCurrentTrapClear, reconnect1LoadShedSaturdayOn=reconnect1LoadShedSaturdayOn, reconnect3LoadShedSaturdayOn=reconnect3LoadShedSaturdayOn, ccpower=ccpower, disconnect1TemperaturePreset=disconnect1TemperaturePreset, disconnect1LoadShedTuesdayPresets=disconnect1LoadShedTuesdayPresets, batteryResistanceTestInterval=batteryResistanceTestInterval, readWriteObjects=readWriteObjects, disconnect2LoadShedSundayPresets=disconnect2LoadShedSundayPresets, batteryResistanceTrap=batteryResistanceTrap, loadDisconnect1TemperatureTrapClear=loadDisconnect1TemperatureTrapClear, fanFailureAlarmStatus=fanFailureAlarmStatus, lowVoltageDisconnect1VoltageAlarmStatus=lowVoltageDisconnect1VoltageAlarmStatus, fuseTrapClear=fuseTrapClear, disconnect1LoadShedSundayOff=disconnect1LoadShedSundayOff, batteryCycles15=batteryCycles15, digitalSensorAlarms=digitalSensorAlarms, disconnect3LoadShedSaturdayPresets=disconnect3LoadShedSaturdayPresets, acFailureAlarmStatus=acFailureAlarmStatus, reconnect2LoadShedMondayOn=reconnect2LoadShedMondayOn)
