#
# PySNMP MIB module TAIT-TN9300-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/tait/TAIT-TN9300-MIB
# Produced by pysmi-1.1.12 at Mon Jul  1 11:18:59 2024
# On host fv-az1493-704 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, Counter32, Unsigned32, iso, Integer32, enterprises, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks, Gauge32, IpAddress, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "Unsigned32", "iso", "Integer32", "enterprises", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks", "Gauge32", "IpAddress", "Bits", "ObjectIdentity")
DisplayString, DateAndTime, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TruthValue", "TextualConvention")
taitModules, taitProducts = mibBuilder.importSymbols("TAIT-COMMON-MIB", "taitModules", "taitProducts")
SipLineRegistrationType, LicenseValidity, UnitAuthentication, NetworkCheckState, RemoteNodeSyncState, Mpt1327LinkState, UnitStatusMessageId, SipCallSpeechVotingPriority, Mpt1327ChannelState, SipLineState, ChannelState, NodeRequestedState, DipLineState, EventSeverity, NgwLinkState, RemoteNodeState, SipLineIncomingType, NodeState = mibBuilder.importSymbols("TAIT-TN9300-TC", "SipLineRegistrationType", "LicenseValidity", "UnitAuthentication", "NetworkCheckState", "RemoteNodeSyncState", "Mpt1327LinkState", "UnitStatusMessageId", "SipCallSpeechVotingPriority", "Mpt1327ChannelState", "SipLineState", "ChannelState", "NodeRequestedState", "DipLineState", "EventSeverity", "NgwLinkState", "RemoteNodeState", "SipLineIncomingType", "NodeState")
tn9300MibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3570, 1, 1, 11))
tn9300MibModule.setRevisions(('2019-03-18 14:00', '2019-01-28 16:30', '2019-01-09 12:00', '2018-12-04 12:00', '2018-11-23 12:00', '2018-11-21 12:00', '2018-10-25 12:00', '2018-07-31 12:00', '2018-07-17 10:05', '2018-05-29 12:00', '2018-04-23 12:00', '2018-04-17 12:00', '2018-03-18 22:03', '2018-03-08 12:00', '2018-03-05 12:00', '2018-01-26 00:00', '2017-11-22 00:00', '2017-05-24 00:00', '2017-03-16 00:54', '2016-08-22 12:00', '2015-10-30 12:00', '2015-03-17 22:08', '2014-04-04 23:07', '2012-11-29 22:01', '2012-06-28 22:28', '2012-06-27 09:02', '2012-05-28 23:17',))
if mibBuilder.loadTexts: tn9300MibModule.setLastUpdated('201903181400Z')
if mibBuilder.loadTexts: tn9300MibModule.setOrganization('www.taitworld.com')
tn9300MIB = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6))
tn9300Confs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1))
tn9300Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1))
tn9300Compl = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 2))
tn9300Objs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2))
tn9300NodeObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1))
tn9300SiteObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2))
tn9300SipLineObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3))
tn9300DipLineObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4))
tn9300Mpt1327Objs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 5))
tn9300Mpt1327ChObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6))
tn9300RemoteNodeObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7))
tn9300MobileIpObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 8))
tn9300UnitObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 9))
tn9300NetworkGwObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 10))
tn9300EventObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 99))
tn9300Events = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3))
tn9300EventsV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0))
tn9300ObjectsForEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 99))
tn9300CgmMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 3570, 3, 6, 4))
tn9300Version = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Version.setStatus('current')
tn9300Name = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Name.setStatus('current')
tn9300Priority = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Priority.setStatus('current')
tn9300RequestedState = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 4), NodeRequestedState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300RequestedState.setStatus('current')
tn9300State = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 5), NodeState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300State.setStatus('current')
tn9300NetCheckAddressAType = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300NetCheckAddressAType.setStatus('current')
tn9300NetCheckAddressA = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300NetCheckAddressA.setStatus('current')
tn9300NetCheckStateA = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 9), NetworkCheckState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300NetCheckStateA.setStatus('current')
tn9300NetCheckAddressBType = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 10), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300NetCheckAddressBType.setStatus('current')
tn9300NetCheckAddressB = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 11), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300NetCheckAddressB.setStatus('current')
tn9300NetCheckStateB = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 12), NetworkCheckState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300NetCheckStateB.setStatus('current')
tn9300CallsSwitching = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300CallsSwitching.setStatus('current')
tn9300ConnectionsSwitching = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ConnectionsSwitching.setStatus('current')
tn9300MemoryUsage = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300MemoryUsage.setStatus('current')
tn9300CpuUsage = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300CpuUsage.setStatus('current')
tn9300DiskSpaceOk = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DiskSpaceOk.setStatus('current')
tn9300LicenseValidity = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 1, 18), LicenseValidity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300LicenseValidity.setStatus('current')
tn9300SiteTable = MibTable((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1), )
if mibBuilder.loadTexts: tn9300SiteTable.setStatus('current')
tn9300SiteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1), ).setIndexNames((0, "TAIT-TN9300-MIB", "tn9300SiteNumber"))
if mibBuilder.loadTexts: tn9300SiteEntry.setStatus('current')
tn9300SiteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)))
if mibBuilder.loadTexts: tn9300SiteNumber.setStatus('current')
tn9300SiteName = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteName.setStatus('current')
tn9300SiteSyscode = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteSyscode.setStatus('current')
tn9300SiteEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteEnabled.setStatus('current')
tn9300SiteOk = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteOk.setStatus('current')
tn9300SiteAutoQueueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteAutoQueueDepth.setStatus('current')
tn9300SiteQueueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteQueueDepth.setStatus('current')
tn9300SiteZone = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteZone.setStatus('current')
tn9300SiteExtraWaitSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteExtraWaitSlots.setStatus('current')
tn9300SiteCCReassignTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteCCReassignTimeout.setStatus('current')
tn9300SiteTCRotation = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteTCRotation.setStatus('current')
tn9300SiteRxActivityTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteRxActivityTimeout.setStatus('current')
tn9300SiteRxInactiveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteRxInactiveTimeout.setStatus('current')
tn9300SiteFramelength = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteFramelength.setStatus('current')
tn9300SiteMinFramelength = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteMinFramelength.setStatus('current')
tn9300SiteMaxFramelength = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteMaxFramelength.setStatus('current')
tn9300SiteDualCC = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteDualCC.setStatus('current')
tn9300SiteOpenMuteTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteOpenMuteTimeout.setStatus('current')
tn9300SiteManAdjSiteRF = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteManAdjSiteRF.setStatus('current')
tn9300SiteManAdjSiteSyscode = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteManAdjSiteSyscode.setStatus('current')
tn9300SiteNChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteNChannels.setStatus('current')
tn9300SiteNControlChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteNControlChannels.setStatus('current')
tn9300SiteNTrafficChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteNTrafficChannels.setStatus('current')
tn9300SiteNIdleChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteNIdleChannels.setStatus('current')
tn9300SiteNDisabledChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteNDisabledChannels.setStatus('current')
tn9300SiteNFailedChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteNFailedChannels.setStatus('current')
tn9300SiteNOnAirCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteNOnAirCalls.setStatus('current')
tn9300SiteNRingingCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteNRingingCalls.setStatus('current')
tn9300SiteNQueuedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteNQueuedCalls.setStatus('current')
tn9300SiteTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteTotalCalls.setStatus('current')
tn9300SiteTotalChannelCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteTotalChannelCalls.setStatus('current')
tn9300SiteTotalQueueTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteTotalQueueTime.setStatus('current')
tn9300SiteChannelTimeFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteChannelTimeFailed.setStatus('current')
tn9300SiteChannelTimeTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteChannelTimeTraffic.setStatus('current')
tn9300SiteChannelTimeControl = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteChannelTimeControl.setStatus('current')
tn9300SiteChannelTimeIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteChannelTimeIdle.setStatus('current')
tn9300SiteCallsQueuedUnder5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteCallsQueuedUnder5.setStatus('current')
tn9300SiteCallsQueued5To10 = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteCallsQueued5To10.setStatus('current')
tn9300SiteCallsQueued10To20 = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteCallsQueued10To20.setStatus('current')
tn9300SiteCallsQueuedOver20 = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteCallsQueuedOver20.setStatus('current')
tn9300SiteAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteAlias.setStatus('current')
tn9300SiteControlChCountOk = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 42), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteControlChCountOk.setStatus('current')
tn9300SiteNAlternateChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteNAlternateChannels.setStatus('current')
tn9300SiteChannelTimeAlternate = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SiteChannelTimeAlternate.setStatus('current')
tn9300ChannelTable = MibTable((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2), )
if mibBuilder.loadTexts: tn9300ChannelTable.setStatus('current')
tn9300ChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1), ).setIndexNames((0, "TAIT-TN9300-MIB", "tn9300SiteNumber"), (0, "TAIT-TN9300-MIB", "tn9300ChannelBaseStationNumber"), (0, "TAIT-TN9300-MIB", "tn9300ChannelNumber"))
if mibBuilder.loadTexts: tn9300ChannelEntry.setStatus('current')
tn9300ChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: tn9300ChannelNumber.setStatus('current')
tn9300ChannelIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelIpAddressType.setStatus('current')
tn9300ChannelIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelIpAddress.setStatus('current')
tn9300ChannelPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelPort.setStatus('current')
tn9300ChannelRf = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelRf.setStatus('current')
tn9300ChannelEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelEnabled.setStatus('current')
tn9300ChannelControlAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelControlAllowed.setStatus('current')
tn9300ChannelTrafficAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelTrafficAllowed.setStatus('current')
tn9300ChannelInhibitIfJammed = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelInhibitIfJammed.setStatus('current')
tn9300ChannelState = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 10), ChannelState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelState.setStatus('current')
tn9300ChannelJammed = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelJammed.setStatus('current')
tn9300ChannelMinorAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelMinorAlarm.setStatus('current')
tn9300ChannelMajorAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelMajorAlarm.setStatus('current')
tn9300ChannelAParty = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelAParty.setStatus('current')
tn9300ChannelBParty = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelBParty.setStatus('current')
tn9300ChannelBspRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelBspRxPackets.setStatus('current')
tn9300ChannelBspTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelBspTxPackets.setStatus('current')
tn9300ChannelBspLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelBspLostPackets.setStatus('current')
tn9300ChannelRtpRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelRtpRxPackets.setStatus('current')
tn9300ChannelRtpTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelRtpTxPackets.setStatus('current')
tn9300ChannelRtpLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelRtpLostPackets.setStatus('current')
tn9300ChannelRtpRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelRtpRtt.setStatus('current')
tn9300ChannelRtpRttJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelRtpRttJitter.setStatus('current')
tn9300ChannelTimeFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelTimeFailed.setStatus('current')
tn9300ChannelTimeTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelTimeTraffic.setStatus('current')
tn9300ChannelTimeControl = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelTimeControl.setStatus('current')
tn9300ChannelTimeIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelTimeIdle.setStatus('current')
tn9300ChannelAlternateAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 28), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelAlternateAllowed.setStatus('current')
tn9300ChannelTimeAlternate = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300ChannelTimeAlternate.setStatus('current')
tn9300ChannelBaseStationNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 2, 1, 99), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: tn9300ChannelBaseStationNumber.setStatus('current')
tn9300AdjacentSiteTable = MibTable((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 5), )
if mibBuilder.loadTexts: tn9300AdjacentSiteTable.setStatus('current')
tn9300AdjacentSiteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 5, 1), ).setIndexNames((0, "TAIT-TN9300-MIB", "tn9300SiteNumber"), (0, "TAIT-TN9300-MIB", "tn9300AdjSiteSendOrder"))
if mibBuilder.loadTexts: tn9300AdjacentSiteEntry.setStatus('current')
tn9300AdjSiteSendOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: tn9300AdjSiteSendOrder.setStatus('current')
tn9300AdjSiteAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300AdjSiteAlias.setStatus('current')
tn9300AdjSiteSyscode1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300AdjSiteSyscode1.setStatus('current')
tn9300AdjSiteRF1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300AdjSiteRF1.setStatus('current')
tn9300AdjSiteSyscode2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 5, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300AdjSiteSyscode2.setStatus('current')
tn9300AdjSiteRF2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 2, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300AdjSiteRF2.setStatus('current')
tn9300Mpt1327IpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 5, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327IpAddressType.setStatus('current')
tn9300Mpt1327IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 5, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327IpAddress.setStatus('current')
tn9300Mpt1327Port = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327Port.setStatus('current')
tn9300Mpt1327State = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 5, 4), Mpt1327LinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327State.setStatus('current')
tn9300Mpt1327RxBytes = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327RxBytes.setStatus('current')
tn9300Mpt1327TxBytes = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 5, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327TxBytes.setStatus('current')
tn9300Mpt1327LinkErrors = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327LinkErrors.setStatus('current')
tn9300Mpt1327Connections = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327Connections.setStatus('current')
tn9300Mpt1327ChTable = MibTable((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1), )
if mibBuilder.loadTexts: tn9300Mpt1327ChTable.setStatus('current')
tn9300Mpt1327ChEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1), ).setIndexNames((0, "TAIT-TN9300-MIB", "tn9300Mpt1327ChNumber"))
if mibBuilder.loadTexts: tn9300Mpt1327ChEntry.setStatus('current')
tn9300Mpt1327ChNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: tn9300Mpt1327ChNumber.setStatus('current')
tn9300Mpt1327ChIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChIpAddressType.setStatus('current')
tn9300Mpt1327ChIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChIpAddress.setStatus('current')
tn9300Mpt1327ChPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChPort.setStatus('current')
tn9300Mpt1327ChState = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 5), Mpt1327ChannelState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChState.setStatus('current')
tn9300Mpt1327ChLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 6), NgwLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChLinkState.setStatus('current')
tn9300Mpt1327ChAParty = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChAParty.setStatus('current')
tn9300Mpt1327ChBParty = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChBParty.setStatus('current')
tn9300Mpt1327ChNgpRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChNgpRxPackets.setStatus('current')
tn9300Mpt1327ChNgpTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChNgpTxPackets.setStatus('current')
tn9300Mpt1327ChNgpLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChNgpLostPackets.setStatus('current')
tn9300Mpt1327ChRtpRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChRtpRxPackets.setStatus('current')
tn9300Mpt1327ChRtpTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChRtpTxPackets.setStatus('current')
tn9300Mpt1327ChRtpLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChRtpLostPackets.setStatus('current')
tn9300Mpt1327ChRtpRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChRtpRtt.setStatus('current')
tn9300Mpt1327ChRtpJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 6, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300Mpt1327ChRtpJitter.setStatus('current')
tn9300SipLineTable = MibTable((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1), )
if mibBuilder.loadTexts: tn9300SipLineTable.setStatus('current')
tn9300SipLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1), ).setIndexNames((0, "TAIT-TN9300-MIB", "tn9300SipLineNumber"))
if mibBuilder.loadTexts: tn9300SipLineEntry.setStatus('current')
tn9300SipLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: tn9300SipLineNumber.setStatus('current')
tn9300SipLineName = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineName.setStatus('current')
tn9300SipLineRegistrationType = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 3), SipLineRegistrationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineRegistrationType.setStatus('current')
tn9300SipLineUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineUserName.setStatus('current')
tn9300SipLineEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineEnabled.setStatus('current')
tn9300SipLineSpchVotePri = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 6), SipCallSpeechVotingPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineSpchVotePri.setStatus('current')
tn9300SipLineAisMultipartContents = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineAisMultipartContents.setStatus('current')
tn9300SipLineAisMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineAisMonitor.setStatus('current')
tn9300SipLineSipGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineSipGroup.setStatus('current')
tn9300SipLineInphoneTable = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineInphoneTable.setStatus('current')
tn9300SipLineIncomingType = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 11), SipLineIncomingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineIncomingType.setStatus('current')
tn9300SipLineProxyAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 12), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineProxyAddressType.setStatus('current')
tn9300SipLineProxyAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 13), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineProxyAddress.setStatus('current')
tn9300SipLineIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 14), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineIpAddressType.setStatus('current')
tn9300SipLineIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 15), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineIpAddress.setStatus('current')
tn9300SipLineState = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 16), SipLineState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineState.setStatus('current')
tn9300SipLineUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineUptime.setStatus('current')
tn9300SipLineConnects = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineConnects.setStatus('current')
tn9300SipLineCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 3, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300SipLineCalls.setStatus('current')
tn9300DipLineTable = MibTable((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1), )
if mibBuilder.loadTexts: tn9300DipLineTable.setStatus('current')
tn9300DipLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1), ).setIndexNames((0, "TAIT-TN9300-MIB", "tn9300DipLineNumber"))
if mibBuilder.loadTexts: tn9300DipLineEntry.setStatus('current')
tn9300DipLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)))
if mibBuilder.loadTexts: tn9300DipLineNumber.setStatus('current')
tn9300DipLineName = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineName.setStatus('current')
tn9300DipLineNgwIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineNgwIpAddrType.setStatus('current')
tn9300DipLineNgwIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineNgwIpAddr.setStatus('current')
tn9300DipLineAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineAddress.setStatus('current')
tn9300DipLinePilotAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLinePilotAddress.setStatus('current')
tn9300DipLineSpchVotePri = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 7), SipCallSpeechVotingPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineSpchVotePri.setStatus('current')
tn9300DipLineState = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 8), DipLineState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineState.setStatus('current')
tn9300DipLineNgwLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 9), NgwLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineNgwLinkState.setStatus('current')
tn9300DipLineAParty = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineAParty.setStatus('current')
tn9300DipLineBParty = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineBParty.setStatus('current')
tn9300DipLnClientIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 12), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLnClientIpAddrType.setStatus('current')
tn9300DipLnClientIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 13), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLnClientIpAddr.setStatus('current')
tn9300DipLineClientUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineClientUptime.setStatus('current')
tn9300DipLineClientConnects = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineClientConnects.setStatus('current')
tn9300DipLineNgpRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineNgpRxPackets.setStatus('current')
tn9300DipLineNgpTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineNgpTxPackets.setStatus('current')
tn9300DipLineNgpLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineNgpLostPackets.setStatus('current')
tn9300DipLineRtpRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineRtpRxPackets.setStatus('current')
tn9300DipLineRtpTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineRtpTxPackets.setStatus('current')
tn9300DipLineRtpLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineRtpLostPackets.setStatus('current')
tn9300DipLineRtpRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineRtpRtt.setStatus('current')
tn9300DipLineRtpJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 4, 1, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300DipLineRtpJitter.setStatus('current')
tn9300RemoteNodeTable = MibTable((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7, 1), )
if mibBuilder.loadTexts: tn9300RemoteNodeTable.setStatus('current')
tn9300RemoteNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7, 1, 1), ).setIndexNames((0, "TAIT-TN9300-MIB", "tn9300RemoteNodeNumber"))
if mibBuilder.loadTexts: tn9300RemoteNodeEntry.setStatus('current')
tn9300RemoteNodeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: tn9300RemoteNodeNumber.setStatus('current')
tn9300RemoteNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300RemoteNodeName.setStatus('current')
tn9300RemoteNodeIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300RemoteNodeIpAddrType.setStatus('current')
tn9300RemoteNodeIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7, 1, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300RemoteNodeIpAddr.setStatus('current')
tn9300RemoteNodePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300RemoteNodePriority.setStatus('current')
tn9300RemoteNodeState = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7, 1, 1, 6), RemoteNodeState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300RemoteNodeState.setStatus('current')
tn9300RemoteNodeCallSw = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300RemoteNodeCallSw.setStatus('current')
tn9300RemoteNodeConnectSw = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300RemoteNodeConnectSw.setStatus('current')
tn9300RemoteNodeSynced = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 7, 1, 1, 9), RemoteNodeSyncState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300RemoteNodeSynced.setStatus('current')
tn9300UnitTable = MibTable((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 9, 1), )
if mibBuilder.loadTexts: tn9300UnitTable.setStatus('current')
tn9300UnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 9, 1, 1), ).setIndexNames((0, "TAIT-TN9300-MIB", "tn9300UnitAddress"))
if mibBuilder.loadTexts: tn9300UnitEntry.setStatus('current')
tn9300UnitAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215)))
if mibBuilder.loadTexts: tn9300UnitAddress.setStatus('current')
tn9300UnitAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300UnitAlias.setStatus('current')
tn9300UnitAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 9, 1, 1, 3), UnitAuthentication()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300UnitAuthentication.setStatus('current')
tn9300UnitStatusMessageId = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 9, 2), UnitStatusMessageId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tn9300UnitStatusMessageId.setStatus('current')
tn9300MipRegistered = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300MipRegistered.setStatus('current')
tn9300MipFailing = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 8, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300MipFailing.setStatus('current')
tn9300MipTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 8, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300MipTimeouts.setStatus('current')
tn9300MipRejections = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 8, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300MipRejections.setStatus('current')
tn9300MipIcmpRxPackets = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 8, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300MipIcmpRxPackets.setStatus('current')
tn9300MipIcmpTxPackets = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 8, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300MipIcmpTxPackets.setStatus('current')
tn9300MipUdpRxPackets = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 8, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300MipUdpRxPackets.setStatus('current')
tn9300MipUdpTxPackets = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 8, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300MipUdpTxPackets.setStatus('current')
tn9300MipRxBytes = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 8, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300MipRxBytes.setStatus('current')
tn9300MipTxBytes = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 8, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tn9300MipTxBytes.setStatus('current')
tn9300NetworkGwTable = MibTable((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 10, 1), )
if mibBuilder.loadTexts: tn9300NetworkGwTable.setStatus('current')
tn9300NetworkGwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 10, 1, 1), ).setIndexNames((0, "TAIT-TN9300-MIB", "tn9300NetworkGwId"))
if mibBuilder.loadTexts: tn9300NetworkGwEntry.setStatus('current')
tn9300NetworkGwId = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: tn9300NetworkGwId.setStatus('current')
tn9300NetworkGwConnOk = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 10, 1, 1, 2), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tn9300NetworkGwConnOk.setStatus('current')
tn9300NetworkGwIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 10, 1, 1, 3), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tn9300NetworkGwIpAddrType.setStatus('current')
tn9300NetworkGwIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 10, 1, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tn9300NetworkGwIpAddr.setStatus('current')
tn9300EventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 99, 2), EventSeverity()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tn9300EventSeverity.setStatus('current')
tn9300EventUnitAddress = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 99, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tn9300EventUnitAddress.setStatus('current')
tn9300EventBaseStationNumber = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 99, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tn9300EventBaseStationNumber.setStatus('current')
tn9300EventChannelNumber = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 99, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tn9300EventChannelNumber.setStatus('current')
tn9300EventNetworkGwId = MibScalar((1, 3, 6, 1, 4, 1, 3570, 3, 6, 2, 99, 6), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tn9300EventNetworkGwId.setStatus('current')
tn9300NodeActivationEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 1)).setObjects(("TAIT-TN9300-MIB", "tn9300State"))
if mibBuilder.loadTexts: tn9300NodeActivationEvent.setStatus('current')
tn9300SiteFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 2)).setObjects(("TAIT-TN9300-MIB", "tn9300SiteOk"), ("TAIT-TN9300-MIB", "tn9300SiteName"))
if mibBuilder.loadTexts: tn9300SiteFailureEvent.setStatus('current')
tn9300SiteOkEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 3)).setObjects(("TAIT-TN9300-MIB", "tn9300SiteOk"), ("TAIT-TN9300-MIB", "tn9300SiteName"))
if mibBuilder.loadTexts: tn9300SiteOkEvent.setStatus('current')
tn9300ChannelMinorAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 4)).setObjects(("TAIT-TN9300-MIB", "tn9300ChannelMinorAlarm"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"))
if mibBuilder.loadTexts: tn9300ChannelMinorAlarmEvent.setStatus('current')
tn9300ChannelMajorAlarmEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 5)).setObjects(("TAIT-TN9300-MIB", "tn9300ChannelMajorAlarm"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"))
if mibBuilder.loadTexts: tn9300ChannelMajorAlarmEvent.setStatus('current')
tn9300ChannelFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 6)).setObjects(("TAIT-TN9300-MIB", "tn9300ChannelState"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"))
if mibBuilder.loadTexts: tn9300ChannelFailureEvent.setStatus('current')
tn9300ChannelOkEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 7)).setObjects(("TAIT-TN9300-MIB", "tn9300ChannelState"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"))
if mibBuilder.loadTexts: tn9300ChannelOkEvent.setStatus('current')
tn9300ChannelJammedEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 8)).setObjects(("TAIT-TN9300-MIB", "tn9300ChannelJammed"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"), ("TAIT-TN9300-MIB", "tn9300EventChannelNumber"))
if mibBuilder.loadTexts: tn9300ChannelJammedEvent.setStatus('current')
tn9300ChannelUnjammedEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 9)).setObjects(("TAIT-TN9300-MIB", "tn9300ChannelJammed"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"), ("TAIT-TN9300-MIB", "tn9300EventChannelNumber"))
if mibBuilder.loadTexts: tn9300ChannelUnjammedEvent.setStatus('current')
tn9300SipLinkUpEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 14)).setObjects(("TAIT-TN9300-MIB", "tn9300SipLineState"), ("TAIT-TN9300-MIB", "tn9300SipLineIpAddressType"), ("TAIT-TN9300-MIB", "tn9300SipLineIpAddress"))
if mibBuilder.loadTexts: tn9300SipLinkUpEvent.setStatus('current')
tn9300SipLinkDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 15)).setObjects(("TAIT-TN9300-MIB", "tn9300SipLineState"))
if mibBuilder.loadTexts: tn9300SipLinkDownEvent.setStatus('current')
tn9300DipLinkUpEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 16)).setObjects(("TAIT-TN9300-MIB", "tn9300DipLineState"), ("TAIT-TN9300-MIB", "tn9300DipLnClientIpAddrType"), ("TAIT-TN9300-MIB", "tn9300DipLnClientIpAddr"), ("TAIT-TN9300-MIB", "tn9300DipLineAddress"))
if mibBuilder.loadTexts: tn9300DipLinkUpEvent.setStatus('current')
tn9300DipLinkDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 17)).setObjects(("TAIT-TN9300-MIB", "tn9300DipLineState"), ("TAIT-TN9300-MIB", "tn9300DipLnClientIpAddrType"), ("TAIT-TN9300-MIB", "tn9300DipLnClientIpAddr"), ("TAIT-TN9300-MIB", "tn9300DipLineAddress"))
if mibBuilder.loadTexts: tn9300DipLinkDownEvent.setStatus('current')
tn9300ControlChannelEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 18)).setObjects(("TAIT-TN9300-MIB", "tn9300SiteNControlChannels"), ("TAIT-TN9300-MIB", "tn9300SiteName"))
if mibBuilder.loadTexts: tn9300ControlChannelEvent.setStatus('current')
tn9300NetworkErrorEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 19)).setObjects(("TAIT-TN9300-MIB", "tn9300NetCheckStateA"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressAType"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressA"), ("TAIT-TN9300-MIB", "tn9300NetCheckStateB"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressBType"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressB"))
if mibBuilder.loadTexts: tn9300NetworkErrorEvent.setStatus('current')
tn9300RemoteNodeUpEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 20)).setObjects(("TAIT-TN9300-MIB", "tn9300RemoteNodeState"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddrType"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddr"))
if mibBuilder.loadTexts: tn9300RemoteNodeUpEvent.setStatus('current')
tn9300RemoteNodeDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 21)).setObjects(("TAIT-TN9300-MIB", "tn9300RemoteNodeState"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddrType"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddr"))
if mibBuilder.loadTexts: tn9300RemoteNodeDownEvent.setStatus('current')
tn9300LowDiskSpaceEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 22))
if mibBuilder.loadTexts: tn9300LowDiskSpaceEvent.setStatus('current')
tn9300LicenseCheckFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 23))
if mibBuilder.loadTexts: tn9300LicenseCheckFailedEvent.setStatus('current')
tn9300NetworkGatewayUpEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 24))
if mibBuilder.loadTexts: tn9300NetworkGatewayUpEvent.setStatus('current')
tn9300NetworkGatewayDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 25))
if mibBuilder.loadTexts: tn9300NetworkGatewayDownEvent.setStatus('current')
tn9300NodeFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 26)).setObjects(("TAIT-TN9300-MIB", "tn9300NetCheckStateA"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressAType"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressA"), ("TAIT-TN9300-MIB", "tn9300NetCheckStateB"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressBType"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressB"))
if mibBuilder.loadTexts: tn9300NodeFailedEvent.setStatus('current')
tn9300NetworkUpEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 27)).setObjects(("TAIT-TN9300-MIB", "tn9300NetCheckStateA"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressAType"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressA"), ("TAIT-TN9300-MIB", "tn9300NetCheckStateB"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressBType"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressB"))
if mibBuilder.loadTexts: tn9300NetworkUpEvent.setStatus('current')
tn9300AuthenticationOkEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 28))
if mibBuilder.loadTexts: tn9300AuthenticationOkEvent.setStatus('current')
tn9300AuthenticationFailureEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 29))
if mibBuilder.loadTexts: tn9300AuthenticationFailureEvent.setStatus('current')
tn9300UnitStatusMessageEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 30)).setObjects(("TAIT-TN9300-MIB", "tn9300UnitStatusMessageId"), ("TAIT-TN9300-MIB", "tn9300EventUnitAddress"))
if mibBuilder.loadTexts: tn9300UnitStatusMessageEvent.setStatus('current')
tn9300RemoteNodeSyncFailedEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 31)).setObjects(("TAIT-TN9300-MIB", "tn9300RemoteNodeState"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddrType"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddr"))
if mibBuilder.loadTexts: tn9300RemoteNodeSyncFailedEvent.setStatus('current')
tn9300RemoteNodeSyncOkEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 32)).setObjects(("TAIT-TN9300-MIB", "tn9300RemoteNodeState"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddrType"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddr"))
if mibBuilder.loadTexts: tn9300RemoteNodeSyncOkEvent.setStatus('current')
tn9300UnitDeregisteredBySystemEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 33)).setObjects(("TAIT-TN9300-MIB", "tn9300EventUnitAddress"))
if mibBuilder.loadTexts: tn9300UnitDeregisteredBySystemEvent.setStatus('current')
tn9300NodeStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 34)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300State"))
if mibBuilder.loadTexts: tn9300NodeStateEvent.setStatus('current')
tn9300NodeIpNetworkStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 35)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300NetCheckStateA"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressAType"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressA"), ("TAIT-TN9300-MIB", "tn9300NetCheckStateB"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressBType"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressB"))
if mibBuilder.loadTexts: tn9300NodeIpNetworkStateEvent.setStatus('current')
tn9300NodeDiskSpaceEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 36)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300DiskSpaceOk"))
if mibBuilder.loadTexts: tn9300NodeDiskSpaceEvent.setStatus('current')
tn9300NodeLicenseEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 37)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300LicenseValidity"))
if mibBuilder.loadTexts: tn9300NodeLicenseEvent.setStatus('current')
tn9300SiteStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 38)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300SiteOk"), ("TAIT-TN9300-MIB", "tn9300SiteName"))
if mibBuilder.loadTexts: tn9300SiteStateEvent.setStatus('current')
tn9300SiteControlChCountEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 39)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300SiteControlChCountOk"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300SiteNControlChannels"))
if mibBuilder.loadTexts: tn9300SiteControlChCountEvent.setStatus('current')
tn9300BSMinorAlarmStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 40)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300ChannelMinorAlarm"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"))
if mibBuilder.loadTexts: tn9300BSMinorAlarmStateEvent.setStatus('current')
tn9300BSMajorAlarmStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 41)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300ChannelMajorAlarm"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"))
if mibBuilder.loadTexts: tn9300BSMajorAlarmStateEvent.setStatus('current')
tn9300BSStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 42)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300ChannelState"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"))
if mibBuilder.loadTexts: tn9300BSStateEvent.setStatus('current')
tn9300ChannelJammedStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 43)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300ChannelJammed"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"), ("TAIT-TN9300-MIB", "tn9300EventChannelNumber"))
if mibBuilder.loadTexts: tn9300ChannelJammedStateEvent.setStatus('current')
tn9300ChannelStuckMuteEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 44)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"), ("TAIT-TN9300-MIB", "tn9300EventChannelNumber"))
if mibBuilder.loadTexts: tn9300ChannelStuckMuteEvent.setStatus('current')
tn9300SipLinkStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 45)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300SipLineState"), ("TAIT-TN9300-MIB", "tn9300SipLineName"), ("TAIT-TN9300-MIB", "tn9300SipLineIpAddressType"), ("TAIT-TN9300-MIB", "tn9300SipLineIpAddress"))
if mibBuilder.loadTexts: tn9300SipLinkStateEvent.setStatus('current')
tn9300DipLinkStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 46)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300DipLineState"), ("TAIT-TN9300-MIB", "tn9300DipLineName"), ("TAIT-TN9300-MIB", "tn9300DipLnClientIpAddrType"), ("TAIT-TN9300-MIB", "tn9300DipLnClientIpAddr"), ("TAIT-TN9300-MIB", "tn9300DipLineAddress"))
if mibBuilder.loadTexts: tn9300DipLinkStateEvent.setStatus('current')
tn9300RemoteNodeStateEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 47)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeState"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeName"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddrType"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddr"))
if mibBuilder.loadTexts: tn9300RemoteNodeStateEvent.setStatus('current')
tn9300RemoteNodeSyncEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 48)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeSynced"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeName"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddrType"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddr"))
if mibBuilder.loadTexts: tn9300RemoteNodeSyncEvent.setStatus('current')
tn9300NetworkGwConnEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 49)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300NetworkGwConnOk"), ("TAIT-TN9300-MIB", "tn9300EventNetworkGwId"), ("TAIT-TN9300-MIB", "tn9300NetworkGwIpAddrType"), ("TAIT-TN9300-MIB", "tn9300NetworkGwIpAddr"))
if mibBuilder.loadTexts: tn9300NetworkGwConnEvent.setStatus('current')
tn9300UnitAuthenticationEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 50)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300UnitAuthentication"), ("TAIT-TN9300-MIB", "tn9300EventUnitAddress"))
if mibBuilder.loadTexts: tn9300UnitAuthenticationEvent.setStatus('current')
tn9300UnitStatusMsgEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 51)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300UnitStatusMessageId"), ("TAIT-TN9300-MIB", "tn9300EventUnitAddress"))
if mibBuilder.loadTexts: tn9300UnitStatusMsgEvent.setStatus('current')
tn9300UnitRegTimeoutEvent = NotificationType((1, 3, 6, 1, 4, 1, 3570, 3, 6, 3, 0, 52)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300EventUnitAddress"))
if mibBuilder.loadTexts: tn9300UnitRegTimeoutEvent.setStatus('current')
tn9300StatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 1)).setObjects(("TAIT-TN9300-MIB", "tn9300Version"), ("TAIT-TN9300-MIB", "tn9300Name"), ("TAIT-TN9300-MIB", "tn9300Priority"), ("TAIT-TN9300-MIB", "tn9300RequestedState"), ("TAIT-TN9300-MIB", "tn9300State"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressAType"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressA"), ("TAIT-TN9300-MIB", "tn9300NetCheckStateA"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressBType"), ("TAIT-TN9300-MIB", "tn9300NetCheckAddressB"), ("TAIT-TN9300-MIB", "tn9300NetCheckStateB"), ("TAIT-TN9300-MIB", "tn9300CallsSwitching"), ("TAIT-TN9300-MIB", "tn9300ConnectionsSwitching"), ("TAIT-TN9300-MIB", "tn9300MemoryUsage"), ("TAIT-TN9300-MIB", "tn9300CpuUsage"), ("TAIT-TN9300-MIB", "tn9300DiskSpaceOk"), ("TAIT-TN9300-MIB", "tn9300LicenseValidity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300StatusGroup = tn9300StatusGroup.setStatus('current')
tn9300SiteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 2)).setObjects(("TAIT-TN9300-MIB", "tn9300SiteName"), ("TAIT-TN9300-MIB", "tn9300SiteSyscode"), ("TAIT-TN9300-MIB", "tn9300SiteEnabled"), ("TAIT-TN9300-MIB", "tn9300SiteOk"), ("TAIT-TN9300-MIB", "tn9300SiteAutoQueueDepth"), ("TAIT-TN9300-MIB", "tn9300SiteQueueDepth"), ("TAIT-TN9300-MIB", "tn9300SiteZone"), ("TAIT-TN9300-MIB", "tn9300SiteExtraWaitSlots"), ("TAIT-TN9300-MIB", "tn9300SiteCCReassignTimeout"), ("TAIT-TN9300-MIB", "tn9300SiteTCRotation"), ("TAIT-TN9300-MIB", "tn9300SiteRxActivityTimeout"), ("TAIT-TN9300-MIB", "tn9300SiteRxInactiveTimeout"), ("TAIT-TN9300-MIB", "tn9300SiteFramelength"), ("TAIT-TN9300-MIB", "tn9300SiteMinFramelength"), ("TAIT-TN9300-MIB", "tn9300SiteMaxFramelength"), ("TAIT-TN9300-MIB", "tn9300SiteDualCC"), ("TAIT-TN9300-MIB", "tn9300SiteOpenMuteTimeout"), ("TAIT-TN9300-MIB", "tn9300SiteManAdjSiteRF"), ("TAIT-TN9300-MIB", "tn9300SiteManAdjSiteSyscode"), ("TAIT-TN9300-MIB", "tn9300SiteNChannels"), ("TAIT-TN9300-MIB", "tn9300SiteNControlChannels"), ("TAIT-TN9300-MIB", "tn9300SiteNTrafficChannels"), ("TAIT-TN9300-MIB", "tn9300SiteNIdleChannels"), ("TAIT-TN9300-MIB", "tn9300SiteNDisabledChannels"), ("TAIT-TN9300-MIB", "tn9300SiteNFailedChannels"), ("TAIT-TN9300-MIB", "tn9300SiteNOnAirCalls"), ("TAIT-TN9300-MIB", "tn9300SiteNRingingCalls"), ("TAIT-TN9300-MIB", "tn9300SiteNQueuedCalls"), ("TAIT-TN9300-MIB", "tn9300SiteTotalCalls"), ("TAIT-TN9300-MIB", "tn9300SiteTotalChannelCalls"), ("TAIT-TN9300-MIB", "tn9300SiteTotalQueueTime"), ("TAIT-TN9300-MIB", "tn9300SiteChannelTimeFailed"), ("TAIT-TN9300-MIB", "tn9300SiteChannelTimeTraffic"), ("TAIT-TN9300-MIB", "tn9300SiteChannelTimeControl"), ("TAIT-TN9300-MIB", "tn9300SiteChannelTimeIdle"), ("TAIT-TN9300-MIB", "tn9300SiteCallsQueuedUnder5"), ("TAIT-TN9300-MIB", "tn9300SiteCallsQueued5To10"), ("TAIT-TN9300-MIB", "tn9300SiteCallsQueued10To20"), ("TAIT-TN9300-MIB", "tn9300SiteCallsQueuedOver20"), ("TAIT-TN9300-MIB", "tn9300SiteAlias"), ("TAIT-TN9300-MIB", "tn9300AdjSiteAlias"), ("TAIT-TN9300-MIB", "tn9300AdjSiteSyscode1"), ("TAIT-TN9300-MIB", "tn9300AdjSiteSyscode2"), ("TAIT-TN9300-MIB", "tn9300AdjSiteRF1"), ("TAIT-TN9300-MIB", "tn9300AdjSiteRF2"), ("TAIT-TN9300-MIB", "tn9300SiteControlChCountOk"), ("TAIT-TN9300-MIB", "tn9300SiteNAlternateChannels"), ("TAIT-TN9300-MIB", "tn9300SiteChannelTimeAlternate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300SiteGroup = tn9300SiteGroup.setStatus('current')
tn9300ChannelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 3)).setObjects(("TAIT-TN9300-MIB", "tn9300ChannelIpAddressType"), ("TAIT-TN9300-MIB", "tn9300ChannelIpAddress"), ("TAIT-TN9300-MIB", "tn9300ChannelPort"), ("TAIT-TN9300-MIB", "tn9300ChannelRf"), ("TAIT-TN9300-MIB", "tn9300ChannelEnabled"), ("TAIT-TN9300-MIB", "tn9300ChannelControlAllowed"), ("TAIT-TN9300-MIB", "tn9300ChannelTrafficAllowed"), ("TAIT-TN9300-MIB", "tn9300ChannelInhibitIfJammed"), ("TAIT-TN9300-MIB", "tn9300ChannelState"), ("TAIT-TN9300-MIB", "tn9300ChannelJammed"), ("TAIT-TN9300-MIB", "tn9300ChannelMinorAlarm"), ("TAIT-TN9300-MIB", "tn9300ChannelMajorAlarm"), ("TAIT-TN9300-MIB", "tn9300ChannelAParty"), ("TAIT-TN9300-MIB", "tn9300ChannelBParty"), ("TAIT-TN9300-MIB", "tn9300ChannelBspRxPackets"), ("TAIT-TN9300-MIB", "tn9300ChannelBspTxPackets"), ("TAIT-TN9300-MIB", "tn9300ChannelBspLostPackets"), ("TAIT-TN9300-MIB", "tn9300ChannelRtpRxPackets"), ("TAIT-TN9300-MIB", "tn9300ChannelRtpTxPackets"), ("TAIT-TN9300-MIB", "tn9300ChannelRtpLostPackets"), ("TAIT-TN9300-MIB", "tn9300ChannelRtpRtt"), ("TAIT-TN9300-MIB", "tn9300ChannelRtpRttJitter"), ("TAIT-TN9300-MIB", "tn9300ChannelTimeFailed"), ("TAIT-TN9300-MIB", "tn9300ChannelTimeTraffic"), ("TAIT-TN9300-MIB", "tn9300ChannelTimeControl"), ("TAIT-TN9300-MIB", "tn9300ChannelTimeIdle"), ("TAIT-TN9300-MIB", "tn9300ChannelAlternateAllowed"), ("TAIT-TN9300-MIB", "tn9300ChannelTimeAlternate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300ChannelGroup = tn9300ChannelGroup.setStatus('current')
tn9300Mpt1327Group = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 6)).setObjects(("TAIT-TN9300-MIB", "tn9300Mpt1327IpAddressType"), ("TAIT-TN9300-MIB", "tn9300Mpt1327IpAddress"), ("TAIT-TN9300-MIB", "tn9300Mpt1327Port"), ("TAIT-TN9300-MIB", "tn9300Mpt1327State"), ("TAIT-TN9300-MIB", "tn9300Mpt1327RxBytes"), ("TAIT-TN9300-MIB", "tn9300Mpt1327TxBytes"), ("TAIT-TN9300-MIB", "tn9300Mpt1327LinkErrors"), ("TAIT-TN9300-MIB", "tn9300Mpt1327Connections"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300Mpt1327Group = tn9300Mpt1327Group.setStatus('current')
tn9300Mpt1327ChGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 7)).setObjects(("TAIT-TN9300-MIB", "tn9300Mpt1327ChIpAddressType"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChIpAddress"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChPort"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChState"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChLinkState"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChAParty"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChBParty"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChNgpRxPackets"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChNgpTxPackets"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChNgpLostPackets"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChRtpRxPackets"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChRtpTxPackets"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChRtpLostPackets"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChRtpRtt"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChRtpJitter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300Mpt1327ChGroup = tn9300Mpt1327ChGroup.setStatus('current')
tn9300SipLineGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 8)).setObjects(("TAIT-TN9300-MIB", "tn9300SipLineName"), ("TAIT-TN9300-MIB", "tn9300SipLineIncomingType"), ("TAIT-TN9300-MIB", "tn9300SipLineSpchVotePri"), ("TAIT-TN9300-MIB", "tn9300SipLineIpAddressType"), ("TAIT-TN9300-MIB", "tn9300SipLineIpAddress"), ("TAIT-TN9300-MIB", "tn9300SipLineState"), ("TAIT-TN9300-MIB", "tn9300SipLineUptime"), ("TAIT-TN9300-MIB", "tn9300SipLineConnects"), ("TAIT-TN9300-MIB", "tn9300SipLineRegistrationType"), ("TAIT-TN9300-MIB", "tn9300SipLineUserName"), ("TAIT-TN9300-MIB", "tn9300SipLineEnabled"), ("TAIT-TN9300-MIB", "tn9300SipLineAisMultipartContents"), ("TAIT-TN9300-MIB", "tn9300SipLineAisMonitor"), ("TAIT-TN9300-MIB", "tn9300SipLineSipGroup"), ("TAIT-TN9300-MIB", "tn9300SipLineInphoneTable"), ("TAIT-TN9300-MIB", "tn9300SipLineProxyAddressType"), ("TAIT-TN9300-MIB", "tn9300SipLineProxyAddress"), ("TAIT-TN9300-MIB", "tn9300SipLineCalls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300SipLineGroup = tn9300SipLineGroup.setStatus('current')
tn9300DipLineGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 9)).setObjects(("TAIT-TN9300-MIB", "tn9300DipLineName"), ("TAIT-TN9300-MIB", "tn9300DipLineNgwIpAddrType"), ("TAIT-TN9300-MIB", "tn9300DipLineNgwIpAddr"), ("TAIT-TN9300-MIB", "tn9300DipLineAddress"), ("TAIT-TN9300-MIB", "tn9300DipLinePilotAddress"), ("TAIT-TN9300-MIB", "tn9300DipLineSpchVotePri"), ("TAIT-TN9300-MIB", "tn9300DipLineState"), ("TAIT-TN9300-MIB", "tn9300DipLineNgwLinkState"), ("TAIT-TN9300-MIB", "tn9300DipLineAParty"), ("TAIT-TN9300-MIB", "tn9300DipLineBParty"), ("TAIT-TN9300-MIB", "tn9300DipLnClientIpAddrType"), ("TAIT-TN9300-MIB", "tn9300DipLnClientIpAddr"), ("TAIT-TN9300-MIB", "tn9300DipLineClientUptime"), ("TAIT-TN9300-MIB", "tn9300DipLineClientConnects"), ("TAIT-TN9300-MIB", "tn9300DipLineNgpRxPackets"), ("TAIT-TN9300-MIB", "tn9300DipLineNgpTxPackets"), ("TAIT-TN9300-MIB", "tn9300DipLineNgpLostPackets"), ("TAIT-TN9300-MIB", "tn9300DipLineRtpRxPackets"), ("TAIT-TN9300-MIB", "tn9300DipLineRtpTxPackets"), ("TAIT-TN9300-MIB", "tn9300DipLineRtpLostPackets"), ("TAIT-TN9300-MIB", "tn9300DipLineRtpRtt"), ("TAIT-TN9300-MIB", "tn9300DipLineRtpJitter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300DipLineGroup = tn9300DipLineGroup.setStatus('current')
tn9300RemoteNodeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 10)).setObjects(("TAIT-TN9300-MIB", "tn9300RemoteNodeName"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddrType"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeIpAddr"), ("TAIT-TN9300-MIB", "tn9300RemoteNodePriority"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeState"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeCallSw"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeConnectSw"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeSynced"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300RemoteNodeGroup = tn9300RemoteNodeGroup.setStatus('current')
tn9300EventGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 12)).setObjects(("TAIT-TN9300-MIB", "tn9300NodeActivationEvent"), ("TAIT-TN9300-MIB", "tn9300SiteFailureEvent"), ("TAIT-TN9300-MIB", "tn9300SiteOkEvent"), ("TAIT-TN9300-MIB", "tn9300ChannelMinorAlarmEvent"), ("TAIT-TN9300-MIB", "tn9300ChannelMajorAlarmEvent"), ("TAIT-TN9300-MIB", "tn9300ChannelFailureEvent"), ("TAIT-TN9300-MIB", "tn9300ChannelOkEvent"), ("TAIT-TN9300-MIB", "tn9300ChannelJammedEvent"), ("TAIT-TN9300-MIB", "tn9300ChannelUnjammedEvent"), ("TAIT-TN9300-MIB", "tn9300SipLinkUpEvent"), ("TAIT-TN9300-MIB", "tn9300SipLinkDownEvent"), ("TAIT-TN9300-MIB", "tn9300DipLinkUpEvent"), ("TAIT-TN9300-MIB", "tn9300DipLinkDownEvent"), ("TAIT-TN9300-MIB", "tn9300ControlChannelEvent"), ("TAIT-TN9300-MIB", "tn9300NetworkErrorEvent"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeUpEvent"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeDownEvent"), ("TAIT-TN9300-MIB", "tn9300LowDiskSpaceEvent"), ("TAIT-TN9300-MIB", "tn9300LicenseCheckFailedEvent"), ("TAIT-TN9300-MIB", "tn9300NetworkGatewayUpEvent"), ("TAIT-TN9300-MIB", "tn9300NetworkGatewayDownEvent"), ("TAIT-TN9300-MIB", "tn9300NodeFailedEvent"), ("TAIT-TN9300-MIB", "tn9300NetworkUpEvent"), ("TAIT-TN9300-MIB", "tn9300AuthenticationOkEvent"), ("TAIT-TN9300-MIB", "tn9300AuthenticationFailureEvent"), ("TAIT-TN9300-MIB", "tn9300UnitStatusMessageEvent"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeSyncFailedEvent"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeSyncOkEvent"), ("TAIT-TN9300-MIB", "tn9300UnitDeregisteredBySystemEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300EventGroup = tn9300EventGroup.setStatus('current')
tn9300MobileIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 13)).setObjects(("TAIT-TN9300-MIB", "tn9300MipRegistered"), ("TAIT-TN9300-MIB", "tn9300MipFailing"), ("TAIT-TN9300-MIB", "tn9300MipTimeouts"), ("TAIT-TN9300-MIB", "tn9300MipRejections"), ("TAIT-TN9300-MIB", "tn9300MipIcmpRxPackets"), ("TAIT-TN9300-MIB", "tn9300MipIcmpTxPackets"), ("TAIT-TN9300-MIB", "tn9300MipUdpRxPackets"), ("TAIT-TN9300-MIB", "tn9300MipUdpTxPackets"), ("TAIT-TN9300-MIB", "tn9300MipRxBytes"), ("TAIT-TN9300-MIB", "tn9300MipTxBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300MobileIpGroup = tn9300MobileIpGroup.setStatus('current')
tn9300UnitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 14)).setObjects(("TAIT-TN9300-MIB", "tn9300UnitAlias"), ("TAIT-TN9300-MIB", "tn9300UnitStatusMessageId"), ("TAIT-TN9300-MIB", "tn9300UnitAuthentication"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300UnitGroup = tn9300UnitGroup.setStatus('current')
tn9300EventObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 15)).setObjects(("TAIT-TN9300-MIB", "tn9300EventSeverity"), ("TAIT-TN9300-MIB", "tn9300EventUnitAddress"), ("TAIT-TN9300-MIB", "tn9300EventBaseStationNumber"), ("TAIT-TN9300-MIB", "tn9300EventChannelNumber"), ("TAIT-TN9300-MIB", "tn9300EventNetworkGwId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300EventObjectGroup = tn9300EventObjectGroup.setStatus('current')
tn9300EventGroupV2 = NotificationGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 16)).setObjects(("TAIT-TN9300-MIB", "tn9300NodeStateEvent"), ("TAIT-TN9300-MIB", "tn9300NodeIpNetworkStateEvent"), ("TAIT-TN9300-MIB", "tn9300NodeDiskSpaceEvent"), ("TAIT-TN9300-MIB", "tn9300NodeLicenseEvent"), ("TAIT-TN9300-MIB", "tn9300SiteStateEvent"), ("TAIT-TN9300-MIB", "tn9300SiteControlChCountEvent"), ("TAIT-TN9300-MIB", "tn9300BSMinorAlarmStateEvent"), ("TAIT-TN9300-MIB", "tn9300BSMajorAlarmStateEvent"), ("TAIT-TN9300-MIB", "tn9300BSStateEvent"), ("TAIT-TN9300-MIB", "tn9300ChannelJammedStateEvent"), ("TAIT-TN9300-MIB", "tn9300ChannelStuckMuteEvent"), ("TAIT-TN9300-MIB", "tn9300SipLinkStateEvent"), ("TAIT-TN9300-MIB", "tn9300DipLinkStateEvent"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeStateEvent"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeSyncEvent"), ("TAIT-TN9300-MIB", "tn9300NetworkGwConnEvent"), ("TAIT-TN9300-MIB", "tn9300UnitAuthenticationEvent"), ("TAIT-TN9300-MIB", "tn9300UnitStatusMsgEvent"), ("TAIT-TN9300-MIB", "tn9300UnitRegTimeoutEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300EventGroupV2 = tn9300EventGroupV2.setStatus('current')
tn9300NetworkGwGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 1, 17)).setObjects(("TAIT-TN9300-MIB", "tn9300NetworkGwConnOk"), ("TAIT-TN9300-MIB", "tn9300NetworkGwIpAddrType"), ("TAIT-TN9300-MIB", "tn9300NetworkGwIpAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300NetworkGwGroup = tn9300NetworkGwGroup.setStatus('current')
tn9300ComplianceV1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 3570, 3, 6, 1, 2, 1)).setObjects(("TAIT-TN9300-MIB", "tn9300StatusGroup"), ("TAIT-TN9300-MIB", "tn9300SiteGroup"), ("TAIT-TN9300-MIB", "tn9300ChannelGroup"), ("TAIT-TN9300-MIB", "tn9300SipLineGroup"), ("TAIT-TN9300-MIB", "tn9300DipLineGroup"), ("TAIT-TN9300-MIB", "tn9300Mpt1327Group"), ("TAIT-TN9300-MIB", "tn9300Mpt1327ChGroup"), ("TAIT-TN9300-MIB", "tn9300RemoteNodeGroup"), ("TAIT-TN9300-MIB", "tn9300EventGroup"), ("TAIT-TN9300-MIB", "tn9300MobileIpGroup"), ("TAIT-TN9300-MIB", "tn9300UnitGroup"), ("TAIT-TN9300-MIB", "tn9300EventObjectGroup"), ("TAIT-TN9300-MIB", "tn9300EventGroupV2"), ("TAIT-TN9300-MIB", "tn9300NetworkGwGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tn9300ComplianceV1 = tn9300ComplianceV1.setStatus('current')
mibBuilder.exportSymbols("TAIT-TN9300-MIB", tn9300Events=tn9300Events, tn9300ChannelIpAddressType=tn9300ChannelIpAddressType, tn9300Mpt1327ChIpAddressType=tn9300Mpt1327ChIpAddressType, tn9300SiteOpenMuteTimeout=tn9300SiteOpenMuteTimeout, tn9300DipLineClientConnects=tn9300DipLineClientConnects, tn9300StatusGroup=tn9300StatusGroup, tn9300DipLinkDownEvent=tn9300DipLinkDownEvent, tn9300SiteRxActivityTimeout=tn9300SiteRxActivityTimeout, tn9300AdjSiteAlias=tn9300AdjSiteAlias, tn9300SipLineIncomingType=tn9300SipLineIncomingType, tn9300NetworkGwConnEvent=tn9300NetworkGwConnEvent, tn9300CallsSwitching=tn9300CallsSwitching, tn9300SiteEnabled=tn9300SiteEnabled, tn9300SipLineRegistrationType=tn9300SipLineRegistrationType, tn9300SipLineInphoneTable=tn9300SipLineInphoneTable, tn9300RemoteNodeNumber=tn9300RemoteNodeNumber, tn9300Mpt1327TxBytes=tn9300Mpt1327TxBytes, tn9300RemoteNodeEntry=tn9300RemoteNodeEntry, tn9300ChannelPort=tn9300ChannelPort, tn9300ChannelUnjammedEvent=tn9300ChannelUnjammedEvent, tn9300SiteNOnAirCalls=tn9300SiteNOnAirCalls, tn9300Mpt1327ChRtpLostPackets=tn9300Mpt1327ChRtpLostPackets, tn9300RemoteNodeDownEvent=tn9300RemoteNodeDownEvent, tn9300MobileIpObjs=tn9300MobileIpObjs, tn9300UnitRegTimeoutEvent=tn9300UnitRegTimeoutEvent, tn9300SiteNAlternateChannels=tn9300SiteNAlternateChannels, tn9300SiteNFailedChannels=tn9300SiteNFailedChannels, tn9300EventObjs=tn9300EventObjs, tn9300Mpt1327RxBytes=tn9300Mpt1327RxBytes, tn9300Mpt1327ChNumber=tn9300Mpt1327ChNumber, tn9300SipLineNumber=tn9300SipLineNumber, tn9300Mpt1327ChRtpTxPackets=tn9300Mpt1327ChRtpTxPackets, tn9300ChannelMinorAlarmEvent=tn9300ChannelMinorAlarmEvent, tn9300Priority=tn9300Priority, tn9300NetworkGatewayUpEvent=tn9300NetworkGatewayUpEvent, tn9300ChannelGroup=tn9300ChannelGroup, tn9300DipLinePilotAddress=tn9300DipLinePilotAddress, tn9300ChannelTimeIdle=tn9300ChannelTimeIdle, tn9300SiteAlias=tn9300SiteAlias, tn9300SipLineIpAddress=tn9300SipLineIpAddress, tn9300SiteNRingingCalls=tn9300SiteNRingingCalls, tn9300DipLnClientIpAddrType=tn9300DipLnClientIpAddrType, tn9300SipLineUserName=tn9300SipLineUserName, tn9300Mpt1327ChRtpJitter=tn9300Mpt1327ChRtpJitter, tn9300Mpt1327ChIpAddress=tn9300Mpt1327ChIpAddress, tn9300SiteSyscode=tn9300SiteSyscode, tn9300ChannelRf=tn9300ChannelRf, tn9300SiteTable=tn9300SiteTable, tn9300ChannelState=tn9300ChannelState, tn9300ChannelEntry=tn9300ChannelEntry, tn9300ChannelAlternateAllowed=tn9300ChannelAlternateAllowed, tn9300RemoteNodeUpEvent=tn9300RemoteNodeUpEvent, tn9300NetworkGwObjs=tn9300NetworkGwObjs, tn9300MibModule=tn9300MibModule, tn9300Mpt1327ChRtpRxPackets=tn9300Mpt1327ChRtpRxPackets, tn9300ChannelTimeAlternate=tn9300ChannelTimeAlternate, tn9300SipLineSipGroup=tn9300SipLineSipGroup, tn9300EventChannelNumber=tn9300EventChannelNumber, tn9300AdjSiteRF1=tn9300AdjSiteRF1, tn9300ChannelOkEvent=tn9300ChannelOkEvent, tn9300RemoteNodeStateEvent=tn9300RemoteNodeStateEvent, tn9300SiteNControlChannels=tn9300SiteNControlChannels, tn9300DipLineRtpJitter=tn9300DipLineRtpJitter, tn9300NodeLicenseEvent=tn9300NodeLicenseEvent, PYSNMP_MODULE_ID=tn9300MibModule, tn9300AdjSiteSendOrder=tn9300AdjSiteSendOrder, tn9300SipLineName=tn9300SipLineName, tn9300Mpt1327ChNgpLostPackets=tn9300Mpt1327ChNgpLostPackets, tn9300NodeIpNetworkStateEvent=tn9300NodeIpNetworkStateEvent, tn9300NetCheckStateB=tn9300NetCheckStateB, tn9300ChannelRtpLostPackets=tn9300ChannelRtpLostPackets, tn9300EventGroup=tn9300EventGroup, tn9300RemoteNodeGroup=tn9300RemoteNodeGroup, tn9300ChannelTable=tn9300ChannelTable, tn9300SipLineSpchVotePri=tn9300SipLineSpchVotePri, tn9300NetworkGwTable=tn9300NetworkGwTable, tn9300DipLineSpchVotePri=tn9300DipLineSpchVotePri, tn9300ConnectionsSwitching=tn9300ConnectionsSwitching, tn9300UnitGroup=tn9300UnitGroup, tn9300DipLineTable=tn9300DipLineTable, tn9300SiteZone=tn9300SiteZone, tn9300SiteFailureEvent=tn9300SiteFailureEvent, tn9300State=tn9300State, tn9300MipIcmpTxPackets=tn9300MipIcmpTxPackets, tn9300SiteFramelength=tn9300SiteFramelength, tn9300MIB=tn9300MIB, tn9300NetCheckAddressA=tn9300NetCheckAddressA, tn9300Mpt1327Group=tn9300Mpt1327Group, tn9300SipLineEnabled=tn9300SipLineEnabled, tn9300DipLineName=tn9300DipLineName, tn9300ChannelTimeTraffic=tn9300ChannelTimeTraffic, tn9300SipLineTable=tn9300SipLineTable, tn9300MipFailing=tn9300MipFailing, tn9300SiteChannelTimeIdle=tn9300SiteChannelTimeIdle, tn9300NetCheckAddressAType=tn9300NetCheckAddressAType, tn9300NetworkGwConnOk=tn9300NetworkGwConnOk, tn9300RemoteNodeSyncOkEvent=tn9300RemoteNodeSyncOkEvent, tn9300DipLinkUpEvent=tn9300DipLinkUpEvent, tn9300Objs=tn9300Objs, tn9300ChannelJammed=tn9300ChannelJammed, tn9300Groups=tn9300Groups, tn9300SiteManAdjSiteRF=tn9300SiteManAdjSiteRF, tn9300SiteEntry=tn9300SiteEntry, tn9300ChannelBaseStationNumber=tn9300ChannelBaseStationNumber, tn9300Mpt1327ChAParty=tn9300Mpt1327ChAParty, tn9300ChannelBspLostPackets=tn9300ChannelBspLostPackets, tn9300EventNetworkGwId=tn9300EventNetworkGwId, tn9300SipLineState=tn9300SipLineState, tn9300RequestedState=tn9300RequestedState, tn9300UnitAlias=tn9300UnitAlias, tn9300RemoteNodeIpAddrType=tn9300RemoteNodeIpAddrType, tn9300EventObjectGroup=tn9300EventObjectGroup, tn9300AdjacentSiteEntry=tn9300AdjacentSiteEntry, tn9300SiteObjs=tn9300SiteObjs, tn9300SiteCallsQueuedOver20=tn9300SiteCallsQueuedOver20, tn9300ChannelRtpRtt=tn9300ChannelRtpRtt, tn9300RemoteNodeCallSw=tn9300RemoteNodeCallSw, tn9300SiteCallsQueued5To10=tn9300SiteCallsQueued5To10, tn9300UnitEntry=tn9300UnitEntry, tn9300MipUdpRxPackets=tn9300MipUdpRxPackets, tn9300AuthenticationOkEvent=tn9300AuthenticationOkEvent, tn9300SiteNQueuedCalls=tn9300SiteNQueuedCalls, tn9300NetCheckStateA=tn9300NetCheckStateA, tn9300ChannelAParty=tn9300ChannelAParty, tn9300ChannelTimeControl=tn9300ChannelTimeControl, tn9300EventSeverity=tn9300EventSeverity, tn9300Mpt1327ChLinkState=tn9300Mpt1327ChLinkState, tn9300SiteNumber=tn9300SiteNumber, tn9300SipLineProxyAddressType=tn9300SipLineProxyAddressType, tn9300ChannelRtpRttJitter=tn9300ChannelRtpRttJitter, tn9300UnitDeregisteredBySystemEvent=tn9300UnitDeregisteredBySystemEvent, tn9300Mpt1327Objs=tn9300Mpt1327Objs, tn9300Name=tn9300Name, tn9300SipLineObjs=tn9300SipLineObjs, tn9300SiteNTrafficChannels=tn9300SiteNTrafficChannels, tn9300LicenseValidity=tn9300LicenseValidity, tn9300AdjSiteRF2=tn9300AdjSiteRF2, tn9300SipLineEntry=tn9300SipLineEntry, tn9300UnitTable=tn9300UnitTable, tn9300RemoteNodeSyncFailedEvent=tn9300RemoteNodeSyncFailedEvent, tn9300SiteChannelTimeTraffic=tn9300SiteChannelTimeTraffic, tn9300SiteCallsQueued10To20=tn9300SiteCallsQueued10To20, tn9300DipLineRtpRxPackets=tn9300DipLineRtpRxPackets, tn9300SiteChannelTimeAlternate=tn9300SiteChannelTimeAlternate, tn9300RemoteNodeSynced=tn9300RemoteNodeSynced, tn9300LicenseCheckFailedEvent=tn9300LicenseCheckFailedEvent, tn9300ObjectsForEvents=tn9300ObjectsForEvents, tn9300SiteControlChCountOk=tn9300SiteControlChCountOk, tn9300NodeStateEvent=tn9300NodeStateEvent, tn9300EventBaseStationNumber=tn9300EventBaseStationNumber, tn9300UnitAddress=tn9300UnitAddress, tn9300DipLineClientUptime=tn9300DipLineClientUptime, tn9300SipLineCalls=tn9300SipLineCalls, tn9300DipLineNgwIpAddrType=tn9300DipLineNgwIpAddrType, tn9300DipLineState=tn9300DipLineState, tn9300DipLineNgpTxPackets=tn9300DipLineNgpTxPackets, tn9300LowDiskSpaceEvent=tn9300LowDiskSpaceEvent, tn9300NetworkGwEntry=tn9300NetworkGwEntry, tn9300ChannelNumber=tn9300ChannelNumber, tn9300DipLineNgwLinkState=tn9300DipLineNgwLinkState, tn9300ChannelJammedEvent=tn9300ChannelJammedEvent, tn9300ChannelTimeFailed=tn9300ChannelTimeFailed, tn9300DipLineObjs=tn9300DipLineObjs, tn9300CpuUsage=tn9300CpuUsage, tn9300RemoteNodeConnectSw=tn9300RemoteNodeConnectSw, tn9300ChannelJammedStateEvent=tn9300ChannelJammedStateEvent, tn9300ChannelControlAllowed=tn9300ChannelControlAllowed, tn9300SipLineAisMonitor=tn9300SipLineAisMonitor, tn9300RemoteNodeTable=tn9300RemoteNodeTable, tn9300Mpt1327IpAddress=tn9300Mpt1327IpAddress, tn9300ChannelRtpTxPackets=tn9300ChannelRtpTxPackets, tn9300DipLineNgpRxPackets=tn9300DipLineNgpRxPackets, tn9300MipTimeouts=tn9300MipTimeouts, tn9300UnitAuthenticationEvent=tn9300UnitAuthenticationEvent, tn9300RemoteNodeIpAddr=tn9300RemoteNodeIpAddr, tn9300MipIcmpRxPackets=tn9300MipIcmpRxPackets, tn9300AdjSiteSyscode1=tn9300AdjSiteSyscode1, tn9300DipLinkStateEvent=tn9300DipLinkStateEvent, tn9300SiteName=tn9300SiteName, tn9300ChannelEnabled=tn9300ChannelEnabled, tn9300SiteCallsQueuedUnder5=tn9300SiteCallsQueuedUnder5, tn9300AdjacentSiteTable=tn9300AdjacentSiteTable, tn9300DipLnClientIpAddr=tn9300DipLnClientIpAddr, tn9300UnitStatusMsgEvent=tn9300UnitStatusMsgEvent, tn9300ChannelMajorAlarmEvent=tn9300ChannelMajorAlarmEvent, tn9300MipRejections=tn9300MipRejections, tn9300AdjSiteSyscode2=tn9300AdjSiteSyscode2, tn9300SiteManAdjSiteSyscode=tn9300SiteManAdjSiteSyscode, tn9300Mpt1327Port=tn9300Mpt1327Port, tn9300SipLineIpAddressType=tn9300SipLineIpAddressType, tn9300DipLineBParty=tn9300DipLineBParty, tn9300RemoteNodeState=tn9300RemoteNodeState, tn9300ChannelFailureEvent=tn9300ChannelFailureEvent, tn9300SiteGroup=tn9300SiteGroup, tn9300Mpt1327LinkErrors=tn9300Mpt1327LinkErrors, tn9300ChannelInhibitIfJammed=tn9300ChannelInhibitIfJammed, tn9300SipLineAisMultipartContents=tn9300SipLineAisMultipartContents, tn9300SipLinkUpEvent=tn9300SipLinkUpEvent, tn9300MobileIpGroup=tn9300MobileIpGroup, tn9300SiteRxInactiveTimeout=tn9300SiteRxInactiveTimeout, tn9300RemoteNodeSyncEvent=tn9300RemoteNodeSyncEvent, tn9300NodeObjs=tn9300NodeObjs, tn9300Mpt1327ChTable=tn9300Mpt1327ChTable, tn9300RemoteNodePriority=tn9300RemoteNodePriority, tn9300DipLineRtpRtt=tn9300DipLineRtpRtt, tn9300ChannelBParty=tn9300ChannelBParty, tn9300SiteQueueDepth=tn9300SiteQueueDepth, tn9300DipLineAddress=tn9300DipLineAddress, tn9300Mpt1327State=tn9300Mpt1327State, tn9300SipLinkDownEvent=tn9300SipLinkDownEvent, tn9300UnitObjs=tn9300UnitObjs, tn9300Mpt1327ChPort=tn9300Mpt1327ChPort, tn9300SiteDualCC=tn9300SiteDualCC, tn9300Mpt1327ChState=tn9300Mpt1327ChState, tn9300UnitAuthentication=tn9300UnitAuthentication, tn9300SiteTotalQueueTime=tn9300SiteTotalQueueTime, tn9300DipLineGroup=tn9300DipLineGroup, tn9300Mpt1327ChObjs=tn9300Mpt1327ChObjs, tn9300DipLineNgpLostPackets=tn9300DipLineNgpLostPackets, tn9300SiteChannelTimeControl=tn9300SiteChannelTimeControl, tn9300Version=tn9300Version, tn9300ControlChannelEvent=tn9300ControlChannelEvent, tn9300NetworkGwIpAddrType=tn9300NetworkGwIpAddrType, tn9300NetCheckAddressBType=tn9300NetCheckAddressBType, tn9300SiteOk=tn9300SiteOk, tn9300SiteTotalChannelCalls=tn9300SiteTotalChannelCalls, tn9300EventUnitAddress=tn9300EventUnitAddress, tn9300NetworkErrorEvent=tn9300NetworkErrorEvent, tn9300NodeDiskSpaceEvent=tn9300NodeDiskSpaceEvent, tn9300NetworkGatewayDownEvent=tn9300NetworkGatewayDownEvent, tn9300SiteNIdleChannels=tn9300SiteNIdleChannels, tn9300EventGroupV2=tn9300EventGroupV2, tn9300ComplianceV1=tn9300ComplianceV1, tn9300Mpt1327ChBParty=tn9300Mpt1327ChBParty, tn9300NetworkUpEvent=tn9300NetworkUpEvent, tn9300SipLineConnects=tn9300SipLineConnects, tn9300UnitStatusMessageEvent=tn9300UnitStatusMessageEvent, tn9300RemoteNodeObjs=tn9300RemoteNodeObjs, tn9300Confs=tn9300Confs, tn9300SiteChannelTimeFailed=tn9300SiteChannelTimeFailed, tn9300SiteOkEvent=tn9300SiteOkEvent, tn9300ChannelMajorAlarm=tn9300ChannelMajorAlarm, tn9300MipRegistered=tn9300MipRegistered, tn9300SiteAutoQueueDepth=tn9300SiteAutoQueueDepth, tn9300SiteTotalCalls=tn9300SiteTotalCalls, tn9300DipLineEntry=tn9300DipLineEntry, tn9300SiteNChannels=tn9300SiteNChannels, tn9300Mpt1327ChRtpRtt=tn9300Mpt1327ChRtpRtt, tn9300DipLineRtpTxPackets=tn9300DipLineRtpTxPackets, tn9300DipLineNumber=tn9300DipLineNumber, tn9300Mpt1327ChNgpTxPackets=tn9300Mpt1327ChNgpTxPackets, tn9300SiteMaxFramelength=tn9300SiteMaxFramelength, tn9300ChannelMinorAlarm=tn9300ChannelMinorAlarm, tn9300BSStateEvent=tn9300BSStateEvent)
mibBuilder.exportSymbols("TAIT-TN9300-MIB", tn9300Mpt1327ChGroup=tn9300Mpt1327ChGroup, tn9300SiteControlChCountEvent=tn9300SiteControlChCountEvent, tn9300ChannelTrafficAllowed=tn9300ChannelTrafficAllowed, tn9300UnitStatusMessageId=tn9300UnitStatusMessageId, tn9300NodeFailedEvent=tn9300NodeFailedEvent, tn9300NetworkGwGroup=tn9300NetworkGwGroup, tn9300NetworkGwIpAddr=tn9300NetworkGwIpAddr, tn9300Mpt1327ChEntry=tn9300Mpt1327ChEntry, tn9300Mpt1327Connections=tn9300Mpt1327Connections, tn9300Mpt1327ChNgpRxPackets=tn9300Mpt1327ChNgpRxPackets, tn9300BSMajorAlarmStateEvent=tn9300BSMajorAlarmStateEvent, tn9300SipLineGroup=tn9300SipLineGroup, tn9300SipLineProxyAddress=tn9300SipLineProxyAddress, tn9300ChannelIpAddress=tn9300ChannelIpAddress, tn9300EventsV2=tn9300EventsV2, tn9300NetCheckAddressB=tn9300NetCheckAddressB, tn9300SiteExtraWaitSlots=tn9300SiteExtraWaitSlots, tn9300ChannelRtpRxPackets=tn9300ChannelRtpRxPackets, tn9300MipTxBytes=tn9300MipTxBytes, tn9300ChannelBspRxPackets=tn9300ChannelBspRxPackets, tn9300MipRxBytes=tn9300MipRxBytes, tn9300SiteNDisabledChannels=tn9300SiteNDisabledChannels, tn9300ChannelStuckMuteEvent=tn9300ChannelStuckMuteEvent, tn9300BSMinorAlarmStateEvent=tn9300BSMinorAlarmStateEvent, tn9300ChannelBspTxPackets=tn9300ChannelBspTxPackets, tn9300NodeActivationEvent=tn9300NodeActivationEvent, tn9300DipLineAParty=tn9300DipLineAParty, tn9300MipUdpTxPackets=tn9300MipUdpTxPackets, tn9300SipLineUptime=tn9300SipLineUptime, tn9300DiskSpaceOk=tn9300DiskSpaceOk, tn9300SiteStateEvent=tn9300SiteStateEvent, tn9300Mpt1327IpAddressType=tn9300Mpt1327IpAddressType, tn9300NetworkGwId=tn9300NetworkGwId, tn9300RemoteNodeName=tn9300RemoteNodeName, tn9300SiteCCReassignTimeout=tn9300SiteCCReassignTimeout, tn9300SiteMinFramelength=tn9300SiteMinFramelength, tn9300SiteTCRotation=tn9300SiteTCRotation, tn9300CgmMIB=tn9300CgmMIB, tn9300SipLinkStateEvent=tn9300SipLinkStateEvent, tn9300Compl=tn9300Compl, tn9300MemoryUsage=tn9300MemoryUsage, tn9300AuthenticationFailureEvent=tn9300AuthenticationFailureEvent, tn9300DipLineRtpLostPackets=tn9300DipLineRtpLostPackets, tn9300DipLineNgwIpAddr=tn9300DipLineNgwIpAddr)
