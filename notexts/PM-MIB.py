#
# PySNMP MIB module PM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/avocent/PM-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 13:48:48 2024
# On host fv-az1110-484 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, Counter32, ModuleIdentity, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, iso, ObjectIdentity, TimeTicks, Counter64, Unsigned32, IpAddress, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Counter32", "ModuleIdentity", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "iso", "ObjectIdentity", "TimeTicks", "Counter64", "Unsigned32", "IpAddress", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
pm = ModuleIdentity((1, 3, 6, 1, 4, 1, 10418, 17))
pm.setRevisions(('2010-11-24 00:00', '2010-09-24 00:00', '2010-04-14 00:00', '2009-05-21 00:00',))
if mibBuilder.loadTexts: pm.setLastUpdated('201011240000Z')
if mibBuilder.loadTexts: pm.setOrganization('Avocent Corporation')
pmProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1))
pmManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 2))
pm1024 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 1))
pm2003 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 2))
pm2006 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 3))
pm2024 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 4))
pm3003 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 5))
pm3006 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 6))
pm3024 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 7))
pm1010 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 8))
pm2010 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 9))
pm3010 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 10))
pm1020 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 11))
pm2020 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 12))
pm3020 = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 1, 13))
pmAppliance = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 2, 1))
pmSessions = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2))
pmPowerMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5))
pmTrapObject = MibIdentifier((1, 3, 6, 1, 4, 1, 10418, 17, 2, 6))
pmHostName = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmHostName.setStatus('current')
pmProductModel = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmProductModel.setStatus('current')
pmPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPartNumber.setStatus('current')
pmSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmSerialNumber.setStatus('current')
pmEIDNumber = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmEIDNumber.setStatus('current')
pmBootcodeVersion = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmBootcodeVersion.setStatus('current')
pmFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmFirmwareVersion.setStatus('current')
pmReboot = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmReboot.setStatus('current')
pmActiveSessionsNumberOfSession = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmActiveSessionsNumberOfSession.setStatus('current')
pmActiveSessionsTable = MibTable((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2, 2), )
if mibBuilder.loadTexts: pmActiveSessionsTable.setStatus('current')
pmActiveSessionsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2, 2, 1), ).setIndexNames((0, "PM-MIB", "pmActiveSessionsTableIndex"))
if mibBuilder.loadTexts: pmActiveSessionsTableEntry.setStatus('current')
pmActiveSessionsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2, 2, 1, 1), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmActiveSessionsTableIndex.setStatus('current')
pmActiveSessionsTableUser = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmActiveSessionsTableUser.setStatus('current')
pmActiveSessionsTableGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmActiveSessionsTableGroup.setStatus('current')
pmActiveSessionsTableType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmActiveSessionsTableType.setStatus('current')
pmActiveSessionsTableConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmActiveSessionsTableConnection.setStatus('current')
pmActiveSessionsTableSessionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmActiveSessionsTableSessionTime.setStatus('current')
pmActiveSessionsTableFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmActiveSessionsTableFrom.setStatus('current')
pmActiveSessionsTableKill = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("killSession", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmActiveSessionsTableKill.setStatus('current')
pmPowerMgmtNumSerialPorts = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtNumSerialPorts.setStatus('current')
pmPowerMgmtSerialTable = MibTable((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2), )
if mibBuilder.loadTexts: pmPowerMgmtSerialTable.setStatus('current')
pmPowerMgmtSerialTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1), ).setIndexNames((0, "PM-MIB", "pmPowerMgmtSerialTableIndex"))
if mibBuilder.loadTexts: pmPowerMgmtSerialTableEntry.setStatus('current')
pmPowerMgmtSerialTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSerialTableIndex.setStatus('current')
pmPowerMgmtSerialTablePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSerialTablePortNumber.setStatus('current')
pmPowerMgmtSerialTableDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSerialTableDeviceName.setStatus('current')
pmPowerMgmtSerialTableNumberPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSerialTableNumberPDUs.setStatus('current')
pmPowerMgmtSerialTableBuzzer = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSerialTableBuzzer.setStatus('current')
pmPowerMgmtSerialTableSyslog = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSerialTableSyslog.setStatus('current')
pmPowerMgmtSerialTableOverCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSerialTableOverCurrent.setStatus('current')
pmPowerMgmtSerialTableCycleInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSerialTableCycleInterval.setStatus('current')
pmPowerMgmtSerialTablePollRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSerialTablePollRate.setStatus('current')
pmPowerMgmtSerialTablePassWord = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSerialTablePassWord.setStatus('current')
pmPowerMgmtSerialTableSave = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("save", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSerialTableSave.setStatus('current')
pmPowerMgmtSerialTableRestore = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("restore", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSerialTableRestore.setStatus('current')
pmPowerMgmtPDUTable = MibTable((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3), )
if mibBuilder.loadTexts: pmPowerMgmtPDUTable.setStatus('current')
pmPowerMgmtPDUTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1), ).setIndexNames((0, "PM-MIB", "pmPowerMgmtPDUTablePortNumber"), (0, "PM-MIB", "pmPowerMgmtPDUTablePduIndex"))
if mibBuilder.loadTexts: pmPowerMgmtPDUTableEntry.setStatus('current')
pmPowerMgmtPDUTablePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePortNumber.setStatus('current')
pmPowerMgmtPDUTablePduIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePduIndex.setStatus('current')
pmPowerMgmtPDUTablePduId = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePduId.setStatus('current')
pmPowerMgmtPDUTablePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePortName.setStatus('current')
pmPowerMgmtPDUTableModel = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableModel.setStatus('current')
pmPowerMgmtPDUTableVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVendor.setStatus('current')
pmPowerMgmtPDUTableFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableFirmwareVersion.setStatus('current')
pmPowerMgmtPDUTableNumberOfOutlets = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableNumberOfOutlets.setStatus('current')
pmPowerMgmtPDUTableCurrentNOS = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrentNOS.setStatus('obsolete')
pmPowerMgmtPDUTableCurrent1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrent1Value.setStatus('obsolete')
pmPowerMgmtPDUTableCurrent1Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrent1Max.setStatus('obsolete')
pmPowerMgmtPDUTableCurrent2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrent2Value.setStatus('obsolete')
pmPowerMgmtPDUTableCurrent2Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrent2Max.setStatus('obsolete')
pmPowerMgmtPDUTableCurrent3Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrent3Value.setStatus('obsolete')
pmPowerMgmtPDUTableCurrent3Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrent3Max.setStatus('obsolete')
pmPowerMgmtPDUTableTemperatureNOS = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableTemperatureNOS.setStatus('obsolete')
pmPowerMgmtPDUTableTemperature1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableTemperature1Value.setStatus('obsolete')
pmPowerMgmtPDUTableTemperature1Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableTemperature1Max.setStatus('obsolete')
pmPowerMgmtPDUTableTemperature2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableTemperature2Value.setStatus('obsolete')
pmPowerMgmtPDUTableTemperature2Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableTemperature2Max.setStatus('obsolete')
pmPowerMgmtPDUTableTemperature3Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableTemperature3Value.setStatus('obsolete')
pmPowerMgmtPDUTableTemperature3Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableTemperature3Max.setStatus('obsolete')
pmPowerMgmtPDUTableHumidityNOS = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableHumidityNOS.setStatus('obsolete')
pmPowerMgmtPDUTableHumidity1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableHumidity1Value.setStatus('obsolete')
pmPowerMgmtPDUTableHumidity1Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableHumidity1Max.setStatus('obsolete')
pmPowerMgmtPDUTableHumidity2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableHumidity2Value.setStatus('obsolete')
pmPowerMgmtPDUTableHumidity2Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableHumidity2Max.setStatus('obsolete')
pmPowerMgmtPDUTableHumidity3Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableHumidity3Value.setStatus('obsolete')
pmPowerMgmtPDUTableHumidity3Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableHumidity3Max.setStatus('obsolete')
pmPowerMgmtPDUTableVoltageNOS = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltageNOS.setStatus('obsolete')
pmPowerMgmtPDUTableVoltage1Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltage1Value.setStatus('obsolete')
pmPowerMgmtPDUTableVoltage1Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltage1Max.setStatus('obsolete')
pmPowerMgmtPDUTableVoltage2Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltage2Value.setStatus('obsolete')
pmPowerMgmtPDUTableVoltage2Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltage2Max.setStatus('obsolete')
pmPowerMgmtPDUTableVoltage3Value = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltage3Value.setStatus('obsolete')
pmPowerMgmtPDUTableVoltage3Max = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltage3Max.setStatus('obsolete')
pmPowerMgmtPDUTableNumberOfPhases = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableNumberOfPhases.setStatus('current')
pmPowerMgmtPDUTableNumberOfBanks = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableNumberOfBanks.setStatus('current')
pmPowerMgmtPDUTableNumberOfSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableNumberOfSensors.setStatus('current')
pmPowerMgmtPDUTableFactoryDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableFactoryDefault.setStatus('current')
pmPowerMgmtPDUTableColdStartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 42), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableColdStartDelay.setStatus('current')
pmPowerMgmtPDUTableReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableReboot.setStatus('current')
pmPowerMgmtPDUTableMaxCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableMaxCurrent.setStatus('current')
pmPowerMgmtPDUTableAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("normal", 1), ("blow-fuse", 2), ("hw-ocp", 3), ("high-critical", 4), ("high-warning", 5), ("low-warning", 6), ("low-critical", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableAlarm.setStatus('current')
pmPowerMgmtPDUTableCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrentValue.setStatus('current')
pmPowerMgmtPDUTableCurrentMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrentMax.setStatus('current')
pmPowerMgmtPDUTableCurrentMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrentMin.setStatus('current')
pmPowerMgmtPDUTableCurrentAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrentAvg.setStatus('current')
pmPowerMgmtPDUTableCurrentReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrentReset.setStatus('current')
pmPowerMgmtPDUTablePowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerValue.setStatus('current')
pmPowerMgmtPDUTablePowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerMax.setStatus('current')
pmPowerMgmtPDUTablePowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerMin.setStatus('current')
pmPowerMgmtPDUTablePowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerAvg.setStatus('current')
pmPowerMgmtPDUTablePowerReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerReset.setStatus('current')
pmPowerMgmtPDUTablePowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerType.setStatus('current')
pmPowerMgmtPDUTableVoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltageValue.setStatus('current')
pmPowerMgmtPDUTableVoltageMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltageMax.setStatus('current')
pmPowerMgmtPDUTableVoltageMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltageMin.setStatus('current')
pmPowerMgmtPDUTableVoltageAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltageAvg.setStatus('current')
pmPowerMgmtPDUTableVoltageReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltageReset.setStatus('current')
pmPowerMgmtPDUTableVoltageType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableVoltageType.setStatus('current')
pmPowerMgmtPDUTablePowerFactorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerFactorValue.setStatus('current')
pmPowerMgmtPDUTablePowerFactorMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerFactorMax.setStatus('current')
pmPowerMgmtPDUTablePowerFactorMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerFactorMin.setStatus('current')
pmPowerMgmtPDUTablePowerFactorAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerFactorAvg.setStatus('current')
pmPowerMgmtPDUTablePowerFactorReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 84), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerFactorReset.setStatus('current')
pmPowerMgmtPDUTablePowerFactorType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 85), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerFactorType.setStatus('current')
pmPowerMgmtPDUTablePowerControl = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noAction", 1), ("powerOn", 2), ("powerOff", 3), ("powerCycle", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTablePowerControl.setStatus('current')
pmPowerMgmtPDUTableResetOCP = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 91), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableResetOCP.setStatus('current')
pmPowerMgmtPDUTableCurrentHighCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 100), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrentHighCritical.setStatus('current')
pmPowerMgmtPDUTableCurrentHighWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 101), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrentHighWarning.setStatus('current')
pmPowerMgmtPDUTableCurrentLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 102), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrentLowWarning.setStatus('current')
pmPowerMgmtPDUTableCurrentLowCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 103), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableCurrentLowCritical.setStatus('current')
pmPowerMgmtPDUTableEnergyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableEnergyValue.setStatus('current')
pmPowerMgmtPDUTableEnergyStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 106), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableEnergyStartTime.setStatus('current')
pmPowerMgmtPDUTableEnergyReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 3, 1, 107), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPDUTableEnergyReset.setStatus('current')
pmPowerMgmtTotalNumberOfOutlets = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtTotalNumberOfOutlets.setStatus('current')
pmPowerMgmtOutletsTable = MibTable((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5), )
if mibBuilder.loadTexts: pmPowerMgmtOutletsTable.setStatus('current')
pmPowerMgmtOutletsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1), ).setIndexNames((0, "PM-MIB", "pmPowerMgmtOutletsTablePortNumber"), (0, "PM-MIB", "pmPowerMgmtOutletsTablePduNumber"), (0, "PM-MIB", "pmPowerMgmtOutletsTableNumber"))
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableEntry.setStatus('current')
pmPowerMgmtOutletsTablePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePortNumber.setStatus('current')
pmPowerMgmtOutletsTablePduNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePduNumber.setStatus('current')
pmPowerMgmtOutletsTableNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableNumber.setStatus('current')
pmPowerMgmtOutletsTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableName.setStatus('current')
pmPowerMgmtOutletsTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("offLocked", 3), ("onLocked", 4), ("offCycle", 5), ("onPendingOff", 6), ("offPendingOn", 7), ("onPendingCycle", 8), ("notSet", 9), ("onFixed", 10), ("offShutdown", 11), ("tripped", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableStatus.setStatus('current')
pmPowerMgmtOutletsTablePowerControl = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAction", 1), ("powerOn", 2), ("powerOff", 3), ("powerCycle", 4), ("powerLock", 5), ("powerUnlock", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerControl.setStatus('current')
pmPowerMgmtOutletsTablePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePortName.setStatus('current')
pmPowerMgmtOutletsTablePduId = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePduId.setStatus('current')
pmPowerMgmtOutletsTablePostOnDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePostOnDelay.setStatus('current')
pmPowerMgmtOutletsTablePostOffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePostOffDelay.setStatus('current')
pmPowerMgmtOutletsTableAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("normal", 1), ("blow-fuse", 2), ("hw-ocp", 3), ("high-critical", 4), ("high-warning", 5), ("low-warning", 6), ("low-critical", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableAlarm.setStatus('current')
pmPowerMgmtOutletsTableCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableCurrentValue.setStatus('current')
pmPowerMgmtOutletsTableCurrentMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableCurrentMax.setStatus('current')
pmPowerMgmtOutletsTableCurrentMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableCurrentMin.setStatus('current')
pmPowerMgmtOutletsTableCurrentAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableCurrentAvg.setStatus('current')
pmPowerMgmtOutletsTableCurrentReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableCurrentReset.setStatus('current')
pmPowerMgmtOutletsTablePowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerValue.setStatus('current')
pmPowerMgmtOutletsTablePowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerMax.setStatus('current')
pmPowerMgmtOutletsTablePowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerMin.setStatus('current')
pmPowerMgmtOutletsTablePowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerAvg.setStatus('current')
pmPowerMgmtOutletsTablePowerReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerReset.setStatus('current')
pmPowerMgmtOutletsTablePowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerType.setStatus('current')
pmPowerMgmtOutletsTableVoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableVoltageValue.setStatus('current')
pmPowerMgmtOutletsTableVoltageMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableVoltageMax.setStatus('current')
pmPowerMgmtOutletsTableVoltageMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableVoltageMin.setStatus('current')
pmPowerMgmtOutletsTableVoltageAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableVoltageAvg.setStatus('current')
pmPowerMgmtOutletsTableVoltageReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableVoltageReset.setStatus('current')
pmPowerMgmtOutletsTableVoltageType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableVoltageType.setStatus('current')
pmPowerMgmtOutletsTablePowerFactorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerFactorValue.setStatus('current')
pmPowerMgmtOutletsTablePowerFactorMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerFactorMax.setStatus('current')
pmPowerMgmtOutletsTablePowerFactorMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerFactorMin.setStatus('current')
pmPowerMgmtOutletsTablePowerFactorAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerFactorAvg.setStatus('current')
pmPowerMgmtOutletsTablePowerFactorReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 84), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerFactorReset.setStatus('current')
pmPowerMgmtOutletsTablePowerFactorType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 85), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTablePowerFactorType.setStatus('current')
pmPowerMgmtOutletsTableCurrentHighCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 100), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableCurrentHighCritical.setStatus('current')
pmPowerMgmtOutletsTableCurrentHighWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 101), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableCurrentHighWarning.setStatus('current')
pmPowerMgmtOutletsTableCurrentLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 102), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableCurrentLowWarning.setStatus('current')
pmPowerMgmtOutletsTableCurrentLowCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 103), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableCurrentLowCritical.setStatus('current')
pmPowerMgmtOutletsTableEnergyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableEnergyValue.setStatus('current')
pmPowerMgmtOutletsTableEnergyStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 106), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableEnergyStartTime.setStatus('current')
pmPowerMgmtOutletsTableEnergyReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 5, 1, 107), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtOutletsTableEnergyReset.setStatus('current')
pmPowerMgmtNumberOfOutletGroup = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtNumberOfOutletGroup.setStatus('current')
pmPowerMgmtGroupTable = MibTable((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 7), )
if mibBuilder.loadTexts: pmPowerMgmtGroupTable.setStatus('current')
pmPowerMgmtGroupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 7, 1), ).setIndexNames((0, "PM-MIB", "pmPowerMgmtGroupTableIndex"))
if mibBuilder.loadTexts: pmPowerMgmtGroupTableEntry.setStatus('current')
pmPowerMgmtGroupTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 7, 1, 1), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtGroupTableIndex.setStatus('current')
pmPowerMgmtGroupTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtGroupTableName.setStatus('current')
pmPowerMgmtGroupTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtGroupTableStatus.setStatus('current')
pmPowerMgmtGroupTablePowerControl = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noAction", 1), ("powerOn", 2), ("powerOff", 3), ("powerCycle", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtGroupTablePowerControl.setStatus('current')
pmPowerMgmtTotalNumberOfPhases = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtTotalNumberOfPhases.setStatus('current')
pmPowerMgmtPhasesTable = MibTable((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9), )
if mibBuilder.loadTexts: pmPowerMgmtPhasesTable.setStatus('current')
pmPowerMgmtPhasesTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1), ).setIndexNames((0, "PM-MIB", "pmPowerMgmtPhasesTablePortNumber"), (0, "PM-MIB", "pmPowerMgmtPhasesTablePduNumber"), (0, "PM-MIB", "pmPowerMgmtPhasesTableNumber"))
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableEntry.setStatus('current')
pmPowerMgmtPhasesTablePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePortNumber.setStatus('current')
pmPowerMgmtPhasesTablePduNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePduNumber.setStatus('current')
pmPowerMgmtPhasesTableNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableNumber.setStatus('current')
pmPowerMgmtPhasesTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableName.setStatus('current')
pmPowerMgmtPhasesTablePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePortName.setStatus('current')
pmPowerMgmtPhasesTablePduId = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePduId.setStatus('current')
pmPowerMgmtPhasesTableAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("normal", 1), ("blow-fuse", 2), ("hw-ocp", 3), ("high-critical", 4), ("high-warning", 5), ("low-warning", 6), ("low-critical", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableAlarm.setStatus('current')
pmPowerMgmtPhasesTableCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableCurrentValue.setStatus('current')
pmPowerMgmtPhasesTableCurrentMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableCurrentMax.setStatus('current')
pmPowerMgmtPhasesTableCurrentMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableCurrentMin.setStatus('current')
pmPowerMgmtPhasesTableCurrentAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableCurrentAvg.setStatus('current')
pmPowerMgmtPhasesTableCurrentReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableCurrentReset.setStatus('current')
pmPowerMgmtPhasesTablePowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerValue.setStatus('current')
pmPowerMgmtPhasesTablePowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerMax.setStatus('current')
pmPowerMgmtPhasesTablePowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerMin.setStatus('current')
pmPowerMgmtPhasesTablePowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerAvg.setStatus('current')
pmPowerMgmtPhasesTablePowerReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerReset.setStatus('current')
pmPowerMgmtPhasesTablePowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerType.setStatus('current')
pmPowerMgmtPhasesTableVoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableVoltageValue.setStatus('current')
pmPowerMgmtPhasesTableVoltageMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableVoltageMax.setStatus('current')
pmPowerMgmtPhasesTableVoltageMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableVoltageMin.setStatus('current')
pmPowerMgmtPhasesTableVoltageAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableVoltageAvg.setStatus('current')
pmPowerMgmtPhasesTableVoltageReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableVoltageReset.setStatus('current')
pmPowerMgmtPhasesTableVoltageType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableVoltageType.setStatus('current')
pmPowerMgmtPhasesTablePowerFactorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerFactorValue.setStatus('current')
pmPowerMgmtPhasesTablePowerFactorMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerFactorMax.setStatus('current')
pmPowerMgmtPhasesTablePowerFactorMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerFactorMin.setStatus('current')
pmPowerMgmtPhasesTablePowerFactorAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerFactorAvg.setStatus('current')
pmPowerMgmtPhasesTablePowerFactorReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 84), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerFactorReset.setStatus('current')
pmPowerMgmtPhasesTablePowerFactorType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 85), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTablePowerFactorType.setStatus('current')
pmPowerMgmtPhasesTableCurrentHighCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 100), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableCurrentHighCritical.setStatus('current')
pmPowerMgmtPhasesTableCurrentHighWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 101), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableCurrentHighWarning.setStatus('current')
pmPowerMgmtPhasesTableCurrentLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 102), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableCurrentLowWarning.setStatus('current')
pmPowerMgmtPhasesTableCurrentLowCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 9, 1, 103), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtPhasesTableCurrentLowCritical.setStatus('current')
pmPowerMgmtTotalNumberOfBanks = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtTotalNumberOfBanks.setStatus('current')
pmPowerMgmtBanksTable = MibTable((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11), )
if mibBuilder.loadTexts: pmPowerMgmtBanksTable.setStatus('current')
pmPowerMgmtBanksTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1), ).setIndexNames((0, "PM-MIB", "pmPowerMgmtBanksTablePortNumber"), (0, "PM-MIB", "pmPowerMgmtBanksTablePduNumber"), (0, "PM-MIB", "pmPowerMgmtBanksTableNumber"))
if mibBuilder.loadTexts: pmPowerMgmtBanksTableEntry.setStatus('current')
pmPowerMgmtBanksTablePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePortNumber.setStatus('current')
pmPowerMgmtBanksTablePduNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePduNumber.setStatus('current')
pmPowerMgmtBanksTableNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableNumber.setStatus('current')
pmPowerMgmtBanksTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableName.setStatus('current')
pmPowerMgmtBanksTablePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePortName.setStatus('current')
pmPowerMgmtBanksTablePduId = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePduId.setStatus('current')
pmPowerMgmtBanksTableAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("normal", 1), ("blow-fuse", 2), ("hw-ocp", 3), ("high-critical", 4), ("high-warning", 5), ("low-warning", 6), ("low-critical", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableAlarm.setStatus('current')
pmPowerMgmtBanksTableCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableCurrentValue.setStatus('current')
pmPowerMgmtBanksTableCurrentMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableCurrentMax.setStatus('current')
pmPowerMgmtBanksTableCurrentMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableCurrentMin.setStatus('current')
pmPowerMgmtBanksTableCurrentAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableCurrentAvg.setStatus('current')
pmPowerMgmtBanksTableCurrentReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableCurrentReset.setStatus('current')
pmPowerMgmtBanksTablePowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerValue.setStatus('current')
pmPowerMgmtBanksTablePowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerMax.setStatus('current')
pmPowerMgmtBanksTablePowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerMin.setStatus('current')
pmPowerMgmtBanksTablePowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerAvg.setStatus('current')
pmPowerMgmtBanksTablePowerReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerReset.setStatus('current')
pmPowerMgmtBanksTablePowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerType.setStatus('current')
pmPowerMgmtBanksTableVoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableVoltageValue.setStatus('current')
pmPowerMgmtBanksTableVoltageMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableVoltageMax.setStatus('current')
pmPowerMgmtBanksTableVoltageMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableVoltageMin.setStatus('current')
pmPowerMgmtBanksTableVoltageAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableVoltageAvg.setStatus('current')
pmPowerMgmtBanksTableVoltageReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableVoltageReset.setStatus('current')
pmPowerMgmtBanksTableVoltageType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableVoltageType.setStatus('current')
pmPowerMgmtBanksTablePowerFactorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerFactorValue.setStatus('current')
pmPowerMgmtBanksTablePowerFactorMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerFactorMax.setStatus('current')
pmPowerMgmtBanksTablePowerFactorMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerFactorMin.setStatus('current')
pmPowerMgmtBanksTablePowerFactorAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerFactorAvg.setStatus('current')
pmPowerMgmtBanksTablePowerFactorReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 84), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerFactorReset.setStatus('current')
pmPowerMgmtBanksTablePowerFactorType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 85), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none-sensor", 0), ("estimated", 1), ("measured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTablePowerFactorType.setStatus('current')
pmPowerMgmtBanksTableCurrentHighCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 100), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableCurrentHighCritical.setStatus('current')
pmPowerMgmtBanksTableCurrentHighWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 101), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableCurrentHighWarning.setStatus('current')
pmPowerMgmtBanksTableCurrentLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 102), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableCurrentLowWarning.setStatus('current')
pmPowerMgmtBanksTableCurrentLowCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 103), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableCurrentLowCritical.setStatus('current')
pmPowerMgmtBanksTableEnergyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableEnergyValue.setStatus('current')
pmPowerMgmtBanksTableEnergyStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 106), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableEnergyStartTime.setStatus('current')
pmPowerMgmtBanksTableEnergyReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 11, 1, 107), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtBanksTableEnergyReset.setStatus('current')
pmPowerMgmtTotalNumberOfSensors = MibScalar((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtTotalNumberOfSensors.setStatus('current')
pmPowerMgmtSensorsTable = MibTable((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13), )
if mibBuilder.loadTexts: pmPowerMgmtSensorsTable.setStatus('current')
pmPowerMgmtSensorsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1), ).setIndexNames((0, "PM-MIB", "pmPowerMgmtSensorsTablePortNumber"), (0, "PM-MIB", "pmPowerMgmtSensorsTablePduNumber"), (0, "PM-MIB", "pmPowerMgmtSensorsTableNumber"))
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableEntry.setStatus('current')
pmPowerMgmtSensorsTablePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTablePortNumber.setStatus('current')
pmPowerMgmtSensorsTablePduNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTablePduNumber.setStatus('current')
pmPowerMgmtSensorsTableNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableNumber.setStatus('current')
pmPowerMgmtSensorsTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableName.setStatus('current')
pmPowerMgmtSensorsTablePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTablePortName.setStatus('current')
pmPowerMgmtSensorsTablePduId = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTablePduId.setStatus('current')
pmPowerMgmtSensorsTableType = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("temp-internal", 1), ("temperature", 2), ("humidity", 3), ("air-flow", 4), ("smoke", 5), ("dry-concact", 6), ("water-level", 7), ("motion", 8), ("unplugged", 9), ("unknown", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableType.setStatus('current')
pmPowerMgmtSensorsTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("normal", 1), ("triggered", 2), ("not-applicable", 3), ("opened", 4), ("closed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableStatus.setStatus('current')
pmPowerMgmtSensorsTableValue = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableValue.setStatus('current')
pmPowerMgmtSensorsTableValueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableValueMax.setStatus('current')
pmPowerMgmtSensorsTableValueMin = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableValueMin.setStatus('current')
pmPowerMgmtSensorsTableValueAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableValueAvg.setStatus('current')
pmPowerMgmtSensorsTableValueInt = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableValueInt.setStatus('current')
pmPowerMgmtSensorsTableValueMaxInt = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableValueMaxInt.setStatus('current')
pmPowerMgmtSensorsTableValueMinInt = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableValueMinInt.setStatus('current')
pmPowerMgmtSensorsTableValueAvgInt = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableValueAvgInt.setStatus('current')
pmPowerMgmtSensorsTableValueReset = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableValueReset.setStatus('current')
pmPowerMgmtSensorsTableHighCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 40), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableHighCritical.setStatus('current')
pmPowerMgmtSensorsTableHighWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 41), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableHighWarning.setStatus('current')
pmPowerMgmtSensorsTableLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 42), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableLowWarning.setStatus('current')
pmPowerMgmtSensorsTableLowCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 43), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableLowCritical.setStatus('current')
pmPowerMgmtSensorsTableUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("fahrenheit", 2), ("celsius", 3), ("percent", 4), ("afu", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableUnit.setStatus('current')
pmPowerMgmtSensorsTableHighCriticalC = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableHighCriticalC.setStatus('current')
pmPowerMgmtSensorsTableHighWarningC = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableHighWarningC.setStatus('current')
pmPowerMgmtSensorsTableLowWarningC = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableLowWarningC.setStatus('current')
pmPowerMgmtSensorsTableLowCriticalC = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableLowCriticalC.setStatus('current')
pmPowerMgmtSensorsTableHighCriticalF = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableHighCriticalF.setStatus('current')
pmPowerMgmtSensorsTableHighWarningF = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableHighWarningF.setStatus('current')
pmPowerMgmtSensorsTableLowWarningF = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableLowWarningF.setStatus('current')
pmPowerMgmtSensorsTableLowCriticalF = MibTableColumn((1, 3, 6, 1, 4, 1, 10418, 17, 2, 5, 13, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmPowerMgmtSensorsTableLowCriticalF.setStatus('current')
mibBuilder.exportSymbols("PM-MIB", pmPowerMgmtSensorsTableValueAvg=pmPowerMgmtSensorsTableValueAvg, pmPowerMgmtPDUTableCurrent1Max=pmPowerMgmtPDUTableCurrent1Max, pmPowerMgmtPDUTableNumberOfBanks=pmPowerMgmtPDUTableNumberOfBanks, pmPowerMgmtPDUTablePowerValue=pmPowerMgmtPDUTablePowerValue, pm3024=pm3024, pmPowerMgmtBanksTableCurrentMin=pmPowerMgmtBanksTableCurrentMin, pm3020=pm3020, pmEIDNumber=pmEIDNumber, pmActiveSessionsTableIndex=pmActiveSessionsTableIndex, pmPowerMgmtOutletsTablePowerMin=pmPowerMgmtOutletsTablePowerMin, pmPowerMgmtPDUTableVendor=pmPowerMgmtPDUTableVendor, pmPowerMgmtSerialTableRestore=pmPowerMgmtSerialTableRestore, pm1020=pm1020, pmPowerMgmtPDUTableVoltage3Value=pmPowerMgmtPDUTableVoltage3Value, pmPowerMgmtOutletsTableCurrentHighWarning=pmPowerMgmtOutletsTableCurrentHighWarning, pmPowerMgmtPDUTableVoltage3Max=pmPowerMgmtPDUTableVoltage3Max, pmPowerMgmtPhasesTableCurrentLowWarning=pmPowerMgmtPhasesTableCurrentLowWarning, pmPowerMgmtBanksTableCurrentMax=pmPowerMgmtBanksTableCurrentMax, pmPowerMgmtPDUTableCurrent3Max=pmPowerMgmtPDUTableCurrent3Max, pmPowerMgmtOutletsTableCurrentLowCritical=pmPowerMgmtOutletsTableCurrentLowCritical, pmPowerMgmtPhasesTableVoltageMin=pmPowerMgmtPhasesTableVoltageMin, pmPowerMgmtPDUTablePowerFactorMax=pmPowerMgmtPDUTablePowerFactorMax, pm=pm, pmPowerMgmtBanksTablePowerFactorValue=pmPowerMgmtBanksTablePowerFactorValue, pmPowerMgmtSensorsTableHighCriticalC=pmPowerMgmtSensorsTableHighCriticalC, pmPowerMgmtNumSerialPorts=pmPowerMgmtNumSerialPorts, pmPowerMgmtBanksTableVoltageAvg=pmPowerMgmtBanksTableVoltageAvg, pmPowerMgmtSensorsTablePortNumber=pmPowerMgmtSensorsTablePortNumber, pmPowerMgmtPDUTablePduIndex=pmPowerMgmtPDUTablePduIndex, pmPowerMgmtPDUTablePowerAvg=pmPowerMgmtPDUTablePowerAvg, pmPowerMgmtBanksTableCurrentHighWarning=pmPowerMgmtBanksTableCurrentHighWarning, pmPowerMgmtOutletsTablePowerFactorType=pmPowerMgmtOutletsTablePowerFactorType, pmPowerMgmtSensorsTableValueMaxInt=pmPowerMgmtSensorsTableValueMaxInt, pmPowerMgmtSensorsTableValueInt=pmPowerMgmtSensorsTableValueInt, pmProductModel=pmProductModel, pmPowerMgmtPDUTableCurrentReset=pmPowerMgmtPDUTableCurrentReset, pmPowerMgmtOutletsTableEnergyValue=pmPowerMgmtOutletsTableEnergyValue, pmPowerMgmtBanksTableCurrentAvg=pmPowerMgmtBanksTableCurrentAvg, pmPowerMgmtPhasesTablePowerReset=pmPowerMgmtPhasesTablePowerReset, pmPowerMgmtPDUTableAlarm=pmPowerMgmtPDUTableAlarm, pmProducts=pmProducts, pmPowerMgmtOutletsTableCurrentAvg=pmPowerMgmtOutletsTableCurrentAvg, pmPowerMgmtSensorsTableValueMax=pmPowerMgmtSensorsTableValueMax, pmPowerMgmtSerialTableOverCurrent=pmPowerMgmtSerialTableOverCurrent, pmPowerMgmtPDUTableCurrentHighWarning=pmPowerMgmtPDUTableCurrentHighWarning, pmPowerMgmtPhasesTableCurrentMin=pmPowerMgmtPhasesTableCurrentMin, pmPowerMgmtPDUTablePowerType=pmPowerMgmtPDUTablePowerType, pmPowerMgmtOutletsTableVoltageValue=pmPowerMgmtOutletsTableVoltageValue, pmPowerMgmtBanksTableCurrentReset=pmPowerMgmtBanksTableCurrentReset, pmPowerMgmtSensorsTableLowWarningF=pmPowerMgmtSensorsTableLowWarningF, pm3006=pm3006, pmPowerMgmtOutletsTableCurrentLowWarning=pmPowerMgmtOutletsTableCurrentLowWarning, pmPowerMgmtPhasesTableNumber=pmPowerMgmtPhasesTableNumber, pmPowerMgmtSensorsTableLowWarning=pmPowerMgmtSensorsTableLowWarning, pmPowerMgmtSensorsTableLowCriticalC=pmPowerMgmtSensorsTableLowCriticalC, pmPowerMgmtOutletsTablePowerFactorValue=pmPowerMgmtOutletsTablePowerFactorValue, pmPowerMgmtOutletsTablePowerReset=pmPowerMgmtOutletsTablePowerReset, pmPowerMgmtPDUTableHumidity1Max=pmPowerMgmtPDUTableHumidity1Max, pmTrapObject=pmTrapObject, pmPowerMgmtOutletsTablePowerType=pmPowerMgmtOutletsTablePowerType, pmPowerMgmtPhasesTableVoltageMax=pmPowerMgmtPhasesTableVoltageMax, pmPowerMgmtPDUTableFactoryDefault=pmPowerMgmtPDUTableFactoryDefault, pmPowerMgmtPhasesTablePowerFactorValue=pmPowerMgmtPhasesTablePowerFactorValue, pmPowerMgmtBanksTablePortNumber=pmPowerMgmtBanksTablePortNumber, pmPowerMgmtBanksTablePowerMin=pmPowerMgmtBanksTablePowerMin, pmPowerMgmtPDUTableTemperature2Value=pmPowerMgmtPDUTableTemperature2Value, pmPowerMgmtPDUTableTemperature3Value=pmPowerMgmtPDUTableTemperature3Value, pm3010=pm3010, pmPowerMgmtOutletsTablePowerFactorAvg=pmPowerMgmtOutletsTablePowerFactorAvg, pmPowerMgmtBanksTableCurrentHighCritical=pmPowerMgmtBanksTableCurrentHighCritical, pmPowerMgmtPDUTableTemperature3Max=pmPowerMgmtPDUTableTemperature3Max, pmPowerMgmtOutletsTableCurrentReset=pmPowerMgmtOutletsTableCurrentReset, pmPowerMgmtSensorsTableNumber=pmPowerMgmtSensorsTableNumber, pmPowerMgmtPDUTableCurrentValue=pmPowerMgmtPDUTableCurrentValue, pmPowerMgmtOutletsTablePostOnDelay=pmPowerMgmtOutletsTablePostOnDelay, pmPowerMgmtBanksTablePduNumber=pmPowerMgmtBanksTablePduNumber, pmPowerMgmtOutletsTablePortNumber=pmPowerMgmtOutletsTablePortNumber, pmPowerMgmtSensorsTablePortName=pmPowerMgmtSensorsTablePortName, pmPowerMgmtPDUTablePortName=pmPowerMgmtPDUTablePortName, pmPowerMgmtBanksTableVoltageValue=pmPowerMgmtBanksTableVoltageValue, pmPowerMgmtPDUTableCurrentNOS=pmPowerMgmtPDUTableCurrentNOS, pmPowerMgmtSensorsTableType=pmPowerMgmtSensorsTableType, pmPowerMgmtPhasesTableCurrentValue=pmPowerMgmtPhasesTableCurrentValue, pmPowerMgmtPhasesTablePowerFactorReset=pmPowerMgmtPhasesTablePowerFactorReset, pmPowerMgmtPDUTableHumidity2Max=pmPowerMgmtPDUTableHumidity2Max, pmManagement=pmManagement, pmPowerMgmtPDUTableVoltageReset=pmPowerMgmtPDUTableVoltageReset, pmPowerMgmtOutletsTableVoltageMax=pmPowerMgmtOutletsTableVoltageMax, pmPowerMgmtPDUTableCurrentMax=pmPowerMgmtPDUTableCurrentMax, pmPowerMgmtPDUTableEnergyReset=pmPowerMgmtPDUTableEnergyReset, pmPowerMgmtOutletsTablePowerControl=pmPowerMgmtOutletsTablePowerControl, pm2020=pm2020, pmPowerMgmtOutletsTableEnergyStartTime=pmPowerMgmtOutletsTableEnergyStartTime, pmPowerMgmtOutletsTablePostOffDelay=pmPowerMgmtOutletsTablePostOffDelay, pmPowerMgmtPDUTableEnergyStartTime=pmPowerMgmtPDUTableEnergyStartTime, pmPowerMgmtPhasesTablePowerFactorMax=pmPowerMgmtPhasesTablePowerFactorMax, pmPowerMgmtPhasesTablePowerFactorType=pmPowerMgmtPhasesTablePowerFactorType, pmPowerMgmtPDUTableTemperature1Value=pmPowerMgmtPDUTableTemperature1Value, pmPowerMgmtPDUTablePowerMin=pmPowerMgmtPDUTablePowerMin, pmPowerMgmtSerialTableBuzzer=pmPowerMgmtSerialTableBuzzer, pmPowerMgmtPDUTableTemperatureNOS=pmPowerMgmtPDUTableTemperatureNOS, pmPowerMgmtPDUTableEnergyValue=pmPowerMgmtPDUTableEnergyValue, pmPowerMgmtPDUTableVoltageValue=pmPowerMgmtPDUTableVoltageValue, pmPowerMgmtOutletsTablePortName=pmPowerMgmtOutletsTablePortName, pmPowerMgmtOutletsTablePowerMax=pmPowerMgmtOutletsTablePowerMax, pmPowerMgmtPhasesTableEntry=pmPowerMgmtPhasesTableEntry, pmPowerMgmtSensorsTableHighWarningC=pmPowerMgmtSensorsTableHighWarningC, pmPowerMgmtBanksTableEntry=pmPowerMgmtBanksTableEntry, pmPowerMgmtSerialTableSyslog=pmPowerMgmtSerialTableSyslog, pmPowerMgmtPDUTableHumidity2Value=pmPowerMgmtPDUTableHumidity2Value, pmPowerMgmtSensorsTableHighCriticalF=pmPowerMgmtSensorsTableHighCriticalF, pmPowerMgmtSensorsTableValueAvgInt=pmPowerMgmtSensorsTableValueAvgInt, pmPowerMgmtPDUTableCurrent2Max=pmPowerMgmtPDUTableCurrent2Max, pmPowerMgmtSensorsTableValue=pmPowerMgmtSensorsTableValue, pm2006=pm2006, pmPowerMgmtPDUTablePduId=pmPowerMgmtPDUTablePduId, pmPowerMgmtPDUTableVoltageType=pmPowerMgmtPDUTableVoltageType, pmPowerMgmtPDUTablePowerFactorReset=pmPowerMgmtPDUTablePowerFactorReset, pmPowerMgmtOutletsTableVoltageMin=pmPowerMgmtOutletsTableVoltageMin, pmPowerMgmtBanksTableAlarm=pmPowerMgmtBanksTableAlarm, pmPowerMgmtSensorsTableHighCritical=pmPowerMgmtSensorsTableHighCritical, pmPowerMgmtBanksTable=pmPowerMgmtBanksTable, pmPowerMgmtBanksTableNumber=pmPowerMgmtBanksTableNumber, pmPowerMgmtBanksTablePowerFactorAvg=pmPowerMgmtBanksTablePowerFactorAvg, pmPowerMgmtPhasesTablePowerMin=pmPowerMgmtPhasesTablePowerMin, pmPowerMgmtSensorsTableUnit=pmPowerMgmtSensorsTableUnit, pmPowerMgmtPhasesTablePowerAvg=pmPowerMgmtPhasesTablePowerAvg, pmPowerMgmtBanksTablePowerMax=pmPowerMgmtBanksTablePowerMax, pmPowerMgmtSerialTablePortNumber=pmPowerMgmtSerialTablePortNumber, pmPowerMgmtOutletsTableCurrentMin=pmPowerMgmtOutletsTableCurrentMin, pmPowerMgmtPhasesTableName=pmPowerMgmtPhasesTableName, pmPowerMgmtSensorsTableValueMinInt=pmPowerMgmtSensorsTableValueMinInt, pmPowerMgmtBanksTablePowerAvg=pmPowerMgmtBanksTablePowerAvg, pmPowerMgmtPDUTableNumberOfSensors=pmPowerMgmtPDUTableNumberOfSensors, pmPowerMgmtSensorsTable=pmPowerMgmtSensorsTable, pmPowerMgmtPDUTableReboot=pmPowerMgmtPDUTableReboot, pmPowerMgmtOutletsTableCurrentMax=pmPowerMgmtOutletsTableCurrentMax, pmPowerMgmtBanksTableCurrentValue=pmPowerMgmtBanksTableCurrentValue, pmPowerMgmtBanksTablePowerFactorMin=pmPowerMgmtBanksTablePowerFactorMin, pmPowerMgmtSensorsTableValueReset=pmPowerMgmtSensorsTableValueReset, pmPowerMgmtPhasesTableVoltageReset=pmPowerMgmtPhasesTableVoltageReset, pmPowerMgmtBanksTableEnergyStartTime=pmPowerMgmtBanksTableEnergyStartTime, pmPowerMgmtPhasesTablePortNumber=pmPowerMgmtPhasesTablePortNumber, pmPowerMgmtSerialTableSave=pmPowerMgmtSerialTableSave, pmPowerMgmtPDUTableHumidity3Value=pmPowerMgmtPDUTableHumidity3Value, pmPowerMgmtSensorsTablePduNumber=pmPowerMgmtSensorsTablePduNumber, pmBootcodeVersion=pmBootcodeVersion, pmPowerMgmtPhasesTablePortName=pmPowerMgmtPhasesTablePortName, pm1024=pm1024, pmPowerMgmtSensorsTableLowCritical=pmPowerMgmtSensorsTableLowCritical, pmPowerMgmtPDUTablePowerControl=pmPowerMgmtPDUTablePowerControl, pmFirmwareVersion=pmFirmwareVersion, pmPowerMgmtSensorsTableLowCriticalF=pmPowerMgmtSensorsTableLowCriticalF, pmPowerMgmtPDUTableCurrentMin=pmPowerMgmtPDUTableCurrentMin, pmPowerMgmtPDUTableVoltageMax=pmPowerMgmtPDUTableVoltageMax, pmPowerMgmtBanksTablePowerFactorType=pmPowerMgmtBanksTablePowerFactorType, pmPowerMgmtBanksTableEnergyValue=pmPowerMgmtBanksTableEnergyValue, pmActiveSessionsTableEntry=pmActiveSessionsTableEntry, pmActiveSessionsTable=pmActiveSessionsTable, pmPowerMgmtOutletsTableCurrentValue=pmPowerMgmtOutletsTableCurrentValue, pmActiveSessionsNumberOfSession=pmActiveSessionsNumberOfSession, pmPowerMgmtPDUTableResetOCP=pmPowerMgmtPDUTableResetOCP, pmPowerMgmtOutletsTablePowerValue=pmPowerMgmtOutletsTablePowerValue, pmPowerMgmtOutletsTablePowerFactorMin=pmPowerMgmtOutletsTablePowerFactorMin, pmPowerMgmtBanksTablePowerValue=pmPowerMgmtBanksTablePowerValue, pmPowerMgmtBanksTableCurrentLowWarning=pmPowerMgmtBanksTableCurrentLowWarning, pmPowerMgmtOutletsTableEntry=pmPowerMgmtOutletsTableEntry, pmPowerMgmtSerialTableIndex=pmPowerMgmtSerialTableIndex, pmPowerMgmtPhasesTablePowerFactorAvg=pmPowerMgmtPhasesTablePowerFactorAvg, pmPowerMgmtPDUTableCurrentLowCritical=pmPowerMgmtPDUTableCurrentLowCritical, pmActiveSessionsTableFrom=pmActiveSessionsTableFrom, pmPowerMgmtPDUTableHumidityNOS=pmPowerMgmtPDUTableHumidityNOS, pmPowerMgmtPDUTableCurrentHighCritical=pmPowerMgmtPDUTableCurrentHighCritical, pmPowerMgmtBanksTableVoltageReset=pmPowerMgmtBanksTableVoltageReset, pmPowerMgmtOutletsTablePduId=pmPowerMgmtOutletsTablePduId, pmPowerMgmtSensorsTableValueMin=pmPowerMgmtSensorsTableValueMin, pmPowerMgmtPDUTableCurrentAvg=pmPowerMgmtPDUTableCurrentAvg, pmPowerMgmtPhasesTableVoltageValue=pmPowerMgmtPhasesTableVoltageValue, pmPowerMgmtBanksTablePowerFactorReset=pmPowerMgmtBanksTablePowerFactorReset, pmPowerMgmtTotalNumberOfPhases=pmPowerMgmtTotalNumberOfPhases, pmPowerMgmtPhasesTablePowerValue=pmPowerMgmtPhasesTablePowerValue, pmActiveSessionsTableType=pmActiveSessionsTableType, pmPowerMgmtPhasesTablePowerFactorMin=pmPowerMgmtPhasesTablePowerFactorMin, pmPowerMgmtPDUTableVoltage1Value=pmPowerMgmtPDUTableVoltage1Value, pmPowerMgmtPDUTableVoltageMin=pmPowerMgmtPDUTableVoltageMin, pmPowerMgmtPDUTablePowerFactorValue=pmPowerMgmtPDUTablePowerFactorValue, pmActiveSessionsTableGroup=pmActiveSessionsTableGroup, pmPowerMgmtSensorsTableHighWarningF=pmPowerMgmtSensorsTableHighWarningF, pmPowerMgmtPDUTableVoltageAvg=pmPowerMgmtPDUTableVoltageAvg, pmHostName=pmHostName, pmPowerMgmtPDUTableFirmwareVersion=pmPowerMgmtPDUTableFirmwareVersion, pmPowerMgmtPDUTablePortNumber=pmPowerMgmtPDUTablePortNumber, pmPowerMgmtPDUTableTemperature2Max=pmPowerMgmtPDUTableTemperature2Max, pmPowerMgmtSerialTable=pmPowerMgmtSerialTable, pmPowerMgmtBanksTableVoltageMax=pmPowerMgmtBanksTableVoltageMax, pmActiveSessionsTableSessionTime=pmActiveSessionsTableSessionTime, pmPowerMgmtPhasesTableVoltageType=pmPowerMgmtPhasesTableVoltageType, pmPowerMgmtPDUTableVoltageNOS=pmPowerMgmtPDUTableVoltageNOS, pmReboot=pmReboot, pmPowerMgmtPDUTablePowerFactorAvg=pmPowerMgmtPDUTablePowerFactorAvg, pmPowerMgmtGroupTableName=pmPowerMgmtGroupTableName, pmPowerMgmtGroupTableEntry=pmPowerMgmtGroupTableEntry, pmPartNumber=pmPartNumber, pmPowerMgmtSerialTablePassWord=pmPowerMgmtSerialTablePassWord, pmPowerMgmtSensorsTableHighWarning=pmPowerMgmtSensorsTableHighWarning, pm3003=pm3003, pm2010=pm2010, pmSerialNumber=pmSerialNumber, pmPowerMgmtPDUTablePowerFactorType=pmPowerMgmtPDUTablePowerFactorType, pmPowerMgmtOutletsTableVoltageType=pmPowerMgmtOutletsTableVoltageType, pmPowerMgmtBanksTableEnergyReset=pmPowerMgmtBanksTableEnergyReset, pmPowerMgmtPDUTableVoltage2Max=pmPowerMgmtPDUTableVoltage2Max, pm2024=pm2024, pmPowerMgmtPDUTableMaxCurrent=pmPowerMgmtPDUTableMaxCurrent, pmPowerMgmtOutletsTableNumber=pmPowerMgmtOutletsTableNumber, pmActiveSessionsTableUser=pmActiveSessionsTableUser, pmPowerMgmtSerialTableEntry=pmPowerMgmtSerialTableEntry, pmPowerMgmtPhasesTable=pmPowerMgmtPhasesTable, pmPowerMgmtPhasesTablePduNumber=pmPowerMgmtPhasesTablePduNumber, pmPowerMgmtTotalNumberOfOutlets=pmPowerMgmtTotalNumberOfOutlets, pmPowerMgmtOutletsTablePowerAvg=pmPowerMgmtOutletsTablePowerAvg, pmPowerMgmtSensorsTableStatus=pmPowerMgmtSensorsTableStatus, pmPowerMgmtOutletsTableCurrentHighCritical=pmPowerMgmtOutletsTableCurrentHighCritical, pmPowerMgmtPDUTableEntry=pmPowerMgmtPDUTableEntry, pmPowerMgmtGroupTableIndex=pmPowerMgmtGroupTableIndex, pmPowerMgmtPhasesTableCurrentAvg=pmPowerMgmtPhasesTableCurrentAvg, pmPowerMgmtBanksTablePduId=pmPowerMgmtBanksTablePduId, pmPowerMgmtPDUTableTemperature1Max=pmPowerMgmtPDUTableTemperature1Max, pmPowerMgmtBanksTableCurrentLowCritical=pmPowerMgmtBanksTableCurrentLowCritical, pmPowerMgmtPDUTable=pmPowerMgmtPDUTable, pmPowerMgmtOutletsTableEnergyReset=pmPowerMgmtOutletsTableEnergyReset, pmPowerMgmtPhasesTableVoltageAvg=pmPowerMgmtPhasesTableVoltageAvg, pmPowerMgmtOutletsTableAlarm=pmPowerMgmtOutletsTableAlarm, pmPowerMgmtPhasesTablePowerType=pmPowerMgmtPhasesTablePowerType, pmPowerMgmtSerialTableCycleInterval=pmPowerMgmtSerialTableCycleInterval, pmPowerMgmtSensorsTableLowWarningC=pmPowerMgmtSensorsTableLowWarningC, pmPowerMgmtPDUTableHumidity3Max=pmPowerMgmtPDUTableHumidity3Max, pmActiveSessionsTableConnection=pmActiveSessionsTableConnection, pmPowerMgmtPDUTableNumberOfPhases=pmPowerMgmtPDUTableNumberOfPhases, pmPowerMgmtPDUTablePowerReset=pmPowerMgmtPDUTablePowerReset, PYSNMP_MODULE_ID=pm, pmPowerMgmtPDUTableHumidity1Value=pmPowerMgmtPDUTableHumidity1Value, pmPowerMgmtPDUTableCurrent3Value=pmPowerMgmtPDUTableCurrent3Value, pmPowerMgmtBanksTablePowerType=pmPowerMgmtBanksTablePowerType, pm2003=pm2003, pm1010=pm1010, pmPowerMgmtOutletsTableVoltageAvg=pmPowerMgmtOutletsTableVoltageAvg, pmPowerMgmtSerialTableNumberPDUs=pmPowerMgmtSerialTableNumberPDUs, pmPowerMgmtPDUTableModel=pmPowerMgmtPDUTableModel, pmPowerMgmtOutletsTablePowerFactorMax=pmPowerMgmtOutletsTablePowerFactorMax, pmPowerMgmtGroupTable=pmPowerMgmtGroupTable, pmPowerMgmtPhasesTableAlarm=pmPowerMgmtPhasesTableAlarm, pmAppliance=pmAppliance, pmPowerMgmtPhasesTableCurrentHighWarning=pmPowerMgmtPhasesTableCurrentHighWarning)
mibBuilder.exportSymbols("PM-MIB", pmPowerMgmtBanksTablePortName=pmPowerMgmtBanksTablePortName, pmPowerMgmtSensorsTableName=pmPowerMgmtSensorsTableName, pmPowerMgmtOutletsTableName=pmPowerMgmtOutletsTableName, pmPowerMgmtPhasesTableCurrentMax=pmPowerMgmtPhasesTableCurrentMax, pmPowerMgmtTotalNumberOfBanks=pmPowerMgmtTotalNumberOfBanks, pmPowerMgmtPDUTablePowerFactorMin=pmPowerMgmtPDUTablePowerFactorMin, pmPowerMgmtNumberOfOutletGroup=pmPowerMgmtNumberOfOutletGroup, pmPowerMgmtPDUTableCurrent2Value=pmPowerMgmtPDUTableCurrent2Value, pmPowerMgmtOutletsTableStatus=pmPowerMgmtOutletsTableStatus, pmPowerMgmtPhasesTablePowerMax=pmPowerMgmtPhasesTablePowerMax, pmPowerMgmtOutletsTablePowerFactorReset=pmPowerMgmtOutletsTablePowerFactorReset, pmPowerMgmtBanksTableVoltageType=pmPowerMgmtBanksTableVoltageType, pmPowerMgmtBanksTableName=pmPowerMgmtBanksTableName, pmPowerMgmtSensorsTableEntry=pmPowerMgmtSensorsTableEntry, pmPowerMgmtGroupTablePowerControl=pmPowerMgmtGroupTablePowerControl, pmPowerMgmtPhasesTableCurrentReset=pmPowerMgmtPhasesTableCurrentReset, pmPowerMgmt=pmPowerMgmt, pmPowerMgmtPhasesTableCurrentHighCritical=pmPowerMgmtPhasesTableCurrentHighCritical, pmPowerMgmtSensorsTablePduId=pmPowerMgmtSensorsTablePduId, pmPowerMgmtPhasesTablePduId=pmPowerMgmtPhasesTablePduId, pmPowerMgmtOutletsTable=pmPowerMgmtOutletsTable, pmPowerMgmtSerialTableDeviceName=pmPowerMgmtSerialTableDeviceName, pmPowerMgmtPhasesTableCurrentLowCritical=pmPowerMgmtPhasesTableCurrentLowCritical, pmPowerMgmtTotalNumberOfSensors=pmPowerMgmtTotalNumberOfSensors, pmSessions=pmSessions, pmActiveSessionsTableKill=pmActiveSessionsTableKill, pmPowerMgmtPDUTableCurrent1Value=pmPowerMgmtPDUTableCurrent1Value, pmPowerMgmtPDUTableVoltage2Value=pmPowerMgmtPDUTableVoltage2Value, pmPowerMgmtPDUTableColdStartDelay=pmPowerMgmtPDUTableColdStartDelay, pmPowerMgmtOutletsTablePduNumber=pmPowerMgmtOutletsTablePduNumber, pmPowerMgmtBanksTableVoltageMin=pmPowerMgmtBanksTableVoltageMin, pmPowerMgmtGroupTableStatus=pmPowerMgmtGroupTableStatus, pmPowerMgmtOutletsTableVoltageReset=pmPowerMgmtOutletsTableVoltageReset, pmPowerMgmtPDUTablePowerMax=pmPowerMgmtPDUTablePowerMax, pmPowerMgmtBanksTablePowerReset=pmPowerMgmtBanksTablePowerReset, pmPowerMgmtBanksTablePowerFactorMax=pmPowerMgmtBanksTablePowerFactorMax, pmPowerMgmtPDUTableNumberOfOutlets=pmPowerMgmtPDUTableNumberOfOutlets, pmPowerMgmtPDUTableVoltage1Max=pmPowerMgmtPDUTableVoltage1Max, pmPowerMgmtSerialTablePollRate=pmPowerMgmtSerialTablePollRate, pmPowerMgmtPDUTableCurrentLowWarning=pmPowerMgmtPDUTableCurrentLowWarning)
