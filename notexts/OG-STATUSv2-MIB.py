#
# PySNMP MIB module OG-STATUSv2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/opengear/OG-STATUSv2-MIB
# Produced by pysmi-1.1.12 at Fri Jul 19 10:08:47 2024
# On host fv-az1771-969 platform Linux version 6.5.0-1023-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
opengear, = mibBuilder.importSymbols("OG-SMI-MIB", "opengear")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, Bits, Integer32, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32, TimeTicks, MibIdentifier, Counter64, ObjectIdentity, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "Integer32", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32", "TimeTicks", "MibIdentifier", "Counter64", "ObjectIdentity", "Gauge32", "NotificationType")
DisplayString, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "DateAndTime")
ogStatus2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 25049, 17))
ogStatus2.setRevisions(('2017-02-03 00:00', '2016-08-26 00:00', '2014-01-28 00:00',))
if mibBuilder.loadTexts: ogStatus2.setLastUpdated('201702030000Z')
if mibBuilder.loadTexts: ogStatus2.setOrganization('Opengear Inc.')
ogSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 25049, 17, 1))
ogFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 25049, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogFirmwareVersion.setStatus('current')
ogSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 25049, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialNumber.setStatus('current')
ogSerialPortTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 2), )
if mibBuilder.loadTexts: ogSerialPortTable.setStatus('current')
ogSerialPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogSerialPortIndex"))
if mibBuilder.loadTexts: ogSerialPortEntry.setStatus('current')
ogSerialPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogSerialPortIndex.setStatus('current')
ogSerialPortLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortLabel.setStatus('current')
ogSerialPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortSpeed.setStatus('current')
ogSerialPortDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortDataBits.setStatus('current')
ogSerialPortParity = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3), ("mark", 4), ("space", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortParity.setStatus('current')
ogSerialPortStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("oneAndAHalf", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortStopBits.setStatus('current')
ogSerialPortFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("hardware", 2), ("software", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortFlowControl.setStatus('current')
ogSerialPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("console", 2), ("sdt", 3), ("terminal", 4), ("bridge", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortMode.setStatus('current')
ogSerialPortLogLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("connect", 2), ("inputAndOutput", 3), ("inputOnly", 4), ("outputOnly", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortLogLevel.setStatus('current')
ogSerialPortRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortRxBytes.setStatus('current')
ogSerialPortTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortTxBytes.setStatus('current')
ogSerialPortFramingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortFramingErrors.setStatus('current')
ogSerialPortParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortParityErrors.setStatus('current')
ogSerialPortOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortOverrunErrors.setStatus('current')
ogSerialPortBreaks = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortBreaks.setStatus('current')
ogSerialPortDCD = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortDCD.setStatus('current')
ogSerialPortDTR = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortDTR.setStatus('current')
ogSerialPortDSR = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortDSR.setStatus('current')
ogSerialPortCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortCTS.setStatus('current')
ogSerialPortRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialPortRTS.setStatus('current')
ogSerialUserTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 3), )
if mibBuilder.loadTexts: ogSerialUserTable.setStatus('current')
ogSerialUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 3, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogSerialUserIndex"))
if mibBuilder.loadTexts: ogSerialUserEntry.setStatus('current')
ogSerialUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogSerialUserIndex.setStatus('current')
ogSerialUserStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialUserStartTime.setStatus('current')
ogSerialUserPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialUserPort.setStatus('current')
ogSerialUserLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialUserLabel.setStatus('current')
ogSerialUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogSerialUserName.setStatus('current')
ogHostTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 4), )
if mibBuilder.loadTexts: ogHostTable.setStatus('current')
ogHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 4, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogHostIndex"))
if mibBuilder.loadTexts: ogHostEntry.setStatus('current')
ogHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogHostIndex.setStatus('current')
ogHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostName.setStatus('current')
ogHostIpV4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostIpV4Address.setStatus('current')
ogHostIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostIpV6Address.setStatus('current')
ogHostServiceTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 5), )
if mibBuilder.loadTexts: ogHostServiceTable.setStatus('current')
ogHostServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 5, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogHostIndex"), (0, "OG-STATUSv2-MIB", "ogHostServiceIndex"))
if mibBuilder.loadTexts: ogHostServiceEntry.setStatus('current')
ogHostServiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogHostServiceIndex.setStatus('current')
ogHostServiceHost = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 5, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostServiceHost.setStatus('current')
ogHostServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostServiceType.setStatus('current')
ogHostServicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostServicePort.setStatus('current')
ogHostServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("available", 2), ("unavailable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostServiceStatus.setStatus('current')
ogHostServiceCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostServiceCounter.setStatus('current')
ogHostUserTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 6), )
if mibBuilder.loadTexts: ogHostUserTable.setStatus('current')
ogHostUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 6, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogHostUserIndex"))
if mibBuilder.loadTexts: ogHostUserEntry.setStatus('current')
ogHostUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogHostUserIndex.setStatus('current')
ogHostUserHost = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 6, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostUserHost.setStatus('current')
ogHostUserStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 6, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostUserStartTime.setStatus('current')
ogHostUserAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostUserAddress.setStatus('current')
ogHostUserHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostUserHostName.setStatus('current')
ogHostUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogHostUserName.setStatus('current')
ogWebUserTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 7), )
if mibBuilder.loadTexts: ogWebUserTable.setStatus('current')
ogWebUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 7, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogWebUserIndex"))
if mibBuilder.loadTexts: ogWebUserEntry.setStatus('current')
ogWebUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogWebUserIndex.setStatus('current')
ogWebUserStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 7, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWebUserStartTime.setStatus('current')
ogWebUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWebUserName.setStatus('current')
ogWebUserSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWebUserSourceAddress.setStatus('current')
ogWebUserSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWebUserSourcePort.setStatus('current')
ogEmdTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 8), )
if mibBuilder.loadTexts: ogEmdTable.setStatus('current')
ogEmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 8, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogEmdIndex"))
if mibBuilder.loadTexts: ogEmdEntry.setStatus('current')
ogEmdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogEmdIndex.setStatus('current')
ogEmdName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdName.setStatus('current')
ogEmdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 8, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdDescription.setStatus('current')
ogEmdEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdEnabled.setStatus('current')
ogEmdLogEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdLogEnabled.setStatus('current')
ogEmdConnectType = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internal", 1), ("serial", 2), ("network", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdConnectType.setStatus('current')
ogEmdTemperatureTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdTemperatureTotal.setStatus('current')
ogEmdHumidityTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdHumidityTotal.setStatus('current')
ogEmdDioInputTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdDioInputTotal.setStatus('current')
ogEmdTemperatureTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 9), )
if mibBuilder.loadTexts: ogEmdTemperatureTable.setStatus('current')
ogEmdTemperatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 9, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogEmdIndex"), (0, "OG-STATUSv2-MIB", "ogEmdTemperatureIndex"))
if mibBuilder.loadTexts: ogEmdTemperatureEntry.setStatus('current')
ogEmdTemperatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogEmdTemperatureIndex.setStatus('current')
ogEmdTemperatureEmd = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 9, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdTemperatureEmd.setStatus('current')
ogEmdTemperatureName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdTemperatureName.setStatus('current')
ogEmdTemperatureDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdTemperatureDescription.setStatus('current')
ogEmdTemperatureValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 9, 1, 5), Integer32()).setUnits('degrees').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdTemperatureValue.setStatus('current')
ogEmdTemperatureCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdTemperatureCounter.setStatus('current')
ogEmdHumidityTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 10), )
if mibBuilder.loadTexts: ogEmdHumidityTable.setStatus('current')
ogEmdHumidityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 10, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogEmdIndex"), (0, "OG-STATUSv2-MIB", "ogEmdHumidityIndex"))
if mibBuilder.loadTexts: ogEmdHumidityEntry.setStatus('current')
ogEmdHumidityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogEmdHumidityIndex.setStatus('current')
ogEmdHumidityEmd = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 10, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdHumidityEmd.setStatus('current')
ogEmdHumidityName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 10, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdHumidityName.setStatus('current')
ogEmdHumidityDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 10, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdHumidityDescription.setStatus('current')
ogEmdHumidityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 10, 1, 5), Integer32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdHumidityValue.setStatus('current')
ogEmdHumidityCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdHumidityCounter.setStatus('current')
ogEmdDioTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 11), )
if mibBuilder.loadTexts: ogEmdDioTable.setStatus('current')
ogEmdDioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 11, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogEmdIndex"), (0, "OG-STATUSv2-MIB", "ogEmdDioIndex"))
if mibBuilder.loadTexts: ogEmdDioEntry.setStatus('current')
ogEmdDioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogEmdDioIndex.setStatus('current')
ogEmdDioEmd = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 11, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdDioEmd.setStatus('current')
ogEmdDioName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 11, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdDioName.setStatus('current')
ogEmdDioDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 11, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdDioDescription.setStatus('current')
ogEmdDioType = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ttlInputOutput", 1), ("highVoltageOutput", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdDioType.setStatus('current')
ogEmdDioDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("output", 1), ("input", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdDioDirection.setStatus('current')
ogEmdDioState = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("high", 1), ("low", 2), ("unavailable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdDioState.setStatus('current')
ogEmdDioTriggerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 1), ("risingEdge", 2), ("fallingEdge", 3), ("risingFallingEdge", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdDioTriggerMode.setStatus('current')
ogEmdDioCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogEmdDioCounter.setStatus('current')
ogNetInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 12), )
if mibBuilder.loadTexts: ogNetInterfaceTable.setStatus('current')
ogNetInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 12, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogNetInterfaceIndex"))
if mibBuilder.loadTexts: ogNetInterfaceEntry.setStatus('current')
ogNetInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogNetInterfaceIndex.setStatus('current')
ogNetInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogNetInterfaceName.setStatus('current')
ogNetInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unavailable", 1), ("ethernet", 2), ("wifi", 3), ("cellModem", 4), ("v92Modem", 5), ("vpn", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogNetInterfaceType.setStatus('current')
ogNetInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unavailable", 1), ("down", 2), ("starting", 3), ("up", 4), ("stopping", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogNetInterfaceState.setStatus('current')
ogPowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 13), )
if mibBuilder.loadTexts: ogPowerSupplyTable.setStatus('current')
ogPowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 13, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogPowerSupplyIndex"))
if mibBuilder.loadTexts: ogPowerSupplyEntry.setStatus('current')
ogPowerSupplyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: ogPowerSupplyIndex.setStatus('current')
ogPowerSupplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogPowerSupplyName.setStatus('current')
ogPowerSupplyInputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 13, 1, 3), Integer32()).setUnits('volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogPowerSupplyInputVoltage.setStatus('current')
ogPowerSupplyOutputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 13, 1, 4), Integer32()).setUnits('0.01 Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogPowerSupplyOutputCurrent.setStatus('current')
ogPowerSupplyTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 13, 1, 5), Integer32()).setUnits('degrees celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogPowerSupplyTemperature.setStatus('current')
ogUpsTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 14), )
if mibBuilder.loadTexts: ogUpsTable.setStatus('current')
ogUpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogUpsIndex"))
if mibBuilder.loadTexts: ogUpsEntry.setStatus('current')
ogUpsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogUpsIndex.setStatus('current')
ogUpsName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsName.setStatus('current')
ogUpsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsDescription.setStatus('current')
ogUpsType = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsType.setStatus('current')
ogUpsLogEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsLogEnabled.setStatus('current')
ogUpsConnectType = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("usb", 2), ("http", 3), ("https", 4), ("snmp", 5), ("serial", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsConnectType.setStatus('current')
ogUpsState = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("onLine", 2), ("onBattery", 3), ("lowBattery", 4), ("onBypass", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsState.setStatus('current')
ogUpsTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 8), Integer32()).setUnits('degrees').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsTemperature.setStatus('current')
ogUpsHumidity = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 9), Integer32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsHumidity.setStatus('current')
ogUpsBatteryState = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("normal", 2), ("warning", 3), ("low", 4), ("depleted", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsBatteryState.setStatus('current')
ogUpsBatteryRunTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 31449600))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsBatteryRunTime.setStatus('current')
ogUpsBatteryRunTimeLow = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 31449600))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsBatteryRunTimeLow.setStatus('current')
ogUpsBatteryRunTimeRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 31449600))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsBatteryRunTimeRestart.setStatus('current')
ogUpsBatteryCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsBatteryCharge.setStatus('current')
ogUpsBatteryVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 15), Integer32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsBatteryVoltage.setStatus('current')
ogUpsBatteryNominalVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 16), Integer32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsBatteryNominalVoltage.setStatus('current')
ogUpsBatteryCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 17), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsBatteryCurrent.setStatus('current')
ogUpsBatteryNominalCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 18), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsBatteryNominalCurrent.setStatus('current')
ogUpsBatteryTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 19), Integer32()).setUnits('degrees').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsBatteryTemperature.setStatus('current')
ogUpsInputFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 20), Integer32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsInputFrequency.setStatus('current')
ogUpsInputNominalFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 21), Integer32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsInputNominalFrequency.setStatus('current')
ogUpsInputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 22), Integer32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsInputVoltage.setStatus('current')
ogUpsInputNominalVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 23), Integer32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsInputNominalVoltage.setStatus('current')
ogUpsInputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 24), Integer32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsInputCurrent.setStatus('current')
ogUpsInputNominalCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 25), Integer32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsInputNominalCurrent.setStatus('current')
ogUpsOutputFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 26), Integer32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsOutputFrequency.setStatus('current')
ogUpsOutputNominalFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 27), Integer32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsOutputNominalFrequency.setStatus('current')
ogUpsOutputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 28), Integer32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsOutputVoltage.setStatus('current')
ogUpsOutputNominalVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 29), Integer32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsOutputNominalVoltage.setStatus('current')
ogUpsOutputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 30), Integer32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsOutputCurrent.setStatus('current')
ogUpsOutputNominalCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 31), Integer32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsOutputNominalCurrent.setStatus('current')
ogUpsOutputLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsOutputLoad.setStatus('current')
ogUpsOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 33), Integer32()).setUnits('Volt-Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsOutputPower.setStatus('current')
ogUpsOutputTruePower = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 34), Integer32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsOutputTruePower.setStatus('current')
ogUpsCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 14, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogUpsCounter.setStatus('current')
ogRpcTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 15), )
if mibBuilder.loadTexts: ogRpcTable.setStatus('current')
ogRpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogRpcIndex"))
if mibBuilder.loadTexts: ogRpcEntry.setStatus('current')
ogRpcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: ogRpcIndex.setStatus('current')
ogRpcName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcName.setStatus('current')
ogRpcDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcDescription.setStatus('current')
ogRpcType = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcType.setStatus('current')
ogRpcLogEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcLogEnabled.setStatus('current')
ogRpcOutletTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcOutletTotal.setStatus('current')
ogRpcMaxTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 7), Integer32()).setUnits('degrees').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcMaxTemperature.setStatus('current')
ogRpcConnectType = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("serial", 1), ("network", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcConnectType.setStatus('current')
ogRpcInputFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 9), Integer32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcInputFrequency.setStatus('current')
ogRpcInputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 10), Integer32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcInputVoltage.setStatus('current')
ogRpcInputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 11), Integer32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcInputCurrent.setStatus('current')
ogRpcCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcCounter.setStatus('current')
ogRpcOutletTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 16), )
if mibBuilder.loadTexts: ogRpcOutletTable.setStatus('current')
ogRpcOutletEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 16, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogRpcIndex"), (0, "OG-STATUSv2-MIB", "ogRpcOutletIndex"))
if mibBuilder.loadTexts: ogRpcOutletEntry.setStatus('current')
ogRpcOutletIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogRpcOutletIndex.setStatus('current')
ogRpcOutletRpc = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 16, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcOutletRpc.setStatus('current')
ogRpcOutletName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 16, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcOutletName.setStatus('current')
ogRpcOutletState = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("transitioning", 3), ("unavailable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcOutletState.setStatus('current')
ogRpcOutletFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 16, 1, 5), Integer32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcOutletFrequency.setStatus('current')
ogRpcOutletVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2640))).setUnits('0.01 Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcOutletVoltage.setStatus('current')
ogRpcOutletCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 25500))).setUnits('0.01 Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcOutletCurrent.setStatus('current')
ogRpcOutletLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 16, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogRpcOutletLoad.setStatus('current')
ogCellModemTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 17), )
if mibBuilder.loadTexts: ogCellModemTable.setStatus('current')
ogCellModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogCellModemIndex"))
if mibBuilder.loadTexts: ogCellModemEntry.setStatus('current')
ogCellModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogCellModemIndex.setStatus('current')
ogCellModemVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemVendor.setStatus('current')
ogCellModemModel = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemModel.setStatus('current')
ogCellModemEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemEnabled.setStatus('current')
ogCellModemConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("connected", 1), ("disconnected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemConnected.setStatus('current')
ogCellModemNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemNetwork.setStatus('current')
ogCellModemRegistered = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("registered", 1), ("unregistered", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemRegistered.setStatus('current')
ogCellModemTower = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemTower.setStatus('current')
ogCellModemRadioTechnology = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unavailable", 1), ("cdma", 2), ("evdo", 3), ("gsm", 4), ("umts", 5), ("lte", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemRadioTechnology.setStatus('current')
ogCellModemApn = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemApn.setStatus('current')
ogCellModem3gRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModem3gRssi.setStatus('current')
ogCellModem4gRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModem4gRssi.setStatus('current')
ogCellModemSessionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemSessionTime.setStatus('current')
ogCellModemSelectedSimCard = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemSelectedSimCard.setStatus('current')
ogCellModemTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 15), Integer32()).setUnits('degrees').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemTemperature.setStatus('current')
ogCellModemCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemCounter.setStatus('current')
ogCellModemIMSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 17, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCellModemIMSI.setStatus('current')
ogWifiClientTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 18), )
if mibBuilder.loadTexts: ogWifiClientTable.setStatus('current')
ogWifiClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogWifiClientIndex"))
if mibBuilder.loadTexts: ogWifiClientEntry.setStatus('current')
ogWifiClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogWifiClientIndex.setStatus('current')
ogWifiClientInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientInterface.setStatus('current')
ogWifiClientEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientEnabled.setStatus('current')
ogWifiClientEssid = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientEssid.setStatus('current')
ogWifiClientIeeeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unavailable", 1), ("ieee802Dot11B", 2), ("ieee802Dot11BG", 3), ("ieee802Dot11BGN", 4), ("ieee802Dot11ABGN", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientIeeeMode.setStatus('current')
ogWifiClientMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unavailable", 1), ("managed", 2), ("adhoc", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientMode.setStatus('current')
ogWifiClientFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 7), Unsigned32()).setUnits('0.0001 THz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientFrequency.setStatus('current')
ogWifiClientApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientApMac.setStatus('current')
ogWifiClientBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 9), Unsigned32()).setUnits('Mb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientBitRate.setStatus('current')
ogWifiClientTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 10), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientTxPower.setStatus('current')
ogWifiClientLinkQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 11), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientLinkQuality.setStatus('current')
ogWifiClientRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 12), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientRssi.setStatus('current')
ogWifiClientRxInvalidNwid = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientRxInvalidNwid.setStatus('current')
ogWifiClientRxInvalidCrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientRxInvalidCrypt.setStatus('current')
ogWifiClientRxInvalidFrag = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientRxInvalidFrag.setStatus('current')
ogWifiClientRxInvalidRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientRxInvalidRetries.setStatus('current')
ogWifiClientRxInvalidMisc = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientRxInvalidMisc.setStatus('current')
ogWifiClientMissedBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientMissedBeacon.setStatus('current')
ogWifiClientCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 18, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiClientCounter.setStatus('current')
ogWifiApTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 19), )
if mibBuilder.loadTexts: ogWifiApTable.setStatus('current')
ogWifiApEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 19, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogWifiApIndex"))
if mibBuilder.loadTexts: ogWifiApEntry.setStatus('current')
ogWifiApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogWifiApIndex.setStatus('current')
ogWifiApInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 19, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApInterface.setStatus('current')
ogWifiApEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 19, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApEnabled.setStatus('current')
ogWifiApSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 19, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApSsid.setStatus('current')
ogWifiApIeeeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 19, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unavailable", 1), ("ieee802Dot11B", 2), ("ieee802Dot11BG", 3), ("ieee802Dot11BGN", 4), ("ieee802Dot11ABGN", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApIeeeMode.setStatus('current')
ogWifiApFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 19, 1, 6), Unsigned32()).setUnits('0.0001 THz').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApFrequency.setStatus('current')
ogWifiApTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 19, 1, 7), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApTxPower.setStatus('current')
ogWifiApCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 19, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApCounter.setStatus('current')
ogWifiApClientTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 20), )
if mibBuilder.loadTexts: ogWifiApClientTable.setStatus('current')
ogWifiApClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 20, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogWifiApIndex"), (0, "OG-STATUSv2-MIB", "ogWifiApClientIndex"))
if mibBuilder.loadTexts: ogWifiApClientEntry.setStatus('current')
ogWifiApClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogWifiApClientIndex.setStatus('current')
ogWifiApClientAp = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 20, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApClientAp.setStatus('current')
ogWifiApClientMac = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 20, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApClientMac.setStatus('current')
ogWifiApClientInactiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 20, 1, 4), Counter32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApClientInactiveTime.setStatus('current')
ogWifiApClientRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 20, 1, 5), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApClientRxBytes.setStatus('current')
ogWifiApClientRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 20, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApClientRxPackets.setStatus('current')
ogWifiApClientTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 20, 1, 7), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApClientTxBytes.setStatus('current')
ogWifiApClientTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 20, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApClientTxPackets.setStatus('current')
ogWifiApClientRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 20, 1, 9), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApClientRssi.setStatus('current')
ogWifiApClientTxBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 20, 1, 10), Unsigned32()).setUnits('Mb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: ogWifiApClientTxBitRate.setStatus('current')
ogCheckTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 21), )
if mibBuilder.loadTexts: ogCheckTable.setStatus('current')
ogCheckEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 21, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogCheckIndex"))
if mibBuilder.loadTexts: ogCheckEntry.setStatus('current')
ogCheckIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogCheckIndex.setStatus('current')
ogCheckName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCheckName.setStatus('current')
ogCheckRepeatTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCheckRepeatTimeout.setStatus('current')
ogCheckResetTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCheckResetTimeout.setStatus('current')
ogCheckType = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 255))).clone(namedValues=NamedValues(("unknown", 1), ("serialSignal", 2), ("serialUser", 3), ("serialPattern", 4), ("hostPing", 5), ("hostService", 6), ("hostUser", 7), ("webUser", 8), ("envTemperature", 9), ("envHumidity", 10), ("dioInput", 11), ("netInterface", 12), ("powerSupplyInputVoltage", 13), ("powerSupplyOutputCurrent", 14), ("powerSupplyTemperature", 15), ("upsInputVoltage", 16), ("upsBatteryCharge", 17), ("upsBatteryTemperature", 18), ("upsOutputLoad", 19), ("upsInputFrequency", 20), ("upsStateOnBattery", 21), ("upsStateLowBattery", 22), ("rpcInput", 23), ("rpcOutletState", 24), ("rpcOutletOutput", 25), ("cellMessage", 26), ("cellData", 27), ("cellSignal", 28), ("cellApn", 29), ("cellTower", 30), ("cellNetwork", 31), ("wirelessClientConnect", 32), ("wirelessClientSignal", 33), ("wirelessApAssociation", 34), ("wirelessApAuthentication", 35), ("dialPoolHealth", 36), ("cliUser", 37), ("custom", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCheckType.setStatus('current')
ogCheckTriggerActions = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCheckTriggerActions.setStatus('current')
ogCheckResolveActions = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCheckResolveActions.setStatus('current')
ogCheckDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 22), )
if mibBuilder.loadTexts: ogCheckDeviceTable.setStatus('current')
ogCheckDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 22, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogCheckIndex"), (0, "OG-STATUSv2-MIB", "ogCheckDeviceIndex"))
if mibBuilder.loadTexts: ogCheckDeviceEntry.setStatus('current')
ogCheckDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogCheckDeviceIndex.setStatus('current')
ogCheckDeviceCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 22, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCheckDeviceCheck.setStatus('current')
ogCheckDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 22, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCheckDeviceName.setStatus('current')
ogCheckDeviceRef = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 22, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCheckDeviceRef.setStatus('current')
ogAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 25049, 17, 23))
ogAlarmLogTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1), )
if mibBuilder.loadTexts: ogAlarmLogTable.setStatus('current')
ogAlarmLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogAlarmLogIndex"))
if mibBuilder.loadTexts: ogAlarmLogEntry.setStatus('current')
ogAlarmLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogAlarmLogIndex.setStatus('current')
ogAlarmEventId = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmEventId.setStatus('current')
ogAlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmName.setStatus('current')
ogAlarmCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmCheck.setStatus('current')
ogAlarmInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmInstance.setStatus('current')
ogAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmTime.setStatus('current')
ogAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 255, 65535))).clone(namedValues=NamedValues(("serialSignalCts", 1), ("serialSignalDcd", 2), ("serialSignalDsr", 3), ("serialPatternTx", 4), ("serialPatternRx", 5), ("serialUserSession", 6), ("hostPingDown", 7), ("hostPingUp", 8), ("hostServiceDown", 9), ("hostServiceUp", 10), ("hostUserSession", 11), ("webUserSession", 12), ("envTemperatureLow", 13), ("envTemperatureHigh", 14), ("envHumidityLow", 15), ("envHumidityHigh", 16), ("dioSignalOpened", 17), ("dioSignalClosed", 18), ("netInterfaceDown", 19), ("netInterfaceStarting", 20), ("netInterfaceUp", 21), ("netInterfaceStopping", 22), ("powerSupplyInputVoltageLow", 23), ("powerSupplyInputVoltageHigh", 24), ("powerSupplyOutputCurrentLow", 25), ("powerSupplyOutputCurrentHigh", 26), ("powerSupplyTemperatureLow", 27), ("powerSupplyTemperatureHigh", 28), ("upsTemperatureHigh", 29), ("upsTemperatureLow", 30), ("upsHumidityHigh", 31), ("upsHumidityLow", 32), ("upsOnBattery", 33), ("upsLowBattery", 34), ("upsBatteryChargeLow", 35), ("upsBatteryChargeHigh", 36), ("upsBatteryVoltageLow", 37), ("upsBatteryVoltageHigh", 38), ("upsBatteryCurrentLow", 39), ("upsBatteryCurrentHigh", 40), ("upsBatteryTemperatureLow", 41), ("upsBatteryTemperatureHigh", 42), ("upsInputFrequencyLow", 43), ("upsInputFrequencyHigh", 44), ("upsInputVoltageLow", 45), ("upsInputVoltageHigh", 46), ("upsInputCurrentLow", 47), ("upsInputCurrentHigh", 48), ("upsOutputFrequencyLow", 49), ("upsOutputFrequencyHigh", 50), ("upsOutputVoltageLow", 51), ("upsOutputVoltageHigh", 52), ("upsOutputCurrentLow", 53), ("upsOutputCurrentHigh", 54), ("upsOutputLoadLow", 55), ("upsOutputLoadHigh", 56), ("upsOutputPowerLow", 57), ("upsOutputPowerHigh", 58), ("upsOutputTruePowerLow", 59), ("upsOutputTruePowerHigh", 60), ("rpcInputFrequencyLow", 61), ("rpcInputFrequencyHigh", 62), ("rpcInputVoltageLow", 63), ("rpcInputVoltageHigh", 64), ("rpcInputCurrentLow", 65), ("rpcInputCurrentHigh", 66), ("rpcOutletFrequencyHigh", 67), ("rpcOutletFrequencyLow", 68), ("rpcOutletVoltageHigh", 69), ("rpcOutletVoltageLow", 70), ("rpcOutletCurrentHigh", 71), ("rpcOutletCurrentLow", 72), ("rpcOutletStateOff", 73), ("rpcOutletStateOn", 74), ("cellDataUsage", 75), ("cellMessageReceived", 76), ("cellSignalLow", 77), ("cellSignalHigh", 78), ("cellApnChanged", 79), ("cellTowerChanged", 80), ("cellNetworkChanged", 81), ("wirelessClientConnected", 82), ("wirelessClientDisconnected", 83), ("wirelessClientSignalLow", 84), ("wirelessClientSignalHigh", 85), ("wirelessApAssociation", 86), ("wirelessApDisassociation", 87), ("wirelessApAuthenticationFailure", 88), ("dialPoolHealth", 89), ("cliUserSession", 90), ("customCheckFailure", 255), ("unknown", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmType.setStatus('current')
ogAlarmSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmSummary.setStatus('current')
ogAlarmDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmDevice.setStatus('current')
ogAlarmUser = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmUser.setStatus('current')
ogAlarmTriggerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmTriggerValue.setStatus('current')
ogAlarmCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmCurrentValue.setStatus('current')
ogAlarmPreviousValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmPreviousValue.setStatus('current')
ogAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("normal", 1), ("triggered", 2), ("resolving", 3), ("waiting", 4), ("disabled", 5), ("unresolvable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogAlarmState.setStatus('current')
ogCurrentAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2), )
if mibBuilder.loadTexts: ogCurrentAlarmTable.setStatus('current')
ogCurrentAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1), ).setIndexNames((0, "OG-STATUSv2-MIB", "ogCurrentAlarmIndex"))
if mibBuilder.loadTexts: ogCurrentAlarmEntry.setStatus('current')
ogCurrentAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ogCurrentAlarmIndex.setStatus('current')
ogCurrentAlarmEventId = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmEventId.setStatus('current')
ogCurrentAlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmName.setStatus('current')
ogCurrentAlarmCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmCheck.setStatus('current')
ogCurrentAlarmInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmInstance.setStatus('current')
ogCurrentAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmTime.setStatus('current')
ogCurrentAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 255, 65535))).clone(namedValues=NamedValues(("serialSignalCts", 1), ("serialSignalDcd", 2), ("serialSignalDsr", 3), ("serialPatternTx", 4), ("serialPatternRx", 5), ("serialUserSession", 6), ("hostPingDown", 7), ("hostPingUp", 8), ("hostServiceDown", 9), ("hostServiceUp", 10), ("hostUserSession", 11), ("webUserSession", 12), ("envTemperatureLow", 13), ("envTemperatureHigh", 14), ("envHumidityLow", 15), ("envHumidityHigh", 16), ("dioSignalOpened", 17), ("dioSignalClosed", 18), ("netInterfaceDown", 19), ("netInterfaceStarting", 20), ("netInterfaceUp", 21), ("netInterfaceStopping", 22), ("powerSupplyInputVoltageLow", 23), ("powerSupplyInputVoltageHigh", 24), ("powerSupplyOutputCurrentLow", 25), ("powerSupplyOutputCurrentHigh", 26), ("powerSupplyTemperatureLow", 27), ("powerSupplyTemperatureHigh", 28), ("upsTemperatureHigh", 29), ("upsTemperatureLow", 30), ("upsHumidityHigh", 31), ("upsHumidityLow", 32), ("upsOnBattery", 33), ("upsLowBattery", 34), ("upsBatteryChargeLow", 35), ("upsBatteryChargeHigh", 36), ("upsBatteryVoltageLow", 37), ("upsBatteryVoltageHigh", 38), ("upsBatteryCurrentLow", 39), ("upsBatteryCurrentHigh", 40), ("upsBatteryTemperatureLow", 41), ("upsBatteryTemperatureHigh", 42), ("upsInputFrequencyLow", 43), ("upsInputFrequencyHigh", 44), ("upsInputVoltageLow", 45), ("upsInputVoltageHigh", 46), ("upsInputCurrentLow", 47), ("upsInputCurrentHigh", 48), ("upsOutputFrequencyLow", 49), ("upsOutputFrequencyHigh", 50), ("upsOutputVoltageLow", 51), ("upsOutputVoltageHigh", 52), ("upsOutputCurrentLow", 53), ("upsOutputCurrentHigh", 54), ("upsOutputLoadLow", 55), ("upsOutputLoadHigh", 56), ("upsOutputPowerLow", 57), ("upsOutputPowerHigh", 58), ("upsOutputTruePowerLow", 59), ("upsOutputTruePowerHigh", 60), ("rpcInputFrequencyLow", 61), ("rpcInputFrequencyHigh", 62), ("rpcInputVoltageLow", 63), ("rpcInputVoltageHigh", 64), ("rpcInputCurrentLow", 65), ("rpcInputCurrentHigh", 66), ("rpcOutletFrequencyHigh", 67), ("rpcOutletFrequencyLow", 68), ("rpcOutletVoltageHigh", 69), ("rpcOutletVoltageLow", 70), ("rpcOutletCurrentHigh", 71), ("rpcOutletCurrentLow", 72), ("rpcOutletStateOff", 73), ("rpcOutletStateOn", 74), ("cellDataUsage", 75), ("cellMessageReceived", 76), ("cellSignalLow", 77), ("cellSignalHigh", 78), ("cellApnChanged", 79), ("cellTowerChanged", 80), ("cellNetworkChanged", 81), ("wirelessClientConnected", 82), ("wirelessClientDisconnected", 83), ("wirelessClientSignalLow", 84), ("wirelessClientSignalHigh", 85), ("wirelessApAssociation", 86), ("wirelessApDisassociation", 87), ("wirelessApAuthenticationFailure", 88), ("dialPoolHealth", 89), ("cliUserSession", 90), ("customCheckFailure", 255), ("unknown", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmType.setStatus('current')
ogCurrentAlarmSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmSummary.setStatus('current')
ogCurrentAlarmDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmDevice.setStatus('current')
ogCurrentAlarmUser = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmUser.setStatus('current')
ogCurrentAlarmTriggerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmTriggerValue.setStatus('current')
ogCurrentAlarmCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmCurrentValue.setStatus('current')
ogCurrentAlarmPreviousValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmPreviousValue.setStatus('current')
ogCurrentAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 25049, 17, 23, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("normal", 1), ("triggered", 2), ("resolving", 3), ("waiting", 4), ("disabled", 5), ("unresolvable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ogCurrentAlarmState.setStatus('current')
ogStatus2NotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25049, 17, 100))
ogMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0))
ogSerialSignalNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 1)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogSerialSignalNotification.setStatus('current')
ogSerialPatternNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 2)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogSerialPatternNotification.setStatus('current')
ogSerialUserNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 3)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogSerialUserNotification.setStatus('current')
ogHostPingNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 4)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogHostPingNotification.setStatus('current')
ogHostServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 5)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogHostServiceNotification.setStatus('current')
ogHostUserNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 6)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogHostUserNotification.setStatus('current')
ogWebUserNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 7)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogWebUserNotification.setStatus('current')
ogEmdTemperatureNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 8)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogEmdTemperatureNotification.setStatus('current')
ogEmdHumidityNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 9)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogEmdHumidityNotification.setStatus('current')
ogEmdDioNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 10)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogEmdDioNotification.setStatus('current')
ogPowerSupplyInputNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 11)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogPowerSupplyInputNotification.setStatus('current')
ogPowerSupplyOutputNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 12)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogPowerSupplyOutputNotification.setStatus('current')
ogPowerSupplyTempNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 13)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogPowerSupplyTempNotification.setStatus('current')
ogUpsNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 14)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogUpsNotification.setStatus('current')
ogUpsBatteryNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 15)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogUpsBatteryNotification.setStatus('current')
ogUpsInputNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 16)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogUpsInputNotification.setStatus('current')
ogUpsOutputNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 17)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogUpsOutputNotification.setStatus('current')
ogRpcInputNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 18)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogRpcInputNotification.setStatus('current')
ogRpcOutputNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 19)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogRpcOutputNotification.setStatus('current')
ogRpcOutletNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 20)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogRpcOutletNotification.setStatus('current')
ogNetInterfaceNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 21)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogNetInterfaceNotification.setStatus('current')
ogCellDataNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 22)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogCellDataNotification.setStatus('current')
ogCellMessageNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 23)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogCellMessageNotification.setStatus('current')
ogCellSignalNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 24)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogCellSignalNotification.setStatus('current')
ogCellApnNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 25)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogCellApnNotification.setStatus('current')
ogCellTowerNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 26)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogCellTowerNotification.setStatus('current')
ogCellNetworkNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 27)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogCellNetworkNotification.setStatus('current')
ogWifiClientConnectNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 28)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogWifiClientConnectNotification.setStatus('current')
ogWifiClientSignalNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 29)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogWifiClientSignalNotification.setStatus('current')
ogWifiApAssociationNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 30)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogWifiApAssociationNotification.setStatus('current')
ogWifiApAuthNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 31)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogWifiApAuthNotification.setStatus('current')
ogDialPoolHealthNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 32)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogDialPoolHealthNotification.setStatus('current')
ogCustomNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 33)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogCustomNotification.setStatus('current')
ogCliUserSessionNotification = NotificationType((1, 3, 6, 1, 4, 1, 25049, 17, 100, 0, 34)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"))
if mibBuilder.loadTexts: ogCliUserSessionNotification.setStatus('current')
ogStatus2Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 25049, 17, 65535))
ogStatus2Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 25049, 17, 65535, 1))
ogStatus2Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 25049, 17, 65535, 2))
ogStatus2Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 25049, 17, 65535, 1, 1)).setObjects(("OG-STATUSv2-MIB", "ogBasicStatusGroup"), ("OG-STATUSv2-MIB", "ogBasicAlarmGroup"), ("OG-STATUSv2-MIB", "ogBasicNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ogStatus2Compliance = ogStatus2Compliance.setStatus('current')
ogBasicStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25049, 17, 65535, 2, 1)).setObjects(("OG-STATUSv2-MIB", "ogFirmwareVersion"), ("OG-STATUSv2-MIB", "ogSerialNumber"), ("OG-STATUSv2-MIB", "ogSerialPortLabel"), ("OG-STATUSv2-MIB", "ogSerialPortSpeed"), ("OG-STATUSv2-MIB", "ogSerialPortDataBits"), ("OG-STATUSv2-MIB", "ogSerialPortParity"), ("OG-STATUSv2-MIB", "ogSerialPortStopBits"), ("OG-STATUSv2-MIB", "ogSerialPortFlowControl"), ("OG-STATUSv2-MIB", "ogSerialPortMode"), ("OG-STATUSv2-MIB", "ogSerialPortLogLevel"), ("OG-STATUSv2-MIB", "ogSerialPortRxBytes"), ("OG-STATUSv2-MIB", "ogSerialPortTxBytes"), ("OG-STATUSv2-MIB", "ogSerialPortFramingErrors"), ("OG-STATUSv2-MIB", "ogSerialPortParityErrors"), ("OG-STATUSv2-MIB", "ogSerialPortOverrunErrors"), ("OG-STATUSv2-MIB", "ogSerialPortBreaks"), ("OG-STATUSv2-MIB", "ogSerialPortDCD"), ("OG-STATUSv2-MIB", "ogSerialPortDTR"), ("OG-STATUSv2-MIB", "ogSerialPortDSR"), ("OG-STATUSv2-MIB", "ogSerialPortCTS"), ("OG-STATUSv2-MIB", "ogSerialPortRTS"), ("OG-STATUSv2-MIB", "ogSerialUserStartTime"), ("OG-STATUSv2-MIB", "ogSerialUserPort"), ("OG-STATUSv2-MIB", "ogSerialUserLabel"), ("OG-STATUSv2-MIB", "ogSerialUserName"), ("OG-STATUSv2-MIB", "ogHostName"), ("OG-STATUSv2-MIB", "ogHostIpV4Address"), ("OG-STATUSv2-MIB", "ogHostIpV6Address"), ("OG-STATUSv2-MIB", "ogHostServiceHost"), ("OG-STATUSv2-MIB", "ogHostServiceType"), ("OG-STATUSv2-MIB", "ogHostServicePort"), ("OG-STATUSv2-MIB", "ogHostServiceStatus"), ("OG-STATUSv2-MIB", "ogHostServiceCounter"), ("OG-STATUSv2-MIB", "ogHostUserHost"), ("OG-STATUSv2-MIB", "ogHostUserStartTime"), ("OG-STATUSv2-MIB", "ogHostUserAddress"), ("OG-STATUSv2-MIB", "ogHostUserHostName"), ("OG-STATUSv2-MIB", "ogHostUserName"), ("OG-STATUSv2-MIB", "ogWebUserStartTime"), ("OG-STATUSv2-MIB", "ogWebUserName"), ("OG-STATUSv2-MIB", "ogWebUserSourceAddress"), ("OG-STATUSv2-MIB", "ogWebUserSourcePort"), ("OG-STATUSv2-MIB", "ogEmdName"), ("OG-STATUSv2-MIB", "ogEmdDescription"), ("OG-STATUSv2-MIB", "ogEmdEnabled"), ("OG-STATUSv2-MIB", "ogEmdLogEnabled"), ("OG-STATUSv2-MIB", "ogEmdConnectType"), ("OG-STATUSv2-MIB", "ogEmdTemperatureTotal"), ("OG-STATUSv2-MIB", "ogEmdHumidityTotal"), ("OG-STATUSv2-MIB", "ogEmdDioInputTotal"), ("OG-STATUSv2-MIB", "ogEmdTemperatureEmd"), ("OG-STATUSv2-MIB", "ogEmdTemperatureName"), ("OG-STATUSv2-MIB", "ogEmdTemperatureDescription"), ("OG-STATUSv2-MIB", "ogEmdTemperatureValue"), ("OG-STATUSv2-MIB", "ogEmdTemperatureCounter"), ("OG-STATUSv2-MIB", "ogEmdHumidityEmd"), ("OG-STATUSv2-MIB", "ogEmdHumidityName"), ("OG-STATUSv2-MIB", "ogEmdHumidityDescription"), ("OG-STATUSv2-MIB", "ogEmdHumidityValue"), ("OG-STATUSv2-MIB", "ogEmdHumidityCounter"), ("OG-STATUSv2-MIB", "ogEmdDioEmd"), ("OG-STATUSv2-MIB", "ogEmdDioName"), ("OG-STATUSv2-MIB", "ogEmdDioDescription"), ("OG-STATUSv2-MIB", "ogEmdDioType"), ("OG-STATUSv2-MIB", "ogEmdDioDirection"), ("OG-STATUSv2-MIB", "ogEmdDioState"), ("OG-STATUSv2-MIB", "ogEmdDioTriggerMode"), ("OG-STATUSv2-MIB", "ogEmdDioCounter"), ("OG-STATUSv2-MIB", "ogNetInterfaceName"), ("OG-STATUSv2-MIB", "ogNetInterfaceType"), ("OG-STATUSv2-MIB", "ogNetInterfaceState"), ("OG-STATUSv2-MIB", "ogPowerSupplyName"), ("OG-STATUSv2-MIB", "ogPowerSupplyInputVoltage"), ("OG-STATUSv2-MIB", "ogPowerSupplyOutputCurrent"), ("OG-STATUSv2-MIB", "ogPowerSupplyTemperature"), ("OG-STATUSv2-MIB", "ogUpsName"), ("OG-STATUSv2-MIB", "ogUpsDescription"), ("OG-STATUSv2-MIB", "ogUpsType"), ("OG-STATUSv2-MIB", "ogUpsLogEnabled"), ("OG-STATUSv2-MIB", "ogUpsConnectType"), ("OG-STATUSv2-MIB", "ogUpsState"), ("OG-STATUSv2-MIB", "ogUpsTemperature"), ("OG-STATUSv2-MIB", "ogUpsHumidity"), ("OG-STATUSv2-MIB", "ogUpsBatteryState"), ("OG-STATUSv2-MIB", "ogUpsBatteryRunTime"), ("OG-STATUSv2-MIB", "ogUpsBatteryRunTimeLow"), ("OG-STATUSv2-MIB", "ogUpsBatteryRunTimeRestart"), ("OG-STATUSv2-MIB", "ogUpsBatteryCharge"), ("OG-STATUSv2-MIB", "ogUpsBatteryVoltage"), ("OG-STATUSv2-MIB", "ogUpsBatteryNominalVoltage"), ("OG-STATUSv2-MIB", "ogUpsBatteryCurrent"), ("OG-STATUSv2-MIB", "ogUpsBatteryNominalCurrent"), ("OG-STATUSv2-MIB", "ogUpsBatteryTemperature"), ("OG-STATUSv2-MIB", "ogUpsInputFrequency"), ("OG-STATUSv2-MIB", "ogUpsInputNominalFrequency"), ("OG-STATUSv2-MIB", "ogUpsInputVoltage"), ("OG-STATUSv2-MIB", "ogUpsInputNominalVoltage"), ("OG-STATUSv2-MIB", "ogUpsInputCurrent"), ("OG-STATUSv2-MIB", "ogUpsInputNominalCurrent"), ("OG-STATUSv2-MIB", "ogUpsOutputFrequency"), ("OG-STATUSv2-MIB", "ogUpsOutputNominalFrequency"), ("OG-STATUSv2-MIB", "ogUpsOutputVoltage"), ("OG-STATUSv2-MIB", "ogUpsOutputNominalVoltage"), ("OG-STATUSv2-MIB", "ogUpsOutputCurrent"), ("OG-STATUSv2-MIB", "ogUpsOutputNominalCurrent"), ("OG-STATUSv2-MIB", "ogUpsOutputLoad"), ("OG-STATUSv2-MIB", "ogUpsOutputPower"), ("OG-STATUSv2-MIB", "ogUpsOutputTruePower"), ("OG-STATUSv2-MIB", "ogUpsCounter"), ("OG-STATUSv2-MIB", "ogRpcName"), ("OG-STATUSv2-MIB", "ogRpcDescription"), ("OG-STATUSv2-MIB", "ogRpcType"), ("OG-STATUSv2-MIB", "ogRpcLogEnabled"), ("OG-STATUSv2-MIB", "ogRpcOutletTotal"), ("OG-STATUSv2-MIB", "ogRpcMaxTemperature"), ("OG-STATUSv2-MIB", "ogRpcConnectType"), ("OG-STATUSv2-MIB", "ogRpcInputFrequency"), ("OG-STATUSv2-MIB", "ogRpcInputVoltage"), ("OG-STATUSv2-MIB", "ogRpcInputCurrent"), ("OG-STATUSv2-MIB", "ogRpcCounter"), ("OG-STATUSv2-MIB", "ogRpcOutletRpc"), ("OG-STATUSv2-MIB", "ogRpcOutletName"), ("OG-STATUSv2-MIB", "ogRpcOutletState"), ("OG-STATUSv2-MIB", "ogRpcOutletFrequency"), ("OG-STATUSv2-MIB", "ogRpcOutletCurrent"), ("OG-STATUSv2-MIB", "ogRpcOutletVoltage"), ("OG-STATUSv2-MIB", "ogRpcOutletLoad"), ("OG-STATUSv2-MIB", "ogCellModemVendor"), ("OG-STATUSv2-MIB", "ogCellModemModel"), ("OG-STATUSv2-MIB", "ogCellModemEnabled"), ("OG-STATUSv2-MIB", "ogCellModemConnected"), ("OG-STATUSv2-MIB", "ogCellModemNetwork"), ("OG-STATUSv2-MIB", "ogCellModemRegistered"), ("OG-STATUSv2-MIB", "ogCellModemTower"), ("OG-STATUSv2-MIB", "ogCellModemRadioTechnology"), ("OG-STATUSv2-MIB", "ogCellModemApn"), ("OG-STATUSv2-MIB", "ogCellModem3gRssi"), ("OG-STATUSv2-MIB", "ogCellModem4gRssi"), ("OG-STATUSv2-MIB", "ogCellModemSessionTime"), ("OG-STATUSv2-MIB", "ogCellModemSelectedSimCard"), ("OG-STATUSv2-MIB", "ogCellModemTemperature"), ("OG-STATUSv2-MIB", "ogCellModemCounter"), ("OG-STATUSv2-MIB", "ogCellModemIMSI"), ("OG-STATUSv2-MIB", "ogWifiClientInterface"), ("OG-STATUSv2-MIB", "ogWifiClientEnabled"), ("OG-STATUSv2-MIB", "ogWifiClientEssid"), ("OG-STATUSv2-MIB", "ogWifiClientIeeeMode"), ("OG-STATUSv2-MIB", "ogWifiClientMode"), ("OG-STATUSv2-MIB", "ogWifiClientFrequency"), ("OG-STATUSv2-MIB", "ogWifiClientApMac"), ("OG-STATUSv2-MIB", "ogWifiClientBitRate"), ("OG-STATUSv2-MIB", "ogWifiClientTxPower"), ("OG-STATUSv2-MIB", "ogWifiClientLinkQuality"), ("OG-STATUSv2-MIB", "ogWifiClientRssi"), ("OG-STATUSv2-MIB", "ogWifiClientRxInvalidNwid"), ("OG-STATUSv2-MIB", "ogWifiClientRxInvalidCrypt"), ("OG-STATUSv2-MIB", "ogWifiClientRxInvalidFrag"), ("OG-STATUSv2-MIB", "ogWifiClientRxInvalidRetries"), ("OG-STATUSv2-MIB", "ogWifiClientRxInvalidMisc"), ("OG-STATUSv2-MIB", "ogWifiClientMissedBeacon"), ("OG-STATUSv2-MIB", "ogWifiClientCounter"), ("OG-STATUSv2-MIB", "ogWifiApInterface"), ("OG-STATUSv2-MIB", "ogWifiApEnabled"), ("OG-STATUSv2-MIB", "ogWifiApSsid"), ("OG-STATUSv2-MIB", "ogWifiApIeeeMode"), ("OG-STATUSv2-MIB", "ogWifiApFrequency"), ("OG-STATUSv2-MIB", "ogWifiApTxPower"), ("OG-STATUSv2-MIB", "ogWifiApCounter"), ("OG-STATUSv2-MIB", "ogWifiApClientAp"), ("OG-STATUSv2-MIB", "ogWifiApClientMac"), ("OG-STATUSv2-MIB", "ogWifiApClientInactiveTime"), ("OG-STATUSv2-MIB", "ogWifiApClientRxBytes"), ("OG-STATUSv2-MIB", "ogWifiApClientRxPackets"), ("OG-STATUSv2-MIB", "ogWifiApClientTxBytes"), ("OG-STATUSv2-MIB", "ogWifiApClientTxPackets"), ("OG-STATUSv2-MIB", "ogWifiApClientRssi"), ("OG-STATUSv2-MIB", "ogWifiApClientTxBitRate"), ("OG-STATUSv2-MIB", "ogCheckName"), ("OG-STATUSv2-MIB", "ogCheckRepeatTimeout"), ("OG-STATUSv2-MIB", "ogCheckResetTimeout"), ("OG-STATUSv2-MIB", "ogCheckType"), ("OG-STATUSv2-MIB", "ogCheckTriggerActions"), ("OG-STATUSv2-MIB", "ogCheckResolveActions"), ("OG-STATUSv2-MIB", "ogCheckDeviceCheck"), ("OG-STATUSv2-MIB", "ogCheckDeviceName"), ("OG-STATUSv2-MIB", "ogCheckDeviceRef"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ogBasicStatusGroup = ogBasicStatusGroup.setStatus('current')
ogBasicAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25049, 17, 65535, 2, 2)).setObjects(("OG-STATUSv2-MIB", "ogAlarmEventId"), ("OG-STATUSv2-MIB", "ogAlarmName"), ("OG-STATUSv2-MIB", "ogAlarmCheck"), ("OG-STATUSv2-MIB", "ogAlarmInstance"), ("OG-STATUSv2-MIB", "ogAlarmTime"), ("OG-STATUSv2-MIB", "ogAlarmType"), ("OG-STATUSv2-MIB", "ogAlarmSummary"), ("OG-STATUSv2-MIB", "ogAlarmDevice"), ("OG-STATUSv2-MIB", "ogAlarmUser"), ("OG-STATUSv2-MIB", "ogAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogAlarmState"), ("OG-STATUSv2-MIB", "ogCurrentAlarmEventId"), ("OG-STATUSv2-MIB", "ogCurrentAlarmName"), ("OG-STATUSv2-MIB", "ogCurrentAlarmCheck"), ("OG-STATUSv2-MIB", "ogCurrentAlarmInstance"), ("OG-STATUSv2-MIB", "ogCurrentAlarmTime"), ("OG-STATUSv2-MIB", "ogCurrentAlarmType"), ("OG-STATUSv2-MIB", "ogCurrentAlarmSummary"), ("OG-STATUSv2-MIB", "ogCurrentAlarmDevice"), ("OG-STATUSv2-MIB", "ogCurrentAlarmUser"), ("OG-STATUSv2-MIB", "ogCurrentAlarmTriggerValue"), ("OG-STATUSv2-MIB", "ogCurrentAlarmCurrentValue"), ("OG-STATUSv2-MIB", "ogCurrentAlarmPreviousValue"), ("OG-STATUSv2-MIB", "ogCurrentAlarmState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ogBasicAlarmGroup = ogBasicAlarmGroup.setStatus('current')
ogBasicNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 25049, 17, 65535, 2, 3)).setObjects(("OG-STATUSv2-MIB", "ogSerialSignalNotification"), ("OG-STATUSv2-MIB", "ogSerialPatternNotification"), ("OG-STATUSv2-MIB", "ogSerialUserNotification"), ("OG-STATUSv2-MIB", "ogHostPingNotification"), ("OG-STATUSv2-MIB", "ogHostServiceNotification"), ("OG-STATUSv2-MIB", "ogHostUserNotification"), ("OG-STATUSv2-MIB", "ogWebUserNotification"), ("OG-STATUSv2-MIB", "ogEmdDioNotification"), ("OG-STATUSv2-MIB", "ogEmdTemperatureNotification"), ("OG-STATUSv2-MIB", "ogEmdHumidityNotification"), ("OG-STATUSv2-MIB", "ogPowerSupplyInputNotification"), ("OG-STATUSv2-MIB", "ogPowerSupplyOutputNotification"), ("OG-STATUSv2-MIB", "ogPowerSupplyTempNotification"), ("OG-STATUSv2-MIB", "ogUpsNotification"), ("OG-STATUSv2-MIB", "ogUpsInputNotification"), ("OG-STATUSv2-MIB", "ogUpsBatteryNotification"), ("OG-STATUSv2-MIB", "ogUpsOutputNotification"), ("OG-STATUSv2-MIB", "ogRpcInputNotification"), ("OG-STATUSv2-MIB", "ogRpcOutputNotification"), ("OG-STATUSv2-MIB", "ogRpcOutletNotification"), ("OG-STATUSv2-MIB", "ogNetInterfaceNotification"), ("OG-STATUSv2-MIB", "ogCellDataNotification"), ("OG-STATUSv2-MIB", "ogCellMessageNotification"), ("OG-STATUSv2-MIB", "ogCellSignalNotification"), ("OG-STATUSv2-MIB", "ogCellApnNotification"), ("OG-STATUSv2-MIB", "ogCellTowerNotification"), ("OG-STATUSv2-MIB", "ogCellNetworkNotification"), ("OG-STATUSv2-MIB", "ogWifiClientConnectNotification"), ("OG-STATUSv2-MIB", "ogWifiClientSignalNotification"), ("OG-STATUSv2-MIB", "ogWifiApAssociationNotification"), ("OG-STATUSv2-MIB", "ogWifiApAuthNotification"), ("OG-STATUSv2-MIB", "ogDialPoolHealthNotification"), ("OG-STATUSv2-MIB", "ogCustomNotification"), ("OG-STATUSv2-MIB", "ogCliUserSessionNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ogBasicNotificationGroup = ogBasicNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("OG-STATUSv2-MIB", ogEmdTemperatureTable=ogEmdTemperatureTable, ogStatus2NotificationPrefix=ogStatus2NotificationPrefix, ogWifiApIeeeMode=ogWifiApIeeeMode, ogCellMessageNotification=ogCellMessageNotification, ogWifiClientSignalNotification=ogWifiClientSignalNotification, ogUpsEntry=ogUpsEntry, ogUpsBatteryTemperature=ogUpsBatteryTemperature, ogStatus2Conformance=ogStatus2Conformance, ogSerialPortDCD=ogSerialPortDCD, ogPowerSupplyInputVoltage=ogPowerSupplyInputVoltage, ogRpcIndex=ogRpcIndex, ogWifiApClientRssi=ogWifiApClientRssi, ogPowerSupplyName=ogPowerSupplyName, ogCurrentAlarmTime=ogCurrentAlarmTime, ogBasicStatusGroup=ogBasicStatusGroup, ogRpcOutletName=ogRpcOutletName, ogRpcInputFrequency=ogRpcInputFrequency, ogSerialPortCTS=ogSerialPortCTS, ogWifiApClientEntry=ogWifiApClientEntry, ogWifiClientBitRate=ogWifiClientBitRate, ogHostUserAddress=ogHostUserAddress, ogHostServiceNotification=ogHostServiceNotification, ogEmdDioName=ogEmdDioName, ogUpsOutputFrequency=ogUpsOutputFrequency, ogNetInterfaceIndex=ogNetInterfaceIndex, ogCheckResetTimeout=ogCheckResetTimeout, ogAlarmCurrentValue=ogAlarmCurrentValue, ogUpsBatteryState=ogUpsBatteryState, ogCheckRepeatTimeout=ogCheckRepeatTimeout, ogSerialPortOverrunErrors=ogSerialPortOverrunErrors, ogUpsBatteryCurrent=ogUpsBatteryCurrent, ogPowerSupplyTable=ogPowerSupplyTable, ogRpcOutletFrequency=ogRpcOutletFrequency, ogEmdDioDirection=ogEmdDioDirection, ogStatus2Compliances=ogStatus2Compliances, ogCellApnNotification=ogCellApnNotification, ogUpsInputVoltage=ogUpsInputVoltage, ogHostUserTable=ogHostUserTable, ogCheckDeviceName=ogCheckDeviceName, ogEmdTemperatureEmd=ogEmdTemperatureEmd, ogWifiClientIeeeMode=ogWifiClientIeeeMode, ogWifiApAuthNotification=ogWifiApAuthNotification, ogEmdTemperatureValue=ogEmdTemperatureValue, ogWifiApClientRxBytes=ogWifiApClientRxBytes, ogCliUserSessionNotification=ogCliUserSessionNotification, ogHostEntry=ogHostEntry, ogRpcOutletRpc=ogRpcOutletRpc, ogEmdConnectType=ogEmdConnectType, ogRpcOutletTable=ogRpcOutletTable, ogWifiClientTxPower=ogWifiClientTxPower, ogRpcType=ogRpcType, ogWifiApClientIndex=ogWifiApClientIndex, ogNetInterfaceEntry=ogNetInterfaceEntry, ogBasicAlarmGroup=ogBasicAlarmGroup, ogStatus2=ogStatus2, ogWifiClientRxInvalidFrag=ogWifiClientRxInvalidFrag, ogWifiClientRxInvalidRetries=ogWifiClientRxInvalidRetries, ogWifiApClientTxPackets=ogWifiApClientTxPackets, ogUpsInputFrequency=ogUpsInputFrequency, ogWebUserStartTime=ogWebUserStartTime, ogUpsTable=ogUpsTable, ogWifiApClientInactiveTime=ogWifiApClientInactiveTime, ogHostIndex=ogHostIndex, ogCurrentAlarmTriggerValue=ogCurrentAlarmTriggerValue, ogWifiApFrequency=ogWifiApFrequency, ogRpcDescription=ogRpcDescription, ogNetInterfaceState=ogNetInterfaceState, ogAlarmCheck=ogAlarmCheck, ogRpcOutletCurrent=ogRpcOutletCurrent, ogUpsBatteryNotification=ogUpsBatteryNotification, ogSerialUserLabel=ogSerialUserLabel, ogNetInterfaceNotification=ogNetInterfaceNotification, ogNetInterfaceTable=ogNetInterfaceTable, ogAlarmEventId=ogAlarmEventId, ogCellModemModel=ogCellModemModel, ogEmdTemperatureDescription=ogEmdTemperatureDescription, ogUpsHumidity=ogUpsHumidity, ogWebUserNotification=ogWebUserNotification, ogWifiClientConnectNotification=ogWifiClientConnectNotification, ogRpcName=ogRpcName, ogWifiClientTable=ogWifiClientTable, ogWifiApEntry=ogWifiApEntry, ogEmdLogEnabled=ogEmdLogEnabled, ogUpsOutputTruePower=ogUpsOutputTruePower, ogSerialPortTxBytes=ogSerialPortTxBytes, ogCheckTable=ogCheckTable, ogSerialPortDTR=ogSerialPortDTR, ogSerialPatternNotification=ogSerialPatternNotification, PYSNMP_MODULE_ID=ogStatus2, ogSerialPortBreaks=ogSerialPortBreaks, ogUpsBatteryRunTimeRestart=ogUpsBatteryRunTimeRestart, ogHostTable=ogHostTable, ogPowerSupplyOutputNotification=ogPowerSupplyOutputNotification, ogRpcOutletIndex=ogRpcOutletIndex, ogHostName=ogHostName, ogCellModemRegistered=ogCellModemRegistered, ogRpcLogEnabled=ogRpcLogEnabled, ogAlarmName=ogAlarmName, ogAlarmPreviousValue=ogAlarmPreviousValue, ogUpsNotification=ogUpsNotification, ogUpsOutputVoltage=ogUpsOutputVoltage, ogCellModemIMSI=ogCellModemIMSI, ogWebUserName=ogWebUserName, ogSerialPortDataBits=ogSerialPortDataBits, ogCurrentAlarmPreviousValue=ogCurrentAlarmPreviousValue, ogWifiClientApMac=ogWifiClientApMac, ogCurrentAlarmInstance=ogCurrentAlarmInstance, ogEmdTemperatureNotification=ogEmdTemperatureNotification, ogUpsOutputLoad=ogUpsOutputLoad, ogSerialUserStartTime=ogSerialUserStartTime, ogCellModemSelectedSimCard=ogCellModemSelectedSimCard, ogHostServiceTable=ogHostServiceTable, ogWebUserSourceAddress=ogWebUserSourceAddress, ogCustomNotification=ogCustomNotification, ogEmdHumidityTable=ogEmdHumidityTable, ogFirmwareVersion=ogFirmwareVersion, ogSerialPortFlowControl=ogSerialPortFlowControl, ogEmdHumidityEntry=ogEmdHumidityEntry, ogUpsLogEnabled=ogUpsLogEnabled, ogAlarmTime=ogAlarmTime, ogEmdDioTable=ogEmdDioTable, ogEmdHumidityNotification=ogEmdHumidityNotification, ogSerialPortStopBits=ogSerialPortStopBits, ogUpsDescription=ogUpsDescription, ogHostServiceCounter=ogHostServiceCounter, ogWifiClientRxInvalidCrypt=ogWifiClientRxInvalidCrypt, ogUpsName=ogUpsName, ogSerialPortLabel=ogSerialPortLabel, ogRpcTable=ogRpcTable, ogUpsBatteryRunTimeLow=ogUpsBatteryRunTimeLow, ogBasicNotificationGroup=ogBasicNotificationGroup, ogRpcOutletState=ogRpcOutletState, ogWifiClientFrequency=ogWifiClientFrequency, ogCheckDeviceCheck=ogCheckDeviceCheck, ogUpsIndex=ogUpsIndex, ogCellModem3gRssi=ogCellModem3gRssi, ogEmdHumidityIndex=ogEmdHumidityIndex, ogUpsBatteryRunTime=ogUpsBatteryRunTime, ogCheckType=ogCheckType, ogWifiApClientRxPackets=ogWifiApClientRxPackets, ogCellSignalNotification=ogCellSignalNotification, ogAlarm=ogAlarm, ogSerialPortLogLevel=ogSerialPortLogLevel, ogEmdTemperatureTotal=ogEmdTemperatureTotal, ogEmdDescription=ogEmdDescription, ogAlarmSummary=ogAlarmSummary, ogPowerSupplyEntry=ogPowerSupplyEntry, ogCurrentAlarmDevice=ogCurrentAlarmDevice, ogWifiApEnabled=ogWifiApEnabled, ogPowerSupplyTemperature=ogPowerSupplyTemperature, ogCellModemRadioTechnology=ogCellModemRadioTechnology, ogPowerSupplyTempNotification=ogPowerSupplyTempNotification, ogCellModem4gRssi=ogCellModem4gRssi, ogUpsBatteryNominalVoltage=ogUpsBatteryNominalVoltage, ogHostServiceEntry=ogHostServiceEntry, ogWifiApClientTxBytes=ogWifiApClientTxBytes, ogEmdEnabled=ogEmdEnabled, ogCellModemVendor=ogCellModemVendor, ogHostUserStartTime=ogHostUserStartTime, ogWifiApTable=ogWifiApTable, ogUpsInputNominalCurrent=ogUpsInputNominalCurrent, ogHostPingNotification=ogHostPingNotification, ogCellTowerNotification=ogCellTowerNotification, ogWifiClientEnabled=ogWifiClientEnabled, ogRpcOutputNotification=ogRpcOutputNotification, ogAlarmLogTable=ogAlarmLogTable, ogWifiApCounter=ogWifiApCounter, ogCurrentAlarmIndex=ogCurrentAlarmIndex, ogEmdDioEmd=ogEmdDioEmd, ogHostIpV6Address=ogHostIpV6Address, ogSerialUserTable=ogSerialUserTable, ogRpcInputCurrent=ogRpcInputCurrent, ogSystem=ogSystem, ogEmdTemperatureIndex=ogEmdTemperatureIndex, ogWebUserIndex=ogWebUserIndex, ogPowerSupplyInputNotification=ogPowerSupplyInputNotification, ogCellModemTower=ogCellModemTower, ogCellModemIndex=ogCellModemIndex, ogCellModemTemperature=ogCellModemTemperature, ogSerialPortMode=ogSerialPortMode, ogAlarmLogEntry=ogAlarmLogEntry, ogPowerSupplyIndex=ogPowerSupplyIndex, ogSerialNumber=ogSerialNumber, ogWebUserSourcePort=ogWebUserSourcePort, ogCurrentAlarmType=ogCurrentAlarmType, ogHostServiceIndex=ogHostServiceIndex, ogSerialPortRxBytes=ogSerialPortRxBytes, ogEmdDioIndex=ogEmdDioIndex, ogEmdHumidityDescription=ogEmdHumidityDescription, ogEmdTemperatureCounter=ogEmdTemperatureCounter, ogCellModemSessionTime=ogCellModemSessionTime, ogRpcInputVoltage=ogRpcInputVoltage, ogHostServicePort=ogHostServicePort, ogHostUserNotification=ogHostUserNotification, ogWifiClientRxInvalidMisc=ogWifiClientRxInvalidMisc, ogCheckDeviceTable=ogCheckDeviceTable, ogSerialUserName=ogSerialUserName, ogRpcOutletTotal=ogRpcOutletTotal, ogStatus2Compliance=ogStatus2Compliance, ogSerialPortTable=ogSerialPortTable, ogEmdName=ogEmdName, ogRpcOutletNotification=ogRpcOutletNotification, ogCellModemCounter=ogCellModemCounter, ogCheckDeviceIndex=ogCheckDeviceIndex, ogUpsBatteryNominalCurrent=ogUpsBatteryNominalCurrent, ogEmdHumidityValue=ogEmdHumidityValue, ogSerialUserIndex=ogSerialUserIndex, ogCheckDeviceRef=ogCheckDeviceRef, ogUpsOutputNominalVoltage=ogUpsOutputNominalVoltage, ogEmdIndex=ogEmdIndex, ogSerialPortDSR=ogSerialPortDSR, ogCurrentAlarmName=ogCurrentAlarmName, ogSerialSignalNotification=ogSerialSignalNotification, ogHostIpV4Address=ogHostIpV4Address, ogUpsConnectType=ogUpsConnectType, ogSerialUserNotification=ogSerialUserNotification, ogWifiApClientMac=ogWifiApClientMac, ogNetInterfaceType=ogNetInterfaceType, ogEmdHumidityName=ogEmdHumidityName, ogUpsState=ogUpsState, ogEmdDioEntry=ogEmdDioEntry, ogUpsOutputCurrent=ogUpsOutputCurrent, ogWifiApClientTxBitRate=ogWifiApClientTxBitRate, ogCheckIndex=ogCheckIndex, ogCurrentAlarmState=ogCurrentAlarmState, ogEmdHumidityCounter=ogEmdHumidityCounter, ogWifiClientRxInvalidNwid=ogWifiClientRxInvalidNwid, ogAlarmState=ogAlarmState, ogUpsOutputNotification=ogUpsOutputNotification, ogHostServiceHost=ogHostServiceHost, ogRpcConnectType=ogRpcConnectType, ogWifiApClientTable=ogWifiApClientTable, ogEmdTable=ogEmdTable, ogMibNotifications=ogMibNotifications, ogUpsInputNominalVoltage=ogUpsInputNominalVoltage, ogSerialPortIndex=ogSerialPortIndex, ogAlarmTriggerValue=ogAlarmTriggerValue, ogCellModemEnabled=ogCellModemEnabled, ogRpcInputNotification=ogRpcInputNotification, ogSerialUserEntry=ogSerialUserEntry, ogSerialPortParity=ogSerialPortParity, ogEmdEntry=ogEmdEntry, ogWifiClientEntry=ogWifiClientEntry, ogAlarmLogIndex=ogAlarmLogIndex, ogUpsCounter=ogUpsCounter, ogUpsBatteryCharge=ogUpsBatteryCharge, ogEmdTemperatureEntry=ogEmdTemperatureEntry, ogWifiApAssociationNotification=ogWifiApAssociationNotification, ogCurrentAlarmTable=ogCurrentAlarmTable, ogSerialUserPort=ogSerialUserPort, ogSerialPortSpeed=ogSerialPortSpeed, ogEmdDioInputTotal=ogEmdDioInputTotal, ogNetInterfaceName=ogNetInterfaceName, ogWifiApSsid=ogWifiApSsid)
mibBuilder.exportSymbols("OG-STATUSv2-MIB", ogWifiClientCounter=ogWifiClientCounter, ogEmdDioNotification=ogEmdDioNotification, ogSerialPortParityErrors=ogSerialPortParityErrors, ogRpcOutletVoltage=ogRpcOutletVoltage, ogCellModemConnected=ogCellModemConnected, ogHostUserHost=ogHostUserHost, ogUpsInputCurrent=ogUpsInputCurrent, ogEmdTemperatureName=ogEmdTemperatureName, ogUpsOutputPower=ogUpsOutputPower, ogWifiApInterface=ogWifiApInterface, ogRpcMaxTemperature=ogRpcMaxTemperature, ogWebUserEntry=ogWebUserEntry, ogRpcOutletEntry=ogRpcOutletEntry, ogSerialPortEntry=ogSerialPortEntry, ogCellDataNotification=ogCellDataNotification, ogCheckTriggerActions=ogCheckTriggerActions, ogCellModemNetwork=ogCellModemNetwork, ogCheckResolveActions=ogCheckResolveActions, ogRpcOutletLoad=ogRpcOutletLoad, ogRpcEntry=ogRpcEntry, ogEmdDioType=ogEmdDioType, ogWifiClientLinkQuality=ogWifiClientLinkQuality, ogAlarmUser=ogAlarmUser, ogUpsOutputNominalCurrent=ogUpsOutputNominalCurrent, ogEmdHumidityTotal=ogEmdHumidityTotal, ogUpsInputNominalFrequency=ogUpsInputNominalFrequency, ogRpcCounter=ogRpcCounter, ogCurrentAlarmEntry=ogCurrentAlarmEntry, ogWifiClientMode=ogWifiClientMode, ogPowerSupplyOutputCurrent=ogPowerSupplyOutputCurrent, ogUpsOutputNominalFrequency=ogUpsOutputNominalFrequency, ogUpsInputNotification=ogUpsInputNotification, ogStatus2Groups=ogStatus2Groups, ogHostUserEntry=ogHostUserEntry, ogWifiApIndex=ogWifiApIndex, ogWifiClientIndex=ogWifiClientIndex, ogWifiClientInterface=ogWifiClientInterface, ogWifiApTxPower=ogWifiApTxPower, ogEmdDioState=ogEmdDioState, ogCheckDeviceEntry=ogCheckDeviceEntry, ogEmdDioCounter=ogEmdDioCounter, ogCurrentAlarmSummary=ogCurrentAlarmSummary, ogSerialPortFramingErrors=ogSerialPortFramingErrors, ogCheckName=ogCheckName, ogEmdDioDescription=ogEmdDioDescription, ogWifiApClientAp=ogWifiApClientAp, ogSerialPortRTS=ogSerialPortRTS, ogHostServiceStatus=ogHostServiceStatus, ogCurrentAlarmCurrentValue=ogCurrentAlarmCurrentValue, ogWebUserTable=ogWebUserTable, ogCurrentAlarmCheck=ogCurrentAlarmCheck, ogCellNetworkNotification=ogCellNetworkNotification, ogEmdDioTriggerMode=ogEmdDioTriggerMode, ogHostServiceType=ogHostServiceType, ogEmdHumidityEmd=ogEmdHumidityEmd, ogAlarmInstance=ogAlarmInstance, ogWifiClientEssid=ogWifiClientEssid, ogCheckEntry=ogCheckEntry, ogHostUserName=ogHostUserName, ogCellModemApn=ogCellModemApn, ogCellModemTable=ogCellModemTable, ogCurrentAlarmEventId=ogCurrentAlarmEventId, ogHostUserHostName=ogHostUserHostName, ogCellModemEntry=ogCellModemEntry, ogCurrentAlarmUser=ogCurrentAlarmUser, ogAlarmType=ogAlarmType, ogUpsTemperature=ogUpsTemperature, ogUpsBatteryVoltage=ogUpsBatteryVoltage, ogUpsType=ogUpsType, ogWifiClientRssi=ogWifiClientRssi, ogDialPoolHealthNotification=ogDialPoolHealthNotification, ogWifiClientMissedBeacon=ogWifiClientMissedBeacon, ogHostUserIndex=ogHostUserIndex, ogAlarmDevice=ogAlarmDevice)
