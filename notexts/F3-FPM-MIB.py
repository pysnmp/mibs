#
# PySNMP MIB module F3-FPM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/F3-FPM-MIB
# Produced by pysmi-1.1.12 at Thu Nov 28 02:54:20 2024
# On host fv-az885-149 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
fsp150cm, = mibBuilder.importSymbols("ADVA-MIB", "fsp150cm")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
VlanId, OperationalState, FlowSecState, PerfCounter64, CmPmBinAction, VlanPriority, SecondaryState, AdminState, CmPmIntervalType = mibBuilder.importSymbols("CM-COMMON-MIB", "VlanId", "OperationalState", "FlowSecState", "PerfCounter64", "CmPmBinAction", "VlanPriority", "SecondaryState", "AdminState", "CmPmIntervalType")
slotIndex, neIndex, shelfIndex = mibBuilder.importSymbols("CM-ENTITY-MIB", "slotIndex", "neIndex", "shelfIndex")
CmActiveControlProtocolsType, CmControlProtocolDispType, cmEthernetNetPortIndex, FlowVlanActionType, cmEthernetAccPortIndex, cmMPFlowIndex, ShapingType, cmMPFlowEntry, PolicerColorMode, PolicerAlgorithmType, FlowTagControl = mibBuilder.importSymbols("CM-FACILITY-MIB", "CmActiveControlProtocolsType", "CmControlProtocolDispType", "cmEthernetNetPortIndex", "FlowVlanActionType", "cmEthernetAccPortIndex", "cmMPFlowIndex", "ShapingType", "cmMPFlowEntry", "PolicerColorMode", "PolicerAlgorithmType", "FlowTagControl")
FlowLearningConfigAction, LearningAction, ProtectLearningControl = mibBuilder.importSymbols("F3-BRIDGE-MIB", "FlowLearningConfigAction", "LearningAction", "ProtectLearningControl")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, Counter32, Gauge32, TimeTicks, Integer32, ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, Counter64, iso, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "Gauge32", "TimeTicks", "Integer32", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "Counter64", "iso", "NotificationType", "IpAddress")
DisplayString, TextualConvention, VariablePointer, DateAndTime, TruthValue, StorageType, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "VariablePointer", "DateAndTime", "TruthValue", "StorageType", "RowStatus")
f3FpmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43))
f3FpmMIB.setRevisions(('2016-07-11 00:00',))
if mibBuilder.loadTexts: f3FpmMIB.setLastUpdated('201607110000Z')
if mibBuilder.loadTexts: f3FpmMIB.setOrganization('ADVA Optical Networking')
f3FpmConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1))
f3FpmPerfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2))
f3FpmPerfNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 3))
f3FpmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4))
f3AccFlowPointTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1), )
if mibBuilder.loadTexts: f3AccFlowPointTable.setStatus('current')
f3AccFlowPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"))
if mibBuilder.loadTexts: f3AccFlowPointEntry.setStatus('current')
f3AccFlowPointIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3AccFlowPointIndex.setStatus('current')
f3AccFlowPointAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointAlias.setStatus('current')
f3AccFlowPointAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 3), AdminState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointAdminState.setStatus('current')
f3AccFlowPointOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointOperationalState.setStatus('current')
f3AccFlowPointSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointSecondaryState.setStatus('current')
f3AccFlowPointAssociatedFlowId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 6), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointAssociatedFlowId.setStatus('current')
f3AccFlowPointIngressMultiCOSEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointIngressMultiCOSEnabled.setStatus('current')
f3AccFlowPointIngressCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointIngressCOS.setStatus('deprecated')
f3AccFlowPointEgressShapingType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 9), ShapingType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointEgressShapingType.setStatus('current')
f3AccFlowPointIngressVlanMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointIngressVlanMemberList.setStatus('current')
f3AccFlowPointVlanMemberAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 11), FlowVlanActionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointVlanMemberAction.setStatus('current')
f3AccFlowPointVlanMemberActionVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointVlanMemberActionVlan.setStatus('current')
f3AccFlowPointIngressUntaggedFrameEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointIngressUntaggedFrameEnabled.setStatus('current')
f3AccFlowPointCTagControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 14), FlowTagControl()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointCTagControl.setStatus('current')
f3AccFlowPointCTagVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 15), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointCTagVlanId.setStatus('current')
f3AccFlowPointCTagVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 16), VlanPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointCTagVlanPriority.setStatus('current')
f3AccFlowPointSTagControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 17), FlowTagControl()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointSTagControl.setStatus('current')
f3AccFlowPointSTagVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 18), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointSTagVlanId.setStatus('current')
f3AccFlowPointSTagVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 19), VlanPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointSTagVlanPriority.setStatus('current')
f3AccFlowPointEgressOuterTagPrioMapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 20), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointEgressOuterTagPrioMapEnabled.setStatus('current')
f3AccFlowPointEgressInnerTagPrioMapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 21), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointEgressInnerTagPrioMapEnabled.setStatus('current')
f3AccFlowPointSESFramesLossThresholdRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointSESFramesLossThresholdRatio.setStatus('current')
f3AccFlowPointDefaultMemberEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 23), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointDefaultMemberEnabled.setStatus('current')
f3AccFlowPointMcastRateLimitEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 24), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointMcastRateLimitEnabled.setStatus('current')
f3AccFlowPointMcastRateLimitSpeedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 25), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointMcastRateLimitSpeedLo.setStatus('current')
f3AccFlowPointMcastRateLimitSpeedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 26), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointMcastRateLimitSpeedHi.setStatus('current')
f3AccFlowPointBcastRateLimitEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 27), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointBcastRateLimitEnabled.setStatus('current')
f3AccFlowPointBcastRateLimitSpeedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 28), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointBcastRateLimitSpeedLo.setStatus('current')
f3AccFlowPointBcastRateLimitSpeedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 29), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointBcastRateLimitSpeedHi.setStatus('current')
f3AccFlowPointCombinedRateLimitEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 30), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointCombinedRateLimitEnabled.setStatus('current')
f3AccFlowPointCombinedRateLimitSpeedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 31), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointCombinedRateLimitSpeedLo.setStatus('current')
f3AccFlowPointCombinedRateLimitSpeedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 32), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointCombinedRateLimitSpeedHi.setStatus('current')
f3AccFlowPointSplitHorizonGroupOID = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 33), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointSplitHorizonGroupOID.setStatus('current')
f3AccFlowPointLoopAvoidance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 34), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointLoopAvoidance.setStatus('current')
f3AccFlowPointHierarchicalCOSEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 35), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointHierarchicalCOSEnabled.setStatus('current')
f3AccFlowPointMaximumBWLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 36), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointMaximumBWLo.setStatus('current')
f3AccFlowPointMaximumBWHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 37), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointMaximumBWHi.setStatus('current')
f3AccFlowPointGuaranteedBWLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 38), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointGuaranteedBWLo.setStatus('current')
f3AccFlowPointGuaranteedBWHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 39), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointGuaranteedBWHi.setStatus('current')
f3AccFlowPointAutoBandwidthConfigEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 40), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointAutoBandwidthConfigEnabled.setStatus('current')
f3AccFlowPointAutoCIRPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointAutoCIRPercentage.setStatus('current')
f3AccFlowPointFrameFwdEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 42), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointFrameFwdEnabled.setStatus('current')
f3AccFlowPointStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 43), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointStorageType.setStatus('current')
f3AccFlowPointRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 44), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFlowPointRowStatus.setStatus('current')
f3AccFlowPointUsePortPrioMapProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 45), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointUsePortPrioMapProfile.setStatus('current')
f3AccFlowPointRefPrioMapProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 46), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointRefPrioMapProfile.setStatus('current')
f3AccFlowpointRefConnectGuardFlowObject = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 47), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowpointRefConnectGuardFlowObject.setStatus('current')
f3AccFlowpointSecureBlockingControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 48), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowpointSecureBlockingControl.setStatus('current')
f3AccFlowpointSecureState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 1, 1, 49), FlowSecState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowpointSecureState.setStatus('current')
f3AccFpQosShaperTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2), )
if mibBuilder.loadTexts: f3AccFpQosShaperTable.setStatus('current')
f3AccFpQosShaperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFpQosShaperIndex"))
if mibBuilder.loadTexts: f3AccFpQosShaperEntry.setStatus('current')
f3AccFpQosShaperIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: f3AccFpQosShaperIndex.setStatus('current')
f3AccFpQosShaperAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 2), AdminState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosShaperAdminState.setStatus('current')
f3AccFpQosShaperOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 3), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperOperationalState.setStatus('current')
f3AccFpQosShaperSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 4), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperSecondaryState.setStatus('current')
f3AccFpQosShaperCIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosShaperCIRLo.setStatus('current')
f3AccFpQosShaperCIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosShaperCIRHi.setStatus('current')
f3AccFpQosShaperEIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosShaperEIRLo.setStatus('current')
f3AccFpQosShaperEIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosShaperEIRHi.setStatus('current')
f3AccFpQosShaperCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosShaperCBS.setStatus('current')
f3AccFpQosShaperEBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosShaperEBS.setStatus('current')
f3AccFpQosShaperBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosShaperBufferSize.setStatus('current')
f3AccFpQosShaperCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperCOS.setStatus('current')
f3AccFpQosShaperStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 13), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosShaperStorageType.setStatus('current')
f3AccFpQosShaperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 2, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosShaperRowStatus.setStatus('current')
f3AccFpQosPolicerTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3), )
if mibBuilder.loadTexts: f3AccFpQosPolicerTable.setStatus('current')
f3AccFpQosPolicerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFpQosPolicerIndex"))
if mibBuilder.loadTexts: f3AccFpQosPolicerEntry.setStatus('current')
f3AccFpQosPolicerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: f3AccFpQosPolicerIndex.setStatus('current')
f3AccFpQosPolicerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 2), AdminState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerAdminState.setStatus('current')
f3AccFpQosPolicerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 3), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerOperationalState.setStatus('current')
f3AccFpQosPolicerSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 4), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerSecondaryState.setStatus('current')
f3AccFpQosPolicerCIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerCIRLo.setStatus('current')
f3AccFpQosPolicerCIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerCIRHi.setStatus('current')
f3AccFpQosPolicerEIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerEIRLo.setStatus('current')
f3AccFpQosPolicerEIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerEIRHi.setStatus('current')
f3AccFpQosPolicerCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerCBS.setStatus('current')
f3AccFpQosPolicerEBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerEBS.setStatus('current')
f3AccFpQosPolicerAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 11), PolicerAlgorithmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerAlgorithm.setStatus('current')
f3AccFpQosPolicerColorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 12), PolicerColorMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerColorMode.setStatus('current')
f3AccFpQosPolicerCouplingFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerCouplingFlag.setStatus('current')
f3AccFpQosPolicerPolicingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 14), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerPolicingEnabled.setStatus('current')
f3AccFpQosPolicerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 15), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerStorageType.setStatus('current')
f3AccFpQosPolicerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 3, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3AccFpQosPolicerRowStatus.setStatus('current')
f3MPFlowExtTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 4), )
if mibBuilder.loadTexts: f3MPFlowExtTable.setStatus('current')
f3MPFlowExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 4, 1), )
cmMPFlowEntry.registerAugmentions(("F3-FPM-MIB", "f3MPFlowExtEntry"))
f3MPFlowExtEntry.setIndexNames(*cmMPFlowEntry.getIndexNames())
if mibBuilder.loadTexts: f3MPFlowExtEntry.setStatus('current')
f3MPFlowExtMaxFwdEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3MPFlowExtMaxFwdEntries.setStatus('current')
f3MPFlowRefConnectGuardFlowObject = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 4, 1, 2), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3MPFlowRefConnectGuardFlowObject.setStatus('current')
f3MPFlowSecureState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 4, 1, 3), FlowSecState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowSecureState.setStatus('current')
f3AccFlowPointCpdV2Table = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5), )
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Table.setStatus('current')
f3AccFlowPointCpdV2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointCpdV2Index"))
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Entry.setStatus('current')
f3AccFlowPointCpdV2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Index.setStatus('current')
f3AccFlowPointCpdV2IslDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 2), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2IslDispType.setStatus('current')
f3AccFlowPointCpdV2PagpDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 3), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2PagpDispType.setStatus('current')
f3AccFlowPointCpdV2UdldDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 4), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2UdldDispType.setStatus('current')
f3AccFlowPointCpdV2CdpDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 5), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2CdpDispType.setStatus('current')
f3AccFlowPointCpdV2VtpDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 6), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2VtpDispType.setStatus('current')
f3AccFlowPointCpdV2DtpDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 7), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2DtpDispType.setStatus('current')
f3AccFlowPointCpdV2PvstpPlusDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 8), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2PvstpPlusDispType.setStatus('current')
f3AccFlowPointCpdV2UplinkFastDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 9), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2UplinkFastDispType.setStatus('current')
f3AccFlowPointCpdV2VlanBridgeDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 10), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2VlanBridgeDispType.setStatus('current')
f3AccFlowPointCpdV2L2PTDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 11), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2L2PTDispType.setStatus('current')
f3AccFlowPointCpdV2BPDUDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 12), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2BPDUDispType.setStatus('current')
f3AccFlowPointCpdV2PauseDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 13), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2PauseDispType.setStatus('current')
f3AccFlowPointCpdV2LACPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 14), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2LACPDispType.setStatus('current')
f3AccFlowPointCpdV2LACPMarkerDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 15), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2LACPMarkerDispType.setStatus('current')
f3AccFlowPointCpdV2EfmOamDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 16), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2EfmOamDispType.setStatus('current')
f3AccFlowPointCpdV2SSMDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 17), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2SSMDispType.setStatus('current')
f3AccFlowPointCpdV2PortAuthenDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 18), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2PortAuthenDispType.setStatus('current')
f3AccFlowPointCpdV2LANBridgesDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 19), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2LANBridgesDispType.setStatus('current')
f3AccFlowPointCpdV2GMRPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 20), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2GMRPDispType.setStatus('current')
f3AccFlowPointCpdV2GVRPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 21), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2GVRPDispType.setStatus('current')
f3AccFlowPointCpdV2GARPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 22), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2GARPDispType.setStatus('current')
f3AccFlowPointCpdV2ActiveControlProtocols = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 23), CmActiveControlProtocolsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2ActiveControlProtocols.setStatus('current')
f3AccFlowPointCpdV2ELMIDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 24), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2ELMIDispType.setStatus('current')
f3AccFlowPointCpdV2Mac00DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 25), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac00DispType.setStatus('current')
f3AccFlowPointCpdV2Mac01DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 26), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac01DispType.setStatus('current')
f3AccFlowPointCpdV2Mac02DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 27), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac02DispType.setStatus('current')
f3AccFlowPointCpdV2Mac03DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 28), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac03DispType.setStatus('current')
f3AccFlowPointCpdV2Mac04DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 29), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac04DispType.setStatus('current')
f3AccFlowPointCpdV2Mac05DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 30), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac05DispType.setStatus('current')
f3AccFlowPointCpdV2Mac06DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 31), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac06DispType.setStatus('current')
f3AccFlowPointCpdV2Mac07DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 32), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac07DispType.setStatus('current')
f3AccFlowPointCpdV2Mac08DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 33), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac08DispType.setStatus('current')
f3AccFlowPointCpdV2Mac09DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 34), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac09DispType.setStatus('current')
f3AccFlowPointCpdV2Mac0ADispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 35), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac0ADispType.setStatus('current')
f3AccFlowPointCpdV2Mac0BDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 36), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac0BDispType.setStatus('current')
f3AccFlowPointCpdV2Mac0CDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 37), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac0CDispType.setStatus('current')
f3AccFlowPointCpdV2Mac0DDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 38), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac0DDispType.setStatus('current')
f3AccFlowPointCpdV2Mac0EDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 39), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac0EDispType.setStatus('current')
f3AccFlowPointCpdV2Mac0FDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 40), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2Mac0FDispType.setStatus('current')
f3AccFlowPointCpdV2NearestLLDPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 41), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2NearestLLDPDispType.setStatus('current')
f3AccFlowPointCpdV2NonTpmrLLDPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 42), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2NonTpmrLLDPDispType.setStatus('current')
f3AccFlowPointCpdV2CustomerLLDPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 5, 1, 43), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointCpdV2CustomerLLDPDispType.setStatus('current')
f3AccFlowPointLearningConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 6), )
if mibBuilder.loadTexts: f3AccFlowPointLearningConfigTable.setStatus('current')
f3AccFlowPointLearningConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 6, 1), )
f3AccFlowPointEntry.registerAugmentions(("F3-FPM-MIB", "f3AccFlowPointLearningConfigEntry"))
f3AccFlowPointLearningConfigEntry.setIndexNames(*f3AccFlowPointEntry.getIndexNames())
if mibBuilder.loadTexts: f3AccFlowPointLearningConfigEntry.setStatus('current')
f3AccFlowPointLearningConfigLearningEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 6, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointLearningConfigLearningEnabled.setStatus('current')
f3AccFlowPointLearningConfigMaxFwdEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 6, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointLearningConfigMaxFwdEntries.setStatus('current')
f3AccFlowPointLearningConfigProtectLearningCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 6, 1, 3), ProtectLearningControl()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointLearningConfigProtectLearningCtrl.setStatus('current')
f3AccFlowPointLearningConfigAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 6, 1, 4), FlowLearningConfigAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointLearningConfigAction.setStatus('current')
f3NetFlowPointTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7), )
if mibBuilder.loadTexts: f3NetFlowPointTable.setStatus('current')
f3NetFlowPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"))
if mibBuilder.loadTexts: f3NetFlowPointEntry.setStatus('current')
f3NetFlowPointIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3NetFlowPointIndex.setStatus('current')
f3NetFlowPointAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointAlias.setStatus('current')
f3NetFlowPointAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 3), AdminState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointAdminState.setStatus('current')
f3NetFlowPointOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointOperationalState.setStatus('current')
f3NetFlowPointSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointSecondaryState.setStatus('current')
f3NetFlowPointAssociatedFlowId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 6), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointAssociatedFlowId.setStatus('current')
f3NetFlowPointIngressMultiCOSEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointIngressMultiCOSEnabled.setStatus('current')
f3NetFlowPointIngressCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointIngressCOS.setStatus('deprecated')
f3NetFlowPointEgressShapingType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 9), ShapingType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointEgressShapingType.setStatus('current')
f3NetFlowPointIngressVlanMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointIngressVlanMemberList.setStatus('current')
f3NetFlowPointVlanMemberAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 11), FlowVlanActionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointVlanMemberAction.setStatus('current')
f3NetFlowPointVlanMemberActionVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointVlanMemberActionVlan.setStatus('current')
f3NetFlowPointIngressUntaggedFrameEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointIngressUntaggedFrameEnabled.setStatus('current')
f3NetFlowPointCTagControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 14), FlowTagControl()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointCTagControl.setStatus('current')
f3NetFlowPointCTagVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 15), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointCTagVlanId.setStatus('current')
f3NetFlowPointCTagVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 16), VlanPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointCTagVlanPriority.setStatus('current')
f3NetFlowPointSTagControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 17), FlowTagControl()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointSTagControl.setStatus('current')
f3NetFlowPointSTagVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 18), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointSTagVlanId.setStatus('current')
f3NetFlowPointSTagVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 19), VlanPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointSTagVlanPriority.setStatus('current')
f3NetFlowPointEgressOuterTagPrioMapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 20), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointEgressOuterTagPrioMapEnabled.setStatus('current')
f3NetFlowPointEgressInnerTagPrioMapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 21), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointEgressInnerTagPrioMapEnabled.setStatus('current')
f3NetFlowPointSESFramesLossThresholdRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointSESFramesLossThresholdRatio.setStatus('current')
f3NetFlowPointDefaultMemberEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 23), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointDefaultMemberEnabled.setStatus('current')
f3NetFlowPointMcastRateLimitEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 24), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointMcastRateLimitEnabled.setStatus('current')
f3NetFlowPointMcastRateLimitSpeedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 25), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointMcastRateLimitSpeedLo.setStatus('current')
f3NetFlowPointMcastRateLimitSpeedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 26), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointMcastRateLimitSpeedHi.setStatus('current')
f3NetFlowPointBcastRateLimitEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 27), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointBcastRateLimitEnabled.setStatus('current')
f3NetFlowPointBcastRateLimitSpeedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 28), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointBcastRateLimitSpeedLo.setStatus('current')
f3NetFlowPointBcastRateLimitSpeedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 29), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointBcastRateLimitSpeedHi.setStatus('current')
f3NetFlowPointCombinedRateLimitEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 30), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointCombinedRateLimitEnabled.setStatus('current')
f3NetFlowPointCombinedRateLimitSpeedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 31), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointCombinedRateLimitSpeedLo.setStatus('current')
f3NetFlowPointCombinedRateLimitSpeedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 32), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointCombinedRateLimitSpeedHi.setStatus('current')
f3NetFlowPointSplitHorizonGroupOID = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 33), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointSplitHorizonGroupOID.setStatus('current')
f3NetFlowPointLoopAvoidance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 34), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointLoopAvoidance.setStatus('current')
f3NetFlowPointHierarchicalCOSEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 35), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointHierarchicalCOSEnabled.setStatus('current')
f3NetFlowPointMaximumBWLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 36), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointMaximumBWLo.setStatus('current')
f3NetFlowPointMaximumBWHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 37), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointMaximumBWHi.setStatus('current')
f3NetFlowPointGuaranteedBWLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 38), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointGuaranteedBWLo.setStatus('current')
f3NetFlowPointGuaranteedBWHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 39), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointGuaranteedBWHi.setStatus('current')
f3NetFlowPointAutoBandwidthConfigEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 40), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointAutoBandwidthConfigEnabled.setStatus('current')
f3NetFlowPointAutoCIRPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointAutoCIRPercentage.setStatus('current')
f3NetFlowPointFrameFwdEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 42), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointFrameFwdEnabled.setStatus('current')
f3NetFlowPointStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 43), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointStorageType.setStatus('current')
f3NetFlowPointRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 44), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFlowPointRowStatus.setStatus('current')
f3NetFlowPointUsePortPrioMapProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 45), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointUsePortPrioMapProfile.setStatus('current')
f3NetFlowPointRefPrioMapProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 46), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointRefPrioMapProfile.setStatus('current')
f3NetFlowpointRefConnectGuardFlowObject = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 47), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowpointRefConnectGuardFlowObject.setStatus('current')
f3NetFlowpointSecureBlockingControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 48), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowpointSecureBlockingControl.setStatus('current')
f3NetFlowpointSecureState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 7, 1, 49), FlowSecState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowpointSecureState.setStatus('current')
f3NetFpQosShaperTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8), )
if mibBuilder.loadTexts: f3NetFpQosShaperTable.setStatus('current')
f3NetFpQosShaperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFpQosShaperIndex"))
if mibBuilder.loadTexts: f3NetFpQosShaperEntry.setStatus('current')
f3NetFpQosShaperIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: f3NetFpQosShaperIndex.setStatus('current')
f3NetFpQosShaperAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 2), AdminState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosShaperAdminState.setStatus('current')
f3NetFpQosShaperOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 3), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperOperationalState.setStatus('current')
f3NetFpQosShaperSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 4), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperSecondaryState.setStatus('current')
f3NetFpQosShaperCIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosShaperCIRLo.setStatus('current')
f3NetFpQosShaperCIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosShaperCIRHi.setStatus('current')
f3NetFpQosShaperEIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosShaperEIRLo.setStatus('current')
f3NetFpQosShaperEIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosShaperEIRHi.setStatus('current')
f3NetFpQosShaperCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosShaperCBS.setStatus('current')
f3NetFpQosShaperEBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosShaperEBS.setStatus('current')
f3NetFpQosShaperBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosShaperBufferSize.setStatus('current')
f3NetFpQosShaperCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperCOS.setStatus('current')
f3NetFpQosShaperStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 13), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosShaperStorageType.setStatus('current')
f3NetFpQosShaperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 8, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosShaperRowStatus.setStatus('current')
f3NetFpQosPolicerTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9), )
if mibBuilder.loadTexts: f3NetFpQosPolicerTable.setStatus('current')
f3NetFpQosPolicerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFpQosPolicerIndex"))
if mibBuilder.loadTexts: f3NetFpQosPolicerEntry.setStatus('current')
f3NetFpQosPolicerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: f3NetFpQosPolicerIndex.setStatus('current')
f3NetFpQosPolicerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 2), AdminState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerAdminState.setStatus('current')
f3NetFpQosPolicerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 3), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerOperationalState.setStatus('current')
f3NetFpQosPolicerSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 4), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerSecondaryState.setStatus('current')
f3NetFpQosPolicerCIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerCIRLo.setStatus('current')
f3NetFpQosPolicerCIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerCIRHi.setStatus('current')
f3NetFpQosPolicerEIRLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerEIRLo.setStatus('current')
f3NetFpQosPolicerEIRHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerEIRHi.setStatus('current')
f3NetFpQosPolicerCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerCBS.setStatus('current')
f3NetFpQosPolicerEBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerEBS.setStatus('current')
f3NetFpQosPolicerAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 11), PolicerAlgorithmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerAlgorithm.setStatus('current')
f3NetFpQosPolicerColorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 12), PolicerColorMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerColorMode.setStatus('current')
f3NetFpQosPolicerCouplingFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerCouplingFlag.setStatus('current')
f3NetFpQosPolicerPolicingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 14), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerPolicingEnabled.setStatus('current')
f3NetFpQosPolicerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 15), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerStorageType.setStatus('current')
f3NetFpQosPolicerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 9, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3NetFpQosPolicerRowStatus.setStatus('current')
f3NetFlowPointCpdV2Table = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10), )
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Table.setStatus('current')
f3NetFlowPointCpdV2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointCpdV2Index"))
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Entry.setStatus('current')
f3NetFlowPointCpdV2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 1), Integer32())
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Index.setStatus('current')
f3NetFlowPointCpdV2IslDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 2), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2IslDispType.setStatus('current')
f3NetFlowPointCpdV2PagpDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 3), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2PagpDispType.setStatus('current')
f3NetFlowPointCpdV2UdldDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 4), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2UdldDispType.setStatus('current')
f3NetFlowPointCpdV2CdpDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 5), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2CdpDispType.setStatus('current')
f3NetFlowPointCpdV2VtpDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 6), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2VtpDispType.setStatus('current')
f3NetFlowPointCpdV2DtpDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 7), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2DtpDispType.setStatus('current')
f3NetFlowPointCpdV2PvstpPlusDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 8), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2PvstpPlusDispType.setStatus('current')
f3NetFlowPointCpdV2UplinkFastDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 9), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2UplinkFastDispType.setStatus('current')
f3NetFlowPointCpdV2VlanBridgeDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 10), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2VlanBridgeDispType.setStatus('current')
f3NetFlowPointCpdV2L2PTDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 11), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2L2PTDispType.setStatus('current')
f3NetFlowPointCpdV2BPDUDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 12), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2BPDUDispType.setStatus('current')
f3NetFlowPointCpdV2PauseDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 13), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2PauseDispType.setStatus('current')
f3NetFlowPointCpdV2LACPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 14), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2LACPDispType.setStatus('current')
f3NetFlowPointCpdV2LACPMarkerDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 15), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2LACPMarkerDispType.setStatus('current')
f3NetFlowPointCpdV2EfmOamDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 16), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2EfmOamDispType.setStatus('current')
f3NetFlowPointCpdV2SSMDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 17), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2SSMDispType.setStatus('current')
f3NetFlowPointCpdV2PortAuthenDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 18), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2PortAuthenDispType.setStatus('current')
f3NetFlowPointCpdV2LANBridgesDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 19), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2LANBridgesDispType.setStatus('current')
f3NetFlowPointCpdV2GMRPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 20), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2GMRPDispType.setStatus('current')
f3NetFlowPointCpdV2GVRPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 21), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2GVRPDispType.setStatus('current')
f3NetFlowPointCpdV2GARPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 22), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2GARPDispType.setStatus('current')
f3NetFlowPointCpdV2ActiveControlProtocols = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 23), CmActiveControlProtocolsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2ActiveControlProtocols.setStatus('current')
f3NetFlowPointCpdV2ELMIDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 24), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2ELMIDispType.setStatus('current')
f3NetFlowPointCpdV2Mac00DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 25), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac00DispType.setStatus('current')
f3NetFlowPointCpdV2Mac01DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 26), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac01DispType.setStatus('current')
f3NetFlowPointCpdV2Mac02DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 27), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac02DispType.setStatus('current')
f3NetFlowPointCpdV2Mac03DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 28), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac03DispType.setStatus('current')
f3NetFlowPointCpdV2Mac04DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 29), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac04DispType.setStatus('current')
f3NetFlowPointCpdV2Mac05DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 30), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac05DispType.setStatus('current')
f3NetFlowPointCpdV2Mac06DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 31), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac06DispType.setStatus('current')
f3NetFlowPointCpdV2Mac07DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 32), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac07DispType.setStatus('current')
f3NetFlowPointCpdV2Mac08DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 33), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac08DispType.setStatus('current')
f3NetFlowPointCpdV2Mac09DispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 34), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac09DispType.setStatus('current')
f3NetFlowPointCpdV2Mac0ADispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 35), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac0ADispType.setStatus('current')
f3NetFlowPointCpdV2Mac0BDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 36), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac0BDispType.setStatus('current')
f3NetFlowPointCpdV2Mac0CDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 37), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac0CDispType.setStatus('current')
f3NetFlowPointCpdV2Mac0DDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 38), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac0DDispType.setStatus('current')
f3NetFlowPointCpdV2Mac0EDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 39), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac0EDispType.setStatus('current')
f3NetFlowPointCpdV2Mac0FDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 40), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2Mac0FDispType.setStatus('current')
f3NetFlowPointCpdV2NearestLLDPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 41), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2NearestLLDPDispType.setStatus('current')
f3NetFlowPointCpdV2NonTpmrLLDPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 42), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2NonTpmrLLDPDispType.setStatus('current')
f3NetFlowPointCpdV2CustomerLLDPDispType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 10, 1, 43), CmControlProtocolDispType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointCpdV2CustomerLLDPDispType.setStatus('current')
f3NetFlowPointLearningConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 11), )
if mibBuilder.loadTexts: f3NetFlowPointLearningConfigTable.setStatus('current')
f3NetFlowPointLearningConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 11, 1), )
f3NetFlowPointEntry.registerAugmentions(("F3-FPM-MIB", "f3NetFlowPointLearningConfigEntry"))
f3NetFlowPointLearningConfigEntry.setIndexNames(*f3NetFlowPointEntry.getIndexNames())
if mibBuilder.loadTexts: f3NetFlowPointLearningConfigEntry.setStatus('current')
f3NetFlowPointLearningConfigLearningEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 11, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointLearningConfigLearningEnabled.setStatus('current')
f3NetFlowPointLearningConfigMaxFwdEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointLearningConfigMaxFwdEntries.setStatus('current')
f3NetFlowPointLearningConfigProtectLearningCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 11, 1, 3), ProtectLearningControl()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointLearningConfigProtectLearningCtrl.setStatus('current')
f3NetFlowPointLearningConfigAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 1, 11, 1, 4), FlowLearningConfigAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointLearningConfigAction.setStatus('current')
f3AccFlowPointStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1), )
if mibBuilder.loadTexts: f3AccFlowPointStatsTable.setStatus('current')
f3AccFlowPointStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointStatsIndex"))
if mibBuilder.loadTexts: f3AccFlowPointStatsEntry.setStatus('current')
f3AccFlowPointStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsIndex.setStatus('current')
f3AccFlowPointStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsIntervalType.setStatus('current')
f3AccFlowPointStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsValid.setStatus('current')
f3AccFlowPointStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointStatsAction.setStatus('current')
f3AccFlowPointStatsL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsL2CPFD.setStatus('current')
f3AccFlowPointStatsABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsABRRx.setStatus('current')
f3AccFlowPointStatsABRRLRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsABRRLRx.setStatus('current')
f3AccFlowPointStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsUAS.setStatus('current')
f3AccFlowPointStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsSES.setStatus('current')
f3AccFlowPointStatsFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsFMG.setStatus('current')
f3AccFlowPointStatsFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsFMY.setStatus('current')
f3AccFlowPointStatsFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsFMRD.setStatus('current')
f3AccFlowPointStatsFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsFTD.setStatus('current')
f3AccFlowPointStatsBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsBytesIn.setStatus('current')
f3AccFlowPointStatsBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsBytesOut.setStatus('current')
f3AccFlowPointStatsIBRMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsIBRMax.setStatus('current')
f3AccFlowPointStatsIBRRlMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsIBRRlMax.setStatus('current')
f3AccFlowPointStatsIBRMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsIBRMin.setStatus('current')
f3AccFlowPointStatsIBRRlMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsIBRRlMin.setStatus('current')
f3AccFlowPointStatsIBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsIBR.setStatus('current')
f3AccFlowPointStatsIBRRl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsIBRRl.setStatus('current')
f3AccFlowPointStatsFBCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsFBCD.setStatus('current')
f3AccFlowPointStatsFMCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsFMCD.setStatus('current')
f3AccFlowPointStatsFdRxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsFdRxFb.setStatus('current')
f3AccFlowPointStatsFdTxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsFdTxFb.setStatus('current')
f3AccFlowPointStatsFdicd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsFdicd.setStatus('current')
f3AccFlowPointStatsNumLearnTableFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 1, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointStatsNumLearnTableFlushes.setStatus('current')
f3NetFlowPointStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2), )
if mibBuilder.loadTexts: f3NetFlowPointStatsTable.setStatus('current')
f3NetFlowPointStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointStatsIndex"))
if mibBuilder.loadTexts: f3NetFlowPointStatsEntry.setStatus('current')
f3NetFlowPointStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsIndex.setStatus('current')
f3NetFlowPointStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsIntervalType.setStatus('current')
f3NetFlowPointStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsValid.setStatus('current')
f3NetFlowPointStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointStatsAction.setStatus('current')
f3NetFlowPointStatsL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsL2CPFD.setStatus('current')
f3NetFlowPointStatsABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsABRRx.setStatus('current')
f3NetFlowPointStatsABRRLRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsABRRLRx.setStatus('current')
f3NetFlowPointStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsUAS.setStatus('current')
f3NetFlowPointStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsSES.setStatus('current')
f3NetFlowPointStatsFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsFMG.setStatus('current')
f3NetFlowPointStatsFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsFMY.setStatus('current')
f3NetFlowPointStatsFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsFMRD.setStatus('current')
f3NetFlowPointStatsFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsFTD.setStatus('current')
f3NetFlowPointStatsBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsBytesIn.setStatus('current')
f3NetFlowPointStatsBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsBytesOut.setStatus('current')
f3NetFlowPointStatsIBRMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsIBRMax.setStatus('current')
f3NetFlowPointStatsIBRRlMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsIBRRlMax.setStatus('current')
f3NetFlowPointStatsIBRMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsIBRMin.setStatus('current')
f3NetFlowPointStatsIBRRlMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsIBRRlMin.setStatus('current')
f3NetFlowPointStatsIBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsIBR.setStatus('current')
f3NetFlowPointStatsIBRRl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsIBRRl.setStatus('current')
f3NetFlowPointStatsFBCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsFBCD.setStatus('current')
f3NetFlowPointStatsFMCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsFMCD.setStatus('current')
f3NetFlowPointStatsFdRxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsFdRxFb.setStatus('current')
f3NetFlowPointStatsFdTxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsFdTxFb.setStatus('current')
f3NetFlowPointStatsFdicd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsFdicd.setStatus('current')
f3NetFlowPointStatsNumLearnTableFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 2, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointStatsNumLearnTableFlushes.setStatus('current')
f3AccFlowPointHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3), )
if mibBuilder.loadTexts: f3AccFlowPointHistoryTable.setStatus('current')
f3AccFlowPointHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointStatsIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointHistoryIndex"))
if mibBuilder.loadTexts: f3AccFlowPointHistoryEntry.setStatus('current')
f3AccFlowPointHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryIndex.setStatus('current')
f3AccFlowPointHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryTime.setStatus('current')
f3AccFlowPointHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryValid.setStatus('current')
f3AccFlowPointHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointHistoryAction.setStatus('current')
f3AccFlowPointHistoryL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryL2CPFD.setStatus('current')
f3AccFlowPointHistoryABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryABRRx.setStatus('current')
f3AccFlowPointHistoryABRRLRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryABRRLRx.setStatus('current')
f3AccFlowPointHistoryUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryUAS.setStatus('current')
f3AccFlowPointHistorySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistorySES.setStatus('current')
f3AccFlowPointHistoryFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryFMG.setStatus('current')
f3AccFlowPointHistoryFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryFMY.setStatus('current')
f3AccFlowPointHistoryFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryFMRD.setStatus('current')
f3AccFlowPointHistoryFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryFTD.setStatus('current')
f3AccFlowPointHistoryBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryBytesIn.setStatus('current')
f3AccFlowPointHistoryBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryBytesOut.setStatus('current')
f3AccFlowPointHistoryIBRMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryIBRMax.setStatus('current')
f3AccFlowPointHistoryIBRRlMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryIBRRlMax.setStatus('current')
f3AccFlowPointHistoryIBRMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryIBRMin.setStatus('current')
f3AccFlowPointHistoryIBRRlMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryIBRRlMin.setStatus('current')
f3AccFlowPointHistoryIBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryIBR.setStatus('current')
f3AccFlowPointHistoryIBRRl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryIBRRl.setStatus('current')
f3AccFlowPointHistoryFBCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryFBCD.setStatus('current')
f3AccFlowPointHistoryFMCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryFMCD.setStatus('current')
f3AccFlowPointHistoryFdRxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryFdRxFb.setStatus('current')
f3AccFlowPointHistoryFdTxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryFdTxFb.setStatus('current')
f3AccFlowPointHistoryFdicd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryFdicd.setStatus('current')
f3AccFlowPointHistoryNumLearnTableFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 3, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointHistoryNumLearnTableFlushes.setStatus('current')
f3NetFlowPointHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4), )
if mibBuilder.loadTexts: f3NetFlowPointHistoryTable.setStatus('current')
f3NetFlowPointHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointStatsIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointHistoryIndex"))
if mibBuilder.loadTexts: f3NetFlowPointHistoryEntry.setStatus('current')
f3NetFlowPointHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryIndex.setStatus('current')
f3NetFlowPointHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryTime.setStatus('current')
f3NetFlowPointHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryValid.setStatus('current')
f3NetFlowPointHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointHistoryAction.setStatus('current')
f3NetFlowPointHistoryL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryL2CPFD.setStatus('current')
f3NetFlowPointHistoryABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryABRRx.setStatus('current')
f3NetFlowPointHistoryABRRLRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryABRRLRx.setStatus('current')
f3NetFlowPointHistoryUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryUAS.setStatus('current')
f3NetFlowPointHistorySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistorySES.setStatus('current')
f3NetFlowPointHistoryFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryFMG.setStatus('current')
f3NetFlowPointHistoryFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryFMY.setStatus('current')
f3NetFlowPointHistoryFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryFMRD.setStatus('current')
f3NetFlowPointHistoryFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryFTD.setStatus('current')
f3NetFlowPointHistoryBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryBytesIn.setStatus('current')
f3NetFlowPointHistoryBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryBytesOut.setStatus('current')
f3NetFlowPointHistoryIBRMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryIBRMax.setStatus('current')
f3NetFlowPointHistoryIBRRlMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryIBRRlMax.setStatus('current')
f3NetFlowPointHistoryIBRMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryIBRMin.setStatus('current')
f3NetFlowPointHistoryIBRRlMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryIBRRlMin.setStatus('current')
f3NetFlowPointHistoryIBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryIBR.setStatus('current')
f3NetFlowPointHistoryIBRRl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryIBRRl.setStatus('current')
f3NetFlowPointHistoryFBCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryFBCD.setStatus('current')
f3NetFlowPointHistoryFMCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryFMCD.setStatus('current')
f3NetFlowPointHistoryFdRxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryFdRxFb.setStatus('current')
f3NetFlowPointHistoryFdTxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryFdTxFb.setStatus('current')
f3NetFlowPointHistoryFdicd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryFdicd.setStatus('current')
f3NetFlowPointHistoryNumLearnTableFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 4, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointHistoryNumLearnTableFlushes.setStatus('current')
f3AccFlowPointThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 5), )
if mibBuilder.loadTexts: f3AccFlowPointThresholdTable.setStatus('current')
f3AccFlowPointThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 5, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointStatsIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointThresholdIndex"))
if mibBuilder.loadTexts: f3AccFlowPointThresholdEntry.setStatus('current')
f3AccFlowPointThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointThresholdIndex.setStatus('current')
f3AccFlowPointThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 5, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointThresholdInterval.setStatus('current')
f3AccFlowPointThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 5, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointThresholdVariable.setStatus('current')
f3AccFlowPointThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 5, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointThresholdValueLo.setStatus('current')
f3AccFlowPointThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 5, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFlowPointThresholdValueHi.setStatus('current')
f3AccFlowPointThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFlowPointThresholdMonValue.setStatus('current')
f3NetFlowPointThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 6), )
if mibBuilder.loadTexts: f3NetFlowPointThresholdTable.setStatus('current')
f3NetFlowPointThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 6, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointStatsIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointThresholdIndex"))
if mibBuilder.loadTexts: f3NetFlowPointThresholdEntry.setStatus('current')
f3NetFlowPointThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointThresholdIndex.setStatus('current')
f3NetFlowPointThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 6, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointThresholdInterval.setStatus('current')
f3NetFlowPointThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 6, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointThresholdVariable.setStatus('current')
f3NetFlowPointThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 6, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointThresholdValueLo.setStatus('current')
f3NetFlowPointThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 6, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFlowPointThresholdValueHi.setStatus('current')
f3NetFlowPointThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFlowPointThresholdMonValue.setStatus('current')
f3MPFlowStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 7), )
if mibBuilder.loadTexts: f3MPFlowStatsTable.setStatus('current')
f3MPFlowStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 7, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-FACILITY-MIB", "cmMPFlowIndex"), (0, "F3-FPM-MIB", "f3MPFlowStatsIndex"))
if mibBuilder.loadTexts: f3MPFlowStatsEntry.setStatus('current')
f3MPFlowStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowStatsIndex.setStatus('current')
f3MPFlowStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 7, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowStatsIntervalType.setStatus('current')
f3MPFlowStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 7, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowStatsValid.setStatus('current')
f3MPFlowStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 7, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3MPFlowStatsAction.setStatus('current')
f3MPFlowStatsFDStaticBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 7, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowStatsFDStaticBlock.setStatus('current')
f3MPFlowStatsFDHairPin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 7, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowStatsFDHairPin.setStatus('current')
f3MPFlowStatsMacTableDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 7, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowStatsMacTableDiscards.setStatus('current')
f3MPFlowStatsFDProtLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 7, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowStatsFDProtLearn.setStatus('current')
f3MPFlowHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 8), )
if mibBuilder.loadTexts: f3MPFlowHistoryTable.setStatus('current')
f3MPFlowHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 8, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-FACILITY-MIB", "cmMPFlowIndex"), (0, "F3-FPM-MIB", "f3MPFlowStatsIndex"), (0, "F3-FPM-MIB", "f3MPFlowHistoryIndex"))
if mibBuilder.loadTexts: f3MPFlowHistoryEntry.setStatus('current')
f3MPFlowHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowHistoryIndex.setStatus('current')
f3MPFlowHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 8, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowHistoryTime.setStatus('current')
f3MPFlowHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 8, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowHistoryValid.setStatus('current')
f3MPFlowHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 8, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3MPFlowHistoryAction.setStatus('current')
f3MPFlowHistoryFDStaticBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 8, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowHistoryFDStaticBlock.setStatus('current')
f3MPFlowHistoryFDHairPin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 8, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowHistoryFDHairPin.setStatus('current')
f3MPFlowHistoryMacTableDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 8, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowHistoryMacTableDiscards.setStatus('current')
f3MPFlowHistoryFDProtLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 8, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowHistoryFDProtLearn.setStatus('current')
f3MPFlowThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 9), )
if mibBuilder.loadTexts: f3MPFlowThresholdTable.setStatus('current')
f3MPFlowThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 9, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-FACILITY-MIB", "cmMPFlowIndex"), (0, "F3-FPM-MIB", "f3MPFlowStatsIndex"), (0, "F3-FPM-MIB", "f3MPFlowThresholdIndex"))
if mibBuilder.loadTexts: f3MPFlowThresholdEntry.setStatus('current')
f3MPFlowThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowThresholdIndex.setStatus('current')
f3MPFlowThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 9, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowThresholdInterval.setStatus('current')
f3MPFlowThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 9, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowThresholdVariable.setStatus('current')
f3MPFlowThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 9, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3MPFlowThresholdValueLo.setStatus('current')
f3MPFlowThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 9, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3MPFlowThresholdValueHi.setStatus('current')
f3MPFlowThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 9, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3MPFlowThresholdMonValue.setStatus('current')
f3AccFpQosShaperStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10), )
if mibBuilder.loadTexts: f3AccFpQosShaperStatsTable.setStatus('current')
f3AccFpQosShaperStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFpQosShaperIndex"), (0, "F3-FPM-MIB", "f3AccFpQosShaperStatsIndex"))
if mibBuilder.loadTexts: f3AccFpQosShaperStatsEntry.setStatus('current')
f3AccFpQosShaperStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperStatsIndex.setStatus('current')
f3AccFpQosShaperStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperStatsIntervalType.setStatus('current')
f3AccFpQosShaperStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperStatsValid.setStatus('current')
f3AccFpQosShaperStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFpQosShaperStatsAction.setStatus('current')
f3AccFpQosShaperStatsBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperStatsBT.setStatus('current')
f3AccFpQosShaperStatsBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperStatsBTD.setStatus('current')
f3AccFpQosShaperStatsFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperStatsFD.setStatus('current')
f3AccFpQosShaperStatsFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperStatsFTD.setStatus('current')
f3AccFpQosShaperStatsABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperStatsABRRL.setStatus('current')
f3AccFpQosShaperStatsBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperStatsBREDD.setStatus('current')
f3AccFpQosShaperStatsFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 10, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperStatsFREDD.setStatus('current')
f3AccFpQosShaperHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11), )
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryTable.setStatus('current')
f3AccFpQosShaperHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFpQosShaperIndex"), (0, "F3-FPM-MIB", "f3AccFpQosShaperStatsIndex"), (0, "F3-FPM-MIB", "f3AccFpQosShaperHistoryIndex"))
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryEntry.setStatus('current')
f3AccFpQosShaperHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryIndex.setStatus('current')
f3AccFpQosShaperHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryTime.setStatus('current')
f3AccFpQosShaperHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryValid.setStatus('current')
f3AccFpQosShaperHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryAction.setStatus('current')
f3AccFpQosShaperHistoryBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryBT.setStatus('current')
f3AccFpQosShaperHistoryBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryBTD.setStatus('current')
f3AccFpQosShaperHistoryFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryFD.setStatus('current')
f3AccFpQosShaperHistoryFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryFTD.setStatus('current')
f3AccFpQosShaperHistoryABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryABRRL.setStatus('current')
f3AccFpQosShaperHistoryBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryBREDD.setStatus('current')
f3AccFpQosShaperHistoryFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 11, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperHistoryFREDD.setStatus('current')
f3AccFpQosShaperThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 12), )
if mibBuilder.loadTexts: f3AccFpQosShaperThresholdTable.setStatus('current')
f3AccFpQosShaperThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 12, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFpQosShaperIndex"), (0, "F3-FPM-MIB", "f3AccFpQosShaperStatsIndex"), (0, "F3-FPM-MIB", "f3AccFpQosShaperThresholdIndex"))
if mibBuilder.loadTexts: f3AccFpQosShaperThresholdEntry.setStatus('current')
f3AccFpQosShaperThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperThresholdIndex.setStatus('current')
f3AccFpQosShaperThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 12, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperThresholdInterval.setStatus('current')
f3AccFpQosShaperThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 12, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperThresholdVariable.setStatus('current')
f3AccFpQosShaperThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 12, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFpQosShaperThresholdValueLo.setStatus('current')
f3AccFpQosShaperThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 12, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFpQosShaperThresholdValueHi.setStatus('current')
f3AccFpQosShaperThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 12, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosShaperThresholdMonValue.setStatus('current')
f3NetFpQosShaperStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13), )
if mibBuilder.loadTexts: f3NetFpQosShaperStatsTable.setStatus('current')
f3NetFpQosShaperStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFpQosShaperIndex"), (0, "F3-FPM-MIB", "f3NetFpQosShaperStatsIndex"))
if mibBuilder.loadTexts: f3NetFpQosShaperStatsEntry.setStatus('current')
f3NetFpQosShaperStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperStatsIndex.setStatus('current')
f3NetFpQosShaperStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperStatsIntervalType.setStatus('current')
f3NetFpQosShaperStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperStatsValid.setStatus('current')
f3NetFpQosShaperStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFpQosShaperStatsAction.setStatus('current')
f3NetFpQosShaperStatsBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperStatsBT.setStatus('current')
f3NetFpQosShaperStatsBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperStatsBTD.setStatus('current')
f3NetFpQosShaperStatsFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperStatsFD.setStatus('current')
f3NetFpQosShaperStatsFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperStatsFTD.setStatus('current')
f3NetFpQosShaperStatsABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperStatsABRRL.setStatus('current')
f3NetFpQosShaperStatsBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperStatsBREDD.setStatus('current')
f3NetFpQosShaperStatsFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 13, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperStatsFREDD.setStatus('current')
f3NetFpQosShaperHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14), )
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryTable.setStatus('current')
f3NetFpQosShaperHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFpQosShaperIndex"), (0, "F3-FPM-MIB", "f3NetFpQosShaperStatsIndex"), (0, "F3-FPM-MIB", "f3NetFpQosShaperHistoryIndex"))
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryEntry.setStatus('current')
f3NetFpQosShaperHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryIndex.setStatus('current')
f3NetFpQosShaperHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryTime.setStatus('current')
f3NetFpQosShaperHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryValid.setStatus('current')
f3NetFpQosShaperHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryAction.setStatus('current')
f3NetFpQosShaperHistoryBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryBT.setStatus('current')
f3NetFpQosShaperHistoryBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryBTD.setStatus('current')
f3NetFpQosShaperHistoryFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryFD.setStatus('current')
f3NetFpQosShaperHistoryFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryFTD.setStatus('current')
f3NetFpQosShaperHistoryABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryABRRL.setStatus('current')
f3NetFpQosShaperHistoryBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryBREDD.setStatus('current')
f3NetFpQosShaperHistoryFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 14, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperHistoryFREDD.setStatus('current')
f3NetFpQosShaperThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 15), )
if mibBuilder.loadTexts: f3NetFpQosShaperThresholdTable.setStatus('current')
f3NetFpQosShaperThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 15, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFpQosShaperIndex"), (0, "F3-FPM-MIB", "f3NetFpQosShaperStatsIndex"), (0, "F3-FPM-MIB", "f3NetFpQosShaperThresholdIndex"))
if mibBuilder.loadTexts: f3NetFpQosShaperThresholdEntry.setStatus('current')
f3NetFpQosShaperThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperThresholdIndex.setStatus('current')
f3NetFpQosShaperThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 15, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperThresholdInterval.setStatus('current')
f3NetFpQosShaperThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 15, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperThresholdVariable.setStatus('current')
f3NetFpQosShaperThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 15, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFpQosShaperThresholdValueLo.setStatus('current')
f3NetFpQosShaperThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 15, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFpQosShaperThresholdValueHi.setStatus('current')
f3NetFpQosShaperThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 15, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosShaperThresholdMonValue.setStatus('current')
f3AccFpQosPolicerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16), )
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsTable.setStatus('current')
f3AccFpQosPolicerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFpQosPolicerIndex"), (0, "F3-FPM-MIB", "f3AccFpQosPolicerStatsIndex"))
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsEntry.setStatus('current')
f3AccFpQosPolicerStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsIndex.setStatus('current')
f3AccFpQosPolicerStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsIntervalType.setStatus('current')
f3AccFpQosPolicerStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsValid.setStatus('current')
f3AccFpQosPolicerStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsAction.setStatus('current')
f3AccFpQosPolicerStatsFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsFMG.setStatus('current')
f3AccFpQosPolicerStatsFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsFMY.setStatus('current')
f3AccFpQosPolicerStatsFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsFMRD.setStatus('current')
f3AccFpQosPolicerStatsBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsBytesIn.setStatus('current')
f3AccFpQosPolicerStatsBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsBytesOut.setStatus('current')
f3AccFpQosPolicerStatsABR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 16, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerStatsABR.setStatus('current')
f3AccFpQosPolicerHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17), )
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryTable.setStatus('current')
f3AccFpQosPolicerHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFpQosPolicerIndex"), (0, "F3-FPM-MIB", "f3AccFpQosPolicerStatsIndex"), (0, "F3-FPM-MIB", "f3AccFpQosPolicerHistoryIndex"))
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryEntry.setStatus('current')
f3AccFpQosPolicerHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryIndex.setStatus('current')
f3AccFpQosPolicerHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryTime.setStatus('current')
f3AccFpQosPolicerHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryValid.setStatus('current')
f3AccFpQosPolicerHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryAction.setStatus('current')
f3AccFpQosPolicerHistoryFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryFMG.setStatus('current')
f3AccFpQosPolicerHistoryFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryFMY.setStatus('current')
f3AccFpQosPolicerHistoryFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryFMRD.setStatus('current')
f3AccFpQosPolicerHistoryBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryBytesIn.setStatus('current')
f3AccFpQosPolicerHistoryBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryBytesOut.setStatus('current')
f3AccFpQosPolicerHistoryABR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 17, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerHistoryABR.setStatus('current')
f3AccFpQosPolicerThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 18), )
if mibBuilder.loadTexts: f3AccFpQosPolicerThresholdTable.setStatus('current')
f3AccFpQosPolicerThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 18, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "F3-FPM-MIB", "f3AccFlowPointIndex"), (0, "F3-FPM-MIB", "f3AccFpQosPolicerIndex"), (0, "F3-FPM-MIB", "f3AccFpQosPolicerStatsIndex"), (0, "F3-FPM-MIB", "f3AccFpQosPolicerThresholdIndex"))
if mibBuilder.loadTexts: f3AccFpQosPolicerThresholdEntry.setStatus('current')
f3AccFpQosPolicerThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerThresholdIndex.setStatus('current')
f3AccFpQosPolicerThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 18, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerThresholdInterval.setStatus('current')
f3AccFpQosPolicerThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 18, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerThresholdVariable.setStatus('current')
f3AccFpQosPolicerThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 18, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFpQosPolicerThresholdValueLo.setStatus('current')
f3AccFpQosPolicerThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 18, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AccFpQosPolicerThresholdValueHi.setStatus('current')
f3AccFpQosPolicerThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 18, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AccFpQosPolicerThresholdMonValue.setStatus('current')
f3NetFpQosPolicerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19), )
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsTable.setStatus('current')
f3NetFpQosPolicerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFpQosPolicerIndex"), (0, "F3-FPM-MIB", "f3NetFpQosPolicerStatsIndex"))
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsEntry.setStatus('current')
f3NetFpQosPolicerStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsIndex.setStatus('current')
f3NetFpQosPolicerStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsIntervalType.setStatus('current')
f3NetFpQosPolicerStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsValid.setStatus('current')
f3NetFpQosPolicerStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsAction.setStatus('current')
f3NetFpQosPolicerStatsFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsFMG.setStatus('current')
f3NetFpQosPolicerStatsFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsFMY.setStatus('current')
f3NetFpQosPolicerStatsFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsFMRD.setStatus('current')
f3NetFpQosPolicerStatsBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsBytesIn.setStatus('current')
f3NetFpQosPolicerStatsBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsBytesOut.setStatus('current')
f3NetFpQosPolicerStatsABR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 19, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerStatsABR.setStatus('current')
f3NetFpQosPolicerHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20), )
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryTable.setStatus('current')
f3NetFpQosPolicerHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFpQosPolicerIndex"), (0, "F3-FPM-MIB", "f3NetFpQosPolicerStatsIndex"), (0, "F3-FPM-MIB", "f3NetFpQosPolicerHistoryIndex"))
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryEntry.setStatus('current')
f3NetFpQosPolicerHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryIndex.setStatus('current')
f3NetFpQosPolicerHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryTime.setStatus('current')
f3NetFpQosPolicerHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryValid.setStatus('current')
f3NetFpQosPolicerHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryAction.setStatus('current')
f3NetFpQosPolicerHistoryFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryFMG.setStatus('current')
f3NetFpQosPolicerHistoryFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryFMY.setStatus('current')
f3NetFpQosPolicerHistoryFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryFMRD.setStatus('current')
f3NetFpQosPolicerHistoryBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryBytesIn.setStatus('current')
f3NetFpQosPolicerHistoryBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryBytesOut.setStatus('current')
f3NetFpQosPolicerHistoryABR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 20, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerHistoryABR.setStatus('current')
f3NetFpQosPolicerThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 21), )
if mibBuilder.loadTexts: f3NetFpQosPolicerThresholdTable.setStatus('current')
f3NetFpQosPolicerThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 21, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "F3-FPM-MIB", "f3NetFlowPointIndex"), (0, "F3-FPM-MIB", "f3NetFpQosPolicerIndex"), (0, "F3-FPM-MIB", "f3NetFpQosPolicerStatsIndex"), (0, "F3-FPM-MIB", "f3NetFpQosPolicerThresholdIndex"))
if mibBuilder.loadTexts: f3NetFpQosPolicerThresholdEntry.setStatus('current')
f3NetFpQosPolicerThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerThresholdIndex.setStatus('current')
f3NetFpQosPolicerThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 21, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerThresholdInterval.setStatus('current')
f3NetFpQosPolicerThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 21, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerThresholdVariable.setStatus('current')
f3NetFpQosPolicerThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 21, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFpQosPolicerThresholdValueLo.setStatus('current')
f3NetFpQosPolicerThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 21, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetFpQosPolicerThresholdValueHi.setStatus('current')
f3NetFpQosPolicerThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 2, 21, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetFpQosPolicerThresholdMonValue.setStatus('current')
f3AccFlowPointThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 3, 1)).setObjects(("F3-FPM-MIB", "f3AccFlowPointThresholdIndex"), ("F3-FPM-MIB", "f3AccFlowPointThresholdInterval"), ("F3-FPM-MIB", "f3AccFlowPointThresholdVariable"), ("F3-FPM-MIB", "f3AccFlowPointThresholdValueLo"), ("F3-FPM-MIB", "f3AccFlowPointThresholdValueHi"), ("F3-FPM-MIB", "f3AccFlowPointThresholdMonValue"))
if mibBuilder.loadTexts: f3AccFlowPointThresholdCrossingAlert.setStatus('current')
f3NetFlowPointThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 3, 2)).setObjects(("F3-FPM-MIB", "f3NetFlowPointThresholdIndex"), ("F3-FPM-MIB", "f3NetFlowPointThresholdInterval"), ("F3-FPM-MIB", "f3NetFlowPointThresholdVariable"), ("F3-FPM-MIB", "f3NetFlowPointThresholdValueLo"), ("F3-FPM-MIB", "f3NetFlowPointThresholdValueHi"), ("F3-FPM-MIB", "f3NetFlowPointThresholdMonValue"))
if mibBuilder.loadTexts: f3NetFlowPointThresholdCrossingAlert.setStatus('current')
f3MPFlowThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 3, 3)).setObjects(("F3-FPM-MIB", "f3MPFlowThresholdIndex"), ("F3-FPM-MIB", "f3MPFlowThresholdInterval"), ("F3-FPM-MIB", "f3MPFlowThresholdVariable"), ("F3-FPM-MIB", "f3MPFlowThresholdValueLo"), ("F3-FPM-MIB", "f3MPFlowThresholdValueHi"), ("F3-FPM-MIB", "f3MPFlowThresholdMonValue"))
if mibBuilder.loadTexts: f3MPFlowThresholdCrossingAlert.setStatus('current')
f3AccFpQosShaperThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 3, 4)).setObjects(("F3-FPM-MIB", "f3AccFpQosShaperThresholdIndex"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdInterval"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdVariable"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdValueLo"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdValueHi"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdMonValue"))
if mibBuilder.loadTexts: f3AccFpQosShaperThresholdCrossingAlert.setStatus('current')
f3NetFpQosShaperThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 3, 5)).setObjects(("F3-FPM-MIB", "f3NetFpQosShaperThresholdIndex"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdInterval"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdVariable"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdValueLo"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdValueHi"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdMonValue"))
if mibBuilder.loadTexts: f3NetFpQosShaperThresholdCrossingAlert.setStatus('current')
f3AccFpQosPolicerThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 3, 6)).setObjects(("F3-FPM-MIB", "f3AccFpQosPolicerThresholdIndex"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdInterval"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdVariable"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdValueLo"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdValueHi"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdMonValue"))
if mibBuilder.loadTexts: f3AccFpQosPolicerThresholdCrossingAlert.setStatus('current')
f3NetFpQosPolicerThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 3, 7)).setObjects(("F3-FPM-MIB", "f3NetFpQosPolicerThresholdIndex"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdInterval"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdVariable"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdValueLo"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdValueHi"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdMonValue"))
if mibBuilder.loadTexts: f3NetFpQosPolicerThresholdCrossingAlert.setStatus('current')
f3FpmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 1))
f3FpmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2))
f3FpmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 1, 1)).setObjects(("F3-FPM-MIB", "f3AccFlowPointGroup"), ("F3-FPM-MIB", "f3AccFpQosShaperGroup"), ("F3-FPM-MIB", "f3AccFpQosPolicerGroup"), ("F3-FPM-MIB", "f3MPFlowExtGroup"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Group"), ("F3-FPM-MIB", "f3AccFlowPointLearningConfigGroup"), ("F3-FPM-MIB", "f3NetFlowPointGroup"), ("F3-FPM-MIB", "f3NetFpQosShaperGroup"), ("F3-FPM-MIB", "f3NetFpQosPolicerGroup"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Group"), ("F3-FPM-MIB", "f3NetFlowPointLearningConfigGroup"), ("F3-FPM-MIB", "f3AccFlowPointPerfGroup"), ("F3-FPM-MIB", "f3NetFlowPointPerfGroup"), ("F3-FPM-MIB", "f3MPFlowPerfGroup"), ("F3-FPM-MIB", "f3AccFpQosShaperPerfGroup"), ("F3-FPM-MIB", "f3NetFpQosShaperPerfGroup"), ("F3-FPM-MIB", "f3AccFpQosPolicerPerfGroup"), ("F3-FPM-MIB", "f3NetFpQosPolicerPerfGroup"), ("F3-FPM-MIB", "f3FpmPerfNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3FpmCompliance = f3FpmCompliance.setStatus('current')
f3AccFlowPointGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 1)).setObjects(("F3-FPM-MIB", "f3AccFlowPointAlias"), ("F3-FPM-MIB", "f3AccFlowPointAdminState"), ("F3-FPM-MIB", "f3AccFlowPointOperationalState"), ("F3-FPM-MIB", "f3AccFlowPointSecondaryState"), ("F3-FPM-MIB", "f3AccFlowPointAssociatedFlowId"), ("F3-FPM-MIB", "f3AccFlowPointIngressMultiCOSEnabled"), ("F3-FPM-MIB", "f3AccFlowPointIngressCOS"), ("F3-FPM-MIB", "f3AccFlowPointEgressShapingType"), ("F3-FPM-MIB", "f3AccFlowPointIngressVlanMemberList"), ("F3-FPM-MIB", "f3AccFlowPointVlanMemberAction"), ("F3-FPM-MIB", "f3AccFlowPointVlanMemberActionVlan"), ("F3-FPM-MIB", "f3AccFlowPointIngressUntaggedFrameEnabled"), ("F3-FPM-MIB", "f3AccFlowPointCTagControl"), ("F3-FPM-MIB", "f3AccFlowPointCTagVlanId"), ("F3-FPM-MIB", "f3AccFlowPointCTagVlanPriority"), ("F3-FPM-MIB", "f3AccFlowPointSTagControl"), ("F3-FPM-MIB", "f3AccFlowPointSTagVlanId"), ("F3-FPM-MIB", "f3AccFlowPointSTagVlanPriority"), ("F3-FPM-MIB", "f3AccFlowPointEgressOuterTagPrioMapEnabled"), ("F3-FPM-MIB", "f3AccFlowPointEgressInnerTagPrioMapEnabled"), ("F3-FPM-MIB", "f3AccFlowPointSESFramesLossThresholdRatio"), ("F3-FPM-MIB", "f3AccFlowPointDefaultMemberEnabled"), ("F3-FPM-MIB", "f3AccFlowPointMcastRateLimitEnabled"), ("F3-FPM-MIB", "f3AccFlowPointMcastRateLimitSpeedLo"), ("F3-FPM-MIB", "f3AccFlowPointMcastRateLimitSpeedHi"), ("F3-FPM-MIB", "f3AccFlowPointBcastRateLimitEnabled"), ("F3-FPM-MIB", "f3AccFlowPointBcastRateLimitSpeedLo"), ("F3-FPM-MIB", "f3AccFlowPointBcastRateLimitSpeedHi"), ("F3-FPM-MIB", "f3AccFlowPointCombinedRateLimitEnabled"), ("F3-FPM-MIB", "f3AccFlowPointCombinedRateLimitSpeedLo"), ("F3-FPM-MIB", "f3AccFlowPointCombinedRateLimitSpeedHi"), ("F3-FPM-MIB", "f3AccFlowPointSplitHorizonGroupOID"), ("F3-FPM-MIB", "f3AccFlowPointLoopAvoidance"), ("F3-FPM-MIB", "f3AccFlowPointHierarchicalCOSEnabled"), ("F3-FPM-MIB", "f3AccFlowPointMaximumBWLo"), ("F3-FPM-MIB", "f3AccFlowPointMaximumBWHi"), ("F3-FPM-MIB", "f3AccFlowPointGuaranteedBWLo"), ("F3-FPM-MIB", "f3AccFlowPointGuaranteedBWHi"), ("F3-FPM-MIB", "f3AccFlowPointAutoBandwidthConfigEnabled"), ("F3-FPM-MIB", "f3AccFlowPointAutoCIRPercentage"), ("F3-FPM-MIB", "f3AccFlowPointFrameFwdEnabled"), ("F3-FPM-MIB", "f3AccFlowPointStorageType"), ("F3-FPM-MIB", "f3AccFlowPointRowStatus"), ("F3-FPM-MIB", "f3AccFlowPointUsePortPrioMapProfile"), ("F3-FPM-MIB", "f3AccFlowPointRefPrioMapProfile"), ("F3-FPM-MIB", "f3AccFlowpointRefConnectGuardFlowObject"), ("F3-FPM-MIB", "f3AccFlowpointSecureBlockingControl"), ("F3-FPM-MIB", "f3AccFlowpointSecureState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3AccFlowPointGroup = f3AccFlowPointGroup.setStatus('current')
f3AccFpQosShaperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 2)).setObjects(("F3-FPM-MIB", "f3AccFpQosShaperIndex"), ("F3-FPM-MIB", "f3AccFpQosShaperAdminState"), ("F3-FPM-MIB", "f3AccFpQosShaperOperationalState"), ("F3-FPM-MIB", "f3AccFpQosShaperSecondaryState"), ("F3-FPM-MIB", "f3AccFpQosShaperCIRLo"), ("F3-FPM-MIB", "f3AccFpQosShaperCIRHi"), ("F3-FPM-MIB", "f3AccFpQosShaperCBS"), ("F3-FPM-MIB", "f3AccFpQosShaperEIRLo"), ("F3-FPM-MIB", "f3AccFpQosShaperEIRHi"), ("F3-FPM-MIB", "f3AccFpQosShaperEBS"), ("F3-FPM-MIB", "f3AccFpQosShaperBufferSize"), ("F3-FPM-MIB", "f3AccFpQosShaperCOS"), ("F3-FPM-MIB", "f3AccFpQosShaperStorageType"), ("F3-FPM-MIB", "f3AccFpQosShaperRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3AccFpQosShaperGroup = f3AccFpQosShaperGroup.setStatus('current')
f3AccFpQosPolicerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 3)).setObjects(("F3-FPM-MIB", "f3AccFpQosPolicerAdminState"), ("F3-FPM-MIB", "f3AccFpQosPolicerOperationalState"), ("F3-FPM-MIB", "f3AccFpQosPolicerSecondaryState"), ("F3-FPM-MIB", "f3AccFpQosPolicerCIRLo"), ("F3-FPM-MIB", "f3AccFpQosPolicerCIRHi"), ("F3-FPM-MIB", "f3AccFpQosPolicerEIRLo"), ("F3-FPM-MIB", "f3AccFpQosPolicerEIRHi"), ("F3-FPM-MIB", "f3AccFpQosPolicerCBS"), ("F3-FPM-MIB", "f3AccFpQosPolicerEBS"), ("F3-FPM-MIB", "f3AccFpQosPolicerAlgorithm"), ("F3-FPM-MIB", "f3AccFpQosPolicerColorMode"), ("F3-FPM-MIB", "f3AccFpQosPolicerCouplingFlag"), ("F3-FPM-MIB", "f3AccFpQosPolicerStorageType"), ("F3-FPM-MIB", "f3AccFpQosPolicerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3AccFpQosPolicerGroup = f3AccFpQosPolicerGroup.setStatus('current')
f3MPFlowExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 4)).setObjects(("F3-FPM-MIB", "f3MPFlowExtMaxFwdEntries"), ("F3-FPM-MIB", "f3MPFlowRefConnectGuardFlowObject"), ("F3-FPM-MIB", "f3MPFlowSecureState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3MPFlowExtGroup = f3MPFlowExtGroup.setStatus('current')
f3AccFlowPointCpdV2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 5)).setObjects(("F3-FPM-MIB", "f3AccFlowPointCpdV2IslDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2PagpDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2UdldDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2CdpDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2VtpDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2DtpDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2PvstpPlusDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2UplinkFastDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2VlanBridgeDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2L2PTDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2BPDUDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2PauseDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2LACPDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2LACPMarkerDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2EfmOamDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2SSMDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2PortAuthenDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2LANBridgesDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2GMRPDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2GVRPDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2GARPDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2ActiveControlProtocols"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2ELMIDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac00DispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac01DispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac02DispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac03DispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac04DispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac05DispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac06DispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac07DispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac08DispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac09DispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac0ADispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac0BDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac0CDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac0DDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac0EDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2Mac0FDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2NearestLLDPDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2NonTpmrLLDPDispType"), ("F3-FPM-MIB", "f3AccFlowPointCpdV2CustomerLLDPDispType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3AccFlowPointCpdV2Group = f3AccFlowPointCpdV2Group.setStatus('current')
f3AccFlowPointLearningConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 6)).setObjects(("F3-FPM-MIB", "f3AccFlowPointLearningConfigLearningEnabled"), ("F3-FPM-MIB", "f3AccFlowPointLearningConfigMaxFwdEntries"), ("F3-FPM-MIB", "f3AccFlowPointLearningConfigProtectLearningCtrl"), ("F3-FPM-MIB", "f3AccFlowPointLearningConfigAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3AccFlowPointLearningConfigGroup = f3AccFlowPointLearningConfigGroup.setStatus('current')
f3NetFlowPointGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 7)).setObjects(("F3-FPM-MIB", "f3NetFlowPointAlias"), ("F3-FPM-MIB", "f3NetFlowPointAdminState"), ("F3-FPM-MIB", "f3NetFlowPointOperationalState"), ("F3-FPM-MIB", "f3NetFlowPointSecondaryState"), ("F3-FPM-MIB", "f3NetFlowPointAssociatedFlowId"), ("F3-FPM-MIB", "f3NetFlowPointIngressMultiCOSEnabled"), ("F3-FPM-MIB", "f3NetFlowPointIngressCOS"), ("F3-FPM-MIB", "f3NetFlowPointEgressShapingType"), ("F3-FPM-MIB", "f3NetFlowPointIngressVlanMemberList"), ("F3-FPM-MIB", "f3NetFlowPointVlanMemberAction"), ("F3-FPM-MIB", "f3NetFlowPointVlanMemberActionVlan"), ("F3-FPM-MIB", "f3NetFlowPointIngressUntaggedFrameEnabled"), ("F3-FPM-MIB", "f3NetFlowPointCTagControl"), ("F3-FPM-MIB", "f3NetFlowPointCTagVlanId"), ("F3-FPM-MIB", "f3NetFlowPointCTagVlanPriority"), ("F3-FPM-MIB", "f3NetFlowPointSTagControl"), ("F3-FPM-MIB", "f3NetFlowPointSTagVlanId"), ("F3-FPM-MIB", "f3NetFlowPointSTagVlanPriority"), ("F3-FPM-MIB", "f3NetFlowPointEgressOuterTagPrioMapEnabled"), ("F3-FPM-MIB", "f3NetFlowPointEgressInnerTagPrioMapEnabled"), ("F3-FPM-MIB", "f3NetFlowPointSESFramesLossThresholdRatio"), ("F3-FPM-MIB", "f3NetFlowPointDefaultMemberEnabled"), ("F3-FPM-MIB", "f3NetFlowPointMcastRateLimitEnabled"), ("F3-FPM-MIB", "f3NetFlowPointMcastRateLimitSpeedLo"), ("F3-FPM-MIB", "f3NetFlowPointMcastRateLimitSpeedHi"), ("F3-FPM-MIB", "f3NetFlowPointBcastRateLimitEnabled"), ("F3-FPM-MIB", "f3NetFlowPointBcastRateLimitSpeedLo"), ("F3-FPM-MIB", "f3NetFlowPointBcastRateLimitSpeedHi"), ("F3-FPM-MIB", "f3NetFlowPointCombinedRateLimitEnabled"), ("F3-FPM-MIB", "f3NetFlowPointCombinedRateLimitSpeedLo"), ("F3-FPM-MIB", "f3NetFlowPointCombinedRateLimitSpeedHi"), ("F3-FPM-MIB", "f3NetFlowPointSplitHorizonGroupOID"), ("F3-FPM-MIB", "f3NetFlowPointLoopAvoidance"), ("F3-FPM-MIB", "f3NetFlowPointHierarchicalCOSEnabled"), ("F3-FPM-MIB", "f3NetFlowPointMaximumBWLo"), ("F3-FPM-MIB", "f3NetFlowPointMaximumBWHi"), ("F3-FPM-MIB", "f3NetFlowPointGuaranteedBWLo"), ("F3-FPM-MIB", "f3NetFlowPointGuaranteedBWHi"), ("F3-FPM-MIB", "f3NetFlowPointAutoBandwidthConfigEnabled"), ("F3-FPM-MIB", "f3NetFlowPointAutoCIRPercentage"), ("F3-FPM-MIB", "f3NetFlowPointFrameFwdEnabled"), ("F3-FPM-MIB", "f3NetFlowPointStorageType"), ("F3-FPM-MIB", "f3NetFlowPointRowStatus"), ("F3-FPM-MIB", "f3NetFlowPointUsePortPrioMapProfile"), ("F3-FPM-MIB", "f3NetFlowPointRefPrioMapProfile"), ("F3-FPM-MIB", "f3NetFlowpointRefConnectGuardFlowObject"), ("F3-FPM-MIB", "f3NetFlowpointSecureBlockingControl"), ("F3-FPM-MIB", "f3NetFlowpointSecureState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3NetFlowPointGroup = f3NetFlowPointGroup.setStatus('current')
f3NetFpQosShaperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 8)).setObjects(("F3-FPM-MIB", "f3NetFpQosShaperIndex"), ("F3-FPM-MIB", "f3NetFpQosShaperAdminState"), ("F3-FPM-MIB", "f3NetFpQosShaperOperationalState"), ("F3-FPM-MIB", "f3NetFpQosShaperSecondaryState"), ("F3-FPM-MIB", "f3NetFpQosShaperCIRLo"), ("F3-FPM-MIB", "f3NetFpQosShaperCIRHi"), ("F3-FPM-MIB", "f3NetFpQosShaperCBS"), ("F3-FPM-MIB", "f3NetFpQosShaperEIRLo"), ("F3-FPM-MIB", "f3NetFpQosShaperEIRHi"), ("F3-FPM-MIB", "f3NetFpQosShaperEBS"), ("F3-FPM-MIB", "f3NetFpQosShaperBufferSize"), ("F3-FPM-MIB", "f3NetFpQosShaperCOS"), ("F3-FPM-MIB", "f3NetFpQosShaperStorageType"), ("F3-FPM-MIB", "f3NetFpQosShaperRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3NetFpQosShaperGroup = f3NetFpQosShaperGroup.setStatus('current')
f3NetFpQosPolicerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 9)).setObjects(("F3-FPM-MIB", "f3NetFpQosPolicerAdminState"), ("F3-FPM-MIB", "f3NetFpQosPolicerOperationalState"), ("F3-FPM-MIB", "f3NetFpQosPolicerSecondaryState"), ("F3-FPM-MIB", "f3NetFpQosPolicerCIRLo"), ("F3-FPM-MIB", "f3NetFpQosPolicerCIRHi"), ("F3-FPM-MIB", "f3NetFpQosPolicerEIRLo"), ("F3-FPM-MIB", "f3NetFpQosPolicerEIRHi"), ("F3-FPM-MIB", "f3NetFpQosPolicerCBS"), ("F3-FPM-MIB", "f3NetFpQosPolicerEBS"), ("F3-FPM-MIB", "f3NetFpQosPolicerAlgorithm"), ("F3-FPM-MIB", "f3NetFpQosPolicerColorMode"), ("F3-FPM-MIB", "f3NetFpQosPolicerCouplingFlag"), ("F3-FPM-MIB", "f3NetFpQosPolicerStorageType"), ("F3-FPM-MIB", "f3NetFpQosPolicerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3NetFpQosPolicerGroup = f3NetFpQosPolicerGroup.setStatus('current')
f3NetFlowPointCpdV2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 10)).setObjects(("F3-FPM-MIB", "f3NetFlowPointCpdV2IslDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2PagpDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2UdldDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2CdpDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2VtpDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2DtpDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2PvstpPlusDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2UplinkFastDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2VlanBridgeDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2L2PTDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2BPDUDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2PauseDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2LACPDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2LACPMarkerDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2EfmOamDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2SSMDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2PortAuthenDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2LANBridgesDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2GMRPDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2GVRPDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2GARPDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2ActiveControlProtocols"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2ELMIDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac00DispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac01DispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac02DispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac03DispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac04DispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac05DispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac06DispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac07DispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac08DispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac09DispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac0ADispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac0BDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac0CDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac0DDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac0EDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2Mac0FDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2NearestLLDPDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2NonTpmrLLDPDispType"), ("F3-FPM-MIB", "f3NetFlowPointCpdV2CustomerLLDPDispType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3NetFlowPointCpdV2Group = f3NetFlowPointCpdV2Group.setStatus('current')
f3NetFlowPointLearningConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 11)).setObjects(("F3-FPM-MIB", "f3NetFlowPointLearningConfigLearningEnabled"), ("F3-FPM-MIB", "f3NetFlowPointLearningConfigMaxFwdEntries"), ("F3-FPM-MIB", "f3NetFlowPointLearningConfigProtectLearningCtrl"), ("F3-FPM-MIB", "f3NetFlowPointLearningConfigAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3NetFlowPointLearningConfigGroup = f3NetFlowPointLearningConfigGroup.setStatus('current')
f3AccFlowPointPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 12)).setObjects(("F3-FPM-MIB", "f3AccFlowPointStatsIndex"), ("F3-FPM-MIB", "f3AccFlowPointStatsIntervalType"), ("F3-FPM-MIB", "f3AccFlowPointStatsValid"), ("F3-FPM-MIB", "f3AccFlowPointStatsAction"), ("F3-FPM-MIB", "f3AccFlowPointStatsL2CPFD"), ("F3-FPM-MIB", "f3AccFlowPointStatsABRRx"), ("F3-FPM-MIB", "f3AccFlowPointStatsABRRLRx"), ("F3-FPM-MIB", "f3AccFlowPointStatsUAS"), ("F3-FPM-MIB", "f3AccFlowPointStatsSES"), ("F3-FPM-MIB", "f3AccFlowPointStatsFMG"), ("F3-FPM-MIB", "f3AccFlowPointStatsFMY"), ("F3-FPM-MIB", "f3AccFlowPointStatsFMRD"), ("F3-FPM-MIB", "f3AccFlowPointStatsFTD"), ("F3-FPM-MIB", "f3AccFlowPointStatsBytesIn"), ("F3-FPM-MIB", "f3AccFlowPointStatsBytesOut"), ("F3-FPM-MIB", "f3AccFlowPointStatsIBRMax"), ("F3-FPM-MIB", "f3AccFlowPointStatsIBRRlMax"), ("F3-FPM-MIB", "f3AccFlowPointStatsIBRMin"), ("F3-FPM-MIB", "f3AccFlowPointStatsIBRRlMin"), ("F3-FPM-MIB", "f3AccFlowPointStatsIBR"), ("F3-FPM-MIB", "f3AccFlowPointStatsIBRRl"), ("F3-FPM-MIB", "f3AccFlowPointStatsFBCD"), ("F3-FPM-MIB", "f3AccFlowPointStatsFMCD"), ("F3-FPM-MIB", "f3AccFlowPointStatsFdRxFb"), ("F3-FPM-MIB", "f3AccFlowPointStatsFdTxFb"), ("F3-FPM-MIB", "f3AccFlowPointStatsFdicd"), ("F3-FPM-MIB", "f3AccFlowPointStatsNumLearnTableFlushes"), ("F3-FPM-MIB", "f3AccFlowPointHistoryIndex"), ("F3-FPM-MIB", "f3AccFlowPointHistoryTime"), ("F3-FPM-MIB", "f3AccFlowPointHistoryValid"), ("F3-FPM-MIB", "f3AccFlowPointHistoryAction"), ("F3-FPM-MIB", "f3AccFlowPointHistoryL2CPFD"), ("F3-FPM-MIB", "f3AccFlowPointHistoryABRRx"), ("F3-FPM-MIB", "f3AccFlowPointHistoryABRRLRx"), ("F3-FPM-MIB", "f3AccFlowPointHistoryUAS"), ("F3-FPM-MIB", "f3AccFlowPointHistorySES"), ("F3-FPM-MIB", "f3AccFlowPointHistoryFMG"), ("F3-FPM-MIB", "f3AccFlowPointHistoryFMY"), ("F3-FPM-MIB", "f3AccFlowPointHistoryFMRD"), ("F3-FPM-MIB", "f3AccFlowPointHistoryFTD"), ("F3-FPM-MIB", "f3AccFlowPointHistoryBytesIn"), ("F3-FPM-MIB", "f3AccFlowPointHistoryBytesOut"), ("F3-FPM-MIB", "f3AccFlowPointHistoryIBRMax"), ("F3-FPM-MIB", "f3AccFlowPointHistoryIBRRlMax"), ("F3-FPM-MIB", "f3AccFlowPointHistoryIBRMin"), ("F3-FPM-MIB", "f3AccFlowPointHistoryIBRRlMin"), ("F3-FPM-MIB", "f3AccFlowPointHistoryIBR"), ("F3-FPM-MIB", "f3AccFlowPointHistoryIBRRl"), ("F3-FPM-MIB", "f3AccFlowPointHistoryFBCD"), ("F3-FPM-MIB", "f3AccFlowPointHistoryFMCD"), ("F3-FPM-MIB", "f3AccFlowPointHistoryFdRxFb"), ("F3-FPM-MIB", "f3AccFlowPointHistoryFdTxFb"), ("F3-FPM-MIB", "f3AccFlowPointHistoryFdicd"), ("F3-FPM-MIB", "f3AccFlowPointHistoryNumLearnTableFlushes"), ("F3-FPM-MIB", "f3AccFlowPointThresholdIndex"), ("F3-FPM-MIB", "f3AccFlowPointThresholdInterval"), ("F3-FPM-MIB", "f3AccFlowPointThresholdVariable"), ("F3-FPM-MIB", "f3AccFlowPointThresholdValueLo"), ("F3-FPM-MIB", "f3AccFlowPointThresholdValueHi"), ("F3-FPM-MIB", "f3AccFlowPointThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3AccFlowPointPerfGroup = f3AccFlowPointPerfGroup.setStatus('current')
f3NetFlowPointPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 13)).setObjects(("F3-FPM-MIB", "f3NetFlowPointStatsIndex"), ("F3-FPM-MIB", "f3NetFlowPointStatsIntervalType"), ("F3-FPM-MIB", "f3NetFlowPointStatsValid"), ("F3-FPM-MIB", "f3NetFlowPointStatsAction"), ("F3-FPM-MIB", "f3NetFlowPointStatsL2CPFD"), ("F3-FPM-MIB", "f3NetFlowPointStatsABRRx"), ("F3-FPM-MIB", "f3NetFlowPointStatsABRRLRx"), ("F3-FPM-MIB", "f3NetFlowPointStatsUAS"), ("F3-FPM-MIB", "f3NetFlowPointStatsSES"), ("F3-FPM-MIB", "f3NetFlowPointStatsFMG"), ("F3-FPM-MIB", "f3NetFlowPointStatsFMY"), ("F3-FPM-MIB", "f3NetFlowPointStatsFMRD"), ("F3-FPM-MIB", "f3NetFlowPointStatsFTD"), ("F3-FPM-MIB", "f3NetFlowPointStatsBytesIn"), ("F3-FPM-MIB", "f3NetFlowPointStatsBytesOut"), ("F3-FPM-MIB", "f3NetFlowPointStatsIBRMax"), ("F3-FPM-MIB", "f3NetFlowPointStatsIBRRlMax"), ("F3-FPM-MIB", "f3NetFlowPointStatsIBRMin"), ("F3-FPM-MIB", "f3NetFlowPointStatsIBRRlMin"), ("F3-FPM-MIB", "f3NetFlowPointStatsIBR"), ("F3-FPM-MIB", "f3NetFlowPointStatsIBRRl"), ("F3-FPM-MIB", "f3NetFlowPointStatsFBCD"), ("F3-FPM-MIB", "f3NetFlowPointStatsFMCD"), ("F3-FPM-MIB", "f3NetFlowPointStatsFdRxFb"), ("F3-FPM-MIB", "f3NetFlowPointStatsFdTxFb"), ("F3-FPM-MIB", "f3NetFlowPointStatsFdicd"), ("F3-FPM-MIB", "f3NetFlowPointStatsNumLearnTableFlushes"), ("F3-FPM-MIB", "f3NetFlowPointHistoryIndex"), ("F3-FPM-MIB", "f3NetFlowPointHistoryTime"), ("F3-FPM-MIB", "f3NetFlowPointHistoryValid"), ("F3-FPM-MIB", "f3NetFlowPointHistoryAction"), ("F3-FPM-MIB", "f3NetFlowPointHistoryL2CPFD"), ("F3-FPM-MIB", "f3NetFlowPointHistoryABRRx"), ("F3-FPM-MIB", "f3NetFlowPointHistoryABRRLRx"), ("F3-FPM-MIB", "f3NetFlowPointHistoryUAS"), ("F3-FPM-MIB", "f3NetFlowPointHistorySES"), ("F3-FPM-MIB", "f3NetFlowPointHistoryFMG"), ("F3-FPM-MIB", "f3NetFlowPointHistoryFMY"), ("F3-FPM-MIB", "f3NetFlowPointHistoryFMRD"), ("F3-FPM-MIB", "f3NetFlowPointHistoryFTD"), ("F3-FPM-MIB", "f3NetFlowPointHistoryBytesIn"), ("F3-FPM-MIB", "f3NetFlowPointHistoryBytesOut"), ("F3-FPM-MIB", "f3NetFlowPointHistoryIBRMax"), ("F3-FPM-MIB", "f3NetFlowPointHistoryIBRRlMax"), ("F3-FPM-MIB", "f3NetFlowPointHistoryIBRMin"), ("F3-FPM-MIB", "f3NetFlowPointHistoryIBRRlMin"), ("F3-FPM-MIB", "f3NetFlowPointHistoryIBR"), ("F3-FPM-MIB", "f3NetFlowPointHistoryIBRRl"), ("F3-FPM-MIB", "f3NetFlowPointHistoryFBCD"), ("F3-FPM-MIB", "f3NetFlowPointHistoryFMCD"), ("F3-FPM-MIB", "f3NetFlowPointHistoryFdRxFb"), ("F3-FPM-MIB", "f3NetFlowPointHistoryFdTxFb"), ("F3-FPM-MIB", "f3NetFlowPointHistoryFdicd"), ("F3-FPM-MIB", "f3NetFlowPointHistoryNumLearnTableFlushes"), ("F3-FPM-MIB", "f3NetFlowPointThresholdIndex"), ("F3-FPM-MIB", "f3NetFlowPointThresholdInterval"), ("F3-FPM-MIB", "f3NetFlowPointThresholdVariable"), ("F3-FPM-MIB", "f3NetFlowPointThresholdValueLo"), ("F3-FPM-MIB", "f3NetFlowPointThresholdValueHi"), ("F3-FPM-MIB", "f3NetFlowPointThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3NetFlowPointPerfGroup = f3NetFlowPointPerfGroup.setStatus('current')
f3MPFlowPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 14)).setObjects(("F3-FPM-MIB", "f3MPFlowStatsIndex"), ("F3-FPM-MIB", "f3MPFlowStatsIntervalType"), ("F3-FPM-MIB", "f3MPFlowStatsValid"), ("F3-FPM-MIB", "f3MPFlowStatsAction"), ("F3-FPM-MIB", "f3MPFlowStatsFDStaticBlock"), ("F3-FPM-MIB", "f3MPFlowStatsFDHairPin"), ("F3-FPM-MIB", "f3MPFlowStatsMacTableDiscards"), ("F3-FPM-MIB", "f3MPFlowStatsFDProtLearn"), ("F3-FPM-MIB", "f3MPFlowHistoryIndex"), ("F3-FPM-MIB", "f3MPFlowHistoryTime"), ("F3-FPM-MIB", "f3MPFlowHistoryValid"), ("F3-FPM-MIB", "f3MPFlowHistoryAction"), ("F3-FPM-MIB", "f3MPFlowHistoryFDStaticBlock"), ("F3-FPM-MIB", "f3MPFlowHistoryFDHairPin"), ("F3-FPM-MIB", "f3MPFlowHistoryMacTableDiscards"), ("F3-FPM-MIB", "f3MPFlowHistoryFDProtLearn"), ("F3-FPM-MIB", "f3MPFlowThresholdIndex"), ("F3-FPM-MIB", "f3MPFlowThresholdInterval"), ("F3-FPM-MIB", "f3MPFlowThresholdVariable"), ("F3-FPM-MIB", "f3MPFlowThresholdValueLo"), ("F3-FPM-MIB", "f3MPFlowThresholdValueHi"), ("F3-FPM-MIB", "f3MPFlowThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3MPFlowPerfGroup = f3MPFlowPerfGroup.setStatus('current')
f3AccFpQosShaperPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 15)).setObjects(("F3-FPM-MIB", "f3AccFpQosShaperStatsIndex"), ("F3-FPM-MIB", "f3AccFpQosShaperStatsIntervalType"), ("F3-FPM-MIB", "f3AccFpQosShaperStatsValid"), ("F3-FPM-MIB", "f3AccFpQosShaperStatsAction"), ("F3-FPM-MIB", "f3AccFpQosShaperStatsBT"), ("F3-FPM-MIB", "f3AccFpQosShaperStatsBTD"), ("F3-FPM-MIB", "f3AccFpQosShaperStatsFD"), ("F3-FPM-MIB", "f3AccFpQosShaperStatsFTD"), ("F3-FPM-MIB", "f3AccFpQosShaperStatsABRRL"), ("F3-FPM-MIB", "f3AccFpQosShaperStatsBREDD"), ("F3-FPM-MIB", "f3AccFpQosShaperStatsFREDD"), ("F3-FPM-MIB", "f3AccFpQosShaperHistoryIndex"), ("F3-FPM-MIB", "f3AccFpQosShaperHistoryTime"), ("F3-FPM-MIB", "f3AccFpQosShaperHistoryValid"), ("F3-FPM-MIB", "f3AccFpQosShaperHistoryAction"), ("F3-FPM-MIB", "f3AccFpQosShaperHistoryBT"), ("F3-FPM-MIB", "f3AccFpQosShaperHistoryBTD"), ("F3-FPM-MIB", "f3AccFpQosShaperHistoryFD"), ("F3-FPM-MIB", "f3AccFpQosShaperHistoryFTD"), ("F3-FPM-MIB", "f3AccFpQosShaperHistoryABRRL"), ("F3-FPM-MIB", "f3AccFpQosShaperHistoryBREDD"), ("F3-FPM-MIB", "f3AccFpQosShaperHistoryFREDD"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdIndex"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdInterval"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdVariable"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdValueLo"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdValueHi"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3AccFpQosShaperPerfGroup = f3AccFpQosShaperPerfGroup.setStatus('current')
f3NetFpQosShaperPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 16)).setObjects(("F3-FPM-MIB", "f3NetFpQosShaperStatsIndex"), ("F3-FPM-MIB", "f3NetFpQosShaperStatsIntervalType"), ("F3-FPM-MIB", "f3NetFpQosShaperStatsValid"), ("F3-FPM-MIB", "f3NetFpQosShaperStatsAction"), ("F3-FPM-MIB", "f3NetFpQosShaperStatsBT"), ("F3-FPM-MIB", "f3NetFpQosShaperStatsBTD"), ("F3-FPM-MIB", "f3NetFpQosShaperStatsFD"), ("F3-FPM-MIB", "f3NetFpQosShaperStatsFTD"), ("F3-FPM-MIB", "f3NetFpQosShaperStatsABRRL"), ("F3-FPM-MIB", "f3NetFpQosShaperStatsBREDD"), ("F3-FPM-MIB", "f3NetFpQosShaperStatsFREDD"), ("F3-FPM-MIB", "f3NetFpQosShaperHistoryIndex"), ("F3-FPM-MIB", "f3NetFpQosShaperHistoryTime"), ("F3-FPM-MIB", "f3NetFpQosShaperHistoryValid"), ("F3-FPM-MIB", "f3NetFpQosShaperHistoryAction"), ("F3-FPM-MIB", "f3NetFpQosShaperHistoryBT"), ("F3-FPM-MIB", "f3NetFpQosShaperHistoryBTD"), ("F3-FPM-MIB", "f3NetFpQosShaperHistoryFD"), ("F3-FPM-MIB", "f3NetFpQosShaperHistoryFTD"), ("F3-FPM-MIB", "f3NetFpQosShaperHistoryABRRL"), ("F3-FPM-MIB", "f3NetFpQosShaperHistoryBREDD"), ("F3-FPM-MIB", "f3NetFpQosShaperHistoryFREDD"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdIndex"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdInterval"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdVariable"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdValueLo"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdValueHi"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3NetFpQosShaperPerfGroup = f3NetFpQosShaperPerfGroup.setStatus('current')
f3AccFpQosPolicerPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 17)).setObjects(("F3-FPM-MIB", "f3AccFpQosPolicerStatsIndex"), ("F3-FPM-MIB", "f3AccFpQosPolicerStatsIntervalType"), ("F3-FPM-MIB", "f3AccFpQosPolicerStatsValid"), ("F3-FPM-MIB", "f3AccFpQosPolicerStatsAction"), ("F3-FPM-MIB", "f3AccFpQosPolicerStatsFMG"), ("F3-FPM-MIB", "f3AccFpQosPolicerStatsFMY"), ("F3-FPM-MIB", "f3AccFpQosPolicerStatsFMRD"), ("F3-FPM-MIB", "f3AccFpQosPolicerStatsBytesIn"), ("F3-FPM-MIB", "f3AccFpQosPolicerStatsBytesOut"), ("F3-FPM-MIB", "f3AccFpQosPolicerStatsABR"), ("F3-FPM-MIB", "f3AccFpQosPolicerHistoryIndex"), ("F3-FPM-MIB", "f3AccFpQosPolicerHistoryTime"), ("F3-FPM-MIB", "f3AccFpQosPolicerHistoryValid"), ("F3-FPM-MIB", "f3AccFpQosPolicerHistoryAction"), ("F3-FPM-MIB", "f3AccFpQosPolicerHistoryFMG"), ("F3-FPM-MIB", "f3AccFpQosPolicerHistoryFMY"), ("F3-FPM-MIB", "f3AccFpQosPolicerHistoryFMRD"), ("F3-FPM-MIB", "f3AccFpQosPolicerHistoryBytesIn"), ("F3-FPM-MIB", "f3AccFpQosPolicerHistoryBytesOut"), ("F3-FPM-MIB", "f3AccFpQosPolicerHistoryABR"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdIndex"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdInterval"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdVariable"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdValueLo"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdValueHi"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3AccFpQosPolicerPerfGroup = f3AccFpQosPolicerPerfGroup.setStatus('current')
f3NetFpQosPolicerPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 18)).setObjects(("F3-FPM-MIB", "f3NetFpQosPolicerStatsIndex"), ("F3-FPM-MIB", "f3NetFpQosPolicerStatsIntervalType"), ("F3-FPM-MIB", "f3NetFpQosPolicerStatsValid"), ("F3-FPM-MIB", "f3NetFpQosPolicerStatsAction"), ("F3-FPM-MIB", "f3NetFpQosPolicerStatsFMG"), ("F3-FPM-MIB", "f3NetFpQosPolicerStatsFMY"), ("F3-FPM-MIB", "f3NetFpQosPolicerStatsFMRD"), ("F3-FPM-MIB", "f3NetFpQosPolicerStatsBytesIn"), ("F3-FPM-MIB", "f3NetFpQosPolicerStatsBytesOut"), ("F3-FPM-MIB", "f3NetFpQosPolicerStatsABR"), ("F3-FPM-MIB", "f3NetFpQosPolicerHistoryIndex"), ("F3-FPM-MIB", "f3NetFpQosPolicerHistoryTime"), ("F3-FPM-MIB", "f3NetFpQosPolicerHistoryValid"), ("F3-FPM-MIB", "f3NetFpQosPolicerHistoryAction"), ("F3-FPM-MIB", "f3NetFpQosPolicerHistoryFMG"), ("F3-FPM-MIB", "f3NetFpQosPolicerHistoryFMY"), ("F3-FPM-MIB", "f3NetFpQosPolicerHistoryFMRD"), ("F3-FPM-MIB", "f3NetFpQosPolicerHistoryBytesIn"), ("F3-FPM-MIB", "f3NetFpQosPolicerHistoryBytesOut"), ("F3-FPM-MIB", "f3NetFpQosPolicerHistoryABR"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdIndex"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdInterval"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdVariable"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdValueLo"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdValueHi"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3NetFpQosPolicerPerfGroup = f3NetFpQosPolicerPerfGroup.setStatus('current')
f3FpmPerfNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 43, 4, 2, 19)).setObjects(("F3-FPM-MIB", "f3AccFlowPointThresholdCrossingAlert"), ("F3-FPM-MIB", "f3NetFlowPointThresholdCrossingAlert"), ("F3-FPM-MIB", "f3MPFlowThresholdCrossingAlert"), ("F3-FPM-MIB", "f3AccFpQosShaperThresholdCrossingAlert"), ("F3-FPM-MIB", "f3NetFpQosShaperThresholdCrossingAlert"), ("F3-FPM-MIB", "f3AccFpQosPolicerThresholdCrossingAlert"), ("F3-FPM-MIB", "f3NetFpQosPolicerThresholdCrossingAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3FpmPerfNotifGroup = f3FpmPerfNotifGroup.setStatus('current')
mibBuilder.exportSymbols("F3-FPM-MIB", f3AccFlowPointStatsIBRRlMax=f3AccFlowPointStatsIBRRlMax, f3NetFlowPointStatsNumLearnTableFlushes=f3NetFlowPointStatsNumLearnTableFlushes, f3AccFpQosShaperThresholdVariable=f3AccFpQosShaperThresholdVariable, f3AccFpQosShaperCOS=f3AccFpQosShaperCOS, f3NetFlowPointIndex=f3NetFlowPointIndex, f3NetFlowPointCpdV2Mac00DispType=f3NetFlowPointCpdV2Mac00DispType, f3AccFpQosShaperHistoryAction=f3AccFpQosShaperHistoryAction, f3NetFpQosShaperHistoryValid=f3NetFpQosShaperHistoryValid, f3FpmGroups=f3FpmGroups, f3AccFlowPointGuaranteedBWLo=f3AccFlowPointGuaranteedBWLo, f3AccFlowPointStatsIBRMax=f3AccFlowPointStatsIBRMax, f3NetFpQosPolicerRowStatus=f3NetFpQosPolicerRowStatus, f3MPFlowHistoryAction=f3MPFlowHistoryAction, f3NetFlowPointThresholdVariable=f3NetFlowPointThresholdVariable, f3AccFpQosShaperHistoryValid=f3AccFpQosShaperHistoryValid, f3NetFlowPointStatsFdicd=f3NetFlowPointStatsFdicd, f3MPFlowHistoryFDHairPin=f3MPFlowHistoryFDHairPin, f3NetFlowPointCTagVlanId=f3NetFlowPointCTagVlanId, f3AccFlowPointCpdV2Mac07DispType=f3AccFlowPointCpdV2Mac07DispType, f3AccFlowPointMaximumBWHi=f3AccFlowPointMaximumBWHi, f3NetFlowPointCpdV2PortAuthenDispType=f3NetFlowPointCpdV2PortAuthenDispType, f3NetFpQosShaperStatsBTD=f3NetFpQosShaperStatsBTD, f3NetFpQosPolicerStatsTable=f3NetFpQosPolicerStatsTable, f3NetFlowPointHistoryABRRx=f3NetFlowPointHistoryABRRx, f3AccFpQosPolicerCBS=f3AccFpQosPolicerCBS, f3MPFlowExtMaxFwdEntries=f3MPFlowExtMaxFwdEntries, f3AccFlowPointCpdV2Mac01DispType=f3AccFlowPointCpdV2Mac01DispType, f3NetFlowPointCpdV2Table=f3NetFlowPointCpdV2Table, f3NetFlowPointCpdV2Mac06DispType=f3NetFlowPointCpdV2Mac06DispType, f3MPFlowThresholdValueHi=f3MPFlowThresholdValueHi, f3AccFpQosPolicerHistoryEntry=f3AccFpQosPolicerHistoryEntry, f3AccFlowPointStatsIBRRl=f3AccFlowPointStatsIBRRl, f3AccFlowPointEntry=f3AccFlowPointEntry, f3AccFlowPointVlanMemberActionVlan=f3AccFlowPointVlanMemberActionVlan, f3MPFlowStatsValid=f3MPFlowStatsValid, f3AccFpQosPolicerThresholdTable=f3AccFpQosPolicerThresholdTable, f3AccFlowPointEgressOuterTagPrioMapEnabled=f3AccFlowPointEgressOuterTagPrioMapEnabled, f3NetFlowPointMcastRateLimitSpeedHi=f3NetFlowPointMcastRateLimitSpeedHi, f3AccFlowPointDefaultMemberEnabled=f3AccFlowPointDefaultMemberEnabled, f3NetFlowPointThresholdIndex=f3NetFlowPointThresholdIndex, f3AccFpQosShaperHistoryABRRL=f3AccFpQosShaperHistoryABRRL, f3NetFpQosPolicerHistoryBytesIn=f3NetFpQosPolicerHistoryBytesIn, f3NetFlowPointHistoryFMY=f3NetFlowPointHistoryFMY, f3FpmPerfNotifications=f3FpmPerfNotifications, f3NetFlowPointHistoryFdTxFb=f3NetFlowPointHistoryFdTxFb, f3AccFpQosPolicerHistoryTable=f3AccFpQosPolicerHistoryTable, f3AccFlowPointCpdV2PortAuthenDispType=f3AccFlowPointCpdV2PortAuthenDispType, f3NetFlowPointStatsSES=f3NetFlowPointStatsSES, f3NetFlowPointLearningConfigMaxFwdEntries=f3NetFlowPointLearningConfigMaxFwdEntries, f3AccFlowPointStatsIndex=f3AccFlowPointStatsIndex, f3AccFlowPointBcastRateLimitSpeedHi=f3AccFlowPointBcastRateLimitSpeedHi, f3AccFlowPointLearningConfigEntry=f3AccFlowPointLearningConfigEntry, f3AccFlowPointHistoryIBRMax=f3AccFlowPointHistoryIBRMax, f3AccFlowPointStatsFdRxFb=f3AccFlowPointStatsFdRxFb, f3AccFlowPointThresholdIndex=f3AccFlowPointThresholdIndex, f3NetFpQosPolicerHistoryFMG=f3NetFpQosPolicerHistoryFMG, f3AccFlowPointIngressVlanMemberList=f3AccFlowPointIngressVlanMemberList, f3NetFlowPointMaximumBWHi=f3NetFlowPointMaximumBWHi, f3NetFlowPointHistoryFMRD=f3NetFlowPointHistoryFMRD, f3NetFlowPointStatsFdTxFb=f3NetFlowPointStatsFdTxFb, f3AccFpQosPolicerStatsTable=f3AccFpQosPolicerStatsTable, f3MPFlowExtEntry=f3MPFlowExtEntry, f3NetFlowPointVlanMemberActionVlan=f3NetFlowPointVlanMemberActionVlan, f3AccFlowPointStatsFMG=f3AccFlowPointStatsFMG, f3NetFlowPointHierarchicalCOSEnabled=f3NetFlowPointHierarchicalCOSEnabled, f3NetFpQosPolicerStatsFMRD=f3NetFpQosPolicerStatsFMRD, f3AccFlowPointSTagVlanPriority=f3AccFlowPointSTagVlanPriority, f3AccFlowPointIngressCOS=f3AccFlowPointIngressCOS, f3NetFpQosPolicerPerfGroup=f3NetFpQosPolicerPerfGroup, f3AccFlowPointMcastRateLimitSpeedHi=f3AccFlowPointMcastRateLimitSpeedHi, f3AccFpQosShaperEIRLo=f3AccFpQosShaperEIRLo, f3AccFpQosShaperThresholdValueHi=f3AccFpQosShaperThresholdValueHi, f3AccFlowPointMaximumBWLo=f3AccFlowPointMaximumBWLo, f3AccFlowPointAlias=f3AccFlowPointAlias, f3AccFpQosPolicerSecondaryState=f3AccFpQosPolicerSecondaryState, f3AccFlowPointFrameFwdEnabled=f3AccFlowPointFrameFwdEnabled, f3AccFpQosShaperCIRHi=f3AccFpQosShaperCIRHi, f3NetFpQosPolicerPolicingEnabled=f3NetFpQosPolicerPolicingEnabled, f3NetFlowPointHistoryAction=f3NetFlowPointHistoryAction, f3FpmPerfObjects=f3FpmPerfObjects, f3NetFlowPointCpdV2PagpDispType=f3NetFlowPointCpdV2PagpDispType, f3AccFlowPointCpdV2Mac0BDispType=f3AccFlowPointCpdV2Mac0BDispType, f3AccFpQosPolicerThresholdInterval=f3AccFpQosPolicerThresholdInterval, f3NetFpQosPolicerStatsFMG=f3NetFpQosPolicerStatsFMG, f3NetFpQosShaperHistoryAction=f3NetFpQosShaperHistoryAction, f3NetFlowPointCpdV2L2PTDispType=f3NetFlowPointCpdV2L2PTDispType, f3AccFlowPointCpdV2VtpDispType=f3AccFlowPointCpdV2VtpDispType, f3AccFlowPointHistoryUAS=f3AccFlowPointHistoryUAS, f3NetFlowPointCpdV2ELMIDispType=f3NetFlowPointCpdV2ELMIDispType, f3NetFlowPointSTagVlanId=f3NetFlowPointSTagVlanId, f3NetFlowPointCpdV2Mac04DispType=f3NetFlowPointCpdV2Mac04DispType, f3NetFlowPointThresholdMonValue=f3NetFlowPointThresholdMonValue, f3NetFlowPointHistoryL2CPFD=f3NetFlowPointHistoryL2CPFD, f3NetFpQosPolicerHistoryBytesOut=f3NetFpQosPolicerHistoryBytesOut, f3NetFlowPointIngressVlanMemberList=f3NetFlowPointIngressVlanMemberList, f3AccFlowPointCpdV2BPDUDispType=f3AccFlowPointCpdV2BPDUDispType, f3AccFlowPointThresholdValueLo=f3AccFlowPointThresholdValueLo, f3AccFpQosShaperEBS=f3AccFpQosShaperEBS, f3NetFlowPointAutoBandwidthConfigEnabled=f3NetFlowPointAutoBandwidthConfigEnabled, f3AccFlowPointStatsFMRD=f3AccFlowPointStatsFMRD, f3NetFlowPointCombinedRateLimitSpeedHi=f3NetFlowPointCombinedRateLimitSpeedHi, f3NetFlowPointBcastRateLimitSpeedLo=f3NetFlowPointBcastRateLimitSpeedLo, f3AccFpQosShaperCIRLo=f3AccFpQosShaperCIRLo, f3NetFpQosShaperIndex=f3NetFpQosShaperIndex, f3AccFlowPointHistoryL2CPFD=f3AccFlowPointHistoryL2CPFD, f3AccFlowPointStatsL2CPFD=f3AccFlowPointStatsL2CPFD, f3AccFlowPointStatsABRRLRx=f3AccFlowPointStatsABRRLRx, f3MPFlowHistoryIndex=f3MPFlowHistoryIndex, f3AccFpQosShaperStatsValid=f3AccFpQosShaperStatsValid, f3AccFpQosShaperStatsFD=f3AccFpQosShaperStatsFD, f3NetFpQosPolicerStatsFMY=f3NetFpQosPolicerStatsFMY, f3NetFlowPointHistoryIBRRlMin=f3NetFlowPointHistoryIBRRlMin, f3AccFlowPointBcastRateLimitEnabled=f3AccFlowPointBcastRateLimitEnabled, f3AccFpQosShaperEIRHi=f3AccFpQosShaperEIRHi, f3AccFlowPointLearningConfigMaxFwdEntries=f3AccFlowPointLearningConfigMaxFwdEntries, f3NetFlowPointStatsABRRLRx=f3NetFlowPointStatsABRRLRx, f3NetFlowPointHistoryTable=f3NetFlowPointHistoryTable, f3AccFlowPointLearningConfigGroup=f3AccFlowPointLearningConfigGroup, f3NetFlowPointIngressUntaggedFrameEnabled=f3NetFlowPointIngressUntaggedFrameEnabled, f3NetFpQosShaperStatsTable=f3NetFpQosShaperStatsTable, f3NetFpQosShaperHistoryEntry=f3NetFpQosShaperHistoryEntry, f3NetFpQosShaperHistoryFTD=f3NetFpQosShaperHistoryFTD, f3NetFlowPointIngressMultiCOSEnabled=f3NetFlowPointIngressMultiCOSEnabled, f3AccFpQosShaperStatsIndex=f3AccFpQosShaperStatsIndex, f3AccFpQosPolicerThresholdCrossingAlert=f3AccFpQosPolicerThresholdCrossingAlert, f3AccFlowPointLoopAvoidance=f3AccFlowPointLoopAvoidance, f3NetFlowPointUsePortPrioMapProfile=f3NetFlowPointUsePortPrioMapProfile, f3NetFlowPointLearningConfigGroup=f3NetFlowPointLearningConfigGroup, f3NetFpQosPolicerThresholdInterval=f3NetFpQosPolicerThresholdInterval, f3AccFlowPointHierarchicalCOSEnabled=f3AccFlowPointHierarchicalCOSEnabled, f3NetFlowPointLearningConfigTable=f3NetFlowPointLearningConfigTable, f3NetFlowPointSecondaryState=f3NetFlowPointSecondaryState, f3AccFlowPointHistoryIBRRlMin=f3AccFlowPointHistoryIBRRlMin, f3MPFlowThresholdInterval=f3MPFlowThresholdInterval, f3NetFpQosShaperHistoryTable=f3NetFpQosShaperHistoryTable, f3AccFpQosPolicerThresholdMonValue=f3AccFpQosPolicerThresholdMonValue, f3NetFpQosPolicerAdminState=f3NetFpQosPolicerAdminState, f3NetFpQosShaperGroup=f3NetFpQosShaperGroup, f3NetFlowPointCpdV2UdldDispType=f3NetFlowPointCpdV2UdldDispType, f3NetFlowPointBcastRateLimitEnabled=f3NetFlowPointBcastRateLimitEnabled, f3NetFlowPointSplitHorizonGroupOID=f3NetFlowPointSplitHorizonGroupOID, f3NetFlowPointStatsAction=f3NetFlowPointStatsAction, f3AccFpQosPolicerPolicingEnabled=f3AccFpQosPolicerPolicingEnabled, f3AccFpQosPolicerStatsValid=f3AccFpQosPolicerStatsValid, f3MPFlowThresholdEntry=f3MPFlowThresholdEntry, f3NetFlowPointStatsFMG=f3NetFlowPointStatsFMG, f3NetFlowPointCpdV2UplinkFastDispType=f3NetFlowPointCpdV2UplinkFastDispType, f3NetFlowPointHistoryIBRRlMax=f3NetFlowPointHistoryIBRRlMax, f3AccFlowPointThresholdVariable=f3AccFlowPointThresholdVariable, f3NetFlowPointCpdV2Mac0FDispType=f3NetFlowPointCpdV2Mac0FDispType, f3NetFlowPointPerfGroup=f3NetFlowPointPerfGroup, f3NetFlowPointCpdV2Mac07DispType=f3NetFlowPointCpdV2Mac07DispType, f3AccFlowPointCpdV2Mac0CDispType=f3AccFlowPointCpdV2Mac0CDispType, f3AccFlowPointCpdV2UdldDispType=f3AccFlowPointCpdV2UdldDispType, f3NetFpQosShaperEIRLo=f3NetFpQosShaperEIRLo, f3MPFlowStatsTable=f3MPFlowStatsTable, f3NetFlowpointSecureBlockingControl=f3NetFlowpointSecureBlockingControl, f3NetFlowPointCpdV2CustomerLLDPDispType=f3NetFlowPointCpdV2CustomerLLDPDispType, f3NetFlowPointHistoryABRRLRx=f3NetFlowPointHistoryABRRLRx, f3AccFlowPointEgressInnerTagPrioMapEnabled=f3AccFlowPointEgressInnerTagPrioMapEnabled, f3NetFlowPointCpdV2NonTpmrLLDPDispType=f3NetFlowPointCpdV2NonTpmrLLDPDispType, f3NetFpQosPolicerThresholdVariable=f3NetFpQosPolicerThresholdVariable, f3FpmCompliance=f3FpmCompliance, f3AccFlowPointLearningConfigProtectLearningCtrl=f3AccFlowPointLearningConfigProtectLearningCtrl, f3NetFlowPointStatsFMRD=f3NetFlowPointStatsFMRD, f3NetFlowPointStatsFMY=f3NetFlowPointStatsFMY, f3NetFpQosPolicerGroup=f3NetFpQosPolicerGroup, f3AccFlowPointHistoryValid=f3AccFlowPointHistoryValid, f3NetFlowPointCpdV2Mac01DispType=f3NetFlowPointCpdV2Mac01DispType, f3NetFlowPointStatsIBRMax=f3NetFlowPointStatsIBRMax, f3NetFlowPointCpdV2Mac08DispType=f3NetFlowPointCpdV2Mac08DispType, f3NetFpQosShaperHistoryABRRL=f3NetFpQosShaperHistoryABRRL, f3AccFpQosPolicerHistoryABR=f3AccFpQosPolicerHistoryABR, f3NetFpQosShaperHistoryTime=f3NetFpQosShaperHistoryTime, f3AccFlowPointStatsIntervalType=f3AccFlowPointStatsIntervalType, f3AccFpQosShaperThresholdIndex=f3AccFpQosShaperThresholdIndex, f3AccFpQosShaperHistoryBREDD=f3AccFpQosShaperHistoryBREDD, f3NetFlowPointCpdV2PauseDispType=f3NetFlowPointCpdV2PauseDispType, f3AccFlowPointLearningConfigTable=f3AccFlowPointLearningConfigTable, f3NetFlowPointCpdV2EfmOamDispType=f3NetFlowPointCpdV2EfmOamDispType, f3AccFlowPointHistoryNumLearnTableFlushes=f3AccFlowPointHistoryNumLearnTableFlushes, f3AccFpQosPolicerThresholdEntry=f3AccFpQosPolicerThresholdEntry, f3MPFlowHistoryFDStaticBlock=f3MPFlowHistoryFDStaticBlock, f3AccFlowPointSplitHorizonGroupOID=f3AccFlowPointSplitHorizonGroupOID, f3NetFlowPointSTagVlanPriority=f3NetFlowPointSTagVlanPriority, f3NetFlowPointThresholdEntry=f3NetFlowPointThresholdEntry, f3AccFpQosShaperGroup=f3AccFpQosShaperGroup, f3AccFpQosPolicerOperationalState=f3AccFpQosPolicerOperationalState, f3NetFlowPointCpdV2NearestLLDPDispType=f3NetFlowPointCpdV2NearestLLDPDispType, f3NetFlowPointHistorySES=f3NetFlowPointHistorySES, f3NetFlowPointHistoryUAS=f3NetFlowPointHistoryUAS, f3AccFlowPointCpdV2Mac0FDispType=f3AccFlowPointCpdV2Mac0FDispType, f3AccFlowPointCpdV2ActiveControlProtocols=f3AccFlowPointCpdV2ActiveControlProtocols, f3NetFlowPointHistoryNumLearnTableFlushes=f3NetFlowPointHistoryNumLearnTableFlushes, f3MPFlowThresholdMonValue=f3MPFlowThresholdMonValue, f3AccFlowPointHistoryIBRMin=f3AccFlowPointHistoryIBRMin, f3AccFlowPointAutoBandwidthConfigEnabled=f3AccFlowPointAutoBandwidthConfigEnabled, f3NetFlowPointStatsIndex=f3NetFlowPointStatsIndex, f3NetFlowPointHistoryIBR=f3NetFlowPointHistoryIBR, f3NetFpQosShaperRowStatus=f3NetFpQosShaperRowStatus, f3AccFlowPointStatsIBRRlMin=f3AccFlowPointStatsIBRRlMin, f3NetFpQosShaperHistoryBT=f3NetFpQosShaperHistoryBT, f3NetFlowPointCpdV2VlanBridgeDispType=f3NetFlowPointCpdV2VlanBridgeDispType, f3AccFlowPointCombinedRateLimitSpeedHi=f3AccFlowPointCombinedRateLimitSpeedHi, PYSNMP_MODULE_ID=f3FpmMIB, f3NetFpQosShaperThresholdValueHi=f3NetFpQosShaperThresholdValueHi, f3FpmMIB=f3FpmMIB, f3NetFpQosPolicerStatsValid=f3NetFpQosPolicerStatsValid, f3AccFlowPointHistoryBytesIn=f3AccFlowPointHistoryBytesIn, f3NetFlowPointThresholdInterval=f3NetFlowPointThresholdInterval, f3AccFlowPointUsePortPrioMapProfile=f3AccFlowPointUsePortPrioMapProfile, f3AccFpQosPolicerAlgorithm=f3AccFpQosPolicerAlgorithm, f3NetFlowPointStatsABRRx=f3NetFlowPointStatsABRRx, f3MPFlowStatsFDProtLearn=f3MPFlowStatsFDProtLearn, f3AccFlowPointStatsIBR=f3AccFlowPointStatsIBR, f3AccFlowPointHistoryIBR=f3AccFlowPointHistoryIBR, f3AccFpQosShaperOperationalState=f3AccFpQosShaperOperationalState, f3NetFpQosShaperAdminState=f3NetFpQosShaperAdminState, f3NetFpQosPolicerEIRLo=f3NetFpQosPolicerEIRLo, f3NetFlowPointHistoryBytesIn=f3NetFlowPointHistoryBytesIn, f3AccFpQosShaperHistoryTable=f3AccFpQosShaperHistoryTable, f3NetFpQosPolicerThresholdValueHi=f3NetFpQosPolicerThresholdValueHi, f3NetFpQosPolicerHistoryValid=f3NetFpQosPolicerHistoryValid, f3AccFpQosShaperSecondaryState=f3AccFpQosShaperSecondaryState, f3NetFlowPointAlias=f3NetFlowPointAlias, f3AccFpQosPolicerIndex=f3AccFpQosPolicerIndex, f3AccFpQosPolicerEntry=f3AccFpQosPolicerEntry, f3AccFlowPointSESFramesLossThresholdRatio=f3AccFlowPointSESFramesLossThresholdRatio, f3NetFlowPointCpdV2LACPDispType=f3NetFlowPointCpdV2LACPDispType, f3AccFpQosShaperThresholdEntry=f3AccFpQosShaperThresholdEntry, f3AccFpQosPolicerHistoryIndex=f3AccFpQosPolicerHistoryIndex, f3NetFpQosPolicerCIRLo=f3NetFpQosPolicerCIRLo, f3AccFpQosShaperStatsFTD=f3AccFpQosShaperStatsFTD, f3AccFlowPointStatsBytesOut=f3AccFlowPointStatsBytesOut, f3NetFpQosShaperCIRLo=f3NetFpQosShaperCIRLo, f3AccFlowPointCpdV2Group=f3AccFlowPointCpdV2Group, f3NetFpQosPolicerCIRHi=f3NetFpQosPolicerCIRHi, f3NetFlowPointCpdV2LACPMarkerDispType=f3NetFlowPointCpdV2LACPMarkerDispType, f3AccFlowPointCpdV2LANBridgesDispType=f3AccFlowPointCpdV2LANBridgesDispType, f3NetFlowPointEgressInnerTagPrioMapEnabled=f3NetFlowPointEgressInnerTagPrioMapEnabled, f3AccFpQosPolicerEIRLo=f3AccFpQosPolicerEIRLo, f3AccFlowPointHistoryAction=f3AccFlowPointHistoryAction, f3AccFlowPointGuaranteedBWHi=f3AccFlowPointGuaranteedBWHi, f3AccFpQosShaperHistoryFREDD=f3AccFpQosShaperHistoryFREDD, f3AccFpQosShaperIndex=f3AccFpQosShaperIndex, f3NetFlowPointHistoryFMCD=f3NetFlowPointHistoryFMCD, f3AccFpQosPolicerStorageType=f3AccFpQosPolicerStorageType, f3AccFlowPointCpdV2EfmOamDispType=f3AccFlowPointCpdV2EfmOamDispType, f3AccFpQosShaperCBS=f3AccFpQosShaperCBS, f3NetFlowPointCombinedRateLimitEnabled=f3NetFlowPointCombinedRateLimitEnabled, f3NetFlowPointCpdV2GVRPDispType=f3NetFlowPointCpdV2GVRPDispType, f3NetFpQosPolicerStatsIntervalType=f3NetFpQosPolicerStatsIntervalType, f3MPFlowStatsIntervalType=f3MPFlowStatsIntervalType, f3NetFpQosPolicerEBS=f3NetFpQosPolicerEBS)
mibBuilder.exportSymbols("F3-FPM-MIB", f3NetFlowPointLearningConfigAction=f3NetFlowPointLearningConfigAction, f3AccFlowPointAssociatedFlowId=f3AccFlowPointAssociatedFlowId, f3NetFlowPointCTagVlanPriority=f3NetFlowPointCTagVlanPriority, f3NetFlowPointStorageType=f3NetFlowPointStorageType, f3AccFpQosPolicerGroup=f3AccFpQosPolicerGroup, f3NetFpQosShaperTable=f3NetFpQosShaperTable, f3AccFlowPointHistoryBytesOut=f3AccFlowPointHistoryBytesOut, f3AccFlowPointHistoryFdTxFb=f3AccFlowPointHistoryFdTxFb, f3NetFpQosPolicerStatsIndex=f3NetFpQosPolicerStatsIndex, f3NetFpQosPolicerStatsBytesOut=f3NetFpQosPolicerStatsBytesOut, f3MPFlowThresholdCrossingAlert=f3MPFlowThresholdCrossingAlert, f3AccFlowPointHistorySES=f3AccFlowPointHistorySES, f3AccFlowPointStatsUAS=f3AccFlowPointStatsUAS, f3NetFpQosShaperThresholdMonValue=f3NetFpQosShaperThresholdMonValue, f3MPFlowHistoryTable=f3MPFlowHistoryTable, f3NetFpQosPolicerHistoryFMRD=f3NetFpQosPolicerHistoryFMRD, f3AccFlowPointCpdV2Mac05DispType=f3AccFlowPointCpdV2Mac05DispType, f3NetFpQosPolicerOperationalState=f3NetFpQosPolicerOperationalState, f3NetFlowPointLearningConfigProtectLearningCtrl=f3NetFlowPointLearningConfigProtectLearningCtrl, f3AccFpQosPolicerStatsBytesIn=f3AccFpQosPolicerStatsBytesIn, f3AccFpQosPolicerStatsAction=f3AccFpQosPolicerStatsAction, f3NetFpQosShaperEIRHi=f3NetFpQosShaperEIRHi, f3AccFpQosShaperThresholdMonValue=f3AccFpQosShaperThresholdMonValue, f3AccFlowPointHistoryFTD=f3AccFlowPointHistoryFTD, f3NetFlowPointGroup=f3NetFlowPointGroup, f3NetFlowPointCpdV2ActiveControlProtocols=f3NetFlowPointCpdV2ActiveControlProtocols, f3AccFlowPointStatsFTD=f3AccFlowPointStatsFTD, f3NetFlowPointStatsBytesIn=f3NetFlowPointStatsBytesIn, f3AccFlowPointCTagVlanId=f3AccFlowPointCTagVlanId, f3AccFpQosShaperStatsBT=f3AccFpQosShaperStatsBT, f3NetFlowPointThresholdValueHi=f3NetFlowPointThresholdValueHi, f3NetFpQosPolicerStorageType=f3NetFpQosPolicerStorageType, f3NetFpQosPolicerStatsAction=f3NetFpQosPolicerStatsAction, f3AccFlowPointStatsAction=f3AccFlowPointStatsAction, f3NetFpQosPolicerHistoryIndex=f3NetFpQosPolicerHistoryIndex, f3AccFlowPointCpdV2Mac08DispType=f3AccFlowPointCpdV2Mac08DispType, f3MPFlowExtGroup=f3MPFlowExtGroup, f3NetFlowPointThresholdTable=f3NetFlowPointThresholdTable, f3AccFlowPointCpdV2Mac0EDispType=f3AccFlowPointCpdV2Mac0EDispType, f3NetFpQosPolicerHistoryFMY=f3NetFpQosPolicerHistoryFMY, f3NetFlowPointAssociatedFlowId=f3NetFlowPointAssociatedFlowId, f3AccFpQosPolicerCIRLo=f3AccFpQosPolicerCIRLo, f3NetFlowPointDefaultMemberEnabled=f3NetFlowPointDefaultMemberEnabled, f3NetFlowPointHistoryFdicd=f3NetFlowPointHistoryFdicd, f3AccFpQosPolicerEIRHi=f3AccFpQosPolicerEIRHi, f3NetFlowPointStatsIBRMin=f3NetFlowPointStatsIBRMin, f3NetFlowPointHistoryBytesOut=f3NetFlowPointHistoryBytesOut, f3NetFpQosPolicerThresholdMonValue=f3NetFpQosPolicerThresholdMonValue, f3NetFpQosShaperThresholdValueLo=f3NetFpQosShaperThresholdValueLo, f3AccFlowPointAdminState=f3AccFlowPointAdminState, f3NetFpQosShaperStatsValid=f3NetFpQosShaperStatsValid, f3FpmCompliances=f3FpmCompliances, f3AccFlowPointCpdV2SSMDispType=f3AccFlowPointCpdV2SSMDispType, f3NetFlowPointStatsEntry=f3NetFlowPointStatsEntry, f3NetFlowPointThresholdValueLo=f3NetFlowPointThresholdValueLo, f3NetFlowPointAutoCIRPercentage=f3NetFlowPointAutoCIRPercentage, f3NetFlowPointSESFramesLossThresholdRatio=f3NetFlowPointSESFramesLossThresholdRatio, f3AccFlowPointStatsFdTxFb=f3AccFlowPointStatsFdTxFb, f3NetFlowPointSTagControl=f3NetFlowPointSTagControl, f3AccFlowPointStatsIBRMin=f3AccFlowPointStatsIBRMin, f3AccFpQosShaperStatsIntervalType=f3AccFpQosShaperStatsIntervalType, f3AccFlowPointCTagControl=f3AccFlowPointCTagControl, f3AccFlowPointCpdV2GVRPDispType=f3AccFlowPointCpdV2GVRPDispType, f3AccFlowPointCpdV2LACPDispType=f3AccFlowPointCpdV2LACPDispType, f3NetFpQosShaperStatsFD=f3NetFpQosShaperStatsFD, f3AccFlowPointCpdV2DtpDispType=f3AccFlowPointCpdV2DtpDispType, f3NetFlowPointIngressCOS=f3NetFlowPointIngressCOS, f3NetFpQosShaperThresholdVariable=f3NetFpQosShaperThresholdVariable, f3NetFpQosShaperBufferSize=f3NetFpQosShaperBufferSize, f3MPFlowHistoryTime=f3MPFlowHistoryTime, f3AccFlowPointHistoryFMG=f3AccFlowPointHistoryFMG, f3NetFpQosPolicerStatsABR=f3NetFpQosPolicerStatsABR, f3NetFpQosShaperPerfGroup=f3NetFpQosShaperPerfGroup, f3MPFlowStatsFDHairPin=f3MPFlowStatsFDHairPin, f3AccFlowPointCpdV2ELMIDispType=f3AccFlowPointCpdV2ELMIDispType, f3NetFlowPointStatsIBR=f3NetFlowPointStatsIBR, f3NetFpQosShaperStatsABRRL=f3NetFpQosShaperStatsABRRL, f3AccFpQosPolicerStatsBytesOut=f3AccFpQosPolicerStatsBytesOut, f3AccFlowPointThresholdInterval=f3AccFlowPointThresholdInterval, f3AccFpQosPolicerColorMode=f3AccFpQosPolicerColorMode, f3AccFpQosPolicerStatsFMY=f3AccFpQosPolicerStatsFMY, f3NetFpQosPolicerHistoryEntry=f3NetFpQosPolicerHistoryEntry, f3AccFlowPointStatsNumLearnTableFlushes=f3AccFlowPointStatsNumLearnTableFlushes, f3NetFpQosPolicerHistoryTable=f3NetFpQosPolicerHistoryTable, f3AccFpQosPolicerAdminState=f3AccFpQosPolicerAdminState, f3NetFlowPointCpdV2BPDUDispType=f3NetFlowPointCpdV2BPDUDispType, f3NetFpQosShaperSecondaryState=f3NetFpQosShaperSecondaryState, f3NetFlowPointCpdV2Mac0CDispType=f3NetFlowPointCpdV2Mac0CDispType, f3NetFpQosPolicerThresholdIndex=f3NetFpQosPolicerThresholdIndex, f3MPFlowHistoryEntry=f3MPFlowHistoryEntry, f3AccFpQosPolicerRowStatus=f3AccFpQosPolicerRowStatus, f3AccFlowPointHistoryFMCD=f3AccFlowPointHistoryFMCD, f3AccFlowPointCpdV2Mac00DispType=f3AccFlowPointCpdV2Mac00DispType, f3NetFpQosShaperStatsIntervalType=f3NetFpQosShaperStatsIntervalType, f3AccFpQosPolicerStatsFMRD=f3AccFpQosPolicerStatsFMRD, f3NetFlowPointRefPrioMapProfile=f3NetFlowPointRefPrioMapProfile, f3NetFlowPointStatsIBRRlMin=f3NetFlowPointStatsIBRRlMin, f3NetFpQosShaperEntry=f3NetFpQosShaperEntry, f3AccFlowPointStatsFMY=f3AccFlowPointStatsFMY, f3NetFlowPointThresholdCrossingAlert=f3NetFlowPointThresholdCrossingAlert, f3AccFpQosShaperHistoryIndex=f3AccFpQosShaperHistoryIndex, f3AccFlowPointPerfGroup=f3AccFlowPointPerfGroup, f3AccFpQosPolicerThresholdValueLo=f3AccFpQosPolicerThresholdValueLo, f3NetFpQosPolicerAlgorithm=f3NetFpQosPolicerAlgorithm, f3AccFlowPointAutoCIRPercentage=f3AccFlowPointAutoCIRPercentage, f3AccFpQosPolicerHistoryBytesIn=f3AccFpQosPolicerHistoryBytesIn, f3NetFpQosShaperOperationalState=f3NetFpQosShaperOperationalState, f3MPFlowThresholdIndex=f3MPFlowThresholdIndex, f3MPFlowPerfGroup=f3MPFlowPerfGroup, f3NetFpQosShaperHistoryFD=f3NetFpQosShaperHistoryFD, f3NetFlowPointRowStatus=f3NetFlowPointRowStatus, f3AccFlowPointCpdV2Index=f3AccFlowPointCpdV2Index, f3NetFpQosPolicerHistoryABR=f3NetFpQosPolicerHistoryABR, f3NetFpQosShaperStorageType=f3NetFpQosShaperStorageType, f3MPFlowStatsEntry=f3MPFlowStatsEntry, f3AccFlowPointCpdV2Mac04DispType=f3AccFlowPointCpdV2Mac04DispType, f3NetFpQosPolicerStatsEntry=f3NetFpQosPolicerStatsEntry, f3NetFlowPointHistoryFBCD=f3NetFlowPointHistoryFBCD, f3NetFlowPointCpdV2Mac05DispType=f3NetFlowPointCpdV2Mac05DispType, f3AccFlowPointCpdV2Mac03DispType=f3AccFlowPointCpdV2Mac03DispType, f3FpmConformance=f3FpmConformance, f3NetFpQosShaperStatsEntry=f3NetFpQosShaperStatsEntry, f3AccFlowPointStatsFBCD=f3AccFlowPointStatsFBCD, f3NetFlowPointStatsIBRRl=f3NetFlowPointStatsIBRRl, f3AccFpQosShaperStatsAction=f3AccFpQosShaperStatsAction, f3NetFpQosPolicerColorMode=f3NetFpQosPolicerColorMode, f3NetFpQosShaperStatsBREDD=f3NetFpQosShaperStatsBREDD, f3NetFlowPointBcastRateLimitSpeedHi=f3NetFlowPointBcastRateLimitSpeedHi, f3NetFpQosShaperStatsBT=f3NetFpQosShaperStatsBT, f3AccFlowPointStatsValid=f3AccFlowPointStatsValid, f3NetFpQosPolicerHistoryAction=f3NetFpQosPolicerHistoryAction, f3AccFpQosPolicerHistoryTime=f3AccFpQosPolicerHistoryTime, f3NetFlowPointFrameFwdEnabled=f3NetFlowPointFrameFwdEnabled, f3AccFlowPointCpdV2Entry=f3AccFlowPointCpdV2Entry, f3AccFlowPointStatsABRRx=f3AccFlowPointStatsABRRx, f3AccFlowPointHistoryEntry=f3AccFlowPointHistoryEntry, f3NetFpQosPolicerTable=f3NetFpQosPolicerTable, f3NetFpQosShaperCIRHi=f3NetFpQosShaperCIRHi, f3AccFpQosShaperHistoryFD=f3AccFpQosShaperHistoryFD, f3NetFlowPointMcastRateLimitSpeedLo=f3NetFlowPointMcastRateLimitSpeedLo, f3NetFlowPointHistoryIBRMin=f3NetFlowPointHistoryIBRMin, f3NetFlowPointMcastRateLimitEnabled=f3NetFlowPointMcastRateLimitEnabled, f3NetFlowPointStatsIntervalType=f3NetFlowPointStatsIntervalType, f3NetFpQosShaperThresholdIndex=f3NetFpQosShaperThresholdIndex, f3AccFlowPointHistoryIBRRlMax=f3AccFlowPointHistoryIBRRlMax, f3AccFlowPointCpdV2CdpDispType=f3AccFlowPointCpdV2CdpDispType, f3NetFlowPointOperationalState=f3NetFlowPointOperationalState, f3NetFlowPointStatsFdRxFb=f3NetFlowPointStatsFdRxFb, f3AccFpQosShaperHistoryBT=f3AccFpQosShaperHistoryBT, f3NetFlowPointVlanMemberAction=f3NetFlowPointVlanMemberAction, f3AccFlowPointHistoryFdRxFb=f3AccFlowPointHistoryFdRxFb, f3AccFpQosPolicerStatsEntry=f3AccFpQosPolicerStatsEntry, f3NetFpQosShaperThresholdCrossingAlert=f3NetFpQosShaperThresholdCrossingAlert, f3AccFlowPointHistoryFdicd=f3AccFlowPointHistoryFdicd, f3NetFlowPointCTagControl=f3NetFlowPointCTagControl, f3NetFpQosShaperHistoryBTD=f3NetFpQosShaperHistoryBTD, f3AccFlowPointCpdV2GMRPDispType=f3AccFlowPointCpdV2GMRPDispType, f3AccFpQosPolicerHistoryBytesOut=f3AccFpQosPolicerHistoryBytesOut, f3NetFlowPointLearningConfigEntry=f3NetFlowPointLearningConfigEntry, f3NetFlowPointHistoryIBRRl=f3NetFlowPointHistoryIBRRl, f3NetFlowPointTable=f3NetFlowPointTable, f3MPFlowSecureState=f3MPFlowSecureState, f3AccFlowPointLearningConfigAction=f3AccFlowPointLearningConfigAction, f3MPFlowStatsAction=f3MPFlowStatsAction, f3AccFlowPointCpdV2Mac06DispType=f3AccFlowPointCpdV2Mac06DispType, f3NetFlowPointHistoryIndex=f3NetFlowPointHistoryIndex, f3MPFlowStatsMacTableDiscards=f3MPFlowStatsMacTableDiscards, f3AccFlowPointCpdV2GARPDispType=f3AccFlowPointCpdV2GARPDispType, f3AccFlowPointCpdV2Mac09DispType=f3AccFlowPointCpdV2Mac09DispType, f3AccFlowPointCpdV2L2PTDispType=f3AccFlowPointCpdV2L2PTDispType, f3AccFlowPointThresholdCrossingAlert=f3AccFlowPointThresholdCrossingAlert, f3NetFlowPointStatsFTD=f3NetFlowPointStatsFTD, f3AccFpQosPolicerThresholdVariable=f3AccFpQosPolicerThresholdVariable, f3AccFpQosPolicerTable=f3AccFpQosPolicerTable, f3NetFlowPointHistoryValid=f3NetFlowPointHistoryValid, f3NetFpQosShaperStatsFTD=f3NetFpQosShaperStatsFTD, f3AccFpQosPolicerEBS=f3AccFpQosPolicerEBS, f3AccFlowPointHistoryFMY=f3AccFlowPointHistoryFMY, f3NetFpQosShaperHistoryIndex=f3NetFpQosShaperHistoryIndex, f3AccFpQosPolicerThresholdIndex=f3AccFpQosPolicerThresholdIndex, f3AccFlowpointSecureBlockingControl=f3AccFlowpointSecureBlockingControl, f3AccFpQosShaperThresholdInterval=f3AccFpQosShaperThresholdInterval, f3NetFpQosPolicerEIRHi=f3NetFpQosPolicerEIRHi, f3NetFlowPointCpdV2Group=f3NetFlowPointCpdV2Group, f3AccFlowPointCombinedRateLimitEnabled=f3AccFlowPointCombinedRateLimitEnabled, f3NetFlowPointCpdV2GARPDispType=f3NetFlowPointCpdV2GARPDispType, f3AccFpQosPolicerHistoryAction=f3AccFpQosPolicerHistoryAction, f3AccFlowPointCpdV2NearestLLDPDispType=f3AccFlowPointCpdV2NearestLLDPDispType, f3AccFpQosPolicerThresholdValueHi=f3AccFpQosPolicerThresholdValueHi, f3NetFlowPointGuaranteedBWLo=f3NetFlowPointGuaranteedBWLo, f3AccFpQosShaperHistoryFTD=f3AccFpQosShaperHistoryFTD, f3AccFpQosPolicerPerfGroup=f3AccFpQosPolicerPerfGroup, f3NetFlowPointCpdV2Entry=f3NetFlowPointCpdV2Entry, f3NetFpQosShaperStatsFREDD=f3NetFpQosShaperStatsFREDD, f3NetFpQosShaperThresholdEntry=f3NetFpQosShaperThresholdEntry, f3NetFpQosShaperStatsAction=f3NetFpQosShaperStatsAction, f3NetFlowPointCpdV2Mac0DDispType=f3NetFlowPointCpdV2Mac0DDispType, f3AccFlowpointSecureState=f3AccFlowpointSecureState, f3NetFlowPointStatsUAS=f3NetFlowPointStatsUAS, f3AccFpQosPolicerHistoryFMG=f3AccFpQosPolicerHistoryFMG, f3AccFlowPointHistoryIBRRl=f3AccFlowPointHistoryIBRRl, f3AccFpQosShaperThresholdCrossingAlert=f3AccFpQosShaperThresholdCrossingAlert, f3AccFlowPointHistoryTable=f3AccFlowPointHistoryTable, f3AccFpQosPolicerHistoryFMY=f3AccFpQosPolicerHistoryFMY, f3AccFpQosPolicerStatsIntervalType=f3AccFpQosPolicerStatsIntervalType, f3MPFlowHistoryMacTableDiscards=f3MPFlowHistoryMacTableDiscards, f3AccFlowPointCTagVlanPriority=f3AccFlowPointCTagVlanPriority, f3NetFlowPointStatsIBRRlMax=f3NetFlowPointStatsIBRRlMax, f3AccFlowPointCpdV2Mac0ADispType=f3AccFlowPointCpdV2Mac0ADispType, f3NetFpQosShaperHistoryFREDD=f3NetFpQosShaperHistoryFREDD, f3MPFlowThresholdTable=f3MPFlowThresholdTable, f3NetFpQosPolicerThresholdValueLo=f3NetFpQosPolicerThresholdValueLo, f3NetFlowPointCpdV2PvstpPlusDispType=f3NetFlowPointCpdV2PvstpPlusDispType, f3NetFlowPointCpdV2Mac02DispType=f3NetFlowPointCpdV2Mac02DispType, f3AccFlowPointIndex=f3AccFlowPointIndex, f3MPFlowStatsIndex=f3MPFlowStatsIndex, f3AccFlowPointCpdV2CustomerLLDPDispType=f3AccFlowPointCpdV2CustomerLLDPDispType, f3AccFlowPointCpdV2Mac0DDispType=f3AccFlowPointCpdV2Mac0DDispType, f3AccFpQosShaperHistoryTime=f3AccFpQosShaperHistoryTime, f3AccFlowPointCpdV2Mac02DispType=f3AccFlowPointCpdV2Mac02DispType, f3NetFlowPointCpdV2Mac09DispType=f3NetFlowPointCpdV2Mac09DispType, f3AccFlowPointCpdV2PagpDispType=f3AccFlowPointCpdV2PagpDispType, f3NetFpQosShaperCOS=f3NetFpQosShaperCOS, f3AccFpQosShaperStatsABRRL=f3AccFpQosShaperStatsABRRL, f3NetFpQosPolicerSecondaryState=f3NetFpQosPolicerSecondaryState, f3AccFlowPointStatsFMCD=f3AccFlowPointStatsFMCD, f3AccFlowPointOperationalState=f3AccFlowPointOperationalState, f3NetFlowpointSecureState=f3NetFlowpointSecureState, f3NetFpQosPolicerIndex=f3NetFpQosPolicerIndex, f3AccFlowPointStatsSES=f3AccFlowPointStatsSES, f3AccFlowPointHistoryIndex=f3AccFlowPointHistoryIndex, f3AccFpQosShaperBufferSize=f3AccFpQosShaperBufferSize, f3NetFlowPointMaximumBWLo=f3NetFlowPointMaximumBWLo, f3AccFlowPointCpdV2IslDispType=f3AccFlowPointCpdV2IslDispType, f3NetFpQosShaperCBS=f3NetFpQosShaperCBS, f3NetFlowpointRefConnectGuardFlowObject=f3NetFlowpointRefConnectGuardFlowObject, f3NetFlowPointStatsFMCD=f3NetFlowPointStatsFMCD, f3NetFlowPointCombinedRateLimitSpeedLo=f3NetFlowPointCombinedRateLimitSpeedLo, f3AccFpQosShaperStatsFREDD=f3AccFpQosShaperStatsFREDD, f3NetFpQosPolicerEntry=f3NetFpQosPolicerEntry, f3NetFpQosPolicerCBS=f3NetFpQosPolicerCBS, f3AccFlowPointThresholdMonValue=f3AccFlowPointThresholdMonValue, f3MPFlowHistoryValid=f3MPFlowHistoryValid, f3AccFlowPointIngressUntaggedFrameEnabled=f3AccFlowPointIngressUntaggedFrameEnabled, f3AccFlowPointVlanMemberAction=f3AccFlowPointVlanMemberAction, f3MPFlowHistoryFDProtLearn=f3MPFlowHistoryFDProtLearn, f3NetFpQosPolicerThresholdTable=f3NetFpQosPolicerThresholdTable, f3NetFlowPointHistoryEntry=f3NetFlowPointHistoryEntry, f3AccFpQosShaperTable=f3AccFpQosShaperTable, f3AccFpQosShaperStatsBREDD=f3AccFpQosShaperStatsBREDD, f3AccFpQosShaperEntry=f3AccFpQosShaperEntry, f3AccFpQosShaperHistoryBTD=f3AccFpQosShaperHistoryBTD, f3NetFpQosPolicerThresholdEntry=f3NetFpQosPolicerThresholdEntry, f3NetFpQosShaperEBS=f3NetFpQosShaperEBS)
mibBuilder.exportSymbols("F3-FPM-MIB", f3NetFlowPointHistoryFdRxFb=f3NetFlowPointHistoryFdRxFb, f3NetFlowPointStatsFBCD=f3NetFlowPointStatsFBCD, f3AccFlowPointCpdV2LACPMarkerDispType=f3AccFlowPointCpdV2LACPMarkerDispType, f3NetFpQosShaperStatsIndex=f3NetFpQosShaperStatsIndex, f3AccFpQosPolicerStatsFMG=f3AccFpQosPolicerStatsFMG, f3AccFlowPointGroup=f3AccFlowPointGroup, f3AccFpQosShaperThresholdValueLo=f3AccFpQosShaperThresholdValueLo, f3AccFlowPointThresholdTable=f3AccFlowPointThresholdTable, f3AccFlowPointMcastRateLimitSpeedLo=f3AccFlowPointMcastRateLimitSpeedLo, f3NetFlowPointHistoryFTD=f3NetFlowPointHistoryFTD, f3AccFpQosShaperRowStatus=f3AccFpQosShaperRowStatus, f3AccFpQosShaperThresholdTable=f3AccFpQosShaperThresholdTable, f3NetFlowPointCpdV2GMRPDispType=f3NetFlowPointCpdV2GMRPDispType, f3NetFlowPointCpdV2Mac0BDispType=f3NetFlowPointCpdV2Mac0BDispType, f3MPFlowStatsFDStaticBlock=f3MPFlowStatsFDStaticBlock, f3NetFlowPointHistoryFMG=f3NetFlowPointHistoryFMG, f3AccFlowPointCombinedRateLimitSpeedLo=f3AccFlowPointCombinedRateLimitSpeedLo, f3AccFlowPointHistoryFMRD=f3AccFlowPointHistoryFMRD, f3AccFlowPointSTagControl=f3AccFlowPointSTagControl, f3AccFlowPointThresholdValueHi=f3AccFlowPointThresholdValueHi, f3AccFlowPointHistoryABRRLRx=f3AccFlowPointHistoryABRRLRx, f3AccFlowPointCpdV2Table=f3AccFlowPointCpdV2Table, f3AccFlowPointStatsTable=f3AccFlowPointStatsTable, f3AccFlowPointRefPrioMapProfile=f3AccFlowPointRefPrioMapProfile, f3AccFpQosPolicerHistoryFMRD=f3AccFpQosPolicerHistoryFMRD, f3NetFlowPointCpdV2Index=f3NetFlowPointCpdV2Index, f3NetFlowPointCpdV2Mac0ADispType=f3NetFlowPointCpdV2Mac0ADispType, f3AccFlowPointLearningConfigLearningEnabled=f3AccFlowPointLearningConfigLearningEnabled, f3NetFpQosShaperHistoryBREDD=f3NetFpQosShaperHistoryBREDD, f3FpmPerfNotifGroup=f3FpmPerfNotifGroup, f3AccFpQosPolicerStatsIndex=f3AccFpQosPolicerStatsIndex, f3AccFpQosPolicerCouplingFlag=f3AccFpQosPolicerCouplingFlag, f3AccFlowPointStatsEntry=f3AccFlowPointStatsEntry, f3MPFlowThresholdVariable=f3MPFlowThresholdVariable, f3AccFpQosPolicerHistoryValid=f3AccFpQosPolicerHistoryValid, f3AccFpQosPolicerCIRHi=f3AccFpQosPolicerCIRHi, f3NetFlowPointCpdV2VtpDispType=f3NetFlowPointCpdV2VtpDispType, f3AccFpQosShaperAdminState=f3AccFpQosShaperAdminState, f3NetFlowPointLoopAvoidance=f3NetFlowPointLoopAvoidance, f3AccFlowpointRefConnectGuardFlowObject=f3AccFlowpointRefConnectGuardFlowObject, f3NetFpQosPolicerThresholdCrossingAlert=f3NetFpQosPolicerThresholdCrossingAlert, f3AccFlowPointSTagVlanId=f3AccFlowPointSTagVlanId, f3AccFlowPointCpdV2PauseDispType=f3AccFlowPointCpdV2PauseDispType, f3NetFpQosShaperThresholdInterval=f3NetFpQosShaperThresholdInterval, f3NetFlowPointGuaranteedBWHi=f3NetFlowPointGuaranteedBWHi, f3NetFlowPointStatsL2CPFD=f3NetFlowPointStatsL2CPFD, f3NetFlowPointStatsTable=f3NetFlowPointStatsTable, f3AccFlowPointBcastRateLimitSpeedLo=f3AccFlowPointBcastRateLimitSpeedLo, f3NetFlowPointCpdV2IslDispType=f3NetFlowPointCpdV2IslDispType, f3NetFlowPointLearningConfigLearningEnabled=f3NetFlowPointLearningConfigLearningEnabled, f3AccFlowPointStatsBytesIn=f3AccFlowPointStatsBytesIn, f3AccFlowPointIngressMultiCOSEnabled=f3AccFlowPointIngressMultiCOSEnabled, f3NetFlowPointHistoryIBRMax=f3NetFlowPointHistoryIBRMax, f3NetFpQosPolicerStatsBytesIn=f3NetFpQosPolicerStatsBytesIn, f3NetFlowPointEntry=f3NetFlowPointEntry, f3NetFpQosShaperThresholdTable=f3NetFpQosShaperThresholdTable, f3FpmConfigObjects=f3FpmConfigObjects, f3NetFlowPointStatsValid=f3NetFlowPointStatsValid, f3NetFlowPointCpdV2SSMDispType=f3NetFlowPointCpdV2SSMDispType, f3AccFlowPointHistoryABRRx=f3AccFlowPointHistoryABRRx, f3AccFlowPointTable=f3AccFlowPointTable, f3AccFpQosShaperPerfGroup=f3AccFpQosShaperPerfGroup, f3NetFlowPointStatsBytesOut=f3NetFlowPointStatsBytesOut, f3AccFlowPointSecondaryState=f3AccFlowPointSecondaryState, f3AccFpQosShaperHistoryEntry=f3AccFpQosShaperHistoryEntry, f3NetFlowPointCpdV2LANBridgesDispType=f3NetFlowPointCpdV2LANBridgesDispType, f3AccFpQosPolicerStatsABR=f3AccFpQosPolicerStatsABR, f3NetFlowPointAdminState=f3NetFlowPointAdminState, f3MPFlowThresholdValueLo=f3MPFlowThresholdValueLo, f3AccFlowPointStatsFdicd=f3AccFlowPointStatsFdicd, f3AccFlowPointHistoryFBCD=f3AccFlowPointHistoryFBCD, f3AccFlowPointEgressShapingType=f3AccFlowPointEgressShapingType, f3AccFlowPointMcastRateLimitEnabled=f3AccFlowPointMcastRateLimitEnabled, f3AccFpQosShaperStatsTable=f3AccFpQosShaperStatsTable, f3NetFlowPointCpdV2Mac0EDispType=f3NetFlowPointCpdV2Mac0EDispType, f3AccFlowPointThresholdEntry=f3AccFlowPointThresholdEntry, f3NetFlowPointCpdV2CdpDispType=f3NetFlowPointCpdV2CdpDispType, f3MPFlowExtTable=f3MPFlowExtTable, f3AccFlowPointCpdV2PvstpPlusDispType=f3AccFlowPointCpdV2PvstpPlusDispType, f3AccFlowPointCpdV2NonTpmrLLDPDispType=f3AccFlowPointCpdV2NonTpmrLLDPDispType, f3AccFpQosShaperStatsBTD=f3AccFpQosShaperStatsBTD, f3AccFpQosShaperStorageType=f3AccFpQosShaperStorageType, f3NetFlowPointCpdV2DtpDispType=f3NetFlowPointCpdV2DtpDispType, f3AccFlowPointStorageType=f3AccFlowPointStorageType, f3NetFlowPointEgressOuterTagPrioMapEnabled=f3NetFlowPointEgressOuterTagPrioMapEnabled, f3NetFpQosPolicerHistoryTime=f3NetFpQosPolicerHistoryTime, f3NetFlowPointEgressShapingType=f3NetFlowPointEgressShapingType, f3AccFlowPointCpdV2VlanBridgeDispType=f3AccFlowPointCpdV2VlanBridgeDispType, f3AccFlowPointCpdV2UplinkFastDispType=f3AccFlowPointCpdV2UplinkFastDispType, f3AccFlowPointRowStatus=f3AccFlowPointRowStatus, f3NetFlowPointHistoryTime=f3NetFlowPointHistoryTime, f3MPFlowRefConnectGuardFlowObject=f3MPFlowRefConnectGuardFlowObject, f3NetFpQosPolicerCouplingFlag=f3NetFpQosPolicerCouplingFlag, f3NetFlowPointCpdV2Mac03DispType=f3NetFlowPointCpdV2Mac03DispType, f3AccFlowPointHistoryTime=f3AccFlowPointHistoryTime, f3AccFpQosShaperStatsEntry=f3AccFpQosShaperStatsEntry)
