#
# PySNMP MIB module ICOTERA-I6800-SERIES (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/icotera/ICOTERA-I6800-SERIES-MIB
# Produced by pysmi-1.1.12 at Fri Jul 19 10:04:03 2024
# On host fv-az1251-884 platform Linux version 6.5.0-1023-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter64, NotificationType, Counter32, enterprises, Gauge32, ModuleIdentity, Integer32, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "NotificationType", "Counter32", "enterprises", "Gauge32", "ModuleIdentity", "Integer32", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "ObjectIdentity", "MibIdentifier")
TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DisplayString")
icotera = ModuleIdentity((1, 3, 6, 1, 4, 1, 29865))
icotera.setRevisions(('2016-03-11 13:07', '2015-08-26 12:40', '2015-08-26 08:15', '2015-08-21 10:12', '2015-08-10 14:33', '2015-06-22 14:49', '2015-03-12 12:27',))
if mibBuilder.loadTexts: icotera.setLastUpdated('201603111307Z')
if mibBuilder.loadTexts: icotera.setOrganization('Icotera A/S')
ictIGW4k = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12))
if mibBuilder.loadTexts: ictIGW4k.setStatus('current')
ictMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 29865, 12, 2))
ictServices = MibIdentifier((1, 3, 6, 1, 4, 1, 29865, 12, 3))
ictDuplex = MibIdentifier((1, 3, 6, 1, 4, 1, 29865, 12, 4))
ictReset = MibIdentifier((1, 3, 6, 1, 4, 1, 29865, 12, 5))
ictDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 29865, 12, 6))
ictCatv = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12, 3, 1))
if mibBuilder.loadTexts: ictCatv.setStatus('current')
ictCatvMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12, 3, 1, 1))
if mibBuilder.loadTexts: ictCatvMib.setStatus('current')
catvModuleAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: catvModuleAdminStatus.setStatus('current')
catvModuleFilter = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("pkg1", 1), ("pkg2", 2), ("pkg3", 3), ("pkg4", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: catvModuleFilter.setStatus('current')
catvModuleRflevel = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("auto", 0), ("low", 1), ("medium", 2), ("high", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: catvModuleRflevel.setStatus('current')
catvModuleLowSignal = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catvModuleLowSignal.setStatus('current')
catvModuleSignalDetected = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: catvModuleSignalDetected.setStatus('current')
catvModulePowerLevel = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catvModulePowerLevel.setStatus('current')
catvModuleRfOutputLevel = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catvModuleRfOutputLevel.setStatus('current')
catvModuleOmi = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: catvModuleOmi.setStatus('current')
ictVoip = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12, 3, 2))
if mibBuilder.loadTexts: ictVoip.setStatus('current')
ictVoipMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12, 3, 2, 1))
if mibBuilder.loadTexts: ictVoipMib.setStatus('current')
voipFXSport1 = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 3, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voipFXSport1.setStatus('current')
voipFXSport2 = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voipFXSport2.setStatus('current')
ictFacRst = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12, 5, 1))
if mibBuilder.loadTexts: ictFacRst.setStatus('current')
ictFacRstMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12, 5, 1, 1))
if mibBuilder.loadTexts: ictFacRstMib.setStatus('current')
performFactoryReset = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("noActionRequested", 0), ("makeFactoryreset", 1), ("someErrorOccured", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: performFactoryReset.setStatus('current')
ictMgmtMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12, 2, 1))
if mibBuilder.loadTexts: ictMgmtMib.setStatus('current')
ictFwUpg = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12, 2, 1, 1))
if mibBuilder.loadTexts: ictFwUpg.setStatus('current')
ictCfgUpdate = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12, 2, 1, 2))
if mibBuilder.loadTexts: ictCfgUpdate.setStatus('current')
ictReboot = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12, 2, 1, 3))
if mibBuilder.loadTexts: ictReboot.setStatus('current')
upgUrl = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upgUrl.setStatus('current')
upgExecute = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notUpgrading", 0), ("startUpgrade", 1), ("validatingUpgrade-CheckErrorCodeIfFailed", 2), ("someErrorOccured", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upgExecute.setStatus('current')
upgStatus = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upgStatus.setStatus('current')
cfgTftpPath = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 2, 1, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfgTftpPath.setStatus('current')
cfgExecute = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("notUpdating", 0), ("startUpdate", 1), ("someErrorOccured", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfgExecute.setStatus('current')
cfgStatus = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 2, 1, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfgStatus.setStatus('current')
performCpeReboot = MibScalar((1, 3, 6, 1, 4, 1, 29865, 12, 2, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("noActionRequested", 0), ("makeReboot", 1), ("someErrorOccured", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: performCpeReboot.setStatus('current')
ictDHCPsrv = MibTable((1, 3, 6, 1, 4, 1, 29865, 12, 6, 1), )
if mibBuilder.loadTexts: ictDHCPsrv.setStatus('current')
ictDHCPsrvLeases = MibTableRow((1, 3, 6, 1, 4, 1, 29865, 12, 6, 1, 1), ).setIndexNames((0, "ICOTERA-I6800-SERIES", "ictDHCPsrvIndex"))
if mibBuilder.loadTexts: ictDHCPsrvLeases.setStatus('current')
ictDHCPsrvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 29865, 12, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ictDHCPsrvIndex.setStatus('current')
ictMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 29865, 12, 6, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ictMacAddress.setStatus('current')
ictExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 29865, 12, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ictExpire.setStatus('current')
ictIPaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 29865, 12, 6, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ictIPaddress.setStatus('current')
ictHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 29865, 12, 6, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ictHostName.setStatus('current')
ictDuplexMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 29865, 12, 4, 15))
if mibBuilder.loadTexts: ictDuplexMib.setStatus('current')
duplexConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 29865, 12, 4, 15, 1))
ifDuplexTable = MibTable((1, 3, 6, 1, 4, 1, 29865, 12, 4, 15, 1, 1), )
if mibBuilder.loadTexts: ifDuplexTable.setStatus('current')
ifDuplexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 29865, 12, 4, 15, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ifDuplexEntry.setStatus('current')
ifDuplexIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 29865, 12, 4, 15, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifDuplexIndex.setStatus('current')
ifDuplexStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 29865, 12, 4, 15, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("halfDuplex", 2), ("fullDuplex", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifDuplexStatus.setStatus('current')
mibBuilder.exportSymbols("ICOTERA-I6800-SERIES", cfgStatus=cfgStatus, performFactoryReset=performFactoryReset, ictDHCPsrvLeases=ictDHCPsrvLeases, ictServices=ictServices, ictVoipMib=ictVoipMib, duplexConfig=duplexConfig, ictDHCPsrvIndex=ictDHCPsrvIndex, catvModuleRflevel=catvModuleRflevel, ictIPaddress=ictIPaddress, cfgTftpPath=cfgTftpPath, ictIGW4k=ictIGW4k, ictDHCPsrv=ictDHCPsrv, ictVoip=ictVoip, performCpeReboot=performCpeReboot, catvModuleSignalDetected=catvModuleSignalDetected, ictCfgUpdate=ictCfgUpdate, cfgExecute=cfgExecute, catvModuleAdminStatus=catvModuleAdminStatus, ifDuplexStatus=ifDuplexStatus, ictDuplex=ictDuplex, ictMacAddress=ictMacAddress, ifDuplexTable=ifDuplexTable, ictExpire=ictExpire, catvModuleRfOutputLevel=catvModuleRfOutputLevel, voipFXSport2=voipFXSport2, ifDuplexIndex=ifDuplexIndex, catvModuleFilter=catvModuleFilter, ictFacRst=ictFacRst, ictCatvMib=ictCatvMib, ifDuplexEntry=ifDuplexEntry, voipFXSport1=voipFXSport1, ictHostName=ictHostName, ictDhcp=ictDhcp, icotera=icotera, catvModuleOmi=catvModuleOmi, upgUrl=upgUrl, ictReset=ictReset, catvModulePowerLevel=catvModulePowerLevel, upgStatus=upgStatus, ictFwUpg=ictFwUpg, ictCatv=ictCatv, ictMgmt=ictMgmt, ictReboot=ictReboot, ictMgmtMib=ictMgmtMib, ictDuplexMib=ictDuplexMib, catvModuleLowSignal=catvModuleLowSignal, PYSNMP_MODULE_ID=icotera, ictFacRstMib=ictFacRstMib, upgExecute=upgExecute)
