#
# PySNMP MIB module RFC1271-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/output/asn1/RFC1271-MIB
# Produced by pysmi-1.1.12 at Wed May 29 07:13:36 2024
# On host fv-az1114-382 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, ObjectIdentity, Counter64, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, Integer32, MibIdentifier, mib_2, Gauge32, Unsigned32, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "Counter64", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "Integer32", "MibIdentifier", "mib-2", "Gauge32", "Unsigned32", "ModuleIdentity", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rmon = MibIdentifier((1, 3, 6, 1, 2, 1, 16))
class OwnerString(DisplayString):
    pass

class EntryStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4))

statistics = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 1))
history = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 2))
alarm = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 3))
hosts = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 4))
hostTopN = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 5))
matrix = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 6))
filter = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 7))
capture = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 8))
event = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 9))
etherStatsTable = MibTable((1, 3, 6, 1, 2, 1, 16, 1, 1), )
if mibBuilder.loadTexts: etherStatsTable.setStatus('mandatory')
etherStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 1, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "etherStatsIndex"))
if mibBuilder.loadTexts: etherStatsEntry.setStatus('mandatory')
etherStatsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsIndex.setStatus('mandatory')
etherStatsDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherStatsDataSource.setStatus('mandatory')
etherStatsDropEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsDropEvents.setStatus('mandatory')
etherStatsOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsOctets.setStatus('mandatory')
etherStatsPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsPkts.setStatus('mandatory')
etherStatsBroadcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsBroadcastPkts.setStatus('mandatory')
etherStatsMulticastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsMulticastPkts.setStatus('mandatory')
etherStatsCRCAlignErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsCRCAlignErrors.setStatus('mandatory')
etherStatsUndersizePkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsUndersizePkts.setStatus('mandatory')
etherStatsOversizePkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsOversizePkts.setStatus('mandatory')
etherStatsFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsFragments.setStatus('mandatory')
etherStatsJabbers = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsJabbers.setStatus('mandatory')
etherStatsCollisions = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsCollisions.setStatus('mandatory')
etherStatsPkts64Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsPkts64Octets.setStatus('mandatory')
etherStatsPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsPkts65to127Octets.setStatus('mandatory')
etherStatsPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsPkts128to255Octets.setStatus('mandatory')
etherStatsPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsPkts256to511Octets.setStatus('mandatory')
etherStatsPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsPkts512to1023Octets.setStatus('mandatory')
etherStatsPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsPkts1024to1518Octets.setStatus('mandatory')
etherStatsOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 20), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherStatsOwner.setStatus('mandatory')
etherStatsStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 1, 1, 21), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etherStatsStatus.setStatus('mandatory')
historyControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 2, 1), )
if mibBuilder.loadTexts: historyControlTable.setStatus('mandatory')
historyControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 2, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "historyControlIndex"))
if mibBuilder.loadTexts: historyControlEntry.setStatus('mandatory')
historyControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyControlIndex.setStatus('mandatory')
historyControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: historyControlDataSource.setStatus('mandatory')
historyControlBucketsRequested = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: historyControlBucketsRequested.setStatus('mandatory')
historyControlBucketsGranted = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyControlBucketsGranted.setStatus('mandatory')
historyControlInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: historyControlInterval.setStatus('mandatory')
historyControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 6), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: historyControlOwner.setStatus('mandatory')
historyControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 1, 1, 7), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: historyControlStatus.setStatus('mandatory')
etherHistoryTable = MibTable((1, 3, 6, 1, 2, 1, 16, 2, 2), )
if mibBuilder.loadTexts: etherHistoryTable.setStatus('mandatory')
etherHistoryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 2, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "etherHistoryIndex"), (0, "RFC1271-MIB", "etherHistorySampleIndex"))
if mibBuilder.loadTexts: etherHistoryEntry.setStatus('mandatory')
etherHistoryIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryIndex.setStatus('mandatory')
etherHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistorySampleIndex.setStatus('mandatory')
etherHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryIntervalStart.setStatus('mandatory')
etherHistoryDropEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryDropEvents.setStatus('mandatory')
etherHistoryOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryOctets.setStatus('mandatory')
etherHistoryPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryPkts.setStatus('mandatory')
etherHistoryBroadcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryBroadcastPkts.setStatus('mandatory')
etherHistoryMulticastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryMulticastPkts.setStatus('mandatory')
etherHistoryCRCAlignErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryCRCAlignErrors.setStatus('mandatory')
etherHistoryUndersizePkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryUndersizePkts.setStatus('mandatory')
etherHistoryOversizePkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryOversizePkts.setStatus('mandatory')
etherHistoryFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryFragments.setStatus('mandatory')
etherHistoryJabbers = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryJabbers.setStatus('mandatory')
etherHistoryCollisions = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryCollisions.setStatus('mandatory')
etherHistoryUtilization = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryUtilization.setStatus('mandatory')
alarmTable = MibTable((1, 3, 6, 1, 2, 1, 16, 3, 1), )
if mibBuilder.loadTexts: alarmTable.setStatus('mandatory')
alarmEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 3, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "alarmIndex"))
if mibBuilder.loadTexts: alarmEntry.setStatus('mandatory')
alarmIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmIndex.setStatus('mandatory')
alarmInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmInterval.setStatus('mandatory')
alarmVariable = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmVariable.setStatus('mandatory')
alarmSampleType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("absoluteValue", 1), ("deltaValue", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmSampleType.setStatus('mandatory')
alarmValue = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmValue.setStatus('mandatory')
alarmStartupAlarm = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("risingAlarm", 1), ("fallingAlarm", 2), ("risingOrFallingAlarm", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmStartupAlarm.setStatus('mandatory')
alarmRisingThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmRisingThreshold.setStatus('mandatory')
alarmFallingThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmFallingThreshold.setStatus('mandatory')
alarmRisingEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmRisingEventIndex.setStatus('mandatory')
alarmFallingEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmFallingEventIndex.setStatus('mandatory')
alarmOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 11), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmOwner.setStatus('mandatory')
alarmStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 3, 1, 1, 12), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmStatus.setStatus('mandatory')
hostControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 4, 1), )
if mibBuilder.loadTexts: hostControlTable.setStatus('mandatory')
hostControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 4, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "hostControlIndex"))
if mibBuilder.loadTexts: hostControlEntry.setStatus('mandatory')
hostControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostControlIndex.setStatus('mandatory')
hostControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostControlDataSource.setStatus('mandatory')
hostControlTableSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostControlTableSize.setStatus('mandatory')
hostControlLastDeleteTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostControlLastDeleteTime.setStatus('mandatory')
hostControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 5), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostControlOwner.setStatus('mandatory')
hostControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 1, 1, 6), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostControlStatus.setStatus('mandatory')
hostTable = MibTable((1, 3, 6, 1, 2, 1, 16, 4, 2), )
if mibBuilder.loadTexts: hostTable.setStatus('mandatory')
hostEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 4, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "hostIndex"), (0, "RFC1271-MIB", "hostAddress"))
if mibBuilder.loadTexts: hostEntry.setStatus('mandatory')
hostAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostAddress.setStatus('mandatory')
hostCreationOrder = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostCreationOrder.setStatus('mandatory')
hostIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostIndex.setStatus('mandatory')
hostInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostInPkts.setStatus('mandatory')
hostOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOutPkts.setStatus('mandatory')
hostInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostInOctets.setStatus('mandatory')
hostOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOutOctets.setStatus('mandatory')
hostOutErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOutErrors.setStatus('mandatory')
hostOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOutBroadcastPkts.setStatus('mandatory')
hostOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOutMulticastPkts.setStatus('mandatory')
hostTimeTable = MibTable((1, 3, 6, 1, 2, 1, 16, 4, 3), )
if mibBuilder.loadTexts: hostTimeTable.setStatus('mandatory')
hostTimeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 4, 3, 1), ).setIndexNames((0, "RFC1271-MIB", "hostTimeIndex"), (0, "RFC1271-MIB", "hostTimeCreationOrder"))
if mibBuilder.loadTexts: hostTimeEntry.setStatus('mandatory')
hostTimeAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeAddress.setStatus('mandatory')
hostTimeCreationOrder = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeCreationOrder.setStatus('mandatory')
hostTimeIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeIndex.setStatus('mandatory')
hostTimeInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeInPkts.setStatus('mandatory')
hostTimeOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeOutPkts.setStatus('mandatory')
hostTimeInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeInOctets.setStatus('mandatory')
hostTimeOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeOutOctets.setStatus('mandatory')
hostTimeOutErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeOutErrors.setStatus('mandatory')
hostTimeOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeOutBroadcastPkts.setStatus('mandatory')
hostTimeOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeOutMulticastPkts.setStatus('mandatory')
hostTopNControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 5, 1), )
if mibBuilder.loadTexts: hostTopNControlTable.setStatus('mandatory')
hostTopNControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 5, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "hostTopNControlIndex"))
if mibBuilder.loadTexts: hostTopNControlEntry.setStatus('mandatory')
hostTopNControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNControlIndex.setStatus('mandatory')
hostTopNHostIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostTopNHostIndex.setStatus('mandatory')
hostTopNRateBase = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("hostTopNInPkts", 1), ("hostTopNOutPkts", 2), ("hostTopNInOctets", 3), ("hostTopNOutOctets", 4), ("hostTopNOutErrors", 5), ("hostTopNOutBroadcastPkts", 6), ("hostTopNOutMulticastPkts", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostTopNRateBase.setStatus('mandatory')
hostTopNTimeRemaining = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostTopNTimeRemaining.setStatus('mandatory')
hostTopNDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNDuration.setStatus('mandatory')
hostTopNRequestedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 6), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostTopNRequestedSize.setStatus('mandatory')
hostTopNGrantedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNGrantedSize.setStatus('mandatory')
hostTopNStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNStartTime.setStatus('mandatory')
hostTopNOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 9), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostTopNOwner.setStatus('mandatory')
hostTopNStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 10), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostTopNStatus.setStatus('mandatory')
hostTopNTable = MibTable((1, 3, 6, 1, 2, 1, 16, 5, 2), )
if mibBuilder.loadTexts: hostTopNTable.setStatus('mandatory')
hostTopNEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 5, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "hostTopNReport"), (0, "RFC1271-MIB", "hostTopNIndex"))
if mibBuilder.loadTexts: hostTopNEntry.setStatus('mandatory')
hostTopNReport = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNReport.setStatus('mandatory')
hostTopNIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNIndex.setStatus('mandatory')
hostTopNAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNAddress.setStatus('mandatory')
hostTopNRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNRate.setStatus('mandatory')
matrixControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 6, 1), )
if mibBuilder.loadTexts: matrixControlTable.setStatus('mandatory')
matrixControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 6, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "matrixControlIndex"))
if mibBuilder.loadTexts: matrixControlEntry.setStatus('mandatory')
matrixControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixControlIndex.setStatus('mandatory')
matrixControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: matrixControlDataSource.setStatus('mandatory')
matrixControlTableSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixControlTableSize.setStatus('mandatory')
matrixControlLastDeleteTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixControlLastDeleteTime.setStatus('mandatory')
matrixControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 5), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: matrixControlOwner.setStatus('mandatory')
matrixControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 1, 1, 6), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: matrixControlStatus.setStatus('mandatory')
matrixSDTable = MibTable((1, 3, 6, 1, 2, 1, 16, 6, 2), )
if mibBuilder.loadTexts: matrixSDTable.setStatus('mandatory')
matrixSDEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 6, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "matrixSDIndex"), (0, "RFC1271-MIB", "matrixSDSourceAddress"), (0, "RFC1271-MIB", "matrixSDDestAddress"))
if mibBuilder.loadTexts: matrixSDEntry.setStatus('mandatory')
matrixSDSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDSourceAddress.setStatus('mandatory')
matrixSDDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDDestAddress.setStatus('mandatory')
matrixSDIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDIndex.setStatus('mandatory')
matrixSDPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDPkts.setStatus('mandatory')
matrixSDOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDOctets.setStatus('mandatory')
matrixSDErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDErrors.setStatus('mandatory')
matrixDSTable = MibTable((1, 3, 6, 1, 2, 1, 16, 6, 3), )
if mibBuilder.loadTexts: matrixDSTable.setStatus('mandatory')
matrixDSEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 6, 3, 1), ).setIndexNames((0, "RFC1271-MIB", "matrixDSIndex"), (0, "RFC1271-MIB", "matrixDSDestAddress"), (0, "RFC1271-MIB", "matrixDSSourceAddress"))
if mibBuilder.loadTexts: matrixDSEntry.setStatus('mandatory')
matrixDSSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSSourceAddress.setStatus('mandatory')
matrixDSDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSDestAddress.setStatus('mandatory')
matrixDSIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSIndex.setStatus('mandatory')
matrixDSPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSPkts.setStatus('mandatory')
matrixDSOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSOctets.setStatus('mandatory')
matrixDSErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSErrors.setStatus('mandatory')
filterTable = MibTable((1, 3, 6, 1, 2, 1, 16, 7, 1), )
if mibBuilder.loadTexts: filterTable.setStatus('mandatory')
filterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 7, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "filterIndex"))
if mibBuilder.loadTexts: filterEntry.setStatus('mandatory')
filterIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterIndex.setStatus('mandatory')
filterChannelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterChannelIndex.setStatus('mandatory')
filterPktDataOffset = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterPktDataOffset.setStatus('mandatory')
filterPktData = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterPktData.setStatus('mandatory')
filterPktDataMask = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterPktDataMask.setStatus('mandatory')
filterPktDataNotMask = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterPktDataNotMask.setStatus('mandatory')
filterPktStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterPktStatus.setStatus('mandatory')
filterPktStatusMask = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterPktStatusMask.setStatus('mandatory')
filterPktStatusNotMask = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterPktStatusNotMask.setStatus('mandatory')
filterOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 10), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterOwner.setStatus('mandatory')
filterStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 1, 1, 11), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterStatus.setStatus('mandatory')
channelTable = MibTable((1, 3, 6, 1, 2, 1, 16, 7, 2), )
if mibBuilder.loadTexts: channelTable.setStatus('mandatory')
channelEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 7, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "channelIndex"))
if mibBuilder.loadTexts: channelEntry.setStatus('mandatory')
channelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelIndex.setStatus('mandatory')
channelIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelIfIndex.setStatus('mandatory')
channelAcceptType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("acceptMatched", 1), ("acceptFailed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelAcceptType.setStatus('mandatory')
channelDataControl = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelDataControl.setStatus('mandatory')
channelTurnOnEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelTurnOnEventIndex.setStatus('mandatory')
channelTurnOffEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelTurnOffEventIndex.setStatus('mandatory')
channelEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelEventIndex.setStatus('mandatory')
channelEventStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("eventReady", 1), ("eventFired", 2), ("eventAlwaysReady", 3))).clone('eventReady')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelEventStatus.setStatus('mandatory')
channelMatches = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelMatches.setStatus('mandatory')
channelDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelDescription.setStatus('mandatory')
channelOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 11), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelOwner.setStatus('mandatory')
channelStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 2, 1, 12), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelStatus.setStatus('mandatory')
bufferControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 8, 1), )
if mibBuilder.loadTexts: bufferControlTable.setStatus('mandatory')
bufferControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 8, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "bufferControlIndex"))
if mibBuilder.loadTexts: bufferControlEntry.setStatus('mandatory')
bufferControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferControlIndex.setStatus('mandatory')
bufferControlChannelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bufferControlChannelIndex.setStatus('mandatory')
bufferControlFullStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("spaceAvailable", 1), ("full", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferControlFullStatus.setStatus('mandatory')
bufferControlFullAction = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lockWhenFull", 1), ("wrapWhenFull", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bufferControlFullAction.setStatus('mandatory')
bufferControlCaptureSliceSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 5), Integer32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bufferControlCaptureSliceSize.setStatus('mandatory')
bufferControlDownloadSliceSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 6), Integer32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bufferControlDownloadSliceSize.setStatus('mandatory')
bufferControlDownloadOffset = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bufferControlDownloadOffset.setStatus('mandatory')
bufferControlMaxOctetsRequested = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 8), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bufferControlMaxOctetsRequested.setStatus('mandatory')
bufferControlMaxOctetsGranted = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferControlMaxOctetsGranted.setStatus('mandatory')
bufferControlCapturedPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferControlCapturedPackets.setStatus('mandatory')
bufferControlTurnOnTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferControlTurnOnTime.setStatus('mandatory')
bufferControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 12), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bufferControlOwner.setStatus('mandatory')
bufferControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 1, 1, 13), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bufferControlStatus.setStatus('mandatory')
captureBufferTable = MibTable((1, 3, 6, 1, 2, 1, 16, 8, 2), )
if mibBuilder.loadTexts: captureBufferTable.setStatus('mandatory')
captureBufferEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 8, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "captureBufferControlIndex"), (0, "RFC1271-MIB", "captureBufferIndex"))
if mibBuilder.loadTexts: captureBufferEntry.setStatus('mandatory')
captureBufferControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferControlIndex.setStatus('mandatory')
captureBufferIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferIndex.setStatus('mandatory')
captureBufferPacketID = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferPacketID.setStatus('mandatory')
captureBufferPacketData = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferPacketData.setStatus('mandatory')
captureBufferPacketLength = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferPacketLength.setStatus('mandatory')
captureBufferPacketTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferPacketTime.setStatus('mandatory')
captureBufferPacketStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferPacketStatus.setStatus('mandatory')
eventTable = MibTable((1, 3, 6, 1, 2, 1, 16, 9, 1), )
if mibBuilder.loadTexts: eventTable.setStatus('mandatory')
eventEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 9, 1, 1), ).setIndexNames((0, "RFC1271-MIB", "eventIndex"))
if mibBuilder.loadTexts: eventEntry.setStatus('mandatory')
eventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventIndex.setStatus('mandatory')
eventDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventDescription.setStatus('mandatory')
eventType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("log", 2), ("snmp-trap", 3), ("log-and-trap", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventType.setStatus('mandatory')
eventCommunity = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventCommunity.setStatus('mandatory')
eventLastTimeSent = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventLastTimeSent.setStatus('mandatory')
eventOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 6), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventOwner.setStatus('mandatory')
eventStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 1, 1, 7), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eventStatus.setStatus('mandatory')
logTable = MibTable((1, 3, 6, 1, 2, 1, 16, 9, 2), )
if mibBuilder.loadTexts: logTable.setStatus('mandatory')
logEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 9, 2, 1), ).setIndexNames((0, "RFC1271-MIB", "logEventIndex"), (0, "RFC1271-MIB", "logIndex"))
if mibBuilder.loadTexts: logEntry.setStatus('mandatory')
logEventIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logEventIndex.setStatus('mandatory')
logIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logIndex.setStatus('mandatory')
logTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logTime.setStatus('mandatory')
logDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 9, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logDescription.setStatus('mandatory')
mibBuilder.exportSymbols("RFC1271-MIB", history=history, eventDescription=eventDescription, bufferControlOwner=bufferControlOwner, captureBufferPacketStatus=captureBufferPacketStatus, historyControlEntry=historyControlEntry, matrixSDOctets=matrixSDOctets, hostControlTable=hostControlTable, etherStatsTable=etherStatsTable, etherStatsIndex=etherStatsIndex, alarmFallingEventIndex=alarmFallingEventIndex, hostEntry=hostEntry, alarmInterval=alarmInterval, hostOutBroadcastPkts=hostOutBroadcastPkts, matrixSDSourceAddress=matrixSDSourceAddress, matrixControlEntry=matrixControlEntry, hostTimeEntry=hostTimeEntry, logDescription=logDescription, hostControlDataSource=hostControlDataSource, logEventIndex=logEventIndex, alarm=alarm, etherHistoryEntry=etherHistoryEntry, hostTimeInPkts=hostTimeInPkts, alarmTable=alarmTable, hostTopNEntry=hostTopNEntry, matrixDSDestAddress=matrixDSDestAddress, matrixDSPkts=matrixDSPkts, etherStatsPkts65to127Octets=etherStatsPkts65to127Octets, matrixDSOctets=matrixDSOctets, hostTimeOutMulticastPkts=hostTimeOutMulticastPkts, channelAcceptType=channelAcceptType, bufferControlCapturedPackets=bufferControlCapturedPackets, matrixControlStatus=matrixControlStatus, matrixSDEntry=matrixSDEntry, capture=capture, statistics=statistics, matrixSDErrors=matrixSDErrors, alarmVariable=alarmVariable, alarmOwner=alarmOwner, matrixControlTableSize=matrixControlTableSize, filterEntry=filterEntry, etherStatsDropEvents=etherStatsDropEvents, bufferControlTurnOnTime=bufferControlTurnOnTime, hostTopNIndex=hostTopNIndex, filterChannelIndex=filterChannelIndex, eventType=eventType, matrixSDTable=matrixSDTable, hostControlEntry=hostControlEntry, etherHistoryBroadcastPkts=etherHistoryBroadcastPkts, hostCreationOrder=hostCreationOrder, hostOutPkts=hostOutPkts, etherStatsOctets=etherStatsOctets, channelDescription=channelDescription, channelStatus=channelStatus, hostIndex=hostIndex, matrixControlTable=matrixControlTable, filterOwner=filterOwner, hostTopNStartTime=hostTopNStartTime, bufferControlMaxOctetsRequested=bufferControlMaxOctetsRequested, historyControlInterval=historyControlInterval, hostControlIndex=hostControlIndex, hosts=hosts, matrixSDIndex=matrixSDIndex, matrixSDPkts=matrixSDPkts, filterPktDataNotMask=filterPktDataNotMask, captureBufferControlIndex=captureBufferControlIndex, bufferControlDownloadSliceSize=bufferControlDownloadSliceSize, etherStatsFragments=etherStatsFragments, etherHistoryIntervalStart=etherHistoryIntervalStart, hostTimeOutBroadcastPkts=hostTimeOutBroadcastPkts, matrixControlIndex=matrixControlIndex, filterStatus=filterStatus, captureBufferPacketTime=captureBufferPacketTime, etherStatsPkts512to1023Octets=etherStatsPkts512to1023Octets, filter=filter, hostAddress=hostAddress, hostTopNRequestedSize=hostTopNRequestedSize, eventOwner=eventOwner, matrixDSEntry=matrixDSEntry, historyControlIndex=historyControlIndex, hostTimeTable=hostTimeTable, event=event, hostTopNRateBase=hostTopNRateBase, matrixDSSourceAddress=matrixDSSourceAddress, etherHistoryJabbers=etherHistoryJabbers, hostTimeOutOctets=hostTimeOutOctets, etherStatsCRCAlignErrors=etherStatsCRCAlignErrors, bufferControlTable=bufferControlTable, alarmStatus=alarmStatus, eventStatus=eventStatus, hostOutErrors=hostOutErrors, bufferControlCaptureSliceSize=bufferControlCaptureSliceSize, matrixDSErrors=matrixDSErrors, channelTurnOffEventIndex=channelTurnOffEventIndex, hostTopNControlTable=hostTopNControlTable, hostControlTableSize=hostControlTableSize, hostTimeInOctets=hostTimeInOctets, hostTopNStatus=hostTopNStatus, etherStatsStatus=etherStatsStatus, hostInOctets=hostInOctets, historyControlStatus=historyControlStatus, etherHistorySampleIndex=etherHistorySampleIndex, hostTopNTable=hostTopNTable, channelDataControl=channelDataControl, hostTopNControlIndex=hostTopNControlIndex, bufferControlIndex=bufferControlIndex, hostOutMulticastPkts=hostOutMulticastPkts, historyControlBucketsGranted=historyControlBucketsGranted, channelTurnOnEventIndex=channelTurnOnEventIndex, filterPktDataMask=filterPktDataMask, eventEntry=eventEntry, eventIndex=eventIndex, etherHistoryTable=etherHistoryTable, hostTimeCreationOrder=hostTimeCreationOrder, matrixControlOwner=matrixControlOwner, logTable=logTable, alarmValue=alarmValue, captureBufferPacketLength=captureBufferPacketLength, alarmEntry=alarmEntry, etherHistoryCollisions=etherHistoryCollisions, hostTable=hostTable, logEntry=logEntry, etherStatsPkts64Octets=etherStatsPkts64Octets, etherStatsEntry=etherStatsEntry, etherStatsDataSource=etherStatsDataSource, alarmRisingThreshold=alarmRisingThreshold, bufferControlFullAction=bufferControlFullAction, filterPktStatus=filterPktStatus, etherHistoryPkts=etherHistoryPkts, etherStatsPkts128to255Octets=etherStatsPkts128to255Octets, hostTopNGrantedSize=hostTopNGrantedSize, historyControlDataSource=historyControlDataSource, bufferControlMaxOctetsGranted=bufferControlMaxOctetsGranted, etherHistoryIndex=etherHistoryIndex, etherStatsJabbers=etherStatsJabbers, hostTopN=hostTopN, etherStatsUndersizePkts=etherStatsUndersizePkts, alarmIndex=alarmIndex, hostTimeOutPkts=hostTimeOutPkts, hostTimeOutErrors=hostTimeOutErrors, hostTopNRate=hostTopNRate, etherHistoryDropEvents=etherHistoryDropEvents, hostTopNDuration=hostTopNDuration, channelIfIndex=channelIfIndex, filterPktStatusNotMask=filterPktStatusNotMask, matrixDSIndex=matrixDSIndex, hostTimeAddress=hostTimeAddress, alarmSampleType=alarmSampleType, captureBufferPacketData=captureBufferPacketData, hostControlLastDeleteTime=hostControlLastDeleteTime, historyControlTable=historyControlTable, etherStatsCollisions=etherStatsCollisions, channelEventStatus=channelEventStatus, filterPktDataOffset=filterPktDataOffset, hostTopNReport=hostTopNReport, OwnerString=OwnerString, channelIndex=channelIndex, eventLastTimeSent=eventLastTimeSent, bufferControlChannelIndex=bufferControlChannelIndex, etherStatsPkts1024to1518Octets=etherStatsPkts1024to1518Octets, historyControlBucketsRequested=historyControlBucketsRequested, rmon=rmon, EntryStatus=EntryStatus, matrixSDDestAddress=matrixSDDestAddress, eventCommunity=eventCommunity, etherHistoryUtilization=etherHistoryUtilization, alarmStartupAlarm=alarmStartupAlarm, channelMatches=channelMatches, hostOutOctets=hostOutOctets, filterPktData=filterPktData, etherHistoryUndersizePkts=etherHistoryUndersizePkts, filterPktStatusMask=filterPktStatusMask, hostInPkts=hostInPkts, hostTopNControlEntry=hostTopNControlEntry, bufferControlDownloadOffset=bufferControlDownloadOffset, hostControlOwner=hostControlOwner, matrixControlDataSource=matrixControlDataSource, etherHistoryOversizePkts=etherHistoryOversizePkts, filterIndex=filterIndex, etherStatsMulticastPkts=etherStatsMulticastPkts, etherStatsPkts256to511Octets=etherStatsPkts256to511Octets, bufferControlEntry=bufferControlEntry, etherStatsPkts=etherStatsPkts, etherStatsOversizePkts=etherStatsOversizePkts, etherHistoryMulticastPkts=etherHistoryMulticastPkts, filterTable=filterTable, etherStatsOwner=etherStatsOwner, matrixDSTable=matrixDSTable, bufferControlFullStatus=bufferControlFullStatus, bufferControlStatus=bufferControlStatus, captureBufferIndex=captureBufferIndex, captureBufferPacketID=captureBufferPacketID, eventTable=eventTable, logTime=logTime, etherStatsBroadcastPkts=etherStatsBroadcastPkts, hostTopNOwner=hostTopNOwner, channelTable=channelTable, hostTopNHostIndex=hostTopNHostIndex, channelEventIndex=channelEventIndex, captureBufferEntry=captureBufferEntry, etherHistoryOctets=etherHistoryOctets, alarmFallingThreshold=alarmFallingThreshold, etherHistoryFragments=etherHistoryFragments, hostControlStatus=hostControlStatus, hostTimeIndex=hostTimeIndex, etherHistoryCRCAlignErrors=etherHistoryCRCAlignErrors, hostTopNTimeRemaining=hostTopNTimeRemaining, matrixControlLastDeleteTime=matrixControlLastDeleteTime, channelEntry=channelEntry, channelOwner=channelOwner, alarmRisingEventIndex=alarmRisingEventIndex, hostTopNAddress=hostTopNAddress, captureBufferTable=captureBufferTable, logIndex=logIndex, historyControlOwner=historyControlOwner, matrix=matrix)
