#
# PySNMP MIB module NAS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/qnap/NAS-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 11:59:32 2024
# On host fv-az665-602 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Integer32, Counter64, Gauge32, IpAddress, iso, NotificationType, ModuleIdentity, enterprises, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, MibIdentifier, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "Counter64", "Gauge32", "IpAddress", "iso", "NotificationType", "ModuleIdentity", "enterprises", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "MibIdentifier", "NotificationType", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

storage = MibIdentifier((1, 3, 6, 1, 4, 1, 24681))
storageSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1))
systemEventMsg = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 1))
eventInformMsg = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 1, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventInformMsg.setStatus('current')
eventWarningMsg = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 1, 102), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventWarningMsg.setStatus('current')
eventErrorMsg = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 1, 103), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventErrorMsg.setStatus('current')
systemTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 10))
eventInform = NotificationType((1, 3, 6, 1, 4, 1, 24681, 1, 10) + (0,1)).setObjects(("NAS-MIB", "eventInformMsg"))
eventWarning = NotificationType((1, 3, 6, 1, 4, 1, 24681, 1, 10) + (0,2)).setObjects(("NAS-MIB", "eventWarningMsg"))
eventError = NotificationType((1, 3, 6, 1, 4, 1, 24681, 1, 10) + (0,4)).setObjects(("NAS-MIB", "eventErrorMsg"))
systemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 2))
systemCPU_Usage = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 1), DisplayString()).setLabel("systemCPU-Usage").setMaxAccess("readonly")
if mibBuilder.loadTexts: systemCPU_Usage.setStatus('current')
systemTotalMem = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTotalMem.setStatus('current')
systemFreeMem = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFreeMem.setStatus('current')
systemUptime = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemUptime.setStatus('current')
cpu_Temperature = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 5), DisplayString()).setLabel("cpu-Temperature").setMaxAccess("readonly")
if mibBuilder.loadTexts: cpu_Temperature.setStatus('current')
systemTemperature = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTemperature.setStatus('current')
ifNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifNumber.setStatus('mandatory')
systemIfTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 9), )
if mibBuilder.loadTexts: systemIfTable.setStatus('mandatory')
ifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 9, 1), ).setIndexNames((0, "NAS-MIB", "ifIndex"))
if mibBuilder.loadTexts: ifEntry.setStatus('mandatory')
ifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifIndex.setStatus('mandatory')
ifDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifDescr.setStatus('mandatory')
ifPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPacketsReceived.setStatus('mandatory')
ifPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPacketsSent.setStatus('mandatory')
ifErrorPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifErrorPackets.setStatus('mandatory')
hdNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdNumber.setStatus('mandatory')
systemHdTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 11), )
if mibBuilder.loadTexts: systemHdTable.setStatus('mandatory')
hdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 11, 1), ).setIndexNames((0, "NAS-MIB", "hdIndex"))
if mibBuilder.loadTexts: hdEntry.setStatus('mandatory')
hdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdIndex.setStatus('mandatory')
hdDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdDescr.setStatus('mandatory')
hdTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdTemperature.setStatus('mandatory')
hdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -5, -6, -9, -4))).clone(namedValues=NamedValues(("ready", 0), ("noDisk", -5), ("invalid", -6), ("rwError", -9), ("unknown", -4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdStatus.setStatus('mandatory')
hdModel = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 11, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdModel.setStatus('mandatory')
hdCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 11, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdCapacity.setStatus('mandatory')
hdSmartInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 11, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdSmartInfo.setStatus('mandatory')
modelName = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modelName.setStatus('current')
hostName = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostName.setStatus('current')
sysFanNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanNumber.setStatus('mandatory')
systemFanTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 15), )
if mibBuilder.loadTexts: systemFanTable.setStatus('mandatory')
sysFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 15, 1), ).setIndexNames((0, "NAS-MIB", "sysFanIndex"))
if mibBuilder.loadTexts: sysFanEntry.setStatus('mandatory')
sysFanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanIndex.setStatus('mandatory')
sysFanDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanDescr.setStatus('mandatory')
sysFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 15, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanSpeed.setStatus('mandatory')
sysVolumeNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeNumber.setStatus('mandatory')
systemVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 17), )
if mibBuilder.loadTexts: systemVolumeTable.setStatus('mandatory')
sysVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 17, 1), ).setIndexNames((0, "NAS-MIB", "sysVolumeIndex"))
if mibBuilder.loadTexts: sysVolumeEntry.setStatus('mandatory')
sysVolumeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeIndex.setStatus('mandatory')
sysVolumeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeDescr.setStatus('mandatory')
sysVolumeFS = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 17, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeFS.setStatus('mandatory')
sysVolumeTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 17, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeTotalSize.setStatus('mandatory')
sysVolumeFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 17, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeFreeSize.setStatus('mandatory')
sysVolumeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 17, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeStatus.setStatus('mandatory')
jBODInfo = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODInfo.setStatus('mandatory')
jBODBitmap = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODBitmap.setStatus('mandatory')
jBODInfos = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 2), )
if mibBuilder.loadTexts: jBODInfos.setStatus('mandatory')
jBODInfosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 2, 1), ).setIndexNames((0, "NAS-MIB", "jBODid"))
if mibBuilder.loadTexts: jBODInfosEntry.setStatus('mandatory')
jBODid = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODid.setStatus('mandatory')
jBODHdNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdNumber.setStatus('mandatory')
jBODHdTable1 = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 3), )
if mibBuilder.loadTexts: jBODHdTable1.setStatus('mandatory')
jBODHdEntry1 = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 3, 1), ).setIndexNames((0, "NAS-MIB", "jBODHdIndex1"))
if mibBuilder.loadTexts: jBODHdEntry1.setStatus('mandatory')
jBODHdIndex1 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdIndex1.setStatus('mandatory')
jBODHdDescr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdDescr1.setStatus('mandatory')
jBODHdTemperature1 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdTemperature1.setStatus('mandatory')
jBODHdStatus1 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -5, -6, -9, -4))).clone(namedValues=NamedValues(("ready", 0), ("noDisk", -5), ("invalid", -6), ("rwError", -9), ("unknown", -4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdStatus1.setStatus('mandatory')
jBODHdModel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdModel1.setStatus('mandatory')
jBODHdCapacity1 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdCapacity1.setStatus('mandatory')
jBODHdSmartInfo1 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdSmartInfo1.setStatus('mandatory')
jBODHdTable2 = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 4), )
if mibBuilder.loadTexts: jBODHdTable2.setStatus('mandatory')
jBODHdEntry2 = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 4, 1), ).setIndexNames((0, "NAS-MIB", "jBODHdIndex2"))
if mibBuilder.loadTexts: jBODHdEntry2.setStatus('mandatory')
jBODHdIndex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdIndex2.setStatus('mandatory')
jBODHdDescr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdDescr2.setStatus('mandatory')
jBODHdTemperature2 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdTemperature2.setStatus('mandatory')
jBODHdStatus2 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -5, -6, -9, -4))).clone(namedValues=NamedValues(("ready", 0), ("noDisk", -5), ("invalid", -6), ("rwError", -9), ("unknown", -4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdStatus2.setStatus('mandatory')
jBODHdModel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdModel2.setStatus('mandatory')
jBODHdCapacity2 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdCapacity2.setStatus('mandatory')
jBODHdSmartInfo2 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdSmartInfo2.setStatus('mandatory')
jBODHdTable3 = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 5), )
if mibBuilder.loadTexts: jBODHdTable3.setStatus('mandatory')
jBODHdEntry3 = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 5, 1), ).setIndexNames((0, "NAS-MIB", "jBODHdIndex3"))
if mibBuilder.loadTexts: jBODHdEntry3.setStatus('mandatory')
jBODHdIndex3 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdIndex3.setStatus('mandatory')
jBODHdDescr3 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdDescr3.setStatus('mandatory')
jBODHdTemperature3 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdTemperature3.setStatus('mandatory')
jBODHdStatus3 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -5, -6, -9, -4))).clone(namedValues=NamedValues(("ready", 0), ("noDisk", -5), ("invalid", -6), ("rwError", -9), ("unknown", -4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdStatus3.setStatus('mandatory')
jBODHdModel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 5, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdModel3.setStatus('mandatory')
jBODHdCapacity3 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 5, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdCapacity3.setStatus('mandatory')
jBODHdSmartInfo3 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 5, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdSmartInfo3.setStatus('mandatory')
jBODHdTable4 = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 6), )
if mibBuilder.loadTexts: jBODHdTable4.setStatus('mandatory')
jBODHdEntry4 = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 6, 1), ).setIndexNames((0, "NAS-MIB", "jBODHdIndex4"))
if mibBuilder.loadTexts: jBODHdEntry4.setStatus('mandatory')
jBODHdIndex4 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdIndex4.setStatus('mandatory')
jBODHdDescr4 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdDescr4.setStatus('mandatory')
jBODHdTemperature4 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdTemperature4.setStatus('mandatory')
jBODHdStatus4 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -5, -6, -9, -4))).clone(namedValues=NamedValues(("ready", 0), ("noDisk", -5), ("invalid", -6), ("rwError", -9), ("unknown", -4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdStatus4.setStatus('mandatory')
jBODHdModel4 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 6, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdModel4.setStatus('mandatory')
jBODHdCapacity4 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdCapacity4.setStatus('mandatory')
jBODHdSmartInfo4 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 6, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdSmartInfo4.setStatus('mandatory')
jBODHdTable5 = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 7), )
if mibBuilder.loadTexts: jBODHdTable5.setStatus('mandatory')
jBODHdEntry5 = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 7, 1), ).setIndexNames((0, "NAS-MIB", "jBODHdIndex5"))
if mibBuilder.loadTexts: jBODHdEntry5.setStatus('mandatory')
jBODHdIndex5 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdIndex5.setStatus('mandatory')
jBODHdDescr5 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdDescr5.setStatus('mandatory')
jBODHdTemperature5 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 7, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdTemperature5.setStatus('mandatory')
jBODHdStatus5 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -5, -6, -9, -4))).clone(namedValues=NamedValues(("ready", 0), ("noDisk", -5), ("invalid", -6), ("rwError", -9), ("unknown", -4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdStatus5.setStatus('mandatory')
jBODHdModel5 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 7, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdModel5.setStatus('mandatory')
jBODHdCapacity5 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 7, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdCapacity5.setStatus('mandatory')
jBODHdSmartInfo5 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 7, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdSmartInfo5.setStatus('mandatory')
jBODHdTable6 = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 8), )
if mibBuilder.loadTexts: jBODHdTable6.setStatus('mandatory')
jBODHdEntry6 = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 8, 1), ).setIndexNames((0, "NAS-MIB", "jBODHdIndex6"))
if mibBuilder.loadTexts: jBODHdEntry6.setStatus('mandatory')
jBODHdIndex6 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdIndex6.setStatus('mandatory')
jBODHdDescr6 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdDescr6.setStatus('mandatory')
jBODHdTemperature6 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdTemperature6.setStatus('mandatory')
jBODHdStatus6 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -5, -6, -9, -4))).clone(namedValues=NamedValues(("ready", 0), ("noDisk", -5), ("invalid", -6), ("rwError", -9), ("unknown", -4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdStatus6.setStatus('mandatory')
jBODHdModel6 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 8, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdModel6.setStatus('mandatory')
jBODHdCapacity6 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 8, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdCapacity6.setStatus('mandatory')
jBODHdSmartInfo6 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 8, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdSmartInfo6.setStatus('mandatory')
jBODHdTable7 = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 9), )
if mibBuilder.loadTexts: jBODHdTable7.setStatus('mandatory')
jBODHdEntry7 = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 9, 1), ).setIndexNames((0, "NAS-MIB", "jBODHdIndex7"))
if mibBuilder.loadTexts: jBODHdEntry7.setStatus('mandatory')
jBODHdIndex7 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdIndex7.setStatus('mandatory')
jBODHdDescr7 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdDescr7.setStatus('mandatory')
jBODHdTemperature7 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 9, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdTemperature7.setStatus('mandatory')
jBODHdStatus7 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -5, -6, -9, -4))).clone(namedValues=NamedValues(("ready", 0), ("noDisk", -5), ("invalid", -6), ("rwError", -9), ("unknown", -4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdStatus7.setStatus('mandatory')
jBODHdModel7 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 9, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdModel7.setStatus('mandatory')
jBODHdCapacity7 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 9, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdCapacity7.setStatus('mandatory')
jBODHdSmartInfo7 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 9, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdSmartInfo7.setStatus('mandatory')
jBODHdTable8 = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 10), )
if mibBuilder.loadTexts: jBODHdTable8.setStatus('mandatory')
jBODHdEntry8 = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 10, 1), ).setIndexNames((0, "NAS-MIB", "jBODHdIndex8"))
if mibBuilder.loadTexts: jBODHdEntry8.setStatus('mandatory')
jBODHdIndex8 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdIndex8.setStatus('mandatory')
jBODHdDescr8 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdDescr8.setStatus('mandatory')
jBODHdTemperature8 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdTemperature8.setStatus('mandatory')
jBODHdStatus8 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -5, -6, -9, -4))).clone(namedValues=NamedValues(("ready", 0), ("noDisk", -5), ("invalid", -6), ("rwError", -9), ("unknown", -4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdStatus8.setStatus('mandatory')
jBODHdModel8 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 10, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdModel8.setStatus('mandatory')
jBODHdCapacity8 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 10, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdCapacity8.setStatus('mandatory')
jBODHdSmartInfo8 = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 2, 18, 10, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jBODHdSmartInfo8.setStatus('mandatory')
systemInfoEx = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 3))
systemCPU_UsageEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 1), Integer32()).setLabel("systemCPU-UsageEX").setMaxAccess("readonly")
if mibBuilder.loadTexts: systemCPU_UsageEX.setStatus('current')
systemTotalMemEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTotalMemEX.setStatus('current')
systemFreeMemEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFreeMemEX.setStatus('current')
systemUptimeEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemUptimeEX.setStatus('current')
cpu_TemperatureEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 5), Integer32()).setLabel("cpu-TemperatureEX").setMaxAccess("readonly")
if mibBuilder.loadTexts: cpu_TemperatureEX.setStatus('current')
systemTemperatureEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTemperatureEX.setStatus('current')
ifNumberEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifNumberEX.setStatus('mandatory')
systemIfTableEx = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 3, 9), )
if mibBuilder.loadTexts: systemIfTableEx.setStatus('mandatory')
ifEntryEx = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 3, 9, 1), ).setIndexNames((0, "NAS-MIB", "ifIndexEX"))
if mibBuilder.loadTexts: ifEntryEx.setStatus('mandatory')
ifIndexEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifIndexEX.setStatus('mandatory')
ifDescrEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifDescrEX.setStatus('mandatory')
ifPacketsReceivedEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPacketsReceivedEX.setStatus('mandatory')
ifPacketsSentEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifPacketsSentEX.setStatus('mandatory')
ifErrorPacketsEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifErrorPacketsEX.setStatus('mandatory')
hdNumberEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdNumberEX.setStatus('mandatory')
systemHdTableEX = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 3, 11), )
if mibBuilder.loadTexts: systemHdTableEX.setStatus('mandatory')
hdEntryEx = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 3, 11, 1), ).setIndexNames((0, "NAS-MIB", "hdIndex"))
if mibBuilder.loadTexts: hdEntryEx.setStatus('mandatory')
hdIndexEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdIndexEX.setStatus('mandatory')
hdDescrEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdDescrEX.setStatus('mandatory')
hdTemperatureEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdTemperatureEX.setStatus('mandatory')
hdStatusEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -5, -6, -9, -4))).clone(namedValues=NamedValues(("ready", 0), ("noDisk", -5), ("invalid", -6), ("rwError", -9), ("unknown", -4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdStatusEX.setStatus('mandatory')
hdModelEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 11, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdModelEX.setStatus('mandatory')
hdCapacityEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 11, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdCapacityEX.setStatus('mandatory')
hdSmartInfoEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 11, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdSmartInfoEX.setStatus('mandatory')
modelNameEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modelNameEX.setStatus('current')
hostNameEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostNameEX.setStatus('current')
sysFanNumberEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanNumberEX.setStatus('mandatory')
systemFanTableEx = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 3, 15), )
if mibBuilder.loadTexts: systemFanTableEx.setStatus('mandatory')
sysFanEntryEx = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 3, 15, 1), ).setIndexNames((0, "NAS-MIB", "sysFanIndexEX"))
if mibBuilder.loadTexts: sysFanEntryEx.setStatus('mandatory')
sysFanIndexEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanIndexEX.setStatus('mandatory')
sysFanDescrEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanDescrEX.setStatus('mandatory')
sysFanSpeedEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFanSpeedEX.setStatus('mandatory')
sysVolumeNumberEX = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeNumberEX.setStatus('mandatory')
systemVolumeTableEx = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 3, 17), )
if mibBuilder.loadTexts: systemVolumeTableEx.setStatus('mandatory')
sysVolumeEntryEx = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 3, 17, 1), ).setIndexNames((0, "NAS-MIB", "sysVolumeIndexEX"))
if mibBuilder.loadTexts: sysVolumeEntryEx.setStatus('mandatory')
sysVolumeIndexEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeIndexEX.setStatus('mandatory')
sysVolumeDescrEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeDescrEX.setStatus('mandatory')
sysVolumeFSEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 17, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeFSEX.setStatus('mandatory')
sysVolumeTotalSizeEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 17, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeTotalSizeEX.setStatus('mandatory')
sysVolumeFreeSizeEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 17, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeFreeSizeEX.setStatus('mandatory')
sysVolumeStatusEX = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 3, 17, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysVolumeStatusEX.setStatus('mandatory')
storageSystemEx = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4))
systemSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1))
storageManager = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1))
systemStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 11))
nasStorage = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1))
components = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1))
enclosure = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 1))
systemFan = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 2))
systemPower = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 3))
cpu = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 4))
disk = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5))
msataDisk = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6))
storageSpace = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2))
raid = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 1))
pool = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 2))
volume = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3))
cacheAcceleration = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 3))
iSCSI = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2))
iSCSIStorage = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1))
lun = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10))
target = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 11))
resourceMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 11, 5))
diskPerformance = MibIdentifier((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 11, 5, 6))
iSCSIService = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSCSIService.setStatus('mandatory')
iSCSIServicePort = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSCSIServicePort.setStatus('mandatory')
iSNSService = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSNSService.setStatus('mandatory')
iSNSIP = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iSNSIP.setStatus('mandatory')
lunNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunNumber.setStatus('current')
lunTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10, 2), )
if mibBuilder.loadTexts: lunTable.setStatus('mandatory')
lunTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10, 2, 1), ).setIndexNames((0, "NAS-MIB", "lunIndex"))
if mibBuilder.loadTexts: lunTableEntry.setStatus('mandatory')
lunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunIndex.setStatus('mandatory')
lunID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunID.setStatus('mandatory')
lunCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunCapacity.setStatus('mandatory')
lunUsedPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunUsedPercent.setStatus('mandatory')
lunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunStatus.setStatus('mandatory')
lunName = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunName.setStatus('mandatory')
lunBackupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("backup", 1), ("restore", 2), ("snapshot", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunBackupStatus.setStatus('mandatory')
lunIsMap = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 10, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unmapped", 0), ("mapped", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunIsMap.setStatus('mandatory')
targetNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: targetNumber.setStatus('current')
targeTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 11, 2), )
if mibBuilder.loadTexts: targeTable.setStatus('mandatory')
targeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 11, 2, 1), ).setIndexNames((0, "NAS-MIB", "targetIndex"))
if mibBuilder.loadTexts: targeTableEntry.setStatus('mandatory')
targetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: targetIndex.setStatus('mandatory')
targetID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 11, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: targetID.setStatus('mandatory')
targetName = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 11, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: targetName.setStatus('mandatory')
targetIQN = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 11, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: targetIQN.setStatus('mandatory')
targetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 2, 1, 11, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1))).clone(namedValues=NamedValues(("offline", -1), ("ready", 0), ("connected", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: targetStatus.setStatus('mandatory')
volumeNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeNumber.setStatus('current')
volumeTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3, 2), )
if mibBuilder.loadTexts: volumeTable.setStatus('current')
volumeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3, 2, 1), ).setIndexNames((0, "NAS-MIB", "volumeIndex"))
if mibBuilder.loadTexts: volumeTableEntry.setStatus('current')
volumeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeIndex.setStatus('current')
volumeID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeID.setStatus('current')
volumeCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeCapacity.setStatus('current')
volumeFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeFreeSize.setStatus('current')
volumeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeStatus.setStatus('current')
volumeSSDCache = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeSSDCache.setStatus('current')
volumeThin = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeThin.setStatus('current')
volumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 3, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeName.setStatus('current')
poolNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolNumber.setStatus('current')
poolTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 2, 2), )
if mibBuilder.loadTexts: poolTable.setStatus('mandatory')
poolTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 2, 2, 1), ).setIndexNames((0, "NAS-MIB", "poolIndex"))
if mibBuilder.loadTexts: poolTableEntry.setStatus('mandatory')
poolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolIndex.setStatus('mandatory')
poolID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolID.setStatus('mandatory')
poolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 2, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolCapacity.setStatus('mandatory')
poolFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 2, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolFreeSize.setStatus('mandatory')
poolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -1, -2, -3))).clone(namedValues=NamedValues(("ready", 0), ("warning", -1), ("notReady", -2), ("error", -3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolStatus.setStatus('mandatory')
raidNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidNumber.setStatus('current')
raidGroupTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 1, 2), )
if mibBuilder.loadTexts: raidGroupTable.setStatus('mandatory')
raidGroupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 1, 2, 1), ).setIndexNames((0, "NAS-MIB", "raidIndex"))
if mibBuilder.loadTexts: raidGroupTableEntry.setStatus('mandatory')
raidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidIndex.setStatus('mandatory')
raidID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidID.setStatus('mandatory')
raidCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidCapacity.setStatus('mandatory')
raidFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidFreeSize.setStatus('mandatory')
raidStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidStatus.setStatus('mandatory')
raidBitmap = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidBitmap.setStatus('mandatory')
raidLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 2, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidLevel.setStatus('mandatory')
service = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: service.setStatus('current')
availablePercent = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: availablePercent.setStatus('current')
readHitRate = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: readHitRate.setStatus('current')
writeHitRate = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: writeHitRate.setStatus('current')
status = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: status.setStatus('current')
diskNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskNumber.setStatus('current')
diskTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 2), )
if mibBuilder.loadTexts: diskTable.setStatus('mandatory')
diskTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 2, 1), ).setIndexNames((0, "NAS-MIB", "diskIndex"))
if mibBuilder.loadTexts: diskTableEntry.setStatus('mandatory')
diskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskIndex.setStatus('mandatory')
diskID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskID.setStatus('mandatory')
diskEnclosureID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskEnclosureID.setStatus('mandatory')
diskSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskSummary.setStatus('mandatory')
diskSmartInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 0, -1))).clone(namedValues=NamedValues(("abnormal", 2), ("warning", 1), ("good", 0), ("error", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskSmartInfo.setStatus('mandatory')
diskTemperture = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskTemperture.setStatus('mandatory')
diskGlobalSpare = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskGlobalSpare.setStatus('mandatory')
diskModel = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskModel.setStatus('mandatory')
diskCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 5, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskCapacity.setStatus('mandatory')
msataDiskNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msataDiskNumber.setStatus('current')
msataDiskTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 2), )
if mibBuilder.loadTexts: msataDiskTable.setStatus('mandatory')
msataDiskTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 2, 1), ).setIndexNames((0, "NAS-MIB", "msataDiskIndex"))
if mibBuilder.loadTexts: msataDiskTableEntry.setStatus('mandatory')
msataDiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msataDiskIndex.setStatus('mandatory')
msataDiskID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msataDiskID.setStatus('mandatory')
msataDiskEnclosureID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msataDiskEnclosureID.setStatus('mandatory')
msataDiskSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msataDiskSummary.setStatus('mandatory')
msataDiskSmartInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 0, -1))).clone(namedValues=NamedValues(("abnormal", 2), ("warning", 1), ("good", 0), ("error", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msataDiskSmartInfo.setStatus('mandatory')
msataDiskTemperture = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msataDiskTemperture.setStatus('mandatory')
msataDiskGlobalSpare = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msataDiskGlobalSpare.setStatus('mandatory')
msataDiskModel = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msataDiskModel.setStatus('mandatory')
msataDiskCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 6, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msataDiskCapacity.setStatus('mandatory')
enclosurelNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosurelNumber.setStatus('current')
enclosureTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 1, 2), )
if mibBuilder.loadTexts: enclosureTable.setStatus('mandatory')
enclosureTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 1, 2, 1), ).setIndexNames((0, "NAS-MIB", "enclosureIndex"))
if mibBuilder.loadTexts: enclosureTableEntry.setStatus('mandatory')
enclosureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureIndex.setStatus('mandatory')
enclosureID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureID.setStatus('mandatory')
enclosureModel = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureModel.setStatus('mandatory')
enclosureSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureSerialNum.setStatus('mandatory')
enclosureSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureSlot.setStatus('mandatory')
enclosureName = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureName.setStatus('mandatory')
enclosureSystemTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureSystemTemp.setStatus('mandatory')
systemFanNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFanNumber.setStatus('current')
systemFan2Table = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 2, 2), )
if mibBuilder.loadTexts: systemFan2Table.setStatus('mandatory')
systemFan2TableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 2, 2, 1), ).setIndexNames((0, "NAS-MIB", "systemFanIndex"))
if mibBuilder.loadTexts: systemFan2TableEntry.setStatus('mandatory')
systemFanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFanIndex.setStatus('mandatory')
systemFanID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFanID.setStatus('mandatory')
systemFanEnclosureID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFanEnclosureID.setStatus('mandatory')
systemFanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -1))).clone(namedValues=NamedValues(("ok", 0), ("fail", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFanStatus.setStatus('mandatory')
systemFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFanSpeed.setStatus('mandatory')
systemPowerNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemPowerNumber.setStatus('current')
systemPowerTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 3, 2), )
if mibBuilder.loadTexts: systemPowerTable.setStatus('mandatory')
systemPowerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 3, 2, 1), ).setIndexNames((0, "NAS-MIB", "systemPowerIndex"))
if mibBuilder.loadTexts: systemPowerTableEntry.setStatus('mandatory')
systemPowerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemPowerIndex.setStatus('mandatory')
systemPowerID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemPowerID.setStatus('mandatory')
systemPowerEnclosureID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemPowerEnclosureID.setStatus('mandatory')
systemPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -1))).clone(namedValues=NamedValues(("ok", 0), ("fail", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemPowerStatus.setStatus('mandatory')
systemPowerFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemPowerFanSpeed.setStatus('mandatory')
systemPowerTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemPowerTemp.setStatus('mandatory')
cpuNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuNumber.setStatus('current')
cpuTemp = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuTemp.setStatus('current')
cpuTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 4, 3), )
if mibBuilder.loadTexts: cpuTable.setStatus('mandatory')
cpuTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 4, 3, 1), ).setIndexNames((0, "NAS-MIB", "cpuIndex"))
if mibBuilder.loadTexts: cpuTableEntry.setStatus('mandatory')
cpuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuIndex.setStatus('mandatory')
cpuID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuID.setStatus('mandatory')
cpuUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 1, 1, 1, 4, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuUsage.setStatus('mandatory')
diskPerformanceNumber = MibScalar((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 11, 5, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskPerformanceNumber.setStatus('current')
diskPerformanceTable = MibTable((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 11, 5, 6, 2), )
if mibBuilder.loadTexts: diskPerformanceTable.setStatus('mandatory')
diskPerformanceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 11, 5, 6, 2, 1), ).setIndexNames((0, "NAS-MIB", "diskPerformanceIndex"))
if mibBuilder.loadTexts: diskPerformanceTableEntry.setStatus('mandatory')
diskPerformanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 11, 5, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskPerformanceIndex.setStatus('mandatory')
blvID = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 11, 5, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: blvID.setStatus('mandatory')
iops = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 11, 5, 6, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iops.setStatus('mandatory')
latency = MibTableColumn((1, 3, 6, 1, 4, 1, 24681, 1, 4, 1, 11, 5, 6, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latency.setStatus('mandatory')
mibBuilder.exportSymbols("NAS-MIB", jBODHdEntry3=jBODHdEntry3, enclosureTable=enclosureTable, diskPerformanceIndex=diskPerformanceIndex, status=status, iSCSIService=iSCSIService, jBODHdDescr1=jBODHdDescr1, readHitRate=readHitRate, jBODHdSmartInfo6=jBODHdSmartInfo6, systemFanIndex=systemFanIndex, cpuIndex=cpuIndex, diskModel=diskModel, jBODHdDescr5=jBODHdDescr5, cpuNumber=cpuNumber, jBODHdEntry1=jBODHdEntry1, hdIndexEX=hdIndexEX, enclosurelNumber=enclosurelNumber, systemPowerIndex=systemPowerIndex, sysVolumeStatusEX=sysVolumeStatusEX, jBODHdEntry7=jBODHdEntry7, jBODHdDescr3=jBODHdDescr3, jBODHdTable7=jBODHdTable7, enclosureIndex=enclosureIndex, targeTableEntry=targeTableEntry, jBODHdTemperature4=jBODHdTemperature4, sysFanSpeedEX=sysFanSpeedEX, lunIndex=lunIndex, sysFanSpeed=sysFanSpeed, components=components, systemFreeMemEX=systemFreeMemEX, volumeSSDCache=volumeSSDCache, jBODHdTemperature5=jBODHdTemperature5, volumeNumber=volumeNumber, cpuTable=cpuTable, cpuTemp=cpuTemp, sysFanNumberEX=sysFanNumberEX, lunNumber=lunNumber, sysVolumeTotalSize=sysVolumeTotalSize, sysFanEntryEx=sysFanEntryEx, disk=disk, cpuID=cpuID, targetIndex=targetIndex, jBODHdCapacity3=jBODHdCapacity3, jBODHdCapacity7=jBODHdCapacity7, pool=pool, availablePercent=availablePercent, msataDiskIndex=msataDiskIndex, raidCapacity=raidCapacity, enclosureName=enclosureName, jBODHdNumber=jBODHdNumber, jBODHdTemperature1=jBODHdTemperature1, storageSpace=storageSpace, systemHdTableEX=systemHdTableEX, msataDiskModel=msataDiskModel, eventInformMsg=eventInformMsg, jBODHdDescr7=jBODHdDescr7, DisplayString=DisplayString, diskCapacity=diskCapacity, jBODHdStatus8=jBODHdStatus8, enclosureSerialNum=enclosureSerialNum, diskPerformanceTable=diskPerformanceTable, sysVolumeDescrEX=sysVolumeDescrEX, systemPowerStatus=systemPowerStatus, systemPowerEnclosureID=systemPowerEnclosureID, diskSmartInfo=diskSmartInfo, cpu_TemperatureEX=cpu_TemperatureEX, jBODHdModel3=jBODHdModel3, jBODHdTable4=jBODHdTable4, poolIndex=poolIndex, lunCapacity=lunCapacity, raidNumber=raidNumber, jBODHdTable6=jBODHdTable6, iops=iops, hdSmartInfoEX=hdSmartInfoEX, volumeThin=volumeThin, ifIndexEX=ifIndexEX, hostNameEX=hostNameEX, jBODHdTemperature7=jBODHdTemperature7, jBODHdStatus6=jBODHdStatus6, systemIfTableEx=systemIfTableEx, systemFan2TableEntry=systemFan2TableEntry, msataDiskTemperture=msataDiskTemperture, poolNumber=poolNumber, diskSummary=diskSummary, ifNumber=ifNumber, enclosure=enclosure, jBODHdCapacity2=jBODHdCapacity2, iSCSIStorage=iSCSIStorage, diskGlobalSpare=diskGlobalSpare, iSNSIP=iSNSIP, systemEventMsg=systemEventMsg, jBODHdCapacity8=jBODHdCapacity8, diskTableEntry=diskTableEntry, systemTotalMemEX=systemTotalMemEX, lunTable=lunTable, latency=latency, diskEnclosureID=diskEnclosureID, msataDiskTableEntry=msataDiskTableEntry, jBODHdTemperature6=jBODHdTemperature6, systemCPU_Usage=systemCPU_Usage, systemTotalMem=systemTotalMem, systemUptime=systemUptime, hdIndex=hdIndex, volumeStatus=volumeStatus, jBODHdIndex6=jBODHdIndex6, jBODHdIndex2=jBODHdIndex2, sysVolumeEntryEx=sysVolumeEntryEx, raidIndex=raidIndex, systemStatus=systemStatus, eventError=eventError, storageSystem=storageSystem, msataDiskSummary=msataDiskSummary, lunName=lunName, jBODHdTable5=jBODHdTable5, jBODHdTable8=jBODHdTable8, systemCPU_UsageEX=systemCPU_UsageEX, systemFanTableEx=systemFanTableEx, modelName=modelName, targetStatus=targetStatus, sysVolumeIndexEX=sysVolumeIndexEX, targetID=targetID, diskPerformance=diskPerformance, volumeID=volumeID, cpu_Temperature=cpu_Temperature, hdCapacity=hdCapacity, jBODHdStatus7=jBODHdStatus7, hdSmartInfo=hdSmartInfo, storageManager=storageManager, msataDiskTable=msataDiskTable, jBODHdSmartInfo7=jBODHdSmartInfo7, jBODHdDescr8=jBODHdDescr8, msataDiskID=msataDiskID, jBODHdSmartInfo5=jBODHdSmartInfo5, jBODHdTable3=jBODHdTable3, hdDescr=hdDescr, systemInfo=systemInfo, jBODHdModel2=jBODHdModel2, systemTemperature=systemTemperature, eventInform=eventInform, enclosureSystemTemp=enclosureSystemTemp, jBODHdSmartInfo8=jBODHdSmartInfo8, ifErrorPackets=ifErrorPackets, msataDiskGlobalSpare=msataDiskGlobalSpare, hdTemperatureEX=hdTemperatureEX, jBODInfo=jBODInfo, raidFreeSize=raidFreeSize, hdNumber=hdNumber, jBODHdIndex5=jBODHdIndex5, jBODHdStatus2=jBODHdStatus2, systemInfoEx=systemInfoEx, sysFanEntry=sysFanEntry, poolID=poolID, systemPowerID=systemPowerID, systemVolumeTable=systemVolumeTable, msataDisk=msataDisk, iSNSService=iSNSService, poolStatus=poolStatus, cpu=cpu, service=service, sysFanIndexEX=sysFanIndexEX, jBODHdIndex3=jBODHdIndex3, systemUptimeEX=systemUptimeEX, raid=raid, hostName=hostName, lunIsMap=lunIsMap, raidGroupTableEntry=raidGroupTableEntry, systemPowerFanSpeed=systemPowerFanSpeed, jBODid=jBODid, jBODHdStatus4=jBODHdStatus4, hdModelEX=hdModelEX, systemTemperatureEX=systemTemperatureEX, diskNumber=diskNumber, enclosureTableEntry=enclosureTableEntry, target=target, jBODHdSmartInfo2=jBODHdSmartInfo2, systemFan2Table=systemFan2Table, lunID=lunID, jBODHdDescr4=jBODHdDescr4, ifPacketsSent=ifPacketsSent, systemHdTable=systemHdTable, jBODHdTable1=jBODHdTable1, iSCSI=iSCSI, lun=lun, volumeTableEntry=volumeTableEntry, hdStatusEX=hdStatusEX, diskIndex=diskIndex, cpuTableEntry=cpuTableEntry, jBODInfos=jBODInfos, msataDiskEnclosureID=msataDiskEnclosureID, jBODInfosEntry=jBODInfosEntry, enclosureSlot=enclosureSlot, msataDiskNumber=msataDiskNumber, blvID=blvID, jBODHdEntry2=jBODHdEntry2, ifPacketsSentEX=ifPacketsSentEX, storageSystemEx=storageSystemEx, jBODHdDescr2=jBODHdDescr2, enclosureModel=enclosureModel, msataDiskSmartInfo=msataDiskSmartInfo, hdEntryEx=hdEntryEx, lunStatus=lunStatus, hdNumberEX=hdNumberEX, targetName=targetName, diskPerformanceTableEntry=diskPerformanceTableEntry, writeHitRate=writeHitRate, jBODHdTemperature8=jBODHdTemperature8, eventWarningMsg=eventWarningMsg, lunUsedPercent=lunUsedPercent, sysVolumeTotalSizeEX=sysVolumeTotalSizeEX, raidBitmap=raidBitmap, sysVolumeFreeSize=sysVolumeFreeSize, poolFreeSize=poolFreeSize, jBODHdModel5=jBODHdModel5, jBODHdModel1=jBODHdModel1, jBODHdStatus3=jBODHdStatus3, hdEntry=hdEntry, jBODHdCapacity6=jBODHdCapacity6, raidGroupTable=raidGroupTable, ifEntryEx=ifEntryEx, cpuUsage=cpuUsage, sysVolumeEntry=sysVolumeEntry, sysVolumeFSEX=sysVolumeFSEX, systemVolumeTableEx=systemVolumeTableEx, jBODHdIndex4=jBODHdIndex4, iSCSIServicePort=iSCSIServicePort, diskPerformanceNumber=diskPerformanceNumber, nasStorage=nasStorage, cacheAcceleration=cacheAcceleration, sysVolumeIndex=sysVolumeIndex, jBODHdTemperature3=jBODHdTemperature3, systemFanTable=systemFanTable, systemTraps=systemTraps, jBODHdDescr6=jBODHdDescr6, volumeTable=volumeTable, jBODHdStatus1=jBODHdStatus1, resourceMonitor=resourceMonitor, jBODHdCapacity1=jBODHdCapacity1, systemPowerTemp=systemPowerTemp, diskID=diskID, modelNameEX=modelNameEX, raidID=raidID, targetNumber=targetNumber, systemFreeMem=systemFreeMem, sysFanIndex=sysFanIndex, storage=storage, sysFanNumber=sysFanNumber, raidLevel=raidLevel, enclosureID=enclosureID, jBODHdStatus5=jBODHdStatus5, jBODHdModel4=jBODHdModel4, msataDiskCapacity=msataDiskCapacity, lunTableEntry=lunTableEntry, systemPower=systemPower, jBODHdSmartInfo3=jBODHdSmartInfo3, systemPowerNumber=systemPowerNumber)
mibBuilder.exportSymbols("NAS-MIB", sysFanDescr=sysFanDescr, hdTemperature=hdTemperature, jBODHdSmartInfo4=jBODHdSmartInfo4, diskTemperture=diskTemperture, systemFanEnclosureID=systemFanEnclosureID, sysVolumeNumber=sysVolumeNumber, jBODHdTemperature2=jBODHdTemperature2, jBODHdIndex7=jBODHdIndex7, ifErrorPacketsEX=ifErrorPacketsEX, volumeFreeSize=volumeFreeSize, ifIndex=ifIndex, sysVolumeStatus=sysVolumeStatus, sysVolumeNumberEX=sysVolumeNumberEX, sysVolumeDescr=sysVolumeDescr, poolTableEntry=poolTableEntry, hdDescrEX=hdDescrEX, systemFanStatus=systemFanStatus, eventWarning=eventWarning, jBODHdCapacity4=jBODHdCapacity4, ifPacketsReceived=ifPacketsReceived, sysVolumeFreeSizeEX=sysVolumeFreeSizeEX, jBODHdModel6=jBODHdModel6, jBODHdIndex1=jBODHdIndex1, hdStatus=hdStatus, systemSettings=systemSettings, volume=volume, targetIQN=targetIQN, volumeCapacity=volumeCapacity, systemFanID=systemFanID, systemIfTable=systemIfTable, poolCapacity=poolCapacity, systemFanNumber=systemFanNumber, hdModel=hdModel, jBODHdModel8=jBODHdModel8, diskTable=diskTable, sysFanDescrEX=sysFanDescrEX, jBODHdEntry8=jBODHdEntry8, ifPacketsReceivedEX=ifPacketsReceivedEX, jBODHdCapacity5=jBODHdCapacity5, ifEntry=ifEntry, jBODHdEntry4=jBODHdEntry4, hdCapacityEX=hdCapacityEX, systemFan=systemFan, raidStatus=raidStatus, jBODHdEntry5=jBODHdEntry5, volumeIndex=volumeIndex, jBODHdTable2=jBODHdTable2, lunBackupStatus=lunBackupStatus, systemPowerTable=systemPowerTable, eventErrorMsg=eventErrorMsg, targeTable=targeTable, sysVolumeFS=sysVolumeFS, jBODHdIndex8=jBODHdIndex8, jBODBitmap=jBODBitmap, systemFanSpeed=systemFanSpeed, poolTable=poolTable, jBODHdSmartInfo1=jBODHdSmartInfo1, jBODHdModel7=jBODHdModel7, systemPowerTableEntry=systemPowerTableEntry, ifDescr=ifDescr, jBODHdEntry6=jBODHdEntry6, ifDescrEX=ifDescrEX, volumeName=volumeName, ifNumberEX=ifNumberEX)
