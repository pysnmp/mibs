#
# PySNMP MIB module AVIAT-RXPERFORMANCE-EX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/aviat-wtm/AVIAT-RXPERFORMANCE-EX-MIB
# Produced by pysmi-1.1.12 at Mon Jul  1 10:51:35 2024
# On host fv-az665-510 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
aviatRxPerformQHourPeriod, aviatRxPerformDayPeriod, aviatRxPerformDayIndex, aviatRxPerformQHourIndex = mibBuilder.importSymbols("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourPeriod", "aviatRxPerformDayPeriod", "aviatRxPerformDayIndex", "aviatRxPerformQHourIndex")
AviatPowerLevel, = mibBuilder.importSymbols("AVIAT-TEXTCONVENTION-MIB", "AviatPowerLevel")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
NotificationType, Integer32, Counter32, Counter64, Gauge32, ObjectIdentity, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, TimeTicks, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "Counter32", "Counter64", "Gauge32", "ObjectIdentity", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "TimeTicks", "ModuleIdentity", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aviatModules, = mibBuilder.importSymbols("STXN-GLOBALREGISTER-MIB", "aviatModules")
aviatRxPerformanceExModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 33))
aviatRxPerformanceExModule.setRevisions(('2014-01-21 01:57',))
if mibBuilder.loadTexts: aviatRxPerformanceExModule.setLastUpdated('201401210157Z')
if mibBuilder.loadTexts: aviatRxPerformanceExModule.setOrganization('Aviat Networks')
aviatRxPerformanceExConf = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1))
aviatRxPerformanceExGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 1))
aviatRxPerformanceExCompl = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 2))
aviatRxPerformanceExMIBObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2))
aviatRxPerformExTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2), )
if mibBuilder.loadTexts: aviatRxPerformExTable.setStatus('current')
aviatRxPerformExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: aviatRxPerformExEntry.setStatus('current')
aviatRxPerformCinrReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 2), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMean.setStatus('current')
aviatRxPerformCinrReadingCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 3), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingCurrent.setStatus('current')
aviatRxPerformCinrReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 4), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMax.setStatus('current')
aviatRxPerformCinrReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMin.setStatus('current')
aviatRxPerformTxpowReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMean.setStatus('current')
aviatRxPerformTxpowReadingCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 7), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingCurrent.setStatus('current')
aviatRxPerformTxpowReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 8), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMax.setStatus('current')
aviatRxPerformTxpowReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 9), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMin.setStatus('current')
aviatRxPerformQuarterHourExTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3), )
if mibBuilder.loadTexts: aviatRxPerformQuarterHourExTable.setStatus('current')
aviatRxPerformQuarterHourExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourPeriod"))
if mibBuilder.loadTexts: aviatRxPerformQuarterHourExEntry.setStatus('current')
aviatRxPerformQHourCinrReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 4), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMean.setStatus('current')
aviatRxPerformQHourCinrReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMax.setStatus('current')
aviatRxPerformQHourCinrReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMin.setStatus('current')
aviatRxPerformQHourTxpowReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 7), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMean.setStatus('current')
aviatRxPerformQHourTxpowReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 8), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMax.setStatus('current')
aviatRxPerformQHourTxpowReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 9), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMin.setStatus('current')
aviatRxPerformDayExTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4), )
if mibBuilder.loadTexts: aviatRxPerformDayExTable.setStatus('current')
aviatRxPerformDayExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayPeriod"))
if mibBuilder.loadTexts: aviatRxPerformDayExEntry.setStatus('current')
aviatRxPerformDayCinrReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 4), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMean.setStatus('current')
aviatRxPerformDayCinrReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMax.setStatus('current')
aviatRxPerformDayCinrReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMin.setStatus('current')
aviatRxPerformDayTxpowReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 7), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMean.setStatus('current')
aviatRxPerformDayTxpowReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 8), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMax.setStatus('current')
aviatRxPerformDayTxpowReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 9), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMin.setStatus('current')
aviatRxPerformExObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 1, 1)).setObjects(("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingCurrent"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingCurrent"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourCinrReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourCinrReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourCinrReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourTxpowReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourTxpowReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourTxpowReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayCinrReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayCinrReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayCinrReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayTxpowReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayTxpowReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayTxpowReadingMin"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviatRxPerformExObjectGroup = aviatRxPerformExObjectGroup.setStatus('current')
aviatRxPerformanceExComplV1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 2, 1)).setObjects(("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformExObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviatRxPerformanceExComplV1 = aviatRxPerformanceExComplV1.setStatus('current')
mibBuilder.exportSymbols("AVIAT-RXPERFORMANCE-EX-MIB", aviatRxPerformDayExTable=aviatRxPerformDayExTable, aviatRxPerformTxpowReadingMax=aviatRxPerformTxpowReadingMax, aviatRxPerformDayTxpowReadingMin=aviatRxPerformDayTxpowReadingMin, aviatRxPerformQuarterHourExEntry=aviatRxPerformQuarterHourExEntry, aviatRxPerformanceExModule=aviatRxPerformanceExModule, aviatRxPerformCinrReadingMean=aviatRxPerformCinrReadingMean, aviatRxPerformanceExMIBObjs=aviatRxPerformanceExMIBObjs, aviatRxPerformDayCinrReadingMin=aviatRxPerformDayCinrReadingMin, aviatRxPerformanceExCompl=aviatRxPerformanceExCompl, aviatRxPerformQHourTxpowReadingMin=aviatRxPerformQHourTxpowReadingMin, aviatRxPerformTxpowReadingCurrent=aviatRxPerformTxpowReadingCurrent, aviatRxPerformDayTxpowReadingMax=aviatRxPerformDayTxpowReadingMax, aviatRxPerformanceExComplV1=aviatRxPerformanceExComplV1, aviatRxPerformExEntry=aviatRxPerformExEntry, aviatRxPerformExTable=aviatRxPerformExTable, aviatRxPerformQHourTxpowReadingMax=aviatRxPerformQHourTxpowReadingMax, aviatRxPerformExObjectGroup=aviatRxPerformExObjectGroup, aviatRxPerformCinrReadingCurrent=aviatRxPerformCinrReadingCurrent, aviatRxPerformQuarterHourExTable=aviatRxPerformQuarterHourExTable, aviatRxPerformDayCinrReadingMean=aviatRxPerformDayCinrReadingMean, aviatRxPerformDayCinrReadingMax=aviatRxPerformDayCinrReadingMax, aviatRxPerformDayTxpowReadingMean=aviatRxPerformDayTxpowReadingMean, aviatRxPerformQHourCinrReadingMax=aviatRxPerformQHourCinrReadingMax, aviatRxPerformCinrReadingMax=aviatRxPerformCinrReadingMax, aviatRxPerformTxpowReadingMin=aviatRxPerformTxpowReadingMin, aviatRxPerformanceExConf=aviatRxPerformanceExConf, aviatRxPerformTxpowReadingMean=aviatRxPerformTxpowReadingMean, aviatRxPerformQHourCinrReadingMin=aviatRxPerformQHourCinrReadingMin, aviatRxPerformanceExGroups=aviatRxPerformanceExGroups, PYSNMP_MODULE_ID=aviatRxPerformanceExModule, aviatRxPerformCinrReadingMin=aviatRxPerformCinrReadingMin, aviatRxPerformQHourCinrReadingMean=aviatRxPerformQHourCinrReadingMean, aviatRxPerformQHourTxpowReadingMean=aviatRxPerformQHourTxpowReadingMean, aviatRxPerformDayExEntry=aviatRxPerformDayExEntry)
