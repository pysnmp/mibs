#
# PySNMP MIB module AVIAT-RXPERFORMANCE-EX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/aviat-wtm/AVIAT-RXPERFORMANCE-EX-MIB
# Produced by pysmi-1.1.12 at Thu Nov 28 02:55:08 2024
# On host fv-az885-149 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
aviatRxPerformDayPeriod, aviatRxPerformQHourPeriod, aviatRxPerformDayIndex, aviatRxPerformQHourIndex = mibBuilder.importSymbols("AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayPeriod", "aviatRxPerformQHourPeriod", "aviatRxPerformDayIndex", "aviatRxPerformQHourIndex")
AviatPowerLevel, = mibBuilder.importSymbols("AVIAT-TEXTCONVENTION-MIB", "AviatPowerLevel")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, Counter32, MibIdentifier, NotificationType, TimeTicks, IpAddress, ObjectIdentity, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "MibIdentifier", "NotificationType", "TimeTicks", "IpAddress", "ObjectIdentity", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Counter64", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aviatModules, = mibBuilder.importSymbols("STXN-GLOBALREGISTER-MIB", "aviatModules")
aviatRxPerformanceExModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 33))
aviatRxPerformanceExModule.setRevisions(('2014-01-21 01:57',))
if mibBuilder.loadTexts: aviatRxPerformanceExModule.setLastUpdated('201401210157Z')
if mibBuilder.loadTexts: aviatRxPerformanceExModule.setOrganization('Aviat Networks')
aviatRxPerformanceExConf = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1))
aviatRxPerformanceExGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 1))
aviatRxPerformanceExCompl = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 2))
aviatRxPerformanceExMIBObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2))
aviatRxPerformExTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2), )
if mibBuilder.loadTexts: aviatRxPerformExTable.setStatus('current')
aviatRxPerformExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: aviatRxPerformExEntry.setStatus('current')
aviatRxPerformCinrReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 2), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMean.setStatus('current')
aviatRxPerformCinrReadingCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 3), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingCurrent.setStatus('current')
aviatRxPerformCinrReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 4), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMax.setStatus('current')
aviatRxPerformCinrReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformCinrReadingMin.setStatus('current')
aviatRxPerformTxpowReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMean.setStatus('current')
aviatRxPerformTxpowReadingCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 7), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingCurrent.setStatus('current')
aviatRxPerformTxpowReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 8), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMax.setStatus('current')
aviatRxPerformTxpowReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 2, 1, 9), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformTxpowReadingMin.setStatus('current')
aviatRxPerformQuarterHourExTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3), )
if mibBuilder.loadTexts: aviatRxPerformQuarterHourExTable.setStatus('current')
aviatRxPerformQuarterHourExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformQHourPeriod"))
if mibBuilder.loadTexts: aviatRxPerformQuarterHourExEntry.setStatus('current')
aviatRxPerformQHourCinrReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 4), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMean.setStatus('current')
aviatRxPerformQHourCinrReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMax.setStatus('current')
aviatRxPerformQHourCinrReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourCinrReadingMin.setStatus('current')
aviatRxPerformQHourTxpowReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 7), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMean.setStatus('current')
aviatRxPerformQHourTxpowReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 8), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMax.setStatus('current')
aviatRxPerformQHourTxpowReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 3, 1, 9), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformQHourTxpowReadingMin.setStatus('current')
aviatRxPerformDayExTable = MibTable((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4), )
if mibBuilder.loadTexts: aviatRxPerformDayExTable.setStatus('current')
aviatRxPerformDayExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayIndex"), (0, "AVIAT-RXPERFORMANCE-MIB", "aviatRxPerformDayPeriod"))
if mibBuilder.loadTexts: aviatRxPerformDayExEntry.setStatus('current')
aviatRxPerformDayCinrReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 4), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMean.setStatus('current')
aviatRxPerformDayCinrReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 5), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMax.setStatus('current')
aviatRxPerformDayCinrReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 6), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayCinrReadingMin.setStatus('current')
aviatRxPerformDayTxpowReadingMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 7), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMean.setStatus('current')
aviatRxPerformDayTxpowReadingMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 8), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMax.setStatus('current')
aviatRxPerformDayTxpowReadingMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2509, 9, 33, 2, 4, 1, 9), AviatPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviatRxPerformDayTxpowReadingMin.setStatus('current')
aviatRxPerformExObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 1, 1)).setObjects(("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingCurrent"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformCinrReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingCurrent"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformTxpowReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourCinrReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourCinrReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourCinrReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourTxpowReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourTxpowReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformQHourTxpowReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayCinrReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayCinrReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayCinrReadingMin"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayTxpowReadingMean"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayTxpowReadingMax"), ("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformDayTxpowReadingMin"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviatRxPerformExObjectGroup = aviatRxPerformExObjectGroup.setStatus('current')
aviatRxPerformanceExComplV1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 2509, 9, 33, 1, 2, 1)).setObjects(("AVIAT-RXPERFORMANCE-EX-MIB", "aviatRxPerformExObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviatRxPerformanceExComplV1 = aviatRxPerformanceExComplV1.setStatus('current')
mibBuilder.exportSymbols("AVIAT-RXPERFORMANCE-EX-MIB", aviatRxPerformCinrReadingMean=aviatRxPerformCinrReadingMean, aviatRxPerformCinrReadingCurrent=aviatRxPerformCinrReadingCurrent, aviatRxPerformDayCinrReadingMin=aviatRxPerformDayCinrReadingMin, aviatRxPerformDayCinrReadingMean=aviatRxPerformDayCinrReadingMean, aviatRxPerformTxpowReadingMean=aviatRxPerformTxpowReadingMean, aviatRxPerformanceExModule=aviatRxPerformanceExModule, aviatRxPerformQuarterHourExEntry=aviatRxPerformQuarterHourExEntry, aviatRxPerformExObjectGroup=aviatRxPerformExObjectGroup, aviatRxPerformQHourTxpowReadingMax=aviatRxPerformQHourTxpowReadingMax, aviatRxPerformCinrReadingMax=aviatRxPerformCinrReadingMax, aviatRxPerformDayExTable=aviatRxPerformDayExTable, aviatRxPerformCinrReadingMin=aviatRxPerformCinrReadingMin, aviatRxPerformTxpowReadingMin=aviatRxPerformTxpowReadingMin, aviatRxPerformDayExEntry=aviatRxPerformDayExEntry, PYSNMP_MODULE_ID=aviatRxPerformanceExModule, aviatRxPerformanceExComplV1=aviatRxPerformanceExComplV1, aviatRxPerformQHourCinrReadingMax=aviatRxPerformQHourCinrReadingMax, aviatRxPerformanceExGroups=aviatRxPerformanceExGroups, aviatRxPerformanceExConf=aviatRxPerformanceExConf, aviatRxPerformDayCinrReadingMax=aviatRxPerformDayCinrReadingMax, aviatRxPerformTxpowReadingMax=aviatRxPerformTxpowReadingMax, aviatRxPerformExEntry=aviatRxPerformExEntry, aviatRxPerformQHourTxpowReadingMin=aviatRxPerformQHourTxpowReadingMin, aviatRxPerformQuarterHourExTable=aviatRxPerformQuarterHourExTable, aviatRxPerformExTable=aviatRxPerformExTable, aviatRxPerformTxpowReadingCurrent=aviatRxPerformTxpowReadingCurrent, aviatRxPerformQHourCinrReadingMin=aviatRxPerformQHourCinrReadingMin, aviatRxPerformDayTxpowReadingMean=aviatRxPerformDayTxpowReadingMean, aviatRxPerformanceExCompl=aviatRxPerformanceExCompl, aviatRxPerformDayTxpowReadingMin=aviatRxPerformDayTxpowReadingMin, aviatRxPerformanceExMIBObjs=aviatRxPerformanceExMIBObjs, aviatRxPerformDayTxpowReadingMax=aviatRxPerformDayTxpowReadingMax, aviatRxPerformQHourCinrReadingMean=aviatRxPerformQHourCinrReadingMean, aviatRxPerformQHourTxpowReadingMean=aviatRxPerformQHourTxpowReadingMean)
