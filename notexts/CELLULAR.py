#
# PySNMP MIB module CELLULAR (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/peplink/CELLULAR
# Produced by pysmi-1.1.12 at Tue Sep 17 12:26:53 2024
# On host fv-az1019-803 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, TimeTicks, MibIdentifier, Counter32, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, Gauge32, iso, Counter64, enterprises, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "MibIdentifier", "Counter32", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "Gauge32", "iso", "Counter64", "enterprises", "ObjectIdentity", "Integer32")
DisplayString, TruthValue, RowStatus, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "TextualConvention", "MacAddress")
peplink = MibIdentifier((1, 3, 6, 1, 4, 1, 23695))
productMib = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200))
generalMib = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1))
cellularMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12))
if mibBuilder.loadTexts: cellularMib.setLastUpdated('201805071200Z')
if mibBuilder.loadTexts: cellularMib.setOrganization('PEPLINK')
cellularSignalInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1))
cellularSignalInfoTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1), )
if mibBuilder.loadTexts: cellularSignalInfoTable.setStatus('current')
cellularSignalInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1), ).setIndexNames((0, "CELLULAR", "cellularSignalInfoId"))
if mibBuilder.loadTexts: cellularSignalInfoEntry.setStatus('current')
cellularSignalInfoId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularSignalInfoId.setStatus('current')
cellularSignalInfoWanId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularSignalInfoWanId.setStatus('current')
cellularSignalRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 3), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularSignalRssi.setStatus('current')
cellularSignalSnr = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 4), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularSignalSnr.setStatus('current')
cellularSignalSinr = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 5), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularSignalSinr.setStatus('current')
cellularSignalEcio = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 6), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularSignalEcio.setStatus('current')
cellularSignalRsrp = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 7), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularSignalRsrp.setStatus('current')
cellularSignalRsrq = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 8), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularSignalRsrq.setStatus('current')
cellularNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularNetworkType.setStatus('current')
cellularBand = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularBand.setStatus('current')
cellularLac = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularLac.setStatus('current')
cellularTac = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularTac.setStatus('current')
cellularENodeBId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularENodeBId.setStatus('current')
cellularIdentityInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 2))
cellularIdentityInfoTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 2, 1), )
if mibBuilder.loadTexts: cellularIdentityInfoTable.setStatus('current')
cellularIdentityInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 2, 1, 1), ).setIndexNames((0, "CELLULAR", "cellularIdentityInfoId"))
if mibBuilder.loadTexts: cellularIdentityInfoEntry.setStatus('current')
cellularIdentityInfoId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularIdentityInfoId.setStatus('current')
cellularIdentityInfoImei = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 12, 2, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cellularIdentityInfoImei.setStatus('current')
mibBuilder.exportSymbols("CELLULAR", cellularSignalRsrp=cellularSignalRsrp, cellularSignalInfoId=cellularSignalInfoId, cellularIdentityInfoEntry=cellularIdentityInfoEntry, cellularENodeBId=cellularENodeBId, cellularIdentityInfoId=cellularIdentityInfoId, cellularNetworkType=cellularNetworkType, cellularSignalEcio=cellularSignalEcio, cellularSignalSnr=cellularSignalSnr, peplink=peplink, cellularLac=cellularLac, cellularIdentityInfo=cellularIdentityInfo, cellularSignalSinr=cellularSignalSinr, cellularIdentityInfoTable=cellularIdentityInfoTable, cellularIdentityInfoImei=cellularIdentityInfoImei, cellularSignalRsrq=cellularSignalRsrq, generalMib=generalMib, cellularSignalInfo=cellularSignalInfo, cellularMib=cellularMib, cellularSignalInfoEntry=cellularSignalInfoEntry, cellularSignalRssi=cellularSignalRssi, cellularBand=cellularBand, cellularSignalInfoWanId=cellularSignalInfoWanId, cellularSignalInfoTable=cellularSignalInfoTable, productMib=productMib, PYSNMP_MODULE_ID=cellularMib, cellularTac=cellularTac)
