#
# PySNMP MIB module SIAE-PTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/siae/SIAE-PTP-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 12:00:23 2024
# On host fv-az665-602 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
AlarmSeverityCode, AlarmStatus = mibBuilder.importSymbols("SIAE-ALARM-MIB", "AlarmSeverityCode", "AlarmStatus")
siaeMib, = mibBuilder.importSymbols("SIAE-TREE-MIB", "siaeMib")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, IpAddress, Gauge32, Integer32, Bits, TimeTicks, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, MibIdentifier, Counter64, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "Gauge32", "Integer32", "Bits", "TimeTicks", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "MibIdentifier", "Counter64", "Unsigned32", "ModuleIdentity")
TruthValue, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention", "RowStatus")
ptp = ModuleIdentity((1, 3, 6, 1, 4, 1, 3373, 1103, 100))
if mibBuilder.loadTexts: ptp.setLastUpdated('201605050000Z')
if mibBuilder.loadTexts: ptp.setOrganization('SIAE MICROELETTRONICA spa')
class ClockDomainType(TextualConvention, Unsigned32):
    reference = 'Section 7.1 Domains and Table 2 of [1]'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(24, 43)

class ClockProfileType(TextualConvention, Integer32):
    reference = 'Section 3.1.30 and 19.3 PTP profiles of [IEEE 1588-2008]'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("default", 1), ("telecom", 2), ("vendorspecific", 3))

class ClockQualityAccuracyType(TextualConvention, Integer32):
    reference = 'Section 5.3.7, 7.6.2.5 and Table 6 of [1]'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 254, 255))
    namedValues = NamedValues(("reserved00", 1), ("nanoSecond25", 32), ("nanoSecond100", 33), ("nanoSecond250", 34), ("microSec1", 35), ("microSec2dot5", 36), ("microSec10", 37), ("microSec25", 38), ("microSec100", 39), ("microSec250", 40), ("milliSec1", 41), ("milliSec2dot5", 42), ("milliSec10", 43), ("milliSec25", 44), ("milliSec100", 45), ("milliSec250", 46), ("second1", 47), ("second10", 48), ("secondGreater10", 49), ("unknown", 254), ("reserved255", 255))

class ClockQualityClassType(TextualConvention, Integer32):
    reference = 'section 5.3.7, 7.6.2.4 and Table 5 of [1]. section 6.4 and Table 2 of [2]'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class ClockStateType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("freerun", 1), ("acquiring", 2), ("locked", 3), ("holdoverInSpec", 4), ("holdoverOutOfSpec", 5))

class ClockTimeSourceType(TextualConvention, Integer32):
    reference = 'section 5.3.7, 7.6.2.6 and Table 7 of [1].'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(16, 32, 48, 64, 80, 96, 144, 160, 255))
    namedValues = NamedValues(("atomicClock", 16), ("gps", 32), ("terrestrialRadio", 48), ("ptp", 64), ("ntp", 80), ("handSet", 96), ("other", 144), ("internalOscillator", 160), ("reserved", 255))

class ClockInstanceType(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class ClockPPSInstanceType(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class ClockPortNumber(TextualConvention, Unsigned32):
    reference = 'Section 7.5.2.3 Port Number and 5.3.5 of [1]'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class ClockPortState(TextualConvention, Integer32):
    reference = 'Section 8.2.5.3.1 portState and 9.2.5 of [1]'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("initializing", 1), ("faulty", 2), ("disabled", 3), ("listening", 4), ("preMaster", 5), ("master", 6), ("passive", 7), ("uncalibrated", 8), ("slave", 9))

class ClockMechanismType(TextualConvention, Integer32):
    reference = 'Sections 8.2.5.4.4, 6.6.4 and 7.4.2 of [1].'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("e2e", 1))

class ClockTimeInterval(TextualConvention, OctetString):
    reference = 'Section 5.3.2 and setion 7.7.2.1 Timer interval specification of [1]'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

class ClockType(TextualConvention, Integer32):
    reference = 'section 6.5.1 of [1].'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2))
    namedValues = NamedValues(("boundaryClock", 2))

class PtpClockToDFormatType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("telecomTimeEvent", 1), ("telecomTimeAnnounce", 2), ("telecomGNSSstatus", 3), ("nmeazda", 4), ("iso8601", 5), ("ntp", 6), ("ublox", 7), ("chinaMobile", 8), ("chinaTelecom", 9), ("bcm", 10), ("bcmts", 11))

ptpMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 1), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpMibVersion.setStatus('current')
ptpProfileDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 2))
ptpSpecificDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3))
ptpDefaultDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4))
ptpCurrentDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 5))
ptpParentDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 6))
ptpTimePropertiesDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 7))
ptpPortDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8))
ptpClockPPSDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9))
ptpRadioAsymmetryDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 10))
ptpSystemProfile = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 2, 1), ClockProfileType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpSystemProfile.setStatus('current')
ptpProfileName = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpProfileName.setStatus('current')
ptpProfilePrimaryVersion = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpProfilePrimaryVersion.setStatus('current')
ptpProfileRevisionNumber = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpProfileRevisionNumber.setStatus('current')
ptpProfileIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 2, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="0019A7010100")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpProfileIdentifier.setStatus('current')
ptpClockDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1), )
if mibBuilder.loadTexts: ptpClockDataSetTable.setStatus('current')
ptpClockDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1), ).setIndexNames((0, "SIAE-PTP-MIB", "ptpClockDomainIndex"), (0, "SIAE-PTP-MIB", "ptpClockTypeIndex"), (0, "SIAE-PTP-MIB", "ptpClockInstanceIndex"))
if mibBuilder.loadTexts: ptpClockDataSetEntry.setStatus('current')
ptpClockDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 1), ClockDomainType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockDomainIndex.setStatus('current')
ptpClockTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 2), ClockType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockTypeIndex.setStatus('current')
ptpClockInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 3), ClockInstanceType().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockInstanceIndex.setStatus('current')
ptpClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockIdentity.setStatus('current')
ptpClockTwoStepFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockTwoStepFlag.setStatus('current')
ptpClockNumberPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockNumberPorts.setStatus('current')
ptpClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 7), ClockQualityClassType().clone(248)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockClass.setStatus('current')
ptpClockAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 8), ClockQualityAccuracyType().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockAccuracy.setStatus('current')
ptpClockOffsetScaledLogVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockOffsetScaledLogVariance.setStatus('current')
ptpClockPriority1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 128)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpClockPriority1.setStatus('current')
ptpClockPriority2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpClockPriority2.setStatus('current')
ptpClockSlaveOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpClockSlaveOnly.setStatus('current')
ptpClockLocalPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpClockLocalPriority.setStatus('current')
ptpClockRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 4, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpClockRowStatus.setStatus('current')
ptpSpecificDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 1), )
if mibBuilder.loadTexts: ptpSpecificDataSetTable.setStatus('current')
ptpSpecificDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 1, 1), ).setIndexNames((0, "SIAE-PTP-MIB", "ptpClockDomainIndex"), (0, "SIAE-PTP-MIB", "ptpClockTypeIndex"), (0, "SIAE-PTP-MIB", "ptpClockInstanceIndex"))
if mibBuilder.loadTexts: ptpSpecificDataSetEntry.setStatus('current')
ptpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2))).clone('down')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpAdminStatus.setStatus('current')
ptpStaticPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpStaticPortRole.setStatus('current')
ptpClockState = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 1, 1, 3), ClockStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockState.setStatus('current')
ptpCompliance = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("strictCompatibility", 1), ("looseCompatibility", 2))).clone('looseCompatibility')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpCompliance.setStatus('current')
ptpSpecificAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 2), )
if mibBuilder.loadTexts: ptpSpecificAlarmTable.setStatus('current')
ptpSpecificAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 2, 1), ).setIndexNames((0, "SIAE-PTP-MIB", "ptpClockDomainIndex"), (0, "SIAE-PTP-MIB", "ptpClockTypeIndex"), (0, "SIAE-PTP-MIB", "ptpClockInstanceIndex"))
if mibBuilder.loadTexts: ptpSpecificAlarmEntry.setStatus('current')
ptpFreeRunningAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 2, 1, 1), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpFreeRunningAlarm.setStatus('current')
ptpHoldoverInSpecAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 2, 1, 2), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpHoldoverInSpecAlarm.setStatus('current')
ptpHoldoverOutOfSpecAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 2, 1, 3), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpHoldoverOutOfSpecAlarm.setStatus('current')
ptpFreeRunningAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 3), AlarmSeverityCode().clone('warningTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpFreeRunningAlarmSeverityCode.setStatus('current')
ptpHoldoverInSpecAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 4), AlarmSeverityCode().clone('warningTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpHoldoverInSpecAlarmSeverityCode.setStatus('current')
ptpHoldoverOutOfSpecAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 3, 5), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpHoldoverOutOfSpecAlarmSeverityCode.setStatus('current')
ptpCurrentDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 5, 1), )
if mibBuilder.loadTexts: ptpCurrentDataSetTable.setStatus('current')
ptpCurrentDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 5, 1, 1), ).setIndexNames((0, "SIAE-PTP-MIB", "ptpClockDomainIndex"), (0, "SIAE-PTP-MIB", "ptpClockTypeIndex"), (0, "SIAE-PTP-MIB", "ptpClockInstanceIndex"))
if mibBuilder.loadTexts: ptpCurrentDataSetEntry.setStatus('current')
ptpCurrentStepsRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpCurrentStepsRemoved.setStatus('current')
ptpCurrentOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 5, 1, 1, 2), ClockTimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpCurrentOffsetFromMaster.setStatus('current')
ptpCurrentMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 5, 1, 1, 3), ClockTimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpCurrentMeanPathDelay.setStatus('current')
ptpParentDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 6, 1), )
if mibBuilder.loadTexts: ptpParentDataSetTable.setStatus('current')
ptpParentDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 6, 1, 1), ).setIndexNames((0, "SIAE-PTP-MIB", "ptpClockDomainIndex"), (0, "SIAE-PTP-MIB", "ptpClockTypeIndex"), (0, "SIAE-PTP-MIB", "ptpClockInstanceIndex"))
if mibBuilder.loadTexts: ptpParentDataSetEntry.setStatus('current')
ptpParentClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 6, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpParentClockIdentity.setStatus('current')
ptpParentPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 6, 1, 1, 2), ClockPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpParentPortNumber.setStatus('current')
ptpParentGMClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 6, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpParentGMClockIdentity.setStatus('current')
ptpParentGMClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 6, 1, 1, 4), ClockQualityClassType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpParentGMClockClass.setStatus('current')
ptpParentGMClockAccuracy = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 6, 1, 1, 5), ClockQualityAccuracyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpParentGMClockAccuracy.setStatus('current')
ptpParentGMClockOffsetScaledLogVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpParentGMClockOffsetScaledLogVariance.setStatus('current')
ptpParentGMPriority1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpParentGMPriority1.setStatus('current')
ptpParentGMPriority2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpParentGMPriority2.setStatus('current')
ptpTimeDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 7, 1), )
if mibBuilder.loadTexts: ptpTimeDataSetTable.setStatus('current')
ptpTimeDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 7, 1, 1), ).setIndexNames((0, "SIAE-PTP-MIB", "ptpClockDomainIndex"), (0, "SIAE-PTP-MIB", "ptpClockTypeIndex"), (0, "SIAE-PTP-MIB", "ptpClockInstanceIndex"))
if mibBuilder.loadTexts: ptpTimeDataSetEntry.setStatus('current')
ptpTimeCurrentUTCOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpTimeCurrentUTCOffset.setStatus('current')
ptpTimeCurrentUTCOffsetValid = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 7, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpTimeCurrentUTCOffsetValid.setStatus('current')
ptpTimeLeap59 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 7, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpTimeLeap59.setStatus('current')
ptpTimeLeap61 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 7, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpTimeLeap61.setStatus('current')
ptpTimeTimeTraceable = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 7, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpTimeTimeTraceable.setStatus('current')
ptpTimeFrequencyTraceable = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 7, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpTimeFrequencyTraceable.setStatus('current')
ptpTimescale = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 7, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpTimescale.setStatus('current')
ptpTimeTimeSource = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 7, 1, 1, 8), ClockTimeSourceType().clone('internalOscillator')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpTimeTimeSource.setStatus('current')
ptpClockPPSDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1), )
if mibBuilder.loadTexts: ptpClockPPSDataSetTable.setStatus('current')
ptpClockPPSDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1), ).setIndexNames((0, "SIAE-PTP-MIB", "ptpClockDomainIndex"), (0, "SIAE-PTP-MIB", "ptpClockTypeIndex"), (0, "SIAE-PTP-MIB", "ptpClockInstanceIndex"), (0, "SIAE-PTP-MIB", "ptpClockPPSInstanceIndex"))
if mibBuilder.loadTexts: ptpClockPPSDataSetEntry.setStatus('current')
ptpClockPPSInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 1), ClockPPSInstanceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpClockPPSInstanceIndex.setStatus('current')
ptpClockPPSInstanceCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockPPSInstanceCapability.setStatus('current')
ptpClockPPSDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("input", 1), ("output", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpClockPPSDirection.setStatus('current')
ptpClockPPSLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)).clone('PPS')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockPPSLabel.setStatus('current')
ptpClockPPSAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2))).clone('down')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpClockPPSAdminStatus.setStatus('current')
ptpClockPPSOffsetEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpClockPPSOffsetEnabled.setStatus('current')
ptpClockPPSOffsetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpClockPPSOffsetValue.setStatus('current')
ptpClockToDLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)).clone('ToD')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpClockToDLabel.setStatus('current')
ptpClockToDAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2))).clone('down')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpClockToDAdminStatus.setStatus('current')
ptpClockToDDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpClockToDDelay.setStatus('current')
ptpClockToDBaudrate = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(300, 300), ValueRangeConstraint(600, 600), ValueRangeConstraint(1200, 1200), ValueRangeConstraint(1800, 1800), ValueRangeConstraint(2400, 2400), ValueRangeConstraint(4800, 4800), ValueRangeConstraint(9600, 9600), ValueRangeConstraint(19200, 19200), ValueRangeConstraint(38400, 38400), ValueRangeConstraint(57600, 57600), ValueRangeConstraint(115200, 115200), ValueRangeConstraint(230400, 230400), )).clone(9600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpClockToDBaudrate.setStatus('current')
ptpClockToDFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 9, 1, 1, 12), PtpClockToDFormatType().clone('telecomTimeEvent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpClockToDFormat.setStatus('current')
ptpPortDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1), )
if mibBuilder.loadTexts: ptpPortDataSetTable.setStatus('current')
ptpPortDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1), ).setIndexNames((0, "SIAE-PTP-MIB", "ptpClockDomainIndex"), (0, "SIAE-PTP-MIB", "ptpClockTypeIndex"), (0, "SIAE-PTP-MIB", "ptpClockInstanceIndex"), (0, "SIAE-PTP-MIB", "ptpPortIndex"))
if mibBuilder.loadTexts: ptpPortDataSetEntry.setStatus('current')
ptpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 1), ClockPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpPortIndex.setStatus('current')
ptpPortClockIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpPortClockIdentity.setStatus('current')
ptpPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortIfIndex.setStatus('current')
ptpPortStaticRole = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 7, 9))).clone(namedValues=NamedValues(("master", 6), ("passive", 7), ("slave", 9))).clone('master')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortStaticRole.setStatus('current')
ptpPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2))).clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortAdminStatus.setStatus('current')
ptpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 6), ClockPortState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpPortState.setStatus('current')
ptpPortMinDelayReqInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-7, 7)).clone(-4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortMinDelayReqInterval.setStatus('current')
ptpPortLogAnnounceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-3, 6)).clone(-3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortLogAnnounceInterval.setStatus('current')
ptpPortAnnounceReceiptTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortAnnounceReceiptTimeout.setStatus('current')
ptpPortSyncInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-7, 0)).clone(-4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortSyncInterval.setStatus('current')
ptpPortDelayMechanism = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 11), ClockMechanismType().clone('e2e')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpPortDelayMechanism.setStatus('current')
ptpPortVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 2)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpPortVersionNumber.setStatus('current')
ptpPortNotSlave = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 13), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortNotSlave.setStatus('current')
ptpPortLocalPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortLocalPriority.setStatus('current')
ptpPortDestMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwardable", 1), ("nonForwardable", 2))).clone('nonForwardable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortDestMacAddress.setStatus('current')
ptpPortTxAsymmetryCompensation = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortTxAsymmetryCompensation.setStatus('current')
ptpPortRxAsymmetryCompensation = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortRxAsymmetryCompensation.setStatus('current')
ptpPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 1, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ptpPortRowStatus.setStatus('current')
ptpPortAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 2), )
if mibBuilder.loadTexts: ptpPortAlarmTable.setStatus('current')
ptpPortAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 2, 1), ).setIndexNames((0, "SIAE-PTP-MIB", "ptpClockDomainIndex"), (0, "SIAE-PTP-MIB", "ptpClockTypeIndex"), (0, "SIAE-PTP-MIB", "ptpClockInstanceIndex"), (0, "SIAE-PTP-MIB", "ptpPortIndex"))
if mibBuilder.loadTexts: ptpPortAlarmEntry.setStatus('current')
ptpPortFaultyAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 2, 1, 1), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpPortFaultyAlarm.setStatus('current')
ptpPortInitializingAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 2, 1, 2), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpPortInitializingAlarm.setStatus('current')
ptpPortUncalibratedAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 2, 1, 3), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpPortUncalibratedAlarm.setStatus('current')
ptpPortListeningAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 2, 1, 4), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpPortListeningAlarm.setStatus('current')
ptpPortActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 2, 1, 5), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpPortActiveStatus.setStatus('current')
ptpPortRadioAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 3), )
if mibBuilder.loadTexts: ptpPortRadioAlarmTable.setStatus('current')
ptpPortRadioAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 3, 1), ).setIndexNames((0, "SIAE-PTP-MIB", "ptpClockDomainIndex"), (0, "SIAE-PTP-MIB", "ptpClockTypeIndex"), (0, "SIAE-PTP-MIB", "ptpClockInstanceIndex"), (0, "SIAE-PTP-MIB", "ptpPortIndex"))
if mibBuilder.loadTexts: ptpPortRadioAlarmEntry.setStatus('current')
ptpPortRadioCapacityAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 3, 1, 1), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpPortRadioCapacityAlarm.setStatus('current')
ptpPortFaultyAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 4), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpPortFaultyAlarmSeverityCode.setStatus('current')
ptpPortInitializingAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 5), AlarmSeverityCode().clone('warningTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpPortInitializingAlarmSeverityCode.setStatus('current')
ptpPortUncalibratedAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 6), AlarmSeverityCode().clone('warningTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpPortUncalibratedAlarmSeverityCode.setStatus('current')
ptpPortListeningAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 7), AlarmSeverityCode().clone('warningTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpPortListeningAlarmSeverityCode.setStatus('current')
ptpPortActiveStatusSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 8), AlarmSeverityCode().clone('statusTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpPortActiveStatusSeverityCode.setStatus('current')
ptpPortRadioCapacityAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 8, 9), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpPortRadioCapacityAlarmSeverityCode.setStatus('current')
ptpRadioAsymmetryDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 10, 1), )
if mibBuilder.loadTexts: ptpRadioAsymmetryDataSetTable.setStatus('current')
ptpRadioAsymmetryDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 10, 1, 1), ).setIndexNames((0, "SIAE-PTP-MIB", "ptpRadioBrIndex"))
if mibBuilder.loadTexts: ptpRadioAsymmetryDataSetEntry.setStatus('current')
ptpRadioBrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ptpRadioBrIndex.setStatus('current')
ptpRadioOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 100, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ptpRadioOffset.setStatus('current')
mibBuilder.exportSymbols("SIAE-PTP-MIB", ptpPortRadioCapacityAlarmSeverityCode=ptpPortRadioCapacityAlarmSeverityCode, ptpParentGMPriority1=ptpParentGMPriority1, ptpMibVersion=ptpMibVersion, ptpProfileIdentifier=ptpProfileIdentifier, ptpPortVersionNumber=ptpPortVersionNumber, ptpHoldoverInSpecAlarm=ptpHoldoverInSpecAlarm, ptpClockDomainIndex=ptpClockDomainIndex, ptpSpecificDataSetTable=ptpSpecificDataSetTable, ptpSpecificDataSet=ptpSpecificDataSet, ptpPortActiveStatus=ptpPortActiveStatus, ptpParentGMClockIdentity=ptpParentGMClockIdentity, ptpTimeDataSetEntry=ptpTimeDataSetEntry, ptpClockOffsetScaledLogVariance=ptpClockOffsetScaledLogVariance, PtpClockToDFormatType=PtpClockToDFormatType, ClockProfileType=ClockProfileType, ptpFreeRunningAlarm=ptpFreeRunningAlarm, ptpPortStaticRole=ptpPortStaticRole, ptpPortIfIndex=ptpPortIfIndex, ptpTimeTimeTraceable=ptpTimeTimeTraceable, ptpParentGMClockClass=ptpParentGMClockClass, ptpTimePropertiesDataSet=ptpTimePropertiesDataSet, ptpClockPriority2=ptpClockPriority2, ptpTimeLeap61=ptpTimeLeap61, ptpPortClockIdentity=ptpPortClockIdentity, ptpPortAdminStatus=ptpPortAdminStatus, ptpPortSyncInterval=ptpPortSyncInterval, ptpCurrentOffsetFromMaster=ptpCurrentOffsetFromMaster, ClockQualityClassType=ClockQualityClassType, ClockTimeSourceType=ClockTimeSourceType, ptpDefaultDataSet=ptpDefaultDataSet, ptpClockPPSDataSetEntry=ptpClockPPSDataSetEntry, ptpPortDataSetTable=ptpPortDataSetTable, ClockStateType=ClockStateType, ptpProfileDataSet=ptpProfileDataSet, ptpPortDestMacAddress=ptpPortDestMacAddress, ptpCompliance=ptpCompliance, ptpPortUncalibratedAlarm=ptpPortUncalibratedAlarm, ptpPortRxAsymmetryCompensation=ptpPortRxAsymmetryCompensation, ptpPortFaultyAlarm=ptpPortFaultyAlarm, ptpClockRowStatus=ptpClockRowStatus, ptpClockToDBaudrate=ptpClockToDBaudrate, ptpParentPortNumber=ptpParentPortNumber, ptpPortState=ptpPortState, ptpPortNotSlave=ptpPortNotSlave, ptpClockLocalPriority=ptpClockLocalPriority, ptpRadioAsymmetryDataSetTable=ptpRadioAsymmetryDataSetTable, PYSNMP_MODULE_ID=ptp, ptpClockTwoStepFlag=ptpClockTwoStepFlag, ptpPortInitializingAlarmSeverityCode=ptpPortInitializingAlarmSeverityCode, ptpTimeCurrentUTCOffset=ptpTimeCurrentUTCOffset, ptpClockPriority1=ptpClockPriority1, ptpPortRadioAlarmTable=ptpPortRadioAlarmTable, ptpPortListeningAlarm=ptpPortListeningAlarm, ptpClockTypeIndex=ptpClockTypeIndex, ptpHoldoverOutOfSpecAlarm=ptpHoldoverOutOfSpecAlarm, ptpPortRadioCapacityAlarm=ptpPortRadioCapacityAlarm, ClockPortState=ClockPortState, ClockTimeInterval=ClockTimeInterval, ptpClockSlaveOnly=ptpClockSlaveOnly, ClockQualityAccuracyType=ClockQualityAccuracyType, ptpCurrentStepsRemoved=ptpCurrentStepsRemoved, ptpClockPPSInstanceIndex=ptpClockPPSInstanceIndex, ptpPortAlarmEntry=ptpPortAlarmEntry, ptpTimeTimeSource=ptpTimeTimeSource, ptpRadioOffset=ptpRadioOffset, ptpSystemProfile=ptpSystemProfile, ptpPortListeningAlarmSeverityCode=ptpPortListeningAlarmSeverityCode, ptpTimeCurrentUTCOffsetValid=ptpTimeCurrentUTCOffsetValid, ClockType=ClockType, ptpParentGMClockOffsetScaledLogVariance=ptpParentGMClockOffsetScaledLogVariance, ptpClockPPSOffsetValue=ptpClockPPSOffsetValue, ptpTimescale=ptpTimescale, ptpPortRowStatus=ptpPortRowStatus, ptpClockToDLabel=ptpClockToDLabel, ptpPortDataSet=ptpPortDataSet, ptpClockInstanceIndex=ptpClockInstanceIndex, ptpCurrentDataSet=ptpCurrentDataSet, ptpParentGMPriority2=ptpParentGMPriority2, ptpPortLogAnnounceInterval=ptpPortLogAnnounceInterval, ptpPortAnnounceReceiptTimeout=ptpPortAnnounceReceiptTimeout, ptpPortIndex=ptpPortIndex, ptpPortUncalibratedAlarmSeverityCode=ptpPortUncalibratedAlarmSeverityCode, ptpClockToDAdminStatus=ptpClockToDAdminStatus, ptpTimeLeap59=ptpTimeLeap59, ptpClockPPSAdminStatus=ptpClockPPSAdminStatus, ptpSpecificDataSetEntry=ptpSpecificDataSetEntry, ClockPortNumber=ClockPortNumber, ptpPortTxAsymmetryCompensation=ptpPortTxAsymmetryCompensation, ptpPortFaultyAlarmSeverityCode=ptpPortFaultyAlarmSeverityCode, ptpClockState=ptpClockState, ptpProfilePrimaryVersion=ptpProfilePrimaryVersion, ptpClockPPSInstanceCapability=ptpClockPPSInstanceCapability, ptpClockPPSOffsetEnabled=ptpClockPPSOffsetEnabled, ptpPortAlarmTable=ptpPortAlarmTable, ClockInstanceType=ClockInstanceType, ptpParentGMClockAccuracy=ptpParentGMClockAccuracy, ptpParentClockIdentity=ptpParentClockIdentity, ClockMechanismType=ClockMechanismType, ptpPortRadioAlarmEntry=ptpPortRadioAlarmEntry, ptpRadioBrIndex=ptpRadioBrIndex, ptpFreeRunningAlarmSeverityCode=ptpFreeRunningAlarmSeverityCode, ptpClockClass=ptpClockClass, ptpPortMinDelayReqInterval=ptpPortMinDelayReqInterval, ptpTimeDataSetTable=ptpTimeDataSetTable, ptpRadioAsymmetryDataSetEntry=ptpRadioAsymmetryDataSetEntry, ptp=ptp, ptpClockToDFormat=ptpClockToDFormat, ptpClockIdentity=ptpClockIdentity, ptpHoldoverInSpecAlarmSeverityCode=ptpHoldoverInSpecAlarmSeverityCode, ptpClockDataSetTable=ptpClockDataSetTable, ptpRadioAsymmetryDataSet=ptpRadioAsymmetryDataSet, ptpPortLocalPriority=ptpPortLocalPriority, ptpStaticPortRole=ptpStaticPortRole, ptpHoldoverOutOfSpecAlarmSeverityCode=ptpHoldoverOutOfSpecAlarmSeverityCode, ptpClockPPSDataSet=ptpClockPPSDataSet, ptpAdminStatus=ptpAdminStatus, ptpCurrentDataSetTable=ptpCurrentDataSetTable, ptpClockPPSDirection=ptpClockPPSDirection, ptpParentDataSetEntry=ptpParentDataSetEntry, ptpClockDataSetEntry=ptpClockDataSetEntry, ptpPortActiveStatusSeverityCode=ptpPortActiveStatusSeverityCode, ptpClockAccuracy=ptpClockAccuracy, ptpProfileRevisionNumber=ptpProfileRevisionNumber, ptpParentDataSetTable=ptpParentDataSetTable, ptpTimeFrequencyTraceable=ptpTimeFrequencyTraceable, ptpClockPPSLabel=ptpClockPPSLabel, ptpParentDataSet=ptpParentDataSet, ClockPPSInstanceType=ClockPPSInstanceType, ClockDomainType=ClockDomainType, ptpClockToDDelay=ptpClockToDDelay, ptpClockNumberPorts=ptpClockNumberPorts, ptpSpecificAlarmTable=ptpSpecificAlarmTable, ptpPortDelayMechanism=ptpPortDelayMechanism, ptpPortInitializingAlarm=ptpPortInitializingAlarm, ptpSpecificAlarmEntry=ptpSpecificAlarmEntry, ptpCurrentMeanPathDelay=ptpCurrentMeanPathDelay, ptpProfileName=ptpProfileName, ptpCurrentDataSetEntry=ptpCurrentDataSetEntry, ptpClockPPSDataSetTable=ptpClockPPSDataSetTable, ptpPortDataSetEntry=ptpPortDataSetEntry)
