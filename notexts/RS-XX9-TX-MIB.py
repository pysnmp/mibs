#
# PySNMP MIB module RS-XX9-TX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/rs/RS-XX9-TX-MIB
# Produced by pysmi-1.1.12 at Mon Oct  7 02:58:07 2024
# On host fv-az775-99 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
commonNotificationAlarmClass, = mibBuilder.importSymbols("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass")
rsXx9MibModule, rsXx9Tx = mibBuilder.importSymbols("RS-XX9-SMI-MIB", "rsXx9MibModule", "rsXx9Tx")
NotificationPriority, NotificationState, NotificationClass, NotificationMask, IndexAB, Trigger, Xx9ModulationMode, SwitchOnOff, IndexTransmitter = mibBuilder.importSymbols("RS-XX9-TC-MIB", "NotificationPriority", "NotificationState", "NotificationClass", "NotificationMask", "IndexAB", "Trigger", "Xx9ModulationMode", "SwitchOnOff", "IndexTransmitter")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter32, Counter64, ObjectIdentity, iso, Gauge32, MibIdentifier, NotificationType, ModuleIdentity, Bits, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter32", "Counter64", "ObjectIdentity", "iso", "Gauge32", "MibIdentifier", "NotificationType", "ModuleIdentity", "Bits", "TimeTicks", "IpAddress")
TextualConvention, DisplayString, TruthValue, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "DateAndTime")
rsXx9TxMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 1, 216, 3))
rsXx9TxMibModule.setRevisions(('2016-05-04 15:00', '2016-04-05 15:00', '2016-03-08 09:00', '2016-01-28 11:00', '2015-11-30 08:00', '2015-11-26 18:00', '2015-10-19 16:00', '2015-07-02 12:00', '2014-12-22 16:00', '2014-10-09 14:00', '2014-04-30 16:00', '2014-02-04 17:00', '2013-11-18 13:00', '2013-03-18 08:00', '2011-08-19 08:00',))
if mibBuilder.loadTexts: rsXx9TxMibModule.setLastUpdated('201605041500Z')
if mibBuilder.loadTexts: rsXx9TxMibModule.setOrganization('Rohde&Schwarz GmbH & Co. KG')
class PrecorrectionState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("idle", 1), ("acquisition", 2), ("calculation", 3), ("checkResult", 4))

class PrecorrectionSignalLevel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("undefined", 1), ("ok", 2), ("tooLow", 3), ("tooHigh", 4), ("noInput", 5))

class PrecorrectionOperationMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 4))
    namedValues = NamedValues(("bypass", 1), ("stop", 2), ("run", 4))

class AutomaticMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("severalTimes", 1), ("singleShot", 2))

class SatSignalType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("undefinedType", 1), ("dvbs", 2), ("dvbs2", 3), ("dss", 4), ("auto", 5))

class ControllerMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("standard", 1), ("jitter", 2))

class DohertyActive(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 4))
    namedValues = NamedValues(("true", 1), ("false", 2), ("warning", 4))

rsXx9TxNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0))
txSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 1)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txSummary.setStatus('current')
txRF = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 2)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txRF.setStatus('current')
txReflection = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txReflection.setStatus('current')
txRfSensorSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 4)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txRfSensorSummary.setStatus('current')
txLocal = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 5)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txLocal.setStatus('current')
txExciterAutomaticOn = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 6)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txExciterAutomaticOn.setStatus('current')
txExciterAutomaticReady = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 7)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txExciterAutomaticReady.setStatus('current')
txExciterAutomaticSwitchedOver = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 8)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txExciterAutomaticSwitchedOver.setStatus('current')
txExciterAutomaticRfSwitchSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 9)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txExciterAutomaticRfSwitchSummary.setStatus('current')
txExciterAutomaticSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10))
if mibBuilder.loadTexts: txExciterAutomaticSummary.setStatus('current')
txActiveReserveExcAutoOn = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 1000))
if mibBuilder.loadTexts: txActiveReserveExcAutoOn.setStatus('current')
txActiveReserveExcAutoReady = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 1001)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txActiveReserveExcAutoReady.setStatus('current')
txActiveReserveExcAutoSwitchedOver = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 1002)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txActiveReserveExcAutoSwitchedOver.setStatus('current')
txActiveReserveExcAutoRfSwitchSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 1003)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txActiveReserveExcAutoRfSwitchSummary.setStatus('current')
txActiveReserveExcAutoSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 1004)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txActiveReserveExcAutoSummary.setStatus('current')
txActiveReserveOstAutoOn = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 1500))
if mibBuilder.loadTexts: txActiveReserveOstAutoOn.setStatus('current')
txActiveReserveOstAutoReady = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 1501)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txActiveReserveOstAutoReady.setStatus('current')
txActiveReserveOstAutoSwitchedOver = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 1502)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txActiveReserveOstAutoSwitchedOver.setStatus('current')
txActiveReserveOstAutoRfSwitchSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 1503)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txActiveReserveOstAutoRfSwitchSummary.setStatus('current')
txActiveReserveOstAutoSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 1504)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txActiveReserveOstAutoSummary.setStatus('current')
txExciterSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 2000)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txExciterNotificationPriority"), ("RS-XX9-TX-MIB", "txExciterNotificationState"))
if mibBuilder.loadTexts: txExciterSummary.setStatus('current')
txExciterLoop = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 2001)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txExciterNotificationPriority"), ("RS-XX9-TX-MIB", "txExciterNotificationState"))
if mibBuilder.loadTexts: txExciterLoop.setStatus('current')
txExciterMute = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 2002)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txExciterNotificationPriority"), ("RS-XX9-TX-MIB", "txExciterNotificationState"))
if mibBuilder.loadTexts: txExciterMute.setStatus('current')
txExciterOutputConnect = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 2003)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txExciterNotificationPriority"), ("RS-XX9-TX-MIB", "txExciterNotificationState"))
if mibBuilder.loadTexts: txExciterOutputConnect.setStatus('current')
txExciterRfState = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 2004)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txExciterNotificationPriority"), ("RS-XX9-TX-MIB", "txExciterNotificationState"))
if mibBuilder.loadTexts: txExciterRfState.setStatus('current')
txInpIfLogState = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3000)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfLogState.setStatus('current')
txInpIfLogInfoPacket = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3001)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfLogInfoPacket.setStatus('current')
txInpIfLogPacketLength = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3002)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfLogPacketLength.setStatus('current')
txInpIfIpState = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3003)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfIpState.setStatus('current')
txInpIfIpInfoPacket = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3004)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfIpInfoPacket.setStatus('current')
txInpIfIpPacketLength = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3005)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfIpPacketLength.setStatus('current')
txInpIfTsState = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3006)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfTsState.setStatus('current')
txInpIfTsInfoPacket = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3007)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfTsInfoPacket.setStatus('current')
txInpIfTsPacketLength = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3008)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfTsPacketLength.setStatus('current')
txInpIfLogDatarateBufferUnderrun = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3009)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfLogDatarateBufferUnderrun.setStatus('current')
txInpIfLogDatarateBufferOverflow = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3010)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfLogDatarateBufferOverflow.setStatus('current')
txInpIfSatInputState = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3011)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfSatInputState.setStatus('current')
txInpIfSatInfoPacket = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3012)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfSatInfoPacket.setStatus('current')
txInpIfSatPacketLength = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3013)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfSatPacketLength.setStatus('current')
txInpIfSatTransponderLocked = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3014)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfSatTransponderLocked.setStatus('current')
txInpIfSatIpOutput = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3015)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfSatIpOutput.setStatus('current')
txInpIfSatReceiverState = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3016)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfSatReceiverState.setStatus('current')
txInpIfSatBtsStatus = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3017)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfSatBtsStatus.setStatus('current')
txInpIfSatDriftStatus = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3018)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfSatDriftStatus.setStatus('current')
txInpIfSatLinkMarginStatus = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3019)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfSatLinkMarginStatus.setStatus('current')
txInpIfSatCarrierNoiseStatus = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3020)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if mibBuilder.loadTexts: txInpIfSatCarrierNoiseStatus.setStatus('current')
txInpIfSatStreamTsIdMatch = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 3021)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txInpIfSatStreamTsIdMatch.setStatus('current')
txInpAuto1Active = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 4000)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpAutoNotificationPriority"), ("RS-XX9-TX-MIB", "txInpAutoNotificationState"))
if mibBuilder.loadTexts: txInpAuto1Active.setStatus('current')
txInpAutoState = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 4001)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txInpAutoNotificationPriority"), ("RS-XX9-TX-MIB", "txInpAutoNotificationState"))
if mibBuilder.loadTexts: txInpAutoState.setStatus('current')
txFrqRegSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 5000)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txFrqRegNotificationPriority"), ("RS-XX9-TX-MIB", "txFrqRegNotificationState"))
if mibBuilder.loadTexts: txFrqRegSummary.setStatus('current')
txFrqRegCurrentSource = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 5001)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txFrqRegNotificationPriority"), ("RS-XX9-TX-MIB", "txFrqRegNotificationState"))
if mibBuilder.loadTexts: txFrqRegCurrentSource.setStatus('current')
txFrqRegSourceExtRef = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 5002)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txFrqRegNotificationPriority"), ("RS-XX9-TX-MIB", "txFrqRegNotificationState"))
if mibBuilder.loadTexts: txFrqRegSourceExtRef.setStatus('current')
txFrqRegSourceExtPPS = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 5003)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txFrqRegNotificationPriority"), ("RS-XX9-TX-MIB", "txFrqRegNotificationState"))
if mibBuilder.loadTexts: txFrqRegSourceExtPPS.setStatus('current')
txFrqRegSourceIntGPS = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 5004)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txFrqRegNotificationPriority"), ("RS-XX9-TX-MIB", "txFrqRegNotificationState"))
if mibBuilder.loadTexts: txFrqRegSourceIntGPS.setStatus('current')
txSfnSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 6000)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txSfnNotificationPriority"), ("RS-XX9-TX-MIB", "txSfnNotificationState"))
if mibBuilder.loadTexts: txSfnSummary.setStatus('current')
txPrecorrLinSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 8000)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txPrecorrNotificationPriority"), ("RS-XX9-TX-MIB", "txPrecorrNotificationState"))
if mibBuilder.loadTexts: txPrecorrLinSummary.setStatus('current')
txPrecorrNonLinSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 8001)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txPrecorrNotificationPriority"), ("RS-XX9-TX-MIB", "txPrecorrNotificationState"))
if mibBuilder.loadTexts: txPrecorrNonLinSummary.setStatus('current')
txPrecorrMerState = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 8002)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txPrecorrNotificationPriority"), ("RS-XX9-TX-MIB", "txPrecorrNotificationState"))
if mibBuilder.loadTexts: txPrecorrMerState.setStatus('current')
txOstSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 9000)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txOstNotificationPriority"), ("RS-XX9-TX-MIB", "txOstNotificationState"))
if mibBuilder.loadTexts: txOstSummary.setStatus('current')
txAmpSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10000)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpSummary.setStatus('current')
txAmpRfPowerFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10001)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpRfPowerFail.setStatus('current')
txAmpReflection = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10002)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpReflection.setStatus('current')
txAmpSupplyFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10003)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpSupplyFail.setStatus('current')
txAmpRfInFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10004)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpRfInFail.setStatus('current')
txAmpMute = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10005)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpMute.setStatus('current')
txAmpTemperatureFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10006)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpTemperatureFail.setStatus('current')
txAmpTransistorFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10007)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpTransistorFail.setStatus('current')
txAmpRegulationFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10008)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpRegulationFail.setStatus('current')
txAmpAcFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10009)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpAcFail.setStatus('current')
txAmpDcFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10010)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpDcFail.setStatus('current')
txAmpDriverFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10011)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpDriverFail.setStatus('obsolete')
txAmpLink = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10012)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpLink.setStatus('current')
txAmpBiasFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10013)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpBiasFail.setStatus('current')
txAmpInitFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10014)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpInitFail.setStatus('current')
txAmpAbsorberFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10015)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpAbsorberFail.setStatus('current')
txAmpOn = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10016)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpOn.setStatus('current')
txAmpBlocking = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 10017)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"))
if mibBuilder.loadTexts: txAmpBlocking.setStatus('current')
txSwiCoSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 11000)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txSwiCoNotificationPriority"), ("RS-XX9-TX-MIB", "txSwiCoNotificationState"))
if mibBuilder.loadTexts: txSwiCoSummary.setStatus('current')
txSwiCoHwLink = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 11001))
if mibBuilder.loadTexts: txSwiCoHwLink.setStatus('current')
txSwiCoHwWarn = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 11002))
if mibBuilder.loadTexts: txSwiCoHwWarn.setStatus('current')
txSwiCoHwFault = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 11003))
if mibBuilder.loadTexts: txSwiCoHwFault.setStatus('current')
txSwiCoHwLocal = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 11004))
if mibBuilder.loadTexts: txSwiCoHwLocal.setStatus('current')
txSwiCoRcbFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 11005)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txSwiCoNotificationPriority"), ("RS-XX9-TX-MIB", "txSwiCoNotificationState"))
if mibBuilder.loadTexts: txSwiCoRcbFail.setStatus('current')
txSwiCoRfProbeFail = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 11006)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txSwiCoNotificationPriority"), ("RS-XX9-TX-MIB", "txSwiCoNotificationState"))
if mibBuilder.loadTexts: txSwiCoRfProbeFail.setStatus('current')
txSwiCoRegulationSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 11007)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txSwiCoNotificationPriority"), ("RS-XX9-TX-MIB", "txSwiCoNotificationState"))
if mibBuilder.loadTexts: txSwiCoRegulationSummary.setStatus('current')
txRfSensorLinkStatus = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 12000)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"))
if mibBuilder.loadTexts: txRfSensorLinkStatus.setStatus('current')
txRfSensorCalibrated = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 0, 12001))
if mibBuilder.loadTexts: txRfSensorCalibrated.setStatus('current')
rsXx9TxObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1))
txTransmitter = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1))
txTransmitterNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 1), )
if mibBuilder.loadTexts: txTransmitterNotificationTable.setStatus('current')
txTransmitterNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txTransmitterNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txTransmitterNotificationIdx"))
if mibBuilder.loadTexts: txTransmitterNotificationEntry.setStatus('current')
txTransmitterNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txTransmitterNotificationTxIdx.setStatus('current')
txTransmitterNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 10), ValueRangeConstraint(1000, 1004), ValueRangeConstraint(1500, 1504), )))
if mibBuilder.loadTexts: txTransmitterNotificationIdx.setStatus('current')
txTransmitterNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1000, 1001, 1002, 1003, 1004, 1500, 1501, 1502, 1503, 1504))).clone(namedValues=NamedValues(("txSummary", 1), ("txRF", 2), ("txReflection", 3), ("txRfSensorSummary", 4), ("txLocal", 5), ("txExciterAutomaticOn", 6), ("txExciterAutomaticReady", 7), ("txExciterAutomaticSwitchedOver", 8), ("txExciterAutomaticRfSwitchSummary", 9), ("txExciterAutomaticSummary", 10), ("txActiveReserveExcAutoOn", 1000), ("txActiveReserveExcAutoReady", 1001), ("txActiveReserveExcAutoSwitchedOver", 1002), ("txActiveReserveExcAutoRfSwitchSummary", 1003), ("txActiveReserveExcAutoSummary", 1004), ("txActiveReserveOstAutoOn", 1500), ("txActiveReserveOstAutoReady", 1501), ("txActiveReserveOstAutoSwitchedOver", 1502), ("txActiveReserveOstAutoRfSwitchSummary", 1503), ("txActiveReserveOstAutoSummary", 1504)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txTransmitterNotificationName.setStatus('current')
txTransmitterNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 1, 1, 4), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txTransmitterNotificationMask.setStatus('current')
txTransmitterNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 1, 1, 5), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txTransmitterNotificationPriority.setStatus('current')
txTransmitterNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 1, 1, 6), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txTransmitterNotificationState.setStatus('current')
txTransmitterCommandsTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 2), )
if mibBuilder.loadTexts: txTransmitterCommandsTable.setStatus('current')
txTransmitterCommandsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txTransmitterNotificationTxIdx"))
if mibBuilder.loadTexts: txTransmitterCommandsEntry.setStatus('current')
txTransCmdReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 2, 1, 1), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txTransCmdReset.setStatus('current')
txTransCmdOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 2, 1, 2), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txTransCmdOperationMode.setStatus('current')
txTransCmdNominalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 2, 1, 3), Unsigned32()).setUnits('milli W').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txTransCmdNominalPower.setStatus('current')
txTransCmdReserveOpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 2, 1, 4), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txTransCmdReserveOpMode.setStatus('current')
txTransCmdChangeModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 2, 1, 5), Xx9ModulationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txTransCmdChangeModulation.setStatus('current')
txTransCmdReflectionCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("keepRfOff", 1), ("checkThreeTimes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txTransCmdReflectionCheck.setStatus('current')
txTransCmdPrgOnAfterSumFault = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 2, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txTransCmdPrgOnAfterSumFault.setStatus('current')
txTransCmdWarnOnDohertyMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 2, 1, 8), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txTransCmdWarnOnDohertyMismatch.setStatus('current')
txTransmitterStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 3), )
if mibBuilder.loadTexts: txTransmitterStateTable.setStatus('current')
txTransmitterStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 3, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txTransmitterNotificationTxIdx"))
if mibBuilder.loadTexts: txTransmitterStateEntry.setStatus('current')
txTransStForwardPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 3, 1, 1), Unsigned32()).setUnits('milli W').setMaxAccess("readonly")
if mibBuilder.loadTexts: txTransStForwardPower.setStatus('current')
txTransStReflectedPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 3, 1, 2), Unsigned32()).setUnits('milli W').setMaxAccess("readonly")
if mibBuilder.loadTexts: txTransStReflectedPower.setStatus('current')
txTransStModulationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 3, 1, 3), Xx9ModulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txTransStModulationMode.setStatus('current')
txTransStPrimaryModMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 3, 1, 4), Xx9ModulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txTransStPrimaryModMode.setStatus('current')
txTransStSecondaryModMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 3, 1, 5), Xx9ModulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txTransStSecondaryModMode.setStatus('current')
txTransStPaEfficiency = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-999, 999))).setUnits('per mille').setMaxAccess("readonly")
if mibBuilder.loadTexts: txTransStPaEfficiency.setStatus('current')
txExciterAutomaticTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 4), )
if mibBuilder.loadTexts: txExciterAutomaticTable.setStatus('current')
txExciterAutomaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 4, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txTransmitterNotificationTxIdx"))
if mibBuilder.loadTexts: txExciterAutomaticEntry.setStatus('current')
txExcAutoOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 4, 1, 1), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExcAutoOperationMode.setStatus('current')
txExciterAutomaticMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 4, 1, 2), AutomaticMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExciterAutomaticMode.setStatus('current')
txExcAutoGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExcAutoGuardTime.setStatus('current')
txExcAutoPreselectExcA = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 4, 1, 4), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExcAutoPreselectExcA.setStatus('current')
txExcAutoPreselectExcB = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 4, 1, 5), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExcAutoPreselectExcB.setStatus('current')
txExcAutoPreselected = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 4, 1, 6), IndexAB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExcAutoPreselected.setStatus('current')
txExcAutoRfSwitchPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 4, 1, 7), IndexAB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExcAutoRfSwitchPosition.setStatus('current')
txActiveReserve = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5))
txActiveReserveExciterTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 1), )
if mibBuilder.loadTexts: txActiveReserveExciterTable.setStatus('current')
txActiveReserveExciterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txTransmitterNotificationTxIdx"))
if mibBuilder.loadTexts: txActiveReserveExciterEntry.setStatus('current')
txArExcAutomaticOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 1, 1, 1), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArExcAutomaticOperationMode.setStatus('current')
txArExcAutomaticMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 1, 1, 2), AutomaticMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArExcAutomaticMode.setStatus('current')
txArExcAutomaticGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArExcAutomaticGuardTime.setStatus('current')
txArPreselectExcA = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 1, 1, 4), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArPreselectExcA.setStatus('current')
txArPreselectExcB = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 1, 1, 5), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArPreselectExcB.setStatus('current')
txArExcPreselected = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 1, 1, 6), IndexAB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txArExcPreselected.setStatus('current')
txArExcSelected = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("exciterA", 1), ("exciterB", 2), ("undefined", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txArExcSelected.setStatus('current')
txActiveReserveOstTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 2), )
if mibBuilder.loadTexts: txActiveReserveOstTable.setStatus('current')
txActiveReserveOstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txTransmitterNotificationTxIdx"))
if mibBuilder.loadTexts: txActiveReserveOstEntry.setStatus('current')
txArOstAutomaticOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 2, 1, 1), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArOstAutomaticOperationMode.setStatus('current')
txArOstAutomaticMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 2, 1, 2), AutomaticMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArOstAutomaticMode.setStatus('current')
txArOstAutomaticGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArOstAutomaticGuardTime.setStatus('current')
txArPreselectOstAOstBtoAnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 2, 1, 4), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArPreselectOstAOstBtoAnt.setStatus('current')
txArPreselectOstAOstBtoDl = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 2, 1, 5), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArPreselectOstAOstBtoDl.setStatus('current')
txArPreselectOstAtoAntOstBtoDl = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 2, 1, 6), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArPreselectOstAtoAntOstBtoDl.setStatus('current')
txArPreselectOstAtoDlOstBtoAnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 2, 1, 7), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txArPreselectOstAtoDlOstBtoAnt.setStatus('current')
txArOstPreselected = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ostAandOstBtoAntenna", 1), ("ostAandOstBtoDummyload", 2), ("ostAtoAntennaAndOstBtoDummyload", 3), ("ostAtoDummyloadAndOstBtoAntenna", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txArOstPreselected.setStatus('current')
txArOstSelected = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 1, 5, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ostAandOstBtoAntenna", 1), ("ostAandOstBtoDummyload", 2), ("ostAtoAntennaAndOstBtoDummyload", 3), ("ostAtoDummyloadAndOstBtoAntenna", 4), ("undefined", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txArOstSelected.setStatus('current')
txExciter = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2))
txExciterNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 1), )
if mibBuilder.loadTexts: txExciterNotificationTable.setStatus('current')
txExciterNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txExciterNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txExciterNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txExciterNotificationIdx"))
if mibBuilder.loadTexts: txExciterNotificationEntry.setStatus('current')
txExciterNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txExciterNotificationTxIdx.setStatus('current')
txExciterNotificationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: txExciterNotificationExcIdx.setStatus('current')
txExciterNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2000, 2004)))
if mibBuilder.loadTexts: txExciterNotificationIdx.setStatus('current')
txExciterNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2000, 2001, 2002, 2003, 2004))).clone(namedValues=NamedValues(("txExciterSummary", 2000), ("txExciterLoop", 2001), ("txExciterMute", 2002), ("txExciterOutputConnect", 2003), ("txExciterRfState", 2004)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExciterNotificationName.setStatus('current')
txExciterNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExciterNotificationMask.setStatus('current')
txExciterNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExciterNotificationPriority.setStatus('current')
txExciterNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExciterNotificationState.setStatus('current')
txExciterCommandsTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 2), )
if mibBuilder.loadTexts: txExciterCommandsTable.setStatus('current')
txExciterCommandsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txExciterNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txExciterNotificationExcIdx"))
if mibBuilder.loadTexts: txExciterCommandsEntry.setStatus('current')
txExcCmdFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(87500000, 108000000), ValueRangeConstraint(160000000, 870000000), ))).setUnits('Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExcCmdFrequency.setStatus('current')
txExcCmdModulationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 2, 1, 2), Xx9ModulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExcCmdModulationMode.setStatus('current')
txExcCmdRfSlope = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-20, 20))).setUnits('centi Bel').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExcCmdRfSlope.setStatus('current')
txExcCmdOutputAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dB0", 1), ("dB3", 2), ("dB6", 3), ("dB9", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExcCmdOutputAttenuation.setStatus('current')
txExcCmdLoopControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("limited", 1), ("full", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExcCmdLoopControl.setStatus('current')
txExcCmdOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 2, 1, 6), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txExcCmdOperationMode.setStatus('current')
txExciterStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 3), )
if mibBuilder.loadTexts: txExciterStateTable.setStatus('current')
txExciterStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 3, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txExciterNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txExciterNotificationExcIdx"))
if mibBuilder.loadTexts: txExciterStateEntry.setStatus('current')
txExcStOperationOn = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 2, 3, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExcStOperationOn.setStatus('current')
txInputInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3))
txInpIfNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 1), )
if mibBuilder.loadTexts: txInpIfNotificationTable.setStatus('current')
txInpIfNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationIdx"))
if mibBuilder.loadTexts: txInpIfNotificationEntry.setStatus('current')
txInpIfNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txInpIfNotificationTxIdx.setStatus('current')
txInpIfNotificationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: txInpIfNotificationExcIdx.setStatus('current')
txInpIfNotificationInputIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("input1", 1), ("input2", 2))))
if mibBuilder.loadTexts: txInpIfNotificationInputIdx.setStatus('current')
txInpIfNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3000, 3021)))
if mibBuilder.loadTexts: txInpIfNotificationIdx.setStatus('current')
txInpIfNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021))).clone(namedValues=NamedValues(("txInpIfLogState", 3000), ("txInpIfLogInfoPacket", 3001), ("txInpIfLogPacketLength", 3002), ("txInpIfIpState", 3003), ("txInpIfIpInfoPacket", 3004), ("txInpIfIpPacketLength", 3005), ("txInpIfTsState", 3006), ("txInpIfTsInfoPacket", 3007), ("txInpIfTsPacketLength", 3008), ("txInpIfLogDatarateBufferUnderrun", 3009), ("txInpIfLogDatarateBufferOverflow", 3010), ("txInpIfSatInputState", 3011), ("txInpIfSatInfoPacket", 3012), ("txInpIfSatPacketLength", 3013), ("txInpIfSatTransponderLocked", 3014), ("txInpIfSatIpOutput", 3015), ("txInpIfSatReceiverState", 3016), ("txInpIfSatBtsStatus", 3017), ("txInpIfSatDriftStatus", 3018), ("txInpIfSatLinkMarginStatus", 3019), ("txInpIfSatCarrierNoiseStatus", 3020), ("txInpIfSatStreamTsIdMatch", 3021)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txInpIfNotificationName.setStatus('current')
txInpIfNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 1, 1, 6), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpIfNotificationMask.setStatus('current')
txInpIfNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 1, 1, 7), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpIfNotificationPriority.setStatus('current')
txInpIfNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 1, 1, 8), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txInpIfNotificationState.setStatus('current')
txInpGeneralSetupTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 2), )
if mibBuilder.loadTexts: txInpGeneralSetupTable.setStatus('current')
txInpGeneralSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"))
if mibBuilder.loadTexts: txInpGeneralSetupEntry.setStatus('current')
txInpGsInputSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("ts1", 1), ("ts2", 2), ("ip1", 3), ("ip2", 4), ("rx", 5), ("eti1", 6), ("eti2", 7), ("sat1", 8), ("sat2", 9), ("edi1", 10), ("edi2", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpGsInputSource.setStatus('current')
txInpGsMultiplexName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 2, 1, 2), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpGsMultiplexName.setStatus('current')
txInpMonitorTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 3), )
if mibBuilder.loadTexts: txInpMonitorTable.setStatus('current')
txInpMonitorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 3, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"))
if mibBuilder.loadTexts: txInpMonitorEntry.setStatus('current')
txInpMonitorOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("undefined", 1), ("off", 2), ("activeInput", 3), ("logicalInput1", 4), ("logicalInput2", 5), ("testSignal", 6), ("fctZeroPulse", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpMonitorOut.setStatus('current')
txInputIpFeedTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4), )
if mibBuilder.loadTexts: txInputIpFeedTable.setStatus('current')
txInputIpFeedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"))
if mibBuilder.loadTexts: txInputIpFeedEntry.setStatus('current')
txIpFeedDatarate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 1), Unsigned32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: txIpFeedDatarate.setStatus('current')
txIpFeedConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tsLan1", 1), ("tsLan2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txIpFeedConnector.setStatus('current')
txIpFeedStreamingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uniCast", 1), ("multiCast", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txIpFeedStreamingMode.setStatus('current')
txIpFeedStreamAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txIpFeedStreamAddressType.setStatus('current')
txIpFeedStreamAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txIpFeedStreamAddress.setStatus('current')
txIpFeedStreamPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txIpFeedStreamPort.setStatus('current')
txIpFeedStreamProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("udp", 2), ("rtp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txIpFeedStreamProtocol.setStatus('current')
txIpFeedPacketsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txIpFeedPacketsTotal.setStatus('current')
txIpFeedPacketsMissing = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txIpFeedPacketsMissing.setStatus('current')
txIpFeedPacketsFixed = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txIpFeedPacketsFixed.setStatus('current')
txIpFeedPacketsDuplicate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txIpFeedPacketsDuplicate.setStatus('current')
txIpFeedPacketsReordered = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txIpFeedPacketsReordered.setStatus('current')
txIpFeedPacketsOutOfRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txIpFeedPacketsOutOfRange.setStatus('current')
txIpFeedLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("notPresent", 2), ("present", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txIpFeedLinkStatus.setStatus('current')
txInputTsFeedTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 5), )
if mibBuilder.loadTexts: txInputTsFeedTable.setStatus('current')
txInputTsFeedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 5, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"))
if mibBuilder.loadTexts: txInputTsFeedEntry.setStatus('current')
txTsFeedBruttoDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 5, 1, 1), Unsigned32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: txTsFeedBruttoDataRate.setStatus('current')
txTsFeedNettoDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 5, 1, 2), Unsigned32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: txTsFeedNettoDataRate.setStatus('current')
txTsFeedPacketLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 5, 1, 3), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: txTsFeedPacketLength.setStatus('current')
txTsFeedType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("asi", 2), ("smpte", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txTsFeedType.setStatus('current')
txInputSatFeed = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6))
txInputSatFeedTunerTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1), )
if mibBuilder.loadTexts: txInputSatFeedTunerTable.setStatus('current')
txInputSatFeedTunerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"))
if mibBuilder.loadTexts: txInputSatFeedTunerEntry.setStatus('current')
txSatTunerTransponderFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 1), Counter64()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatTunerTransponderFreq.setStatus('current')
txSatTunerSignalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 2), SatSignalType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatTunerSignalType.setStatus('current')
txSatTunerSymbolRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setUnits('Sps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatTunerSymbolRate.setStatus('current')
txSatTunerModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefinedMode", 1), ("qpsk", 2), ("psk8", 3), ("psk16", 4), ("psk32", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatTunerModulation.setStatus('current')
txSatTunerCoderate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatTunerCoderate.setStatus('current')
txSatTunerSignalStandard = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 6), SatSignalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatTunerSignalStandard.setStatus('current')
txSatTunerRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-9000, 0))).setUnits('0.01dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatTunerRxPower.setStatus('current')
txSatTunerMeasuredTsDatarate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 8), Unsigned32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatTunerMeasuredTsDatarate.setStatus('current')
txSatTunerBitErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatTunerBitErrorRate.setStatus('current')
txSatTunerCarrierNoiseRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-300, 20000))).setUnits('0.01dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatTunerCarrierNoiseRatio.setStatus('current')
txSatTunerTsSymbolRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setUnits('Sps').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatTunerTsSymbolRate.setStatus('current')
txSatTunerIntermediateFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 12), Counter64()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatTunerIntermediateFreq.setStatus('current')
txSatTunerLinkMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 13), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatTunerLinkMargin.setStatus('current')
txSatTunerLinkMarginWarnLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setUnits('0.01dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatTunerLinkMarginWarnLimit.setStatus('current')
txSatTunerLinkMarginFaultLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setUnits('0.01dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatTunerLinkMarginFaultLimit.setStatus('current')
txSatTunerCarrierNoiseWarnLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setUnits('0.01dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatTunerCarrierNoiseWarnLimit.setStatus('current')
txSatTunerCarrierNoiseFaultLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setUnits('0.01dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatTunerCarrierNoiseFaultLimit.setStatus('current')
txSatTunerTransponderFreqUpper32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 18), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatTunerTransponderFreqUpper32.setStatus('current')
txSatTunerTransponderFreqLower32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 1, 1, 19), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatTunerTransponderFreqLower32.setStatus('current')
txInputSatFeedLnbTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2), )
if mibBuilder.loadTexts: txInputSatFeedLnbTable.setStatus('current')
txInputSatFeedLnbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"))
if mibBuilder.loadTexts: txInputSatFeedLnbEntry.setStatus('current')
txSatLnbPolarization = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("horizontal", 1), ("vertical", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatLnbPolarization.setStatus('current')
txSatLnbFreqLowBand = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 2), Counter64()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatLnbFreqLowBand.setStatus('current')
txSatLnbFreqHighBand = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 3), Counter64()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatLnbFreqHighBand.setStatus('current')
txSatLnbVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("vert13VandHori18V", 2), ("vert14VandHori19V", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatLnbVoltage.setStatus('current')
txSatLnbBand = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kuBand", 1), ("cBand", 2), ("manual", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatLnbBand.setStatus('current')
txSatLnbFreqCBand = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 6), Counter64()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatLnbFreqCBand.setStatus('current')
txSatLnb22kHzSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 7), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatLnb22kHzSignal.setStatus('current')
txSatLnbDriftWarnLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setUnits('Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatLnbDriftWarnLimit.setStatus('current')
txSatLnbDrift = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 9), Integer32()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatLnbDrift.setStatus('current')
txSatLnbFreqLowBandUpper32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatLnbFreqLowBandUpper32.setStatus('current')
txSatLnbFreqLowBandLower32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatLnbFreqLowBandLower32.setStatus('current')
txSatLnbFreqHighBandUpper32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatLnbFreqHighBandUpper32.setStatus('current')
txSatLnbFreqHighBandLower32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatLnbFreqHighBandLower32.setStatus('current')
txSatLnbFreqCBandUpper32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatLnbFreqCBandUpper32.setStatus('current')
txSatLnbFreqCBandLower32 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 2, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatLnbFreqCBandLower32.setStatus('current')
txInputSatFeedCamTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3), )
if mibBuilder.loadTexts: txInputSatFeedCamTable.setStatus('current')
txInputSatFeedCamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"))
if mibBuilder.loadTexts: txInputSatFeedCamEntry.setStatus('current')
txSatCamInserted = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatCamInserted.setStatus('current')
txSatCamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("noModule", 3), ("noSignal", 4), ("noKey", 5), ("needMMI", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatCamStatus.setStatus('current')
txSatCamManufacturerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatCamManufacturerName.setStatus('current')
txSatCamModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatCamModuleName.setStatus('current')
txSatCamTsInput = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatCamTsInput.setStatus('current')
txSatCamTsOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatCamTsOutput.setStatus('current')
txSatCamConfigurationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("undefinedCam", 1), ("off", 2), ("ci", 3), ("biss", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatCamConfigurationMode.setStatus('current')
txSatCamBissMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefinedMode", 1), ("bissE", 2), ("biss1", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatCamBissMode.setStatus('current')
txSatCamBissInjectedId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatCamBissInjectedId.setStatus('current')
txSatCamBissEncryptedSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatCamBissEncryptedSession.setStatus('current')
txSatCamBissClearSession = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatCamBissClearSession.setStatus('current')
txSatCamScInserted = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatCamScInserted.setStatus('current')
txSatCamScManufacturerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatCamScManufacturerName.setStatus('current')
txSatCamScExpirationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatCamScExpirationDate.setStatus('current')
txSatCamResetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatCamResetMode.setStatus('current')
txSatCamReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 3, 1, 16), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatCamReset.setStatus('current')
txInputSatFeedIpOutputTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4), )
if mibBuilder.loadTexts: txInputSatFeedIpOutputTable.setStatus('current')
txInputSatFeedIpOutputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"))
if mibBuilder.loadTexts: txInputSatFeedIpOutputEntry.setStatus('current')
txSatIpOutMulticastAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatIpOutMulticastAddrType.setStatus('current')
txSatIpOutPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatIpOutPort.setStatus('current')
txSatIpOutMulticastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatIpOutMulticastAddr.setStatus('current')
txSatIpOutFecRow = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatIpOutFecRow.setStatus('current')
txSatIpOutFecCol = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatIpOutFecCol.setStatus('current')
txSatIpOutLocalIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatIpOutLocalIpAddrType.setStatus('current')
txSatIpOutLocalIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4, 1, 7), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatIpOutLocalIpAddr.setStatus('current')
txSatIpOutLocalNetmaskAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatIpOutLocalNetmaskAddrType.setStatus('current')
txSatIpOutLocalNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4, 1, 9), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatIpOutLocalNetmask.setStatus('current')
txSatIpOutMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 4, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatIpOutMacAddr.setStatus('current')
txInputSatFeedInputServiceTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5), )
if mibBuilder.loadTexts: txInputSatFeedInputServiceTable.setStatus('current')
txInputSatFeedInputServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"), (0, "RS-XX9-TX-MIB", "txSatFeedServiceIdx"))
if mibBuilder.loadTexts: txInputSatFeedInputServiceEntry.setStatus('current')
txSatFeedServiceIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: txSatFeedServiceIdx.setStatus('current')
txSatFeedInputServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatFeedInputServiceName.setStatus('current')
txSatFeedInputServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatFeedInputServiceID.setStatus('current')
txSatFeedInputServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatFeedInputServiceType.setStatus('current')
txSatFeedInputServiceElementaryStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatFeedInputServiceElementaryStreams.setStatus('current')
txSatFeedInputServiceDecryption = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5, 1, 6), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatFeedInputServiceDecryption.setStatus('current')
txSatFeedInputServiceEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatFeedInputServiceEncrypted.setStatus('current')
txSatFeedInputServiceDecryptionState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("undefinedStatus", 1), ("no", 2), ("error", 3), ("ok", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatFeedInputServiceDecryptionState.setStatus('current')
txSatFeedInputServiceDecryptedAt = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatFeedInputServiceDecryptedAt.setStatus('obsolete')
txSatFeedInputServicePmtPid = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 5, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatFeedInputServicePmtPid.setStatus('current')
txInputSatFeedGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 6), )
if mibBuilder.loadTexts: txInputSatFeedGeneralTable.setStatus('current')
txInputSatFeedGeneralEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 6, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"))
if mibBuilder.loadTexts: txInputSatFeedGeneralEntry.setStatus('current')
txSatGeneralAsiOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("sat1", 2), ("sat2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatGeneralAsiOutput.setStatus('current')
txInputSatFeedDecryptionServiceTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 7), )
if mibBuilder.loadTexts: txInputSatFeedDecryptionServiceTable.setStatus('current')
txInputSatFeedDecryptionServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 7, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"), (0, "RS-XX9-TX-MIB", "txSatFeedDecryptionServiceIdx"))
if mibBuilder.loadTexts: txInputSatFeedDecryptionServiceEntry.setStatus('current')
txSatFeedDecryptionServiceIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: txSatFeedDecryptionServiceIdx.setStatus('current')
txSatFeedDecryptionServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatFeedDecryptionServiceID.setStatus('current')
txInputSatFeedBtsTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 8), )
if mibBuilder.loadTexts: txInputSatFeedBtsTable.setStatus('current')
txInputSatFeedBtsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 8, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"))
if mibBuilder.loadTexts: txInputSatFeedBtsEntry.setStatus('current')
txSatBtsDecompEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 8, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatBtsDecompEnable.setStatus('obsolete')
txSatBtsRegionalization = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 8, 1, 2), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatBtsRegionalization.setStatus('obsolete')
txSatBtsPliTablePid = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatBtsPliTablePid.setStatus('current')
txSatBtsNullPacketLaPid = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 8, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatBtsNullPacketLaPid.setStatus('current')
txSatBtsNullPacketLbPid = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 8, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatBtsNullPacketLbPid.setStatus('current')
txSatBtsNullPacketLcPid = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 8, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatBtsNullPacketLcPid.setStatus('current')
txInputSatFeedExtrasTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9), )
if mibBuilder.loadTexts: txInputSatFeedExtrasTable.setStatus('current')
txInputSatFeedExtrasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationInputIdx"))
if mibBuilder.loadTexts: txInputSatFeedExtrasEntry.setStatus('current')
txSatMultiStreamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notFound", 1), ("available", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatMultiStreamStatus.setStatus('current')
txSatMultiStreamUsedStreamId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatMultiStreamUsedStreamId.setStatus('current')
txSatPlScrambling = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("gold", 1), ("root", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatPlScrambling.setStatus('current')
txSatPlsCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 262143))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatPlsCode.setStatus('current')
txSatPlsCode2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 262143))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatPlsCode2.setStatus('current')
txSatPlsCode3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 262143))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatPlsCode3.setStatus('current')
txSatCodeLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1, 10), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatCodeLoop.setStatus('current')
txSatPlsSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("code1", 1), ("code2", 2), ("code3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatPlsSelect.setStatus('current')
txSatPlsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("code1", 1), ("code2", 2), ("code3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatPlsActive.setStatus('current')
txSatStreamCurrentTsId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSatStreamCurrentTsId.setStatus('current')
txSatStreamExpectedTsId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 6, 9, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSatStreamExpectedTsId.setStatus('current')
txInputExgineStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 7), )
if mibBuilder.loadTexts: txInputExgineStateTable.setStatus('current')
txInputExgineStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 7, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpIfNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpIfNotificationExcIdx"))
if mibBuilder.loadTexts: txInputExgineStateEntry.setStatus('current')
txExgineMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("fmOnly", 2), ("hybrid", 3), ("extendedHybrid", 4), ("fullDigital", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExgineMode.setStatus('current')
txExgineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 7, 1, 2), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExgineStatus.setStatus('current')
txExgineMute = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 7, 1, 3), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExgineMute.setStatus('current')
txExgineSyncInputSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("internalGps", 2), ("externalReference", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExgineSyncInputSrc.setStatus('current')
txExgineSyncInputStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 7, 1, 5), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExgineSyncInputStatus.setStatus('current')
txExgineMpxInput = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 7, 1, 6), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExgineMpxInput.setStatus('current')
txExgineE2xInput = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 7, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExgineE2xInput.setStatus('current')
txExgineSupply1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 7, 1, 8), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExgineSupply1Status.setStatus('current')
txExgineSupply2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 3, 7, 1, 9), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExgineSupply2Status.setStatus('current')
txInputAutomatic = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4))
txInpAutoNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 1), )
if mibBuilder.loadTexts: txInpAutoNotificationTable.setStatus('current')
txInpAutoNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpAutoNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpAutoNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txInpAutoNotificationIdx"))
if mibBuilder.loadTexts: txInpAutoNotificationEntry.setStatus('current')
txInpAutoNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txInpAutoNotificationTxIdx.setStatus('current')
txInpAutoNotificationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: txInpAutoNotificationExcIdx.setStatus('current')
txInpAutoNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4000, 4001)))
if mibBuilder.loadTexts: txInpAutoNotificationIdx.setStatus('current')
txInpAutoNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4000, 4001))).clone(namedValues=NamedValues(("txInpAuto1Active", 4000), ("txInpAutoState", 4001)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txInpAutoNotificationName.setStatus('current')
txInpAutoNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoNotificationMask.setStatus('current')
txInpAutoNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoNotificationPriority.setStatus('current')
txInpAutoNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txInpAutoNotificationState.setStatus('current')
txInpAutoConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2), )
if mibBuilder.loadTexts: txInpAutoConfigurationTable.setStatus('current')
txInpAutoConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txInpAutoNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txInpAutoNotificationExcIdx"))
if mibBuilder.loadTexts: txInpAutoConfigurationEntry.setStatus('current')
txInpAutoOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 1), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoOperationMode.setStatus('current')
txInpAutoPreferredInput = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("input1", 1), ("noPreference", 2), ("input2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoPreferredInput.setStatus('current')
txInpAutoActiveInput = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("input1", 2), ("input2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoActiveInput.setStatus('current')
txInpAutoDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("toReserveAndBack", 1), ("toReserveOnly", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoDirection.setStatus('current')
txInpAutoGuardTimeToReserve = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoGuardTimeToReserve.setStatus('current')
txInpAutoGuardTimeBack = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoGuardTimeBack.setStatus('current')
txInpAutoSeamlessPossible = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txInpAutoSeamlessPossible.setStatus('current')
txInpAutoSeamlessOpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 8), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoSeamlessOpMode.setStatus('current')
txInpAutoMaxDelayInput1To2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setUnits('milli second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoMaxDelayInput1To2.setStatus('obsolete')
txInpAutoDelayInput1To2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 10), Integer32()).setUnits('milli second').setMaxAccess("readonly")
if mibBuilder.loadTexts: txInpAutoDelayInput1To2.setStatus('current')
txInpAutoInputFailDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoInputFailDelay.setStatus('current')
txInpAutoIfReseveFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nothing", 1), ("warn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoIfReseveFails.setStatus('current')
txInpAutoForceExciterChangeover = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 13), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoForceExciterChangeover.setStatus('current')
txInpAutoMuteOnInputFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 14), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoMuteOnInputFail.setStatus('current')
txInpAutoDetectLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 15), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoDetectLostPackets.setStatus('current')
txInpAutoTransparentTs = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 16), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoTransparentTs.setStatus('current')
txInpAutoFailDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 4, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("fast", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txInpAutoFailDetection.setStatus('current')
txFrequencyRegulation = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5))
txFrqRegNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 1), )
if mibBuilder.loadTexts: txFrqRegNotificationTable.setStatus('current')
txFrqRegNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txFrqRegNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txFrqRegNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txFrqRegNotificationIdx"))
if mibBuilder.loadTexts: txFrqRegNotificationEntry.setStatus('current')
txFrqRegNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txFrqRegNotificationTxIdx.setStatus('current')
txFrqRegNotificationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: txFrqRegNotificationExcIdx.setStatus('current')
txFrqRegNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5000, 5004)))
if mibBuilder.loadTexts: txFrqRegNotificationIdx.setStatus('current')
txFrqRegNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5000, 5001, 5002, 5003, 5004))).clone(namedValues=NamedValues(("txFrqRegSummary", 5000), ("txFrqRegCurrentSource", 5001), ("txFrqRegSourceExtRef", 5002), ("txFrqRegSourceExtPPS", 5003), ("txFrqRegSourceIntGPS", 5004)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txFrqRegNotificationName.setStatus('current')
txFrqRegNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txFrqRegNotificationMask.setStatus('current')
txFrqRegNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txFrqRegNotificationPriority.setStatus('current')
txFrqRegNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txFrqRegNotificationState.setStatus('current')
txFrqRegStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 2), )
if mibBuilder.loadTexts: txFrqRegStateTable.setStatus('current')
txFrqRegStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txFrqRegNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txFrqRegNotificationExcIdx"))
if mibBuilder.loadTexts: txFrqRegStateEntry.setStatus('current')
txFrqRegStateCurrentSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("manual", 1), ("external5MHz", 2), ("external10MHz", 3), ("externalPPS", 4), ("internalGPS", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txFrqRegStateCurrentSource.setStatus('current')
txFrqRegStateController = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("inaccurate", 2), ("good", 3), ("standsGuardTime", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txFrqRegStateController.setStatus('current')
txFrqRegStateCurrentControllerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 2, 1, 3), ControllerMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txFrqRegStateCurrentControllerMode.setStatus('current')
txFrqRegSetupTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 3), )
if mibBuilder.loadTexts: txFrqRegSetupTable.setStatus('current')
txFrqRegSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 3, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txFrqRegNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txFrqRegNotificationExcIdx"))
if mibBuilder.loadTexts: txFrqRegSetupEntry.setStatus('current')
txFrqRegSetupSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("manual", 1), ("external5MHz", 2), ("external10MHz", 3), ("externalPPS", 4), ("internalGPS", 5), ("auto", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txFrqRegSetupSource.setStatus('current')
txFrqRegSetupControllerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 3, 1, 2), ControllerMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txFrqRegSetupControllerMode.setStatus('current')
txFrqRegSetupRefFailPermissionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setUnits('hour').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txFrqRegSetupRefFailPermissionTime.setStatus('current')
txFrqRegSetupMuteOnFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("never", 1), ("onlyAtStartup", 2), ("ifGuardTimeExpires", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txFrqRegSetupMuteOnFail.setStatus('current')
txFrqRegSetupManualOcxoAdjust = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txFrqRegSetupManualOcxoAdjust.setStatus('current')
txFrqRegSetupMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 5, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("off", 1), ("internal5MHz", 2), ("internal10MHz", 3), ("internal1PPS", 4), ("internalGPS", 5), ("currentSource", 6), ("cofdmSync", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txFrqRegSetupMonitor.setStatus('current')
txSFN = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6))
txSfnNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 1), )
if mibBuilder.loadTexts: txSfnNotificationTable.setStatus('current')
txSfnNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txSfnNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txSfnNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txSfnNotificationIdx"))
if mibBuilder.loadTexts: txSfnNotificationEntry.setStatus('current')
txSfnNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txSfnNotificationTxIdx.setStatus('current')
txSfnNotificationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: txSfnNotificationExcIdx.setStatus('current')
txSfnNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6000, 6000)))
if mibBuilder.loadTexts: txSfnNotificationIdx.setStatus('current')
txSfnNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6000))).clone(namedValues=NamedValues(("txSfnSummary", 6000)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnNotificationName.setStatus('current')
txSfnNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSfnNotificationMask.setStatus('current')
txSfnNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSfnNotificationPriority.setStatus('current')
txSfnNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnNotificationState.setStatus('current')
txSfnStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2), )
if mibBuilder.loadTexts: txSfnStateTable.setStatus('current')
txSfnStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txSfnNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txSfnNotificationExcIdx"))
if mibBuilder.loadTexts: txSfnStateEntry.setStatus('current')
txSfnStateInternalPpsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnStateInternalPpsValid.setStatus('current')
txSfnStateTransmissionInTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 5))).clone(namedValues=NamedValues(("unknown", 2), ("outOfTime", 4), ("inTime", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnStateTransmissionInTime.setStatus('current')
txSfnStateNetworkDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1, 3), Unsigned32()).setUnits('1/10 micro second').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnStateNetworkDelay.setStatus('current')
txSfnStateProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1, 4), Unsigned32()).setUnits('1/10 micro second').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnStateProcessingTime.setStatus('current')
txSfnStateDynamicDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1, 5), Unsigned32()).setUnits('1/10 micro second').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnStateDynamicDelay.setStatus('current')
txSfnStateTotalDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1, 6), Unsigned32()).setUnits('1/10 micro second').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnStateTotalDelay.setStatus('current')
txSfnStateMaximumDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1, 7), Unsigned32()).setUnits('1/10 micro second').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnStateMaximumDelay.setStatus('current')
txSfnStateDispatchTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1, 8), Unsigned32()).setUnits('1/10 micro second').setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnStateDispatchTime.setStatus('current')
txSfnStatePPS = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notStated", 1), ("missing", 2), ("holdoverExpired", 3), ("holdover", 4), ("ok", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnStatePPS.setStatus('current')
txSfnStateSFN = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notStated", 1), ("sfnResync", 2), ("noTimeReference", 3), ("inTime", 4), ("noTimeInformation", 5), ("wrongSfnTimeSetup", 6), ("wrongFreqRefSource", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnStateSFN.setStatus('current')
txSfnStateTimestampState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("off", 1), ("none", 2), ("null", 3), ("relative", 4), ("absolute", 5), ("multiple", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSfnStateTimestampState.setStatus('current')
txSfnSetupTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 3), )
if mibBuilder.loadTexts: txSfnSetupTable.setStatus('current')
txSfnSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 3, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txSfnNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txSfnNotificationExcIdx"))
if mibBuilder.loadTexts: txSfnSetupEntry.setStatus('current')
txSfnSetupSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5))).clone(namedValues=NamedValues(("externalPPS", 4), ("internalGPS", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSfnSetupSource.setStatus('current')
txSfnSetupSFN = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("off", 2), ("on", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSfnSetupSFN.setStatus('current')
txSfnSetupMaxDeviation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setUnits('1/10 micro second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSfnSetupMaxDeviation.setStatus('current')
txSfnSetupStaticDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 6, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100000000, 100000000))).setUnits('1/10 micro second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSfnSetupStaticDelay.setStatus('current')
txGPS = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 7))
txPrecorrection = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8))
txPrecorrNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 1), )
if mibBuilder.loadTexts: txPrecorrNotificationTable.setStatus('current')
txPrecorrNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txPrecorrNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txPrecorrNotificationExcIdx"), (0, "RS-XX9-TX-MIB", "txPrecorrNotificationIdx"))
if mibBuilder.loadTexts: txPrecorrNotificationEntry.setStatus('current')
txPrecorrNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txPrecorrNotificationTxIdx.setStatus('current')
txPrecorrNotificationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: txPrecorrNotificationExcIdx.setStatus('current')
txPrecorrNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8000, 8002)))
if mibBuilder.loadTexts: txPrecorrNotificationIdx.setStatus('current')
txPrecorrNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(8000, 8001, 8002))).clone(namedValues=NamedValues(("txPrecorrLinSummary", 8000), ("txPrecorrNonLinSummary", 8001), ("txPrecorrMerState", 8002)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrNotificationName.setStatus('current')
txPrecorrNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrNotificationMask.setStatus('current')
txPrecorrNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrNotificationPriority.setStatus('current')
txPrecorrNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrNotificationState.setStatus('current')
txPrecorrectionLinear = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2))
txPrecorrLinStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 1), )
if mibBuilder.loadTexts: txPrecorrLinStateTable.setStatus('current')
txPrecorrLinStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txPrecorrLinStateTxIdx"), (0, "RS-XX9-TX-MIB", "txPrecorrLinStateExcIdx"))
if mibBuilder.loadTexts: txPrecorrLinStateEntry.setStatus('current')
txPrecorrLinStateTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txPrecorrLinStateTxIdx.setStatus('current')
txPrecorrLinStateExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: txPrecorrLinStateExcIdx.setStatus('current')
txPrecorrLinStateStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 1, 1, 3), PrecorrectionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrLinStateStatus.setStatus('current')
txPrecorrLinStateSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 1, 1, 4), PrecorrectionSignalLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrLinStateSignalLevel.setStatus('current')
txPrecorrLinStateAmplitudeRipple = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 1, 1, 5), Integer32()).setUnits('milli Bel').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrLinStateAmplitudeRipple.setStatus('current')
txPrecorrLinStateGroupDelayRipple = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 1, 1, 6), Integer32()).setUnits('1/10 nano second').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrLinStateGroupDelayRipple.setStatus('current')
txPrecorrLinStateAmplitudeRippleLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrLinStateAmplitudeRippleLimit.setStatus('current')
txPrecorrLinStateGroupDelayRippleLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 1, 1, 8), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrLinStateGroupDelayRippleLimit.setStatus('current')
txPrecorrLinSetupTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 2), )
if mibBuilder.loadTexts: txPrecorrLinSetupTable.setStatus('current')
txPrecorrLinSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 2, 1), )
txPrecorrLinStateEntry.registerAugmentions(("RS-XX9-TX-MIB", "txPrecorrLinSetupEntry"))
txPrecorrLinSetupEntry.setIndexNames(*txPrecorrLinStateEntry.getIndexNames())
if mibBuilder.loadTexts: txPrecorrLinSetupEntry.setStatus('current')
txPrecorrLinSetupOpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 2, 1, 1), PrecorrectionOperationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrLinSetupOpMode.setStatus('current')
txPrecorrLinSetupReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 2, 1, 2), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrLinSetupReset.setStatus('current')
txPrecorrLinSetupAmplitudeRippleLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setUnits('centi Bel').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrLinSetupAmplitudeRippleLimit.setStatus('current')
txPrecorrLinSetupGroupDelayRippleLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 500))).setUnits('nano second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrLinSetupGroupDelayRippleLimit.setStatus('current')
txPrecorrLinSetupEquipmentSlope = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('milli Bel').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrLinSetupEquipmentSlope.setStatus('current')
txPrecorrectionNonLinear = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3))
txPrecorrNonLinStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 1), )
if mibBuilder.loadTexts: txPrecorrNonLinStateTable.setStatus('current')
txPrecorrNonLinStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txPrecorrNonLinStateTxIdx"), (0, "RS-XX9-TX-MIB", "txPrecorrNonLinStateExcIdx"))
if mibBuilder.loadTexts: txPrecorrNonLinStateEntry.setStatus('current')
txPrecorrNonLinStateTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txPrecorrNonLinStateTxIdx.setStatus('current')
txPrecorrNonLinStateExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: txPrecorrNonLinStateExcIdx.setStatus('current')
txPrecorrNonLinStateStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 1, 1, 3), PrecorrectionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrNonLinStateStatus.setStatus('current')
txPrecorrNonLinStateSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 1, 1, 4), PrecorrectionSignalLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrNonLinStateSignalLevel.setStatus('current')
txPrecorrNonLinStateShoulderLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 1, 1, 5), Integer32()).setUnits('centi Bel').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrNonLinStateShoulderLeft.setStatus('current')
txPrecorrNonLinStateShoulderRight = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 1, 1, 6), Integer32()).setUnits('centi Bel').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrNonLinStateShoulderRight.setStatus('current')
txPrecorrNonLinSetupTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 2), )
if mibBuilder.loadTexts: txPrecorrNonLinSetupTable.setStatus('current')
txPrecorrNonLinSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 2, 1), )
txPrecorrNonLinStateEntry.registerAugmentions(("RS-XX9-TX-MIB", "txPrecorrNonLinSetupEntry"))
txPrecorrNonLinSetupEntry.setIndexNames(*txPrecorrNonLinStateEntry.getIndexNames())
if mibBuilder.loadTexts: txPrecorrNonLinSetupEntry.setStatus('current')
txPrecorrNonLinSetupOpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 2, 1, 1), PrecorrectionOperationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrNonLinSetupOpMode.setStatus('current')
txPrecorrNonLinSetupReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 2, 1, 2), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrNonLinSetupReset.setStatus('current')
txPrecorrNonLinSetupShoulderDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 45))).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrNonLinSetupShoulderDistance.setStatus('current')
txPrecorrNonLinSetupSignalLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 3, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 120))).setUnits('centi Bel').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrNonLinSetupSignalLimit.setStatus('obsolete')
txPrecorrectionCfrTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 4), )
if mibBuilder.loadTexts: txPrecorrectionCfrTable.setStatus('current')
txPrecorrectionCfrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 4, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txPrecorrNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txPrecorrNotificationExcIdx"))
if mibBuilder.loadTexts: txPrecorrectionCfrEntry.setStatus('current')
txPrecorrCfrEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bypass", 1), ("manual", 2), ("auto", 3), ("run", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrCfrEnable.setStatus('current')
txPrecorrCfrLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(50, 150))).setUnits('centi Bel').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrCfrLevel.setStatus('current')
txPrecorrCfrInbandNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrCfrInbandNoise.setStatus('current')
txPrecorrCfrOutbandNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrCfrOutbandNoise.setStatus('current')
txPrecorrSigQualTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 5), )
if mibBuilder.loadTexts: txPrecorrSigQualTable.setStatus('current')
txPrecorrSigQualEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 5, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txPrecorrSigQualTxIdx"), (0, "RS-XX9-TX-MIB", "txPrecorrSigQualExcIdx"))
if mibBuilder.loadTexts: txPrecorrSigQualEntry.setStatus('current')
txPrecorrSigQualTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 5, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txPrecorrSigQualTxIdx.setStatus('current')
txPrecorrSigQualExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 5, 1, 2), IndexAB())
if mibBuilder.loadTexts: txPrecorrSigQualExcIdx.setStatus('current')
txPrecorrSigQualPapr = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 5, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrSigQualPapr.setStatus('current')
txPrecorrSigQualMer = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 5, 1, 4), Integer32()).setUnits('0.1 db').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPrecorrSigQualMer.setStatus('current')
txPrecorrSigQualMerWarnLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 8, 5, 1, 5), Integer32()).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPrecorrSigQualMerWarnLimit.setStatus('current')
txOutputStage = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9))
txOstNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 1), )
if mibBuilder.loadTexts: txOstNotificationTable.setStatus('current')
txOstNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txOstNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txOstNotificationOstIdx"), (0, "RS-XX9-TX-MIB", "txOstNotificationIdx"))
if mibBuilder.loadTexts: txOstNotificationEntry.setStatus('current')
txOstNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txOstNotificationTxIdx.setStatus('current')
txOstNotificationOstIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: txOstNotificationOstIdx.setStatus('current')
txOstNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(9000, 9000)))
if mibBuilder.loadTexts: txOstNotificationIdx.setStatus('current')
txOstNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9000))).clone(namedValues=NamedValues(("txOstSummary", 9000)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txOstNotificationName.setStatus('current')
txOstNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txOstNotificationMask.setStatus('current')
txOstNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txOstNotificationPriority.setStatus('current')
txOstNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txOstNotificationState.setStatus('current')
txOstStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 2), )
if mibBuilder.loadTexts: txOstStateTable.setStatus('current')
txOstStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txOstNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txOstNotificationOstIdx"))
if mibBuilder.loadTexts: txOstStateEntry.setStatus('current')
txOstStateRfOnHours = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 2, 1, 3), Unsigned32()).setUnits('h').setMaxAccess("readonly")
if mibBuilder.loadTexts: txOstStateRfOnHours.setStatus('current')
txOstCommandsTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 3), )
if mibBuilder.loadTexts: txOstCommandsTable.setStatus('current')
txOstCommandsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 3, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txOstNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txOstNotificationOstIdx"))
if mibBuilder.loadTexts: txOstCommandsEntry.setStatus('current')
txOstCmdPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1300))).setUnits('per thousand').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txOstCmdPower.setStatus('current')
txOstCmdDcControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4800, 11000))).setUnits('1/100 percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txOstCmdDcControl.setStatus('current')
txAmplifier = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10))
txAmpNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 1), )
if mibBuilder.loadTexts: txAmpNotificationTable.setStatus('current')
txAmpNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txAmpNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationOstIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationAmpIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationIdx"))
if mibBuilder.loadTexts: txAmpNotificationEntry.setStatus('current')
txAmpNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txAmpNotificationTxIdx.setStatus('current')
txAmpNotificationOstIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: txAmpNotificationOstIdx.setStatus('current')
txAmpNotificationAmpIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 72)))
if mibBuilder.loadTexts: txAmpNotificationAmpIdx.setStatus('current')
txAmpNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10000, 10017)))
if mibBuilder.loadTexts: txAmpNotificationIdx.setStatus('current')
txAmpNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(10000, 10001, 10002, 10003, 10004, 10005, 10006, 10007, 10008, 10009, 10010, 10011, 10012, 10013, 10014, 10015, 10016, 10017))).clone(namedValues=NamedValues(("txAmpSummary", 10000), ("txAmpRfPowerFail", 10001), ("txAmpReflection", 10002), ("txAmpSupplyFail", 10003), ("txAmpRfInFail", 10004), ("txAmpMute", 10005), ("txAmpTemperatureFail", 10006), ("txAmpTransistorFail", 10007), ("txAmpRegulationFail", 10008), ("txAmpAcFail", 10009), ("txAmpDcFail", 10010), ("txAmpDriverFail", 10011), ("txAmpLink", 10012), ("txAmpBiasFail", 10013), ("txAmpInitFail", 10014), ("txAmpAbsorberFail", 10015), ("txAmpOn", 10016), ("txAmpBlocking", 10017)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpNotificationName.setStatus('current')
txAmpNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 1, 1, 6), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txAmpNotificationMask.setStatus('current')
txAmpNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 1, 1, 7), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txAmpNotificationPriority.setStatus('current')
txAmpNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 1, 1, 8), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpNotificationState.setStatus('current')
txAmplifierStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2), )
if mibBuilder.loadTexts: txAmplifierStateTable.setStatus('current')
txAmplifierStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txAmpNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationOstIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationAmpIdx"))
if mibBuilder.loadTexts: txAmplifierStateEntry.setStatus('current')
txAmpStI1A = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 1), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStI1A.setStatus('current')
txAmpStI2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 2), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStI2A.setStatus('current')
txAmpStI3A = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 3), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStI3A.setStatus('current')
txAmpStI1B = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 4), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStI1B.setStatus('current')
txAmpStI2B = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 5), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStI2B.setStatus('current')
txAmpStI3B = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 6), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStI3B.setStatus('current')
txAmpStIDrv = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 7), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStIDrv.setStatus('current')
txAmpStIPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 8), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStIPre.setStatus('current')
txAmpStPwrA = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 9), Unsigned32()).setUnits('1/100 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStPwrA.setStatus('current')
txAmpStPwrB = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 10), Unsigned32()).setUnits('1/100 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStPwrB.setStatus('current')
txAmpStPwrOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 11), Unsigned32()).setUnits('1/100 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStPwrOut.setStatus('current')
txAmpStReflOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 12), Unsigned32()).setUnits('1/100 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStReflOut.setStatus('current')
txAmpStVRefPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 13), Unsigned32()).setUnits('1/100 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStVRefPwr.setStatus('current')
txAmpStVReg = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 14), Unsigned32()).setUnits('1/10 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStVReg.setStatus('obsolete')
txAmpStVPlusMon = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 15), Unsigned32()).setUnits('1/10 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStVPlusMon.setStatus('current')
txAmpStIDc = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 16), Unsigned32()).setUnits('1/10 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStIDc.setStatus('current')
txAmpStVPreMon = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 17), Unsigned32()).setUnits('1/10 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStVPreMon.setStatus('current')
txAmpStVAuxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 18), Unsigned32()).setUnits('1/10 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStVAuxIn.setStatus('current')
txAmpStV12Mon = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 19), Unsigned32()).setUnits('1/10 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStV12Mon.setStatus('current')
txAmpStV5Acb = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 20), Unsigned32()).setUnits('1/100 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStV5Acb.setStatus('current')
txAmpStV3V5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 21), Unsigned32()).setUnits('1/100 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStV3V5.setStatus('current')
txAmpStTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 22), Integer32()).setUnits('1/10 degree celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStTemperature.setStatus('current')
txAmpStRfMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 2, 1, 23), Integer32()).setUnits('milli Bel').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpStRfMonitor.setStatus('current')
txAmplifierPmxTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 3), )
if mibBuilder.loadTexts: txAmplifierPmxTable.setStatus('current')
txAmplifierPmxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 3, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txAmpNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationOstIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationAmpIdx"))
if mibBuilder.loadTexts: txAmplifierPmxEntry.setStatus('current')
txPmxFanFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 3, 1, 1), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPmxFanFail.setStatus('current')
txPmxAirFilterFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 3, 1, 2), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPmxAirFilterFail.setStatus('obsolete')
txPmxFrequencyFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 3, 1, 3), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPmxFrequencyFail.setStatus('current')
txPmxFreqID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPmxFreqID.setStatus('obsolete')
txPmxInletAirTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 3, 1, 5), Integer32()).setUnits('1/10 degree celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPmxInletAirTemperature.setStatus('current')
txPmxOutletAirTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 3, 1, 6), Integer32()).setUnits('1/10 degree celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPmxOutletAirTemperature.setStatus('current')
txPmxvRefPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 3, 1, 7), Unsigned32()).setUnits('mV').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPmxvRefPowerMax.setStatus('obsolete')
txPmxFreqIDString = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 3, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPmxFreqIDString.setStatus('current')
txPmxDohertyActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 3, 1, 9), DohertyActive()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPmxDohertyActive.setStatus('current')
txAmplifierPhr901Table = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4), )
if mibBuilder.loadTexts: txAmplifierPhr901Table.setStatus('current')
txAmplifierPhr901Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txAmpNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationOstIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationAmpIdx"))
if mibBuilder.loadTexts: txAmplifierPhr901Entry.setStatus('current')
txPhr901PwrA = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1, 1), Unsigned32()).setUnits('mW').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhr901PwrA.setStatus('obsolete')
txPhr901PwrB = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1, 2), Unsigned32()).setUnits('mW').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhr901PwrB.setStatus('obsolete')
txPhr901PwrOutAv = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1, 3), Unsigned32()).setUnits('mW').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhr901PwrOutAv.setStatus('obsolete')
txPhr901ReflOutAv = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1, 4), Unsigned32()).setUnits('mW').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhr901ReflOutAv.setStatus('obsolete')
txPhr901PwrAbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1, 5), Unsigned32()).setUnits('mW').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhr901PwrAbs.setStatus('obsolete')
txPhr901PwrIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1, 6), Unsigned32()).setUnits('1/100 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhr901PwrIn.setStatus('current')
txPhr901PwrDrv = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1, 7), Unsigned32()).setUnits('1/100 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhr901PwrDrv.setStatus('current')
txPhr901I12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1, 8), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhr901I12.setStatus('current')
txPhr901I34 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1, 9), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhr901I34.setStatus('current')
txPhr901I56 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1, 10), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhr901I56.setStatus('current')
txPhr901I78 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 4, 1, 11), Unsigned32()).setUnits('1/100 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhr901I78.setStatus('current')
txAmplifierPhxTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 5), )
if mibBuilder.loadTexts: txAmplifierPhxTable.setStatus('current')
txAmplifierPhxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 5, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txAmpNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationOstIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationAmpIdx"))
if mibBuilder.loadTexts: txAmplifierPhxEntry.setStatus('current')
txPhxFreqID = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhxFreqID.setStatus('obsolete')
txPhxFreqIDString = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 5, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhxFreqIDString.setStatus('current')
txPhxDohertyActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 5, 1, 3), DohertyActive()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPhxDohertyActive.setStatus('current')
txAmplifierTlxTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 6), )
if mibBuilder.loadTexts: txAmplifierTlxTable.setStatus('current')
txAmplifierTlxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 6, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txAmpNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationOstIdx"), (0, "RS-XX9-TX-MIB", "txAmpNotificationAmpIdx"))
if mibBuilder.loadTexts: txAmplifierTlxEntry.setStatus('current')
txAmpTlxFanFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 6, 1, 1), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpTlxFanFail.setStatus('current')
txAmpTlxV12Mon = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 6, 1, 2), Unsigned32()).setUnits('1/100V').setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpTlxV12Mon.setStatus('current')
txAmpTlxSupplyFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 10, 6, 1, 3), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txAmpTlxSupplyFail.setStatus('current')
txSwitchlessCombiner = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11))
txSwiCoNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 1), )
if mibBuilder.loadTexts: txSwiCoNotificationTable.setStatus('current')
txSwiCoNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txSwiCoNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txSwiCoNotificationSwiCoIdx"), (0, "RS-XX9-TX-MIB", "txSwiCoNotificationIdx"))
if mibBuilder.loadTexts: txSwiCoNotificationEntry.setStatus('current')
txSwiCoNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txSwiCoNotificationTxIdx.setStatus('current')
txSwiCoNotificationSwiCoIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: txSwiCoNotificationSwiCoIdx.setStatus('current')
txSwiCoNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(11000, 11008)))
if mibBuilder.loadTexts: txSwiCoNotificationIdx.setStatus('current')
txSwiCoNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(11000, 11001, 11002, 11003, 11004, 11005, 11006, 11007))).clone(namedValues=NamedValues(("txSwiCoSummary", 11000), ("txSwiCoHwLink", 11001), ("txSwiCoHwWarn", 11002), ("txSwiCoHwFault", 11003), ("txSwiCoHwLocal", 11004), ("txSwiCoRcbFail", 11005), ("txSwiCoRfProbeFail", 11006), ("txSwiCoRegulationSummary", 11007)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSwiCoNotificationName.setStatus('current')
txSwiCoNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSwiCoNotificationMask.setStatus('current')
txSwiCoNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSwiCoNotificationPriority.setStatus('current')
txSwiCoNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSwiCoNotificationState.setStatus('current')
txSwiCoStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 2), )
if mibBuilder.loadTexts: txSwiCoStateTable.setStatus('current')
txSwiCoStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txSwiCoNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txSwiCoNotificationSwiCoIdx"))
if mibBuilder.loadTexts: txSwiCoStateEntry.setStatus('current')
txSwiCoStRegulationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stablePosition", 1), ("increasingPhaseAngle", 2), ("decreasingPhaseAngle", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSwiCoStRegulationState.setStatus('current')
txSwiCoStCalibrationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("calibrated", 1), ("notCalibrated", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSwiCoStCalibrationState.setStatus('current')
txSwiCoStPosGraded = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSwiCoStPosGraded.setStatus('current')
txSwiCoStPosDegree = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSwiCoStPosDegree.setStatus('current')
txSwiCoStPosPermil = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSwiCoStPosPermil.setStatus('current')
txSwiCoCommandsTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 3), )
if mibBuilder.loadTexts: txSwiCoCommandsTable.setStatus('current')
txSwiCoCommandsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 3, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txSwiCoNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txSwiCoNotificationSwiCoIdx"))
if mibBuilder.loadTexts: txSwiCoCommandsEntry.setStatus('current')
txSwiCoCmdAutomatic = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSwiCoCmdAutomatic.setStatus('current')
txSwiCoCmdManualPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("undefinedPosition", 1), ("position1", 2), ("position2", 3), ("position1and2", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSwiCoCmdManualPosition.setStatus('current')
txSwiCoCmdActivationThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 11, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('0.01-dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txSwiCoCmdActivationThreshold.setStatus('current')
txPresets = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12))
txPresetCommandsTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 2), )
if mibBuilder.loadTexts: txPresetCommandsTable.setStatus('current')
txPresetCommandsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txPresetCmdTxIdx"))
if mibBuilder.loadTexts: txPresetCommandsEntry.setStatus('current')
txPresetCmdTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 2, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txPresetCmdTxIdx.setStatus('current')
txPresetCmdLoadPreset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 2, 1, 2), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPresetCmdLoadPreset1.setStatus('current')
txPresetCmdLoadPreset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 2, 1, 3), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPresetCmdLoadPreset2.setStatus('current')
txPresetCmdLoadPreset3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 2, 1, 4), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPresetCmdLoadPreset3.setStatus('current')
txPresetCmdLoadPreset4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 2, 1, 5), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPresetCmdLoadPreset4.setStatus('current')
txPresetCmdSavePreset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 2, 1, 6), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPresetCmdSavePreset1.setStatus('current')
txPresetCmdSavePreset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 2, 1, 7), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPresetCmdSavePreset2.setStatus('current')
txPresetCmdSavePreset3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 2, 1, 8), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPresetCmdSavePreset3.setStatus('current')
txPresetCmdSavePreset4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 2, 1, 9), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txPresetCmdSavePreset4.setStatus('current')
txPresetStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 3), )
if mibBuilder.loadTexts: txPresetStatusTable.setStatus('current')
txPresetStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 3, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txPresetCmdTxIdx"))
if mibBuilder.loadTexts: txPresetStatusEntry.setStatus('current')
txPresetStActivePreset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("notActive", 0), ("preset1", 1), ("preset2", 2), ("preset3", 3), ("preset4", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPresetStActivePreset.setStatus('current')
txPresetStProgramSettings = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 12, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("notSaved", 2), ("saved", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPresetStProgramSettings.setStatus('current')
txRfSensors = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13))
txRfSensorsNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 1), )
if mibBuilder.loadTexts: txRfSensorsNotificationTable.setStatus('current')
txRfSensorsNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 1, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txRfSensorsNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txRfSensorsNotificationSensorIdx"), (0, "RS-XX9-TX-MIB", "txRfSensorsNotificationIdx"))
if mibBuilder.loadTexts: txRfSensorsNotificationEntry.setStatus('current')
txRfSensorsNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: txRfSensorsNotificationTxIdx.setStatus('current')
txRfSensorsNotificationSensorIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 6)))
if mibBuilder.loadTexts: txRfSensorsNotificationSensorIdx.setStatus('current')
txRfSensorsNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(12000, 12001)))
if mibBuilder.loadTexts: txRfSensorsNotificationIdx.setStatus('current')
txRfSensorsNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(12000, 12001))).clone(namedValues=NamedValues(("txRfSensorLinkStatus", 12000), ("txRfSensorCalibrated", 12001)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: txRfSensorsNotificationName.setStatus('current')
txRfSensorsNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfSensorsNotificationMask.setStatus('current')
txRfSensorsNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfSensorsNotificationPriority.setStatus('current')
txRfSensorsNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txRfSensorsNotificationState.setStatus('current')
txRfSensorsTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2), )
if mibBuilder.loadTexts: txRfSensorsTable.setStatus('current')
txRfSensorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1), ).setIndexNames((0, "RS-XX9-TX-MIB", "txRfSensorsNotificationTxIdx"), (0, "RS-XX9-TX-MIB", "txRfSensorsNotificationSensorIdx"))
if mibBuilder.loadTexts: txRfSensorsEntry.setStatus('current')
txRfLimitForwardFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-4000, 0))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitForwardFail.setStatus('current')
txRfLimitForwardWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-4000, 0))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitForwardWarn.setStatus('current')
txRfLimitReflectedFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1700, -600))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitReflectedFail.setStatus('current')
txRfLimitReflectedWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2800, -1700))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitReflectedWarn.setStatus('current')
txRfLimitForwardPercentFailUpper = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setUnits('0.1 %').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitForwardPercentFailUpper.setStatus('current')
txRfLimitForwardPercentFailLower = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-990, 1))).setUnits('0.1 %').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitForwardPercentFailLower.setStatus('current')
txRfLimitForwardPercentWarnUpper = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setUnits('0.1 %').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitForwardPercentWarnUpper.setStatus('current')
txRfLimitForwardPercentWarnLower = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-990, 1))).setUnits('0.1 %').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitForwardPercentWarnLower.setStatus('current')
txRfLimitReflectedVswrFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1330, 3000))).setUnits('0.001 VSWR').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitReflectedVswrFail.setStatus('current')
txRfLimitReflectedVswrWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1080, 1330))).setUnits('0.001 VSWR').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitReflectedVswrWarn.setStatus('current')
txRfCmdForwardFailTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfCmdForwardFailTimeout.setStatus('current')
txRfStForwardPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setUnits('0.1 %').setMaxAccess("readonly")
if mibBuilder.loadTexts: txRfStForwardPercent.setStatus('current')
txRfStReflectedVswr = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(100, 1000), ))).setUnits('0.001 VSWR').setMaxAccess("readonly")
if mibBuilder.loadTexts: txRfStReflectedVswr.setStatus('current')
txRfStForward = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 14), Unsigned32()).setUnits('milli W').setMaxAccess("readonly")
if mibBuilder.loadTexts: txRfStForward.setStatus('current')
txRfStReflected = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 15), Unsigned32()).setUnits('milli W').setMaxAccess("readonly")
if mibBuilder.loadTexts: txRfStReflected.setStatus('current')
txRfIdentify = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 16), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfIdentify.setStatus('current')
txRfCalibrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 17), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfCalibrate.setStatus('current')
txRfUncalibrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 18), Trigger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfUncalibrate.setStatus('current')
txRfLimitForwardAddUpperFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000, 1000))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitForwardAddUpperFail.setStatus('current')
txRfLimitForwardAddUpperWarn = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 1, 13, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 1000))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: txRfLimitForwardAddUpperWarn.setStatus('current')
rsXx9TxConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2))
rsXx9TxCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 1))
txBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 1, 1)).setObjects(("RS-XX9-TX-MIB", "txObjsExciter"), ("RS-XX9-TX-MIB", "txObjsSFN"), ("RS-XX9-TX-MIB", "txObjsInputInterfaces"), ("RS-XX9-TX-MIB", "txObjsInputAutomatic"), ("RS-XX9-TX-MIB", "txNotifySFN"), ("RS-XX9-TX-MIB", "txNotifyInputInterfaces"), ("RS-XX9-TX-MIB", "txObjsPrecorrection"), ("RS-XX9-TX-MIB", "txNotifyInputAutomatic"), ("RS-XX9-TX-MIB", "txObjsOutputStage"), ("RS-XX9-TX-MIB", "txNotifyAmplifier"), ("RS-XX9-TX-MIB", "txObjsAmplifier"), ("RS-XX9-TX-MIB", "txNotifyOutputStage"), ("RS-XX9-TX-MIB", "txNotifyPrecorrection"), ("RS-XX9-TX-MIB", "txNotifyFrequencyRegulation"), ("RS-XX9-TX-MIB", "txObjsFrequencyRegulation"), ("RS-XX9-TX-MIB", "txObjsNonBand2"), ("RS-XX9-TX-MIB", "txObjsNonFM"), ("RS-XX9-TX-MIB", "txNotifyExciter"), ("RS-XX9-TX-MIB", "txObjsTransmitter"), ("RS-XX9-TX-MIB", "txNotifyTransmitter"), ("RS-XX9-TX-MIB", "txObjsExciterAutomatic"), ("RS-XX9-TX-MIB", "txNotifyExciterAutomatic"), ("RS-XX9-TX-MIB", "txObjsDualDrive"), ("RS-XX9-TX-MIB", "txObjsSFN1"), ("RS-XX9-TX-MIB", "txObjsPMx"), ("RS-XX9-TX-MIB", "txObjsSFN2"), ("RS-XX9-TX-MIB", "txObjsInputTsFeed"), ("RS-XX9-TX-MIB", "txNotifyInputTsFeed"), ("RS-XX9-TX-MIB", "txObjsPHx902"), ("RS-XX9-TX-MIB", "txObjsPMU901"), ("RS-XX9-TX-MIB", "txObjsPMV901"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txBasicCompliance = txBasicCompliance.setStatus('current')
txBand2Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 1, 2)).setObjects(("RS-XX9-TX-MIB", "txObjsExciter"), ("RS-XX9-TX-MIB", "txObjsInputAutomatic"), ("RS-XX9-TX-MIB", "txNotifyInputAutomatic"), ("RS-XX9-TX-MIB", "txObjsOutputStage"), ("RS-XX9-TX-MIB", "txNotifyAmplifier"), ("RS-XX9-TX-MIB", "txObjsAmplifier"), ("RS-XX9-TX-MIB", "txNotifyOutputStage"), ("RS-XX9-TX-MIB", "txObjsPHR901"), ("RS-XX9-TX-MIB", "txNotifyFrequencyRegulation"), ("RS-XX9-TX-MIB", "txObjsFrequencyRegulation"), ("RS-XX9-TX-MIB", "txNotifyExciter"), ("RS-XX9-TX-MIB", "txObjsTransmitter"), ("RS-XX9-TX-MIB", "txNotifyTransmitter"), ("RS-XX9-TX-MIB", "txObjsExciterAutomatic"), ("RS-XX9-TX-MIB", "txNotifyExciterAutomatic"), ("RS-XX9-TX-MIB", "txObjsDualDrive"), ("RS-XX9-TX-MIB", "txObjsNonFM"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txBand2Compliance = txBand2Compliance.setStatus('current')
rsXx9TxGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2))
txObjsTransmitter = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 1)).setObjects(("RS-XX9-TX-MIB", "txTransmitterNotificationName"), ("RS-XX9-TX-MIB", "txTransmitterNotificationMask"), ("RS-XX9-TX-MIB", "txTransmitterNotificationPriority"), ("RS-XX9-TX-MIB", "txTransmitterNotificationState"), ("RS-XX9-TX-MIB", "txTransCmdReset"), ("RS-XX9-TX-MIB", "txTransCmdOperationMode"), ("RS-XX9-TX-MIB", "txTransCmdNominalPower"), ("RS-XX9-TX-MIB", "txTransStForwardPower"), ("RS-XX9-TX-MIB", "txTransStReflectedPower"), ("RS-XX9-TX-MIB", "txTransStModulationMode"), ("RS-XX9-TX-MIB", "txTransStPrimaryModMode"), ("RS-XX9-TX-MIB", "txTransCmdPrgOnAfterSumFault"), ("RS-XX9-TX-MIB", "txTransCmdReflectionCheck"), ("RS-XX9-TX-MIB", "txTransCmdWarnOnDohertyMismatch"), ("RS-XX9-TX-MIB", "txTransStSecondaryModMode"), ("RS-XX9-TX-MIB", "txTransCmdChangeModulation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsTransmitter = txObjsTransmitter.setStatus('current')
txObjsExciter = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 2)).setObjects(("RS-XX9-TX-MIB", "txExcCmdModulationMode"), ("RS-XX9-TX-MIB", "txExcCmdOutputAttenuation"), ("RS-XX9-TX-MIB", "txExcStOperationOn"), ("RS-XX9-TX-MIB", "txExcCmdLoopControl"), ("RS-XX9-TX-MIB", "txExcCmdOperationMode"), ("RS-XX9-TX-MIB", "txExcCmdFrequency"), ("RS-XX9-TX-MIB", "txExciterNotificationName"), ("RS-XX9-TX-MIB", "txExciterNotificationMask"), ("RS-XX9-TX-MIB", "txExciterNotificationPriority"), ("RS-XX9-TX-MIB", "txExciterNotificationState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsExciter = txObjsExciter.setStatus('current')
txObjsInputInterfaces = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 3)).setObjects(("RS-XX9-TX-MIB", "txIpFeedStreamProtocol"), ("RS-XX9-TX-MIB", "txIpFeedStreamPort"), ("RS-XX9-TX-MIB", "txIpFeedStreamAddress"), ("RS-XX9-TX-MIB", "txIpFeedStreamAddressType"), ("RS-XX9-TX-MIB", "txIpFeedStreamingMode"), ("RS-XX9-TX-MIB", "txIpFeedConnector"), ("RS-XX9-TX-MIB", "txInpGsMultiplexName"), ("RS-XX9-TX-MIB", "txInpGsInputSource"), ("RS-XX9-TX-MIB", "txInpMonitorOut"), ("RS-XX9-TX-MIB", "txIpFeedPacketsOutOfRange"), ("RS-XX9-TX-MIB", "txIpFeedPacketsReordered"), ("RS-XX9-TX-MIB", "txIpFeedPacketsDuplicate"), ("RS-XX9-TX-MIB", "txIpFeedPacketsFixed"), ("RS-XX9-TX-MIB", "txIpFeedPacketsMissing"), ("RS-XX9-TX-MIB", "txIpFeedPacketsTotal"), ("RS-XX9-TX-MIB", "txIpFeedLinkStatus"), ("RS-XX9-TX-MIB", "txIpFeedDatarate"), ("RS-XX9-TX-MIB", "txInpIfNotificationName"), ("RS-XX9-TX-MIB", "txInpIfNotificationMask"), ("RS-XX9-TX-MIB", "txInpIfNotificationPriority"), ("RS-XX9-TX-MIB", "txInpIfNotificationState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsInputInterfaces = txObjsInputInterfaces.setStatus('current')
txObjsInputTsFeed = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 4)).setObjects(("RS-XX9-TX-MIB", "txTsFeedBruttoDataRate"), ("RS-XX9-TX-MIB", "txTsFeedNettoDataRate"), ("RS-XX9-TX-MIB", "txTsFeedPacketLength"), ("RS-XX9-TX-MIB", "txTsFeedType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsInputTsFeed = txObjsInputTsFeed.setStatus('current')
txObjsInputAutomatic = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 5)).setObjects(("RS-XX9-TX-MIB", "txInpAutoNotificationName"), ("RS-XX9-TX-MIB", "txInpAutoNotificationMask"), ("RS-XX9-TX-MIB", "txInpAutoNotificationPriority"), ("RS-XX9-TX-MIB", "txInpAutoNotificationState"), ("RS-XX9-TX-MIB", "txInpAutoOperationMode"), ("RS-XX9-TX-MIB", "txInpAutoGuardTimeToReserve"), ("RS-XX9-TX-MIB", "txInpAutoIfReseveFails"), ("RS-XX9-TX-MIB", "txInpAutoForceExciterChangeover"), ("RS-XX9-TX-MIB", "txInpAutoActiveInput"), ("RS-XX9-TX-MIB", "txInpAutoDelayInput1To2"), ("RS-XX9-TX-MIB", "txInpAutoGuardTimeBack"), ("RS-XX9-TX-MIB", "txInpAutoDirection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsInputAutomatic = txObjsInputAutomatic.setStatus('current')
txObjsFrequencyRegulation = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 6)).setObjects(("RS-XX9-TX-MIB", "txFrqRegSetupSource"), ("RS-XX9-TX-MIB", "txFrqRegSetupControllerMode"), ("RS-XX9-TX-MIB", "txFrqRegSetupRefFailPermissionTime"), ("RS-XX9-TX-MIB", "txFrqRegSetupMuteOnFail"), ("RS-XX9-TX-MIB", "txFrqRegSetupManualOcxoAdjust"), ("RS-XX9-TX-MIB", "txFrqRegSetupMonitor"), ("RS-XX9-TX-MIB", "txFrqRegNotificationName"), ("RS-XX9-TX-MIB", "txFrqRegStateController"), ("RS-XX9-TX-MIB", "txFrqRegStateCurrentSource"), ("RS-XX9-TX-MIB", "txFrqRegNotificationState"), ("RS-XX9-TX-MIB", "txFrqRegStateCurrentControllerMode"), ("RS-XX9-TX-MIB", "txFrqRegNotificationPriority"), ("RS-XX9-TX-MIB", "txFrqRegNotificationMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsFrequencyRegulation = txObjsFrequencyRegulation.setStatus('current')
txObjsSFN = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 7)).setObjects(("RS-XX9-TX-MIB", "txSfnNotificationName"), ("RS-XX9-TX-MIB", "txSfnNotificationMask"), ("RS-XX9-TX-MIB", "txSfnNotificationPriority"), ("RS-XX9-TX-MIB", "txSfnNotificationState"), ("RS-XX9-TX-MIB", "txSfnStateInternalPpsValid"), ("RS-XX9-TX-MIB", "txSfnStateProcessingTime"), ("RS-XX9-TX-MIB", "txSfnStateDynamicDelay"), ("RS-XX9-TX-MIB", "txSfnStateTotalDelay"), ("RS-XX9-TX-MIB", "txSfnSetupSource"), ("RS-XX9-TX-MIB", "txSfnSetupMaxDeviation"), ("RS-XX9-TX-MIB", "txSfnStatePPS"), ("RS-XX9-TX-MIB", "txSfnStateSFN"), ("RS-XX9-TX-MIB", "txSfnSetupStaticDelay"), ("RS-XX9-TX-MIB", "txSfnStateTransmissionInTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsSFN = txObjsSFN.setStatus('current')
txObjsPrecorrection = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 8)).setObjects(("RS-XX9-TX-MIB", "txPrecorrNotificationName"), ("RS-XX9-TX-MIB", "txPrecorrNotificationMask"), ("RS-XX9-TX-MIB", "txPrecorrNotificationPriority"), ("RS-XX9-TX-MIB", "txPrecorrNotificationState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPrecorrection = txObjsPrecorrection.setStatus('current')
txObjsOutputStage = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 9)).setObjects(("RS-XX9-TX-MIB", "txOstNotificationName"), ("RS-XX9-TX-MIB", "txOstNotificationMask"), ("RS-XX9-TX-MIB", "txOstNotificationPriority"), ("RS-XX9-TX-MIB", "txOstNotificationState"), ("RS-XX9-TX-MIB", "txOstStateRfOnHours"), ("RS-XX9-TX-MIB", "txOstCmdPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsOutputStage = txObjsOutputStage.setStatus('current')
txObjsAmplifier = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 10)).setObjects(("RS-XX9-TX-MIB", "txAmpNotificationName"), ("RS-XX9-TX-MIB", "txAmpNotificationMask"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"), ("RS-XX9-TX-MIB", "txAmpStIDrv"), ("RS-XX9-TX-MIB", "txAmpStIPre"), ("RS-XX9-TX-MIB", "txAmpStVRefPwr"), ("RS-XX9-TX-MIB", "txAmpStVPlusMon"), ("RS-XX9-TX-MIB", "txAmpStIDc"), ("RS-XX9-TX-MIB", "txAmpStVPreMon"), ("RS-XX9-TX-MIB", "txAmpStVAuxIn"), ("RS-XX9-TX-MIB", "txAmpStV12Mon"), ("RS-XX9-TX-MIB", "txAmpStV5Acb"), ("RS-XX9-TX-MIB", "txAmpStV3V5"), ("RS-XX9-TX-MIB", "txAmpStTemperature"), ("RS-XX9-TX-MIB", "txAmpStRfMonitor"), ("RS-XX9-TX-MIB", "txAmpStPwrA"), ("RS-XX9-TX-MIB", "txAmpStPwrB"), ("RS-XX9-TX-MIB", "txAmpStPwrOut"), ("RS-XX9-TX-MIB", "txAmpStReflOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsAmplifier = txObjsAmplifier.setStatus('current')
txObjsSwitchlessCombiner = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 11)).setObjects(("RS-XX9-TX-MIB", "txSwiCoNotificationName"), ("RS-XX9-TX-MIB", "txSwiCoNotificationMask"), ("RS-XX9-TX-MIB", "txSwiCoNotificationPriority"), ("RS-XX9-TX-MIB", "txSwiCoNotificationState"), ("RS-XX9-TX-MIB", "txSwiCoStPosGraded"), ("RS-XX9-TX-MIB", "txSwiCoStPosDegree"), ("RS-XX9-TX-MIB", "txSwiCoStRegulationState"), ("RS-XX9-TX-MIB", "txSwiCoCmdAutomatic"), ("RS-XX9-TX-MIB", "txSwiCoCmdManualPosition"), ("RS-XX9-TX-MIB", "txSwiCoCmdActivationThreshold"), ("RS-XX9-TX-MIB", "txSwiCoStCalibrationState"), ("RS-XX9-TX-MIB", "txSwiCoStPosPermil"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsSwitchlessCombiner = txObjsSwitchlessCombiner.setStatus('current')
txObjsActiveReserve = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 12)).setObjects(("RS-XX9-TX-MIB", "txArExcAutomaticOperationMode"), ("RS-XX9-TX-MIB", "txArExcAutomaticMode"), ("RS-XX9-TX-MIB", "txArExcAutomaticGuardTime"), ("RS-XX9-TX-MIB", "txArPreselectExcA"), ("RS-XX9-TX-MIB", "txArPreselectExcB"), ("RS-XX9-TX-MIB", "txArExcPreselected"), ("RS-XX9-TX-MIB", "txArExcSelected"), ("RS-XX9-TX-MIB", "txArOstAutomaticOperationMode"), ("RS-XX9-TX-MIB", "txArOstAutomaticMode"), ("RS-XX9-TX-MIB", "txArOstAutomaticGuardTime"), ("RS-XX9-TX-MIB", "txArOstPreselected"), ("RS-XX9-TX-MIB", "txArOstSelected"), ("RS-XX9-TX-MIB", "txArPreselectOstAtoDlOstBtoAnt"), ("RS-XX9-TX-MIB", "txArPreselectOstAtoAntOstBtoDl"), ("RS-XX9-TX-MIB", "txArPreselectOstAOstBtoDl"), ("RS-XX9-TX-MIB", "txArPreselectOstAOstBtoAnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsActiveReserve = txObjsActiveReserve.setStatus('current')
txObjsInputSatFeed = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 13)).setObjects(("RS-XX9-TX-MIB", "txSatTunerTransponderFreq"), ("RS-XX9-TX-MIB", "txSatTunerSignalType"), ("RS-XX9-TX-MIB", "txSatTunerSymbolRate"), ("RS-XX9-TX-MIB", "txSatTunerModulation"), ("RS-XX9-TX-MIB", "txSatTunerCoderate"), ("RS-XX9-TX-MIB", "txSatTunerSignalStandard"), ("RS-XX9-TX-MIB", "txSatTunerRxPower"), ("RS-XX9-TX-MIB", "txSatTunerMeasuredTsDatarate"), ("RS-XX9-TX-MIB", "txSatTunerBitErrorRate"), ("RS-XX9-TX-MIB", "txSatTunerCarrierNoiseRatio"), ("RS-XX9-TX-MIB", "txSatTunerTsSymbolRate"), ("RS-XX9-TX-MIB", "txSatLnbPolarization"), ("RS-XX9-TX-MIB", "txSatLnbFreqLowBand"), ("RS-XX9-TX-MIB", "txSatLnbFreqHighBand"), ("RS-XX9-TX-MIB", "txSatLnbVoltage"), ("RS-XX9-TX-MIB", "txSatCamInserted"), ("RS-XX9-TX-MIB", "txSatCamStatus"), ("RS-XX9-TX-MIB", "txSatCamManufacturerName"), ("RS-XX9-TX-MIB", "txSatCamModuleName"), ("RS-XX9-TX-MIB", "txSatCamTsInput"), ("RS-XX9-TX-MIB", "txSatCamTsOutput"), ("RS-XX9-TX-MIB", "txSatCamConfigurationMode"), ("RS-XX9-TX-MIB", "txSatCamBissMode"), ("RS-XX9-TX-MIB", "txSatCamBissInjectedId"), ("RS-XX9-TX-MIB", "txSatCamBissEncryptedSession"), ("RS-XX9-TX-MIB", "txSatCamBissClearSession"), ("RS-XX9-TX-MIB", "txSatFeedInputServiceName"), ("RS-XX9-TX-MIB", "txSatFeedInputServiceID"), ("RS-XX9-TX-MIB", "txSatFeedInputServiceType"), ("RS-XX9-TX-MIB", "txSatFeedInputServiceElementaryStreams"), ("RS-XX9-TX-MIB", "txSatFeedInputServiceDecryption"), ("RS-XX9-TX-MIB", "txSatFeedInputServiceEncrypted"), ("RS-XX9-TX-MIB", "txSatFeedInputServiceDecryptionState"), ("RS-XX9-TX-MIB", "txSatIpOutMulticastAddrType"), ("RS-XX9-TX-MIB", "txSatGeneralAsiOutput"), ("RS-XX9-TX-MIB", "txSatLnb22kHzSignal"), ("RS-XX9-TX-MIB", "txSatLnbFreqCBand"), ("RS-XX9-TX-MIB", "txSatLnbBand"), ("RS-XX9-TX-MIB", "txSatTunerIntermediateFreq"), ("RS-XX9-TX-MIB", "txSatFeedDecryptionServiceID"), ("RS-XX9-TX-MIB", "txSatBtsNullPacketLcPid"), ("RS-XX9-TX-MIB", "txSatBtsNullPacketLbPid"), ("RS-XX9-TX-MIB", "txSatBtsNullPacketLaPid"), ("RS-XX9-TX-MIB", "txSatBtsPliTablePid"), ("RS-XX9-TX-MIB", "txSatTunerLinkMargin"), ("RS-XX9-TX-MIB", "txSatMultiStreamUsedStreamId"), ("RS-XX9-TX-MIB", "txSatMultiStreamStatus"), ("RS-XX9-TX-MIB", "txSatCamScExpirationDate"), ("RS-XX9-TX-MIB", "txSatCamScManufacturerName"), ("RS-XX9-TX-MIB", "txSatCamScInserted"), ("RS-XX9-TX-MIB", "txSatLnbDriftWarnLimit"), ("RS-XX9-TX-MIB", "txSatTunerCarrierNoiseWarnLimit"), ("RS-XX9-TX-MIB", "txSatTunerLinkMarginFaultLimit"), ("RS-XX9-TX-MIB", "txSatTunerLinkMarginWarnLimit"), ("RS-XX9-TX-MIB", "txSatCamReset"), ("RS-XX9-TX-MIB", "txSatCamResetMode"), ("RS-XX9-TX-MIB", "txSatPlsActive"), ("RS-XX9-TX-MIB", "txSatPlsSelect"), ("RS-XX9-TX-MIB", "txSatCodeLoop"), ("RS-XX9-TX-MIB", "txSatPlsCode3"), ("RS-XX9-TX-MIB", "txSatPlsCode2"), ("RS-XX9-TX-MIB", "txSatLnbDrift"), ("RS-XX9-TX-MIB", "txSatTunerCarrierNoiseFaultLimit"), ("RS-XX9-TX-MIB", "txSatFeedInputServicePmtPid"), ("RS-XX9-TX-MIB", "txSatStreamExpectedTsId"), ("RS-XX9-TX-MIB", "txSatStreamCurrentTsId"), ("RS-XX9-TX-MIB", "txSatLnbFreqCBandLower32"), ("RS-XX9-TX-MIB", "txSatLnbFreqCBandUpper32"), ("RS-XX9-TX-MIB", "txSatLnbFreqHighBandLower32"), ("RS-XX9-TX-MIB", "txSatLnbFreqHighBandUpper32"), ("RS-XX9-TX-MIB", "txSatLnbFreqLowBandLower32"), ("RS-XX9-TX-MIB", "txSatLnbFreqLowBandUpper32"), ("RS-XX9-TX-MIB", "txSatTunerTransponderFreqLower32"), ("RS-XX9-TX-MIB", "txSatTunerTransponderFreqUpper32"), ("RS-XX9-TX-MIB", "txSatIpOutMulticastAddr"), ("RS-XX9-TX-MIB", "txSatIpOutPort"), ("RS-XX9-TX-MIB", "txSatIpOutFecRow"), ("RS-XX9-TX-MIB", "txSatIpOutFecCol"), ("RS-XX9-TX-MIB", "txSatIpOutLocalIpAddrType"), ("RS-XX9-TX-MIB", "txSatIpOutLocalIpAddr"), ("RS-XX9-TX-MIB", "txSatIpOutLocalNetmaskAddrType"), ("RS-XX9-TX-MIB", "txSatIpOutLocalNetmask"), ("RS-XX9-TX-MIB", "txSatIpOutMacAddr"), ("RS-XX9-TX-MIB", "txSatPlScrambling"), ("RS-XX9-TX-MIB", "txSatPlsCode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsInputSatFeed = txObjsInputSatFeed.setStatus('current')
txObjsPreset = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 14)).setObjects(("RS-XX9-TX-MIB", "txPresetStProgramSettings"), ("RS-XX9-TX-MIB", "txPresetStActivePreset"), ("RS-XX9-TX-MIB", "txPresetCmdSavePreset4"), ("RS-XX9-TX-MIB", "txPresetCmdSavePreset3"), ("RS-XX9-TX-MIB", "txPresetCmdSavePreset2"), ("RS-XX9-TX-MIB", "txPresetCmdSavePreset1"), ("RS-XX9-TX-MIB", "txPresetCmdLoadPreset4"), ("RS-XX9-TX-MIB", "txPresetCmdLoadPreset3"), ("RS-XX9-TX-MIB", "txPresetCmdLoadPreset2"), ("RS-XX9-TX-MIB", "txPresetCmdLoadPreset1"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPreset = txObjsPreset.setStatus('current')
txObjsRfSensors = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 15)).setObjects(("RS-XX9-TX-MIB", "txRfLimitForwardFail"), ("RS-XX9-TX-MIB", "txRfLimitForwardWarn"), ("RS-XX9-TX-MIB", "txRfLimitReflectedFail"), ("RS-XX9-TX-MIB", "txRfLimitReflectedWarn"), ("RS-XX9-TX-MIB", "txRfLimitForwardPercentFailUpper"), ("RS-XX9-TX-MIB", "txRfLimitForwardPercentFailLower"), ("RS-XX9-TX-MIB", "txRfLimitForwardPercentWarnUpper"), ("RS-XX9-TX-MIB", "txRfLimitForwardPercentWarnLower"), ("RS-XX9-TX-MIB", "txRfLimitReflectedVswrFail"), ("RS-XX9-TX-MIB", "txRfLimitReflectedVswrWarn"), ("RS-XX9-TX-MIB", "txRfCmdForwardFailTimeout"), ("RS-XX9-TX-MIB", "txRfStForwardPercent"), ("RS-XX9-TX-MIB", "txRfStReflected"), ("RS-XX9-TX-MIB", "txRfStForward"), ("RS-XX9-TX-MIB", "txRfUncalibrate"), ("RS-XX9-TX-MIB", "txRfCalibrate"), ("RS-XX9-TX-MIB", "txRfIdentify"), ("RS-XX9-TX-MIB", "txRfStReflectedVswr"), ("RS-XX9-TX-MIB", "txRfSensorsNotificationName"), ("RS-XX9-TX-MIB", "txRfSensorsNotificationMask"), ("RS-XX9-TX-MIB", "txRfSensorsNotificationPriority"), ("RS-XX9-TX-MIB", "txRfSensorsNotificationState"), ("RS-XX9-TX-MIB", "txRfLimitForwardAddUpperFail"), ("RS-XX9-TX-MIB", "txRfLimitForwardAddUpperWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsRfSensors = txObjsRfSensors.setStatus('current')
txNotifyTransmitter = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 101)).setObjects(("RS-XX9-TX-MIB", "txSummary"), ("RS-XX9-TX-MIB", "txRfSensorSummary"), ("RS-XX9-TX-MIB", "txLocal"), ("RS-XX9-TX-MIB", "txRF"), ("RS-XX9-TX-MIB", "txReflection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyTransmitter = txNotifyTransmitter.setStatus('current')
txNotifyExciter = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 102)).setObjects(("RS-XX9-TX-MIB", "txExciterSummary"), ("RS-XX9-TX-MIB", "txExciterLoop"), ("RS-XX9-TX-MIB", "txExciterMute"), ("RS-XX9-TX-MIB", "txExciterOutputConnect"), ("RS-XX9-TX-MIB", "txExciterRfState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyExciter = txNotifyExciter.setStatus('current')
txNotifyInputInterfaces = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 103)).setObjects(("RS-XX9-TX-MIB", "txInpIfLogDatarateBufferOverflow"), ("RS-XX9-TX-MIB", "txInpIfLogDatarateBufferUnderrun"), ("RS-XX9-TX-MIB", "txInpIfIpState"), ("RS-XX9-TX-MIB", "txInpIfLogState"), ("RS-XX9-TX-MIB", "txInpIfLogInfoPacket"), ("RS-XX9-TX-MIB", "txInpIfLogPacketLength"), ("RS-XX9-TX-MIB", "txInpIfIpInfoPacket"), ("RS-XX9-TX-MIB", "txInpIfIpPacketLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyInputInterfaces = txNotifyInputInterfaces.setStatus('current')
txNotifyInputTsFeed = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 104)).setObjects(("RS-XX9-TX-MIB", "txInpIfTsState"), ("RS-XX9-TX-MIB", "txInpIfTsInfoPacket"), ("RS-XX9-TX-MIB", "txInpIfTsPacketLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyInputTsFeed = txNotifyInputTsFeed.setStatus('current')
txNotifyInputAutomatic = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 105)).setObjects(("RS-XX9-TX-MIB", "txInpAuto1Active"), ("RS-XX9-TX-MIB", "txInpAutoState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyInputAutomatic = txNotifyInputAutomatic.setStatus('current')
txNotifyFrequencyRegulation = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 106)).setObjects(("RS-XX9-TX-MIB", "txFrqRegSummary"), ("RS-XX9-TX-MIB", "txFrqRegCurrentSource"), ("RS-XX9-TX-MIB", "txFrqRegSourceExtRef"), ("RS-XX9-TX-MIB", "txFrqRegSourceExtPPS"), ("RS-XX9-TX-MIB", "txFrqRegSourceIntGPS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyFrequencyRegulation = txNotifyFrequencyRegulation.setStatus('current')
txNotifySFN = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 107)).setObjects(("RS-XX9-TX-MIB", "txSfnSummary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifySFN = txNotifySFN.setStatus('current')
txNotifyPrecorrection = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 108)).setObjects(("RS-XX9-TX-MIB", "txPrecorrLinSummary"), ("RS-XX9-TX-MIB", "txPrecorrNonLinSummary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyPrecorrection = txNotifyPrecorrection.setStatus('current')
txNotifyOutputStage = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 109)).setObjects(("RS-XX9-TX-MIB", "txOstSummary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyOutputStage = txNotifyOutputStage.setStatus('current')
txNotifyAmplifier = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 110)).setObjects(("RS-XX9-TX-MIB", "txAmpSummary"), ("RS-XX9-TX-MIB", "txAmpRfPowerFail"), ("RS-XX9-TX-MIB", "txAmpReflection"), ("RS-XX9-TX-MIB", "txAmpSupplyFail"), ("RS-XX9-TX-MIB", "txAmpRfInFail"), ("RS-XX9-TX-MIB", "txAmpMute"), ("RS-XX9-TX-MIB", "txAmpTemperatureFail"), ("RS-XX9-TX-MIB", "txAmpTransistorFail"), ("RS-XX9-TX-MIB", "txAmpRegulationFail"), ("RS-XX9-TX-MIB", "txAmpAcFail"), ("RS-XX9-TX-MIB", "txAmpDcFail"), ("RS-XX9-TX-MIB", "txAmpLink"), ("RS-XX9-TX-MIB", "txAmpBiasFail"), ("RS-XX9-TX-MIB", "txAmpInitFail"), ("RS-XX9-TX-MIB", "txAmpAbsorberFail"), ("RS-XX9-TX-MIB", "txAmpOn"), ("RS-XX9-TX-MIB", "txAmpBlocking"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyAmplifier = txNotifyAmplifier.setStatus('current')
txNotifySwitchlessCombiner = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 111)).setObjects(("RS-XX9-TX-MIB", "txSwiCoSummary"), ("RS-XX9-TX-MIB", "txSwiCoRegulationSummary"), ("RS-XX9-TX-MIB", "txSwiCoRfProbeFail"), ("RS-XX9-TX-MIB", "txSwiCoRcbFail"), ("RS-XX9-TX-MIB", "txSwiCoHwLocal"), ("RS-XX9-TX-MIB", "txSwiCoHwLink"), ("RS-XX9-TX-MIB", "txSwiCoHwWarn"), ("RS-XX9-TX-MIB", "txSwiCoHwFault"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifySwitchlessCombiner = txNotifySwitchlessCombiner.setStatus('current')
txNotifyActiveReserve = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 112)).setObjects(("RS-XX9-TX-MIB", "txActiveReserveExcAutoSummary"), ("RS-XX9-TX-MIB", "txActiveReserveExcAutoReady"), ("RS-XX9-TX-MIB", "txActiveReserveExcAutoSwitchedOver"), ("RS-XX9-TX-MIB", "txActiveReserveExcAutoRfSwitchSummary"), ("RS-XX9-TX-MIB", "txActiveReserveOstAutoSummary"), ("RS-XX9-TX-MIB", "txActiveReserveOstAutoReady"), ("RS-XX9-TX-MIB", "txActiveReserveOstAutoSwitchedOver"), ("RS-XX9-TX-MIB", "txActiveReserveOstAutoRfSwitchSummary"), ("RS-XX9-TX-MIB", "txActiveReserveExcAutoOn"), ("RS-XX9-TX-MIB", "txActiveReserveOstAutoOn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyActiveReserve = txNotifyActiveReserve.setStatus('current')
txNotifyInputSatFeed = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 113)).setObjects(("RS-XX9-TX-MIB", "txInpIfSatInfoPacket"), ("RS-XX9-TX-MIB", "txInpIfSatPacketLength"), ("RS-XX9-TX-MIB", "txInpIfSatTransponderLocked"), ("RS-XX9-TX-MIB", "txInpIfSatIpOutput"), ("RS-XX9-TX-MIB", "txInpIfSatBtsStatus"), ("RS-XX9-TX-MIB", "txInpIfSatCarrierNoiseStatus"), ("RS-XX9-TX-MIB", "txInpIfSatLinkMarginStatus"), ("RS-XX9-TX-MIB", "txInpIfSatDriftStatus"), ("RS-XX9-TX-MIB", "txInpIfSatStreamTsIdMatch"), ("RS-XX9-TX-MIB", "txInpIfSatReceiverState"), ("RS-XX9-TX-MIB", "txInpIfSatInputState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyInputSatFeed = txNotifyInputSatFeed.setStatus('current')
txNotifyRfSensors = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 114)).setObjects(("RS-XX9-TX-MIB", "txRfSensorLinkStatus"), ("RS-XX9-TX-MIB", "txRfSensorCalibrated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyRfSensors = txNotifyRfSensors.setStatus('current')
txNotifyPaTLx = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 115)).setObjects(("RS-XX9-TX-MIB", "txAmpSummary"), ("RS-XX9-TX-MIB", "txAmpOn"), ("RS-XX9-TX-MIB", "txAmpMute"), ("RS-XX9-TX-MIB", "txAmpTemperatureFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyPaTLx = txNotifyPaTLx.setStatus('current')
txObjsExciterAutomatic = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 201)).setObjects(("RS-XX9-TX-MIB", "txTransCmdReserveOpMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsExciterAutomatic = txObjsExciterAutomatic.setStatus('current')
txObjsDualDrive = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 202)).setObjects(("RS-XX9-TX-MIB", "txExcAutoPreselectExcA"), ("RS-XX9-TX-MIB", "txExcAutoPreselectExcB"), ("RS-XX9-TX-MIB", "txExcAutoOperationMode"), ("RS-XX9-TX-MIB", "txExciterAutomaticMode"), ("RS-XX9-TX-MIB", "txExcAutoGuardTime"), ("RS-XX9-TX-MIB", "txExcAutoPreselected"), ("RS-XX9-TX-MIB", "txExcAutoRfSwitchPosition"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsDualDrive = txObjsDualDrive.setStatus('current')
txObjsSFN1 = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 203)).setObjects(("RS-XX9-TX-MIB", "txSfnStateNetworkDelay"), ("RS-XX9-TX-MIB", "txSfnStateMaximumDelay"), ("RS-XX9-TX-MIB", "txSfnStateDispatchTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsSFN1 = txObjsSFN1.setStatus('current')
txObjsSFN2 = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 204)).setObjects(("RS-XX9-TX-MIB", "txSfnSetupSFN"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsSFN2 = txObjsSFN2.setStatus('current')
txObjsPMx = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 205)).setObjects(("RS-XX9-TX-MIB", "txPmxFanFail"), ("RS-XX9-TX-MIB", "txPmxInletAirTemperature"), ("RS-XX9-TX-MIB", "txPmxOutletAirTemperature"), ("RS-XX9-TX-MIB", "txPmxFreqIDString"), ("RS-XX9-TX-MIB", "txAmpStI1A"), ("RS-XX9-TX-MIB", "txAmpStI2A"), ("RS-XX9-TX-MIB", "txAmpStI3A"), ("RS-XX9-TX-MIB", "txAmpStI1B"), ("RS-XX9-TX-MIB", "txAmpStI2B"), ("RS-XX9-TX-MIB", "txAmpStI3B"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPMx = txObjsPMx.setStatus('current')
txObjsNonFM = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 207)).setObjects(("RS-XX9-TX-MIB", "txInpAutoPreferredInput"), ("RS-XX9-TX-MIB", "txInpAutoMuteOnInputFail"), ("RS-XX9-TX-MIB", "txInpAutoFailDetection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsNonFM = txObjsNonFM.setStatus('current')
txObjsPHR901 = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 208)).setObjects(("RS-XX9-TX-MIB", "txPhr901PwrIn"), ("RS-XX9-TX-MIB", "txPhr901PwrDrv"), ("RS-XX9-TX-MIB", "txPhr901I12"), ("RS-XX9-TX-MIB", "txPhr901I34"), ("RS-XX9-TX-MIB", "txPhr901I56"), ("RS-XX9-TX-MIB", "txPhr901I78"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPHR901 = txObjsPHR901.setStatus('current')
txObjsNonBand2 = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 209)).setObjects(("RS-XX9-TX-MIB", "txInpAutoInputFailDelay"), ("RS-XX9-TX-MIB", "txInpAutoSeamlessOpMode"), ("RS-XX9-TX-MIB", "txInpAutoSeamlessPossible"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsNonBand2 = txObjsNonBand2.setStatus('current')
txObjsPMV901 = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 210)).setObjects(("RS-XX9-TX-MIB", "txPmxDohertyActive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPMV901 = txObjsPMV901.setStatus('current')
txObjsPMU901 = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 211)).setObjects(("RS-XX9-TX-MIB", "txPmxFrequencyFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPMU901 = txObjsPMU901.setStatus('current')
txObjsPHx902 = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 212)).setObjects(("RS-XX9-TX-MIB", "txAmpStI3B"), ("RS-XX9-TX-MIB", "txAmpStI2B"), ("RS-XX9-TX-MIB", "txAmpStI1B"), ("RS-XX9-TX-MIB", "txAmpStI3A"), ("RS-XX9-TX-MIB", "txAmpStI2A"), ("RS-XX9-TX-MIB", "txAmpStI1A"), ("RS-XX9-TX-MIB", "txPhxDohertyActive"), ("RS-XX9-TX-MIB", "txPhxFreqIDString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPHx902 = txObjsPHx902.setStatus('current')
txObjsNonAtv = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 213)).setObjects(("RS-XX9-TX-MIB", "txTransStPaEfficiency"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsNonAtv = txObjsNonAtv.setStatus('current')
txObjsTransparentTs = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 214)).setObjects(("RS-XX9-TX-MIB", "txInpAutoTransparentTs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsTransparentTs = txObjsTransparentTs.setStatus('current')
txObjsNonAnalog = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 215)).setObjects(("RS-XX9-TX-MIB", "txInpAutoDetectLostPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsNonAnalog = txObjsNonAnalog.setStatus('current')
txObjsDvbt2 = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 216)).setObjects(("RS-XX9-TX-MIB", "txSfnStateTimestampState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsDvbt2 = txObjsDvbt2.setStatus('current')
txObjsPaTlx = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 217)).setObjects(("RS-XX9-TX-MIB", "txAmpNotificationName"), ("RS-XX9-TX-MIB", "txAmpNotificationMask"), ("RS-XX9-TX-MIB", "txAmpNotificationPriority"), ("RS-XX9-TX-MIB", "txAmpNotificationState"), ("RS-XX9-TX-MIB", "txAmpStPwrOut"), ("RS-XX9-TX-MIB", "txAmpStReflOut"), ("RS-XX9-TX-MIB", "txAmpStVPlusMon"), ("RS-XX9-TX-MIB", "txAmpTlxFanFail"), ("RS-XX9-TX-MIB", "txAmpStTemperature"), ("RS-XX9-TX-MIB", "txAmpTlxV12Mon"), ("RS-XX9-TX-MIB", "txAmpTlxSupplyFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPaTlx = txObjsPaTlx.setStatus('current')
txObjsPHU901 = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 218)).setObjects(("RS-XX9-TX-MIB", "txAmpStI1A"), ("RS-XX9-TX-MIB", "txAmpStI2A"), ("RS-XX9-TX-MIB", "txAmpStI3A"), ("RS-XX9-TX-MIB", "txAmpStI1B"), ("RS-XX9-TX-MIB", "txAmpStI2B"), ("RS-XX9-TX-MIB", "txAmpStI3B"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPHU901 = txObjsPHU901.setStatus('current')
txObjsPMU905 = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 219)).setObjects(("RS-XX9-TX-MIB", "txPmxDohertyActive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPMU905 = txObjsPMU905.setStatus('current')
txObjsLinPrecorrection = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 220)).setObjects(("RS-XX9-TX-MIB", "txPrecorrLinStateStatus"), ("RS-XX9-TX-MIB", "txPrecorrLinStateSignalLevel"), ("RS-XX9-TX-MIB", "txPrecorrLinStateAmplitudeRipple"), ("RS-XX9-TX-MIB", "txPrecorrLinStateGroupDelayRipple"), ("RS-XX9-TX-MIB", "txPrecorrLinStateAmplitudeRippleLimit"), ("RS-XX9-TX-MIB", "txPrecorrLinStateGroupDelayRippleLimit"), ("RS-XX9-TX-MIB", "txPrecorrLinSetupOpMode"), ("RS-XX9-TX-MIB", "txPrecorrLinSetupReset"), ("RS-XX9-TX-MIB", "txPrecorrLinSetupAmplitudeRippleLimit"), ("RS-XX9-TX-MIB", "txPrecorrLinSetupGroupDelayRippleLimit"), ("RS-XX9-TX-MIB", "txPrecorrLinSetupEquipmentSlope"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsLinPrecorrection = txObjsLinPrecorrection.setStatus('current')
txObjsNonLinPrecorrection = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 221)).setObjects(("RS-XX9-TX-MIB", "txPrecorrNonLinStateStatus"), ("RS-XX9-TX-MIB", "txPrecorrNonLinStateSignalLevel"), ("RS-XX9-TX-MIB", "txPrecorrNonLinStateShoulderLeft"), ("RS-XX9-TX-MIB", "txPrecorrNonLinStateShoulderRight"), ("RS-XX9-TX-MIB", "txPrecorrNonLinSetupOpMode"), ("RS-XX9-TX-MIB", "txPrecorrNonLinSetupReset"), ("RS-XX9-TX-MIB", "txPrecorrNonLinSetupShoulderDistance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsNonLinPrecorrection = txObjsNonLinPrecorrection.setStatus('current')
txObjsPrecorrectionCfr = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 222)).setObjects(("RS-XX9-TX-MIB", "txPrecorrCfrEnable"), ("RS-XX9-TX-MIB", "txPrecorrCfrLevel"), ("RS-XX9-TX-MIB", "txPrecorrCfrInbandNoise"), ("RS-XX9-TX-MIB", "txPrecorrCfrOutbandNoise"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPrecorrectionCfr = txObjsPrecorrectionCfr.setStatus('current')
txObjsInputExgine = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 223)).setObjects(("RS-XX9-TX-MIB", "txExgineMode"), ("RS-XX9-TX-MIB", "txExgineStatus"), ("RS-XX9-TX-MIB", "txExgineMute"), ("RS-XX9-TX-MIB", "txExgineSyncInputSrc"), ("RS-XX9-TX-MIB", "txExgineSyncInputStatus"), ("RS-XX9-TX-MIB", "txExgineMpxInput"), ("RS-XX9-TX-MIB", "txExgineE2xInput"), ("RS-XX9-TX-MIB", "txExgineSupply1Status"), ("RS-XX9-TX-MIB", "txExgineSupply2Status"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsInputExgine = txObjsInputExgine.setStatus('current')
txObjsSignalQuality = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 224)).setObjects(("RS-XX9-TX-MIB", "txPrecorrSigQualPapr"), ("RS-XX9-TX-MIB", "txPrecorrSigQualMer"), ("RS-XX9-TX-MIB", "txPrecorrSigQualMerWarnLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsSignalQuality = txObjsSignalQuality.setStatus('current')
txObjsDigitalHighPower = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 225)).setObjects(("RS-XX9-TX-MIB", "txExcCmdRfSlope"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsDigitalHighPower = txObjsDigitalHighPower.setStatus('current')
txObjsOutputStageNonTlx = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 226)).setObjects(("RS-XX9-TX-MIB", "txOstCmdDcControl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsOutputStageNonTlx = txObjsOutputStageNonTlx.setStatus('current')
txNotifyExciterAutomatic = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 300)).setObjects(("RS-XX9-TX-MIB", "txExciterAutomaticSwitchedOver"), ("RS-XX9-TX-MIB", "txExciterAutomaticRfSwitchSummary"), ("RS-XX9-TX-MIB", "txExciterAutomaticSummary"), ("RS-XX9-TX-MIB", "txExciterAutomaticReady"), ("RS-XX9-TX-MIB", "txExciterAutomaticOn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyExciterAutomatic = txNotifyExciterAutomatic.setStatus('current')
txNotifyLinPrecorrection = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 301)).setObjects(("RS-XX9-TX-MIB", "txPrecorrLinSummary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyLinPrecorrection = txNotifyLinPrecorrection.setStatus('current')
txNotifyNonLinPrecorrection = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 302)).setObjects(("RS-XX9-TX-MIB", "txPrecorrNonLinSummary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyNonLinPrecorrection = txNotifyNonLinPrecorrection.setStatus('current')
txNotifySignalQuality = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 303)).setObjects(("RS-XX9-TX-MIB", "txPrecorrMerState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifySignalQuality = txNotifySignalQuality.setStatus('current')
txObjsPMxObsoleted = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 400)).setObjects(("RS-XX9-TX-MIB", "txPmxFreqID"), ("RS-XX9-TX-MIB", "txPmxvRefPowerMax"), ("RS-XX9-TX-MIB", "txPmxAirFilterFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPMxObsoleted = txObjsPMxObsoleted.setStatus('obsolete')
txObjsPHxObsoleted = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 401)).setObjects(("RS-XX9-TX-MIB", "txPhxFreqID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPHxObsoleted = txObjsPHxObsoleted.setStatus('obsolete')
txObjsInputAutomaticObsoleted = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 402)).setObjects(("RS-XX9-TX-MIB", "txInpAutoMaxDelayInput1To2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsInputAutomaticObsoleted = txObjsInputAutomaticObsoleted.setStatus('obsolete')
txObjsAmplifierObsoleted = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 403)).setObjects(("RS-XX9-TX-MIB", "txAmpStVReg"), ("RS-XX9-TX-MIB", "txPhr901PwrA"), ("RS-XX9-TX-MIB", "txPhr901PwrB"), ("RS-XX9-TX-MIB", "txPhr901PwrOutAv"), ("RS-XX9-TX-MIB", "txPhr901ReflOutAv"), ("RS-XX9-TX-MIB", "txPhr901PwrAbs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsAmplifierObsoleted = txObjsAmplifierObsoleted.setStatus('obsolete')
txObjsInputSatFeedObsoleted = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 404)).setObjects(("RS-XX9-TX-MIB", "txSatFeedInputServiceDecryptedAt"), ("RS-XX9-TX-MIB", "txSatBtsDecompEnable"), ("RS-XX9-TX-MIB", "txSatBtsRegionalization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsInputSatFeedObsoleted = txObjsInputSatFeedObsoleted.setStatus('obsolete')
txObjsPrecorrectionObsoleted = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 405)).setObjects(("RS-XX9-TX-MIB", "txPrecorrNonLinSetupSignalLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txObjsPrecorrectionObsoleted = txObjsPrecorrectionObsoleted.setStatus('obsolete')
txNotifyAmplifierObsoleted = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 3, 2, 2, 500)).setObjects(("RS-XX9-TX-MIB", "txAmpDriverFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    txNotifyAmplifierObsoleted = txNotifyAmplifierObsoleted.setStatus('obsolete')
mibBuilder.exportSymbols("RS-XX9-TX-MIB", txSwiCoRcbFail=txSwiCoRcbFail, txSatIpOutFecRow=txSatIpOutFecRow, txAmplifierPmxTable=txAmplifierPmxTable, txSatLnbFreqLowBandUpper32=txSatLnbFreqLowBandUpper32, txFrqRegCurrentSource=txFrqRegCurrentSource, txRfSensorLinkStatus=txRfSensorLinkStatus, txInpIfSatIpOutput=txInpIfSatIpOutput, txActiveReserveExciterTable=txActiveReserveExciterTable, txObjsRfSensors=txObjsRfSensors, txAmpStV5Acb=txAmpStV5Acb, txObjsSFN2=txObjsSFN2, txSatFeedDecryptionServiceIdx=txSatFeedDecryptionServiceIdx, txObjsPreset=txObjsPreset, txPrecorrNotificationTable=txPrecorrNotificationTable, txSatLnbFreqCBandUpper32=txSatLnbFreqCBandUpper32, txAmpStIDc=txAmpStIDc, txActiveReserveExciterEntry=txActiveReserveExciterEntry, txSwiCoHwFault=txSwiCoHwFault, txArOstAutomaticOperationMode=txArOstAutomaticOperationMode, txSfnStatePPS=txSfnStatePPS, txExciterAutomaticTable=txExciterAutomaticTable, txPrecorrNonLinStateTxIdx=txPrecorrNonLinStateTxIdx, txSatMultiStreamUsedStreamId=txSatMultiStreamUsedStreamId, txInpAutoConfigurationEntry=txInpAutoConfigurationEntry, txInputSatFeedIpOutputTable=txInputSatFeedIpOutputTable, txSfnStateTimestampState=txSfnStateTimestampState, txExciterNotificationName=txExciterNotificationName, txSwiCoNotificationName=txSwiCoNotificationName, txTransStReflectedPower=txTransStReflectedPower, txFrqRegStateController=txFrqRegStateController, txInpIfSatBtsStatus=txInpIfSatBtsStatus, txInputSatFeedTunerEntry=txInputSatFeedTunerEntry, txFrqRegStateCurrentControllerMode=txFrqRegStateCurrentControllerMode, txSfnStateTable=txSfnStateTable, txPrecorrNotificationExcIdx=txPrecorrNotificationExcIdx, txSatTunerRxPower=txSatTunerRxPower, txInputSatFeedInputServiceEntry=txInputSatFeedInputServiceEntry, txTransmitterStateTable=txTransmitterStateTable, txExgineStatus=txExgineStatus, txAmpNotificationAmpIdx=txAmpNotificationAmpIdx, txPhxFreqIDString=txPhxFreqIDString, txActiveReserveOstAutoSummary=txActiveReserveOstAutoSummary, txSatCamBissClearSession=txSatCamBissClearSession, txAmpLink=txAmpLink, txExgineMpxInput=txExgineMpxInput, txSatCamBissEncryptedSession=txSatCamBissEncryptedSession, txFrqRegStateEntry=txFrqRegStateEntry, txAmpStVPreMon=txAmpStVPreMon, txAmpTlxFanFail=txAmpTlxFanFail, txObjsPrecorrectionCfr=txObjsPrecorrectionCfr, txTransCmdChangeModulation=txTransCmdChangeModulation, txPrecorrLinStateGroupDelayRippleLimit=txPrecorrLinStateGroupDelayRippleLimit, txPhr901I12=txPhr901I12, txPresetCommandsTable=txPresetCommandsTable, txActiveReserveOstAutoRfSwitchSummary=txActiveReserveOstAutoRfSwitchSummary, txSwiCoStPosDegree=txSwiCoStPosDegree, txPrecorrSigQualPapr=txPrecorrSigQualPapr, txOstNotificationState=txOstNotificationState, txExcCmdOutputAttenuation=txExcCmdOutputAttenuation, txIpFeedDatarate=txIpFeedDatarate, txSatLnbFreqCBandLower32=txSatLnbFreqCBandLower32, txInpAutoFailDetection=txInpAutoFailDetection, txPrecorrNonLinStateStatus=txPrecorrNonLinStateStatus, txActiveReserveOstAutoSwitchedOver=txActiveReserveOstAutoSwitchedOver, txAmpStVRefPwr=txAmpStVRefPwr, txRfLimitReflectedVswrFail=txRfLimitReflectedVswrFail, txInpIfNotificationEntry=txInpIfNotificationEntry, txActiveReserveExcAutoRfSwitchSummary=txActiveReserveExcAutoRfSwitchSummary, txSfnSetupStaticDelay=txSfnSetupStaticDelay, txInpIfIpState=txInpIfIpState, txRfSensorsNotificationName=txRfSensorsNotificationName, txInpIfSatReceiverState=txInpIfSatReceiverState, txAmplifierStateEntry=txAmplifierStateEntry, txPrecorrLinSetupEquipmentSlope=txPrecorrLinSetupEquipmentSlope, txTransCmdNominalPower=txTransCmdNominalPower, txSfnStateInternalPpsValid=txSfnStateInternalPpsValid, txAmpRfInFail=txAmpRfInFail, txPrecorrNonLinSetupOpMode=txPrecorrNonLinSetupOpMode, txActiveReserve=txActiveReserve, rsXx9TxGroups=rsXx9TxGroups, txAmpSummary=txAmpSummary, txSfnStateProcessingTime=txSfnStateProcessingTime, txSwiCoCommandsTable=txSwiCoCommandsTable, txRfSensorsNotificationState=txRfSensorsNotificationState, txSfnSetupMaxDeviation=txSfnSetupMaxDeviation, txSatTunerSymbolRate=txSatTunerSymbolRate, txOstCmdDcControl=txOstCmdDcControl, txPrecorrNonLinSetupTable=txPrecorrNonLinSetupTable, SatSignalType=SatSignalType, txAmpStRfMonitor=txAmpStRfMonitor, txPresetCmdLoadPreset1=txPresetCmdLoadPreset1, txAmplifierTlxEntry=txAmplifierTlxEntry, txSatFeedInputServiceDecryptionState=txSatFeedInputServiceDecryptionState, txInpAutoNotificationIdx=txInpAutoNotificationIdx, txIpFeedLinkStatus=txIpFeedLinkStatus, txPrecorrNotificationState=txPrecorrNotificationState, txAmplifier=txAmplifier, txAmpNotificationState=txAmpNotificationState, txPrecorrCfrOutbandNoise=txPrecorrCfrOutbandNoise, txAmpTransistorFail=txAmpTransistorFail, txPrecorrNonLinStateTable=txPrecorrNonLinStateTable, txInpAutoMaxDelayInput1To2=txInpAutoMaxDelayInput1To2, txPrecorrSigQualTable=txPrecorrSigQualTable, txNotifyTransmitter=txNotifyTransmitter, txExciterNotificationPriority=txExciterNotificationPriority, txFrqRegNotificationState=txFrqRegNotificationState, txNotifyInputInterfaces=txNotifyInputInterfaces, txArPreselectExcA=txArPreselectExcA, txFrqRegStateTable=txFrqRegStateTable, txSwiCoHwLink=txSwiCoHwLink, txRfLimitForwardPercentFailUpper=txRfLimitForwardPercentFailUpper, txRfStForwardPercent=txRfStForwardPercent, txInpIfNotificationTable=txInpIfNotificationTable, txAmpSupplyFail=txAmpSupplyFail, txIpFeedPacketsTotal=txIpFeedPacketsTotal, txPrecorrSigQualExcIdx=txPrecorrSigQualExcIdx, txPrecorrLinStateExcIdx=txPrecorrLinStateExcIdx, txObjsDualDrive=txObjsDualDrive, txInpIfLogPacketLength=txInpIfLogPacketLength, txTransCmdReset=txTransCmdReset, txTransStSecondaryModMode=txTransStSecondaryModMode, txSfnNotificationPriority=txSfnNotificationPriority, txExciterAutomaticReady=txExciterAutomaticReady, txActiveReserveExcAutoSwitchedOver=txActiveReserveExcAutoSwitchedOver, txPrecorrLinStateSignalLevel=txPrecorrLinStateSignalLevel, txObjsTransmitter=txObjsTransmitter, txAmplifierPhxEntry=txAmplifierPhxEntry, txSatFeedInputServiceEncrypted=txSatFeedInputServiceEncrypted, txInputInterfaces=txInputInterfaces, txSwiCoHwWarn=txSwiCoHwWarn, txSatCamScManufacturerName=txSatCamScManufacturerName, txRfLimitForwardWarn=txRfLimitForwardWarn, txExciterAutomaticSummary=txExciterAutomaticSummary, txSatTunerLinkMargin=txSatTunerLinkMargin, txSwiCoSummary=txSwiCoSummary, txSatFeedDecryptionServiceID=txSatFeedDecryptionServiceID, txPrecorrCfrInbandNoise=txPrecorrCfrInbandNoise, txExciterNotificationMask=txExciterNotificationMask, txAmpNotificationIdx=txAmpNotificationIdx, PrecorrectionOperationMode=PrecorrectionOperationMode, PrecorrectionSignalLevel=PrecorrectionSignalLevel, txPrecorrLinSetupTable=txPrecorrLinSetupTable, txFrqRegNotificationPriority=txFrqRegNotificationPriority, txInpAutoConfigurationTable=txInpAutoConfigurationTable, txPrecorrLinStateAmplitudeRipple=txPrecorrLinStateAmplitudeRipple, txSatTunerMeasuredTsDatarate=txSatTunerMeasuredTsDatarate, txPmxDohertyActive=txPmxDohertyActive, txSfnStateDynamicDelay=txSfnStateDynamicDelay, txAmpReflection=txAmpReflection, txInputSatFeedExtrasTable=txInputSatFeedExtrasTable, txNotifySignalQuality=txNotifySignalQuality, txSwiCoNotificationIdx=txSwiCoNotificationIdx, txPrecorrSigQualMerWarnLimit=txPrecorrSigQualMerWarnLimit, txInpGeneralSetupEntry=txInpGeneralSetupEntry, txSwiCoNotificationState=txSwiCoNotificationState, txFrqRegNotificationMask=txFrqRegNotificationMask, txSatBtsDecompEnable=txSatBtsDecompEnable, txSatLnbVoltage=txSatLnbVoltage, txSatFeedInputServiceElementaryStreams=txSatFeedInputServiceElementaryStreams, txPrecorrLinStateTable=txPrecorrLinStateTable, txObjsPrecorrectionObsoleted=txObjsPrecorrectionObsoleted, txTransmitterNotificationTxIdx=txTransmitterNotificationTxIdx, txAmplifierStateTable=txAmplifierStateTable, txIpFeedPacketsReordered=txIpFeedPacketsReordered, txSatFeedInputServiceDecryption=txSatFeedInputServiceDecryption, txExciterAutomaticMode=txExciterAutomaticMode, txInputSatFeedExtrasEntry=txInputSatFeedExtrasEntry, txSatFeedInputServiceDecryptedAt=txSatFeedInputServiceDecryptedAt, txSatPlScrambling=txSatPlScrambling, txPresetCmdSavePreset3=txPresetCmdSavePreset3, txExcAutoOperationMode=txExcAutoOperationMode, txSfnSummary=txSfnSummary, txSatTunerTransponderFreq=txSatTunerTransponderFreq, txTsFeedBruttoDataRate=txTsFeedBruttoDataRate, txTransCmdOperationMode=txTransCmdOperationMode, txPmxOutletAirTemperature=txPmxOutletAirTemperature, txArExcPreselected=txArExcPreselected, txPrecorrNotificationTxIdx=txPrecorrNotificationTxIdx, txOstNotificationTxIdx=txOstNotificationTxIdx, txTsFeedType=txTsFeedType, txIpFeedPacketsOutOfRange=txIpFeedPacketsOutOfRange, txSatLnbFreqHighBandUpper32=txSatLnbFreqHighBandUpper32, txPhr901PwrA=txPhr901PwrA, txSwiCoStPosGraded=txSwiCoStPosGraded, txSatLnbFreqLowBandLower32=txSatLnbFreqLowBandLower32, txArExcSelected=txArExcSelected, txInpMonitorEntry=txInpMonitorEntry, txAmpAbsorberFail=txAmpAbsorberFail, txActiveReserveExcAutoSummary=txActiveReserveExcAutoSummary, txSfnNotificationEntry=txSfnNotificationEntry, txTransCmdWarnOnDohertyMismatch=txTransCmdWarnOnDohertyMismatch, txIpFeedPacketsMissing=txIpFeedPacketsMissing, txObjsOutputStage=txObjsOutputStage, txOstCommandsTable=txOstCommandsTable, txSatBtsNullPacketLcPid=txSatBtsNullPacketLcPid, txSwiCoCommandsEntry=txSwiCoCommandsEntry, txPhr901I78=txPhr901I78, txObjsInputSatFeed=txObjsInputSatFeed, txSwiCoNotificationPriority=txSwiCoNotificationPriority, txArPreselectOstAOstBtoAnt=txArPreselectOstAOstBtoAnt, txFrqRegSetupMuteOnFail=txFrqRegSetupMuteOnFail, txPrecorrNonLinSetupEntry=txPrecorrNonLinSetupEntry, txSwiCoCmdManualPosition=txSwiCoCmdManualPosition, txSatBtsRegionalization=txSatBtsRegionalization, txInpIfNotificationPriority=txInpIfNotificationPriority, txTransmitterNotificationIdx=txTransmitterNotificationIdx, txInpIfIpInfoPacket=txInpIfIpInfoPacket, txNotifyOutputStage=txNotifyOutputStage, txInpAutoForceExciterChangeover=txInpAutoForceExciterChangeover, txInpAutoDetectLostPackets=txInpAutoDetectLostPackets, txPmxFanFail=txPmxFanFail, txInpIfNotificationState=txInpIfNotificationState, txSatIpOutLocalIpAddr=txSatIpOutLocalIpAddr, txOstNotificationIdx=txOstNotificationIdx, txPrecorrLinStateTxIdx=txPrecorrLinStateTxIdx, txTsFeedPacketLength=txTsFeedPacketLength, txAmplifierPhr901Table=txAmplifierPhr901Table, txNotifyNonLinPrecorrection=txNotifyNonLinPrecorrection, txIpFeedStreamAddress=txIpFeedStreamAddress, txIpFeedStreamAddressType=txIpFeedStreamAddressType, txInpIfNotificationIdx=txInpIfNotificationIdx, txSwiCoNotificationTable=txSwiCoNotificationTable, txPresetStProgramSettings=txPresetStProgramSettings, txPrecorrNonLinSetupShoulderDistance=txPrecorrNonLinSetupShoulderDistance, txOstNotificationPriority=txOstNotificationPriority, txSatBtsPliTablePid=txSatBtsPliTablePid, txFrqRegSetupControllerMode=txFrqRegSetupControllerMode, txPrecorrNotificationEntry=txPrecorrNotificationEntry, txSatPlsActive=txSatPlsActive, txSatTunerCarrierNoiseFaultLimit=txSatTunerCarrierNoiseFaultLimit, txSwiCoStateEntry=txSwiCoStateEntry, txTransmitterNotificationMask=txTransmitterNotificationMask, txPrecorrSigQualTxIdx=txPrecorrSigQualTxIdx, txObjsOutputStageNonTlx=txObjsOutputStageNonTlx, txOstStateRfOnHours=txOstStateRfOnHours, txPmxInletAirTemperature=txPmxInletAirTemperature, txAmpBlocking=txAmpBlocking, txExciterRfState=txExciterRfState, txExcAutoRfSwitchPosition=txExcAutoRfSwitchPosition, txExcAutoPreselectExcB=txExcAutoPreselectExcB, txInpMonitorOut=txInpMonitorOut, txOstNotificationEntry=txOstNotificationEntry, PYSNMP_MODULE_ID=rsXx9TxMibModule, txInpIfLogDatarateBufferOverflow=txInpIfLogDatarateBufferOverflow, txInpAutoInputFailDelay=txInpAutoInputFailDelay, txFrqRegSetupManualOcxoAdjust=txFrqRegSetupManualOcxoAdjust, txSwiCoNotificationSwiCoIdx=txSwiCoNotificationSwiCoIdx, txInpAutoNotificationPriority=txInpAutoNotificationPriority, txInpAutoNotificationExcIdx=txInpAutoNotificationExcIdx, txPrecorrectionLinear=txPrecorrectionLinear, txPrecorrLinStateEntry=txPrecorrLinStateEntry, txRfLimitReflectedWarn=txRfLimitReflectedWarn, txPrecorrLinSetupEntry=txPrecorrLinSetupEntry, txRF=txRF)
mibBuilder.exportSymbols("RS-XX9-TX-MIB", txRfLimitReflectedVswrWarn=txRfLimitReflectedVswrWarn, txInpAutoDirection=txInpAutoDirection, txInputSatFeedInputServiceTable=txInputSatFeedInputServiceTable, txRfSensorCalibrated=txRfSensorCalibrated, txSatCodeLoop=txSatCodeLoop, txSatCamModuleName=txSatCamModuleName, txAmpStV12Mon=txAmpStV12Mon, txInpAutoGuardTimeToReserve=txInpAutoGuardTimeToReserve, txArExcAutomaticGuardTime=txArExcAutomaticGuardTime, txInputSatFeedCamEntry=txInputSatFeedCamEntry, txNotifyAmplifier=txNotifyAmplifier, txSatCamResetMode=txSatCamResetMode, txFrqRegSetupTable=txFrqRegSetupTable, txActiveReserveExcAutoOn=txActiveReserveExcAutoOn, txOstStateTable=txOstStateTable, txObjsPrecorrection=txObjsPrecorrection, txSatTunerTransponderFreqLower32=txSatTunerTransponderFreqLower32, txPrecorrNonLinStateExcIdx=txPrecorrNonLinStateExcIdx, txPmxFreqID=txPmxFreqID, txInpIfSatDriftStatus=txInpIfSatDriftStatus, txAmpStPwrB=txAmpStPwrB, txSummary=txSummary, txActiveReserveOstEntry=txActiveReserveOstEntry, txObjsPHx902=txObjsPHx902, txSatCamBissInjectedId=txSatCamBissInjectedId, txExciterLoop=txExciterLoop, txTransmitterNotificationState=txTransmitterNotificationState, txAmpNotificationOstIdx=txAmpNotificationOstIdx, txRfSensorsNotificationPriority=txRfSensorsNotificationPriority, txPhr901PwrIn=txPhr901PwrIn, txInputSatFeedLnbTable=txInputSatFeedLnbTable, txSfnNotificationTable=txSfnNotificationTable, rsXx9TxConformance=rsXx9TxConformance, txInpIfSatStreamTsIdMatch=txInpIfSatStreamTsIdMatch, txSatIpOutPort=txSatIpOutPort, txTransStForwardPower=txTransStForwardPower, txExgineMode=txExgineMode, txSfnSetupSFN=txSfnSetupSFN, txObjsInputSatFeedObsoleted=txObjsInputSatFeedObsoleted, txSatTunerIntermediateFreq=txSatTunerIntermediateFreq, txExciterOutputConnect=txExciterOutputConnect, txInpAutoNotificationTxIdx=txInpAutoNotificationTxIdx, txObjsPHxObsoleted=txObjsPHxObsoleted, txSfnStateDispatchTime=txSfnStateDispatchTime, txRfSensorsNotificationSensorIdx=txRfSensorsNotificationSensorIdx, txExciterSummary=txExciterSummary, txObjsPaTlx=txObjsPaTlx, txExciterMute=txExciterMute, txPhr901I34=txPhr901I34, txObjsPHU901=txObjsPHU901, txTsFeedNettoDataRate=txTsFeedNettoDataRate, txFrequencyRegulation=txFrequencyRegulation, txSatIpOutLocalNetmask=txSatIpOutLocalNetmask, txOutputStage=txOutputStage, txObjsActiveReserve=txObjsActiveReserve, txSatTunerSignalType=txSatTunerSignalType, txPmxFreqIDString=txPmxFreqIDString, txObjsAmplifier=txObjsAmplifier, txAmpInitFail=txAmpInitFail, txInputExgineStateTable=txInputExgineStateTable, txInpAutoGuardTimeBack=txInpAutoGuardTimeBack, txSatTunerCoderate=txSatTunerCoderate, txSwiCoNotificationEntry=txSwiCoNotificationEntry, txPrecorrSigQualMer=txPrecorrSigQualMer, txPrecorrLinSummary=txPrecorrLinSummary, txSatCamInserted=txSatCamInserted, txInpIfNotificationMask=txInpIfNotificationMask, txPrecorrNotificationMask=txPrecorrNotificationMask, txInputTsFeedEntry=txInputTsFeedEntry, txPrecorrNonLinStateSignalLevel=txPrecorrNonLinStateSignalLevel, txSatLnbBand=txSatLnbBand, txAmpStIDrv=txAmpStIDrv, txRfUncalibrate=txRfUncalibrate, txRfLimitForwardPercentWarnLower=txRfLimitForwardPercentWarnLower, txAmpTlxSupplyFail=txAmpTlxSupplyFail, txBand2Compliance=txBand2Compliance, txActiveReserveOstAutoOn=txActiveReserveOstAutoOn, txRfSensorsNotificationIdx=txRfSensorsNotificationIdx, txInputExgineStateEntry=txInputExgineStateEntry, txInpIfSatLinkMarginStatus=txInpIfSatLinkMarginStatus, txAmpTlxV12Mon=txAmpTlxV12Mon, txActiveReserveOstTable=txActiveReserveOstTable, txRfLimitForwardAddUpperWarn=txRfLimitForwardAddUpperWarn, txRfLimitForwardPercentFailLower=txRfLimitForwardPercentFailLower, txObjsExciter=txObjsExciter, txExcAutoGuardTime=txExcAutoGuardTime, txInpAutoOperationMode=txInpAutoOperationMode, txInpAutoPreferredInput=txInpAutoPreferredInput, txSatGeneralAsiOutput=txSatGeneralAsiOutput, txIpFeedPacketsFixed=txIpFeedPacketsFixed, txSwiCoHwLocal=txSwiCoHwLocal, txIpFeedStreamProtocol=txIpFeedStreamProtocol, txSfnNotificationMask=txSfnNotificationMask, txArOstPreselected=txArOstPreselected, txInpIfNotificationInputIdx=txInpIfNotificationInputIdx, txSatLnbFreqLowBand=txSatLnbFreqLowBand, txFrqRegNotificationExcIdx=txFrqRegNotificationExcIdx, txGPS=txGPS, ControllerMode=ControllerMode, txAmpNotificationTxIdx=txAmpNotificationTxIdx, txSatCamStatus=txSatCamStatus, txInpIfSatTransponderLocked=txInpIfSatTransponderLocked, txRfLimitForwardFail=txRfLimitForwardFail, txOstNotificationMask=txOstNotificationMask, txAmpStVAuxIn=txAmpStVAuxIn, txIpFeedStreamingMode=txIpFeedStreamingMode, txTransCmdPrgOnAfterSumFault=txTransCmdPrgOnAfterSumFault, txExciterNotificationExcIdx=txExciterNotificationExcIdx, txRfIdentify=txRfIdentify, txSFN=txSFN, txAmpAcFail=txAmpAcFail, txExcAutoPreselected=txExcAutoPreselected, txSatLnbPolarization=txSatLnbPolarization, txArOstAutomaticMode=txArOstAutomaticMode, txInputSatFeedDecryptionServiceEntry=txInputSatFeedDecryptionServiceEntry, txRfSensors=txRfSensors, txAmpDcFail=txAmpDcFail, txNotifyPrecorrection=txNotifyPrecorrection, txArPreselectOstAtoAntOstBtoDl=txArPreselectOstAtoAntOstBtoDl, txPrecorrectionNonLinear=txPrecorrectionNonLinear, txSatPlsSelect=txSatPlsSelect, txSatTunerTsSymbolRate=txSatTunerTsSymbolRate, txSatCamConfigurationMode=txSatCamConfigurationMode, txSatFeedInputServiceID=txSatFeedInputServiceID, txPhr901PwrDrv=txPhr901PwrDrv, txSatStreamExpectedTsId=txSatStreamExpectedTsId, txBasicCompliance=txBasicCompliance, txAmpStI3B=txAmpStI3B, txAmpNotificationMask=txAmpNotificationMask, txObjsFrequencyRegulation=txObjsFrequencyRegulation, txInputSatFeedTunerTable=txInputSatFeedTunerTable, txSfnSetupEntry=txSfnSetupEntry, txObjsAmplifierObsoleted=txObjsAmplifierObsoleted, txObjsPHR901=txObjsPHR901, txArPreselectOstAtoDlOstBtoAnt=txArPreselectOstAtoDlOstBtoAnt, txSatLnbDrift=txSatLnbDrift, txRfSensorsTable=txRfSensorsTable, txActiveReserveOstAutoReady=txActiveReserveOstAutoReady, txFrqRegSetupSource=txFrqRegSetupSource, txAmpTemperatureFail=txAmpTemperatureFail, txNotifySFN=txNotifySFN, txSatIpOutMulticastAddr=txSatIpOutMulticastAddr, txInpIfLogDatarateBufferUnderrun=txInpIfLogDatarateBufferUnderrun, txInputSatFeedIpOutputEntry=txInputSatFeedIpOutputEntry, txInpAuto1Active=txInpAuto1Active, txExgineSupply1Status=txExgineSupply1Status, txExciterNotificationEntry=txExciterNotificationEntry, txSatPlsCode=txSatPlsCode, txSatCamTsOutput=txSatCamTsOutput, txNotifyExciterAutomatic=txNotifyExciterAutomatic, txExgineSupply2Status=txExgineSupply2Status, txArOstSelected=txArOstSelected, txPrecorrLinSetupOpMode=txPrecorrLinSetupOpMode, txPrecorrLinSetupReset=txPrecorrLinSetupReset, txInputSatFeedCamTable=txInputSatFeedCamTable, txSatLnbFreqHighBandLower32=txSatLnbFreqHighBandLower32, txInpGsMultiplexName=txInpGsMultiplexName, txRfSensorSummary=txRfSensorSummary, txInpIfIpPacketLength=txInpIfIpPacketLength, txOstCommandsEntry=txOstCommandsEntry, txFrqRegNotificationTable=txFrqRegNotificationTable, txPrecorrSigQualEntry=txPrecorrSigQualEntry, txPresetCmdSavePreset4=txPresetCmdSavePreset4, txPrecorrNonLinSetupReset=txPrecorrNonLinSetupReset, txSatLnbFreqCBand=txSatLnbFreqCBand, txRfLimitForwardPercentWarnUpper=txRfLimitForwardPercentWarnUpper, txFrqRegSetupEntry=txFrqRegSetupEntry, txTransStPaEfficiency=txTransStPaEfficiency, txInpIfNotificationExcIdx=txInpIfNotificationExcIdx, txExcCmdOperationMode=txExcCmdOperationMode, txInpMonitorTable=txInpMonitorTable, txAmpStI2B=txAmpStI2B, txInpIfSatInputState=txInpIfSatInputState, txTransmitterNotificationPriority=txTransmitterNotificationPriority, txSatFeedInputServicePmtPid=txSatFeedInputServicePmtPid, txObjsNonFM=txObjsNonFM, txInputIpFeedEntry=txInputIpFeedEntry, txAmpNotificationPriority=txAmpNotificationPriority, txAmpStVPlusMon=txAmpStVPlusMon, txPrecorrLinSetupGroupDelayRippleLimit=txPrecorrLinSetupGroupDelayRippleLimit, txInputSatFeedLnbEntry=txInputSatFeedLnbEntry, txObjsDigitalHighPower=txObjsDigitalHighPower, txSatTunerBitErrorRate=txSatTunerBitErrorRate, txOstSummary=txOstSummary, txSwiCoStPosPermil=txSwiCoStPosPermil, txSwiCoCmdActivationThreshold=txSwiCoCmdActivationThreshold, txNotifyPaTLx=txNotifyPaTLx, txSatLnbFreqHighBand=txSatLnbFreqHighBand, txInputSatFeedBtsTable=txInputSatFeedBtsTable, txSatIpOutFecCol=txSatIpOutFecCol, txInpIfLogInfoPacket=txInpIfLogInfoPacket, txFrqRegSetupMonitor=txFrqRegSetupMonitor, txAmplifierPhxTable=txAmplifierPhxTable, txSatIpOutLocalIpAddrType=txSatIpOutLocalIpAddrType, txTransmitterCommandsTable=txTransmitterCommandsTable, txPresetCmdLoadPreset2=txPresetCmdLoadPreset2, txInpIfSatPacketLength=txInpIfSatPacketLength, txSatFeedServiceIdx=txSatFeedServiceIdx, txPresetCmdSavePreset2=txPresetCmdSavePreset2, txSatBtsNullPacketLbPid=txSatBtsNullPacketLbPid, txRfCmdForwardFailTimeout=txRfCmdForwardFailTimeout, txAmpStVReg=txAmpStVReg, txInpIfTsState=txInpIfTsState, txFrqRegSummary=txFrqRegSummary, txActiveReserveExcAutoReady=txActiveReserveExcAutoReady, txInpAutoSeamlessPossible=txInpAutoSeamlessPossible, txFrqRegNotificationIdx=txFrqRegNotificationIdx, txAmplifierPmxEntry=txAmplifierPmxEntry, txExcCmdModulationMode=txExcCmdModulationMode, txAmpNotificationEntry=txAmpNotificationEntry, txSwiCoRfProbeFail=txSwiCoRfProbeFail, txSatIpOutMulticastAddrType=txSatIpOutMulticastAddrType, txPrecorrCfrEnable=txPrecorrCfrEnable, txInpIfTsInfoPacket=txInpIfTsInfoPacket, txTransStPrimaryModMode=txTransStPrimaryModMode, txSfnNotificationTxIdx=txSfnNotificationTxIdx, txPrecorrNonLinStateEntry=txPrecorrNonLinStateEntry, txOstNotificationName=txOstNotificationName, txIpFeedConnector=txIpFeedConnector, txTransmitterNotificationEntry=txTransmitterNotificationEntry, txSfnNotificationIdx=txSfnNotificationIdx, txExciterNotificationIdx=txExciterNotificationIdx, txObjsInputAutomatic=txObjsInputAutomatic, txAmpRegulationFail=txAmpRegulationFail, txObjsDvbt2=txObjsDvbt2, txInputTsFeedTable=txInputTsFeedTable, txSatIpOutLocalNetmaskAddrType=txSatIpOutLocalNetmaskAddrType, txNotifyActiveReserve=txNotifyActiveReserve, txSatPlsCode2=txSatPlsCode2, txPrecorrNonLinStateShoulderRight=txPrecorrNonLinStateShoulderRight, txPresetCmdTxIdx=txPresetCmdTxIdx, txPrecorrLinStateGroupDelayRipple=txPrecorrLinStateGroupDelayRipple, txTransCmdReflectionCheck=txTransCmdReflectionCheck, txInpIfNotificationTxIdx=txInpIfNotificationTxIdx, txAmpStI1B=txAmpStI1B, txSfnSetupSource=txSfnSetupSource, txPhr901I56=txPhr901I56, txSatTunerTransponderFreqUpper32=txSatTunerTransponderFreqUpper32, txInpAutoActiveInput=txInpAutoActiveInput, txTransCmdReserveOpMode=txTransCmdReserveOpMode, txIpFeedPacketsDuplicate=txIpFeedPacketsDuplicate, txOstNotificationTable=txOstNotificationTable, txPrecorrLinSetupAmplitudeRippleLimit=txPrecorrLinSetupAmplitudeRippleLimit, txAmpStPwrA=txAmpStPwrA, txInpGsInputSource=txInpGsInputSource, txSwiCoNotificationTxIdx=txSwiCoNotificationTxIdx, txSatTunerCarrierNoiseRatio=txSatTunerCarrierNoiseRatio, txPrecorrCfrLevel=txPrecorrCfrLevel, rsXx9TxMibModule=rsXx9TxMibModule, txInpAutoTransparentTs=txInpAutoTransparentTs, txRfStForward=txRfStForward, txSatCamReset=txSatCamReset, txObjsSFN=txObjsSFN, txExciterAutomaticSwitchedOver=txExciterAutomaticSwitchedOver)
mibBuilder.exportSymbols("RS-XX9-TX-MIB", txAmpMute=txAmpMute, txObjsLinPrecorrection=txObjsLinPrecorrection, rsXx9TxObjects=rsXx9TxObjects, txPresetCmdLoadPreset4=txPresetCmdLoadPreset4, txArOstAutomaticGuardTime=txArOstAutomaticGuardTime, rsXx9TxNotifications=rsXx9TxNotifications, txInpAutoNotificationTable=txInpAutoNotificationTable, txInputAutomatic=txInputAutomatic, txRfSensorsEntry=txRfSensorsEntry, txExgineSyncInputStatus=txExgineSyncInputStatus, txInpIfSatCarrierNoiseStatus=txInpIfSatCarrierNoiseStatus, AutomaticMode=AutomaticMode, txPrecorrMerState=txPrecorrMerState, txSfnNotificationState=txSfnNotificationState, txExciterStateEntry=txExciterStateEntry, txPresetCmdLoadPreset3=txPresetCmdLoadPreset3, txRfSensorsNotificationMask=txRfSensorsNotificationMask, txObjsNonAnalog=txObjsNonAnalog, txPrecorrNonLinSummary=txPrecorrNonLinSummary, txSwiCoNotificationMask=txSwiCoNotificationMask, txObjsSFN1=txObjsSFN1, txSatCamTsInput=txSatCamTsInput, txSfnStateTransmissionInTime=txSfnStateTransmissionInTime, txSwiCoCmdAutomatic=txSwiCoCmdAutomatic, txSfnNotificationName=txSfnNotificationName, txSatCamScExpirationDate=txSatCamScExpirationDate, txSatTunerLinkMarginFaultLimit=txSatTunerLinkMarginFaultLimit, txObjsSwitchlessCombiner=txObjsSwitchlessCombiner, txExciterCommandsTable=txExciterCommandsTable, txPresetCmdSavePreset1=txPresetCmdSavePreset1, txRfStReflected=txRfStReflected, txAmpDriverFail=txAmpDriverFail, txInputSatFeedGeneralEntry=txInputSatFeedGeneralEntry, txSwiCoStCalibrationState=txSwiCoStCalibrationState, txExciterNotificationTable=txExciterNotificationTable, txPresetStatusEntry=txPresetStatusEntry, txAmpStTemperature=txAmpStTemperature, txObjsNonLinPrecorrection=txObjsNonLinPrecorrection, txArPreselectExcB=txArPreselectExcB, txObjsTransparentTs=txObjsTransparentTs, txSfnNotificationExcIdx=txSfnNotificationExcIdx, txTransmitterStateEntry=txTransmitterStateEntry, txPhr901ReflOutAv=txPhr901ReflOutAv, txPrecorrectionCfrTable=txPrecorrectionCfrTable, txOstStateEntry=txOstStateEntry, txAmpStIPre=txAmpStIPre, txSatMultiStreamStatus=txSatMultiStreamStatus, txNotifyInputAutomatic=txNotifyInputAutomatic, txExcCmdRfSlope=txExcCmdRfSlope, txInputSatFeedBtsEntry=txInputSatFeedBtsEntry, txFrqRegNotificationEntry=txFrqRegNotificationEntry, txTransmitterNotificationName=txTransmitterNotificationName, txSatTunerSignalStandard=txSatTunerSignalStandard, txObjsPMx=txObjsPMx, txPhr901PwrAbs=txPhr901PwrAbs, txAmpStV3V5=txAmpStV3V5, txSatLnb22kHzSignal=txSatLnb22kHzSignal, txPhr901PwrOutAv=txPhr901PwrOutAv, txSwitchlessCombiner=txSwitchlessCombiner, txSatBtsNullPacketLaPid=txSatBtsNullPacketLaPid, txNotifyExciter=txNotifyExciter, txObjsExciterAutomatic=txObjsExciterAutomatic, txSatCamBissMode=txSatCamBissMode, txInpAutoDelayInput1To2=txInpAutoDelayInput1To2, txOstNotificationOstIdx=txOstNotificationOstIdx, txInputSatFeedGeneralTable=txInputSatFeedGeneralTable, txInpAutoSeamlessOpMode=txInpAutoSeamlessOpMode, txExciterNotificationTxIdx=txExciterNotificationTxIdx, txExciterAutomaticOn=txExciterAutomaticOn, txPrecorrNonLinStateShoulderLeft=txPrecorrNonLinStateShoulderLeft, txInpGeneralSetupTable=txInpGeneralSetupTable, txPresets=txPresets, txPhxFreqID=txPhxFreqID, txPrecorrLinStateStatus=txPrecorrLinStateStatus, txAmplifierTlxTable=txAmplifierTlxTable, txTransStModulationMode=txTransStModulationMode, DohertyActive=DohertyActive, txSatLnbDriftWarnLimit=txSatLnbDriftWarnLimit, txObjsInputAutomaticObsoleted=txObjsInputAutomaticObsoleted, txInpAutoNotificationEntry=txInpAutoNotificationEntry, txObjsPMxObsoleted=txObjsPMxObsoleted, txFrqRegSetupRefFailPermissionTime=txFrqRegSetupRefFailPermissionTime, txInputIpFeedTable=txInputIpFeedTable, txExgineSyncInputSrc=txExgineSyncInputSrc, txSwiCoStRegulationState=txSwiCoStRegulationState, txAmpRfPowerFail=txAmpRfPowerFail, txTransmitterCommandsEntry=txTransmitterCommandsEntry, txPresetStActivePreset=txPresetStActivePreset, txFrqRegSourceExtRef=txFrqRegSourceExtRef, txReflection=txReflection, txAmpNotificationTable=txAmpNotificationTable, txTransmitterNotificationTable=txTransmitterNotificationTable, txPresetStatusTable=txPresetStatusTable, txExciterNotificationState=txExciterNotificationState, txRfLimitForwardAddUpperFail=txRfLimitForwardAddUpperFail, txArPreselectOstAOstBtoDl=txArPreselectOstAOstBtoDl, txPrecorrection=txPrecorrection, txAmpOn=txAmpOn, txExciterAutomaticRfSwitchSummary=txExciterAutomaticRfSwitchSummary, txObjsPMU901=txObjsPMU901, txAmpStPwrOut=txAmpStPwrOut, txNotifyRfSensors=txNotifyRfSensors, txSfnStateTotalDelay=txSfnStateTotalDelay, txSatPlsCode3=txSatPlsCode3, txObjsInputExgine=txObjsInputExgine, txExcCmdFrequency=txExcCmdFrequency, txPmxFrequencyFail=txPmxFrequencyFail, txPhr901PwrB=txPhr901PwrB, txPhxDohertyActive=txPhxDohertyActive, txPrecorrNotificationName=txPrecorrNotificationName, txAmpNotificationName=txAmpNotificationName, txPrecorrNonLinSetupSignalLimit=txPrecorrNonLinSetupSignalLimit, txSfnSetupTable=txSfnSetupTable, txObjsPMV901=txObjsPMV901, txTransmitter=txTransmitter, txAmpStI2A=txAmpStI2A, txSfnStateSFN=txSfnStateSFN, txSatTunerCarrierNoiseWarnLimit=txSatTunerCarrierNoiseWarnLimit, txNotifyInputTsFeed=txNotifyInputTsFeed, txPmxAirFilterFail=txPmxAirFilterFail, txRfLimitReflectedFail=txRfLimitReflectedFail, txAmpBiasFail=txAmpBiasFail, txExciterStateTable=txExciterStateTable, txIpFeedStreamPort=txIpFeedStreamPort, txPmxvRefPowerMax=txPmxvRefPowerMax, txNotifyInputSatFeed=txNotifyInputSatFeed, txObjsNonAtv=txObjsNonAtv, txObjsSignalQuality=txObjsSignalQuality, txPrecorrectionCfrEntry=txPrecorrectionCfrEntry, txSfnStateMaximumDelay=txSfnStateMaximumDelay, txSfnStateEntry=txSfnStateEntry, txPrecorrLinStateAmplitudeRippleLimit=txPrecorrLinStateAmplitudeRippleLimit, txFrqRegSourceIntGPS=txFrqRegSourceIntGPS, txObjsPMU905=txObjsPMU905, txSatCamScInserted=txSatCamScInserted, txRfSensorsNotificationTable=txRfSensorsNotificationTable, txSatCamManufacturerName=txSatCamManufacturerName, txRfStReflectedVswr=txRfStReflectedVswr, txInpAutoIfReseveFails=txInpAutoIfReseveFails, txExcStOperationOn=txExcStOperationOn, txFrqRegNotificationName=txFrqRegNotificationName, txRfSensorsNotificationEntry=txRfSensorsNotificationEntry, txSwiCoStateTable=txSwiCoStateTable, txInputSatFeed=txInputSatFeed, txSatTunerModulation=txSatTunerModulation, txOstCmdPower=txOstCmdPower, txObjsInputInterfaces=txObjsInputInterfaces, txInpAutoNotificationState=txInpAutoNotificationState, rsXx9TxCompliances=rsXx9TxCompliances, txSatFeedInputServiceName=txSatFeedInputServiceName, txRfCalibrate=txRfCalibrate, txSfnStateNetworkDelay=txSfnStateNetworkDelay, txObjsNonBand2=txObjsNonBand2, txPrecorrNotificationPriority=txPrecorrNotificationPriority, txArExcAutomaticOperationMode=txArExcAutomaticOperationMode, txAmplifierPhr901Entry=txAmplifierPhr901Entry, txSatStreamCurrentTsId=txSatStreamCurrentTsId, txInpIfLogState=txInpIfLogState, txInpIfTsPacketLength=txInpIfTsPacketLength, txFrqRegNotificationTxIdx=txFrqRegNotificationTxIdx, txExgineMute=txExgineMute, txInpAutoNotificationName=txInpAutoNotificationName, txFrqRegStateCurrentSource=txFrqRegStateCurrentSource, txInpAutoMuteOnInputFail=txInpAutoMuteOnInputFail, txInpIfSatInfoPacket=txInpIfSatInfoPacket, txObjsInputTsFeed=txObjsInputTsFeed, PrecorrectionState=PrecorrectionState, txSatIpOutMacAddr=txSatIpOutMacAddr, txExciter=txExciter, txInpAutoState=txInpAutoState, txAmpStI1A=txAmpStI1A, txLocal=txLocal, txAmpStI3A=txAmpStI3A, txNotifyLinPrecorrection=txNotifyLinPrecorrection, txFrqRegSourceExtPPS=txFrqRegSourceExtPPS, txAmpStReflOut=txAmpStReflOut, txRfSensorsNotificationTxIdx=txRfSensorsNotificationTxIdx, txSatFeedInputServiceType=txSatFeedInputServiceType, txExcAutoPreselectExcA=txExcAutoPreselectExcA, txExgineE2xInput=txExgineE2xInput, txExcCmdLoopControl=txExcCmdLoopControl, txExciterCommandsEntry=txExciterCommandsEntry, txPrecorrNotificationIdx=txPrecorrNotificationIdx, txSwiCoRegulationSummary=txSwiCoRegulationSummary, txInputSatFeedDecryptionServiceTable=txInputSatFeedDecryptionServiceTable, txNotifyAmplifierObsoleted=txNotifyAmplifierObsoleted, txArExcAutomaticMode=txArExcAutomaticMode, txNotifyFrequencyRegulation=txNotifyFrequencyRegulation, txPresetCommandsEntry=txPresetCommandsEntry, txInpIfNotificationName=txInpIfNotificationName, txNotifySwitchlessCombiner=txNotifySwitchlessCombiner, txExciterAutomaticEntry=txExciterAutomaticEntry, txInpAutoNotificationMask=txInpAutoNotificationMask, txSatTunerLinkMarginWarnLimit=txSatTunerLinkMarginWarnLimit)
