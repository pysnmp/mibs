#
# PySNMP MIB module DOCS-BPI2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/arris/DOCS-BPI2-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 09:57:16 2024
# On host fv-az1427-100 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
docsIfMib, = mibBuilder.importSymbols("DOCS-IF-MIB", "docsIfMib")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, iso, ModuleIdentity, TimeTicks, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, MibIdentifier, Counter64, Integer32, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "ModuleIdentity", "TimeTicks", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "MibIdentifier", "Counter64", "Integer32", "IpAddress", "NotificationType")
MacAddress, RowStatus, TextualConvention, DisplayString, DateAndTime, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TextualConvention", "DisplayString", "DateAndTime", "TruthValue")
docsBpi2MIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 127, 6))
docsBpi2MIB.setRevisions(('2001-04-17 00:00', '2000-11-17 19:30',))
if mibBuilder.loadTexts: docsBpi2MIB.setLastUpdated('200104170000Z')
if mibBuilder.loadTexts: docsBpi2MIB.setOrganization('IETF IPCDN Working Group')
class X509Certificate(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 1400)

docsBpi2MIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 1))
docsBpi2CmObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1))
docsBpi2CmBaseTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1), )
if mibBuilder.loadTexts: docsBpi2CmBaseTable.setStatus('current')
docsBpi2CmBaseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsBpi2CmBaseEntry.setStatus('current')
docsBpi2CmPrivacyEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmPrivacyEnable.setStatus('current')
docsBpi2CmPublicKey = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(74, 74), ValueSizeConstraint(106, 106), ValueSizeConstraint(140, 140), ValueSizeConstraint(204, 204), ValueSizeConstraint(270, 270), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmPublicKey.setStatus('current')
docsBpi2CmAuthState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("start", 1), ("authWait", 2), ("authorized", 3), ("reauthWait", 4), ("authRejectWait", 5), ("silent", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthState.setStatus('current')
docsBpi2CmAuthKeySequenceNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthKeySequenceNumber.setStatus('current')
docsBpi2CmAuthExpiresOld = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthExpiresOld.setStatus('current')
docsBpi2CmAuthExpiresNew = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthExpiresNew.setStatus('current')
docsBpi2CmAuthReset = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpi2CmAuthReset.setStatus('current')
docsBpi2CmAuthGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6047999))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthGraceTime.setStatus('current')
docsBpi2CmTEKGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 302399))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKGraceTime.setStatus('current')
docsBpi2CmAuthWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthWaitTimeout.setStatus('current')
docsBpi2CmReauthWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmReauthWaitTimeout.setStatus('current')
docsBpi2CmOpWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmOpWaitTimeout.setStatus('current')
docsBpi2CmRekeyWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmRekeyWaitTimeout.setStatus('current')
docsBpi2CmAuthRejectWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthRejectWaitTimeout.setStatus('current')
docsBpi2CmSAMapWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmSAMapWaitTimeout.setStatus('current')
docsBpi2CmSAMapMaxRetries = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmSAMapMaxRetries.setStatus('current')
docsBpi2CmAuthentInfos = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthentInfos.setStatus('current')
docsBpi2CmAuthRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthRequests.setStatus('current')
docsBpi2CmAuthReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthReplies.setStatus('current')
docsBpi2CmAuthRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthRejects.setStatus('current')
docsBpi2CmAuthInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthInvalids.setStatus('current')
docsBpi2CmAuthRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8, 11))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unauthorizedSaid", 4), ("permanentAuthorizationFailure", 8), ("timeOfDayNotAcquired", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthRejectErrorCode.setStatus('current')
docsBpi2CmAuthRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 23), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthRejectErrorString.setStatus('current')
docsBpi2CmAuthInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unsolicited", 5), ("invalidKeySequence", 6), ("keyRequestAuthenticationFailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthInvalidErrorCode.setStatus('current')
docsBpi2CmAuthInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 1, 1, 25), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmAuthInvalidErrorString.setStatus('current')
docsBpi2CmTEKTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2), )
if mibBuilder.loadTexts: docsBpi2CmTEKTable.setStatus('current')
docsBpi2CmTEKEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-BPI2-MIB", "docsBpi2CmTEKSAId"))
if mibBuilder.loadTexts: docsBpi2CmTEKEntry.setStatus('current')
docsBpi2CmTEKSAId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)))
if mibBuilder.loadTexts: docsBpi2CmTEKSAId.setStatus('current')
docsBpi2CmTEKSAType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("primary", 1), ("static", 2), ("dynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKSAType.setStatus('current')
docsBpi2CmTEKDataEncryptAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("des56CbcMode", 1), ("des40CbcMode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKDataEncryptAlg.setStatus('current')
docsBpi2CmTEKDataAuthentAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKDataAuthentAlg.setStatus('current')
docsBpi2CmTEKState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("start", 1), ("opWait", 2), ("opReauthWait", 3), ("operational", 4), ("rekeyWait", 5), ("rekeyReauthWait", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKState.setStatus('current')
docsBpi2CmTEKKeySequenceNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKKeySequenceNumber.setStatus('current')
docsBpi2CmTEKExpiresOld = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKExpiresOld.setStatus('current')
docsBpi2CmTEKExpiresNew = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKExpiresNew.setStatus('current')
docsBpi2CmTEKKeyRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKKeyRequests.setStatus('current')
docsBpi2CmTEKKeyReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKKeyReplies.setStatus('current')
docsBpi2CmTEKKeyRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKKeyRejects.setStatus('current')
docsBpi2CmTEKInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKInvalids.setStatus('current')
docsBpi2CmTEKAuthPends = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKAuthPends.setStatus('current')
docsBpi2CmTEKKeyRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedSaid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKKeyRejectErrorCode.setStatus('current')
docsBpi2CmTEKKeyRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKKeyRejectErrorString.setStatus('current')
docsBpi2CmTEKInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("invalidKeySequence", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKInvalidErrorCode.setStatus('current')
docsBpi2CmTEKInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 2, 1, 17), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmTEKInvalidErrorString.setStatus('current')
docsBpi2CmMulticastObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3))
docsBpi2CmIpMulticastMapTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1), )
if mibBuilder.loadTexts: docsBpi2CmIpMulticastMapTable.setStatus('current')
docsBpi2CmIpMulticastMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-BPI2-MIB", "docsBpi2CmIpMulticastIndex"))
if mibBuilder.loadTexts: docsBpi2CmIpMulticastMapEntry.setStatus('current')
docsBpi2CmIpMulticastIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: docsBpi2CmIpMulticastIndex.setStatus('current')
docsBpi2CmIpMulticastAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmIpMulticastAddressType.setStatus('current')
docsBpi2CmIpMulticastAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmIpMulticastAddress.setStatus('current')
docsBpi2CmIpMulticastSAId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmIpMulticastSAId.setStatus('current')
docsBpi2CmIpMulticastSAMapState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("mapWait", 2), ("mapped", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmIpMulticastSAMapState.setStatus('current')
docsBpi2CmIpMulticastSAMapRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmIpMulticastSAMapRequests.setStatus('current')
docsBpi2CmIpMulticastSAMapReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmIpMulticastSAMapReplies.setStatus('current')
docsBpi2CmIpMulticastSAMapRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmIpMulticastSAMapRejects.setStatus('current')
docsBpi2CmIpMulticastSAMapRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("noAuthForRequestedDSFlow", 9), ("dsFlowNotMappedToSA", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmIpMulticastSAMapRejectErrorCode.setStatus('current')
docsBpi2CmIpMulticastSAMapRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 3, 1, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmIpMulticastSAMapRejectErrorString.setStatus('current')
docsBpi2CmCertObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 4))
docsBpi2CmDeviceCertTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 4, 1), )
if mibBuilder.loadTexts: docsBpi2CmDeviceCertTable.setStatus('current')
docsBpi2CmDeviceCertEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsBpi2CmDeviceCertEntry.setStatus('current')
docsBpi2CmDeviceCmCert = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 4, 1, 1, 1), X509Certificate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpi2CmDeviceCmCert.setStatus('current')
docsBpi2CmDeviceManufCert = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 4, 1, 1, 2), X509Certificate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmDeviceManufCert.setStatus('current')
docsBpi2CmCryptoSuiteTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 5), )
if mibBuilder.loadTexts: docsBpi2CmCryptoSuiteTable.setStatus('current')
docsBpi2CmCryptoSuiteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-BPI2-MIB", "docsBpi2CmCryptoSuiteIndex"))
if mibBuilder.loadTexts: docsBpi2CmCryptoSuiteEntry.setStatus('current')
docsBpi2CmCryptoSuiteIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: docsBpi2CmCryptoSuiteIndex.setStatus('current')
docsBpi2CmCryptoSuiteDataEncryptAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("des56CbcMode", 1), ("des40CbcMode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmCryptoSuiteDataEncryptAlg.setStatus('current')
docsBpi2CmCryptoSuiteDataAuthentAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmCryptoSuiteDataAuthentAlg.setStatus('current')
docsBpi2CmtsObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2))
docsBpi2CmtsBaseTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1), )
if mibBuilder.loadTexts: docsBpi2CmtsBaseTable.setStatus('current')
docsBpi2CmtsBaseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsBpi2CmtsBaseEntry.setStatus('current')
docsBpi2CmtsDefaultAuthLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6048000))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpi2CmtsDefaultAuthLifetime.setStatus('current')
docsBpi2CmtsDefaultTEKLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpi2CmtsDefaultTEKLifetime.setStatus('current')
docsBpi2CmtsDefaultSelfSignedManufCertTrust = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trusted", 1), ("untrusted", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpi2CmtsDefaultSelfSignedManufCertTrust.setStatus('current')
docsBpi2CmtsCheckCertValidityPeriods = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpi2CmtsCheckCertValidityPeriods.setStatus('current')
docsBpi2CmtsAuthentInfos = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthentInfos.setStatus('current')
docsBpi2CmtsAuthRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthRequests.setStatus('current')
docsBpi2CmtsAuthReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthReplies.setStatus('current')
docsBpi2CmtsAuthRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthRejects.setStatus('current')
docsBpi2CmtsAuthInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthInvalids.setStatus('current')
docsBpi2CmtsSAMapRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsSAMapRequests.setStatus('current')
docsBpi2CmtsSAMapReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsSAMapReplies.setStatus('current')
docsBpi2CmtsSAMapRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsSAMapRejects.setStatus('current')
docsBpi2CmtsAuthTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2), )
if mibBuilder.loadTexts: docsBpi2CmtsAuthTable.setStatus('current')
docsBpi2CmtsAuthEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmMacAddress"))
if mibBuilder.loadTexts: docsBpi2CmtsAuthEntry.setStatus('current')
docsBpi2CmtsAuthCmMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmMacAddress.setStatus('current')
docsBpi2CmtsAuthCmBpiVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bpi", 0), ("bpiPlus", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmBpiVersion.setStatus('current')
docsBpi2CmtsAuthCmPublicKey = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(74, 74), ValueSizeConstraint(106, 106), ValueSizeConstraint(140, 140), ValueSizeConstraint(204, 204), ValueSizeConstraint(270, 270), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmPublicKey.setStatus('current')
docsBpi2CmtsAuthCmKeySequenceNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmKeySequenceNumber.setStatus('current')
docsBpi2CmtsAuthCmExpiresOld = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmExpiresOld.setStatus('current')
docsBpi2CmtsAuthCmExpiresNew = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmExpiresNew.setStatus('current')
docsBpi2CmtsAuthCmLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6048000))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmLifetime.setStatus('current')
docsBpi2CmtsAuthCmGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6047999))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmGraceTime.setStatus('obsolete')
docsBpi2CmtsAuthCmReset = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noResetRequested", 1), ("invalidateAuth", 2), ("sendAuthInvalid", 3), ("invalidateTeks", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmReset.setStatus('current')
docsBpi2CmtsAuthCmInfos = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmInfos.setStatus('current')
docsBpi2CmtsAuthCmRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmRequests.setStatus('current')
docsBpi2CmtsAuthCmReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmReplies.setStatus('current')
docsBpi2CmtsAuthCmRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmRejects.setStatus('current')
docsBpi2CmtsAuthCmInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthCmInvalids.setStatus('current')
docsBpi2CmtsAuthRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8, 11))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unauthorizedSaid", 4), ("permanentAuthorizationFailure", 8), ("timeOfDayNotAcquired", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthRejectErrorCode.setStatus('current')
docsBpi2CmtsAuthRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthRejectErrorString.setStatus('current')
docsBpi2CmtsAuthInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unsolicited", 5), ("invalidKeySequence", 6), ("keyRequestAuthenticationFailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthInvalidErrorCode.setStatus('current')
docsBpi2CmtsAuthInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 18), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthInvalidErrorString.setStatus('current')
docsBpi2CmtsAuthPrimarySAId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthPrimarySAId.setStatus('current')
docsBpi2CmtsAuthBpkmCmCertValid = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("validCmChained", 1), ("validCmTrusted", 2), ("invalidCmUntrusted", 3), ("invalidCAUntrusted", 4), ("invalidCmOther", 5), ("invalidCAOther", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthBpkmCmCertValid.setStatus('current')
docsBpi2CmtsAuthBpkmCmCert = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 2, 1, 21), X509Certificate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsAuthBpkmCmCert.setStatus('current')
docsBpi2CmtsTEKTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3), )
if mibBuilder.loadTexts: docsBpi2CmtsTEKTable.setStatus('current')
docsBpi2CmtsTEKEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-BPI2-MIB", "docsBpi2CmtsTEKSAId"))
if mibBuilder.loadTexts: docsBpi2CmtsTEKEntry.setStatus('current')
docsBpi2CmtsTEKSAId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)))
if mibBuilder.loadTexts: docsBpi2CmtsTEKSAId.setStatus('current')
docsBpi2CmtsTEKSAType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("primary", 1), ("static", 2), ("dynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsTEKSAType.setStatus('current')
docsBpi2CmtsTEKDataEncryptAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("des56CbcMode", 1), ("des40CbcMode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsTEKDataEncryptAlg.setStatus('current')
docsBpi2CmtsTEKDataAuthentAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsTEKDataAuthentAlg.setStatus('current')
docsBpi2CmtsTEKLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpi2CmtsTEKLifetime.setStatus('current')
docsBpi2CmtsTEKGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 302399))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsTEKGraceTime.setStatus('obsolete')
docsBpi2CmtsTEKKeySequenceNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsTEKKeySequenceNumber.setStatus('current')
docsBpi2CmtsTEKExpiresOld = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsTEKExpiresOld.setStatus('current')
docsBpi2CmtsTEKExpiresNew = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsTEKExpiresNew.setStatus('current')
docsBpi2CmtsTEKReset = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpi2CmtsTEKReset.setStatus('current')
docsBpi2CmtsKeyRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsKeyRequests.setStatus('current')
docsBpi2CmtsKeyReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsKeyReplies.setStatus('current')
docsBpi2CmtsKeyRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsKeyRejects.setStatus('current')
docsBpi2CmtsTEKInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsTEKInvalids.setStatus('current')
docsBpi2CmtsKeyRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedSaid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsKeyRejectErrorCode.setStatus('current')
docsBpi2CmtsKeyRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsKeyRejectErrorString.setStatus('current')
docsBpi2CmtsTEKInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("invalidKeySequence", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsTEKInvalidErrorCode.setStatus('current')
docsBpi2CmtsTEKInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 3, 1, 18), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsTEKInvalidErrorString.setStatus('current')
docsBpi2CmtsMulticastObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4))
docsBpi2CmtsIpMulticastMapTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1), )
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastMapTable.setStatus('current')
docsBpi2CmtsIpMulticastMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastIndex"))
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastMapEntry.setStatus('current')
docsBpi2CmtsIpMulticastIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)))
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastIndex.setStatus('current')
docsBpi2CmtsIpMulticastAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastAddressType.setStatus('current')
docsBpi2CmtsIpMulticastAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastAddress.setStatus('current')
docsBpi2CmtsIpMulticastMaskType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 4), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastMaskType.setStatus('current')
docsBpi2CmtsIpMulticastMask = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastMask.setStatus('current')
docsBpi2CmtsIpMulticastSAId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastSAId.setStatus('current')
docsBpi2CmtsIpMulticastSAType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("primary", 1), ("static", 2), ("dynamic", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastSAType.setStatus('current')
docsBpi2CmtsIpMulticastDataEncryptAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("des56CbcMode", 1), ("des40CbcMode", 2))).clone('des56CbcMode')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastDataEncryptAlg.setStatus('current')
docsBpi2CmtsIpMulticastDataAuthentAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastDataAuthentAlg.setStatus('current')
docsBpi2CmtsIpMulticastSAMapRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastSAMapRequests.setStatus('current')
docsBpi2CmtsIpMulticastSAMapReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastSAMapReplies.setStatus('current')
docsBpi2CmtsIpMulticastSAMapRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastSAMapRejects.setStatus('current')
docsBpi2CmtsIpMulticastSAMapRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("noAuthForRequestedDSFlow", 9), ("dsFlowNotMappedToSA", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastSAMapRejectErrorCode.setStatus('current')
docsBpi2CmtsIpMulticastSAMapRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastSAMapRejectErrorString.setStatus('current')
docsBpi2CmtsIpMulticastMapControl = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 1, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsIpMulticastMapControl.setStatus('current')
docsBpi2CmtsMulticastAuthTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 2), )
if mibBuilder.loadTexts: docsBpi2CmtsMulticastAuthTable.setStatus('current')
docsBpi2CmtsMulticastAuthEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-BPI2-MIB", "docsBpi2CmtsMulticastAuthSAId"), (0, "DOCS-BPI2-MIB", "docsBpi2CmtsMulticastAuthCmMacAddress"))
if mibBuilder.loadTexts: docsBpi2CmtsMulticastAuthEntry.setStatus('current')
docsBpi2CmtsMulticastAuthSAId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)))
if mibBuilder.loadTexts: docsBpi2CmtsMulticastAuthSAId.setStatus('current')
docsBpi2CmtsMulticastAuthCmMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: docsBpi2CmtsMulticastAuthCmMacAddress.setStatus('current')
docsBpi2CmtsMulticastAuthControl = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 4, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsMulticastAuthControl.setStatus('current')
docsBpi2CmtsCertObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5))
docsBpi2CmtsProvisionedCmCertTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 1), )
if mibBuilder.loadTexts: docsBpi2CmtsProvisionedCmCertTable.setStatus('current')
docsBpi2CmtsProvisionedCmCertEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 1, 1), ).setIndexNames((0, "DOCS-BPI2-MIB", "docsBpi2CmtsProvisionedCmCertMacAddress"))
if mibBuilder.loadTexts: docsBpi2CmtsProvisionedCmCertEntry.setStatus('current')
docsBpi2CmtsProvisionedCmCertMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: docsBpi2CmtsProvisionedCmCertMacAddress.setStatus('current')
docsBpi2CmtsProvisionedCmCertTrust = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trusted", 1), ("untrusted", 2))).clone('untrusted')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsProvisionedCmCertTrust.setStatus('current')
docsBpi2CmtsProvisionedCmCertSource = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("snmp", 1), ("configurationFile", 2), ("externalDatabase", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsProvisionedCmCertSource.setStatus('current')
docsBpi2CmtsProvisionedCmCertStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsProvisionedCmCertStatus.setStatus('current')
docsBpi2CmtsProvisionedCmCert = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 1, 1, 5), X509Certificate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsProvisionedCmCert.setStatus('current')
docsBpi2CmtsCACertTable = MibTable((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 2), )
if mibBuilder.loadTexts: docsBpi2CmtsCACertTable.setStatus('current')
docsBpi2CmtsCACertEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 2, 1), ).setIndexNames((0, "DOCS-BPI2-MIB", "docsBpi2CmtsCACertIndex"))
if mibBuilder.loadTexts: docsBpi2CmtsCACertEntry.setStatus('current')
docsBpi2CmtsCACertIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)))
if mibBuilder.loadTexts: docsBpi2CmtsCACertIndex.setStatus('current')
docsBpi2CmtsCACertSubject = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsCACertSubject.setStatus('current')
docsBpi2CmtsCACertIssuer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsCACertIssuer.setStatus('current')
docsBpi2CmtsCACertSerialNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsCACertSerialNumber.setStatus('current')
docsBpi2CmtsCACertTrust = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("trusted", 1), ("untrusted", 2), ("chained", 3), ("root", 4))).clone('chained')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsCACertTrust.setStatus('current')
docsBpi2CmtsCACertSource = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("snmp", 1), ("configurationFile", 2), ("externalDatabase", 3), ("other", 4), ("authentInfo", 5), ("compiledIntoCode", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsCACertSource.setStatus('current')
docsBpi2CmtsCACertStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsCACertStatus.setStatus('current')
docsBpi2CmtsCACert = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 2, 1, 8), X509Certificate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsBpi2CmtsCACert.setStatus('current')
docsBpi2CmtsCACertThumbprint = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 2, 5, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CmtsCACertThumbprint.setStatus('current')
docsBpi2CodeDownloadControl = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 4))
docsBpi2CodeDownloadStatusCode = MibScalar((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("configFileCvcVerified", 1), ("configFileCvcRejected", 2), ("snmpCvcVerified", 3), ("snmpCvcRejected", 4), ("codeFileVerified", 5), ("codeFileRejected", 6), ("other", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CodeDownloadStatusCode.setStatus('current')
docsBpi2CodeDownloadStatusString = MibScalar((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 4, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CodeDownloadStatusString.setStatus('current')
docsBpi2CodeMfgOrgName = MibScalar((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 4, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CodeMfgOrgName.setStatus('current')
docsBpi2CodeMfgCodeAccessStart = MibScalar((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 4, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CodeMfgCodeAccessStart.setStatus('current')
docsBpi2CodeMfgCvcAccessStart = MibScalar((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 4, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CodeMfgCvcAccessStart.setStatus('current')
docsBpi2CodeCoSignerOrgName = MibScalar((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 4, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CodeCoSignerOrgName.setStatus('current')
docsBpi2CodeCoSignerCodeAccessStart = MibScalar((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 4, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CodeCoSignerCodeAccessStart.setStatus('current')
docsBpi2CodeCoSignerCvcAccessStart = MibScalar((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 4, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsBpi2CodeCoSignerCvcAccessStart.setStatus('current')
docsBpi2CodeCvcUpdate = MibScalar((1, 3, 6, 1, 2, 1, 10, 127, 6, 1, 4, 9), X509Certificate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsBpi2CodeCvcUpdate.setStatus('current')
docsBpi2Notification = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 2))
docsBpi2Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 3))
docsBpi2Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 3, 1))
docsBpi2Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 127, 6, 3, 2))
docsBpi2BasicCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 127, 6, 3, 1, 1)).setObjects(("DOCS-BPI2-MIB", "docsBpi2CmGroup"), ("DOCS-BPI2-MIB", "docsBpi2CmtsGroup"), ("DOCS-BPI2-MIB", "docsBpi2CodeDownloadGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsBpi2BasicCompliance = docsBpi2BasicCompliance.setStatus('current')
docsBpi2CmGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 127, 6, 3, 2, 1)).setObjects(("DOCS-BPI2-MIB", "docsBpi2CmPrivacyEnable"), ("DOCS-BPI2-MIB", "docsBpi2CmPublicKey"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthState"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthKeySequenceNumber"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthExpiresOld"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthExpiresNew"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthReset"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthGraceTime"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKGraceTime"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthWaitTimeout"), ("DOCS-BPI2-MIB", "docsBpi2CmReauthWaitTimeout"), ("DOCS-BPI2-MIB", "docsBpi2CmOpWaitTimeout"), ("DOCS-BPI2-MIB", "docsBpi2CmRekeyWaitTimeout"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthRejectWaitTimeout"), ("DOCS-BPI2-MIB", "docsBpi2CmSAMapWaitTimeout"), ("DOCS-BPI2-MIB", "docsBpi2CmSAMapMaxRetries"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthentInfos"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthRequests"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthReplies"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthRejects"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthInvalids"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthRejectErrorCode"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthRejectErrorString"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthInvalidErrorCode"), ("DOCS-BPI2-MIB", "docsBpi2CmAuthInvalidErrorString"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKSAType"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKDataEncryptAlg"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKDataAuthentAlg"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKState"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKKeySequenceNumber"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKExpiresOld"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKExpiresNew"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKKeyRequests"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKKeyReplies"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKKeyRejects"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKInvalids"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKAuthPends"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKKeyRejectErrorCode"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKKeyRejectErrorString"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKInvalidErrorCode"), ("DOCS-BPI2-MIB", "docsBpi2CmTEKInvalidErrorString"), ("DOCS-BPI2-MIB", "docsBpi2CmIpMulticastAddressType"), ("DOCS-BPI2-MIB", "docsBpi2CmIpMulticastAddress"), ("DOCS-BPI2-MIB", "docsBpi2CmIpMulticastSAId"), ("DOCS-BPI2-MIB", "docsBpi2CmIpMulticastSAMapState"), ("DOCS-BPI2-MIB", "docsBpi2CmIpMulticastSAMapRequests"), ("DOCS-BPI2-MIB", "docsBpi2CmIpMulticastSAMapReplies"), ("DOCS-BPI2-MIB", "docsBpi2CmIpMulticastSAMapRejects"), ("DOCS-BPI2-MIB", "docsBpi2CmIpMulticastSAMapRejectErrorCode"), ("DOCS-BPI2-MIB", "docsBpi2CmIpMulticastSAMapRejectErrorString"), ("DOCS-BPI2-MIB", "docsBpi2CmDeviceCmCert"), ("DOCS-BPI2-MIB", "docsBpi2CmDeviceManufCert"), ("DOCS-BPI2-MIB", "docsBpi2CmCryptoSuiteDataEncryptAlg"), ("DOCS-BPI2-MIB", "docsBpi2CmCryptoSuiteDataAuthentAlg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsBpi2CmGroup = docsBpi2CmGroup.setStatus('current')
docsBpi2CmtsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 127, 6, 3, 2, 2)).setObjects(("DOCS-BPI2-MIB", "docsBpi2CmtsDefaultAuthLifetime"), ("DOCS-BPI2-MIB", "docsBpi2CmtsDefaultTEKLifetime"), ("DOCS-BPI2-MIB", "docsBpi2CmtsDefaultSelfSignedManufCertTrust"), ("DOCS-BPI2-MIB", "docsBpi2CmtsCheckCertValidityPeriods"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthentInfos"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthRequests"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthReplies"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthRejects"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthInvalids"), ("DOCS-BPI2-MIB", "docsBpi2CmtsSAMapRequests"), ("DOCS-BPI2-MIB", "docsBpi2CmtsSAMapReplies"), ("DOCS-BPI2-MIB", "docsBpi2CmtsSAMapRejects"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmBpiVersion"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmPublicKey"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmKeySequenceNumber"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmExpiresOld"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmExpiresNew"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmLifetime"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmReset"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmInfos"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmRequests"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmReplies"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmRejects"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmInvalids"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthRejectErrorCode"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthRejectErrorString"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthInvalidErrorCode"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthInvalidErrorString"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthPrimarySAId"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthBpkmCmCertValid"), ("DOCS-BPI2-MIB", "docsBpi2CmtsAuthBpkmCmCert"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKSAType"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKDataEncryptAlg"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKDataAuthentAlg"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKLifetime"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKKeySequenceNumber"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKExpiresOld"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKExpiresNew"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKReset"), ("DOCS-BPI2-MIB", "docsBpi2CmtsKeyRequests"), ("DOCS-BPI2-MIB", "docsBpi2CmtsKeyReplies"), ("DOCS-BPI2-MIB", "docsBpi2CmtsKeyRejects"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKInvalids"), ("DOCS-BPI2-MIB", "docsBpi2CmtsKeyRejectErrorCode"), ("DOCS-BPI2-MIB", "docsBpi2CmtsKeyRejectErrorString"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKInvalidErrorCode"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKInvalidErrorString"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastAddressType"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastAddress"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastMaskType"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastMask"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastSAId"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastSAType"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastDataEncryptAlg"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastDataAuthentAlg"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastSAMapRequests"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastSAMapReplies"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastSAMapRejects"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastSAMapRejectErrorCode"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastSAMapRejectErrorString"), ("DOCS-BPI2-MIB", "docsBpi2CmtsIpMulticastMapControl"), ("DOCS-BPI2-MIB", "docsBpi2CmtsMulticastAuthControl"), ("DOCS-BPI2-MIB", "docsBpi2CmtsProvisionedCmCertTrust"), ("DOCS-BPI2-MIB", "docsBpi2CmtsProvisionedCmCertSource"), ("DOCS-BPI2-MIB", "docsBpi2CmtsProvisionedCmCertStatus"), ("DOCS-BPI2-MIB", "docsBpi2CmtsProvisionedCmCert"), ("DOCS-BPI2-MIB", "docsBpi2CmtsCACertSubject"), ("DOCS-BPI2-MIB", "docsBpi2CmtsCACertIssuer"), ("DOCS-BPI2-MIB", "docsBpi2CmtsCACertSerialNumber"), ("DOCS-BPI2-MIB", "docsBpi2CmtsCACertTrust"), ("DOCS-BPI2-MIB", "docsBpi2CmtsCACertSource"), ("DOCS-BPI2-MIB", "docsBpi2CmtsCACertStatus"), ("DOCS-BPI2-MIB", "docsBpi2CmtsCACert"), ("DOCS-BPI2-MIB", "docsBpi2CmtsCACertThumbprint"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsBpi2CmtsGroup = docsBpi2CmtsGroup.setStatus('current')
docsBpi2CodeDownloadGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 127, 6, 3, 2, 3)).setObjects(("DOCS-BPI2-MIB", "docsBpi2CodeDownloadStatusCode"), ("DOCS-BPI2-MIB", "docsBpi2CodeDownloadStatusString"), ("DOCS-BPI2-MIB", "docsBpi2CodeMfgOrgName"), ("DOCS-BPI2-MIB", "docsBpi2CodeMfgCodeAccessStart"), ("DOCS-BPI2-MIB", "docsBpi2CodeMfgCvcAccessStart"), ("DOCS-BPI2-MIB", "docsBpi2CodeCoSignerOrgName"), ("DOCS-BPI2-MIB", "docsBpi2CodeCoSignerCodeAccessStart"), ("DOCS-BPI2-MIB", "docsBpi2CodeCoSignerCvcAccessStart"), ("DOCS-BPI2-MIB", "docsBpi2CodeCvcUpdate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsBpi2CodeDownloadGroup = docsBpi2CodeDownloadGroup.setStatus('current')
docsBpi2ObsoleteObjectsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 127, 6, 3, 2, 4)).setObjects(("DOCS-BPI2-MIB", "docsBpi2CmtsAuthCmGraceTime"), ("DOCS-BPI2-MIB", "docsBpi2CmtsTEKGraceTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsBpi2ObsoleteObjectsGroup = docsBpi2ObsoleteObjectsGroup.setStatus('obsolete')
mibBuilder.exportSymbols("DOCS-BPI2-MIB", docsBpi2CmtsCACertEntry=docsBpi2CmtsCACertEntry, docsBpi2CmGroup=docsBpi2CmGroup, docsBpi2CmTEKExpiresOld=docsBpi2CmTEKExpiresOld, docsBpi2ObsoleteObjectsGroup=docsBpi2ObsoleteObjectsGroup, docsBpi2CmtsIpMulticastMapEntry=docsBpi2CmtsIpMulticastMapEntry, docsBpi2CmDeviceCertTable=docsBpi2CmDeviceCertTable, docsBpi2Conformance=docsBpi2Conformance, docsBpi2CodeCoSignerCodeAccessStart=docsBpi2CodeCoSignerCodeAccessStart, docsBpi2CmtsAuthCmLifetime=docsBpi2CmtsAuthCmLifetime, docsBpi2CmtsProvisionedCmCertTable=docsBpi2CmtsProvisionedCmCertTable, docsBpi2CmtsAuthRejectErrorString=docsBpi2CmtsAuthRejectErrorString, docsBpi2CmtsTEKSAType=docsBpi2CmtsTEKSAType, docsBpi2CmtsIpMulticastMask=docsBpi2CmtsIpMulticastMask, docsBpi2CmIpMulticastMapTable=docsBpi2CmIpMulticastMapTable, docsBpi2CmtsAuthInvalids=docsBpi2CmtsAuthInvalids, docsBpi2CmtsKeyRejectErrorString=docsBpi2CmtsKeyRejectErrorString, docsBpi2CmAuthWaitTimeout=docsBpi2CmAuthWaitTimeout, docsBpi2CmtsGroup=docsBpi2CmtsGroup, docsBpi2CmtsKeyRejects=docsBpi2CmtsKeyRejects, docsBpi2CmTEKTable=docsBpi2CmTEKTable, docsBpi2CmtsObjects=docsBpi2CmtsObjects, docsBpi2CmIpMulticastAddress=docsBpi2CmIpMulticastAddress, docsBpi2CmtsAuthCmBpiVersion=docsBpi2CmtsAuthCmBpiVersion, docsBpi2CmtsProvisionedCmCertEntry=docsBpi2CmtsProvisionedCmCertEntry, docsBpi2CmtsCACertSource=docsBpi2CmtsCACertSource, docsBpi2CmAuthExpiresOld=docsBpi2CmAuthExpiresOld, docsBpi2CmOpWaitTimeout=docsBpi2CmOpWaitTimeout, docsBpi2CmtsProvisionedCmCertStatus=docsBpi2CmtsProvisionedCmCertStatus, docsBpi2CmtsTEKGraceTime=docsBpi2CmtsTEKGraceTime, docsBpi2CmtsIpMulticastAddressType=docsBpi2CmtsIpMulticastAddressType, docsBpi2CmtsBaseEntry=docsBpi2CmtsBaseEntry, docsBpi2CmtsDefaultTEKLifetime=docsBpi2CmtsDefaultTEKLifetime, docsBpi2CmAuthInvalids=docsBpi2CmAuthInvalids, docsBpi2Groups=docsBpi2Groups, docsBpi2CodeDownloadStatusString=docsBpi2CodeDownloadStatusString, docsBpi2CmtsAuthRejectErrorCode=docsBpi2CmtsAuthRejectErrorCode, docsBpi2CmIpMulticastSAMapRejects=docsBpi2CmIpMulticastSAMapRejects, docsBpi2CmtsProvisionedCmCertTrust=docsBpi2CmtsProvisionedCmCertTrust, docsBpi2CmtsMulticastAuthCmMacAddress=docsBpi2CmtsMulticastAuthCmMacAddress, docsBpi2CmBaseEntry=docsBpi2CmBaseEntry, docsBpi2CmTEKInvalidErrorString=docsBpi2CmTEKInvalidErrorString, docsBpi2CmtsKeyRejectErrorCode=docsBpi2CmtsKeyRejectErrorCode, docsBpi2CmtsMulticastAuthEntry=docsBpi2CmtsMulticastAuthEntry, docsBpi2CmTEKSAId=docsBpi2CmTEKSAId, docsBpi2CmTEKEntry=docsBpi2CmTEKEntry, docsBpi2CmtsAuthCmRequests=docsBpi2CmtsAuthCmRequests, docsBpi2CmtsAuthCmReplies=docsBpi2CmtsAuthCmReplies, docsBpi2CmMulticastObjects=docsBpi2CmMulticastObjects, docsBpi2CmtsAuthCmGraceTime=docsBpi2CmtsAuthCmGraceTime, docsBpi2CmIpMulticastIndex=docsBpi2CmIpMulticastIndex, docsBpi2CmtsAuthCmInfos=docsBpi2CmtsAuthCmInfos, docsBpi2CmtsIpMulticastMapControl=docsBpi2CmtsIpMulticastMapControl, docsBpi2CmCryptoSuiteDataAuthentAlg=docsBpi2CmCryptoSuiteDataAuthentAlg, docsBpi2CmtsProvisionedCmCertSource=docsBpi2CmtsProvisionedCmCertSource, docsBpi2CmtsTEKInvalidErrorCode=docsBpi2CmtsTEKInvalidErrorCode, docsBpi2CodeCoSignerOrgName=docsBpi2CodeCoSignerOrgName, docsBpi2CmtsCACertSubject=docsBpi2CmtsCACertSubject, docsBpi2CmtsTEKInvalidErrorString=docsBpi2CmtsTEKInvalidErrorString, docsBpi2CmTEKSAType=docsBpi2CmTEKSAType, docsBpi2Compliances=docsBpi2Compliances, docsBpi2CmtsAuthInvalidErrorCode=docsBpi2CmtsAuthInvalidErrorCode, docsBpi2CmAuthRejectErrorString=docsBpi2CmAuthRejectErrorString, docsBpi2CmtsAuthCmMacAddress=docsBpi2CmtsAuthCmMacAddress, docsBpi2CmtsMulticastObjects=docsBpi2CmtsMulticastObjects, docsBpi2CmtsIpMulticastDataEncryptAlg=docsBpi2CmtsIpMulticastDataEncryptAlg, docsBpi2CmCertObjects=docsBpi2CmCertObjects, docsBpi2CmtsIpMulticastSAMapReplies=docsBpi2CmtsIpMulticastSAMapReplies, docsBpi2CmTEKInvalidErrorCode=docsBpi2CmTEKInvalidErrorCode, docsBpi2CmReauthWaitTimeout=docsBpi2CmReauthWaitTimeout, docsBpi2CmPrivacyEnable=docsBpi2CmPrivacyEnable, docsBpi2CmtsAuthBpkmCmCertValid=docsBpi2CmtsAuthBpkmCmCertValid, docsBpi2CmtsIpMulticastIndex=docsBpi2CmtsIpMulticastIndex, docsBpi2CmtsTEKDataAuthentAlg=docsBpi2CmtsTEKDataAuthentAlg, docsBpi2CmtsTEKKeySequenceNumber=docsBpi2CmtsTEKKeySequenceNumber, docsBpi2Notification=docsBpi2Notification, docsBpi2CmtsSAMapReplies=docsBpi2CmtsSAMapReplies, docsBpi2BasicCompliance=docsBpi2BasicCompliance, docsBpi2CmObjects=docsBpi2CmObjects, docsBpi2CmtsCACertTrust=docsBpi2CmtsCACertTrust, docsBpi2CmAuthRejectErrorCode=docsBpi2CmAuthRejectErrorCode, docsBpi2CmtsCACert=docsBpi2CmtsCACert, docsBpi2CmtsAuthRejects=docsBpi2CmtsAuthRejects, docsBpi2CmtsSAMapRequests=docsBpi2CmtsSAMapRequests, docsBpi2CmtsTEKExpiresNew=docsBpi2CmtsTEKExpiresNew, docsBpi2CmRekeyWaitTimeout=docsBpi2CmRekeyWaitTimeout, docsBpi2CmTEKDataEncryptAlg=docsBpi2CmTEKDataEncryptAlg, docsBpi2CmtsAuthReplies=docsBpi2CmtsAuthReplies, docsBpi2CmtsCACertThumbprint=docsBpi2CmtsCACertThumbprint, docsBpi2CmtsProvisionedCmCertMacAddress=docsBpi2CmtsProvisionedCmCertMacAddress, docsBpi2CmIpMulticastAddressType=docsBpi2CmIpMulticastAddressType, docsBpi2CmIpMulticastSAMapRejectErrorCode=docsBpi2CmIpMulticastSAMapRejectErrorCode, docsBpi2CmDeviceCertEntry=docsBpi2CmDeviceCertEntry, docsBpi2CmPublicKey=docsBpi2CmPublicKey, docsBpi2CmBaseTable=docsBpi2CmBaseTable, docsBpi2CmTEKState=docsBpi2CmTEKState, docsBpi2CmCryptoSuiteTable=docsBpi2CmCryptoSuiteTable, docsBpi2CodeCvcUpdate=docsBpi2CodeCvcUpdate, docsBpi2CmTEKKeyRejects=docsBpi2CmTEKKeyRejects, docsBpi2CmTEKKeyRejectErrorString=docsBpi2CmTEKKeyRejectErrorString, docsBpi2CmtsTEKLifetime=docsBpi2CmtsTEKLifetime, docsBpi2CmIpMulticastSAMapRejectErrorString=docsBpi2CmIpMulticastSAMapRejectErrorString, docsBpi2CmAuthReplies=docsBpi2CmAuthReplies, docsBpi2CmtsAuthInvalidErrorString=docsBpi2CmtsAuthInvalidErrorString, docsBpi2CmIpMulticastSAMapState=docsBpi2CmIpMulticastSAMapState, docsBpi2CmTEKKeyRequests=docsBpi2CmTEKKeyRequests, docsBpi2CmtsAuthEntry=docsBpi2CmtsAuthEntry, docsBpi2CmSAMapMaxRetries=docsBpi2CmSAMapMaxRetries, docsBpi2CmAuthInvalidErrorString=docsBpi2CmAuthInvalidErrorString, docsBpi2CmtsAuthPrimarySAId=docsBpi2CmtsAuthPrimarySAId, docsBpi2CodeCoSignerCvcAccessStart=docsBpi2CodeCoSignerCvcAccessStart, docsBpi2CodeMfgCvcAccessStart=docsBpi2CodeMfgCvcAccessStart, docsBpi2CmAuthGraceTime=docsBpi2CmAuthGraceTime, docsBpi2CmtsMulticastAuthTable=docsBpi2CmtsMulticastAuthTable, PYSNMP_MODULE_ID=docsBpi2MIB, docsBpi2CmAuthRejectWaitTimeout=docsBpi2CmAuthRejectWaitTimeout, docsBpi2CmtsIpMulticastSAMapRejectErrorCode=docsBpi2CmtsIpMulticastSAMapRejectErrorCode, docsBpi2CmtsTEKInvalids=docsBpi2CmtsTEKInvalids, docsBpi2CmtsKeyRequests=docsBpi2CmtsKeyRequests, docsBpi2CmtsAuthTable=docsBpi2CmtsAuthTable, docsBpi2CmtsAuthRequests=docsBpi2CmtsAuthRequests, docsBpi2CmtsIpMulticastSAMapRejects=docsBpi2CmtsIpMulticastSAMapRejects, docsBpi2CmtsCertObjects=docsBpi2CmtsCertObjects, X509Certificate=X509Certificate, docsBpi2CmtsCACertIssuer=docsBpi2CmtsCACertIssuer, docsBpi2CmtsIpMulticastMapTable=docsBpi2CmtsIpMulticastMapTable, docsBpi2CmtsCACertIndex=docsBpi2CmtsCACertIndex, docsBpi2CmCryptoSuiteEntry=docsBpi2CmCryptoSuiteEntry, docsBpi2CmtsTEKTable=docsBpi2CmtsTEKTable, docsBpi2CodeDownloadStatusCode=docsBpi2CodeDownloadStatusCode, docsBpi2CmtsTEKEntry=docsBpi2CmtsTEKEntry, docsBpi2CmtsIpMulticastSAId=docsBpi2CmtsIpMulticastSAId, docsBpi2CodeMfgOrgName=docsBpi2CodeMfgOrgName, docsBpi2CmTEKAuthPends=docsBpi2CmTEKAuthPends, docsBpi2CmtsIpMulticastSAMapRejectErrorString=docsBpi2CmtsIpMulticastSAMapRejectErrorString, docsBpi2CodeDownloadControl=docsBpi2CodeDownloadControl, docsBpi2CmDeviceManufCert=docsBpi2CmDeviceManufCert, docsBpi2MIB=docsBpi2MIB, docsBpi2CmtsTEKSAId=docsBpi2CmtsTEKSAId, docsBpi2CmtsTEKDataEncryptAlg=docsBpi2CmtsTEKDataEncryptAlg, docsBpi2CodeDownloadGroup=docsBpi2CodeDownloadGroup, docsBpi2CmtsMulticastAuthSAId=docsBpi2CmtsMulticastAuthSAId, docsBpi2CmtsMulticastAuthControl=docsBpi2CmtsMulticastAuthControl, docsBpi2CmDeviceCmCert=docsBpi2CmDeviceCmCert, docsBpi2CmtsBaseTable=docsBpi2CmtsBaseTable, docsBpi2CmtsAuthCmPublicKey=docsBpi2CmtsAuthCmPublicKey, docsBpi2CmtsAuthCmExpiresOld=docsBpi2CmtsAuthCmExpiresOld, docsBpi2CmtsIpMulticastDataAuthentAlg=docsBpi2CmtsIpMulticastDataAuthentAlg, docsBpi2CmtsIpMulticastAddress=docsBpi2CmtsIpMulticastAddress, docsBpi2CmAuthExpiresNew=docsBpi2CmAuthExpiresNew, docsBpi2CmtsAuthCmRejects=docsBpi2CmtsAuthCmRejects, docsBpi2CmtsAuthCmKeySequenceNumber=docsBpi2CmtsAuthCmKeySequenceNumber, docsBpi2CmAuthKeySequenceNumber=docsBpi2CmAuthKeySequenceNumber, docsBpi2CmtsTEKExpiresOld=docsBpi2CmtsTEKExpiresOld, docsBpi2CmtsProvisionedCmCert=docsBpi2CmtsProvisionedCmCert, docsBpi2CmtsAuthentInfos=docsBpi2CmtsAuthentInfos, docsBpi2MIBObjects=docsBpi2MIBObjects, docsBpi2CmtsAuthBpkmCmCert=docsBpi2CmtsAuthBpkmCmCert, docsBpi2CmtsCACertStatus=docsBpi2CmtsCACertStatus, docsBpi2CmtsCheckCertValidityPeriods=docsBpi2CmtsCheckCertValidityPeriods, docsBpi2CmCryptoSuiteIndex=docsBpi2CmCryptoSuiteIndex, docsBpi2CmtsIpMulticastSAMapRequests=docsBpi2CmtsIpMulticastSAMapRequests, docsBpi2CmtsSAMapRejects=docsBpi2CmtsSAMapRejects, docsBpi2CodeMfgCodeAccessStart=docsBpi2CodeMfgCodeAccessStart, docsBpi2CmtsAuthCmReset=docsBpi2CmtsAuthCmReset, docsBpi2CmtsTEKReset=docsBpi2CmtsTEKReset, docsBpi2CmtsIpMulticastMaskType=docsBpi2CmtsIpMulticastMaskType, docsBpi2CmAuthState=docsBpi2CmAuthState, docsBpi2CmAuthentInfos=docsBpi2CmAuthentInfos, docsBpi2CmTEKKeyRejectErrorCode=docsBpi2CmTEKKeyRejectErrorCode, docsBpi2CmCryptoSuiteDataEncryptAlg=docsBpi2CmCryptoSuiteDataEncryptAlg, docsBpi2CmtsIpMulticastSAType=docsBpi2CmtsIpMulticastSAType, docsBpi2CmAuthRejects=docsBpi2CmAuthRejects, docsBpi2CmIpMulticastSAId=docsBpi2CmIpMulticastSAId, docsBpi2CmtsAuthCmExpiresNew=docsBpi2CmtsAuthCmExpiresNew, docsBpi2CmtsCACertTable=docsBpi2CmtsCACertTable, docsBpi2CmSAMapWaitTimeout=docsBpi2CmSAMapWaitTimeout, docsBpi2CmtsAuthCmInvalids=docsBpi2CmtsAuthCmInvalids, docsBpi2CmIpMulticastMapEntry=docsBpi2CmIpMulticastMapEntry, docsBpi2CmAuthRequests=docsBpi2CmAuthRequests, docsBpi2CmAuthReset=docsBpi2CmAuthReset, docsBpi2CmIpMulticastSAMapRequests=docsBpi2CmIpMulticastSAMapRequests, docsBpi2CmtsDefaultSelfSignedManufCertTrust=docsBpi2CmtsDefaultSelfSignedManufCertTrust, docsBpi2CmtsKeyReplies=docsBpi2CmtsKeyReplies, docsBpi2CmTEKDataAuthentAlg=docsBpi2CmTEKDataAuthentAlg, docsBpi2CmAuthInvalidErrorCode=docsBpi2CmAuthInvalidErrorCode, docsBpi2CmTEKKeySequenceNumber=docsBpi2CmTEKKeySequenceNumber, docsBpi2CmTEKExpiresNew=docsBpi2CmTEKExpiresNew, docsBpi2CmTEKGraceTime=docsBpi2CmTEKGraceTime, docsBpi2CmtsDefaultAuthLifetime=docsBpi2CmtsDefaultAuthLifetime, docsBpi2CmTEKKeyReplies=docsBpi2CmTEKKeyReplies, docsBpi2CmtsCACertSerialNumber=docsBpi2CmtsCACertSerialNumber, docsBpi2CmTEKInvalids=docsBpi2CmTEKInvalids, docsBpi2CmIpMulticastSAMapReplies=docsBpi2CmIpMulticastSAMapReplies)
