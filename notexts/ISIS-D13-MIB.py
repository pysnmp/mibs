#
# PySNMP MIB module ISIS-D13-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/internet-drafts/ISIS-D13-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 11:10:45 2024
# On host fv-az525-771 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
InetAddress, InetAddressType, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetAddressPrefixLength")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, Counter32, iso, TimeTicks, Bits, ObjectIdentity, NotificationType, experimental, Gauge32, MibIdentifier, Counter64, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "Counter32", "iso", "TimeTicks", "Bits", "ObjectIdentity", "NotificationType", "experimental", "Gauge32", "MibIdentifier", "Counter64", "IpAddress", "Unsigned32")
DisplayString, TestAndIncr, RowStatus, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TestAndIncr", "RowStatus", "TruthValue", "TextualConvention")
isisD13MIB = ModuleIdentity((1, 3, 6, 1, 3, 37))
if mibBuilder.loadTexts: isisD13MIB.setLastUpdated('200401191200Z')
if mibBuilder.loadTexts: isisD13MIB.setOrganization('IETF IS-IS for IP Internets Working Group')
isisD13Objects = MibIdentifier((1, 3, 6, 1, 3, 37, 1))
isisD13Notifications = MibIdentifier((1, 3, 6, 1, 3, 37, 2))
isisD13Conformance = MibIdentifier((1, 3, 6, 1, 3, 37, 3))
isisD13System = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 1))
if mibBuilder.loadTexts: isisD13System.setStatus('current')
isisD13SysLevel = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 2))
if mibBuilder.loadTexts: isisD13SysLevel.setStatus('current')
isisD13Circ = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 3))
if mibBuilder.loadTexts: isisD13Circ.setStatus('current')
isisD13CircLevelValues = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 4))
if mibBuilder.loadTexts: isisD13CircLevelValues.setStatus('current')
isisD13Counters = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 5))
if mibBuilder.loadTexts: isisD13Counters.setStatus('current')
isisD13ISAdj = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 6))
if mibBuilder.loadTexts: isisD13ISAdj.setStatus('current')
isisD13ReachAddr = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 7))
if mibBuilder.loadTexts: isisD13ReachAddr.setStatus('current')
isisD13IPReachAddr = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 8))
if mibBuilder.loadTexts: isisD13IPReachAddr.setStatus('current')
isisD13LSPDataBase = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 9))
if mibBuilder.loadTexts: isisD13LSPDataBase.setStatus('current')
isisD13Notification = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 10))
if mibBuilder.loadTexts: isisD13Notification.setStatus('current')
class OSINSAddress(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 20)

class SystemID(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class LinkStatePDUID(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), )
class AdminState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("on", 1), ("off", 2))

class LSPBuffSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(512, 16000)

class LevelState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("off", 1), ("on", 2), ("waiting", 3), ("overloaded", 4))

class SupportedProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(129, 142, 204))
    namedValues = NamedValues(("iso8473", 129), ("ipV6", 142), ("ip", 204))

class DefaultMetric(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 63)

class WideMetric(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 16777215)

class FullMetric(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 16777215)

class MetricType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("internal", 1), ("external", 2))

class MetricStyle(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("narrow", 1), ("wide", 2), ("both", 3))

class ISLevel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("area", 1), ("domain", 2))

class IsisPDUHeader(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class CircuitID(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(7, 7)
    fixedLength = 7

class ISPriority(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 127)

class Unsigned16TC(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class Unsigned8TC(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

isisD13SysTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 1), )
if mibBuilder.loadTexts: isisD13SysTable.setStatus('current')
isisD13SysEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 1, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"))
if mibBuilder.loadTexts: isisD13SysEntry.setStatus('current')
isisD13SysInstance = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)))
if mibBuilder.loadTexts: isisD13SysInstance.setStatus('current')
isisD13SysVersion = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 2), DisplayString().clone('1')).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysVersion.setStatus('current')
isisD13SysType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2), ("level1L2IS", 3))).clone('level1L2IS')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysType.setStatus('current')
isisD13SysID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 4), SystemID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysID.setStatus('current')
isisD13SysMaxPathSplits = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysMaxPathSplits.setStatus('current')
isisD13SysMaxLSPGenInt = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65235)).clone(900)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysMaxLSPGenInt.setStatus('current')
isisD13SysPollESHelloRate = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 7), Unsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysPollESHelloRate.setStatus('current')
isisD13SysWaitTime = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 8), Unsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysWaitTime.setStatus('current')
isisD13SysAdminState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 9), AdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysAdminState.setStatus('current')
isisD13SysLogAdjacencyChanges = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysLogAdjacencyChanges.setStatus('current')
isisD13SysNextCircIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 11), TestAndIncr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysNextCircIndex.setStatus('current')
isisD13SysL2toL1Leaking = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysL2toL1Leaking.setStatus('current')
isisD13SysMaxAge = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 13), Unsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(350, 65535)).clone(1200)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysMaxAge.setStatus('current')
isisD13SysReceiveLSPBufferSize = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 14), Unsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1492, 16000)).clone(1492)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysReceiveLSPBufferSize.setStatus('current')
isisD13SysExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysExistState.setStatus('current')
isisD13ManAreaAddrTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 2), )
if mibBuilder.loadTexts: isisD13ManAreaAddrTable.setStatus('current')
isisD13ManAreaAddrEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 2, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13ManAreaAddr"))
if mibBuilder.loadTexts: isisD13ManAreaAddrEntry.setStatus('current')
isisD13ManAreaAddr = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 2, 1, 1), OSINSAddress())
if mibBuilder.loadTexts: isisD13ManAreaAddr.setStatus('current')
isisD13ManAreaAddrExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13ManAreaAddrExistState.setStatus('current')
isisD13AreaAddrTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 3), )
if mibBuilder.loadTexts: isisD13AreaAddrTable.setStatus('current')
isisD13AreaAddrEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 3, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13AreaAddr"))
if mibBuilder.loadTexts: isisD13AreaAddrEntry.setStatus('current')
isisD13AreaAddr = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 3, 1, 1), OSINSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13AreaAddr.setStatus('current')
isisD13SysProtSuppTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 4), )
if mibBuilder.loadTexts: isisD13SysProtSuppTable.setStatus('current')
isisD13SysProtSuppEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 4, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13SysProtSuppProtocol"))
if mibBuilder.loadTexts: isisD13SysProtSuppEntry.setStatus('current')
isisD13SysProtSuppProtocol = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 4, 1, 1), SupportedProtocol())
if mibBuilder.loadTexts: isisD13SysProtSuppProtocol.setStatus('current')
isisD13SysProtSuppExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysProtSuppExistState.setStatus('current')
isisD13SummAddrTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 5), )
if mibBuilder.loadTexts: isisD13SummAddrTable.setStatus('current')
isisD13SummAddrEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 5, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13SummAddressType"), (0, "ISIS-D13-MIB", "isisD13SummAddress"), (0, "ISIS-D13-MIB", "isisD13SummAddrPrefixLen"))
if mibBuilder.loadTexts: isisD13SummAddrEntry.setStatus('current')
isisD13SummAddressType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: isisD13SummAddressType.setStatus('current')
isisD13SummAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: isisD13SummAddress.setStatus('current')
isisD13SummAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: isisD13SummAddrPrefixLen.setStatus('current')
isisD13SummAddrExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SummAddrExistState.setStatus('current')
isisD13SummAddrMetric = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 5), DefaultMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SummAddrMetric.setStatus('current')
isisD13SummAddrFullMetric = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 6), FullMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SummAddrFullMetric.setStatus('current')
isisD13RedistributeAddrTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 6), )
if mibBuilder.loadTexts: isisD13RedistributeAddrTable.setStatus('current')
isisD13RedistributeAddrEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 6, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13RedistributeAddrType"), (0, "ISIS-D13-MIB", "isisD13RedistributeAddrAddress"), (0, "ISIS-D13-MIB", "isisD13RedistributeAddrPrefixLen"))
if mibBuilder.loadTexts: isisD13RedistributeAddrEntry.setStatus('current')
isisD13RedistributeAddrType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: isisD13RedistributeAddrType.setStatus('current')
isisD13RedistributeAddrAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 6, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: isisD13RedistributeAddrAddress.setStatus('current')
isisD13RedistributeAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 6, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: isisD13RedistributeAddrPrefixLen.setStatus('current')
isisD13RedistributeAddrExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13RedistributeAddrExistState.setStatus('current')
isisD13RouterTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 7), )
if mibBuilder.loadTexts: isisD13RouterTable.setStatus('current')
isisD13RouterEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 7, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13RouterSysID"), (0, "ISIS-D13-MIB", "isisD13RouterLevel"))
if mibBuilder.loadTexts: isisD13RouterEntry.setStatus('current')
isisD13RouterSysID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 7, 1, 1), SystemID())
if mibBuilder.loadTexts: isisD13RouterSysID.setStatus('current')
isisD13RouterLevel = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 7, 1, 2), ISLevel())
if mibBuilder.loadTexts: isisD13RouterLevel.setStatus('current')
isisD13RouterHostName = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 7, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13RouterHostName.setStatus('current')
isisD13RouterID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13RouterID.setStatus('current')
isisD13SysLevelTable = MibTable((1, 3, 6, 1, 3, 37, 1, 2, 1), )
if mibBuilder.loadTexts: isisD13SysLevelTable.setStatus('current')
isisD13SysLevelEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 2, 1, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13SysLevelIndex"))
if mibBuilder.loadTexts: isisD13SysLevelEntry.setStatus('current')
isisD13SysLevelIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2))))
if mibBuilder.loadTexts: isisD13SysLevelIndex.setStatus('current')
isisD13SysLevelOrigLSPBuffSize = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 2), LSPBuffSize().clone(1492)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysLevelOrigLSPBuffSize.setStatus('current')
isisD13SysLevelMinLSPGenInt = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 3), Unsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysLevelMinLSPGenInt.setStatus('current')
isisD13SysLevelOverloadState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 4), LevelState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysLevelOverloadState.setStatus('current')
isisD13SysLevelSetOverload = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysLevelSetOverload.setStatus('current')
isisD13SysLevelSetOverloadUntil = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 6), TimeTicks()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysLevelSetOverloadUntil.setStatus('current')
isisD13SysLevelMetricStyle = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 7), MetricStyle().clone('narrow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysLevelMetricStyle.setStatus('current')
isisD13SysLevelSPFConsiders = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 8), MetricStyle().clone('narrow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysLevelSPFConsiders.setStatus('current')
isisD13SysLevelTEEnabled = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13SysLevelTEEnabled.setStatus('current')
isisD13CircTable = MibTable((1, 3, 6, 1, 3, 37, 1, 3, 1), )
if mibBuilder.loadTexts: isisD13CircTable.setStatus('current')
isisD13CircEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 3, 1, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13CircIndex"))
if mibBuilder.loadTexts: isisD13CircEntry.setStatus('current')
isisD13CircIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisD13CircIndex.setStatus('current')
isisD13CircIfIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircIfIndex.setStatus('current')
isisD13CircIfSubIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircIfSubIndex.setStatus('current')
isisD13CircAdminState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 4), AdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircAdminState.setStatus('current')
isisD13CircExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircExistState.setStatus('current')
isisD13CircType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("broadcast", 1), ("ptToPt", 2), ("staticIn", 3), ("staticOut", 4), ("dA", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircType.setStatus('current')
isisD13CircExtDomain = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircExtDomain.setStatus('current')
isisD13CircLevel = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level1L2", 3))).clone('level1L2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevel.setStatus('current')
isisD13CircPassiveCircuit = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircPassiveCircuit.setStatus('current')
isisD13CircMeshGroupEnabled = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("blocked", 2), ("set", 3))).clone('inactive')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircMeshGroupEnabled.setStatus('current')
isisD13CircMeshGroup = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircMeshGroup.setStatus('current')
isisD13CircSmallHellos = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircSmallHellos.setStatus('current')
isisD13CircLastUpTime = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 13), TimeTicks()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircLastUpTime.setStatus('current')
isisD13Circ3WayEnabled = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 14), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13Circ3WayEnabled.setStatus('current')
isisD13CircExtendedCircID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 15), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircExtendedCircID.setStatus('current')
isisD13CircLevelTable = MibTable((1, 3, 6, 1, 3, 37, 1, 4, 1), )
if mibBuilder.loadTexts: isisD13CircLevelTable.setStatus('current')
isisD13CircLevelEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 4, 1, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13CircIndex"), (0, "ISIS-D13-MIB", "isisD13CircLevelIndex"))
if mibBuilder.loadTexts: isisD13CircLevelEntry.setStatus('current')
isisD13CircLevelIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2))))
if mibBuilder.loadTexts: isisD13CircLevelIndex.setStatus('current')
isisD13CircLevelMetric = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 2), DefaultMetric().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevelMetric.setStatus('current')
isisD13CircLevelWideMetric = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 3), WideMetric().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevelWideMetric.setStatus('current')
isisD13CircLevelISPriority = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 4), ISPriority().clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevelISPriority.setStatus('current')
isisD13CircLevelIDOctet = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevelIDOctet.setStatus('current')
isisD13CircLevelID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 6), CircuitID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircLevelID.setStatus('current')
isisD13CircLevelDesIS = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 7), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(7, 7), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircLevelDesIS.setStatus('current')
isisD13CircLevelHelloMultiplier = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 100)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevelHelloMultiplier.setStatus('current')
isisD13CircLevelHelloTimer = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600000)).clone(3000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevelHelloTimer.setStatus('current')
isisD13CircLevelDRHelloTimer = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 120000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevelDRHelloTimer.setStatus('current')
isisD13CircLevelLSPThrottle = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 11), Unsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevelLSPThrottle.setStatus('current')
isisD13CircLevelMinLSPRetransInt = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevelMinLSPRetransInt.setStatus('current')
isisD13CircLevelCSNPInterval = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevelCSNPInterval.setStatus('current')
isisD13CircLevelPartSNPInterval = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(2)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13CircLevelPartSNPInterval.setStatus('current')
isisD13SystemCounterTable = MibTable((1, 3, 6, 1, 3, 37, 1, 5, 1), )
if mibBuilder.loadTexts: isisD13SystemCounterTable.setStatus('current')
isisD13SystemCounterEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 5, 1, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13SysStatLevel"))
if mibBuilder.loadTexts: isisD13SystemCounterEntry.setStatus('current')
isisD13SysStatLevel = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2))))
if mibBuilder.loadTexts: isisD13SysStatLevel.setStatus('current')
isisD13SysStatCorrLSPs = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 2), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatCorrLSPs.setStatus('current')
isisD13SysStatAuthTypeFails = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 3), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatAuthTypeFails.setStatus('current')
isisD13SysStatAuthFails = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 4), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatAuthFails.setStatus('current')
isisD13SysStatLSPDbaseOloads = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatLSPDbaseOloads.setStatus('current')
isisD13SysStatManAddrDropFromAreas = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatManAddrDropFromAreas.setStatus('current')
isisD13SysStatAttmptToExMaxSeqNums = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatAttmptToExMaxSeqNums.setStatus('current')
isisD13SysStatSeqNumSkips = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatSeqNumSkips.setStatus('current')
isisD13SysStatOwnLSPPurges = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatOwnLSPPurges.setStatus('current')
isisD13SysStatIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 10), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatIDFieldLenMismatches.setStatus('current')
isisD13SysStatMaxAreaAddrMismatches = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 11), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatMaxAreaAddrMismatches.setStatus('current')
isisD13SysStatPartChanges = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatPartChanges.setStatus('current')
isisD13SysStatSPFRuns = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13SysStatSPFRuns.setStatus('current')
isisD13CircuitCounterTable = MibTable((1, 3, 6, 1, 3, 37, 1, 5, 2), )
if mibBuilder.loadTexts: isisD13CircuitCounterTable.setStatus('current')
isisD13CircuitCounterEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 5, 2, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13CircIndex"), (0, "ISIS-D13-MIB", "isisD13CircuitType"))
if mibBuilder.loadTexts: isisD13CircuitCounterEntry.setStatus('current')
isisD13CircuitType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lanlevel1", 1), ("lanlevel2", 2), ("p2pcircuit", 3))))
if mibBuilder.loadTexts: isisD13CircuitType.setStatus('current')
isisD13CircAdjChanges = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircAdjChanges.setStatus('current')
isisD13CircNumAdj = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircNumAdj.setStatus('current')
isisD13CircInitFails = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircInitFails.setStatus('current')
isisD13CircRejAdjs = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircRejAdjs.setStatus('current')
isisD13CircIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 6), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircIDFieldLenMismatches.setStatus('current')
isisD13CircMaxAreaAddrMismatches = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircMaxAreaAddrMismatches.setStatus('current')
isisD13CircAuthTypeFails = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircAuthTypeFails.setStatus('current')
isisD13CircAuthFails = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircAuthFails.setStatus('current')
isisD13CircLANDesISChanges = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13CircLANDesISChanges.setStatus('current')
isisD13PacketCounterTable = MibTable((1, 3, 6, 1, 3, 37, 1, 5, 3), )
if mibBuilder.loadTexts: isisD13PacketCounterTable.setStatus('current')
isisD13PacketCounterEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 5, 3, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13CircIndex"), (0, "ISIS-D13-MIB", "isisD13PacketCountLevel"), (0, "ISIS-D13-MIB", "isisD13PacketCountDirection"))
if mibBuilder.loadTexts: isisD13PacketCounterEntry.setStatus('current')
isisD13PacketCountLevel = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2))))
if mibBuilder.loadTexts: isisD13PacketCountLevel.setStatus('current')
isisD13PacketCountDirection = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sending", 1), ("receiving", 2))))
if mibBuilder.loadTexts: isisD13PacketCountDirection.setStatus('current')
isisD13PacketCountIIHello = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 3), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13PacketCountIIHello.setStatus('current')
isisD13PacketCountISHello = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 4), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13PacketCountISHello.setStatus('current')
isisD13PacketCountESHello = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 5), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13PacketCountESHello.setStatus('current')
isisD13PacketCountLSP = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 6), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13PacketCountLSP.setStatus('current')
isisD13PacketCountCSNP = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 7), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13PacketCountCSNP.setStatus('current')
isisD13PacketCountPSNP = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 8), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13PacketCountPSNP.setStatus('current')
isisD13PacketCountUnknown = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 9), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13PacketCountUnknown.setStatus('current')
isisD13ISAdjTable = MibTable((1, 3, 6, 1, 3, 37, 1, 6, 1), )
if mibBuilder.loadTexts: isisD13ISAdjTable.setStatus('current')
isisD13ISAdjEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 6, 1, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13CircIndex"), (0, "ISIS-D13-MIB", "isisD13ISAdjIndex"))
if mibBuilder.loadTexts: isisD13ISAdjEntry.setStatus('current')
isisD13ISAdjIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisD13ISAdjIndex.setStatus('current')
isisD13ISAdjState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down", 1), ("initializing", 2), ("up", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjState.setStatus('current')
isisD13ISAdj3WayState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("up", 0), ("initializing", 1), ("down", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdj3WayState.setStatus('current')
isisD13ISAdjNeighSNPAAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 4), OSINSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjNeighSNPAAddress.setStatus('current')
isisD13ISAdjNeighSysType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("l1IntermediateSystem", 1), ("l2IntermediateSystem", 2), ("l1L2IntermediateSystem", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjNeighSysType.setStatus('current')
isisD13ISAdjNeighSysID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 6), SystemID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjNeighSysID.setStatus('current')
isisD13ISAdjNbrExtendedCircID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjNbrExtendedCircID.setStatus('current')
isisD13ISAdjUsage = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level1and2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjUsage.setStatus('current')
isisD13ISAdjHoldTimer = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 9), Unsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjHoldTimer.setStatus('current')
isisD13ISAdjNeighPriority = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 10), ISPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjNeighPriority.setStatus('current')
isisD13ISAdjLastUpTime = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 11), TimeTicks()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjLastUpTime.setStatus('current')
isisD13ISAdjAreaAddrTable = MibTable((1, 3, 6, 1, 3, 37, 1, 6, 2), )
if mibBuilder.loadTexts: isisD13ISAdjAreaAddrTable.setStatus('current')
isisD13ISAdjAreaAddrEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 6, 2, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13CircIndex"), (0, "ISIS-D13-MIB", "isisD13ISAdjIndex"), (0, "ISIS-D13-MIB", "isisD13ISAdjAreaAddrIndex"))
if mibBuilder.loadTexts: isisD13ISAdjAreaAddrEntry.setStatus('current')
isisD13ISAdjAreaAddrIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisD13ISAdjAreaAddrIndex.setStatus('current')
isisD13ISAdjAreaAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 2, 1, 2), OSINSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjAreaAddress.setStatus('current')
isisD13ISAdjIPAddrTable = MibTable((1, 3, 6, 1, 3, 37, 1, 6, 3), )
if mibBuilder.loadTexts: isisD13ISAdjIPAddrTable.setStatus('current')
isisD13ISAdjIPAddrEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 6, 3, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13CircIndex"), (0, "ISIS-D13-MIB", "isisD13ISAdjIndex"), (0, "ISIS-D13-MIB", "isisD13ISAdjIPAddrIndex"))
if mibBuilder.loadTexts: isisD13ISAdjIPAddrEntry.setStatus('current')
isisD13ISAdjIPAddrIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisD13ISAdjIPAddrIndex.setStatus('current')
isisD13ISAdjIPAddressType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 3, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjIPAddressType.setStatus('current')
isisD13ISAdjIPAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 3, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjIPAddress.setStatus('current')
isisD13ISAdjProtSuppTable = MibTable((1, 3, 6, 1, 3, 37, 1, 6, 4), )
if mibBuilder.loadTexts: isisD13ISAdjProtSuppTable.setStatus('current')
isisD13ISAdjProtSuppEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 6, 4, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13CircIndex"), (0, "ISIS-D13-MIB", "isisD13ISAdjIndex"), (0, "ISIS-D13-MIB", "isisD13ISAdjProtSuppProtocol"))
if mibBuilder.loadTexts: isisD13ISAdjProtSuppEntry.setStatus('current')
isisD13ISAdjProtSuppProtocol = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 4, 1, 1), SupportedProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13ISAdjProtSuppProtocol.setStatus('current')
isisD13RATable = MibTable((1, 3, 6, 1, 3, 37, 1, 7, 1), )
if mibBuilder.loadTexts: isisD13RATable.setStatus('current')
isisD13RAEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 7, 1, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13CircIndex"), (0, "ISIS-D13-MIB", "isisD13RAIndex"))
if mibBuilder.loadTexts: isisD13RAEntry.setStatus('current')
isisD13RAIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisD13RAIndex.setStatus('current')
isisD13RAExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13RAExistState.setStatus('current')
isisD13RAAdminState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 3), AdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13RAAdminState.setStatus('current')
isisD13RAAddrPrefix = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 4), OSINSAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13RAAddrPrefix.setStatus('current')
isisD13RAMapType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("explicit", 2), ("extractIDI", 3), ("extractDSP", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13RAMapType.setStatus('current')
isisD13RAMetric = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 6), DefaultMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13RAMetric.setStatus('current')
isisD13RAMetricType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 7), MetricType().clone('internal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13RAMetricType.setStatus('current')
isisD13RASNPAAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 8), OSINSAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13RASNPAAddress.setStatus('current')
isisD13RASNPAMask = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 9), OSINSAddress().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13RASNPAMask.setStatus('current')
isisD13RASNPAPrefix = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 10), OSINSAddress().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13RASNPAPrefix.setStatus('current')
isisD13RAType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2))).clone('manual')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13RAType.setStatus('current')
isisD13IPRATable = MibTable((1, 3, 6, 1, 3, 37, 1, 8, 1), )
if mibBuilder.loadTexts: isisD13IPRATable.setStatus('current')
isisD13IPRAEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 8, 1, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13IPRADestType"), (0, "ISIS-D13-MIB", "isisD13IPRADest"), (0, "ISIS-D13-MIB", "isisD13IPRADestPrefixLen"))
if mibBuilder.loadTexts: isisD13IPRAEntry.setStatus('current')
isisD13IPRADestType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: isisD13IPRADestType.setStatus('current')
isisD13IPRADest = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: isisD13IPRADest.setStatus('current')
isisD13IPRADestPrefixLen = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: isisD13IPRADestPrefixLen.setStatus('current')
isisD13IPRANextHopType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13IPRANextHopType.setStatus('current')
isisD13IPRANextHop = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13IPRANextHop.setStatus('current')
isisD13IPRAType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13IPRAType.setStatus('current')
isisD13IPRAExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13IPRAExistState.setStatus('current')
isisD13IPRAAdminState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 8), AdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13IPRAAdminState.setStatus('current')
isisD13IPRAMetric = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 9), DefaultMetric().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13IPRAMetric.setStatus('current')
isisD13IPRAMetricType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 10), MetricType().clone('internal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13IPRAMetricType.setStatus('current')
isisD13IPRAFullMetric = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 11), FullMetric().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13IPRAFullMetric.setStatus('current')
isisD13IPRASNPAAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 12), OSINSAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisD13IPRASNPAAddress.setStatus('current')
isisD13IPRASourceType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 8, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("static", 1), ("direct", 2), ("ospfv2", 3), ("ospfv3", 4), ("isisD13", 5), ("rip", 6), ("igrp", 7), ("eigrp", 8), ("bgp", 9), ("other", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13IPRASourceType.setStatus('current')
isisD13LSPSummaryTable = MibTable((1, 3, 6, 1, 3, 37, 1, 9, 1), )
if mibBuilder.loadTexts: isisD13LSPSummaryTable.setStatus('current')
isisD13LSPSummaryEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 9, 1, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13LSPLevel"), (0, "ISIS-D13-MIB", "isisD13LSPID"))
if mibBuilder.loadTexts: isisD13LSPSummaryEntry.setStatus('current')
isisD13LSPLevel = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 1, 1, 1), ISLevel())
if mibBuilder.loadTexts: isisD13LSPLevel.setStatus('current')
isisD13LSPID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 1, 1, 2), LinkStatePDUID())
if mibBuilder.loadTexts: isisD13LSPID.setStatus('current')
isisD13LSPSeq = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13LSPSeq.setStatus('current')
isisD13LSPZeroLife = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13LSPZeroLife.setStatus('current')
isisD13LSPChecksum = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 1, 1, 5), Unsigned16TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13LSPChecksum.setStatus('current')
isisD13LSPLifetimeRemain = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 1, 1, 6), Unsigned16TC()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13LSPLifetimeRemain.setStatus('current')
isisD13LSPPDULength = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 1, 1, 7), Unsigned16TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13LSPPDULength.setStatus('current')
isisD13LSPAttributes = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 1, 1, 8), Unsigned8TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13LSPAttributes.setStatus('current')
isisD13LSPTLVTable = MibTable((1, 3, 6, 1, 3, 37, 1, 9, 2), )
if mibBuilder.loadTexts: isisD13LSPTLVTable.setStatus('current')
isisD13LSPTLVEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 9, 2, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"), (0, "ISIS-D13-MIB", "isisD13LSPLevel"), (0, "ISIS-D13-MIB", "isisD13LSPID"), (0, "ISIS-D13-MIB", "isisD13LSPTLVIndex"))
if mibBuilder.loadTexts: isisD13LSPTLVEntry.setStatus('current')
isisD13LSPTLVIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: isisD13LSPTLVIndex.setStatus('current')
isisD13LSPTLVSeq = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13LSPTLVSeq.setStatus('current')
isisD13LSPTLVChecksum = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 2, 1, 3), Unsigned16TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13LSPTLVChecksum.setStatus('current')
isisD13LSPTLVType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 2, 1, 4), Unsigned8TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13LSPTLVType.setStatus('current')
isisD13LSPTLVLen = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 2, 1, 5), Unsigned8TC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13LSPTLVLen.setStatus('current')
isisD13LSPTLVValue = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 9, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisD13LSPTLVValue.setStatus('current')
isisD13NotificationTable = MibTable((1, 3, 6, 1, 3, 37, 1, 10, 1), )
if mibBuilder.loadTexts: isisD13NotificationTable.setStatus('current')
isisD13NotificationEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 10, 1, 1), ).setIndexNames((0, "ISIS-D13-MIB", "isisD13SysInstance"))
if mibBuilder.loadTexts: isisD13NotificationEntry.setStatus('current')
isisD13PduLspId = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 10, 1, 1, 1), LinkStatePDUID()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisD13PduLspId.setStatus('current')
isisD13PduFragment = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 10, 1, 1, 2), IsisPDUHeader()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisD13PduFragment.setStatus('current')
isisD13PduFieldLen = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 10, 1, 1, 3), Unsigned8TC()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisD13PduFieldLen.setStatus('current')
isisD13PduMaxAreaAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 10, 1, 1, 4), Unsigned8TC()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisD13PduMaxAreaAddress.setStatus('current')
isisD13PduProtocolVersion = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 10, 1, 1, 5), Unsigned8TC()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisD13PduProtocolVersion.setStatus('current')
isisD13PduLspSize = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisD13PduLspSize.setStatus('current')
isisD13PduOriginatingBufferSize = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 10, 1, 1, 7), Unsigned16TC().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisD13PduOriginatingBufferSize.setStatus('current')
isisD13PduProtocolsSupported = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 10, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisD13PduProtocolsSupported.setStatus('current')
isisD13AdjState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down", 1), ("initializing", 2), ("up", 3), ("failed", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisD13AdjState.setStatus('current')
isisD13PduRemoteRouterID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 10, 1, 1, 10), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: isisD13PduRemoteRouterID.setStatus('current')
isisD13TrapPrefix = MibIdentifier((1, 3, 6, 1, 3, 37, 2, 0))
isisD13DatabaseOverload = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 1)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13SysLevelOverloadState"))
if mibBuilder.loadTexts: isisD13DatabaseOverload.setStatus('current')
isisD13ManualAddressDrops = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 2)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13ManAreaAddrExistState"))
if mibBuilder.loadTexts: isisD13ManualAddressDrops.setStatus('current')
isisD13CorruptedLSPDetected = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 3)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13PduLspId"))
if mibBuilder.loadTexts: isisD13CorruptedLSPDetected.setStatus('current')
isisD13AttemptToExceedMaxSequence = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 4)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13PduLspId"))
if mibBuilder.loadTexts: isisD13AttemptToExceedMaxSequence.setStatus('current')
isisD13IDLenMismatch = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 5)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13PduFieldLen"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduFragment"))
if mibBuilder.loadTexts: isisD13IDLenMismatch.setStatus('current')
isisD13MaxAreaAddressesMismatch = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 6)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13PduMaxAreaAddress"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduFragment"))
if mibBuilder.loadTexts: isisD13MaxAreaAddressesMismatch.setStatus('current')
isisD13OwnLSPPurge = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 7)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduLspId"), ("ISIS-D13-MIB", "isisD13PduRemoteRouterID"))
if mibBuilder.loadTexts: isisD13OwnLSPPurge.setStatus('current')
isisD13SequenceNumberSkip = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 8)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduLspId"))
if mibBuilder.loadTexts: isisD13SequenceNumberSkip.setStatus('current')
isisD13AuthenticationTypeFailure = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 9)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduFragment"))
if mibBuilder.loadTexts: isisD13AuthenticationTypeFailure.setStatus('current')
isisD13AuthenticationFailure = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 10)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduFragment"))
if mibBuilder.loadTexts: isisD13AuthenticationFailure.setStatus('current')
isisD13VersionSkew = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 11)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduProtocolVersion"), ("ISIS-D13-MIB", "isisD13PduFragment"))
if mibBuilder.loadTexts: isisD13VersionSkew.setStatus('current')
isisD13AreaMismatch = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 12)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduFragment"))
if mibBuilder.loadTexts: isisD13AreaMismatch.setStatus('current')
isisD13RejectedAdjacency = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 13)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduFragment"))
if mibBuilder.loadTexts: isisD13RejectedAdjacency.setStatus('current')
isisD13LSPTooLargeToPropagate = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 14)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduLspSize"), ("ISIS-D13-MIB", "isisD13PduLspId"))
if mibBuilder.loadTexts: isisD13LSPTooLargeToPropagate.setStatus('current')
isisD13OrigLSPBuffSizeMismatch = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 15)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduLspId"), ("ISIS-D13-MIB", "isisD13PduOriginatingBufferSize"))
if mibBuilder.loadTexts: isisD13OrigLSPBuffSizeMismatch.setStatus('current')
isisD13ProtocolsSupportedMismatch = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 16)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduProtocolsSupported"), ("ISIS-D13-MIB", "isisD13PduLspId"), ("ISIS-D13-MIB", "isisD13PduFragment"))
if mibBuilder.loadTexts: isisD13ProtocolsSupportedMismatch.setStatus('current')
isisD13AdjacencyChange = NotificationType((1, 3, 6, 1, 3, 37, 2, 0, 17)).setObjects(("ISIS-D13-MIB", "isisD13SysInstance"), ("ISIS-D13-MIB", "isisD13SysLevelIndex"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13PduLspId"), ("ISIS-D13-MIB", "isisD13AdjState"))
if mibBuilder.loadTexts: isisD13AdjacencyChange.setStatus('current')
isisD13Groups = MibIdentifier((1, 3, 6, 1, 3, 37, 3, 1))
isisD13Compliances = MibIdentifier((1, 3, 6, 1, 3, 37, 3, 2))
isisD13Compliance = ModuleCompliance((1, 3, 6, 1, 3, 37, 3, 2, 1)).setObjects(("ISIS-D13-MIB", "isisD13SystemGroup"), ("ISIS-D13-MIB", "isisD13CircuitGroup"), ("ISIS-D13-MIB", "isisD13ISAdjGroup"), ("ISIS-D13-MIB", "isisD13NotificationObjectGroup"), ("ISIS-D13-MIB", "isisD13NotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisD13Compliance = isisD13Compliance.setStatus('current')
isisD13AdvancedCompliance = ModuleCompliance((1, 3, 6, 1, 3, 37, 3, 2, 2)).setObjects(("ISIS-D13-MIB", "isisD13SystemGroup"), ("ISIS-D13-MIB", "isisD13CircuitGroup"), ("ISIS-D13-MIB", "isisD13ISAdjGroup"), ("ISIS-D13-MIB", "isisD13NotificationObjectGroup"), ("ISIS-D13-MIB", "isisD13NotificationGroup"), ("ISIS-D13-MIB", "isisD13ISPDUCounterGroup"), ("ISIS-D13-MIB", "isisD13RATableGroup"), ("ISIS-D13-MIB", "isisD13ISIPRADestGroup"), ("ISIS-D13-MIB", "isisD13LSPGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisD13AdvancedCompliance = isisD13AdvancedCompliance.setStatus('current')
isisD13SystemGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 1)).setObjects(("ISIS-D13-MIB", "isisD13SysVersion"), ("ISIS-D13-MIB", "isisD13SysType"), ("ISIS-D13-MIB", "isisD13SysID"), ("ISIS-D13-MIB", "isisD13SysMaxPathSplits"), ("ISIS-D13-MIB", "isisD13SysMaxLSPGenInt"), ("ISIS-D13-MIB", "isisD13SysPollESHelloRate"), ("ISIS-D13-MIB", "isisD13SysWaitTime"), ("ISIS-D13-MIB", "isisD13SysAdminState"), ("ISIS-D13-MIB", "isisD13SysLogAdjacencyChanges"), ("ISIS-D13-MIB", "isisD13SysNextCircIndex"), ("ISIS-D13-MIB", "isisD13SysExistState"), ("ISIS-D13-MIB", "isisD13SysL2toL1Leaking"), ("ISIS-D13-MIB", "isisD13SysMaxAge"), ("ISIS-D13-MIB", "isisD13SysLevelOrigLSPBuffSize"), ("ISIS-D13-MIB", "isisD13SysLevelMinLSPGenInt"), ("ISIS-D13-MIB", "isisD13SysLevelOverloadState"), ("ISIS-D13-MIB", "isisD13SysLevelSetOverload"), ("ISIS-D13-MIB", "isisD13SysLevelSetOverloadUntil"), ("ISIS-D13-MIB", "isisD13SysLevelMetricStyle"), ("ISIS-D13-MIB", "isisD13SysLevelSPFConsiders"), ("ISIS-D13-MIB", "isisD13SysLevelTEEnabled"), ("ISIS-D13-MIB", "isisD13SysReceiveLSPBufferSize"), ("ISIS-D13-MIB", "isisD13ManAreaAddrExistState"), ("ISIS-D13-MIB", "isisD13AreaAddr"), ("ISIS-D13-MIB", "isisD13SysProtSuppExistState"), ("ISIS-D13-MIB", "isisD13SummAddrExistState"), ("ISIS-D13-MIB", "isisD13SummAddrMetric"), ("ISIS-D13-MIB", "isisD13SummAddrFullMetric"), ("ISIS-D13-MIB", "isisD13RedistributeAddrExistState"), ("ISIS-D13-MIB", "isisD13RouterHostName"), ("ISIS-D13-MIB", "isisD13RouterID"), ("ISIS-D13-MIB", "isisD13SysStatCorrLSPs"), ("ISIS-D13-MIB", "isisD13SysStatLSPDbaseOloads"), ("ISIS-D13-MIB", "isisD13SysStatManAddrDropFromAreas"), ("ISIS-D13-MIB", "isisD13SysStatAttmptToExMaxSeqNums"), ("ISIS-D13-MIB", "isisD13SysStatSeqNumSkips"), ("ISIS-D13-MIB", "isisD13SysStatOwnLSPPurges"), ("ISIS-D13-MIB", "isisD13SysStatIDFieldLenMismatches"), ("ISIS-D13-MIB", "isisD13SysStatMaxAreaAddrMismatches"), ("ISIS-D13-MIB", "isisD13SysStatPartChanges"), ("ISIS-D13-MIB", "isisD13SysStatSPFRuns"), ("ISIS-D13-MIB", "isisD13SysStatAuthTypeFails"), ("ISIS-D13-MIB", "isisD13SysStatAuthFails"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisD13SystemGroup = isisD13SystemGroup.setStatus('current')
isisD13CircuitGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 2)).setObjects(("ISIS-D13-MIB", "isisD13CircIfSubIndex"), ("ISIS-D13-MIB", "isisD13CircAdminState"), ("ISIS-D13-MIB", "isisD13CircExistState"), ("ISIS-D13-MIB", "isisD13CircType"), ("ISIS-D13-MIB", "isisD13CircExtDomain"), ("ISIS-D13-MIB", "isisD13CircAdjChanges"), ("ISIS-D13-MIB", "isisD13CircNumAdj"), ("ISIS-D13-MIB", "isisD13CircInitFails"), ("ISIS-D13-MIB", "isisD13CircRejAdjs"), ("ISIS-D13-MIB", "isisD13CircIDFieldLenMismatches"), ("ISIS-D13-MIB", "isisD13CircMaxAreaAddrMismatches"), ("ISIS-D13-MIB", "isisD13CircAuthTypeFails"), ("ISIS-D13-MIB", "isisD13CircAuthFails"), ("ISIS-D13-MIB", "isisD13CircLANDesISChanges"), ("ISIS-D13-MIB", "isisD13CircLevel"), ("ISIS-D13-MIB", "isisD13CircPassiveCircuit"), ("ISIS-D13-MIB", "isisD13CircMeshGroupEnabled"), ("ISIS-D13-MIB", "isisD13CircMeshGroup"), ("ISIS-D13-MIB", "isisD13CircSmallHellos"), ("ISIS-D13-MIB", "isisD13CircLastUpTime"), ("ISIS-D13-MIB", "isisD13Circ3WayEnabled"), ("ISIS-D13-MIB", "isisD13CircExtendedCircID"), ("ISIS-D13-MIB", "isisD13CircIfIndex"), ("ISIS-D13-MIB", "isisD13CircLevelMetric"), ("ISIS-D13-MIB", "isisD13CircLevelWideMetric"), ("ISIS-D13-MIB", "isisD13CircLevelISPriority"), ("ISIS-D13-MIB", "isisD13CircLevelIDOctet"), ("ISIS-D13-MIB", "isisD13CircLevelID"), ("ISIS-D13-MIB", "isisD13CircLevelDesIS"), ("ISIS-D13-MIB", "isisD13CircLevelHelloMultiplier"), ("ISIS-D13-MIB", "isisD13CircLevelHelloTimer"), ("ISIS-D13-MIB", "isisD13CircLevelDRHelloTimer"), ("ISIS-D13-MIB", "isisD13CircLevelLSPThrottle"), ("ISIS-D13-MIB", "isisD13CircLevelMinLSPRetransInt"), ("ISIS-D13-MIB", "isisD13CircLevelCSNPInterval"), ("ISIS-D13-MIB", "isisD13CircLevelPartSNPInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisD13CircuitGroup = isisD13CircuitGroup.setStatus('current')
isisD13ISAdjGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 3)).setObjects(("ISIS-D13-MIB", "isisD13ISAdjState"), ("ISIS-D13-MIB", "isisD13ISAdj3WayState"), ("ISIS-D13-MIB", "isisD13ISAdjNeighSNPAAddress"), ("ISIS-D13-MIB", "isisD13ISAdjNeighSysType"), ("ISIS-D13-MIB", "isisD13ISAdjNeighSysID"), ("ISIS-D13-MIB", "isisD13ISAdjNbrExtendedCircID"), ("ISIS-D13-MIB", "isisD13ISAdjUsage"), ("ISIS-D13-MIB", "isisD13ISAdjHoldTimer"), ("ISIS-D13-MIB", "isisD13ISAdjNeighPriority"), ("ISIS-D13-MIB", "isisD13ISAdjLastUpTime"), ("ISIS-D13-MIB", "isisD13ISAdjAreaAddress"), ("ISIS-D13-MIB", "isisD13ISAdjIPAddressType"), ("ISIS-D13-MIB", "isisD13ISAdjIPAddress"), ("ISIS-D13-MIB", "isisD13ISAdjProtSuppProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisD13ISAdjGroup = isisD13ISAdjGroup.setStatus('current')
isisD13NotificationObjectGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 4)).setObjects(("ISIS-D13-MIB", "isisD13PduLspId"), ("ISIS-D13-MIB", "isisD13PduFragment"), ("ISIS-D13-MIB", "isisD13PduFieldLen"), ("ISIS-D13-MIB", "isisD13PduMaxAreaAddress"), ("ISIS-D13-MIB", "isisD13PduProtocolVersion"), ("ISIS-D13-MIB", "isisD13PduLspSize"), ("ISIS-D13-MIB", "isisD13PduOriginatingBufferSize"), ("ISIS-D13-MIB", "isisD13PduProtocolsSupported"), ("ISIS-D13-MIB", "isisD13AdjState"), ("ISIS-D13-MIB", "isisD13PduRemoteRouterID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisD13NotificationObjectGroup = isisD13NotificationObjectGroup.setStatus('current')
isisD13NotificationGroup = NotificationGroup((1, 3, 6, 1, 3, 37, 3, 1, 5)).setObjects(("ISIS-D13-MIB", "isisD13DatabaseOverload"), ("ISIS-D13-MIB", "isisD13ManualAddressDrops"), ("ISIS-D13-MIB", "isisD13CorruptedLSPDetected"), ("ISIS-D13-MIB", "isisD13AttemptToExceedMaxSequence"), ("ISIS-D13-MIB", "isisD13IDLenMismatch"), ("ISIS-D13-MIB", "isisD13MaxAreaAddressesMismatch"), ("ISIS-D13-MIB", "isisD13OwnLSPPurge"), ("ISIS-D13-MIB", "isisD13SequenceNumberSkip"), ("ISIS-D13-MIB", "isisD13AuthenticationTypeFailure"), ("ISIS-D13-MIB", "isisD13AuthenticationFailure"), ("ISIS-D13-MIB", "isisD13VersionSkew"), ("ISIS-D13-MIB", "isisD13AreaMismatch"), ("ISIS-D13-MIB", "isisD13RejectedAdjacency"), ("ISIS-D13-MIB", "isisD13LSPTooLargeToPropagate"), ("ISIS-D13-MIB", "isisD13OrigLSPBuffSizeMismatch"), ("ISIS-D13-MIB", "isisD13ProtocolsSupportedMismatch"), ("ISIS-D13-MIB", "isisD13AdjacencyChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisD13NotificationGroup = isisD13NotificationGroup.setStatus('current')
isisD13ISPDUCounterGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 6)).setObjects(("ISIS-D13-MIB", "isisD13PacketCountIIHello"), ("ISIS-D13-MIB", "isisD13PacketCountISHello"), ("ISIS-D13-MIB", "isisD13PacketCountESHello"), ("ISIS-D13-MIB", "isisD13PacketCountLSP"), ("ISIS-D13-MIB", "isisD13PacketCountCSNP"), ("ISIS-D13-MIB", "isisD13PacketCountPSNP"), ("ISIS-D13-MIB", "isisD13PacketCountUnknown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisD13ISPDUCounterGroup = isisD13ISPDUCounterGroup.setStatus('current')
isisD13RATableGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 7)).setObjects(("ISIS-D13-MIB", "isisD13RAExistState"), ("ISIS-D13-MIB", "isisD13RAAdminState"), ("ISIS-D13-MIB", "isisD13RAAddrPrefix"), ("ISIS-D13-MIB", "isisD13RAMapType"), ("ISIS-D13-MIB", "isisD13RAMetric"), ("ISIS-D13-MIB", "isisD13RAMetricType"), ("ISIS-D13-MIB", "isisD13RASNPAAddress"), ("ISIS-D13-MIB", "isisD13RASNPAMask"), ("ISIS-D13-MIB", "isisD13RASNPAPrefix"), ("ISIS-D13-MIB", "isisD13RAType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisD13RATableGroup = isisD13RATableGroup.setStatus('current')
isisD13ISIPRADestGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 8)).setObjects(("ISIS-D13-MIB", "isisD13IPRANextHopType"), ("ISIS-D13-MIB", "isisD13IPRANextHop"), ("ISIS-D13-MIB", "isisD13IPRAType"), ("ISIS-D13-MIB", "isisD13IPRAExistState"), ("ISIS-D13-MIB", "isisD13IPRAAdminState"), ("ISIS-D13-MIB", "isisD13IPRAMetric"), ("ISIS-D13-MIB", "isisD13IPRAFullMetric"), ("ISIS-D13-MIB", "isisD13IPRAMetricType"), ("ISIS-D13-MIB", "isisD13IPRASNPAAddress"), ("ISIS-D13-MIB", "isisD13IPRASourceType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisD13ISIPRADestGroup = isisD13ISIPRADestGroup.setStatus('current')
isisD13LSPGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 9)).setObjects(("ISIS-D13-MIB", "isisD13LSPSeq"), ("ISIS-D13-MIB", "isisD13LSPZeroLife"), ("ISIS-D13-MIB", "isisD13LSPChecksum"), ("ISIS-D13-MIB", "isisD13LSPLifetimeRemain"), ("ISIS-D13-MIB", "isisD13LSPPDULength"), ("ISIS-D13-MIB", "isisD13LSPAttributes"), ("ISIS-D13-MIB", "isisD13LSPTLVSeq"), ("ISIS-D13-MIB", "isisD13LSPTLVChecksum"), ("ISIS-D13-MIB", "isisD13LSPTLVType"), ("ISIS-D13-MIB", "isisD13LSPTLVLen"), ("ISIS-D13-MIB", "isisD13LSPTLVValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisD13LSPGroup = isisD13LSPGroup.setStatus('current')
mibBuilder.exportSymbols("ISIS-D13-MIB", isisD13ISAdjAreaAddrEntry=isisD13ISAdjAreaAddrEntry, isisD13RedistributeAddrTable=isisD13RedistributeAddrTable, AdminState=AdminState, isisD13ISAdjAreaAddrIndex=isisD13ISAdjAreaAddrIndex, isisD13SysStatSeqNumSkips=isisD13SysStatSeqNumSkips, isisD13RAAddrPrefix=isisD13RAAddrPrefix, isisD13IPRASNPAAddress=isisD13IPRASNPAAddress, isisD13IPRAEntry=isisD13IPRAEntry, isisD13IPRAMetricType=isisD13IPRAMetricType, isisD13Notifications=isisD13Notifications, isisD13RAIndex=isisD13RAIndex, isisD13SysTable=isisD13SysTable, isisD13CircSmallHellos=isisD13CircSmallHellos, isisD13RASNPAAddress=isisD13RASNPAAddress, isisD13VersionSkew=isisD13VersionSkew, isisD13LSPTLVEntry=isisD13LSPTLVEntry, isisD13RouterSysID=isisD13RouterSysID, isisD13CircLevel=isisD13CircLevel, isisD13CircLevelCSNPInterval=isisD13CircLevelCSNPInterval, isisD13PacketCounterEntry=isisD13PacketCounterEntry, SystemID=SystemID, isisD13SummAddrExistState=isisD13SummAddrExistState, isisD13MaxAreaAddressesMismatch=isisD13MaxAreaAddressesMismatch, isisD13LSPGroup=isisD13LSPGroup, isisD13PduProtocolVersion=isisD13PduProtocolVersion, LinkStatePDUID=LinkStatePDUID, isisD13SummAddress=isisD13SummAddress, isisD13SysLevelOrigLSPBuffSize=isisD13SysLevelOrigLSPBuffSize, isisD13SysMaxAge=isisD13SysMaxAge, isisD13SequenceNumberSkip=isisD13SequenceNumberSkip, isisD13SysStatManAddrDropFromAreas=isisD13SysStatManAddrDropFromAreas, isisD13SysAdminState=isisD13SysAdminState, isisD13SysExistState=isisD13SysExistState, isisD13CircuitCounterTable=isisD13CircuitCounterTable, isisD13Circ=isisD13Circ, isisD13SysInstance=isisD13SysInstance, isisD13SysLevelSetOverload=isisD13SysLevelSetOverload, isisD13CircExtendedCircID=isisD13CircExtendedCircID, isisD13CircLevelIDOctet=isisD13CircLevelIDOctet, Unsigned8TC=Unsigned8TC, isisD13PacketCountLevel=isisD13PacketCountLevel, isisD13SysMaxLSPGenInt=isisD13SysMaxLSPGenInt, isisD13RAAdminState=isisD13RAAdminState, isisD13PacketCountISHello=isisD13PacketCountISHello, isisD13CircEntry=isisD13CircEntry, isisD13ISAdjAreaAddress=isisD13ISAdjAreaAddress, isisD13CircLevelISPriority=isisD13CircLevelISPriority, isisD13ISAdj3WayState=isisD13ISAdj3WayState, isisD13RAEntry=isisD13RAEntry, isisD13ProtocolsSupportedMismatch=isisD13ProtocolsSupportedMismatch, isisD13NotificationTable=isisD13NotificationTable, isisD13SystemGroup=isisD13SystemGroup, isisD13IPReachAddr=isisD13IPReachAddr, isisD13CircLevelHelloTimer=isisD13CircLevelHelloTimer, isisD13SysStatLevel=isisD13SysStatLevel, isisD13IPRATable=isisD13IPRATable, LevelState=LevelState, isisD13LSPTLVSeq=isisD13LSPTLVSeq, isisD13PduFieldLen=isisD13PduFieldLen, isisD13IPRADestType=isisD13IPRADestType, isisD13LSPTLVIndex=isisD13LSPTLVIndex, isisD13RouterHostName=isisD13RouterHostName, isisD13SysProtSuppTable=isisD13SysProtSuppTable, isisD13CircType=isisD13CircType, isisD13RejectedAdjacency=isisD13RejectedAdjacency, isisD13SummAddressType=isisD13SummAddressType, MetricType=MetricType, isisD13LSPDataBase=isisD13LSPDataBase, isisD13ISAdjIPAddrIndex=isisD13ISAdjIPAddrIndex, isisD13ISAdjProtSuppProtocol=isisD13ISAdjProtSuppProtocol, SupportedProtocol=SupportedProtocol, isisD13AuthenticationFailure=isisD13AuthenticationFailure, isisD13ISAdjNeighSysID=isisD13ISAdjNeighSysID, isisD13ISPDUCounterGroup=isisD13ISPDUCounterGroup, isisD13RATableGroup=isisD13RATableGroup, isisD13IPRANextHopType=isisD13IPRANextHopType, isisD13AdjacencyChange=isisD13AdjacencyChange, isisD13ISAdjLastUpTime=isisD13ISAdjLastUpTime, isisD13SysStatMaxAreaAddrMismatches=isisD13SysStatMaxAreaAddrMismatches, isisD13LSPLifetimeRemain=isisD13LSPLifetimeRemain, isisD13PacketCountPSNP=isisD13PacketCountPSNP, isisD13RAMapType=isisD13RAMapType, isisD13SystemCounterTable=isisD13SystemCounterTable, isisD13CircMaxAreaAddrMismatches=isisD13CircMaxAreaAddrMismatches, isisD13AreaAddr=isisD13AreaAddr, isisD13SysStatAuthTypeFails=isisD13SysStatAuthTypeFails, isisD13ISAdjIndex=isisD13ISAdjIndex, isisD13RAMetricType=isisD13RAMetricType, isisD13CircLevelValues=isisD13CircLevelValues, FullMetric=FullMetric, isisD13SysLevelSetOverloadUntil=isisD13SysLevelSetOverloadUntil, isisD13LSPTooLargeToPropagate=isisD13LSPTooLargeToPropagate, isisD13ISAdjAreaAddrTable=isisD13ISAdjAreaAddrTable, isisD13RATable=isisD13RATable, isisD13SysStatAuthFails=isisD13SysStatAuthFails, isisD13LSPSeq=isisD13LSPSeq, isisD13DatabaseOverload=isisD13DatabaseOverload, isisD13SysProtSuppProtocol=isisD13SysProtSuppProtocol, OSINSAddress=OSINSAddress, isisD13IPRADest=isisD13IPRADest, isisD13PduOriginatingBufferSize=isisD13PduOriginatingBufferSize, isisD13SummAddrTable=isisD13SummAddrTable, isisD13PduProtocolsSupported=isisD13PduProtocolsSupported, isisD13SysWaitTime=isisD13SysWaitTime, isisD13CircIDFieldLenMismatches=isisD13CircIDFieldLenMismatches, isisD13LSPTLVChecksum=isisD13LSPTLVChecksum, isisD13Counters=isisD13Counters, isisD13LSPSummaryTable=isisD13LSPSummaryTable, isisD13OwnLSPPurge=isisD13OwnLSPPurge, isisD13SysLevelIndex=isisD13SysLevelIndex, isisD13CircMeshGroup=isisD13CircMeshGroup, isisD13SysL2toL1Leaking=isisD13SysL2toL1Leaking, isisD13CircPassiveCircuit=isisD13CircPassiveCircuit, isisD13OrigLSPBuffSizeMismatch=isisD13OrigLSPBuffSizeMismatch, isisD13CircLevelMetric=isisD13CircLevelMetric, isisD13RASNPAPrefix=isisD13RASNPAPrefix, isisD13CircLevelDesIS=isisD13CircLevelDesIS, isisD13ISIPRADestGroup=isisD13ISIPRADestGroup, isisD13SysID=isisD13SysID, isisD13ISAdjTable=isisD13ISAdjTable, isisD13Objects=isisD13Objects, isisD13CircTable=isisD13CircTable, isisD13SysPollESHelloRate=isisD13SysPollESHelloRate, isisD13ISAdjProtSuppEntry=isisD13ISAdjProtSuppEntry, isisD13IDLenMismatch=isisD13IDLenMismatch, isisD13SysLevel=isisD13SysLevel, isisD13ISAdjNeighPriority=isisD13ISAdjNeighPriority, isisD13PacketCountLSP=isisD13PacketCountLSP, isisD13CircIfSubIndex=isisD13CircIfSubIndex, isisD13PduLspId=isisD13PduLspId, isisD13CircLevelIndex=isisD13CircLevelIndex, isisD13SysLevelTable=isisD13SysLevelTable, isisD13CircNumAdj=isisD13CircNumAdj, isisD13ISAdjUsage=isisD13ISAdjUsage, isisD13ISAdjIPAddressType=isisD13ISAdjIPAddressType, isisD13PduLspSize=isisD13PduLspSize, isisD13CircIfIndex=isisD13CircIfIndex, isisD13SysType=isisD13SysType, isisD13ISAdjHoldTimer=isisD13ISAdjHoldTimer, isisD13RAType=isisD13RAType, isisD13PacketCounterTable=isisD13PacketCounterTable, DefaultMetric=DefaultMetric, ISLevel=ISLevel, isisD13SysStatPartChanges=isisD13SysStatPartChanges, isisD13PacketCountIIHello=isisD13PacketCountIIHello, isisD13PacketCountESHello=isisD13PacketCountESHello, isisD13NotificationObjectGroup=isisD13NotificationObjectGroup, isisD13IPRADestPrefixLen=isisD13IPRADestPrefixLen, isisD13RedistributeAddrExistState=isisD13RedistributeAddrExistState, isisD13RedistributeAddrType=isisD13RedistributeAddrType, isisD13LSPTLVValue=isisD13LSPTLVValue, isisD13Notification=isisD13Notification, isisD13CircRejAdjs=isisD13CircRejAdjs, isisD13CircAuthFails=isisD13CircAuthFails, isisD13ISAdjState=isisD13ISAdjState, isisD13NotificationGroup=isisD13NotificationGroup, isisD13RedistributeAddrPrefixLen=isisD13RedistributeAddrPrefixLen, isisD13RouterEntry=isisD13RouterEntry, isisD13CircLevelDRHelloTimer=isisD13CircLevelDRHelloTimer, isisD13CircLevelMinLSPRetransInt=isisD13CircLevelMinLSPRetransInt, isisD13IPRAType=isisD13IPRAType, isisD13MIB=isisD13MIB, LSPBuffSize=LSPBuffSize, isisD13ManAreaAddrTable=isisD13ManAreaAddrTable, isisD13SysMaxPathSplits=isisD13SysMaxPathSplits, isisD13CircMeshGroupEnabled=isisD13CircMeshGroupEnabled, isisD13Circ3WayEnabled=isisD13Circ3WayEnabled, isisD13SysProtSuppExistState=isisD13SysProtSuppExistState, isisD13SystemCounterEntry=isisD13SystemCounterEntry, isisD13ISAdjProtSuppTable=isisD13ISAdjProtSuppTable, isisD13IPRAAdminState=isisD13IPRAAdminState, isisD13LSPSummaryEntry=isisD13LSPSummaryEntry, isisD13PacketCountUnknown=isisD13PacketCountUnknown, isisD13CircIndex=isisD13CircIndex, isisD13ISAdjIPAddrTable=isisD13ISAdjIPAddrTable, PYSNMP_MODULE_ID=isisD13MIB, isisD13SysLevelMetricStyle=isisD13SysLevelMetricStyle, isisD13CircAdminState=isisD13CircAdminState, isisD13CircExistState=isisD13CircExistState, isisD13SysLevelSPFConsiders=isisD13SysLevelSPFConsiders, isisD13CircExtDomain=isisD13CircExtDomain, isisD13CircLevelHelloMultiplier=isisD13CircLevelHelloMultiplier, isisD13CircuitCounterEntry=isisD13CircuitCounterEntry, isisD13SysLevelOverloadState=isisD13SysLevelOverloadState, isisD13CircLANDesISChanges=isisD13CircLANDesISChanges, isisD13ISAdjNbrExtendedCircID=isisD13ISAdjNbrExtendedCircID, isisD13RAMetric=isisD13RAMetric, isisD13AdjState=isisD13AdjState, isisD13AreaAddrEntry=isisD13AreaAddrEntry, isisD13CircAuthTypeFails=isisD13CircAuthTypeFails, isisD13SysStatLSPDbaseOloads=isisD13SysStatLSPDbaseOloads, isisD13LSPZeroLife=isisD13LSPZeroLife, isisD13SysStatIDFieldLenMismatches=isisD13SysStatIDFieldLenMismatches, isisD13ISAdjIPAddress=isisD13ISAdjIPAddress, isisD13CircLevelWideMetric=isisD13CircLevelWideMetric, isisD13LSPTLVLen=isisD13LSPTLVLen, isisD13SummAddrFullMetric=isisD13SummAddrFullMetric, ISPriority=ISPriority, isisD13CorruptedLSPDetected=isisD13CorruptedLSPDetected, isisD13IPRAMetric=isisD13IPRAMetric, isisD13RouterID=isisD13RouterID, isisD13ISAdjNeighSNPAAddress=isisD13ISAdjNeighSNPAAddress, isisD13PduMaxAreaAddress=isisD13PduMaxAreaAddress, isisD13AttemptToExceedMaxSequence=isisD13AttemptToExceedMaxSequence, isisD13ManAreaAddr=isisD13ManAreaAddr, isisD13ISAdj=isisD13ISAdj, isisD13CircLevelPartSNPInterval=isisD13CircLevelPartSNPInterval, isisD13SummAddrPrefixLen=isisD13SummAddrPrefixLen, isisD13SysLevelEntry=isisD13SysLevelEntry, isisD13PacketCountCSNP=isisD13PacketCountCSNP, isisD13SysVersion=isisD13SysVersion, isisD13IPRASourceType=isisD13IPRASourceType, isisD13CircLevelTable=isisD13CircLevelTable, isisD13SysProtSuppEntry=isisD13SysProtSuppEntry, isisD13RASNPAMask=isisD13RASNPAMask, isisD13TrapPrefix=isisD13TrapPrefix, isisD13RedistributeAddrEntry=isisD13RedistributeAddrEntry, isisD13SummAddrMetric=isisD13SummAddrMetric, isisD13SysReceiveLSPBufferSize=isisD13SysReceiveLSPBufferSize, isisD13ISAdjIPAddrEntry=isisD13ISAdjIPAddrEntry, isisD13CircAdjChanges=isisD13CircAdjChanges, isisD13SysLevelTEEnabled=isisD13SysLevelTEEnabled, isisD13SysEntry=isisD13SysEntry, isisD13CircInitFails=isisD13CircInitFails, isisD13ISAdjNeighSysType=isisD13ISAdjNeighSysType, isisD13LSPID=isisD13LSPID, isisD13LSPPDULength=isisD13LSPPDULength, isisD13LSPTLVType=isisD13LSPTLVType, isisD13NotificationEntry=isisD13NotificationEntry, isisD13AreaMismatch=isisD13AreaMismatch, isisD13ISAdjGroup=isisD13ISAdjGroup, isisD13CircLevelID=isisD13CircLevelID, isisD13IPRAFullMetric=isisD13IPRAFullMetric, isisD13ISAdjEntry=isisD13ISAdjEntry, isisD13CircuitGroup=isisD13CircuitGroup, isisD13AreaAddrTable=isisD13AreaAddrTable, isisD13ManAreaAddrEntry=isisD13ManAreaAddrEntry, isisD13AuthenticationTypeFailure=isisD13AuthenticationTypeFailure, MetricStyle=MetricStyle, isisD13RedistributeAddrAddress=isisD13RedistributeAddrAddress, isisD13CircLevelLSPThrottle=isisD13CircLevelLSPThrottle, isisD13SysNextCircIndex=isisD13SysNextCircIndex, isisD13SysLogAdjacencyChanges=isisD13SysLogAdjacencyChanges, isisD13Compliances=isisD13Compliances, isisD13SysStatOwnLSPPurges=isisD13SysStatOwnLSPPurges, isisD13IPRANextHop=isisD13IPRANextHop, isisD13CircLevelEntry=isisD13CircLevelEntry, isisD13Conformance=isisD13Conformance, isisD13RAExistState=isisD13RAExistState, isisD13PduRemoteRouterID=isisD13PduRemoteRouterID, isisD13Compliance=isisD13Compliance, isisD13Groups=isisD13Groups, isisD13SysStatSPFRuns=isisD13SysStatSPFRuns, isisD13ManAreaAddrExistState=isisD13ManAreaAddrExistState)
mibBuilder.exportSymbols("ISIS-D13-MIB", isisD13ReachAddr=isisD13ReachAddr, isisD13RouterTable=isisD13RouterTable, isisD13SysStatCorrLSPs=isisD13SysStatCorrLSPs, CircuitID=CircuitID, isisD13System=isisD13System, isisD13IPRAExistState=isisD13IPRAExistState, isisD13CircuitType=isisD13CircuitType, WideMetric=WideMetric, isisD13AdvancedCompliance=isisD13AdvancedCompliance, isisD13LSPLevel=isisD13LSPLevel, isisD13PacketCountDirection=isisD13PacketCountDirection, isisD13RouterLevel=isisD13RouterLevel, isisD13SysLevelMinLSPGenInt=isisD13SysLevelMinLSPGenInt, isisD13CircLastUpTime=isisD13CircLastUpTime, isisD13LSPAttributes=isisD13LSPAttributes, isisD13SysStatAttmptToExMaxSeqNums=isisD13SysStatAttmptToExMaxSeqNums, Unsigned16TC=Unsigned16TC, isisD13SummAddrEntry=isisD13SummAddrEntry, isisD13PduFragment=isisD13PduFragment, isisD13LSPTLVTable=isisD13LSPTLVTable, IsisPDUHeader=IsisPDUHeader, isisD13ManualAddressDrops=isisD13ManualAddressDrops, isisD13LSPChecksum=isisD13LSPChecksum)
