#
# PySNMP MIB module SAF-INTEGRAW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/saf/SAF-INTEGRAW-MIB
# Produced by pysmi-1.1.12 at Sat Jul  6 01:13:34 2024
# On host fv-az1532-138 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
pointToPoint, = mibBuilder.importSymbols("SAF-ENTERPRISE", "pointToPoint")
safIntegra, = mibBuilder.importSymbols("SAF-INTEGRA-MIB", "safIntegra")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Gauge32, ModuleIdentity, IpAddress, Bits, Integer32, Unsigned32, iso, Counter64, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "IpAddress", "Bits", "Integer32", "Unsigned32", "iso", "Counter64", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32", "TimeTicks")
TextualConvention, DisplayString, PhysAddress, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "PhysAddress", "DateAndTime")
integraW = ModuleIdentity((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2))
integraW.setRevisions(('2016-05-11 00:00', '2015-09-17 00:00', '2015-09-15 00:00', '2015-08-12 00:00', '2015-07-29 00:00', '2015-05-29 00:00', '2015-05-20 00:00', '2015-04-21 00:00', '2015-04-14 00:00', '2015-03-24 00:00', '2015-02-04 00:00', '2015-01-20 00:00', '2015-01-08 00:00', '2015-01-06 00:00',))
if mibBuilder.loadTexts: integraW.setLastUpdated('201605110000Z')
if mibBuilder.loadTexts: integraW.setOrganization('SAF Tehnika')
integraWtimestamp = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtimestamp.setStatus('current')
integraWradio = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2))
integraWradioTxPower = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 1), Integer32()).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraWradioTxPower.setStatus('current')
integraWradioTxFrequency = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 2), Integer32()).setUnits('kHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraWradioTxFrequency.setStatus('current')
integraWradioRxLevel = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 3), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioRxLevel.setStatus('current')
integraWradioSide = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("high", 1), ("low", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioSide.setStatus('current')
integraWradioTxMute = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioTxMute.setStatus('current')
integraWradioDuplexShift = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 6), Integer32()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioDuplexShift.setStatus('current')
integraWradioRxFrequency = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 7), Integer32()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioRxFrequency.setStatus('current')
integraWradioTemperature = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 8), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioTemperature.setStatus('current')
integraWradioTxMuteDuration = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 214748364))).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraWradioTxMuteDuration.setStatus('current')
integraWradioRangesTable = MibTable((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 10), )
if mibBuilder.loadTexts: integraWradioRangesTable.setStatus('current')
integraWradioRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 10, 1), ).setIndexNames((0, "SAF-INTEGRAW-MIB", "integraWradioRangeEntryIndex"))
if mibBuilder.loadTexts: integraWradioRangeEntry.setStatus('current')
integraWradioRangeEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioRangeEntryIndex.setStatus('current')
integraWradioRangeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioRangeDescr.setStatus('current')
integraWradioRangeTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 10, 1, 3), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioRangeTxPower.setStatus('current')
integraWradioRangeTxFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 10, 1, 4), Integer32()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioRangeTxFrequency.setStatus('current')
integraWradioPLL = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("error", 1), ("ok", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioPLL.setStatus('current')
integraWradioRxLevelState = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 1), ("low", 2), ("high", 3), ("error", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWradioRxLevelState.setStatus('current')
integraWmodem = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3))
integraWmodemAcquireStatus = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("acquireInProgress", 1), ("acquireLocked", 2), ("acquireFailed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemAcquireStatus.setStatus('current')
integraWmodemMse = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 2), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemMse.setStatus('current')
integraWmodemFecLoad = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemFecLoad.setStatus('current')
integraWmodemSyncLoss = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("locked", 1), ("unlocked", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemSyncLoss.setStatus('current')
integraWmodemBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 6), Integer32()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemBandwidth.setStatus('current')
integraWmodemModulation = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemModulation.setStatus('current')
integraWmodemRxModulation = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemRxModulation.setStatus('current')
integraWmodemTxModulation = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemTxModulation.setStatus('current')
integraWmodemRxCapacity = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 10), Integer32()).setUnits('kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemRxCapacity.setStatus('current')
integraWmodemTxCapacity = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 11), Integer32()).setUnits('kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemTxCapacity.setStatus('current')
integraWmodemAcmEngine = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemAcmEngine.setStatus('current')
integraWmodemSignalQuality = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 3, 14), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWmodemSignalQuality.setStatus('current')
integraWsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 4))
integraWsysCPUtemperature = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 4, 2), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWsysCPUtemperature.setStatus('current')
integraWsysLicenseExpire = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 4, 3), Gauge32()).setUnits('s').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWsysLicenseExpire.setStatus('current')
integraWsysLicenseGenStatus = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 1), ("expired", 2), ("unknown", 3), ("unlimitedTime", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWsysLicenseGenStatus.setStatus('current')
integraWsysPSUvoltage = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 4, 5), Integer32()).setUnits('mV').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWsysPSUvoltage.setStatus('current')
integraWsysPSUcurrent = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 4, 6), Integer32()).setUnits('mA').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWsysPSUcurrent.setStatus('current')
integraWsysPSUpower = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 4, 7), Integer32()).setUnits('mW').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWsysPSUpower.setStatus('current')
integraWsysBoardTemperature = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 4, 8), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWsysBoardTemperature.setStatus('current')
integraWsysFreeMemory = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 4, 9), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWsysFreeMemory.setStatus('current')
integraWsysCPUidle = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 4, 10), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWsysCPUidle.setStatus('current')
integraWethernet = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5))
integraWifStatusTable = MibTable((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1), )
if mibBuilder.loadTexts: integraWifStatusTable.setStatus('current')
integraWifPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1), ).setIndexNames((0, "SAF-INTEGRAW-MIB", "integraWifPortStatIndex"))
if mibBuilder.loadTexts: integraWifPortEntry.setStatus('current')
integraWifPortStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortStatIndex.setStatus('current')
integraWifPortStatDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortStatDescr.setStatus('current')
integraWifPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 3), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortType.setStatus('current')
integraWifPortMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 4), Integer32()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortMtu.setStatus('current')
integraWifPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 5), Gauge32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortSpeed.setStatus('current')
integraWifPortPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 6), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortPhysAddress.setStatus('current')
integraWifPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortAdminStatus.setStatus('current')
integraWifPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortOperStatus.setStatus('current')
integraWifPortLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortLastChange.setStatus('current')
integraWifPortAutoneg = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortAutoneg.setStatus('current')
integraWifPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("full", 1), ("half", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortDuplex.setStatus('current')
integraWifPortSyncEthActive = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortSyncEthActive.setStatus('current')
integraWifPortSyncEthPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortSyncEthPrio.setStatus('current')
integraWifPortFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortFlowControl.setStatus('current')
integraWifStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2), )
if mibBuilder.loadTexts: integraWifStatisticsTable.setStatus('current')
integraWifPortStcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1), ).setIndexNames((0, "SAF-INTEGRAW-MIB", "integraWifPortStcIndex"))
if mibBuilder.loadTexts: integraWifPortStcEntry.setStatus('current')
integraWifPortStcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortStcIndex.setStatus('current')
integraWifPortStcDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifPortStcDescr.setStatus('current')
integraWifTimePassed = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 3), TimeTicks()).setUnits('s/100').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWifTimePassed.setStatus('current')
integraWrxDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 4), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxDetected.setStatus('current')
integraWrxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 5), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxDropped.setStatus('current')
integraWtxDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 6), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxDetected.setStatus('current')
integraWtxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 7), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxDropped.setStatus('current')
integraWrxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 8), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxBytes.setStatus('current')
integraWtxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 9), Counter64()).setUnits('B').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxBytes.setStatus('current')
integraWrx64Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 10), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrx64Frames.setStatus('current')
integraWrx65to127Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 11), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrx65to127Frames.setStatus('current')
integraWrx128to255Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 12), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrx128to255Frames.setStatus('current')
integraWrx256to511Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 13), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrx256to511Frames.setStatus('current')
integraWrx512to1023Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 14), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrx512to1023Frames.setStatus('current')
integraWrx1024toMaxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 15), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrx1024toMaxFrames.setStatus('current')
integraWrxUsizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 16), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxUsizeFrames.setStatus('current')
integraWrxOsizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 17), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxOsizeFrames.setStatus('current')
integraWtx64Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 18), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtx64Frames.setStatus('current')
integraWtx65to127Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 19), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtx65to127Frames.setStatus('current')
integraWtx128to255Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 20), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtx128to255Frames.setStatus('current')
integraWtx256to511Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 21), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtx256to511Frames.setStatus('current')
integraWtx512to1023Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 22), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtx512to1023Frames.setStatus('current')
integraWtx1024toMaxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 23), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtx1024toMaxFrames.setStatus('current')
integraWtxUsizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 24), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxUsizeFrames.setStatus('current')
integraWtxOsizeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 25), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxOsizeFrames.setStatus('current')
integraWrxGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 26), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxGoodFrames.setStatus('current')
integraWrxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 27), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxErrors.setStatus('current')
integraWrxFifoErr = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 28), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxFifoErr.setStatus('current')
integraWrxCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 29), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxCRCErrors.setStatus('current')
integraWrxBcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 30), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxBcastFrames.setStatus('current')
integraWrxMcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 31), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxMcastFrames.setStatus('current')
integraWrxCntrlFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 32), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxCntrlFrames.setStatus('current')
integraWrxLenErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 33), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxLenErrors.setStatus('current')
integraWrxVlanFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 34), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxVlanFrames.setStatus('current')
integraWrxPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 35), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxPauseFrames.setStatus('current')
integraWrxOpErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 36), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxOpErrors.setStatus('current')
integraWrxFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 37), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWrxFrameErrors.setStatus('current')
integraWtxGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 38), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxGoodFrames.setStatus('current')
integraWtxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 39), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxErrors.setStatus('current')
integraWtxFifoErr = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 40), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxFifoErr.setStatus('current')
integraWtxBcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 41), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxBcastFrames.setStatus('current')
integraWtxMcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 42), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxMcastFrames.setStatus('current')
integraWtxUrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 43), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxUrunErrors.setStatus('current')
integraWtxCntrlFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 44), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxCntrlFrames.setStatus('current')
integraWtxVlanFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 45), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxVlanFrames.setStatus('current')
integraWtxPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 46), Counter64()).setUnits('frame').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxPauseFrames.setStatus('current')
integraWtxSingleCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 47), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxSingleCollisions.setStatus('current')
integraWtxMultiCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 48), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxMultiCollisions.setStatus('current')
integraWtxDeferred = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 49), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxDeferred.setStatus('current')
integraWtxLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 50), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxLateCollisions.setStatus('current')
integraWtxExcessCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 51), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxExcessCollisions.setStatus('current')
integraWtxExcessDeferral = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 52), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxExcessDeferral.setStatus('current')
integraWtxAlignErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 53), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxAlignErrors.setStatus('current')
integraWtxCarrierErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 54), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxCarrierErrors.setStatus('current')
integraWtxCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 5, 2, 1, 55), Counter64()).setUnits('packet').setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWtxCollisions.setStatus('current')
integraWexecuteConfig = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("execute", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraWexecuteConfig.setStatus('current')
integraWneedStore = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWneedStore.setStatus('current')
integraWstoreConfig = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("store", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraWstoreConfig.setStatus('current')
integraWnetCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 9))
integraWnetCfgIPaddress = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 9, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraWnetCfgIPaddress.setStatus('current')
integraWnetCfgIPmask = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 9, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraWnetCfgIPmask.setStatus('current')
integraWnetCfgIPgateway = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 9, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: integraWnetCfgIPgateway.setStatus('current')
integraWnetCfgRemoteIPaddress = MibScalar((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 9, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: integraWnetCfgRemoteIPaddress.setStatus('current')
integraWConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 10))
integraWCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 10, 1))
integraWCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 10, 1, 1)).setObjects(("SAF-INTEGRAW-MIB", "integraWMiscGroup"), ("SAF-INTEGRAW-MIB", "integraWRadioGroup"), ("SAF-INTEGRAW-MIB", "integraWModemGroup"), ("SAF-INTEGRAW-MIB", "integraWSystemGroup"), ("SAF-INTEGRAW-MIB", "integraWEthernetGeneralGroup"), ("SAF-INTEGRAW-MIB", "integraWEthernetMiiPortGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraWCompliance = integraWCompliance.setStatus('current')
integraWGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 10, 2))
integraWMiscGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 10, 2, 1)).setObjects(("SAF-INTEGRAW-MIB", "integraWtimestamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraWMiscGroup = integraWMiscGroup.setStatus('current')
integraWRadioGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 10, 2, 2)).setObjects(("SAF-INTEGRAW-MIB", "integraWradioTxPower"), ("SAF-INTEGRAW-MIB", "integraWradioTxFrequency"), ("SAF-INTEGRAW-MIB", "integraWradioRxLevel"), ("SAF-INTEGRAW-MIB", "integraWradioSide"), ("SAF-INTEGRAW-MIB", "integraWradioTxMute"), ("SAF-INTEGRAW-MIB", "integraWradioDuplexShift"), ("SAF-INTEGRAW-MIB", "integraWradioRxFrequency"), ("SAF-INTEGRAW-MIB", "integraWradioTemperature"), ("SAF-INTEGRAW-MIB", "integraWradioTxMuteDuration"), ("SAF-INTEGRAW-MIB", "integraWradioRangeEntryIndex"), ("SAF-INTEGRAW-MIB", "integraWradioRangeDescr"), ("SAF-INTEGRAW-MIB", "integraWradioRangeTxPower"), ("SAF-INTEGRAW-MIB", "integraWradioRangeTxFrequency"), ("SAF-INTEGRAW-MIB", "integraWradioPLL"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraWRadioGroup = integraWRadioGroup.setStatus('current')
integraWModemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 10, 2, 3)).setObjects(("SAF-INTEGRAW-MIB", "integraWmodemAcquireStatus"), ("SAF-INTEGRAW-MIB", "integraWmodemMse"), ("SAF-INTEGRAW-MIB", "integraWmodemFecLoad"), ("SAF-INTEGRAW-MIB", "integraWmodemSyncLoss"), ("SAF-INTEGRAW-MIB", "integraWmodemBandwidth"), ("SAF-INTEGRAW-MIB", "integraWmodemModulation"), ("SAF-INTEGRAW-MIB", "integraWmodemRxModulation"), ("SAF-INTEGRAW-MIB", "integraWmodemTxModulation"), ("SAF-INTEGRAW-MIB", "integraWmodemRxCapacity"), ("SAF-INTEGRAW-MIB", "integraWmodemTxCapacity"), ("SAF-INTEGRAW-MIB", "integraWmodemAcmEngine"), ("SAF-INTEGRAW-MIB", "integraWmodemSignalQuality"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraWModemGroup = integraWModemGroup.setStatus('current')
integraWSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 10, 2, 4)).setObjects(("SAF-INTEGRAW-MIB", "integraWsysCPUtemperature"), ("SAF-INTEGRAW-MIB", "integraWsysLicenseExpire"), ("SAF-INTEGRAW-MIB", "integraWsysLicenseGenStatus"), ("SAF-INTEGRAW-MIB", "integraWsysPSUvoltage"), ("SAF-INTEGRAW-MIB", "integraWsysPSUcurrent"), ("SAF-INTEGRAW-MIB", "integraWsysPSUpower"), ("SAF-INTEGRAW-MIB", "integraWsysBoardTemperature"), ("SAF-INTEGRAW-MIB", "integraWsysFreeMemory"), ("SAF-INTEGRAW-MIB", "integraWsysCPUidle"), ("SAF-INTEGRAW-MIB", "integraWexecuteConfig"), ("SAF-INTEGRAW-MIB", "integraWneedStore"), ("SAF-INTEGRAW-MIB", "integraWstoreConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraWSystemGroup = integraWSystemGroup.setStatus('current')
integraWEthernetGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 10, 2, 5)).setObjects(("SAF-INTEGRAW-MIB", "integraWifPortStatIndex"), ("SAF-INTEGRAW-MIB", "integraWifPortStatDescr"), ("SAF-INTEGRAW-MIB", "integraWifPortType"), ("SAF-INTEGRAW-MIB", "integraWifPortMtu"), ("SAF-INTEGRAW-MIB", "integraWifPortSpeed"), ("SAF-INTEGRAW-MIB", "integraWifPortPhysAddress"), ("SAF-INTEGRAW-MIB", "integraWifPortAdminStatus"), ("SAF-INTEGRAW-MIB", "integraWifPortOperStatus"), ("SAF-INTEGRAW-MIB", "integraWifPortLastChange"), ("SAF-INTEGRAW-MIB", "integraWifPortAutoneg"), ("SAF-INTEGRAW-MIB", "integraWifPortDuplex"), ("SAF-INTEGRAW-MIB", "integraWifPortSyncEthActive"), ("SAF-INTEGRAW-MIB", "integraWifPortSyncEthPrio"), ("SAF-INTEGRAW-MIB", "integraWifPortFlowControl"), ("SAF-INTEGRAW-MIB", "integraWifPortStcIndex"), ("SAF-INTEGRAW-MIB", "integraWifPortStcDescr"), ("SAF-INTEGRAW-MIB", "integraWifTimePassed"), ("SAF-INTEGRAW-MIB", "integraWnetCfgIPaddress"), ("SAF-INTEGRAW-MIB", "integraWnetCfgIPmask"), ("SAF-INTEGRAW-MIB", "integraWnetCfgIPgateway"), ("SAF-INTEGRAW-MIB", "integraWnetCfgRemoteIPaddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraWEthernetGeneralGroup = integraWEthernetGeneralGroup.setStatus('current')
integraWEthernetMiiPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7571, 100, 1, 1, 7, 2, 10, 2, 6)).setObjects(("SAF-INTEGRAW-MIB", "integraWrxDetected"), ("SAF-INTEGRAW-MIB", "integraWrxDropped"), ("SAF-INTEGRAW-MIB", "integraWtxDetected"), ("SAF-INTEGRAW-MIB", "integraWtxDropped"), ("SAF-INTEGRAW-MIB", "integraWrxBytes"), ("SAF-INTEGRAW-MIB", "integraWtxBytes"), ("SAF-INTEGRAW-MIB", "integraWrx64Frames"), ("SAF-INTEGRAW-MIB", "integraWrx65to127Frames"), ("SAF-INTEGRAW-MIB", "integraWrx128to255Frames"), ("SAF-INTEGRAW-MIB", "integraWrx256to511Frames"), ("SAF-INTEGRAW-MIB", "integraWrx512to1023Frames"), ("SAF-INTEGRAW-MIB", "integraWrx1024toMaxFrames"), ("SAF-INTEGRAW-MIB", "integraWrxUsizeFrames"), ("SAF-INTEGRAW-MIB", "integraWrxOsizeFrames"), ("SAF-INTEGRAW-MIB", "integraWtx64Frames"), ("SAF-INTEGRAW-MIB", "integraWtx65to127Frames"), ("SAF-INTEGRAW-MIB", "integraWtx128to255Frames"), ("SAF-INTEGRAW-MIB", "integraWtx256to511Frames"), ("SAF-INTEGRAW-MIB", "integraWtx512to1023Frames"), ("SAF-INTEGRAW-MIB", "integraWtx1024toMaxFrames"), ("SAF-INTEGRAW-MIB", "integraWtxUsizeFrames"), ("SAF-INTEGRAW-MIB", "integraWtxOsizeFrames"), ("SAF-INTEGRAW-MIB", "integraWrxGoodFrames"), ("SAF-INTEGRAW-MIB", "integraWrxErrors"), ("SAF-INTEGRAW-MIB", "integraWrxFifoErr"), ("SAF-INTEGRAW-MIB", "integraWrxCRCErrors"), ("SAF-INTEGRAW-MIB", "integraWrxBcastFrames"), ("SAF-INTEGRAW-MIB", "integraWrxMcastFrames"), ("SAF-INTEGRAW-MIB", "integraWrxCntrlFrames"), ("SAF-INTEGRAW-MIB", "integraWrxLenErrors"), ("SAF-INTEGRAW-MIB", "integraWrxVlanFrames"), ("SAF-INTEGRAW-MIB", "integraWrxPauseFrames"), ("SAF-INTEGRAW-MIB", "integraWrxOpErrors"), ("SAF-INTEGRAW-MIB", "integraWrxFrameErrors"), ("SAF-INTEGRAW-MIB", "integraWtxGoodFrames"), ("SAF-INTEGRAW-MIB", "integraWtxErrors"), ("SAF-INTEGRAW-MIB", "integraWtxFifoErr"), ("SAF-INTEGRAW-MIB", "integraWtxBcastFrames"), ("SAF-INTEGRAW-MIB", "integraWtxMcastFrames"), ("SAF-INTEGRAW-MIB", "integraWtxUrunErrors"), ("SAF-INTEGRAW-MIB", "integraWtxCntrlFrames"), ("SAF-INTEGRAW-MIB", "integraWtxVlanFrames"), ("SAF-INTEGRAW-MIB", "integraWtxPauseFrames"), ("SAF-INTEGRAW-MIB", "integraWtxSingleCollisions"), ("SAF-INTEGRAW-MIB", "integraWtxMultiCollisions"), ("SAF-INTEGRAW-MIB", "integraWtxDeferred"), ("SAF-INTEGRAW-MIB", "integraWtxLateCollisions"), ("SAF-INTEGRAW-MIB", "integraWtxExcessCollisions"), ("SAF-INTEGRAW-MIB", "integraWtxExcessDeferral"), ("SAF-INTEGRAW-MIB", "integraWtxAlignErrors"), ("SAF-INTEGRAW-MIB", "integraWtxCarrierErrors"), ("SAF-INTEGRAW-MIB", "integraWtxCollisions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    integraWEthernetMiiPortGroup = integraWEthernetMiiPortGroup.setStatus('current')
mibBuilder.exportSymbols("SAF-INTEGRAW-MIB", integraWEthernetMiiPortGroup=integraWEthernetMiiPortGroup, integraWrx512to1023Frames=integraWrx512to1023Frames, integraWtxAlignErrors=integraWtxAlignErrors, integraWmodemModulation=integraWmodemModulation, integraWrx65to127Frames=integraWrx65to127Frames, integraWifStatusTable=integraWifStatusTable, integraWradioTemperature=integraWradioTemperature, integraWrx256to511Frames=integraWrx256to511Frames, integraWmodemSyncLoss=integraWmodemSyncLoss, integraWmodemSignalQuality=integraWmodemSignalQuality, integraWModemGroup=integraWModemGroup, integraWradioTxMute=integraWradioTxMute, integraWmodemMse=integraWmodemMse, integraWifPortStatIndex=integraWifPortStatIndex, integraWsysPSUcurrent=integraWsysPSUcurrent, integraWifPortOperStatus=integraWifPortOperStatus, integraWsysBoardTemperature=integraWsysBoardTemperature, integraWtxUrunErrors=integraWtxUrunErrors, integraWifPortType=integraWifPortType, integraWmodemBandwidth=integraWmodemBandwidth, integraWtxMcastFrames=integraWtxMcastFrames, integraWtx256to511Frames=integraWtx256to511Frames, integraWethernet=integraWethernet, integraWrxOsizeFrames=integraWrxOsizeFrames, integraWtxExcessDeferral=integraWtxExcessDeferral, integraWtxVlanFrames=integraWtxVlanFrames, integraWsysCPUidle=integraWsysCPUidle, integraWmodemAcmEngine=integraWmodemAcmEngine, integraWradioDuplexShift=integraWradioDuplexShift, integraWradioRangeEntry=integraWradioRangeEntry, integraWradioRxLevelState=integraWradioRxLevelState, integraWtxDeferred=integraWtxDeferred, integraWifPortStcEntry=integraWifPortStcEntry, integraWnetCfgIPmask=integraWnetCfgIPmask, integraWtx512to1023Frames=integraWtx512to1023Frames, integraWsystem=integraWsystem, integraWtxDropped=integraWtxDropped, integraWrxCntrlFrames=integraWrxCntrlFrames, integraWradioTxPower=integraWradioTxPower, integraWrxMcastFrames=integraWrxMcastFrames, integraWradioPLL=integraWradioPLL, integraWtx1024toMaxFrames=integraWtx1024toMaxFrames, integraWrxBytes=integraWrxBytes, integraWtxBcastFrames=integraWtxBcastFrames, integraWifPortStcDescr=integraWifPortStcDescr, integraWtxDetected=integraWtxDetected, integraWsysPSUvoltage=integraWsysPSUvoltage, integraWtxUsizeFrames=integraWtxUsizeFrames, integraWrxUsizeFrames=integraWrxUsizeFrames, PYSNMP_MODULE_ID=integraW, integraWtxPauseFrames=integraWtxPauseFrames, integraWnetCfgIPgateway=integraWnetCfgIPgateway, integraWifPortSpeed=integraWifPortSpeed, integraWradioTxFrequency=integraWradioTxFrequency, integraWifPortStcIndex=integraWifPortStcIndex, integraWrxPauseFrames=integraWrxPauseFrames, integraWmodemRxCapacity=integraWmodemRxCapacity, integraWrxFifoErr=integraWrxFifoErr, integraWtxExcessCollisions=integraWtxExcessCollisions, integraWmodemTxModulation=integraWmodemTxModulation, integraWrxDetected=integraWrxDetected, integraWrxCRCErrors=integraWrxCRCErrors, integraW=integraW, integraWSystemGroup=integraWSystemGroup, integraWradioRxFrequency=integraWradioRxFrequency, integraWrx64Frames=integraWrx64Frames, integraWtxCarrierErrors=integraWtxCarrierErrors, integraWEthernetGeneralGroup=integraWEthernetGeneralGroup, integraWrxFrameErrors=integraWrxFrameErrors, integraWrxErrors=integraWrxErrors, integraWifPortLastChange=integraWifPortLastChange, integraWrxVlanFrames=integraWrxVlanFrames, integraWradioRxLevel=integraWradioRxLevel, integraWradioSide=integraWradioSide, integraWtxFifoErr=integraWtxFifoErr, integraWradioRangeDescr=integraWradioRangeDescr, integraWnetCfgRemoteIPaddress=integraWnetCfgRemoteIPaddress, integraWmodemTxCapacity=integraWmodemTxCapacity, integraWifPortSyncEthPrio=integraWifPortSyncEthPrio, integraWRadioGroup=integraWRadioGroup, integraWifPortPhysAddress=integraWifPortPhysAddress, integraWtxSingleCollisions=integraWtxSingleCollisions, integraWsysCPUtemperature=integraWsysCPUtemperature, integraWGroups=integraWGroups, integraWCompliance=integraWCompliance, integraWsysLicenseExpire=integraWsysLicenseExpire, integraWrxLenErrors=integraWrxLenErrors, integraWtxGoodFrames=integraWtxGoodFrames, integraWifPortStatDescr=integraWifPortStatDescr, integraWtxLateCollisions=integraWtxLateCollisions, integraWradioRangeTxFrequency=integraWradioRangeTxFrequency, integraWtimestamp=integraWtimestamp, integraWrx128to255Frames=integraWrx128to255Frames, integraWmodemAcquireStatus=integraWmodemAcquireStatus, integraWifPortDuplex=integraWifPortDuplex, integraWifTimePassed=integraWifTimePassed, integraWtxMultiCollisions=integraWtxMultiCollisions, integraWrxOpErrors=integraWrxOpErrors, integraWneedStore=integraWneedStore, integraWradio=integraWradio, integraWsysLicenseGenStatus=integraWsysLicenseGenStatus, integraWMiscGroup=integraWMiscGroup, integraWradioRangesTable=integraWradioRangesTable, integraWradioRangeEntryIndex=integraWradioRangeEntryIndex, integraWifPortSyncEthActive=integraWifPortSyncEthActive, integraWtx65to127Frames=integraWtx65to127Frames, integraWtxErrors=integraWtxErrors, integraWifPortAutoneg=integraWifPortAutoneg, integraWConformance=integraWConformance, integraWifPortMtu=integraWifPortMtu, integraWrxBcastFrames=integraWrxBcastFrames, integraWtxCntrlFrames=integraWtxCntrlFrames, integraWmodemRxModulation=integraWmodemRxModulation, integraWrxDropped=integraWrxDropped, integraWtx128to255Frames=integraWtx128to255Frames, integraWrxGoodFrames=integraWrxGoodFrames, integraWtxCollisions=integraWtxCollisions, integraWtxBytes=integraWtxBytes, integraWtxOsizeFrames=integraWtxOsizeFrames, integraWmodemFecLoad=integraWmodemFecLoad, integraWnetCfgIPaddress=integraWnetCfgIPaddress, integraWexecuteConfig=integraWexecuteConfig, integraWstoreConfig=integraWstoreConfig, integraWmodem=integraWmodem, integraWrx1024toMaxFrames=integraWrx1024toMaxFrames, integraWnetCfg=integraWnetCfg, integraWsysPSUpower=integraWsysPSUpower, integraWifStatisticsTable=integraWifStatisticsTable, integraWifPortFlowControl=integraWifPortFlowControl, integraWsysFreeMemory=integraWsysFreeMemory, integraWifPortEntry=integraWifPortEntry, integraWifPortAdminStatus=integraWifPortAdminStatus, integraWradioTxMuteDuration=integraWradioTxMuteDuration, integraWCompliances=integraWCompliances, integraWtx64Frames=integraWtx64Frames, integraWradioRangeTxPower=integraWradioRangeTxPower)
