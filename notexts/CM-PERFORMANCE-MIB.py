#
# PySNMP MIB module CM-PERFORMANCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/CM-PERFORMANCE-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 13:28:02 2024
# On host fv-az975-559 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
fsp150cm, = mibBuilder.importSymbols("ADVA-MIB", "fsp150cm")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
PerfCounter64, CmPmIntervalType, CmPmBinAction = mibBuilder.importSymbols("CM-COMMON-MIB", "PerfCounter64", "CmPmIntervalType", "CmPmBinAction")
shelfIndex, slotIndex, neIndex = mibBuilder.importSymbols("CM-ENTITY-MIB", "shelfIndex", "slotIndex", "neIndex")
cmFlowPointIndex, e3t3Index, cmTrafficPortQosShaperIndex, cmEthernetAccPortIndex, stsVcPathIndex, e3t3ParentIfIndex, f3AclRuleIndex, cmQosShaperTypeIndex, cmFlowEntry, f3NetPortQosShaperIndex, cmQosPolicerV2Index, ocnStmIndex, e1t1Index, cmOAMFlowPointIndex, cmQosFlowPolicerIndex, cmQosShaperV2Index, cmQosFlowPolicerTypeIndex, cmEthernetNetPortIndex, vtVcPathIndex, f3FpQosShaperIndex, e1t1ParentIfIndex, cmQosShaperIndex, cmAccPortQosShaperIndex, cmFlowIndex, f3FpQosPolicerIndex, vtVcPathParentIfIndex, stsVcPathParentIfIndex, cmEthernetTrafficPortIndex = mibBuilder.importSymbols("CM-FACILITY-MIB", "cmFlowPointIndex", "e3t3Index", "cmTrafficPortQosShaperIndex", "cmEthernetAccPortIndex", "stsVcPathIndex", "e3t3ParentIfIndex", "f3AclRuleIndex", "cmQosShaperTypeIndex", "cmFlowEntry", "f3NetPortQosShaperIndex", "cmQosPolicerV2Index", "ocnStmIndex", "e1t1Index", "cmOAMFlowPointIndex", "cmQosFlowPolicerIndex", "cmQosShaperV2Index", "cmQosFlowPolicerTypeIndex", "cmEthernetNetPortIndex", "vtVcPathIndex", "f3FpQosShaperIndex", "e1t1ParentIfIndex", "cmQosShaperIndex", "cmAccPortQosShaperIndex", "cmFlowIndex", "f3FpQosPolicerIndex", "vtVcPathParentIfIndex", "stsVcPathParentIfIndex", "cmEthernetTrafficPortIndex")
f3LagIndex, = mibBuilder.importSymbols("F3-LAG-MIB", "f3LagIndex")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
dot3adAggIndex, = mibBuilder.importSymbols("IEEE8023-LAG-MIB", "dot3adAggIndex")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, MibIdentifier, Counter32, Gauge32, Counter64, IpAddress, ModuleIdentity, ObjectIdentity, NotificationType, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "MibIdentifier", "Counter32", "Gauge32", "Counter64", "IpAddress", "ModuleIdentity", "ObjectIdentity", "NotificationType", "Unsigned32", "TimeTicks")
TextualConvention, DisplayString, DateAndTime, VariablePointer, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime", "VariablePointer", "TruthValue")
cmPerformanceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5))
cmPerformanceMIB.setRevisions(('2021-01-27 00:00',))
if mibBuilder.loadTexts: cmPerformanceMIB.setLastUpdated('202101270000Z')
if mibBuilder.loadTexts: cmPerformanceMIB.setOrganization('ADVA Optical Networking SE')
cmPerfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1))
cmPerfNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2))
cmPerfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3))
cmEthernetAccPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1), )
if mibBuilder.loadTexts: cmEthernetAccPortStatsTable.setStatus('current')
cmEthernetAccPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIndex"))
if mibBuilder.loadTexts: cmEthernetAccPortStatsEntry.setStatus('current')
cmEthernetAccPortStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsIndex.setStatus('current')
cmEthernetAccPortStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsIntervalType.setStatus('current')
cmEthernetAccPortStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsValid.setStatus('current')
cmEthernetAccPortStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetAccPortStatsAction.setStatus('current')
cmEthernetAccPortStatsESBF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESBF.setStatus('current')
cmEthernetAccPortStatsESBP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESBP.setStatus('current')
cmEthernetAccPortStatsESBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESBS.setStatus('current')
cmEthernetAccPortStatsESC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESC.setStatus('current')
cmEthernetAccPortStatsESCAE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESCAE.setStatus('current')
cmEthernetAccPortStatsESDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESDE.setStatus('current')
cmEthernetAccPortStatsESF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESF.setStatus('current')
cmEthernetAccPortStatsESFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESFS.setStatus('current')
cmEthernetAccPortStatsESJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESJ.setStatus('current')
cmEthernetAccPortStatsESMF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESMF.setStatus('current')
cmEthernetAccPortStatsESMP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESMP.setStatus('current')
cmEthernetAccPortStatsESO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESO.setStatus('current')
cmEthernetAccPortStatsESOF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESOF.setStatus('current')
cmEthernetAccPortStatsESOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESOP.setStatus('current')
cmEthernetAccPortStatsESP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESP.setStatus('current')
cmEthernetAccPortStatsESP64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESP64.setStatus('current')
cmEthernetAccPortStatsESP65 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESP65.setStatus('current')
cmEthernetAccPortStatsESP128 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESP128.setStatus('current')
cmEthernetAccPortStatsESP256 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESP256.setStatus('current')
cmEthernetAccPortStatsESP512 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESP512.setStatus('current')
cmEthernetAccPortStatsESP1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESP1024.setStatus('current')
cmEthernetAccPortStatsESP1519 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESP1519.setStatus('current')
cmEthernetAccPortStatsESUF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESUF.setStatus('current')
cmEthernetAccPortStatsESUP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsESUP.setStatus('current')
cmEthernetAccPortStatsL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsL2CPFD.setStatus('current')
cmEthernetAccPortStatsL2CPFP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsL2CPFP.setStatus('current')
cmEthernetAccPortStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsLES.setStatus('deprecated')
cmEthernetAccPortStatsLBC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsLBC.setStatus('current')
cmEthernetAccPortStatsOPT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsOPT.setStatus('current')
cmEthernetAccPortStatsOPR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsOPR.setStatus('current')
cmEthernetAccPortStatsAUFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsAUFD.setStatus('current')
cmEthernetAccPortStatsAPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsAPFD.setStatus('current')
cmEthernetAccPortStatsABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsABRRx.setStatus('current')
cmEthernetAccPortStatsABRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsABRTx.setStatus('current')
cmEthernetAccPortStatsTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsTemp.setStatus('current')
cmEthernetAccPortStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 40), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsUAS.setStatus('current')
cmEthernetAccPortStatsL2PTRxFramesEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 41), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsL2PTRxFramesEncap.setStatus('current')
cmEthernetAccPortStatsL2PTTxFramesDecap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 42), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsL2PTTxFramesDecap.setStatus('current')
cmEthernetAccPortStatsIBRMaxRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 43), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsIBRMaxRx.setStatus('current')
cmEthernetAccPortStatsIBRMaxTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 44), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsIBRMaxTx.setStatus('current')
cmEthernetAccPortStatsIBRMinRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 45), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsIBRMinRx.setStatus('current')
cmEthernetAccPortStatsIBRMinTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 46), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsIBRMinTx.setStatus('current')
cmEthernetAccPortStatsIBRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 47), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsIBRRx.setStatus('current')
cmEthernetAccPortStatsIBRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 48), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsIBRTx.setStatus('current')
cmEthernetAccPortStatsFmcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 49), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsFmcd.setStatus('current')
cmEthernetAccPortStatsFbcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 50), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsFbcd.setStatus('current')
cmEthernetAccPortStatsAclDropNoMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 51), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsAclDropNoMatch.setStatus('current')
cmEthernetAccPortStatsAclFwd2Cpu = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 52), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsAclFwd2Cpu.setStatus('current')
cmEthernetAccPortStatsDhcpDropNoAssocIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 53), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsDhcpDropNoAssocIf.setStatus('current')
cmEthernetAccPortStatsLkupFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 1, 1, 54), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortStatsLkupFails.setStatus('current')
cmEthernetAccPortHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2), )
if mibBuilder.loadTexts: cmEthernetAccPortHistoryTable.setStatus('current')
cmEthernetAccPortHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIndex"))
if mibBuilder.loadTexts: cmEthernetAccPortHistoryEntry.setStatus('current')
cmEthernetAccPortHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryIndex.setStatus('current')
cmEthernetAccPortHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryTime.setStatus('current')
cmEthernetAccPortHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryValid.setStatus('current')
cmEthernetAccPortHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryAction.setStatus('current')
cmEthernetAccPortHistoryESBF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESBF.setStatus('current')
cmEthernetAccPortHistoryESBP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESBP.setStatus('current')
cmEthernetAccPortHistoryESBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESBS.setStatus('current')
cmEthernetAccPortHistoryESC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESC.setStatus('current')
cmEthernetAccPortHistoryESCAE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESCAE.setStatus('current')
cmEthernetAccPortHistoryESDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESDE.setStatus('current')
cmEthernetAccPortHistoryESF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESF.setStatus('current')
cmEthernetAccPortHistoryESFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESFS.setStatus('current')
cmEthernetAccPortHistoryESJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESJ.setStatus('current')
cmEthernetAccPortHistoryESMF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESMF.setStatus('current')
cmEthernetAccPortHistoryESMP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESMP.setStatus('current')
cmEthernetAccPortHistoryESO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESO.setStatus('current')
cmEthernetAccPortHistoryESOF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESOF.setStatus('current')
cmEthernetAccPortHistoryESOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESOP.setStatus('current')
cmEthernetAccPortHistoryESP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESP.setStatus('current')
cmEthernetAccPortHistoryESP64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESP64.setStatus('current')
cmEthernetAccPortHistoryESP65 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESP65.setStatus('current')
cmEthernetAccPortHistoryESP128 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESP128.setStatus('current')
cmEthernetAccPortHistoryESP256 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESP256.setStatus('current')
cmEthernetAccPortHistoryESP512 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESP512.setStatus('current')
cmEthernetAccPortHistoryESP1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESP1024.setStatus('current')
cmEthernetAccPortHistoryESP1519 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESP1519.setStatus('current')
cmEthernetAccPortHistoryESUF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESUF.setStatus('current')
cmEthernetAccPortHistoryESUP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryESUP.setStatus('current')
cmEthernetAccPortHistoryL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryL2CPFD.setStatus('current')
cmEthernetAccPortHistoryL2CPFP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryL2CPFP.setStatus('current')
cmEthernetAccPortHistoryLES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryLES.setStatus('deprecated')
cmEthernetAccPortHistoryLBC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryLBC.setStatus('current')
cmEthernetAccPortHistoryOPT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryOPT.setStatus('current')
cmEthernetAccPortHistoryOPR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryOPR.setStatus('current')
cmEthernetAccPortHistoryAUFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryAUFD.setStatus('current')
cmEthernetAccPortHistoryAPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryAPFD.setStatus('current')
cmEthernetAccPortHistoryABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryABRRx.setStatus('current')
cmEthernetAccPortHistoryABRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryABRTx.setStatus('current')
cmEthernetAccPortHistoryTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryTemp.setStatus('current')
cmEthernetAccPortHistoryUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 40), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryUAS.setStatus('current')
cmEthernetAccPortHistoryL2PTRxFramesEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 41), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryL2PTRxFramesEncap.setStatus('current')
cmEthernetAccPortHistoryL2PTTxFramesDecap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 42), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryL2PTTxFramesDecap.setStatus('current')
cmEthernetAccPortHistoryIBRMaxRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 43), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryIBRMaxRx.setStatus('current')
cmEthernetAccPortHistoryIBRMaxTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 44), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryIBRMaxTx.setStatus('current')
cmEthernetAccPortHistoryIBRMinRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 45), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryIBRMinRx.setStatus('current')
cmEthernetAccPortHistoryIBRMinTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 46), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryIBRMinTx.setStatus('current')
cmEthernetAccPortHistoryIBRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 47), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryIBRRx.setStatus('current')
cmEthernetAccPortHistoryIBRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 48), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryIBRTx.setStatus('current')
cmEthernetAccPortHistoryFmcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 49), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryFmcd.setStatus('current')
cmEthernetAccPortHistoryFbcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 50), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryFbcd.setStatus('current')
cmEthernetAccPortHistoryAclDropNoMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 51), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryAclDropNoMatch.setStatus('current')
cmEthernetAccPortHistoryAclFwd2Cpu = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 52), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryAclFwd2Cpu.setStatus('current')
cmEthernetAccPortHistoryDhcpDropNoAssocIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 53), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryDhcpDropNoAssocIf.setStatus('current')
cmEthernetAccPortHistoryLkupFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 2, 1, 54), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortHistoryLkupFails.setStatus('current')
cmEthernetAccPortThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 3), )
if mibBuilder.loadTexts: cmEthernetAccPortThresholdTable.setStatus('current')
cmEthernetAccPortThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdIndex"))
if mibBuilder.loadTexts: cmEthernetAccPortThresholdEntry.setStatus('current')
cmEthernetAccPortThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortThresholdIndex.setStatus('current')
cmEthernetAccPortThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 3, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortThresholdInterval.setStatus('current')
cmEthernetAccPortThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 3, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortThresholdVariable.setStatus('current')
cmEthernetAccPortThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetAccPortThresholdValueLo.setStatus('current')
cmEthernetAccPortThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetAccPortThresholdValueHi.setStatus('current')
cmEthernetAccPortThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetAccPortThresholdMonValue.setStatus('current')
cmEthernetAccPortThresholdVarTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 4), )
if mibBuilder.loadTexts: cmEthernetAccPortThresholdVarTable.setStatus('current')
cmEthernetAccPortThresholdVarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 4, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIndex"))
if mibBuilder.loadTexts: cmEthernetAccPortThresholdVarEntry.setStatus('current')
cmEthernetAccPortThresholdVarOprVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetAccPortThresholdVarOprVariance.setStatus('current')
cmEthernetAccPortThresholdVarOptVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetAccPortThresholdVarOptVariance.setStatus('current')
cmEthernetNetPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5), )
if mibBuilder.loadTexts: cmEthernetNetPortStatsTable.setStatus('current')
cmEthernetNetPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIndex"))
if mibBuilder.loadTexts: cmEthernetNetPortStatsEntry.setStatus('current')
cmEthernetNetPortStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsIndex.setStatus('current')
cmEthernetNetPortStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsIntervalType.setStatus('current')
cmEthernetNetPortStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsValid.setStatus('current')
cmEthernetNetPortStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetNetPortStatsAction.setStatus('current')
cmEthernetNetPortStatsESBF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESBF.setStatus('current')
cmEthernetNetPortStatsESBP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESBP.setStatus('current')
cmEthernetNetPortStatsESBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESBS.setStatus('current')
cmEthernetNetPortStatsESC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESC.setStatus('current')
cmEthernetNetPortStatsESCAE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESCAE.setStatus('current')
cmEthernetNetPortStatsESDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESDE.setStatus('current')
cmEthernetNetPortStatsESF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESF.setStatus('current')
cmEthernetNetPortStatsESFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESFS.setStatus('current')
cmEthernetNetPortStatsESJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESJ.setStatus('current')
cmEthernetNetPortStatsESMF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESMF.setStatus('current')
cmEthernetNetPortStatsESMP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESMP.setStatus('current')
cmEthernetNetPortStatsESO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESO.setStatus('current')
cmEthernetNetPortStatsESOF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESOF.setStatus('current')
cmEthernetNetPortStatsESOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESOP.setStatus('current')
cmEthernetNetPortStatsESP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESP.setStatus('current')
cmEthernetNetPortStatsESP64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESP64.setStatus('current')
cmEthernetNetPortStatsESP65 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESP65.setStatus('current')
cmEthernetNetPortStatsESP128 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESP128.setStatus('current')
cmEthernetNetPortStatsESP256 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESP256.setStatus('current')
cmEthernetNetPortStatsESP512 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESP512.setStatus('current')
cmEthernetNetPortStatsESP1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESP1024.setStatus('current')
cmEthernetNetPortStatsESP1519 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESP1519.setStatus('current')
cmEthernetNetPortStatsESUF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESUF.setStatus('current')
cmEthernetNetPortStatsESUP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsESUP.setStatus('current')
cmEthernetNetPortStatsL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsL2CPFD.setStatus('current')
cmEthernetNetPortStatsL2CPFP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsL2CPFP.setStatus('current')
cmEthernetNetPortStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsLES.setStatus('deprecated')
cmEthernetNetPortStatsLBC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsLBC.setStatus('current')
cmEthernetNetPortStatsOPT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsOPT.setStatus('current')
cmEthernetNetPortStatsOPR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsOPR.setStatus('current')
cmEthernetNetPortStatsAUFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsAUFD.setStatus('current')
cmEthernetNetPortStatsAPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsAPFD.setStatus('current')
cmEthernetNetPortStatsABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsABRRx.setStatus('current')
cmEthernetNetPortStatsABRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsABRTx.setStatus('current')
cmEthernetNetPortStatsPSC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 39), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsPSC.setStatus('current')
cmEthernetNetPortStatsTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsTemp.setStatus('current')
cmEthernetNetPortStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 41), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsUAS.setStatus('current')
cmEthernetNetPortStatsL2PTRxFramesEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 42), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsL2PTRxFramesEncap.setStatus('current')
cmEthernetNetPortStatsL2PTTxFramesDecap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 43), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsL2PTTxFramesDecap.setStatus('current')
cmEthernetNetPortStatsIBRMaxRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 44), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsIBRMaxRx.setStatus('current')
cmEthernetNetPortStatsIBRMaxTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 45), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsIBRMaxTx.setStatus('current')
cmEthernetNetPortStatsIBRMinRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 46), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsIBRMinRx.setStatus('current')
cmEthernetNetPortStatsIBRMinTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 47), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsIBRMinTx.setStatus('current')
cmEthernetNetPortStatsIBRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 48), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsIBRRx.setStatus('current')
cmEthernetNetPortStatsIBRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 49), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsIBRTx.setStatus('current')
cmEthernetNetPortStatsFmcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 50), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsFmcd.setStatus('current')
cmEthernetNetPortStatsFbcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 51), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsFbcd.setStatus('current')
cmEthernetNetPortStatsAclDropNoMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 52), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsAclDropNoMatch.setStatus('current')
cmEthernetNetPortStatsAclFwd2Cpu = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 53), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsAclFwd2Cpu.setStatus('current')
cmEthernetNetPortStatsDhcpDropNoAssocIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 54), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsDhcpDropNoAssocIf.setStatus('current')
cmEthernetNetPortStatsLkupFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 5, 1, 55), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsLkupFails.setStatus('current')
cmEthernetNetPortHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6), )
if mibBuilder.loadTexts: cmEthernetNetPortHistoryTable.setStatus('current')
cmEthernetNetPortHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIndex"))
if mibBuilder.loadTexts: cmEthernetNetPortHistoryEntry.setStatus('current')
cmEthernetNetPortHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryIndex.setStatus('current')
cmEthernetNetPortHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryTime.setStatus('current')
cmEthernetNetPortHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryValid.setStatus('current')
cmEthernetNetPortHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryAction.setStatus('current')
cmEthernetNetPortHistoryESBF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESBF.setStatus('current')
cmEthernetNetPortHistoryESBP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESBP.setStatus('current')
cmEthernetNetPortHistoryESBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESBS.setStatus('current')
cmEthernetNetPortHistoryESC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESC.setStatus('current')
cmEthernetNetPortHistoryESCAE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESCAE.setStatus('current')
cmEthernetNetPortHistoryESDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESDE.setStatus('current')
cmEthernetNetPortHistoryESF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESF.setStatus('current')
cmEthernetNetPortHistoryESFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESFS.setStatus('current')
cmEthernetNetPortHistoryESJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESJ.setStatus('current')
cmEthernetNetPortHistoryESMF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESMF.setStatus('current')
cmEthernetNetPortHistoryESMP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESMP.setStatus('current')
cmEthernetNetPortHistoryESO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESO.setStatus('current')
cmEthernetNetPortHistoryESOF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESOF.setStatus('current')
cmEthernetNetPortHistoryESOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESOP.setStatus('current')
cmEthernetNetPortHistoryESP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESP.setStatus('current')
cmEthernetNetPortHistoryESP64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESP64.setStatus('current')
cmEthernetNetPortHistoryESP65 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESP65.setStatus('current')
cmEthernetNetPortHistoryESP128 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESP128.setStatus('current')
cmEthernetNetPortHistoryESP256 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESP256.setStatus('current')
cmEthernetNetPortHistoryESP512 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESP512.setStatus('current')
cmEthernetNetPortHistoryESP1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESP1024.setStatus('current')
cmEthernetNetPortHistoryESP1519 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESP1519.setStatus('current')
cmEthernetNetPortHistoryESUF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESUF.setStatus('current')
cmEthernetNetPortHistoryESUP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryESUP.setStatus('current')
cmEthernetNetPortHistoryL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryL2CPFD.setStatus('current')
cmEthernetNetPortHistoryL2CPFP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryL2CPFP.setStatus('current')
cmEthernetNetPortHistoryLES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryLES.setStatus('deprecated')
cmEthernetNetPortHistoryLBC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryLBC.setStatus('current')
cmEthernetNetPortHistoryOPT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryOPT.setStatus('current')
cmEthernetNetPortHistoryOPR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryOPR.setStatus('current')
cmEthernetNetPortHistoryAUFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryAUFD.setStatus('current')
cmEthernetNetPortHistoryAPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryAPFD.setStatus('current')
cmEthernetNetPortHistoryABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryABRRx.setStatus('current')
cmEthernetNetPortHistoryABRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryABRTx.setStatus('current')
cmEthernetNetPortHistoryPSC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 39), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryPSC.setStatus('current')
cmEthernetNetPortHistoryTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryTemp.setStatus('current')
cmEthernetNetPortHistoryUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 41), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryUAS.setStatus('current')
cmEthernetNetPortHistoryL2PTRxFramesEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 42), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryL2PTRxFramesEncap.setStatus('current')
cmEthernetNetPortHistoryL2PTTxFramesDecap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 43), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryL2PTTxFramesDecap.setStatus('current')
cmEthernetNetPortHistoryIBRMaxRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 44), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryIBRMaxRx.setStatus('current')
cmEthernetNetPortHistoryIBRMaxTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 45), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryIBRMaxTx.setStatus('current')
cmEthernetNetPortHistoryIBRMinRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 46), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryIBRMinRx.setStatus('current')
cmEthernetNetPortHistoryIBRMinTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 47), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryIBRMinTx.setStatus('current')
cmEthernetNetPortHistoryIBRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 48), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryIBRRx.setStatus('current')
cmEthernetNetPortHistoryIBRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 49), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryIBRTx.setStatus('current')
cmEthernetNetPortHistoryFmcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 50), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryFmcd.setStatus('current')
cmEthernetNetPortHistoryFbcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 51), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryFbcd.setStatus('current')
cmEthernetNetPortHistoryAclDropNoMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 52), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryAclDropNoMatch.setStatus('current')
cmEthernetNetPortHistoryAclFwd2Cpu = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 53), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryAclFwd2Cpu.setStatus('current')
cmEthernetNetPortHistoryDhcpDropNoAssocIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 54), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryDhcpDropNoAssocIf.setStatus('current')
cmEthernetNetPortHistoryLkupFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 6, 1, 55), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryLkupFails.setStatus('current')
cmEthernetNetPortThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 7), )
if mibBuilder.loadTexts: cmEthernetNetPortThresholdTable.setStatus('current')
cmEthernetNetPortThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 7, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdIndex"))
if mibBuilder.loadTexts: cmEthernetNetPortThresholdEntry.setStatus('current')
cmEthernetNetPortThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortThresholdIndex.setStatus('current')
cmEthernetNetPortThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 7, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortThresholdInterval.setStatus('current')
cmEthernetNetPortThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 7, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortThresholdVariable.setStatus('current')
cmEthernetNetPortThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 7, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetNetPortThresholdValueLo.setStatus('current')
cmEthernetNetPortThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 7, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetNetPortThresholdValueHi.setStatus('current')
cmEthernetNetPortThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortThresholdMonValue.setStatus('current')
cmEthernetNetPortThresholdVarTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 8), )
if mibBuilder.loadTexts: cmEthernetNetPortThresholdVarTable.setStatus('current')
cmEthernetNetPortThresholdVarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 8, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIndex"))
if mibBuilder.loadTexts: cmEthernetNetPortThresholdVarEntry.setStatus('current')
cmEthernetNetPortThresholdVarOprVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 8, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetNetPortThresholdVarOprVariance.setStatus('current')
cmEthernetNetPortThresholdVarOptVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 8, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetNetPortThresholdVarOptVariance.setStatus('current')
cmFlowStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9), )
if mibBuilder.loadTexts: cmFlowStatsTable.setStatus('current')
cmFlowStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowIndex"), (0, "CM-PERFORMANCE-MIB", "cmFlowStatsIndex"))
if mibBuilder.loadTexts: cmFlowStatsEntry.setStatus('current')
cmFlowStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIndex.setStatus('current')
cmFlowStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIntervalType.setStatus('current')
cmFlowStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsValid.setStatus('current')
cmFlowStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmFlowStatsAction.setStatus('current')
cmFlowStatsL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsL2CPFD.setStatus('current')
cmFlowStatsABRA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsABRA2N.setStatus('current')
cmFlowStatsABRRLA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsABRRLA2N.setStatus('current')
cmFlowStatsABRRLRA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsABRRLRA2N.setStatus('current')
cmFlowStatsABRN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsABRN2A.setStatus('current')
cmFlowStatsABRRLN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsABRRLN2A.setStatus('current')
cmFlowStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsUAS.setStatus('current')
cmFlowStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsES.setStatus('current')
cmFlowStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsSES.setStatus('current')
cmFlowStatsFMGA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsFMGA2N.setStatus('current')
cmFlowStatsFMYA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsFMYA2N.setStatus('current')
cmFlowStatsFMYDA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsFMYDA2N.setStatus('deprecated')
cmFlowStatsFMRDA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsFMRDA2N.setStatus('current')
cmFlowStatsBytesInA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsBytesInA2N.setStatus('current')
cmFlowStatsBytesOutA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsBytesOutA2N.setStatus('current')
cmFlowStatsFMGN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsFMGN2A.setStatus('current')
cmFlowStatsFMYN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsFMYN2A.setStatus('current')
cmFlowStatsFMYDN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsFMYDN2A.setStatus('deprecated')
cmFlowStatsFMRDN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsFMRDN2A.setStatus('current')
cmFlowStatsBytesInN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsBytesInN2A.setStatus('current')
cmFlowStatsBytesOutN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsBytesOutN2A.setStatus('current')
cmFlowStatsFTDA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsFTDA2N.setStatus('current')
cmFlowStatsIBRA2NMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRA2NMax.setStatus('current')
cmFlowStatsIBRRlA2NMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRRlA2NMax.setStatus('current')
cmFlowStatsIBRA2NMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRA2NMin.setStatus('current')
cmFlowStatsIBRRlA2NMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRRlA2NMin.setStatus('current')
cmFlowStatsIBRA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRA2N.setStatus('current')
cmFlowStatsIBRRlA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 32), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRRlA2N.setStatus('current')
cmFlowStatsIBRN2AMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 33), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRN2AMax.setStatus('current')
cmFlowStatsIBRRlN2AMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 34), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRRlN2AMax.setStatus('current')
cmFlowStatsIBRN2AMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRN2AMin.setStatus('current')
cmFlowStatsIBRRlN2AMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRRlN2AMin.setStatus('current')
cmFlowStatsIBRN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRN2A.setStatus('current')
cmFlowStatsIBRRlN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsIBRRlN2A.setStatus('current')
cmFlowStatsFMCDA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 39), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsFMCDA2N.setStatus('current')
cmFlowStatsFBCDA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 40), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsFBCDA2N.setStatus('current')
cmFlowStatsACLN2ADrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 41), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsACLN2ADrop.setStatus('current')
cmFlowStatsACLA2NDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 9, 1, 42), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowStatsACLA2NDrop.setStatus('current')
cmFlowHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10), )
if mibBuilder.loadTexts: cmFlowHistoryTable.setStatus('current')
cmFlowHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowIndex"), (0, "CM-PERFORMANCE-MIB", "cmFlowStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmFlowHistoryIndex"))
if mibBuilder.loadTexts: cmFlowHistoryEntry.setStatus('current')
cmFlowHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIndex.setStatus('current')
cmFlowHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryTime.setStatus('current')
cmFlowHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryValid.setStatus('current')
cmFlowHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmFlowHistoryAction.setStatus('current')
cmFlowHistoryL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryL2CPFD.setStatus('current')
cmFlowHistoryABRA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryABRA2N.setStatus('current')
cmFlowHistoryABRRLA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryABRRLA2N.setStatus('current')
cmFlowHistoryABRRLRA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryABRRLRA2N.setStatus('current')
cmFlowHistoryABRN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryABRN2A.setStatus('current')
cmFlowHistoryABRRLN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryABRRLN2A.setStatus('current')
cmFlowHistoryUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryUAS.setStatus('current')
cmFlowHistoryES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryES.setStatus('current')
cmFlowHistorySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistorySES.setStatus('current')
cmFlowHistoryFMGA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryFMGA2N.setStatus('current')
cmFlowHistoryFMYA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryFMYA2N.setStatus('current')
cmFlowHistoryFMYDA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryFMYDA2N.setStatus('deprecated')
cmFlowHistoryFMRDA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryFMRDA2N.setStatus('current')
cmFlowHistoryBytesInA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryBytesInA2N.setStatus('current')
cmFlowHistoryBytesOutA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryBytesOutA2N.setStatus('current')
cmFlowHistoryFMGN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryFMGN2A.setStatus('current')
cmFlowHistoryFMYN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryFMYN2A.setStatus('current')
cmFlowHistoryFMYDN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryFMYDN2A.setStatus('deprecated')
cmFlowHistoryFMRDN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryFMRDN2A.setStatus('current')
cmFlowHistoryBytesInN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryBytesInN2A.setStatus('current')
cmFlowHistoryBytesOutN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryBytesOutN2A.setStatus('current')
cmFlowHistoryFTDA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryFTDA2N.setStatus('current')
cmFlowHistoryIBRA2NMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRA2NMax.setStatus('current')
cmFlowHistoryIBRRlA2NMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRRlA2NMax.setStatus('current')
cmFlowHistoryIBRA2NMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRA2NMin.setStatus('current')
cmFlowHistoryIBRRlA2NMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRRlA2NMin.setStatus('current')
cmFlowHistoryIBRA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRA2N.setStatus('current')
cmFlowHistoryIBRRlA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 32), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRRlA2N.setStatus('current')
cmFlowHistoryIBRN2AMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 33), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRN2AMax.setStatus('current')
cmFlowHistoryIBRRlN2AMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 34), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRRlN2AMax.setStatus('current')
cmFlowHistoryIBRN2AMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRN2AMin.setStatus('current')
cmFlowHistoryIBRRlN2AMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRRlN2AMin.setStatus('current')
cmFlowHistoryIBRN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRN2A.setStatus('current')
cmFlowHistoryIBRRlN2A = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryIBRRlN2A.setStatus('current')
cmFlowHistoryFMCDA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 39), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryFMCDA2N.setStatus('current')
cmFlowHistoryFBCDA2N = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 40), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryFBCDA2N.setStatus('current')
cmFlowHistoryACLN2ADrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 41), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryACLN2ADrop.setStatus('current')
cmFlowHistoryACLA2NDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 10, 1, 42), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowHistoryACLA2NDrop.setStatus('current')
cmFlowThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 11), )
if mibBuilder.loadTexts: cmFlowThresholdTable.setStatus('current')
cmFlowThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 11, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowIndex"), (0, "CM-PERFORMANCE-MIB", "cmFlowStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmFlowThresholdIndex"))
if mibBuilder.loadTexts: cmFlowThresholdEntry.setStatus('current')
cmFlowThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowThresholdIndex.setStatus('current')
cmFlowThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 11, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowThresholdInterval.setStatus('current')
cmFlowThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 11, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowThresholdVariable.setStatus('current')
cmFlowThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 11, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmFlowThresholdValueLo.setStatus('current')
cmFlowThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 11, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmFlowThresholdValueHi.setStatus('current')
cmFlowThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 11, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowThresholdMonValue.setStatus('current')
cmQosShaperStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12), )
if mibBuilder.loadTexts: cmQosShaperStatsTable.setStatus('current')
cmQosShaperStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowIndex"), (0, "CM-FACILITY-MIB", "cmQosShaperTypeIndex"), (0, "CM-FACILITY-MIB", "cmQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosShaperStatsIndex"))
if mibBuilder.loadTexts: cmQosShaperStatsEntry.setStatus('current')
cmQosShaperStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsIndex.setStatus('current')
cmQosShaperStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsIntervalType.setStatus('current')
cmQosShaperStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsValid.setStatus('current')
cmQosShaperStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosShaperStatsAction.setStatus('current')
cmQosShaperStatsBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsBT.setStatus('current')
cmQosShaperStatsBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsBTD.setStatus('current')
cmQosShaperStatsFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsFD.setStatus('current')
cmQosShaperStatsFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsFTD.setStatus('current')
cmQosShaperStatsBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsBR.setStatus('current')
cmQosShaperStatsFR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsFR.setStatus('current')
cmQosShaperStatsABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsABRRL.setStatus('current')
cmQosShaperStatsABRRLR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsABRRLR.setStatus('current')
cmQosShaperStatsBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsBREDD.setStatus('current')
cmQosShaperStatsFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 12, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperStatsFREDD.setStatus('current')
cmQosShaperHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13), )
if mibBuilder.loadTexts: cmQosShaperHistoryTable.setStatus('current')
cmQosShaperHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowIndex"), (0, "CM-FACILITY-MIB", "cmQosShaperTypeIndex"), (0, "CM-FACILITY-MIB", "cmQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosShaperStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosShaperHistoryIndex"))
if mibBuilder.loadTexts: cmQosShaperHistoryEntry.setStatus('current')
cmQosShaperHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryIndex.setStatus('current')
cmQosShaperHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryTime.setStatus('current')
cmQosShaperHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryValid.setStatus('current')
cmQosShaperHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosShaperHistoryAction.setStatus('current')
cmQosShaperHistoryBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryBT.setStatus('current')
cmQosShaperHistoryBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryBTD.setStatus('current')
cmQosShaperHistoryFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryFD.setStatus('current')
cmQosShaperHistoryFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryFTD.setStatus('current')
cmQosShaperHistoryBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryBR.setStatus('current')
cmQosShaperHistoryFR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryFR.setStatus('current')
cmQosShaperHistoryABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryABRRL.setStatus('current')
cmQosShaperHistoryABRRLR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryABRRLR.setStatus('current')
cmQosShaperHistoryBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryBREDD.setStatus('current')
cmQosShaperHistoryFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 13, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperHistoryFREDD.setStatus('current')
cmQosShaperThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 14), )
if mibBuilder.loadTexts: cmQosShaperThresholdTable.setStatus('current')
cmQosShaperThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 14, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowIndex"), (0, "CM-FACILITY-MIB", "cmQosShaperTypeIndex"), (0, "CM-FACILITY-MIB", "cmQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosShaperStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosShaperThresholdIndex"))
if mibBuilder.loadTexts: cmQosShaperThresholdEntry.setStatus('current')
cmQosShaperThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperThresholdIndex.setStatus('current')
cmQosShaperThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 14, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperThresholdInterval.setStatus('current')
cmQosShaperThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 14, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperThresholdVariable.setStatus('current')
cmQosShaperThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 14, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosShaperThresholdValueLo.setStatus('current')
cmQosShaperThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 14, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosShaperThresholdValueHi.setStatus('current')
cmQosShaperThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 14, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperThresholdMonValue.setStatus('current')
cmQosFlowPolicerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15), )
if mibBuilder.loadTexts: cmQosFlowPolicerStatsTable.setStatus('current')
cmQosFlowPolicerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowIndex"), (0, "CM-FACILITY-MIB", "cmQosFlowPolicerTypeIndex"), (0, "CM-FACILITY-MIB", "cmQosFlowPolicerIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsIndex"))
if mibBuilder.loadTexts: cmQosFlowPolicerStatsEntry.setStatus('current')
cmQosFlowPolicerStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerStatsIndex.setStatus('current')
cmQosFlowPolicerStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerStatsIntervalType.setStatus('current')
cmQosFlowPolicerStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerStatsValid.setStatus('current')
cmQosFlowPolicerStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosFlowPolicerStatsAction.setStatus('current')
cmQosFlowPolicerStatsFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerStatsFMG.setStatus('current')
cmQosFlowPolicerStatsFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerStatsFMY.setStatus('current')
cmQosFlowPolicerStatsFMYD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerStatsFMYD.setStatus('deprecated')
cmQosFlowPolicerStatsFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerStatsFMRD.setStatus('current')
cmQosFlowPolicerStatsBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerStatsBytesIn.setStatus('current')
cmQosFlowPolicerStatsBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerStatsBytesOut.setStatus('current')
cmQosFlowPolicerStatsABR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 15, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerStatsABR.setStatus('current')
cmQosFlowPolicerHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16), )
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryTable.setStatus('current')
cmQosFlowPolicerHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowIndex"), (0, "CM-FACILITY-MIB", "cmQosFlowPolicerTypeIndex"), (0, "CM-FACILITY-MIB", "cmQosFlowPolicerIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryIndex"))
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryEntry.setStatus('current')
cmQosFlowPolicerHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryIndex.setStatus('current')
cmQosFlowPolicerHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryTime.setStatus('current')
cmQosFlowPolicerHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryValid.setStatus('current')
cmQosFlowPolicerHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryAction.setStatus('current')
cmQosFlowPolicerHistoryFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryFMG.setStatus('current')
cmQosFlowPolicerHistoryFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryFMY.setStatus('current')
cmQosFlowPolicerHistoryFMYD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryFMYD.setStatus('deprecated')
cmQosFlowPolicerHistoryFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryFMRD.setStatus('current')
cmQosFlowPolicerHistoryBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryBytesIn.setStatus('current')
cmQosFlowPolicerHistoryBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryBytesOut.setStatus('current')
cmQosFlowPolicerHistoryABR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 16, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerHistoryABR.setStatus('current')
cmQosFlowPolicerThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 17), )
if mibBuilder.loadTexts: cmQosFlowPolicerThresholdTable.setStatus('current')
cmQosFlowPolicerThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 17, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowIndex"), (0, "CM-FACILITY-MIB", "cmQosFlowPolicerTypeIndex"), (0, "CM-FACILITY-MIB", "cmQosFlowPolicerIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdIndex"))
if mibBuilder.loadTexts: cmQosFlowPolicerThresholdEntry.setStatus('current')
cmQosFlowPolicerThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerThresholdIndex.setStatus('current')
cmQosFlowPolicerThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 17, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerThresholdInterval.setStatus('current')
cmQosFlowPolicerThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 17, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerThresholdVariable.setStatus('current')
cmQosFlowPolicerThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 17, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosFlowPolicerThresholdValueLo.setStatus('current')
cmQosFlowPolicerThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 17, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosFlowPolicerThresholdValueHi.setStatus('current')
cmQosFlowPolicerThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 17, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosFlowPolicerThresholdMonValue.setStatus('current')
cmAccPortQosShaperStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18), )
if mibBuilder.loadTexts: cmAccPortQosShaperStatsTable.setStatus('current')
cmAccPortQosShaperStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmAccPortQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsIndex"))
if mibBuilder.loadTexts: cmAccPortQosShaperStatsEntry.setStatus('current')
cmAccPortQosShaperStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsIndex.setStatus('current')
cmAccPortQosShaperStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsIntervalType.setStatus('current')
cmAccPortQosShaperStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsValid.setStatus('current')
cmAccPortQosShaperStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsAction.setStatus('current')
cmAccPortQosShaperStatsBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsBT.setStatus('current')
cmAccPortQosShaperStatsBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsBTD.setStatus('current')
cmAccPortQosShaperStatsFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsFD.setStatus('current')
cmAccPortQosShaperStatsFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsFTD.setStatus('current')
cmAccPortQosShaperStatsBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsBR.setStatus('current')
cmAccPortQosShaperStatsFR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsFR.setStatus('current')
cmAccPortQosShaperStatsABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsABRRL.setStatus('current')
cmAccPortQosShaperStatsBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsBREDD.setStatus('current')
cmAccPortQosShaperStatsFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 18, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperStatsFREDD.setStatus('current')
cmAccPortQosShaperHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19), )
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryTable.setStatus('current')
cmAccPortQosShaperHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmAccPortQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryIndex"))
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryEntry.setStatus('current')
cmAccPortQosShaperHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryIndex.setStatus('current')
cmAccPortQosShaperHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryTime.setStatus('current')
cmAccPortQosShaperHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryValid.setStatus('current')
cmAccPortQosShaperHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryAction.setStatus('current')
cmAccPortQosShaperHistoryBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryBT.setStatus('current')
cmAccPortQosShaperHistoryBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryBTD.setStatus('current')
cmAccPortQosShaperHistoryFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryFD.setStatus('current')
cmAccPortQosShaperHistoryFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryFTD.setStatus('current')
cmAccPortQosShaperHistoryBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryBR.setStatus('current')
cmAccPortQosShaperHistoryFR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryFR.setStatus('current')
cmAccPortQosShaperHistoryABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryABRRL.setStatus('current')
cmAccPortQosShaperHistoryBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryBREDD.setStatus('current')
cmAccPortQosShaperHistoryFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 19, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperHistoryFREDD.setStatus('current')
cmAccPortQosShaperThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 20), )
if mibBuilder.loadTexts: cmAccPortQosShaperThresholdTable.setStatus('current')
cmAccPortQosShaperThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 20, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetAccPortIndex"), (0, "CM-FACILITY-MIB", "cmAccPortQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdIndex"))
if mibBuilder.loadTexts: cmAccPortQosShaperThresholdEntry.setStatus('current')
cmAccPortQosShaperThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperThresholdIndex.setStatus('current')
cmAccPortQosShaperThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 20, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperThresholdInterval.setStatus('current')
cmAccPortQosShaperThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 20, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperThresholdVariable.setStatus('current')
cmAccPortQosShaperThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 20, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmAccPortQosShaperThresholdValueLo.setStatus('current')
cmAccPortQosShaperThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 20, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmAccPortQosShaperThresholdValueHi.setStatus('current')
cmAccPortQosShaperThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 20, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmAccPortQosShaperThresholdMonValue.setStatus('current')
cmEthernetTrafficPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21), )
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsTable.setStatus('current')
cmEthernetTrafficPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIndex"))
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsEntry.setStatus('current')
cmEthernetTrafficPortStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsIndex.setStatus('current')
cmEthernetTrafficPortStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsIntervalType.setStatus('current')
cmEthernetTrafficPortStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsValid.setStatus('current')
cmEthernetTrafficPortStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsAction.setStatus('current')
cmEthernetTrafficPortStatsESBF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESBF.setStatus('current')
cmEthernetTrafficPortStatsESBP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESBP.setStatus('current')
cmEthernetTrafficPortStatsESBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESBS.setStatus('current')
cmEthernetTrafficPortStatsESC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESC.setStatus('current')
cmEthernetTrafficPortStatsESCAE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESCAE.setStatus('current')
cmEthernetTrafficPortStatsESDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESDE.setStatus('current')
cmEthernetTrafficPortStatsESF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESF.setStatus('current')
cmEthernetTrafficPortStatsESFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESFS.setStatus('current')
cmEthernetTrafficPortStatsESJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESJ.setStatus('current')
cmEthernetTrafficPortStatsESMF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESMF.setStatus('current')
cmEthernetTrafficPortStatsESMP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESMP.setStatus('current')
cmEthernetTrafficPortStatsESO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESO.setStatus('current')
cmEthernetTrafficPortStatsESOF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESOF.setStatus('current')
cmEthernetTrafficPortStatsESOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESOP.setStatus('current')
cmEthernetTrafficPortStatsESP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESP.setStatus('current')
cmEthernetTrafficPortStatsESP64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESP64.setStatus('current')
cmEthernetTrafficPortStatsESP65 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESP65.setStatus('current')
cmEthernetTrafficPortStatsESP128 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESP128.setStatus('current')
cmEthernetTrafficPortStatsESP256 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESP256.setStatus('current')
cmEthernetTrafficPortStatsESP512 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESP512.setStatus('current')
cmEthernetTrafficPortStatsESP1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESP1024.setStatus('current')
cmEthernetTrafficPortStatsESP1519 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESP1519.setStatus('current')
cmEthernetTrafficPortStatsESUF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESUF.setStatus('current')
cmEthernetTrafficPortStatsESUP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsESUP.setStatus('current')
cmEthernetTrafficPortStatsL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsL2CPFD.setStatus('current')
cmEthernetTrafficPortStatsL2CPFP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsL2CPFP.setStatus('current')
cmEthernetTrafficPortStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsLES.setStatus('deprecated')
cmEthernetTrafficPortStatsLBC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsLBC.setStatus('current')
cmEthernetTrafficPortStatsOPT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsOPT.setStatus('current')
cmEthernetTrafficPortStatsOPR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsOPR.setStatus('current')
cmEthernetTrafficPortStatsAUFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsAUFD.setStatus('current')
cmEthernetTrafficPortStatsAPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsAPFD.setStatus('current')
cmEthernetTrafficPortStatsABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsABRRx.setStatus('current')
cmEthernetTrafficPortStatsABRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsABRTx.setStatus('current')
cmEthernetTrafficPortStatsATFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 39), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsATFD.setStatus('current')
cmEthernetTrafficPortStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 40), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsUAS.setStatus('current')
cmEthernetTrafficPortStatsTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsTemp.setStatus('current')
cmEthernetTrafficPortStatsLkupFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 42), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsLkupFails.setStatus('current')
cmEthernetTrafficPortStatsPSC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 43), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsPSC.setStatus('current')
cmEthernetTrafficPortStatsL2PTRxFramesEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 44), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsL2PTRxFramesEncap.setStatus('current')
cmEthernetTrafficPortStatsL2PTTxFramesDecap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 45), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsL2PTTxFramesDecap.setStatus('current')
cmEthernetTrafficPortStatsIBRMaxRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 46), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsIBRMaxRx.setStatus('current')
cmEthernetTrafficPortStatsIBRMaxTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 47), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsIBRMaxTx.setStatus('current')
cmEthernetTrafficPortStatsIBRMinRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 48), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsIBRMinRx.setStatus('current')
cmEthernetTrafficPortStatsIBRMinTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 49), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsIBRMinTx.setStatus('current')
cmEthernetTrafficPortStatsIBRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 50), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsIBRRx.setStatus('current')
cmEthernetTrafficPortStatsIBRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 51), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsIBRTx.setStatus('current')
cmEthernetTrafficPortStatsFmcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 52), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsFmcd.setStatus('current')
cmEthernetTrafficPortStatsFbcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 53), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsFbcd.setStatus('current')
cmEthernetTrafficPortStatsAclDropNoMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 54), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsAclDropNoMatch.setStatus('current')
cmEthernetTrafficPortStatsAclFwd2Cpu = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 55), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsAclFwd2Cpu.setStatus('current')
cmEthernetTrafficPortStatsDhcpDropNoAssocIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 56), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsDhcpDropNoAssocIf.setStatus('current')
cmEthernetTrafficPortStatsDroppedFragmented = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 57), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsDroppedFragmented.setStatus('current')
cmEthernetTrafficPortStatsRLBC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsRLBC.setStatus('current')
cmEthernetTrafficPortStatsROPT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsROPT.setStatus('current')
cmEthernetTrafficPortStatsROPR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsROPR.setStatus('current')
cmEthernetTrafficPortStatsRTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 21, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortStatsRTemp.setStatus('current')
cmEthernetTrafficPortHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22), )
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryTable.setStatus('current')
cmEthernetTrafficPortHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIndex"))
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryEntry.setStatus('current')
cmEthernetTrafficPortHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryIndex.setStatus('current')
cmEthernetTrafficPortHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryTime.setStatus('current')
cmEthernetTrafficPortHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryValid.setStatus('current')
cmEthernetTrafficPortHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryAction.setStatus('current')
cmEthernetTrafficPortHistoryESBF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESBF.setStatus('current')
cmEthernetTrafficPortHistoryESBP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESBP.setStatus('current')
cmEthernetTrafficPortHistoryESBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESBS.setStatus('current')
cmEthernetTrafficPortHistoryESC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESC.setStatus('current')
cmEthernetTrafficPortHistoryESCAE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESCAE.setStatus('current')
cmEthernetTrafficPortHistoryESDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESDE.setStatus('current')
cmEthernetTrafficPortHistoryESF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESF.setStatus('current')
cmEthernetTrafficPortHistoryESFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESFS.setStatus('current')
cmEthernetTrafficPortHistoryESJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESJ.setStatus('current')
cmEthernetTrafficPortHistoryESMF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESMF.setStatus('current')
cmEthernetTrafficPortHistoryESMP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESMP.setStatus('current')
cmEthernetTrafficPortHistoryESO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESO.setStatus('current')
cmEthernetTrafficPortHistoryESOF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESOF.setStatus('current')
cmEthernetTrafficPortHistoryESOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESOP.setStatus('current')
cmEthernetTrafficPortHistoryESP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESP.setStatus('current')
cmEthernetTrafficPortHistoryESP64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESP64.setStatus('current')
cmEthernetTrafficPortHistoryESP65 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESP65.setStatus('current')
cmEthernetTrafficPortHistoryESP128 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESP128.setStatus('current')
cmEthernetTrafficPortHistoryESP256 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESP256.setStatus('current')
cmEthernetTrafficPortHistoryESP512 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESP512.setStatus('current')
cmEthernetTrafficPortHistoryESP1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESP1024.setStatus('current')
cmEthernetTrafficPortHistoryESP1519 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESP1519.setStatus('current')
cmEthernetTrafficPortHistoryESUF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESUF.setStatus('current')
cmEthernetTrafficPortHistoryESUP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryESUP.setStatus('current')
cmEthernetTrafficPortHistoryL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryL2CPFD.setStatus('current')
cmEthernetTrafficPortHistoryL2CPFP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryL2CPFP.setStatus('current')
cmEthernetTrafficPortHistoryLES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryLES.setStatus('deprecated')
cmEthernetTrafficPortHistoryLBC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryLBC.setStatus('current')
cmEthernetTrafficPortHistoryOPT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryOPT.setStatus('current')
cmEthernetTrafficPortHistoryOPR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryOPR.setStatus('current')
cmEthernetTrafficPortHistoryAUFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryAUFD.setStatus('current')
cmEthernetTrafficPortHistoryAPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryAPFD.setStatus('current')
cmEthernetTrafficPortHistoryABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryABRRx.setStatus('current')
cmEthernetTrafficPortHistoryABRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryABRTx.setStatus('current')
cmEthernetTrafficPortHistoryATFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 39), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryATFD.setStatus('current')
cmEthernetTrafficPortHistoryUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 40), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryUAS.setStatus('current')
cmEthernetTrafficPortHistoryTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryTemp.setStatus('current')
cmEthernetTrafficPortHistoryLkupFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 42), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryLkupFails.setStatus('current')
cmEthernetTrafficPortHistoryPSC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 43), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryPSC.setStatus('current')
cmEthernetTrafficPortHistoryL2PTRxFramesEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 44), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryL2PTRxFramesEncap.setStatus('current')
cmEthernetTrafficPortHistoryL2PTTxFramesDecap = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 45), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryL2PTTxFramesDecap.setStatus('current')
cmEthernetTrafficPortHistoryIBRMaxRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 46), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryIBRMaxRx.setStatus('current')
cmEthernetTrafficPortHistoryIBRMaxTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 47), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryIBRMaxTx.setStatus('current')
cmEthernetTrafficPortHistoryIBRMinRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 48), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryIBRMinRx.setStatus('current')
cmEthernetTrafficPortHistoryIBRMinTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 49), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryIBRMinTx.setStatus('current')
cmEthernetTrafficPortHistoryIBRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 50), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryIBRRx.setStatus('current')
cmEthernetTrafficPortHistoryIBRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 51), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryIBRTx.setStatus('current')
cmEthernetTrafficPortHistoryFmcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 52), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryFmcd.setStatus('current')
cmEthernetTrafficPortHistoryFbcd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 53), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryFbcd.setStatus('current')
cmEthernetTrafficPortHistoryAclDropNoMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 54), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryAclDropNoMatch.setStatus('current')
cmEthernetTrafficPortHistoryAclFwd2Cpu = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 55), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryAclFwd2Cpu.setStatus('current')
cmEthernetTrafficPortHistoryDhcpDropNoAssocIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 56), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryDhcpDropNoAssocIf.setStatus('current')
cmEthernetTrafficPortHistoryDroppedFragmented = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 57), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryDroppedFragmented.setStatus('current')
cmEthernetTrafficPortHistoryRLBC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryRLBC.setStatus('current')
cmEthernetTrafficPortHistoryROPT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryROPT.setStatus('current')
cmEthernetTrafficPortHistoryROPR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryROPR.setStatus('current')
cmEthernetTrafficPortHistoryRTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 22, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortHistoryRTemp.setStatus('current')
cmEthernetTrafficPortThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 23), )
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdTable.setStatus('current')
cmEthernetTrafficPortThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 23, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdIndex"))
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdEntry.setStatus('current')
cmEthernetTrafficPortThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdIndex.setStatus('current')
cmEthernetTrafficPortThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 23, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdInterval.setStatus('current')
cmEthernetTrafficPortThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 23, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdVariable.setStatus('current')
cmEthernetTrafficPortThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 23, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdValueLo.setStatus('current')
cmEthernetTrafficPortThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 23, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdValueHi.setStatus('current')
cmEthernetTrafficPortThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 23, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdMonValue.setStatus('current')
cmEthernetTrafficPortThresholdVarTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 24), )
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdVarTable.setStatus('current')
cmEthernetTrafficPortThresholdVarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 24, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIndex"))
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdVarEntry.setStatus('current')
cmEthernetTrafficPortThresholdVarOprVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 24, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdVarOprVariance.setStatus('current')
cmEthernetTrafficPortThresholdVarOptVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 24, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdVarOptVariance.setStatus('current')
cmFlowPointStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25), )
if mibBuilder.loadTexts: cmFlowPointStatsTable.setStatus('current')
cmFlowPointStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-PERFORMANCE-MIB", "cmFlowPointStatsIndex"))
if mibBuilder.loadTexts: cmFlowPointStatsEntry.setStatus('current')
cmFlowPointStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsIndex.setStatus('current')
cmFlowPointStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsIntervalType.setStatus('current')
cmFlowPointStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsValid.setStatus('current')
cmFlowPointStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmFlowPointStatsAction.setStatus('current')
cmFlowPointStatsL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsL2CPFD.setStatus('current')
cmFlowPointStatsABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsABRRx.setStatus('current')
cmFlowPointStatsABRRLRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsABRRLRx.setStatus('current')
cmFlowPointStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsUAS.setStatus('current')
cmFlowPointStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsSES.setStatus('current')
cmFlowPointStatsFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFMG.setStatus('current')
cmFlowPointStatsFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFMY.setStatus('current')
cmFlowPointStatsFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFMRD.setStatus('current')
cmFlowPointStatsFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFTD.setStatus('current')
cmFlowPointStatsBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsBytesIn.setStatus('current')
cmFlowPointStatsBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsBytesOut.setStatus('current')
cmFlowPointStatsFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFREDD.setStatus('current')
cmFlowPointStatsFACLD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFACLD.setStatus('current')
cmFlowPointStatsFMYD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFMYD.setStatus('current')
cmFlowPointStatsFMGD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFMGD.setStatus('current')
cmFlowPointStatsFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFD.setStatus('current')
cmFlowPointStatsFMCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFMCD.setStatus('current')
cmFlowPointStatsFBCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFBCD.setStatus('current')
cmFlowPointStatsBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsBT.setStatus('current')
cmFlowPointStatsFLD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFLD.setStatus('current')
cmFlowPointStatsIBRMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsIBRMax.setStatus('current')
cmFlowPointStatsIBRRlMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsIBRRlMax.setStatus('current')
cmFlowPointStatsIBRMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsIBRMin.setStatus('current')
cmFlowPointStatsIBRRlMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsIBRRlMin.setStatus('current')
cmFlowPointStatsIBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsIBR.setStatus('current')
cmFlowPointStatsIBRRl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsIBRRl.setStatus('current')
cmFlowPointStatsFdRxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFdRxFb.setStatus('current')
cmFlowPointStatsFdTxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 32), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFdTxFb.setStatus('current')
cmFlowPointStatsFdicd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 33), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsFdicd.setStatus('current')
cmFlowPointStatsNumLearnTableFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 34), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsNumLearnTableFlushes.setStatus('current')
cmFlowPointStatsEfFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsEfFramesDiscarded.setStatus('current')
cmFlowPointStatsEfBytesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsEfBytesDiscarded.setStatus('current')
cmFlowPointStatsAclDropNoMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsAclDropNoMatch.setStatus('current')
cmFlowPointStatsAclRuleDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 25, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointStatsAclRuleDrop.setStatus('current')
cmFlowPointHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26), )
if mibBuilder.loadTexts: cmFlowPointHistoryTable.setStatus('current')
cmFlowPointHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-PERFORMANCE-MIB", "cmFlowPointStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmFlowPointHistoryIndex"))
if mibBuilder.loadTexts: cmFlowPointHistoryEntry.setStatus('current')
cmFlowPointHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryIndex.setStatus('current')
cmFlowPointHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryTime.setStatus('current')
cmFlowPointHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryValid.setStatus('current')
cmFlowPointHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmFlowPointHistoryAction.setStatus('current')
cmFlowPointHistoryL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryL2CPFD.setStatus('current')
cmFlowPointHistoryABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryABRRx.setStatus('current')
cmFlowPointHistoryABRRLRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryABRRLRx.setStatus('current')
cmFlowPointHistoryUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryUAS.setStatus('current')
cmFlowPointHistorySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistorySES.setStatus('current')
cmFlowPointHistoryFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFMG.setStatus('current')
cmFlowPointHistoryFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFMY.setStatus('current')
cmFlowPointHistoryFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFMRD.setStatus('current')
cmFlowPointHistoryFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFTD.setStatus('current')
cmFlowPointHistoryBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryBytesIn.setStatus('current')
cmFlowPointHistoryBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryBytesOut.setStatus('current')
cmFlowPointHistoryFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFREDD.setStatus('current')
cmFlowPointHistoryFACLD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFACLD.setStatus('current')
cmFlowPointHistoryFMYD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFMYD.setStatus('current')
cmFlowPointHistoryFMGD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFMGD.setStatus('current')
cmFlowPointHistoryFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFD.setStatus('current')
cmFlowPointHistoryFMCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFMCD.setStatus('current')
cmFlowPointHistoryFBCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFBCD.setStatus('current')
cmFlowPointHistoryBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryBT.setStatus('current')
cmFlowPointHistoryFLD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFLD.setStatus('current')
cmFlowPointHistoryIBRMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryIBRMax.setStatus('current')
cmFlowPointHistoryIBRRlMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryIBRRlMax.setStatus('current')
cmFlowPointHistoryIBRMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryIBRMin.setStatus('current')
cmFlowPointHistoryIBRRlMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryIBRRlMin.setStatus('current')
cmFlowPointHistoryIBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryIBR.setStatus('current')
cmFlowPointHistoryIBRRl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryIBRRl.setStatus('current')
cmFlowPointHistoryFdRxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFdRxFb.setStatus('current')
cmFlowPointHistoryFdTxFb = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 32), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFdTxFb.setStatus('current')
cmFlowPointHistoryFdicd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 33), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryFdicd.setStatus('current')
cmFlowPointHistoryNumLearnTableFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 34), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryNumLearnTableFlushes.setStatus('current')
cmFlowPointHistoryEfFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryEfFramesDiscarded.setStatus('current')
cmFlowPointHistoryEfBytesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryEfBytesDiscarded.setStatus('current')
cmFlowPointHistoryAclDropNoMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 37), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryAclDropNoMatch.setStatus('current')
cmFlowPointHistoryAclRuleDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 26, 1, 38), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointHistoryAclRuleDrop.setStatus('current')
cmFlowPointThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 27), )
if mibBuilder.loadTexts: cmFlowPointThresholdTable.setStatus('current')
cmFlowPointThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 27, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-PERFORMANCE-MIB", "cmFlowPointStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmFlowPointThresholdIndex"))
if mibBuilder.loadTexts: cmFlowPointThresholdEntry.setStatus('current')
cmFlowPointThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointThresholdIndex.setStatus('current')
cmFlowPointThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 27, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointThresholdInterval.setStatus('current')
cmFlowPointThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 27, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointThresholdVariable.setStatus('current')
cmFlowPointThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 27, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmFlowPointThresholdValueLo.setStatus('current')
cmFlowPointThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 27, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmFlowPointThresholdValueHi.setStatus('current')
cmFlowPointThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 27, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowPointThresholdMonValue.setStatus('current')
cmOAMFlowPointStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 28), )
if mibBuilder.loadTexts: cmOAMFlowPointStatsTable.setStatus('current')
cmOAMFlowPointStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 28, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmOAMFlowPointIndex"), (0, "CM-PERFORMANCE-MIB", "cmOAMFlowPointStatsIndex"))
if mibBuilder.loadTexts: cmOAMFlowPointStatsEntry.setStatus('current')
cmOAMFlowPointStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 28, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointStatsIndex.setStatus('current')
cmOAMFlowPointStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 28, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointStatsIntervalType.setStatus('current')
cmOAMFlowPointStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 28, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointStatsValid.setStatus('current')
cmOAMFlowPointStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 28, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmOAMFlowPointStatsAction.setStatus('current')
cmOAMFlowPointStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 28, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointStatsUAS.setStatus('current')
cmOAMFlowPointStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 28, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointStatsSES.setStatus('current')
cmOAMFlowPointHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 29), )
if mibBuilder.loadTexts: cmOAMFlowPointHistoryTable.setStatus('current')
cmOAMFlowPointHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 29, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmOAMFlowPointIndex"), (0, "CM-PERFORMANCE-MIB", "cmOAMFlowPointStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmOAMFlowPointHistoryIndex"))
if mibBuilder.loadTexts: cmOAMFlowPointHistoryEntry.setStatus('current')
cmOAMFlowPointHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointHistoryIndex.setStatus('current')
cmOAMFlowPointHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 29, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointHistoryTime.setStatus('current')
cmOAMFlowPointHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 29, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointHistoryValid.setStatus('current')
cmOAMFlowPointHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 29, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmOAMFlowPointHistoryAction.setStatus('current')
cmOAMFlowPointHistoryUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 29, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointHistoryUAS.setStatus('current')
cmOAMFlowPointHistorySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 29, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointHistorySES.setStatus('current')
cmOAMFlowPointThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 30), )
if mibBuilder.loadTexts: cmOAMFlowPointThresholdTable.setStatus('current')
cmOAMFlowPointThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 30, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmOAMFlowPointIndex"), (0, "CM-PERFORMANCE-MIB", "cmOAMFlowPointStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdIndex"))
if mibBuilder.loadTexts: cmOAMFlowPointThresholdEntry.setStatus('current')
cmOAMFlowPointThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointThresholdIndex.setStatus('current')
cmOAMFlowPointThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 30, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointThresholdInterval.setStatus('current')
cmOAMFlowPointThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 30, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointThresholdVariable.setStatus('current')
cmOAMFlowPointThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 30, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmOAMFlowPointThresholdValueLo.setStatus('current')
cmOAMFlowPointThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 30, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmOAMFlowPointThresholdValueHi.setStatus('current')
cmOAMFlowPointThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 30, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmOAMFlowPointThresholdMonValue.setStatus('current')
cmQosPolicerV2StatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31), )
if mibBuilder.loadTexts: cmQosPolicerV2StatsTable.setStatus('current')
cmQosPolicerV2StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "cmQosPolicerV2Index"), (0, "CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsIndex"))
if mibBuilder.loadTexts: cmQosPolicerV2StatsEntry.setStatus('current')
cmQosPolicerV2StatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2StatsIndex.setStatus('current')
cmQosPolicerV2StatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2StatsIntervalType.setStatus('current')
cmQosPolicerV2StatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2StatsValid.setStatus('current')
cmQosPolicerV2StatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosPolicerV2StatsAction.setStatus('current')
cmQosPolicerV2StatsFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2StatsFMG.setStatus('current')
cmQosPolicerV2StatsFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2StatsFMY.setStatus('current')
cmQosPolicerV2StatsFMYD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2StatsFMYD.setStatus('current')
cmQosPolicerV2StatsFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2StatsFMRD.setStatus('current')
cmQosPolicerV2StatsBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2StatsBytesIn.setStatus('current')
cmQosPolicerV2StatsBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2StatsBytesOut.setStatus('current')
cmQosPolicerV2StatsABR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 31, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2StatsABR.setStatus('current')
cmQosPolicerV2HistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32), )
if mibBuilder.loadTexts: cmQosPolicerV2HistoryTable.setStatus('current')
cmQosPolicerV2HistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "cmQosPolicerV2Index"), (0, "CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryIndex"))
if mibBuilder.loadTexts: cmQosPolicerV2HistoryEntry.setStatus('current')
cmQosPolicerV2HistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2HistoryIndex.setStatus('current')
cmQosPolicerV2HistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2HistoryTime.setStatus('current')
cmQosPolicerV2HistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2HistoryValid.setStatus('current')
cmQosPolicerV2HistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosPolicerV2HistoryAction.setStatus('current')
cmQosPolicerV2HistoryFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2HistoryFMG.setStatus('current')
cmQosPolicerV2HistoryFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2HistoryFMY.setStatus('current')
cmQosPolicerV2HistoryFMYD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2HistoryFMYD.setStatus('current')
cmQosPolicerV2HistoryFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2HistoryFMRD.setStatus('current')
cmQosPolicerV2HistoryBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2HistoryBytesIn.setStatus('current')
cmQosPolicerV2HistoryBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2HistoryBytesOut.setStatus('current')
cmQosPolicerV2HistoryABR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 32, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2HistoryABR.setStatus('current')
cmQosPolicerV2ThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 33), )
if mibBuilder.loadTexts: cmQosPolicerV2ThresholdTable.setStatus('current')
cmQosPolicerV2ThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 33, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "cmQosPolicerV2Index"), (0, "CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdIndex"))
if mibBuilder.loadTexts: cmQosPolicerV2ThresholdEntry.setStatus('current')
cmQosPolicerV2ThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 33, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2ThresholdIndex.setStatus('current')
cmQosPolicerV2ThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 33, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2ThresholdInterval.setStatus('current')
cmQosPolicerV2ThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 33, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2ThresholdVariable.setStatus('current')
cmQosPolicerV2ThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 33, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosPolicerV2ThresholdValueLo.setStatus('current')
cmQosPolicerV2ThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 33, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosPolicerV2ThresholdValueHi.setStatus('current')
cmQosPolicerV2ThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 33, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosPolicerV2ThresholdMonValue.setStatus('current')
cmQosShaperV2StatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34), )
if mibBuilder.loadTexts: cmQosShaperV2StatsTable.setStatus('current')
cmQosShaperV2StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "cmQosShaperV2Index"), (0, "CM-PERFORMANCE-MIB", "cmQosShaperV2StatsIndex"))
if mibBuilder.loadTexts: cmQosShaperV2StatsEntry.setStatus('current')
cmQosShaperV2StatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2StatsIndex.setStatus('current')
cmQosShaperV2StatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2StatsIntervalType.setStatus('current')
cmQosShaperV2StatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2StatsValid.setStatus('current')
cmQosShaperV2StatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosShaperV2StatsAction.setStatus('current')
cmQosShaperV2StatsBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2StatsBT.setStatus('current')
cmQosShaperV2StatsBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2StatsBTD.setStatus('current')
cmQosShaperV2StatsFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2StatsFD.setStatus('current')
cmQosShaperV2StatsFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2StatsFTD.setStatus('current')
cmQosShaperV2StatsABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2StatsABRRL.setStatus('current')
cmQosShaperV2StatsBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2StatsBREDD.setStatus('current')
cmQosShaperV2StatsFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 34, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2StatsFREDD.setStatus('current')
cmQosShaperV2HistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35), )
if mibBuilder.loadTexts: cmQosShaperV2HistoryTable.setStatus('current')
cmQosShaperV2HistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "cmQosShaperV2Index"), (0, "CM-PERFORMANCE-MIB", "cmQosShaperV2StatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryIndex"))
if mibBuilder.loadTexts: cmQosShaperV2HistoryEntry.setStatus('current')
cmQosShaperV2HistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2HistoryIndex.setStatus('current')
cmQosShaperV2HistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2HistoryTime.setStatus('current')
cmQosShaperV2HistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2HistoryValid.setStatus('current')
cmQosShaperV2HistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosShaperV2HistoryAction.setStatus('current')
cmQosShaperV2HistoryBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2HistoryBT.setStatus('current')
cmQosShaperV2HistoryBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2HistoryBTD.setStatus('current')
cmQosShaperV2HistoryFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2HistoryFD.setStatus('current')
cmQosShaperV2HistoryFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2HistoryFTD.setStatus('current')
cmQosShaperV2HistoryABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2HistoryABRRL.setStatus('current')
cmQosShaperV2HistoryBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2HistoryBREDD.setStatus('current')
cmQosShaperV2HistoryFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 35, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2HistoryFREDD.setStatus('current')
cmQosShaperV2ThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 36), )
if mibBuilder.loadTexts: cmQosShaperV2ThresholdTable.setStatus('current')
cmQosShaperV2ThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 36, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "cmQosShaperV2Index"), (0, "CM-PERFORMANCE-MIB", "cmQosShaperV2StatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdIndex"))
if mibBuilder.loadTexts: cmQosShaperV2ThresholdEntry.setStatus('current')
cmQosShaperV2ThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 36, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2ThresholdIndex.setStatus('current')
cmQosShaperV2ThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 36, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2ThresholdInterval.setStatus('current')
cmQosShaperV2ThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 36, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2ThresholdVariable.setStatus('current')
cmQosShaperV2ThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 36, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosShaperV2ThresholdValueLo.setStatus('current')
cmQosShaperV2ThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 36, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmQosShaperV2ThresholdValueHi.setStatus('current')
cmQosShaperV2ThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 36, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmQosShaperV2ThresholdMonValue.setStatus('current')
cmLagStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37), )
if mibBuilder.loadTexts: cmLagStatsTable.setStatus('current')
cmLagStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-LAG-MIB", "f3LagIndex"), (0, "CM-PERFORMANCE-MIB", "cmLagStatsIndex"))
if mibBuilder.loadTexts: cmLagStatsEntry.setStatus('current')
cmLagStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsIndex.setStatus('current')
cmLagStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsIntervalType.setStatus('current')
cmLagStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsValid.setStatus('current')
cmLagStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmLagStatsAction.setStatus('current')
cmLagStatsESBF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESBF.setStatus('current')
cmLagStatsESBP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESBP.setStatus('current')
cmLagStatsESBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESBS.setStatus('current')
cmLagStatsESC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESC.setStatus('current')
cmLagStatsESCAE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESCAE.setStatus('current')
cmLagStatsESDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESDE.setStatus('current')
cmLagStatsESF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESF.setStatus('current')
cmLagStatsESFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESFS.setStatus('current')
cmLagStatsESJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESJ.setStatus('current')
cmLagStatsESMF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESMF.setStatus('current')
cmLagStatsESMP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESMP.setStatus('current')
cmLagStatsESO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESO.setStatus('current')
cmLagStatsESOF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESOF.setStatus('current')
cmLagStatsESOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESOP.setStatus('current')
cmLagStatsESP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESP.setStatus('current')
cmLagStatsESP64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESP64.setStatus('current')
cmLagStatsESP65 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESP65.setStatus('current')
cmLagStatsESP128 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESP128.setStatus('current')
cmLagStatsESP256 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESP256.setStatus('current')
cmLagStatsESP512 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESP512.setStatus('current')
cmLagStatsESP1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESP1024.setStatus('current')
cmLagStatsESP1519 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESP1519.setStatus('current')
cmLagStatsESUF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESUF.setStatus('current')
cmLagStatsESUP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsESUP.setStatus('current')
cmLagStatsL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsL2CPFD.setStatus('current')
cmLagStatsL2CPFP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsL2CPFP.setStatus('current')
cmLagStatsAUFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsAUFD.setStatus('current')
cmLagStatsAPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 32), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsAPFD.setStatus('current')
cmLagStatsABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 33), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsABRRx.setStatus('current')
cmLagStatsABRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 34), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsABRTx.setStatus('current')
cmLagStatsATFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsATFD.setStatus('current')
cmLagStatsLkupFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 37, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagStatsLkupFails.setStatus('current')
cmLagHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38), )
if mibBuilder.loadTexts: cmLagHistoryTable.setStatus('current')
cmLagHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-LAG-MIB", "f3LagIndex"), (0, "CM-PERFORMANCE-MIB", "cmLagStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmLagHistoryIndex"))
if mibBuilder.loadTexts: cmLagHistoryEntry.setStatus('current')
cmLagHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryIndex.setStatus('current')
cmLagHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryTime.setStatus('current')
cmLagHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryValid.setStatus('current')
cmLagHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmLagHistoryAction.setStatus('current')
cmLagHistoryESBF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESBF.setStatus('current')
cmLagHistoryESBP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESBP.setStatus('current')
cmLagHistoryESBS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESBS.setStatus('current')
cmLagHistoryESC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESC.setStatus('current')
cmLagHistoryESCAE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESCAE.setStatus('current')
cmLagHistoryESDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESDE.setStatus('current')
cmLagHistoryESF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESF.setStatus('current')
cmLagHistoryESFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESFS.setStatus('current')
cmLagHistoryESJ = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESJ.setStatus('current')
cmLagHistoryESMF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESMF.setStatus('current')
cmLagHistoryESMP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESMP.setStatus('current')
cmLagHistoryESO = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESO.setStatus('current')
cmLagHistoryESOF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESOF.setStatus('current')
cmLagHistoryESOP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESOP.setStatus('current')
cmLagHistoryESP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESP.setStatus('current')
cmLagHistoryESP64 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESP64.setStatus('current')
cmLagHistoryESP65 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESP65.setStatus('current')
cmLagHistoryESP128 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESP128.setStatus('current')
cmLagHistoryESP256 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESP256.setStatus('current')
cmLagHistoryESP512 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESP512.setStatus('current')
cmLagHistoryESP1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 25), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESP1024.setStatus('current')
cmLagHistoryESP1519 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 26), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESP1519.setStatus('current')
cmLagHistoryESUF = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 27), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESUF.setStatus('current')
cmLagHistoryESUP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 28), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryESUP.setStatus('current')
cmLagHistoryL2CPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 29), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryL2CPFD.setStatus('current')
cmLagHistoryL2CPFP = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 30), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryL2CPFP.setStatus('current')
cmLagHistoryAUFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 31), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryAUFD.setStatus('current')
cmLagHistoryAPFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 32), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryAPFD.setStatus('current')
cmLagHistoryABRRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 33), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryABRRx.setStatus('current')
cmLagHistoryABRTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 34), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryABRTx.setStatus('current')
cmLagHistoryATFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 35), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryATFD.setStatus('current')
cmLagHistoryLkupFails = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 38, 1, 36), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagHistoryLkupFails.setStatus('current')
cmLagThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 39), )
if mibBuilder.loadTexts: cmLagThresholdTable.setStatus('current')
cmLagThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 39, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-LAG-MIB", "f3LagIndex"), (0, "CM-PERFORMANCE-MIB", "cmLagStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmLagThresholdIndex"))
if mibBuilder.loadTexts: cmLagThresholdEntry.setStatus('current')
cmLagThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 39, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagThresholdIndex.setStatus('current')
cmLagThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 39, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagThresholdInterval.setStatus('current')
cmLagThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 39, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagThresholdVariable.setStatus('current')
cmLagThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 39, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmLagThresholdValueLo.setStatus('current')
cmLagThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 39, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmLagThresholdValueHi.setStatus('current')
cmLagThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 39, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmLagThresholdMonValue.setStatus('current')
cmTrafficPortQosShaperStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40), )
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsTable.setStatus('current')
cmTrafficPortQosShaperStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmTrafficPortQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsIndex"))
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsEntry.setStatus('current')
cmTrafficPortQosShaperStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsIndex.setStatus('current')
cmTrafficPortQosShaperStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsIntervalType.setStatus('current')
cmTrafficPortQosShaperStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsValid.setStatus('current')
cmTrafficPortQosShaperStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsAction.setStatus('current')
cmTrafficPortQosShaperStatsBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsBT.setStatus('current')
cmTrafficPortQosShaperStatsBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsBTD.setStatus('current')
cmTrafficPortQosShaperStatsFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsFD.setStatus('current')
cmTrafficPortQosShaperStatsFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsFTD.setStatus('current')
cmTrafficPortQosShaperStatsABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsABRRL.setStatus('current')
cmTrafficPortQosShaperStatsBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsBREDD.setStatus('current')
cmTrafficPortQosShaperStatsFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 40, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperStatsFREDD.setStatus('current')
cmTrafficPortQosShaperHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41), )
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryTable.setStatus('current')
cmTrafficPortQosShaperHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmTrafficPortQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryIndex"))
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryEntry.setStatus('current')
cmTrafficPortQosShaperHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryIndex.setStatus('current')
cmTrafficPortQosShaperHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryTime.setStatus('current')
cmTrafficPortQosShaperHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryValid.setStatus('current')
cmTrafficPortQosShaperHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryAction.setStatus('current')
cmTrafficPortQosShaperHistoryBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryBT.setStatus('current')
cmTrafficPortQosShaperHistoryBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryBTD.setStatus('current')
cmTrafficPortQosShaperHistoryFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryFD.setStatus('current')
cmTrafficPortQosShaperHistoryFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryFTD.setStatus('current')
cmTrafficPortQosShaperHistoryABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryABRRL.setStatus('current')
cmTrafficPortQosShaperHistoryBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryBREDD.setStatus('current')
cmTrafficPortQosShaperHistoryFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 41, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperHistoryFREDD.setStatus('current')
cmTrafficPortQosShaperThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 42), )
if mibBuilder.loadTexts: cmTrafficPortQosShaperThresholdTable.setStatus('current')
cmTrafficPortQosShaperThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 42, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmTrafficPortQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsIndex"), (0, "CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdIndex"))
if mibBuilder.loadTexts: cmTrafficPortQosShaperThresholdEntry.setStatus('current')
cmTrafficPortQosShaperThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 42, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperThresholdIndex.setStatus('current')
cmTrafficPortQosShaperThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 42, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperThresholdInterval.setStatus('current')
cmTrafficPortQosShaperThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 42, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperThresholdVariable.setStatus('current')
cmTrafficPortQosShaperThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 42, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmTrafficPortQosShaperThresholdValueLo.setStatus('current')
cmTrafficPortQosShaperThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 42, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmTrafficPortQosShaperThresholdValueHi.setStatus('current')
cmTrafficPortQosShaperThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 42, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmTrafficPortQosShaperThresholdMonValue.setStatus('current')
f3NetPortQosShaperStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43), )
if mibBuilder.loadTexts: f3NetPortQosShaperStatsTable.setStatus('current')
f3NetPortQosShaperStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "CM-FACILITY-MIB", "f3NetPortQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsIndex"))
if mibBuilder.loadTexts: f3NetPortQosShaperStatsEntry.setStatus('current')
f3NetPortQosShaperStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsIndex.setStatus('current')
f3NetPortQosShaperStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsIntervalType.setStatus('current')
f3NetPortQosShaperStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsValid.setStatus('current')
f3NetPortQosShaperStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsAction.setStatus('current')
f3NetPortQosShaperStatsBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsBT.setStatus('current')
f3NetPortQosShaperStatsBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsBTD.setStatus('current')
f3NetPortQosShaperStatsFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsFD.setStatus('current')
f3NetPortQosShaperStatsFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsFTD.setStatus('current')
f3NetPortQosShaperStatsBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsBR.setStatus('current')
f3NetPortQosShaperStatsFR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsFR.setStatus('current')
f3NetPortQosShaperStatsABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsABRRL.setStatus('current')
f3NetPortQosShaperStatsBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsBREDD.setStatus('current')
f3NetPortQosShaperStatsFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 43, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperStatsFREDD.setStatus('current')
f3NetPortQosShaperHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44), )
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryTable.setStatus('current')
f3NetPortQosShaperHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "CM-FACILITY-MIB", "f3NetPortQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsIndex"), (0, "CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryIndex"))
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryEntry.setStatus('current')
f3NetPortQosShaperHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryIndex.setStatus('current')
f3NetPortQosShaperHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryTime.setStatus('current')
f3NetPortQosShaperHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryValid.setStatus('current')
f3NetPortQosShaperHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryAction.setStatus('current')
f3NetPortQosShaperHistoryBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryBT.setStatus('current')
f3NetPortQosShaperHistoryBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryBTD.setStatus('current')
f3NetPortQosShaperHistoryFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryFD.setStatus('current')
f3NetPortQosShaperHistoryFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryFTD.setStatus('current')
f3NetPortQosShaperHistoryBR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryBR.setStatus('current')
f3NetPortQosShaperHistoryFR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryFR.setStatus('current')
f3NetPortQosShaperHistoryABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryABRRL.setStatus('current')
f3NetPortQosShaperHistoryBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryBREDD.setStatus('current')
f3NetPortQosShaperHistoryFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 44, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperHistoryFREDD.setStatus('current')
f3NetPortQosShaperThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 45), )
if mibBuilder.loadTexts: f3NetPortQosShaperThresholdTable.setStatus('current')
f3NetPortQosShaperThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 45, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetNetPortIndex"), (0, "CM-FACILITY-MIB", "f3NetPortQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsIndex"), (0, "CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdIndex"))
if mibBuilder.loadTexts: f3NetPortQosShaperThresholdEntry.setStatus('current')
f3NetPortQosShaperThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 45, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperThresholdIndex.setStatus('current')
f3NetPortQosShaperThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 45, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperThresholdInterval.setStatus('current')
f3NetPortQosShaperThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 45, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperThresholdVariable.setStatus('current')
f3NetPortQosShaperThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 45, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetPortQosShaperThresholdValueLo.setStatus('current')
f3NetPortQosShaperThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 45, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3NetPortQosShaperThresholdValueHi.setStatus('current')
f3NetPortQosShaperThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 45, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3NetPortQosShaperThresholdMonValue.setStatus('current')
ocnStmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46), )
if mibBuilder.loadTexts: ocnStmStatsTable.setStatus('current')
ocnStmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "ocnStmIndex"), (0, "CM-PERFORMANCE-MIB", "ocnStmStatsIndex"))
if mibBuilder.loadTexts: ocnStmStatsEntry.setStatus('current')
ocnStmStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: ocnStmStatsIndex.setStatus('current')
ocnStmStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsIntervalType.setStatus('current')
ocnStmStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsValid.setStatus('current')
ocnStmStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ocnStmStatsAction.setStatus('current')
ocnStmStatsLineLBC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineLBC.setStatus('current')
ocnStmStatsLineOPT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineOPT.setStatus('current')
ocnStmStatsLineOPR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineOPR.setStatus('current')
ocnStmStatsLineTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineTemp.setStatus('current')
ocnStmStatsLinePSC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLinePSC.setStatus('current')
ocnStmStatsLineESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineESs.setStatus('current')
ocnStmStatsLineSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineSESs.setStatus('current')
ocnStmStatsLineCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineCVs.setStatus('current')
ocnStmStatsLineUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineUASs.setStatus('current')
ocnStmStatsLineFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineFCs.setStatus('current')
ocnStmStatsLineFarEndESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineFarEndESs.setStatus('current')
ocnStmStatsLineFarEndSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineFarEndSESs.setStatus('current')
ocnStmStatsLineFarEndCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineFarEndCVs.setStatus('current')
ocnStmStatsLineFarEndUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsLineFarEndUASs.setStatus('current')
ocnStmStatsSectionESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsSectionESs.setStatus('current')
ocnStmStatsSectionSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsSectionSESs.setStatus('current')
ocnStmStatsSectionCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsSectionCVs.setStatus('current')
ocnStmStatsSectionSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsSectionSEFs.setStatus('current')
ocnStmStatsSectionUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 46, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmStatsSectionUASs.setStatus('current')
ocnStmHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47), )
if mibBuilder.loadTexts: ocnStmHistoryTable.setStatus('current')
ocnStmHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "ocnStmIndex"), (0, "CM-PERFORMANCE-MIB", "ocnStmStatsIndex"), (0, "CM-PERFORMANCE-MIB", "ocnStmHistoryIndex"))
if mibBuilder.loadTexts: ocnStmHistoryEntry.setStatus('current')
ocnStmHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: ocnStmHistoryIndex.setStatus('current')
ocnStmHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryTime.setStatus('current')
ocnStmHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryValid.setStatus('current')
ocnStmHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ocnStmHistoryAction.setStatus('current')
ocnStmHistoryLineLBC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineLBC.setStatus('current')
ocnStmHistoryLineOPT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineOPT.setStatus('current')
ocnStmHistoryLineOPR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineOPR.setStatus('current')
ocnStmHistoryLineTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineTemp.setStatus('current')
ocnStmHistoryLinePSC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLinePSC.setStatus('current')
ocnStmHistoryLineESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineESs.setStatus('current')
ocnStmHistoryLineSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineSESs.setStatus('current')
ocnStmHistoryLineCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineCVs.setStatus('current')
ocnStmHistoryLineUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineUASs.setStatus('current')
ocnStmHistoryLineFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineFCs.setStatus('current')
ocnStmHistoryLineFarEndESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineFarEndESs.setStatus('current')
ocnStmHistoryLineFarEndSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineFarEndSESs.setStatus('current')
ocnStmHistoryLineFarEndCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineFarEndCVs.setStatus('current')
ocnStmHistoryLineFarEndUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistoryLineFarEndUASs.setStatus('current')
ocnStmHistorySectionESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistorySectionESs.setStatus('current')
ocnStmHistorySectionSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistorySectionSESs.setStatus('current')
ocnStmHistorySectionCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistorySectionCVs.setStatus('current')
ocnStmHistorySectionSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistorySectionSEFs.setStatus('current')
ocnStmHistorySectionUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 47, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmHistorySectionUASs.setStatus('current')
ocnStmThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 48), )
if mibBuilder.loadTexts: ocnStmThresholdTable.setStatus('current')
ocnStmThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 48, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "ocnStmIndex"), (0, "CM-PERFORMANCE-MIB", "ocnStmStatsIndex"), (0, "CM-PERFORMANCE-MIB", "ocnStmThresholdIndex"))
if mibBuilder.loadTexts: ocnStmThresholdEntry.setStatus('current')
ocnStmThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 48, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: ocnStmThresholdIndex.setStatus('current')
ocnStmThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 48, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmThresholdInterval.setStatus('current')
ocnStmThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 48, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmThresholdVariable.setStatus('current')
ocnStmThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 48, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ocnStmThresholdValueLo.setStatus('current')
ocnStmThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 48, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ocnStmThresholdValueHi.setStatus('current')
ocnStmThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 48, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocnStmThresholdMonValue.setStatus('current')
stsVcPathStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49), )
if mibBuilder.loadTexts: stsVcPathStatsTable.setStatus('current')
stsVcPathStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "ocnStmIndex"), (0, "CM-FACILITY-MIB", "stsVcPathParentIfIndex"), (0, "CM-FACILITY-MIB", "stsVcPathIndex"), (0, "CM-PERFORMANCE-MIB", "stsVcPathStatsIndex"))
if mibBuilder.loadTexts: stsVcPathStatsEntry.setStatus('current')
stsVcPathStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stsVcPathStatsIndex.setStatus('current')
stsVcPathStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathStatsIntervalType.setStatus('current')
stsVcPathStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathStatsValid.setStatus('current')
stsVcPathStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsVcPathStatsAction.setStatus('current')
stsVcPathStatsESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathStatsESs.setStatus('current')
stsVcPathStatsSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathStatsSESs.setStatus('current')
stsVcPathStatsCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathStatsCVs.setStatus('current')
stsVcPathStatsUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathStatsUASs.setStatus('current')
stsVcPathFarEndStatsESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathFarEndStatsESs.setStatus('current')
stsVcPathFarEndStatsSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathFarEndStatsSESs.setStatus('current')
stsVcPathFarEndStatsCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathFarEndStatsCVs.setStatus('current')
stsVcPathFarEndStatsUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 49, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathFarEndStatsUASs.setStatus('current')
stsVcPathHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50), )
if mibBuilder.loadTexts: stsVcPathHistoryTable.setStatus('current')
stsVcPathHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "ocnStmIndex"), (0, "CM-FACILITY-MIB", "stsVcPathParentIfIndex"), (0, "CM-FACILITY-MIB", "stsVcPathIndex"), (0, "CM-PERFORMANCE-MIB", "stsVcPathStatsIndex"), (0, "CM-PERFORMANCE-MIB", "stsVcPathHistoryIndex"))
if mibBuilder.loadTexts: stsVcPathHistoryEntry.setStatus('current')
stsVcPathHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stsVcPathHistoryIndex.setStatus('current')
stsVcPathHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathHistoryTime.setStatus('current')
stsVcPathHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathHistoryValid.setStatus('current')
stsVcPathHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsVcPathHistoryAction.setStatus('current')
stsVcPathHistoryESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathHistoryESs.setStatus('current')
stsVcPathHistorySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathHistorySESs.setStatus('current')
stsVcPathHistoryCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathHistoryCVs.setStatus('current')
stsVcPathHistoryUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathHistoryUASs.setStatus('current')
stsVcPathFarEndHistoryESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathFarEndHistoryESs.setStatus('current')
stsVcPathFarEndHistorySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathFarEndHistorySESs.setStatus('current')
stsVcPathFarEndHistoryCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathFarEndHistoryCVs.setStatus('current')
stsVcPathFarEndHistoryUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 50, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathFarEndHistoryUASs.setStatus('current')
stsVcPathThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 51), )
if mibBuilder.loadTexts: stsVcPathThresholdTable.setStatus('current')
stsVcPathThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 51, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "ocnStmIndex"), (0, "CM-FACILITY-MIB", "stsVcPathParentIfIndex"), (0, "CM-FACILITY-MIB", "stsVcPathIndex"), (0, "CM-PERFORMANCE-MIB", "stsVcPathStatsIndex"), (0, "CM-PERFORMANCE-MIB", "stsVcPathThresholdIndex"))
if mibBuilder.loadTexts: stsVcPathThresholdEntry.setStatus('current')
stsVcPathThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 51, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stsVcPathThresholdIndex.setStatus('current')
stsVcPathThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 51, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathThresholdInterval.setStatus('current')
stsVcPathThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 51, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathThresholdVariable.setStatus('current')
stsVcPathThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 51, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsVcPathThresholdValueLo.setStatus('current')
stsVcPathThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 51, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsVcPathThresholdValueHi.setStatus('current')
stsVcPathThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 51, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsVcPathThresholdMonValue.setStatus('current')
vtVcPathStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52), )
if mibBuilder.loadTexts: vtVcPathStatsTable.setStatus('current')
vtVcPathStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "ocnStmIndex"), (0, "CM-FACILITY-MIB", "vtVcPathParentIfIndex"), (0, "CM-FACILITY-MIB", "vtVcPathIndex"), (0, "CM-PERFORMANCE-MIB", "vtVcPathStatsIndex"))
if mibBuilder.loadTexts: vtVcPathStatsEntry.setStatus('current')
vtVcPathStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: vtVcPathStatsIndex.setStatus('current')
vtVcPathStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathStatsIntervalType.setStatus('current')
vtVcPathStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathStatsValid.setStatus('current')
vtVcPathStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vtVcPathStatsAction.setStatus('current')
vtVcPathStatsESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathStatsESs.setStatus('current')
vtVcPathStatsSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathStatsSESs.setStatus('current')
vtVcPathStatsCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathStatsCVs.setStatus('current')
vtVcPathStatsUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathStatsUASs.setStatus('current')
vtVcPathFarEndStatsESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathFarEndStatsESs.setStatus('current')
vtVcPathFarEndStatsSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathFarEndStatsSESs.setStatus('current')
vtVcPathFarEndStatsCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathFarEndStatsCVs.setStatus('current')
vtVcPathFarEndStatsUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 52, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathFarEndStatsUASs.setStatus('current')
vtVcPathHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53), )
if mibBuilder.loadTexts: vtVcPathHistoryTable.setStatus('current')
vtVcPathHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "ocnStmIndex"), (0, "CM-FACILITY-MIB", "vtVcPathParentIfIndex"), (0, "CM-FACILITY-MIB", "vtVcPathIndex"), (0, "CM-PERFORMANCE-MIB", "vtVcPathStatsIndex"), (0, "CM-PERFORMANCE-MIB", "vtVcPathHistoryIndex"))
if mibBuilder.loadTexts: vtVcPathHistoryEntry.setStatus('current')
vtVcPathHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: vtVcPathHistoryIndex.setStatus('current')
vtVcPathHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathHistoryTime.setStatus('current')
vtVcPathHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathHistoryValid.setStatus('current')
vtVcPathHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vtVcPathHistoryAction.setStatus('current')
vtVcPathHistoryESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathHistoryESs.setStatus('current')
vtVcPathHistorySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathHistorySESs.setStatus('current')
vtVcPathHistoryCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathHistoryCVs.setStatus('current')
vtVcPathHistoryUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathHistoryUASs.setStatus('current')
vtVcPathFarEndHistoryESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathFarEndHistoryESs.setStatus('current')
vtVcPathFarEndHistorySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathFarEndHistorySESs.setStatus('current')
vtVcPathFarEndHistoryCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathFarEndHistoryCVs.setStatus('current')
vtVcPathFarEndHistoryUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 53, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathFarEndHistoryUASs.setStatus('current')
vtVcPathThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 54), )
if mibBuilder.loadTexts: vtVcPathThresholdTable.setStatus('current')
vtVcPathThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 54, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "ocnStmIndex"), (0, "CM-FACILITY-MIB", "vtVcPathParentIfIndex"), (0, "CM-FACILITY-MIB", "vtVcPathIndex"), (0, "CM-PERFORMANCE-MIB", "vtVcPathStatsIndex"), (0, "CM-PERFORMANCE-MIB", "vtVcPathThresholdIndex"))
if mibBuilder.loadTexts: vtVcPathThresholdEntry.setStatus('current')
vtVcPathThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 54, 1, 1), Integer32())
if mibBuilder.loadTexts: vtVcPathThresholdIndex.setStatus('current')
vtVcPathThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 54, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathThresholdInterval.setStatus('current')
vtVcPathThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 54, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathThresholdVariable.setStatus('current')
vtVcPathThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 54, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vtVcPathThresholdValueLo.setStatus('current')
vtVcPathThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 54, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vtVcPathThresholdValueHi.setStatus('current')
vtVcPathThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 54, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtVcPathThresholdMonValue.setStatus('current')
e1t1StatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55), )
if mibBuilder.loadTexts: e1t1StatsTable.setStatus('current')
e1t1StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "e1t1ParentIfIndex"), (0, "CM-FACILITY-MIB", "e1t1Index"), (0, "CM-PERFORMANCE-MIB", "e1t1StatsIndex"))
if mibBuilder.loadTexts: e1t1StatsEntry.setStatus('current')
e1t1StatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: e1t1StatsIndex.setStatus('current')
e1t1StatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsIntervalType.setStatus('current')
e1t1StatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsValid.setStatus('current')
e1t1StatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e1t1StatsAction.setStatus('current')
e1t1StatsLineCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsLineCVs.setStatus('current')
e1t1StatsLineESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsLineESs.setStatus('current')
e1t1StatsLineSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsLineSESs.setStatus('current')
e1t1StatsLineESsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsLineESsFarEnd.setStatus('current')
e1t1StatsLineUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsLineUASs.setStatus('current')
e1t1StatsLineLOSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsLineLOSSs.setStatus('current')
e1t1StatsPathCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathCVs.setStatus('current')
e1t1StatsPathESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathESs.setStatus('current')
e1t1StatsPathSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathSESs.setStatus('current')
e1t1StatsPathUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathUASs.setStatus('current')
e1t1StatsPathCVsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathCVsFarEnd.setStatus('current')
e1t1StatsPathESsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathESsFarEnd.setStatus('current')
e1t1StatsPathSESsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathSESsFarEnd.setStatus('current')
e1t1StatsPathSEFsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathSEFsFarEnd.setStatus('current')
e1t1StatsPathUASsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathUASsFarEnd.setStatus('current')
e1t1StatsPathFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathFCs.setStatus('current')
e1t1StatsPathFCsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathFCsFarEnd.setStatus('current')
e1t1StatsPathAISs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathAISs.setStatus('current')
e1t1StatsPathSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 55, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1StatsPathSASs.setStatus('current')
e1t1HistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56), )
if mibBuilder.loadTexts: e1t1HistoryTable.setStatus('current')
e1t1HistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "e1t1ParentIfIndex"), (0, "CM-FACILITY-MIB", "e1t1Index"), (0, "CM-PERFORMANCE-MIB", "e1t1StatsIndex"), (0, "CM-PERFORMANCE-MIB", "e1t1HistoryIndex"))
if mibBuilder.loadTexts: e1t1HistoryEntry.setStatus('current')
e1t1HistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: e1t1HistoryIndex.setStatus('current')
e1t1HistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryTime.setStatus('current')
e1t1HistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryValid.setStatus('current')
e1t1HistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e1t1HistoryAction.setStatus('current')
e1t1HistoryLineCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryLineCVs.setStatus('current')
e1t1HistoryLineESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryLineESs.setStatus('current')
e1t1HistoryLineSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryLineSESs.setStatus('current')
e1t1HistoryLineESsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryLineESsFarEnd.setStatus('current')
e1t1HistoryLineUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryLineUASs.setStatus('current')
e1t1HistoryLineLOSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryLineLOSSs.setStatus('current')
e1t1HistoryPathCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathCVs.setStatus('current')
e1t1HistoryPathESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathESs.setStatus('current')
e1t1HistoryPathSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathSESs.setStatus('current')
e1t1HistoryPathUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathUASs.setStatus('current')
e1t1HistoryPathCVsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathCVsFarEnd.setStatus('current')
e1t1HistoryPathESsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathESsFarEnd.setStatus('current')
e1t1HistoryPathSESsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathSESsFarEnd.setStatus('current')
e1t1HistoryPathSEFsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathSEFsFarEnd.setStatus('current')
e1t1HistoryPathUASsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathUASsFarEnd.setStatus('current')
e1t1HistoryPathFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathFCs.setStatus('current')
e1t1HistoryPathFCsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathFCsFarEnd.setStatus('current')
e1t1HistoryPathAISs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathAISs.setStatus('current')
e1t1HistoryPathSASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 56, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1HistoryPathSASs.setStatus('current')
e1t1ThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 57), )
if mibBuilder.loadTexts: e1t1ThresholdTable.setStatus('current')
e1t1ThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 57, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "e1t1ParentIfIndex"), (0, "CM-FACILITY-MIB", "e1t1Index"), (0, "CM-PERFORMANCE-MIB", "e1t1StatsIndex"), (0, "CM-PERFORMANCE-MIB", "e1t1ThresholdIndex"))
if mibBuilder.loadTexts: e1t1ThresholdEntry.setStatus('current')
e1t1ThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 57, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: e1t1ThresholdIndex.setStatus('current')
e1t1ThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 57, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1ThresholdInterval.setStatus('current')
e1t1ThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 57, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1ThresholdVariable.setStatus('current')
e1t1ThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 57, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e1t1ThresholdValueLo.setStatus('current')
e1t1ThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 57, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e1t1ThresholdValueHi.setStatus('current')
e1t1ThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 57, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e1t1ThresholdMonValue.setStatus('current')
e3t3StatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58), )
if mibBuilder.loadTexts: e3t3StatsTable.setStatus('current')
e3t3StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "e3t3ParentIfIndex"), (0, "CM-FACILITY-MIB", "e3t3Index"), (0, "CM-PERFORMANCE-MIB", "e3t3StatsIndex"))
if mibBuilder.loadTexts: e3t3StatsEntry.setStatus('current')
e3t3StatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: e3t3StatsIndex.setStatus('current')
e3t3StatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsIntervalType.setStatus('current')
e3t3StatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsValid.setStatus('current')
e3t3StatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3t3StatsAction.setStatus('current')
e3t3StatsLineCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsLineCVs.setStatus('current')
e3t3StatsLineESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsLineESs.setStatus('current')
e3t3StatsLineSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsLineSESs.setStatus('current')
e3t3StatsLineLOSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsLineLOSSs.setStatus('current')
e3t3StatsPathPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathPCVs.setStatus('current')
e3t3StatsPathCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathCCVs.setStatus('current')
e3t3StatsPathAISs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathAISs.setStatus('current')
e3t3StatsPathPESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathPESs.setStatus('current')
e3t3StatsPathCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathCESs.setStatus('current')
e3t3StatsPathFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathFCs.setStatus('current')
e3t3StatsPathSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathSEFs.setStatus('current')
e3t3StatsPathPSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathPSESs.setStatus('current')
e3t3StatsPathCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathCSESs.setStatus('current')
e3t3StatsPathPUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathPUASs.setStatus('current')
e3t3StatsPathCUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathCUASs.setStatus('current')
e3t3StatsPathCCVsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathCCVsFarEnd.setStatus('current')
e3t3StatsPathCESsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathCESsFarEnd.setStatus('current')
e3t3StatsPathCSESsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathCSESsFarEnd.setStatus('current')
e3t3StatsPathCFCsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathCFCsFarEnd.setStatus('current')
e3t3StatsPathCUASsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 58, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3StatsPathCUASsFarEnd.setStatus('current')
e3t3HistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59), )
if mibBuilder.loadTexts: e3t3HistoryTable.setStatus('current')
e3t3HistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "e3t3ParentIfIndex"), (0, "CM-FACILITY-MIB", "e3t3Index"), (0, "CM-PERFORMANCE-MIB", "e3t3StatsIndex"), (0, "CM-PERFORMANCE-MIB", "e3t3HistoryIndex"))
if mibBuilder.loadTexts: e3t3HistoryEntry.setStatus('current')
e3t3HistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: e3t3HistoryIndex.setStatus('current')
e3t3HistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryTime.setStatus('current')
e3t3HistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryValid.setStatus('current')
e3t3HistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3t3HistoryAction.setStatus('current')
e3t3HistoryLineCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryLineCVs.setStatus('current')
e3t3HistoryLineESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryLineESs.setStatus('current')
e3t3HistoryLineSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryLineSESs.setStatus('current')
e3t3HistoryLineLOSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryLineLOSSs.setStatus('current')
e3t3HistoryPathPCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathPCVs.setStatus('current')
e3t3HistoryPathCCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathCCVs.setStatus('current')
e3t3HistoryPathAISs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathAISs.setStatus('current')
e3t3HistoryPathPESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathPESs.setStatus('current')
e3t3HistoryPathCESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathCESs.setStatus('current')
e3t3HistoryPathFCs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathFCs.setStatus('current')
e3t3HistoryPathSEFs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathSEFs.setStatus('current')
e3t3HistoryPathPSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathPSESs.setStatus('current')
e3t3HistoryPathCSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathCSESs.setStatus('current')
e3t3HistoryPathPUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathPUASs.setStatus('current')
e3t3HistoryPathCUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 19), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathCUASs.setStatus('current')
e3t3HistoryPathCCVsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 20), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathCCVsFarEnd.setStatus('current')
e3t3HistoryPathCESsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 21), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathCESsFarEnd.setStatus('current')
e3t3HistoryPathCSESsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 22), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathCSESsFarEnd.setStatus('current')
e3t3HistoryPathCFCsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 23), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathCFCsFarEnd.setStatus('current')
e3t3HistoryPathCUASsFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 59, 1, 24), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3HistoryPathCUASsFarEnd.setStatus('current')
e3t3ThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 60), )
if mibBuilder.loadTexts: e3t3ThresholdTable.setStatus('current')
e3t3ThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 60, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "e3t3ParentIfIndex"), (0, "CM-FACILITY-MIB", "e3t3Index"), (0, "CM-PERFORMANCE-MIB", "e3t3StatsIndex"), (0, "CM-PERFORMANCE-MIB", "e3t3ThresholdIndex"))
if mibBuilder.loadTexts: e3t3ThresholdEntry.setStatus('current')
e3t3ThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 60, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: e3t3ThresholdIndex.setStatus('current')
e3t3ThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 60, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3ThresholdInterval.setStatus('current')
e3t3ThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 60, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3ThresholdVariable.setStatus('current')
e3t3ThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 60, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3t3ThresholdValueLo.setStatus('current')
e3t3ThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 60, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3t3ThresholdValueHi.setStatus('current')
e3t3ThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 60, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3t3ThresholdMonValue.setStatus('current')
cmFlowBWExtTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 61), )
if mibBuilder.loadTexts: cmFlowBWExtTable.setStatus('current')
cmFlowBWExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 61, 1), )
cmFlowEntry.registerAugmentions(("CM-PERFORMANCE-MIB", "cmFlowBWExtEntry"))
cmFlowBWExtEntry.setIndexNames(*cmFlowEntry.getIndexNames())
if mibBuilder.loadTexts: cmFlowBWExtEntry.setStatus('current')
cmFlowBWA2NCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 61, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowBWA2NCIR.setStatus('current')
cmFlowBWA2NEIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 61, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowBWA2NEIR.setStatus('current')
cmFlowBWN2ACIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 61, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowBWN2ACIR.setStatus('current')
cmFlowBWN2AEIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 61, 1, 4), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowBWN2AEIR.setStatus('current')
cmFlowBWA2NGFB = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 61, 1, 5), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowBWA2NGFB.setStatus('current')
cmFlowBWA2NMFB = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 61, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmFlowBWA2NMFB.setStatus('current')
ocnStmThresholdVarTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 62), )
if mibBuilder.loadTexts: ocnStmThresholdVarTable.setStatus('current')
ocnStmThresholdVarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 62, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "ocnStmIndex"), (0, "CM-PERFORMANCE-MIB", "ocnStmStatsIndex"))
if mibBuilder.loadTexts: ocnStmThresholdVarEntry.setStatus('current')
ocnStmThresholdVarOprVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 62, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ocnStmThresholdVarOprVariance.setStatus('current')
ocnStmThresholdVarOptVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 62, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ocnStmThresholdVarOptVariance.setStatus('current')
cmPerfScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 63))
cmPerQueryGenControl = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 63, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmPerQueryGenControl.setStatus('current')
f3FpQosShaperStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64), )
if mibBuilder.loadTexts: f3FpQosShaperStatsTable.setStatus('current')
f3FpQosShaperStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "f3FpQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "f3FpQosShaperStatsIndex"))
if mibBuilder.loadTexts: f3FpQosShaperStatsEntry.setStatus('current')
f3FpQosShaperStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperStatsIndex.setStatus('current')
f3FpQosShaperStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperStatsIntervalType.setStatus('current')
f3FpQosShaperStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperStatsValid.setStatus('current')
f3FpQosShaperStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FpQosShaperStatsAction.setStatus('current')
f3FpQosShaperStatsBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperStatsBT.setStatus('current')
f3FpQosShaperStatsBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperStatsBTD.setStatus('current')
f3FpQosShaperStatsFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperStatsFD.setStatus('current')
f3FpQosShaperStatsFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperStatsFTD.setStatus('current')
f3FpQosShaperStatsABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperStatsABRRL.setStatus('current')
f3FpQosShaperStatsBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperStatsBREDD.setStatus('current')
f3FpQosShaperStatsFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 64, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperStatsFREDD.setStatus('current')
f3FpQosShaperHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65), )
if mibBuilder.loadTexts: f3FpQosShaperHistoryTable.setStatus('current')
f3FpQosShaperHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "f3FpQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "f3FpQosShaperStatsIndex"), (0, "CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryIndex"))
if mibBuilder.loadTexts: f3FpQosShaperHistoryEntry.setStatus('current')
f3FpQosShaperHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperHistoryIndex.setStatus('current')
f3FpQosShaperHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperHistoryTime.setStatus('current')
f3FpQosShaperHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperHistoryValid.setStatus('current')
f3FpQosShaperHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FpQosShaperHistoryAction.setStatus('current')
f3FpQosShaperHistoryBT = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperHistoryBT.setStatus('current')
f3FpQosShaperHistoryBTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperHistoryBTD.setStatus('current')
f3FpQosShaperHistoryFD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperHistoryFD.setStatus('current')
f3FpQosShaperHistoryFTD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperHistoryFTD.setStatus('current')
f3FpQosShaperHistoryABRRL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperHistoryABRRL.setStatus('current')
f3FpQosShaperHistoryBREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperHistoryBREDD.setStatus('current')
f3FpQosShaperHistoryFREDD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 65, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperHistoryFREDD.setStatus('current')
f3FpQosShaperThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 66), )
if mibBuilder.loadTexts: f3FpQosShaperThresholdTable.setStatus('current')
f3FpQosShaperThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 66, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "f3FpQosShaperIndex"), (0, "CM-PERFORMANCE-MIB", "f3FpQosShaperStatsIndex"), (0, "CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdIndex"))
if mibBuilder.loadTexts: f3FpQosShaperThresholdEntry.setStatus('current')
f3FpQosShaperThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 66, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperThresholdIndex.setStatus('current')
f3FpQosShaperThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 66, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperThresholdInterval.setStatus('current')
f3FpQosShaperThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 66, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperThresholdVariable.setStatus('current')
f3FpQosShaperThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 66, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FpQosShaperThresholdValueLo.setStatus('current')
f3FpQosShaperThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 66, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FpQosShaperThresholdValueHi.setStatus('current')
f3FpQosShaperThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 66, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosShaperThresholdMonValue.setStatus('current')
f3FpQosPolicerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67), )
if mibBuilder.loadTexts: f3FpQosPolicerStatsTable.setStatus('current')
f3FpQosPolicerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "f3FpQosPolicerIndex"), (0, "CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsIndex"))
if mibBuilder.loadTexts: f3FpQosPolicerStatsEntry.setStatus('current')
f3FpQosPolicerStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerStatsIndex.setStatus('current')
f3FpQosPolicerStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerStatsIntervalType.setStatus('current')
f3FpQosPolicerStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerStatsValid.setStatus('current')
f3FpQosPolicerStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FpQosPolicerStatsAction.setStatus('current')
f3FpQosPolicerStatsFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerStatsFMG.setStatus('current')
f3FpQosPolicerStatsFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerStatsFMY.setStatus('current')
f3FpQosPolicerStatsFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerStatsFMRD.setStatus('current')
f3FpQosPolicerStatsBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerStatsBytesIn.setStatus('current')
f3FpQosPolicerStatsBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerStatsBytesOut.setStatus('current')
f3FpQosPolicerStatsABR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 67, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerStatsABR.setStatus('current')
f3FpQosPolicerHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68), )
if mibBuilder.loadTexts: f3FpQosPolicerHistoryTable.setStatus('current')
f3FpQosPolicerHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "f3FpQosPolicerIndex"), (0, "CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsIndex"), (0, "CM-PERFORMANCE-MIB", "f3FpQosPolicerHistoryIndex"))
if mibBuilder.loadTexts: f3FpQosPolicerHistoryEntry.setStatus('current')
f3FpQosPolicerHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerHistoryIndex.setStatus('current')
f3FpQosPolicerHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerHistoryTime.setStatus('current')
f3FpQosPolicerHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerHistoryValid.setStatus('current')
f3FpQosPolicerHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FpQosPolicerHistoryAction.setStatus('current')
f3FpQosPolicerHistoryFMG = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerHistoryFMG.setStatus('current')
f3FpQosPolicerHistoryFMY = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerHistoryFMY.setStatus('current')
f3FpQosPolicerHistoryFMRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerHistoryFMRD.setStatus('current')
f3FpQosPolicerHistoryBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerHistoryBytesIn.setStatus('current')
f3FpQosPolicerHistoryBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerHistoryBytesOut.setStatus('current')
f3FpQosPolicerHistoryABR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 68, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerHistoryABR.setStatus('current')
f3FpQosPolicerThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 69), )
if mibBuilder.loadTexts: f3FpQosPolicerThresholdTable.setStatus('current')
f3FpQosPolicerThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 69, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "f3FpQosPolicerIndex"), (0, "CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsIndex"), (0, "CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdIndex"))
if mibBuilder.loadTexts: f3FpQosPolicerThresholdEntry.setStatus('current')
f3FpQosPolicerThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 69, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerThresholdIndex.setStatus('current')
f3FpQosPolicerThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 69, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerThresholdInterval.setStatus('current')
f3FpQosPolicerThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 69, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerThresholdVariable.setStatus('current')
f3FpQosPolicerThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 69, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FpQosPolicerThresholdValueLo.setStatus('current')
f3FpQosPolicerThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 69, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3FpQosPolicerThresholdValueHi.setStatus('current')
f3FpQosPolicerThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 69, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3FpQosPolicerThresholdMonValue.setStatus('current')
f3AclRuleStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 70), )
if mibBuilder.loadTexts: f3AclRuleStatsTable.setStatus('current')
f3AclRuleStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 70, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "f3AclRuleIndex"), (0, "CM-PERFORMANCE-MIB", "f3AclRuleStatsIndex"))
if mibBuilder.loadTexts: f3AclRuleStatsEntry.setStatus('current')
f3AclRuleStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 70, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3AclRuleStatsIndex.setStatus('current')
f3AclRuleStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 70, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AclRuleStatsIntervalType.setStatus('current')
f3AclRuleStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 70, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AclRuleStatsValid.setStatus('current')
f3AclRuleStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 70, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AclRuleStatsAction.setStatus('current')
f3AclRuleStatsRuleMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 70, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AclRuleStatsRuleMatch.setStatus('current')
f3AclRuleHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 71), )
if mibBuilder.loadTexts: f3AclRuleHistoryTable.setStatus('current')
f3AclRuleHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 71, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "f3AclRuleIndex"), (0, "CM-PERFORMANCE-MIB", "f3AclRuleStatsIndex"), (0, "CM-PERFORMANCE-MIB", "f3AclRuleHistoryIndex"))
if mibBuilder.loadTexts: f3AclRuleHistoryEntry.setStatus('current')
f3AclRuleHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 71, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3AclRuleHistoryIndex.setStatus('current')
f3AclRuleHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 71, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AclRuleHistoryTime.setStatus('current')
f3AclRuleHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 71, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AclRuleHistoryValid.setStatus('current')
f3AclRuleHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 71, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AclRuleHistoryAction.setStatus('current')
f3AclRuleHistoryRuleMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 71, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AclRuleHistoryRuleMatch.setStatus('current')
f3AclRuleThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 72), )
if mibBuilder.loadTexts: f3AclRuleThresholdTable.setStatus('current')
f3AclRuleThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 72, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-FACILITY-MIB", "cmEthernetTrafficPortIndex"), (0, "CM-FACILITY-MIB", "cmFlowPointIndex"), (0, "CM-FACILITY-MIB", "f3AclRuleIndex"), (0, "CM-PERFORMANCE-MIB", "f3AclRuleStatsIndex"), (0, "CM-PERFORMANCE-MIB", "f3AclRuleThresholdIndex"))
if mibBuilder.loadTexts: f3AclRuleThresholdEntry.setStatus('current')
f3AclRuleThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 72, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3AclRuleThresholdIndex.setStatus('current')
f3AclRuleThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 72, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AclRuleThresholdInterval.setStatus('current')
f3AclRuleThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 72, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AclRuleThresholdVariable.setStatus('current')
f3AclRuleThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 72, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AclRuleThresholdValueLo.setStatus('current')
f3AclRuleThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 72, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3AclRuleThresholdValueHi.setStatus('current')
f3AclRuleThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 72, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3AclRuleThresholdMonValue.setStatus('current')
cmEthernetNetPortXdslStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73), )
if mibBuilder.loadTexts: cmEthernetNetPortXdslStatsTable.setStatus('current')
cmEthernetNetPortXdslStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1), )
cmEthernetNetPortStatsEntry.registerAugmentions(("CM-PERFORMANCE-MIB", "cmEthernetNetPortXdslStatsEntry"))
cmEthernetNetPortXdslStatsEntry.setIndexNames(*cmEthernetNetPortStatsEntry.getIndexNames())
if mibBuilder.loadTexts: cmEthernetNetPortXdslStatsEntry.setStatus('current')
cmEthernetNetPortStatsXdslUsPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 1), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslUsPkt.setStatus('current')
cmEthernetNetPortStatsXdslUsCrcError = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 2), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslUsCrcError.setStatus('current')
cmEthernetNetPortStatsXdslDsPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 3), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslDsPkt.setStatus('current')
cmEthernetNetPortStatsXdslUsFecs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 4), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslUsFecs.setStatus('current')
cmEthernetNetPortStatsXdslDsFecs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslDsFecs.setStatus('current')
cmEthernetNetPortStatsXdslUsEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslUsEs.setStatus('current')
cmEthernetNetPortStatsXdslDsEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslDsEs.setStatus('current')
cmEthernetNetPortStatsXdslUsSes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslUsSes.setStatus('current')
cmEthernetNetPortStatsXdslDsSes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslDsSes.setStatus('current')
cmEthernetNetPortStatsXdslUsLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslUsLoss.setStatus('current')
cmEthernetNetPortStatsXdslDsLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslDsLoss.setStatus('current')
cmEthernetNetPortStatsXdslDsUas = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslDsUas.setStatus('current')
cmEthernetNetPortStatsXdslUsCv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslUsCv.setStatus('current')
cmEthernetNetPortStatsXdslDsCv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslDsCv.setStatus('current')
cmEthernetNetPortStatsXdslUsFec = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslUsFec.setStatus('current')
cmEthernetNetPortStatsXdslDsFec = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslDsFec.setStatus('current')
cmEthernetNetPortStatsXdslDsFullInits = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslDsFullInits.setStatus('current')
cmEthernetNetPortStatsXdslUsFullInits = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 73, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortStatsXdslUsFullInits.setStatus('current')
cmEthernetNetPortXdslHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74), )
if mibBuilder.loadTexts: cmEthernetNetPortXdslHistoryTable.setStatus('current')
cmEthernetNetPortXdslHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1), )
cmEthernetNetPortHistoryEntry.registerAugmentions(("CM-PERFORMANCE-MIB", "cmEthernetNetPortXdslHistoryEntry"))
cmEthernetNetPortXdslHistoryEntry.setIndexNames(*cmEthernetNetPortHistoryEntry.getIndexNames())
if mibBuilder.loadTexts: cmEthernetNetPortXdslHistoryEntry.setStatus('current')
cmEthernetNetPortHistoryXdslUsPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 1), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslUsPkt.setStatus('current')
cmEthernetNetPortHistoryXdslUsCrcError = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 2), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslUsCrcError.setStatus('current')
cmEthernetNetPortHistoryXdslDsPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 3), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslDsPkt.setStatus('current')
cmEthernetNetPortHistoryXdslUsFecs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 4), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslUsFecs.setStatus('current')
cmEthernetNetPortHistoryXdslDsFecs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslDsFecs.setStatus('current')
cmEthernetNetPortHistoryXdslUsEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslUsEs.setStatus('current')
cmEthernetNetPortHistoryXdslDsEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslDsEs.setStatus('current')
cmEthernetNetPortHistoryXdslUsSes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslUsSes.setStatus('current')
cmEthernetNetPortHistoryXdslDsSes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 9), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslDsSes.setStatus('current')
cmEthernetNetPortHistoryXdslUsLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslUsLoss.setStatus('current')
cmEthernetNetPortHistoryXdslDsLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslDsLoss.setStatus('current')
cmEthernetNetPortHistoryXdslDsUas = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslDsUas.setStatus('current')
cmEthernetNetPortHistoryXdslUsCv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslUsCv.setStatus('current')
cmEthernetNetPortHistoryXdslDsCv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslDsCv.setStatus('current')
cmEthernetNetPortHistoryXdslUsFec = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslUsFec.setStatus('current')
cmEthernetNetPortHistoryXdslDsFec = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslDsFec.setStatus('current')
cmEthernetNetPortHistoryXdslDsFullInits = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslDsFullInits.setStatus('current')
cmEthernetNetPortHistoryXdslUsFullInits = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 74, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmEthernetNetPortHistoryXdslUsFullInits.setStatus('current')
f3CardStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75), )
if mibBuilder.loadTexts: f3CardStatsTable.setStatus('current')
f3CardStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-PERFORMANCE-MIB", "f3CardStatsIndex"))
if mibBuilder.loadTexts: f3CardStatsEntry.setStatus('current')
f3CardStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: f3CardStatsIndex.setStatus('current')
f3CardStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardStatsIntervalType.setStatus('current')
f3CardStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardStatsValid.setStatus('current')
f3CardStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3CardStatsAction.setStatus('current')
f3CardStatsACU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardStatsACU.setStatus('current')
f3CardStatsMCU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardStatsMCU.setStatus('current')
f3CardStatsICU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardStatsICU.setStatus('current')
f3CardStatsAMU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardStatsAMU.setStatus('current')
f3CardStatsMMU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardStatsMMU.setStatus('current')
f3CardStatsIMU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 75, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardStatsIMU.setStatus('current')
f3CardHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76), )
if mibBuilder.loadTexts: f3CardHistoryTable.setStatus('current')
f3CardHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-PERFORMANCE-MIB", "f3CardStatsIndex"), (0, "CM-PERFORMANCE-MIB", "f3CardHistoryIndex"))
if mibBuilder.loadTexts: f3CardHistoryEntry.setStatus('current')
f3CardHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: f3CardHistoryIndex.setStatus('current')
f3CardHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardHistoryTime.setStatus('current')
f3CardHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardHistoryValid.setStatus('current')
f3CardHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3CardHistoryAction.setStatus('current')
f3CardHistoryACU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardHistoryACU.setStatus('current')
f3CardHistoryMCU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardHistoryMCU.setStatus('current')
f3CardHistoryICU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardHistoryICU.setStatus('current')
f3CardHistoryAMU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardHistoryAMU.setStatus('current')
f3CardHistoryMMU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardHistoryMMU.setStatus('current')
f3CardHistoryIMU = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 76, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardHistoryIMU.setStatus('current')
f3CardThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 77), )
if mibBuilder.loadTexts: f3CardThresholdTable.setStatus('current')
f3CardThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 77, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "CM-PERFORMANCE-MIB", "f3CardStatsIndex"), (0, "CM-PERFORMANCE-MIB", "f3CardThresholdIndex"))
if mibBuilder.loadTexts: f3CardThresholdEntry.setStatus('current')
f3CardThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 77, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3CardThresholdIndex.setStatus('current')
f3CardThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 77, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardThresholdInterval.setStatus('current')
f3CardThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 77, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardThresholdVariable.setStatus('current')
f3CardThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 77, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3CardThresholdValueLo.setStatus('current')
f3CardThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 77, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3CardThresholdValueHi.setStatus('current')
f3CardThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 1, 77, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3CardThresholdMonValue.setStatus('current')
cmEthernetAccPortThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 1)).setObjects(("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdMonValue"))
if mibBuilder.loadTexts: cmEthernetAccPortThresholdCrossingAlert.setStatus('current')
cmEthernetNetPortThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 2)).setObjects(("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdMonValue"))
if mibBuilder.loadTexts: cmEthernetNetPortThresholdCrossingAlert.setStatus('current')
cmFlowThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 3)).setObjects(("CM-PERFORMANCE-MIB", "cmFlowThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdMonValue"))
if mibBuilder.loadTexts: cmFlowThresholdCrossingAlert.setStatus('current')
cmQosShaperThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 4)).setObjects(("CM-PERFORMANCE-MIB", "cmQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdMonValue"))
if mibBuilder.loadTexts: cmQosShaperThresholdCrossingAlert.setStatus('current')
cmQosFlowPolicerThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 5)).setObjects(("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdMonValue"))
if mibBuilder.loadTexts: cmQosFlowPolicerThresholdCrossingAlert.setStatus('current')
cmAccPortQosShaperThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 6)).setObjects(("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdMonValue"))
if mibBuilder.loadTexts: cmAccPortQosShaperThresholdCrossingAlert.setStatus('current')
cmEthernetTrafficPortThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 7)).setObjects(("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdMonValue"))
if mibBuilder.loadTexts: cmEthernetTrafficPortThresholdCrossingAlert.setStatus('current')
cmFlowPointThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 8)).setObjects(("CM-PERFORMANCE-MIB", "cmFlowPointThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdMonValue"))
if mibBuilder.loadTexts: cmFlowPointThresholdCrossingAlert.setStatus('current')
cmOAMFlowPointThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 9)).setObjects(("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdMonValue"))
if mibBuilder.loadTexts: cmOAMFlowPointThresholdCrossingAlert.setStatus('current')
cmQosPolicerV2ThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 10)).setObjects(("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdMonValue"))
if mibBuilder.loadTexts: cmQosPolicerV2ThresholdCrossingAlert.setStatus('current')
cmQosShaperV2ThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 11)).setObjects(("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdMonValue"))
if mibBuilder.loadTexts: cmQosShaperV2ThresholdCrossingAlert.setStatus('current')
cmLagThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 12)).setObjects(("CM-PERFORMANCE-MIB", "cmLagThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmLagThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmLagThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmLagThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmLagThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmLagThresholdMonValue"))
if mibBuilder.loadTexts: cmLagThresholdCrossingAlert.setStatus('current')
cmTrafficPortQosShaperThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 13)).setObjects(("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdMonValue"))
if mibBuilder.loadTexts: cmTrafficPortQosShaperThresholdCrossingAlert.setStatus('current')
f3NetPortQosShaperThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 14)).setObjects(("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdMonValue"))
if mibBuilder.loadTexts: f3NetPortQosShaperThresholdCrossingAlert.setStatus('current')
ocnStmThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 15)).setObjects(("CM-PERFORMANCE-MIB", "ocnStmThresholdIndex"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdInterval"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdVariable"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdValueLo"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdValueHi"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdMonValue"))
if mibBuilder.loadTexts: ocnStmThresholdCrossingAlert.setStatus('current')
stsVcPathThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 16)).setObjects(("CM-PERFORMANCE-MIB", "stsVcPathThresholdIndex"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdInterval"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdVariable"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdValueLo"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdValueHi"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdMonValue"))
if mibBuilder.loadTexts: stsVcPathThresholdCrossingAlert.setStatus('current')
vtVcPathThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 17)).setObjects(("CM-PERFORMANCE-MIB", "vtVcPathThresholdIndex"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdInterval"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdVariable"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdValueLo"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdValueHi"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdMonValue"))
if mibBuilder.loadTexts: vtVcPathThresholdCrossingAlert.setStatus('current')
e1t1ThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 18)).setObjects(("CM-PERFORMANCE-MIB", "e1t1ThresholdIndex"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdInterval"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdVariable"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdValueLo"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdValueHi"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdMonValue"))
if mibBuilder.loadTexts: e1t1ThresholdCrossingAlert.setStatus('current')
e3t3ThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 19)).setObjects(("CM-PERFORMANCE-MIB", "e3t3ThresholdIndex"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdInterval"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdVariable"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdValueLo"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdValueHi"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdMonValue"))
if mibBuilder.loadTexts: e3t3ThresholdCrossingAlert.setStatus('current')
cmPerQueryGenTrap = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 20))
if mibBuilder.loadTexts: cmPerQueryGenTrap.setStatus('current')
f3FpQosShaperThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 21)).setObjects(("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdMonValue"))
if mibBuilder.loadTexts: f3FpQosShaperThresholdCrossingAlert.setStatus('current')
f3FpQosPolicerThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 22)).setObjects(("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdIndex"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdInterval"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdVariable"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdValueLo"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdValueHi"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdMonValue"))
if mibBuilder.loadTexts: f3FpQosPolicerThresholdCrossingAlert.setStatus('current')
f3AclRuleThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 23)).setObjects(("CM-PERFORMANCE-MIB", "f3AclRuleThresholdIndex"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdInterval"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdVariable"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdValueLo"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdValueHi"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdMonValue"))
if mibBuilder.loadTexts: f3AclRuleThresholdCrossingAlert.setStatus('current')
f3CardThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 2, 24)).setObjects(("CM-PERFORMANCE-MIB", "f3CardThresholdIndex"), ("CM-PERFORMANCE-MIB", "f3CardThresholdInterval"), ("CM-PERFORMANCE-MIB", "f3CardThresholdVariable"), ("CM-PERFORMANCE-MIB", "f3CardThresholdValueLo"), ("CM-PERFORMANCE-MIB", "f3CardThresholdValueHi"), ("CM-PERFORMANCE-MIB", "f3CardThresholdMonValue"))
if mibBuilder.loadTexts: f3CardThresholdCrossingAlert.setStatus('current')
cmPerfCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 1))
cmPerfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2))
cmPerfCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 1, 1)).setObjects(("CM-PERFORMANCE-MIB", "cmPerfObjectGroup"), ("CM-PERFORMANCE-MIB", "cmPerfNotifGroup"), ("CM-PERFORMANCE-MIB", "ethernetAccessPortPMGroup"), ("CM-PERFORMANCE-MIB", "ethernetNetworkPortPMGroup"), ("CM-PERFORMANCE-MIB", "trafficPMGroup"), ("CM-PERFORMANCE-MIB", "f3AclRulePerfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmPerfCompliance = cmPerfCompliance.setStatus('current')
cmPerfObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 1))
for _cmPerfObjectGroup_obj in [[("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsValid"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsAction"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESC"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESO"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsLES"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryTime"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryValid"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryAction"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESC"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESO"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryLES"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdVarOprVariance"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdVarOptVariance"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsValid"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsAction"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESO"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsLES"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsPSC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryTime"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryValid"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryAction"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESO"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryLES"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryPSC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdVarOprVariance"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdVarOptVariance"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIndex"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmFlowStatsValid"), ("CM-PERFORMANCE-MIB", "cmFlowStatsAction"), ("CM-PERFORMANCE-MIB", "cmFlowStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRRLA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRRLRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRRLN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsUAS"), ("CM-PERFORMANCE-MIB", "cmFlowStatsES"), ("CM-PERFORMANCE-MIB", "cmFlowStatsSES"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMGA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMRDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesInA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesOutA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMGN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMRDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesInN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesOutN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFTDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMCDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFBCDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryTime"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryValid"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryAction"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRRLA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRRLRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRRLN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryES"), ("CM-PERFORMANCE-MIB", "cmFlowHistorySES")], [("CM-PERFORMANCE-MIB", "cmFlowHistoryFMGA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMRDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesInA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesOutA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMGN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMRDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesInN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesOutN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFTDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMCDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFBCDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsValid"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsAction"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBT"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBR"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFR"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsABRRL"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsABRRLR"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryTime"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryValid"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryAction"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBT"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBR"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFR"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryABRRL"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryABRRLR"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsIndex"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsValid"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsAction"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsFMG"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsFMY"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsFMYD"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsFMRD"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsBytesIn"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsBytesOut"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsABR"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryTime"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryValid"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryAction"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryFMG"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryFMY"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryFMYD"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryFMRD"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryBytesIn"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryBytesOut"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryABR"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsIndex"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsValid"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsAction"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsBT"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsBTD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsFD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsFTD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsBR"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsFR"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsABRRL"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsBREDD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsFREDD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryTime"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryValid"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryAction"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryBT"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryBTD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryFD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryFTD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryBR"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryFR"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryABRRL"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryBREDD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryFREDD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsValid"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsAction"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESO"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsLES"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsATFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsLkupFails"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsL2PTRxFramesEncap"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsL2PTTxFramesDecap"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsFmcd"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsFbcd"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsAclDropNoMatch"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsAclFwd2Cpu"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsDhcpDropNoAssocIf"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsDroppedFragmented"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsRLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsROPT"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsROPR"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsRTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryTime"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryValid"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryAction"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESO"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryLES"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryATFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryLkupFails"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryL2PTRxFramesEncap"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryL2PTTxFramesDecap"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryFmcd"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryFbcd"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryAclDropNoMatch"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryAclFwd2Cpu"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryDhcpDropNoAssocIf"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryRLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryROPT"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryROPR"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryRTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdVarOprVariance"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdVarOptVariance"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsIndex")], [("CM-PERFORMANCE-MIB", "cmFlowPointStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsValid"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsAction"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsABRRx"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsABRRLRx"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsUAS"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsSES"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFMG"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFMY"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFMRD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFTD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsBytesIn"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsBytesOut"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFREDD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFACLD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryTime"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryValid"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryAction"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryABRRx"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryABRRLRx"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistorySES"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFMG"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFMY"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFMRD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFTD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryBytesIn"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryBytesOut"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFREDD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFACLD"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointStatsIndex"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointStatsValid"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointStatsAction"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointStatsUAS"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointStatsSES"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointHistoryTime"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointHistoryValid"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointHistoryAction"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointHistorySES"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsIndex"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsValid"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsAction"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsFMG"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsFMY"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsFMYD"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsFMRD"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsBytesIn"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsBytesOut"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2StatsABR"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryIndex"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryTime"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryValid"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryAction"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryFMG"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryFMY"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryFMYD"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryFMRD"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryBytesIn"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryBytesOut"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2HistoryABR"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2StatsIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2StatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2StatsValid"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2StatsAction"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2StatsBT"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2StatsBTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2StatsFD"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2StatsFTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2StatsABRRL"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2StatsBREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2StatsFREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryTime"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryValid"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryAction"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryBT"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryBTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryFD"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryFTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryABRRL"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryBREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2HistoryFREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmLagStatsIndex"), ("CM-PERFORMANCE-MIB", "cmLagStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmLagStatsValid"), ("CM-PERFORMANCE-MIB", "cmLagStatsAction"), ("CM-PERFORMANCE-MIB", "cmLagStatsESBF"), ("CM-PERFORMANCE-MIB", "cmLagStatsESBP"), ("CM-PERFORMANCE-MIB", "cmLagStatsESBS"), ("CM-PERFORMANCE-MIB", "cmLagStatsESC"), ("CM-PERFORMANCE-MIB", "cmLagStatsESCAE"), ("CM-PERFORMANCE-MIB", "cmLagStatsESDE"), ("CM-PERFORMANCE-MIB", "cmLagStatsESF"), ("CM-PERFORMANCE-MIB", "cmLagStatsESFS"), ("CM-PERFORMANCE-MIB", "cmLagStatsESJ"), ("CM-PERFORMANCE-MIB", "cmLagStatsESMF"), ("CM-PERFORMANCE-MIB", "cmLagStatsESMP"), ("CM-PERFORMANCE-MIB", "cmLagStatsESO"), ("CM-PERFORMANCE-MIB", "cmLagStatsESOF"), ("CM-PERFORMANCE-MIB", "cmLagStatsESOP"), ("CM-PERFORMANCE-MIB", "cmLagStatsESP"), ("CM-PERFORMANCE-MIB", "cmLagStatsESP64"), ("CM-PERFORMANCE-MIB", "cmLagStatsESP65"), ("CM-PERFORMANCE-MIB", "cmLagStatsESP128"), ("CM-PERFORMANCE-MIB", "cmLagStatsESP256"), ("CM-PERFORMANCE-MIB", "cmLagStatsESP512"), ("CM-PERFORMANCE-MIB", "cmLagStatsESP1024"), ("CM-PERFORMANCE-MIB", "cmLagStatsESP1519"), ("CM-PERFORMANCE-MIB", "cmLagStatsESUF"), ("CM-PERFORMANCE-MIB", "cmLagStatsESUP"), ("CM-PERFORMANCE-MIB", "cmLagStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmLagStatsL2CPFP"), ("CM-PERFORMANCE-MIB", "cmLagStatsAUFD"), ("CM-PERFORMANCE-MIB", "cmLagStatsAPFD"), ("CM-PERFORMANCE-MIB", "cmLagStatsABRRx"), ("CM-PERFORMANCE-MIB", "cmLagStatsABRTx"), ("CM-PERFORMANCE-MIB", "cmLagStatsATFD"), ("CM-PERFORMANCE-MIB", "cmLagStatsLkupFails"), ("CM-PERFORMANCE-MIB", "cmLagHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmLagHistoryTime"), ("CM-PERFORMANCE-MIB", "cmLagHistoryValid"), ("CM-PERFORMANCE-MIB", "cmLagHistoryAction"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESBF"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESBP"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESBS"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESC"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESCAE"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESDE"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESF"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESFS"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESJ"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESMF"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESMP"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESO"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESOF"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESOP"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESP"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESP64"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESP65"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESP128"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESP256"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESP512"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESP1024"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESP1519"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESUF"), ("CM-PERFORMANCE-MIB", "cmLagHistoryESUP"), ("CM-PERFORMANCE-MIB", "cmLagHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmLagHistoryL2CPFP"), ("CM-PERFORMANCE-MIB", "cmLagHistoryAUFD"), ("CM-PERFORMANCE-MIB", "cmLagHistoryAPFD"), ("CM-PERFORMANCE-MIB", "cmLagHistoryABRRx"), ("CM-PERFORMANCE-MIB", "cmLagHistoryABRTx"), ("CM-PERFORMANCE-MIB", "cmLagHistoryATFD"), ("CM-PERFORMANCE-MIB", "cmLagHistoryLkupFails"), ("CM-PERFORMANCE-MIB", "cmLagThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmLagThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmLagThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmLagThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmLagThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmLagThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsIndex"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsValid"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsAction"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsBT"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsBTD"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsFD"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsFTD"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsABRRL"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsBREDD"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperStatsFREDD"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryTime"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryValid"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryAction"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryBT"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryBTD"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryFD"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryFTD"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryABRRL"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryBREDD"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperHistoryFREDD"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdMonValue"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsIndex"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsIntervalType"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsValid"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsAction"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsBT"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsBTD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsFD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsFTD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsBR"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsFR"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsABRRL"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsBREDD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsFREDD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryIndex"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryTime"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryValid"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryAction"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryBT"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryBTD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryFD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryFTD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryBR"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryFR"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryABRRL"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryBREDD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryFREDD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdMonValue"), ("CM-PERFORMANCE-MIB", "ocnStmStatsIndex"), ("CM-PERFORMANCE-MIB", "ocnStmStatsIntervalType"), ("CM-PERFORMANCE-MIB", "ocnStmStatsValid"), ("CM-PERFORMANCE-MIB", "ocnStmStatsAction")], [("CM-PERFORMANCE-MIB", "ocnStmStatsLineLBC"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineOPT"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineOPR"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineTemp"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLinePSC"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineSESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineCVs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineUASs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineFCs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineFarEndESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineFarEndSESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineFarEndCVs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineFarEndUASs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsSectionESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsSectionSESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsSectionCVs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsSectionSEFs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsSectionUASs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryIndex"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryTime"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryValid"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryAction"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineLBC"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineOPT"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineOPR"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineTemp"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLinePSC"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineSESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineCVs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineUASs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineFCs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineFarEndESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineFarEndSESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineFarEndCVs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineFarEndUASs"), ("CM-PERFORMANCE-MIB", "ocnStmHistorySectionESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistorySectionSESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistorySectionCVs"), ("CM-PERFORMANCE-MIB", "ocnStmHistorySectionSEFs"), ("CM-PERFORMANCE-MIB", "ocnStmHistorySectionUASs"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdIndex"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdInterval"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdVariable"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdValueLo"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdValueHi"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdMonValue"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsIndex"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsIntervalType"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsValid"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsAction"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsESs"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsSESs"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsCVs"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsUASs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndStatsESs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndStatsSESs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndStatsCVs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndStatsUASs"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryIndex"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryTime"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryValid"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryAction"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryESs"), ("CM-PERFORMANCE-MIB", "stsVcPathHistorySESs"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryCVs"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryUASs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndHistoryESs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndHistorySESs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndHistoryCVs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndHistoryUASs"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdIndex"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdInterval"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdVariable"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdValueLo"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdValueHi"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdMonValue"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsIndex"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsIntervalType"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsValid"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsAction"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsESs"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsSESs"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsCVs"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsUASs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndStatsESs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndStatsSESs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndStatsCVs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndStatsUASs"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryIndex"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryTime"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryValid"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryAction"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryESs"), ("CM-PERFORMANCE-MIB", "vtVcPathHistorySESs"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryCVs"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryUASs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndHistoryESs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndHistorySESs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndHistoryCVs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndHistoryUASs"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdIndex"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdInterval"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdVariable"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdValueLo"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdValueHi"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdMonValue"), ("CM-PERFORMANCE-MIB", "e1t1StatsIndex"), ("CM-PERFORMANCE-MIB", "e1t1StatsIntervalType"), ("CM-PERFORMANCE-MIB", "e1t1StatsValid"), ("CM-PERFORMANCE-MIB", "e1t1StatsAction"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineCVs"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineESs"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineSESs"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineUASs"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineLOSSs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathCVs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathESs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathSESs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathUASs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathCVsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathSESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathSEFsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathUASsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathFCs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathFCsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathAISs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathSASs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryIndex"), ("CM-PERFORMANCE-MIB", "e1t1HistoryTime"), ("CM-PERFORMANCE-MIB", "e1t1HistoryValid"), ("CM-PERFORMANCE-MIB", "e1t1HistoryAction"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineCVs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineESs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineSESs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineUASs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineLOSSs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathCVs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathESs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathSESs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathUASs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathCVsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathSESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathSEFsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathUASsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathFCs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathFCsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathAISs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathSASs"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdIndex"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdInterval"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdVariable"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdValueLo"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdValueHi"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdMonValue"), ("CM-PERFORMANCE-MIB", "e3t3StatsIndex"), ("CM-PERFORMANCE-MIB", "e3t3StatsIntervalType"), ("CM-PERFORMANCE-MIB", "e3t3StatsValid"), ("CM-PERFORMANCE-MIB", "e3t3StatsAction"), ("CM-PERFORMANCE-MIB", "e3t3StatsLineCVs"), ("CM-PERFORMANCE-MIB", "e3t3StatsLineESs"), ("CM-PERFORMANCE-MIB", "e3t3StatsLineSESs"), ("CM-PERFORMANCE-MIB", "e3t3StatsLineLOSSs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathPCVs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathCCVs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathAISs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathPESs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathCESs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathFCs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathSEFs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathPSESs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathCSESs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathPUASs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathCUASs"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathCCVsFarEnd"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathCESsFarEnd"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathCSESsFarEnd"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathCFCsFarEnd"), ("CM-PERFORMANCE-MIB", "e3t3StatsPathCUASsFarEnd"), ("CM-PERFORMANCE-MIB", "e3t3HistoryIndex"), ("CM-PERFORMANCE-MIB", "e3t3HistoryTime"), ("CM-PERFORMANCE-MIB", "e3t3HistoryValid"), ("CM-PERFORMANCE-MIB", "e3t3HistoryAction"), ("CM-PERFORMANCE-MIB", "e3t3HistoryLineCVs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryLineESs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryLineSESs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryLineLOSSs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathPCVs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathCCVs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathAISs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathPESs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathCESs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathFCs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathSEFs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathPSESs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathCSESs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathPUASs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathCUASs"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathCCVsFarEnd"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathCESsFarEnd"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathCSESsFarEnd"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathCFCsFarEnd"), ("CM-PERFORMANCE-MIB", "e3t3HistoryPathCUASsFarEnd"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdIndex"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdInterval"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdVariable"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdValueLo"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdValueHi"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdMonValue")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        cmPerfObjectGroup = cmPerfObjectGroup.setObjects(*_cmPerfObjectGroup_obj)
    else:
        cmPerfObjectGroup = cmPerfObjectGroup.setObjects(*_cmPerfObjectGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmPerfObjectGroup = cmPerfObjectGroup.setStatus('deprecated')
cmPerfNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 2)).setObjects(("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "f3CardThresholdCrossingAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmPerfNotifGroup = cmPerfNotifGroup.setStatus('current')
ethernetAccessPortPMGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 3)).setObjects(("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsValid"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsAction"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESC"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESO"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsLES"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsL2PTRxFramesEncap"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsL2PTTxFramesDecap"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortStatsLkupFails"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryTime"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryValid"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryAction"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESC"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESO"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryLES"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryL2PTRxFramesEncap"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryL2PTTxFramesDecap"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortHistoryLkupFails"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdVarOprVariance"), ("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdVarOptVariance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ethernetAccessPortPMGroup = ethernetAccessPortPMGroup.setStatus('current')
ethernetNetworkPortPMGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 4)).setObjects(("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsValid"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsAction"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESO"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsLES"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsPSC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsL2PTRxFramesEncap"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsL2PTTxFramesDecap"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsLkupFails"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryTime"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryValid"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryAction"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESO"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryLES"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryPSC"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryL2PTRxFramesEncap"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryL2PTTxFramesDecap"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryLkupFails"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdVarOprVariance"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdVarOptVariance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ethernetNetworkPortPMGroup = ethernetNetworkPortPMGroup.setStatus('current')
trafficPMGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 5)).setObjects(("CM-PERFORMANCE-MIB", "cmFlowStatsIndex"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmFlowStatsValid"), ("CM-PERFORMANCE-MIB", "cmFlowStatsAction"), ("CM-PERFORMANCE-MIB", "cmFlowStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRRLA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRRLRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRRLN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsUAS"), ("CM-PERFORMANCE-MIB", "cmFlowStatsES"), ("CM-PERFORMANCE-MIB", "cmFlowStatsSES"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMGA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMRDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesInA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesOutA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMGN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMRDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesInN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesOutN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFTDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMCDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFBCDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryTime"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryValid"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryAction"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRRLA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRRLRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRRLN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryES"), ("CM-PERFORMANCE-MIB", "cmFlowHistorySES"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMGA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMRDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesInA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesOutA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMGN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMRDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesInN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesOutN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFTDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMCDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFBCDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsValid"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsAction"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBT"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBR"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFR"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsABRRL"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsABRRLR"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryTime"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryValid"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryAction"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBT"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBR"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFR"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryABRRL"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryABRRLR"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsIndex"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsValid"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsAction"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsFMG"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsFMY"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsFMYD"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsFMRD"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsBytesIn"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsBytesOut"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerStatsABR"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryTime"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryValid"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryAction"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryFMG"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryFMY"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryFMYD"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryFMRD"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryBytesIn"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryBytesOut"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerHistoryABR"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmQosFlowPolicerThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsIndex"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsValid"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsAction"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsBT"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsBTD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsFD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsFTD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsBR"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsFR"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsABRRL"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsBREDD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperStatsFREDD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryTime"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryValid"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryAction"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryBT"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryBTD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryFD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryFTD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryBR"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryFR"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryABRRL"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryBREDD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperHistoryFREDD"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmAccPortQosShaperThresholdMonValue"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsIndex"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsIntervalType"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsValid"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsAction"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsBT"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsBTD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsFD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsFTD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsBR"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsFR"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsABRRL"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsBREDD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperStatsFREDD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryIndex"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryTime"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryValid"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryAction"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryBT"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryBTD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryFD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryFTD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryBR"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryFR"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryABRRL"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryBREDD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperHistoryFREDD"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "f3NetPortQosShaperThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trafficPMGroup = trafficPMGroup.setStatus('current')
cmEGXPerfNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 6)).setObjects(("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmQosPolicerV2ThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmQosShaperV2ThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmLagThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmOAMFlowPointThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmTrafficPortQosShaperThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "e3t3ThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmPerQueryGenControl"), ("CM-PERFORMANCE-MIB", "cmPerQueryGenTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmEGXPerfNotifGroup = cmEGXPerfNotifGroup.setStatus('current')
trafficPMGroupCmHub = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 7)).setObjects(("CM-PERFORMANCE-MIB", "cmFlowStatsIndex"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmFlowStatsValid"), ("CM-PERFORMANCE-MIB", "cmFlowStatsAction"), ("CM-PERFORMANCE-MIB", "cmFlowStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRRLA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRRLRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsABRRLN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsUAS"), ("CM-PERFORMANCE-MIB", "cmFlowStatsES"), ("CM-PERFORMANCE-MIB", "cmFlowStatsSES"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMGA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMRDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesInA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesOutA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMGN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMYDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFMRDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesInN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsBytesOutN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsFTDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlA2N"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowStatsIBRRlN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryTime"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryValid"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryAction"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRRLA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRRLRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryABRRLN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryES"), ("CM-PERFORMANCE-MIB", "cmFlowHistorySES"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMGA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMRDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesInA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesOutA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMGN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMYDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFMRDN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesInN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryBytesOutN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryFTDA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlA2NMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlA2NMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlA2N"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlN2AMax"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlN2AMin"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRN2A"), ("CM-PERFORMANCE-MIB", "cmFlowHistoryIBRRlN2A"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdMonValue"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsValid"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsAction"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBT"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBR"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFR"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsABRRL"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsABRRLR"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsBREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperStatsFREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryTime"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryValid"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryAction"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBT"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFTD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBR"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFR"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryABRRL"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryABRRLR"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryBREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperHistoryFREDD"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trafficPMGroupCmHub = trafficPMGroupCmHub.setStatus('current')
cmPerfNotifGroupCmHub = NotificationGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 8)).setObjects(("CM-PERFORMANCE-MIB", "cmEthernetAccPortThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmFlowThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmQosShaperThresholdCrossingAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmPerfNotifGroupCmHub = cmPerfNotifGroupCmHub.setStatus('current')
ocnStmPortPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 9)).setObjects(("CM-PERFORMANCE-MIB", "ocnStmStatsIndex"), ("CM-PERFORMANCE-MIB", "ocnStmStatsIntervalType"), ("CM-PERFORMANCE-MIB", "ocnStmStatsValid"), ("CM-PERFORMANCE-MIB", "ocnStmStatsAction"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineLBC"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineOPT"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineOPR"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineTemp"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLinePSC"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineSESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineCVs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineUASs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineFCs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineFarEndESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineFarEndSESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineFarEndCVs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsLineFarEndUASs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsSectionESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsSectionSESs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsSectionCVs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsSectionSEFs"), ("CM-PERFORMANCE-MIB", "ocnStmStatsSectionUASs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryIndex"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryTime"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryValid"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryAction"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineLBC"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineOPT"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineOPR"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineTemp"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLinePSC"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineSESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineCVs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineUASs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineFCs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineFarEndESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineFarEndSESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineFarEndCVs"), ("CM-PERFORMANCE-MIB", "ocnStmHistoryLineFarEndUASs"), ("CM-PERFORMANCE-MIB", "ocnStmHistorySectionESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistorySectionSESs"), ("CM-PERFORMANCE-MIB", "ocnStmHistorySectionCVs"), ("CM-PERFORMANCE-MIB", "ocnStmHistorySectionSEFs"), ("CM-PERFORMANCE-MIB", "ocnStmHistorySectionUASs"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdIndex"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdInterval"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdVariable"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdValueLo"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdValueHi"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ocnStmPortPerfGroup = ocnStmPortPerfGroup.setStatus('current')
stsVcPathPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 10)).setObjects(("CM-PERFORMANCE-MIB", "stsVcPathStatsIndex"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsIntervalType"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsValid"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsAction"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsESs"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsSESs"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsCVs"), ("CM-PERFORMANCE-MIB", "stsVcPathStatsUASs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndStatsESs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndStatsSESs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndStatsCVs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndStatsUASs"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryIndex"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryTime"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryValid"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryAction"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryESs"), ("CM-PERFORMANCE-MIB", "stsVcPathHistorySESs"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryCVs"), ("CM-PERFORMANCE-MIB", "stsVcPathHistoryUASs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndHistoryESs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndHistorySESs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndHistoryCVs"), ("CM-PERFORMANCE-MIB", "stsVcPathFarEndHistoryUASs"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdIndex"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdInterval"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdVariable"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdValueLo"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdValueHi"), ("CM-PERFORMANCE-MIB", "stsVcPathThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stsVcPathPerfGroup = stsVcPathPerfGroup.setStatus('current')
vtVcPathPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 11)).setObjects(("CM-PERFORMANCE-MIB", "vtVcPathStatsIndex"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsIntervalType"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsValid"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsAction"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsESs"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsSESs"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsCVs"), ("CM-PERFORMANCE-MIB", "vtVcPathStatsUASs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndStatsESs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndStatsSESs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndStatsCVs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndStatsUASs"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryIndex"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryTime"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryValid"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryAction"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryESs"), ("CM-PERFORMANCE-MIB", "vtVcPathHistorySESs"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryCVs"), ("CM-PERFORMANCE-MIB", "vtVcPathHistoryUASs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndHistoryESs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndHistorySESs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndHistoryCVs"), ("CM-PERFORMANCE-MIB", "vtVcPathFarEndHistoryUASs"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdIndex"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdInterval"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdVariable"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdValueLo"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdValueHi"), ("CM-PERFORMANCE-MIB", "vtVcPathThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vtVcPathPerfGroup = vtVcPathPerfGroup.setStatus('current')
e1T1PerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 12)).setObjects(("CM-PERFORMANCE-MIB", "e1t1StatsIndex"), ("CM-PERFORMANCE-MIB", "e1t1StatsIntervalType"), ("CM-PERFORMANCE-MIB", "e1t1StatsValid"), ("CM-PERFORMANCE-MIB", "e1t1StatsAction"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineCVs"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineESs"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineSESs"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineUASs"), ("CM-PERFORMANCE-MIB", "e1t1StatsLineLOSSs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathCVs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathESs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathSESs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathUASs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathCVsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathSESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathSEFsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathUASsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathFCs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathFCsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathAISs"), ("CM-PERFORMANCE-MIB", "e1t1StatsPathSASs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryIndex"), ("CM-PERFORMANCE-MIB", "e1t1HistoryTime"), ("CM-PERFORMANCE-MIB", "e1t1HistoryValid"), ("CM-PERFORMANCE-MIB", "e1t1HistoryAction"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineCVs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineESs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineSESs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineUASs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryLineLOSSs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathCVs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathESs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathSESs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathUASs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathCVsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathSESsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathSEFsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathUASsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathFCs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathFCsFarEnd"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathAISs"), ("CM-PERFORMANCE-MIB", "e1t1HistoryPathSASs"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdIndex"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdInterval"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdVariable"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdValueLo"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdValueHi"), ("CM-PERFORMANCE-MIB", "e1t1ThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    e1T1PerfGroup = e1T1PerfGroup.setStatus('current')
flowPointPmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 13)).setObjects(("CM-PERFORMANCE-MIB", "cmFlowPointStatsIndex"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsValid"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsAction"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsABRRx"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsABRRLRx"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsUAS"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsSES"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFMG"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFMY"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFMRD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFTD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsBytesIn"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsBytesOut"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFREDD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFACLD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFMYD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFMGD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFMCD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFBCD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsBT"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFLD"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsIBRMax"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsIBRRlMax"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsIBRMin"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsIBRRlMin"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsIBR"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsIBRRl"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFdRxFb"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFdTxFb"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsFdicd"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsNumLearnTableFlushes"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsEfFramesDiscarded"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsEfBytesDiscarded"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsAclDropNoMatch"), ("CM-PERFORMANCE-MIB", "cmFlowPointStatsAclRuleDrop"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryTime"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryValid"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryAction"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryABRRx"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryABRRLRx"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistorySES"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFMG"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFMY"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFMRD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFTD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryBytesIn"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryBytesOut"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFREDD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFACLD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFMYD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFMGD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFMCD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFBCD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryBT"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFLD"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryIBRMax"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryIBRRlMax"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryIBRMin"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryIBRRlMin"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryIBR"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryIBRRl"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFdRxFb"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFdTxFb"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryFdicd"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryNumLearnTableFlushes"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryEfFramesDiscarded"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryEfBytesDiscarded"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryAclDropNoMatch"), ("CM-PERFORMANCE-MIB", "cmFlowPointHistoryAclRuleDrop"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    flowPointPmGroup = flowPointPmGroup.setStatus('current')
cmFlowBWPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 14)).setObjects(("CM-PERFORMANCE-MIB", "cmFlowBWA2NCIR"), ("CM-PERFORMANCE-MIB", "cmFlowBWA2NEIR"), ("CM-PERFORMANCE-MIB", "cmFlowBWN2ACIR"), ("CM-PERFORMANCE-MIB", "cmFlowBWN2AEIR"), ("CM-PERFORMANCE-MIB", "cmFlowBWA2NGFB"), ("CM-PERFORMANCE-MIB", "cmFlowBWA2NMFB"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmFlowBWPerfGroup = cmFlowBWPerfGroup.setStatus('current')
ocnStmThresholdVarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 15)).setObjects(("CM-PERFORMANCE-MIB", "ocnStmThresholdVarOprVariance"), ("CM-PERFORMANCE-MIB", "ocnStmThresholdVarOptVariance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ocnStmThresholdVarGroup = ocnStmThresholdVarGroup.setStatus('current')
f3FpQosShaperPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 16)).setObjects(("CM-PERFORMANCE-MIB", "f3FpQosShaperStatsIndex"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperStatsIntervalType"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperStatsValid"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperStatsAction"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperStatsBT"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperStatsBTD"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperStatsFD"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperStatsFTD"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperStatsABRRL"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperStatsBREDD"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperStatsFREDD"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryIndex"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryTime"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryValid"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryAction"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryBT"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryBTD"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryFD"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryFTD"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryABRRL"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryBREDD"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperHistoryFREDD"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdIndex"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdInterval"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdVariable"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdValueLo"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdValueHi"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3FpQosShaperPerfGroup = f3FpQosShaperPerfGroup.setStatus('current')
f3FpQosPolicerPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 17)).setObjects(("CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsIndex"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsIntervalType"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsValid"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsAction"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsFMG"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsFMY"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsFMRD"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsBytesIn"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsBytesOut"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerStatsABR"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerHistoryIndex"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerHistoryTime"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerHistoryValid"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerHistoryAction"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerHistoryFMG"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerHistoryFMY"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerHistoryFMRD"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerHistoryBytesIn"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerHistoryBytesOut"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerHistoryABR"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdIndex"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdInterval"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdVariable"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdValueLo"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdValueHi"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3FpQosPolicerPerfGroup = f3FpQosPolicerPerfGroup.setStatus('current')
cmEthernetTrafficPortPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 18)).setObjects(("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIntervalType"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsValid"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsAction"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESO"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsLES"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsATFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsLkupFails"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsL2PTRxFramesEncap"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsL2PTTxFramesDecap"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsFmcd"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsFbcd"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsAclDropNoMatch"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsAclFwd2Cpu"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsDhcpDropNoAssocIf"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsDroppedFragmented"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsRLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsROPT"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsROPR"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortStatsRTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryTime"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryValid"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryAction"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESBF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESBP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESBS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESCAE"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESDE"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESFS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESJ"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESMF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESMP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESO"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESOF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESOP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP64"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP65"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP128"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP256"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP512"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP1024"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESP1519"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESUF"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryESUP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryL2CPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryL2CPFP"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryLES"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryOPT"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryOPR"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryAUFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryAPFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryABRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryABRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryATFD"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryUAS"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryLkupFails"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryL2PTRxFramesEncap"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryL2PTTxFramesDecap"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRMaxRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRMaxTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRMinRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRMinTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRRx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryIBRTx"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryFmcd"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryFbcd"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryAclDropNoMatch"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryAclFwd2Cpu"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryDhcpDropNoAssocIf"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryDroppedFragmented"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryRLBC"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryROPT"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryROPR"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortHistoryRTemp"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdIndex"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdInterval"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdVariable"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdValueLo"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdValueHi"), ("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmEthernetTrafficPortPerfGroup = cmEthernetTrafficPortPerfGroup.setStatus('current')
f3AclRulePerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 19)).setObjects(("CM-PERFORMANCE-MIB", "f3AclRuleStatsIndex"), ("CM-PERFORMANCE-MIB", "f3AclRuleStatsIntervalType"), ("CM-PERFORMANCE-MIB", "f3AclRuleStatsValid"), ("CM-PERFORMANCE-MIB", "f3AclRuleStatsAction"), ("CM-PERFORMANCE-MIB", "f3AclRuleStatsRuleMatch"), ("CM-PERFORMANCE-MIB", "f3AclRuleHistoryIndex"), ("CM-PERFORMANCE-MIB", "f3AclRuleHistoryTime"), ("CM-PERFORMANCE-MIB", "f3AclRuleHistoryValid"), ("CM-PERFORMANCE-MIB", "f3AclRuleHistoryAction"), ("CM-PERFORMANCE-MIB", "f3AclRuleHistoryRuleMatch"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdIndex"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdInterval"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdVariable"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdValueLo"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdValueHi"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3AclRulePerfGroup = f3AclRulePerfGroup.setStatus('current')
cmXgProPerfNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 20)).setObjects(("CM-PERFORMANCE-MIB", "cmEthernetTrafficPortThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "cmFlowPointThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "f3FpQosShaperThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "f3FpQosPolicerThresholdCrossingAlert"), ("CM-PERFORMANCE-MIB", "f3AclRuleThresholdCrossingAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmXgProPerfNotifGroup = cmXgProPerfNotifGroup.setStatus('current')
cmEthernetNetPortXdslPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 21)).setObjects(("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslUsPkt"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslUsCrcError"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslDsPkt"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslUsFecs"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslDsFecs"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslUsEs"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslDsEs"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslUsSes"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslDsSes"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslUsLoss"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslDsLoss"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslDsUas"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslUsCv"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslDsCv"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslUsFec"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslDsFec"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslDsFullInits"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortStatsXdslUsFullInits"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslUsPkt"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslUsCrcError"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslDsPkt"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslUsFecs"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslDsFecs"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslUsEs"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslDsEs"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslUsSes"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslDsSes"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslUsLoss"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslDsLoss"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslDsUas"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslUsCv"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslDsCv"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslUsFec"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslDsFec"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslDsFullInits"), ("CM-PERFORMANCE-MIB", "cmEthernetNetPortHistoryXdslUsFullInits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmEthernetNetPortXdslPerfGroup = cmEthernetNetPortXdslPerfGroup.setStatus('current')
f3CardPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 5, 3, 2, 22)).setObjects(("CM-PERFORMANCE-MIB", "f3CardStatsIndex"), ("CM-PERFORMANCE-MIB", "f3CardStatsIntervalType"), ("CM-PERFORMANCE-MIB", "f3CardStatsValid"), ("CM-PERFORMANCE-MIB", "f3CardStatsAction"), ("CM-PERFORMANCE-MIB", "f3CardStatsACU"), ("CM-PERFORMANCE-MIB", "f3CardStatsMCU"), ("CM-PERFORMANCE-MIB", "f3CardStatsICU"), ("CM-PERFORMANCE-MIB", "f3CardStatsAMU"), ("CM-PERFORMANCE-MIB", "f3CardStatsMMU"), ("CM-PERFORMANCE-MIB", "f3CardStatsIMU"), ("CM-PERFORMANCE-MIB", "f3CardHistoryIndex"), ("CM-PERFORMANCE-MIB", "f3CardHistoryTime"), ("CM-PERFORMANCE-MIB", "f3CardHistoryValid"), ("CM-PERFORMANCE-MIB", "f3CardHistoryAction"), ("CM-PERFORMANCE-MIB", "f3CardHistoryACU"), ("CM-PERFORMANCE-MIB", "f3CardHistoryMCU"), ("CM-PERFORMANCE-MIB", "f3CardHistoryICU"), ("CM-PERFORMANCE-MIB", "f3CardHistoryAMU"), ("CM-PERFORMANCE-MIB", "f3CardHistoryMMU"), ("CM-PERFORMANCE-MIB", "f3CardHistoryIMU"), ("CM-PERFORMANCE-MIB", "f3CardThresholdIndex"), ("CM-PERFORMANCE-MIB", "f3CardThresholdInterval"), ("CM-PERFORMANCE-MIB", "f3CardThresholdVariable"), ("CM-PERFORMANCE-MIB", "f3CardThresholdValueLo"), ("CM-PERFORMANCE-MIB", "f3CardThresholdValueHi"), ("CM-PERFORMANCE-MIB", "f3CardThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3CardPerfGroup = f3CardPerfGroup.setStatus('current')
mibBuilder.exportSymbols("CM-PERFORMANCE-MIB", cmEthernetNetPortStatsESMF=cmEthernetNetPortStatsESMF, cmQosFlowPolicerHistoryFMYD=cmQosFlowPolicerHistoryFMYD, cmOAMFlowPointStatsTable=cmOAMFlowPointStatsTable, cmFlowStatsIBRA2NMin=cmFlowStatsIBRA2NMin, cmFlowHistoryABRN2A=cmFlowHistoryABRN2A, cmEthernetTrafficPortHistoryLBC=cmEthernetTrafficPortHistoryLBC, ocnStmHistoryLineFarEndESs=ocnStmHistoryLineFarEndESs, cmFlowBWExtTable=cmFlowBWExtTable, ocnStmHistorySectionESs=ocnStmHistorySectionESs, cmQosFlowPolicerHistoryABR=cmQosFlowPolicerHistoryABR, cmTrafficPortQosShaperHistoryIndex=cmTrafficPortQosShaperHistoryIndex, cmEthernetTrafficPortHistoryL2CPFD=cmEthernetTrafficPortHistoryL2CPFD, e3t3StatsPathPCVs=e3t3StatsPathPCVs, f3FpQosShaperHistoryBTD=f3FpQosShaperHistoryBTD, cmEthernetNetPortHistoryL2CPFD=cmEthernetNetPortHistoryL2CPFD, e3t3StatsAction=e3t3StatsAction, f3FpQosShaperThresholdIndex=f3FpQosShaperThresholdIndex, cmFlowPointStatsBytesOut=cmFlowPointStatsBytesOut, cmEthernetTrafficPortHistoryIBRMaxTx=cmEthernetTrafficPortHistoryIBRMaxTx, cmFlowHistoryABRRLA2N=cmFlowHistoryABRRLA2N, cmQosShaperStatsBREDD=cmQosShaperStatsBREDD, f3CardStatsAction=f3CardStatsAction, cmEthernetTrafficPortStatsESOP=cmEthernetTrafficPortStatsESOP, cmQosShaperV2HistoryEntry=cmQosShaperV2HistoryEntry, ocnStmHistoryTime=ocnStmHistoryTime, cmLagStatsESOP=cmLagStatsESOP, cmLagStatsESP256=cmLagStatsESP256, cmLagStatsLkupFails=cmLagStatsLkupFails, cmEthernetNetPortHistoryESBP=cmEthernetNetPortHistoryESBP, e1T1PerfGroup=e1T1PerfGroup, e1t1StatsValid=e1t1StatsValid, f3NetPortQosShaperHistoryTable=f3NetPortQosShaperHistoryTable, ocnStmStatsLineESs=ocnStmStatsLineESs, cmEthernetTrafficPortStatsESBP=cmEthernetTrafficPortStatsESBP, stsVcPathFarEndHistoryUASs=stsVcPathFarEndHistoryUASs, cmEthernetTrafficPortHistoryRLBC=cmEthernetTrafficPortHistoryRLBC, cmQosShaperHistoryFTD=cmQosShaperHistoryFTD, f3NetPortQosShaperStatsEntry=f3NetPortQosShaperStatsEntry, f3AclRuleThresholdVariable=f3AclRuleThresholdVariable, cmEthernetTrafficPortStatsIndex=cmEthernetTrafficPortStatsIndex, cmQosShaperV2HistoryIndex=cmQosShaperV2HistoryIndex, cmFlowPointHistoryFdicd=cmFlowPointHistoryFdicd, cmEthernetTrafficPortStatsESCAE=cmEthernetTrafficPortStatsESCAE, cmLagStatsESP64=cmLagStatsESP64, cmLagStatsESDE=cmLagStatsESDE, e1t1StatsPathCVs=e1t1StatsPathCVs, e3t3HistoryPathPESs=e3t3HistoryPathPESs, f3NetPortQosShaperHistoryEntry=f3NetPortQosShaperHistoryEntry, cmQosShaperThresholdTable=cmQosShaperThresholdTable, cmEthernetTrafficPortStatsIBRMaxRx=cmEthernetTrafficPortStatsIBRMaxRx, cmEthernetAccPortHistoryESCAE=cmEthernetAccPortHistoryESCAE, cmEthernetTrafficPortHistoryLkupFails=cmEthernetTrafficPortHistoryLkupFails, cmEthernetAccPortHistoryESOP=cmEthernetAccPortHistoryESOP, f3AclRuleThresholdValueHi=f3AclRuleThresholdValueHi, cmEthernetNetPortThresholdCrossingAlert=cmEthernetNetPortThresholdCrossingAlert, cmEthernetTrafficPortHistoryIBRRx=cmEthernetTrafficPortHistoryIBRRx, cmEthernetAccPortStatsTable=cmEthernetAccPortStatsTable, cmEthernetTrafficPortStatsESP=cmEthernetTrafficPortStatsESP, e1t1StatsIntervalType=e1t1StatsIntervalType, cmEthernetAccPortStatsESUP=cmEthernetAccPortStatsESUP, cmFlowPointHistoryIBRRlMax=cmFlowPointHistoryIBRRlMax, f3FpQosShaperHistoryAction=f3FpQosShaperHistoryAction, cmEthernetNetPortHistoryESP1024=cmEthernetNetPortHistoryESP1024, cmEthernetTrafficPortStatsESP128=cmEthernetTrafficPortStatsESP128, cmEthernetTrafficPortHistoryAction=cmEthernetTrafficPortHistoryAction, cmLagHistoryAction=cmLagHistoryAction, cmEthernetTrafficPortThresholdInterval=cmEthernetTrafficPortThresholdInterval, vtVcPathHistoryESs=vtVcPathHistoryESs, cmFlowPointHistoryIBRMin=cmFlowPointHistoryIBRMin, cmAccPortQosShaperThresholdEntry=cmAccPortQosShaperThresholdEntry, cmEthernetTrafficPortHistoryESBS=cmEthernetTrafficPortHistoryESBS, cmQosShaperV2StatsTable=cmQosShaperV2StatsTable, e3t3HistoryLineLOSSs=e3t3HistoryLineLOSSs, f3NetPortQosShaperHistoryAction=f3NetPortQosShaperHistoryAction, e1t1ThresholdInterval=e1t1ThresholdInterval, f3NetPortQosShaperStatsFD=f3NetPortQosShaperStatsFD, cmFlowStatsIBRA2NMax=cmFlowStatsIBRA2NMax, f3AclRuleStatsIndex=f3AclRuleStatsIndex, e3t3StatsEntry=e3t3StatsEntry, f3CardThresholdEntry=f3CardThresholdEntry, f3NetPortQosShaperStatsIndex=f3NetPortQosShaperStatsIndex, cmAccPortQosShaperStatsBREDD=cmAccPortQosShaperStatsBREDD, cmLagStatsIntervalType=cmLagStatsIntervalType, cmFlowHistoryFMYA2N=cmFlowHistoryFMYA2N, stsVcPathFarEndHistorySESs=stsVcPathFarEndHistorySESs, cmQosPolicerV2HistoryFMY=cmQosPolicerV2HistoryFMY, f3FpQosPolicerHistoryAction=f3FpQosPolicerHistoryAction, e1t1StatsPathSESsFarEnd=e1t1StatsPathSESsFarEnd, cmEthernetNetPortHistoryESP128=cmEthernetNetPortHistoryESP128, cmQosPolicerV2ThresholdVariable=cmQosPolicerV2ThresholdVariable, ocnStmStatsIndex=ocnStmStatsIndex, cmEthernetTrafficPortStatsLES=cmEthernetTrafficPortStatsLES, cmFlowStatsIndex=cmFlowStatsIndex, stsVcPathFarEndStatsESs=stsVcPathFarEndStatsESs, cmEthernetNetPortXdslStatsTable=cmEthernetNetPortXdslStatsTable, cmQosShaperStatsFR=cmQosShaperStatsFR, cmEthernetAccPortStatsIBRMaxTx=cmEthernetAccPortStatsIBRMaxTx, cmEthernetNetPortHistoryIBRRx=cmEthernetNetPortHistoryIBRRx, cmAccPortQosShaperHistoryBREDD=cmAccPortQosShaperHistoryBREDD, cmFlowPointStatsFMGD=cmFlowPointStatsFMGD, cmEthernetNetPortHistoryESBF=cmEthernetNetPortHistoryESBF, f3FpQosShaperThresholdTable=f3FpQosShaperThresholdTable, cmFlowStatsABRRLRA2N=cmFlowStatsABRRLRA2N, cmEthernetAccPortStatsESBS=cmEthernetAccPortStatsESBS, f3CardStatsAMU=f3CardStatsAMU, cmEthernetAccPortHistoryValid=cmEthernetAccPortHistoryValid, stsVcPathFarEndStatsUASs=stsVcPathFarEndStatsUASs, cmQosShaperV2ThresholdIndex=cmQosShaperV2ThresholdIndex, cmEthernetAccPortHistoryAclFwd2Cpu=cmEthernetAccPortHistoryAclFwd2Cpu, e1t1HistoryPathSESsFarEnd=e1t1HistoryPathSESsFarEnd, cmEthernetNetPortStatsPSC=cmEthernetNetPortStatsPSC, cmEthernetNetPortHistoryIBRMinTx=cmEthernetNetPortHistoryIBRMinTx, cmEthernetAccPortStatsESOP=cmEthernetAccPortStatsESOP, cmFlowPointStatsFACLD=cmFlowPointStatsFACLD, cmAccPortQosShaperStatsBR=cmAccPortQosShaperStatsBR, f3FpQosPolicerHistoryEntry=f3FpQosPolicerHistoryEntry, cmEthernetAccPortHistoryLBC=cmEthernetAccPortHistoryLBC, cmEthernetNetPortStatsABRRx=cmEthernetNetPortStatsABRRx, f3FpQosShaperHistoryIndex=f3FpQosShaperHistoryIndex, cmAccPortQosShaperStatsFTD=cmAccPortQosShaperStatsFTD, cmQosPolicerV2HistoryValid=cmQosPolicerV2HistoryValid, e3t3ThresholdEntry=e3t3ThresholdEntry, cmTrafficPortQosShaperHistoryFD=cmTrafficPortQosShaperHistoryFD, cmEthernetTrafficPortThresholdTable=cmEthernetTrafficPortThresholdTable, cmFlowHistoryIBRRlN2AMax=cmFlowHistoryIBRRlN2AMax, e3t3HistoryPathCCVs=e3t3HistoryPathCCVs, stsVcPathThresholdIndex=stsVcPathThresholdIndex, ocnStmThresholdCrossingAlert=ocnStmThresholdCrossingAlert, cmEthernetNetPortHistoryAclDropNoMatch=cmEthernetNetPortHistoryAclDropNoMatch, cmOAMFlowPointStatsValid=cmOAMFlowPointStatsValid, ocnStmThresholdEntry=ocnStmThresholdEntry, cmEthernetNetPortHistoryESUP=cmEthernetNetPortHistoryESUP, cmEthernetNetPortStatsESOP=cmEthernetNetPortStatsESOP, cmEthernetTrafficPortStatsATFD=cmEthernetTrafficPortStatsATFD, cmEthernetNetPortStatsXdslUsCrcError=cmEthernetNetPortStatsXdslUsCrcError, cmFlowHistoryFBCDA2N=cmFlowHistoryFBCDA2N, cmPerfNotifGroup=cmPerfNotifGroup, cmEthernetAccPortHistoryAclDropNoMatch=cmEthernetAccPortHistoryAclDropNoMatch, cmQosShaperV2StatsFTD=cmQosShaperV2StatsFTD, f3AclRuleThresholdIndex=f3AclRuleThresholdIndex, cmTrafficPortQosShaperHistoryTable=cmTrafficPortQosShaperHistoryTable, cmQosFlowPolicerHistoryEntry=cmQosFlowPolicerHistoryEntry, f3NetPortQosShaperHistoryFD=f3NetPortQosShaperHistoryFD, cmXgProPerfNotifGroup=cmXgProPerfNotifGroup, cmEthernetAccPortStatsESJ=cmEthernetAccPortStatsESJ, cmLagHistoryESUP=cmLagHistoryESUP, cmEthernetNetPortHistoryFmcd=cmEthernetNetPortHistoryFmcd, f3AclRuleHistoryValid=f3AclRuleHistoryValid, f3CardHistoryAction=f3CardHistoryAction, cmTrafficPortQosShaperStatsAction=cmTrafficPortQosShaperStatsAction, cmEthernetTrafficPortStatsAction=cmEthernetTrafficPortStatsAction, ocnStmStatsIntervalType=ocnStmStatsIntervalType, cmLagHistoryESUF=cmLagHistoryESUF, cmAccPortQosShaperThresholdValueLo=cmAccPortQosShaperThresholdValueLo, cmQosShaperStatsValid=cmQosShaperStatsValid, cmEthernetNetPortStatsESP=cmEthernetNetPortStatsESP, vtVcPathStatsIntervalType=vtVcPathStatsIntervalType, cmTrafficPortQosShaperStatsFTD=cmTrafficPortQosShaperStatsFTD, cmAccPortQosShaperThresholdIndex=cmAccPortQosShaperThresholdIndex, e1t1StatsLineLOSSs=e1t1StatsLineLOSSs, cmFlowHistoryIndex=cmFlowHistoryIndex, cmFlowHistoryTable=cmFlowHistoryTable, cmFlowHistoryIBRRlN2AMin=cmFlowHistoryIBRRlN2AMin, f3NetPortQosShaperHistoryFREDD=f3NetPortQosShaperHistoryFREDD, cmAccPortQosShaperStatsABRRL=cmAccPortQosShaperStatsABRRL, cmFlowHistoryACLN2ADrop=cmFlowHistoryACLN2ADrop, cmFlowStatsFMGN2A=cmFlowStatsFMGN2A, cmQosPolicerV2HistoryABR=cmQosPolicerV2HistoryABR, cmEthernetAccPortStatsOPR=cmEthernetAccPortStatsOPR, f3FpQosPolicerHistoryTime=f3FpQosPolicerHistoryTime, cmLagHistoryESBP=cmLagHistoryESBP, cmPerformanceMIB=cmPerformanceMIB, cmFlowHistoryBytesInA2N=cmFlowHistoryBytesInA2N, cmFlowPointHistoryBT=cmFlowPointHistoryBT, ocnStmHistoryLineESs=ocnStmHistoryLineESs, cmEthernetAccPortStatsIntervalType=cmEthernetAccPortStatsIntervalType, cmQosFlowPolicerThresholdValueLo=cmQosFlowPolicerThresholdValueLo, cmQosShaperV2HistoryTable=cmQosShaperV2HistoryTable, e3t3StatsIndex=e3t3StatsIndex, stsVcPathThresholdVariable=stsVcPathThresholdVariable, ocnStmHistoryLinePSC=ocnStmHistoryLinePSC, cmFlowHistoryACLA2NDrop=cmFlowHistoryACLA2NDrop, e3t3StatsLineESs=e3t3StatsLineESs, cmEthernetTrafficPortHistoryUAS=cmEthernetTrafficPortHistoryUAS, e1t1HistoryValid=e1t1HistoryValid, cmFlowStatsFTDA2N=cmFlowStatsFTDA2N, e3t3HistoryPathCSESsFarEnd=e3t3HistoryPathCSESsFarEnd, e1t1HistoryPathCVs=e1t1HistoryPathCVs, e3t3HistoryEntry=e3t3HistoryEntry, e1t1HistoryEntry=e1t1HistoryEntry, cmQosShaperHistoryBT=cmQosShaperHistoryBT, vtVcPathFarEndHistoryCVs=vtVcPathFarEndHistoryCVs, cmLagThresholdCrossingAlert=cmLagThresholdCrossingAlert, cmFlowPointStatsIBR=cmFlowPointStatsIBR, e3t3HistoryPathPUASs=e3t3HistoryPathPUASs, f3AclRuleThresholdInterval=f3AclRuleThresholdInterval, cmFlowPointHistoryFMGD=cmFlowPointHistoryFMGD, stsVcPathFarEndHistoryESs=stsVcPathFarEndHistoryESs, stsVcPathThresholdValueHi=stsVcPathThresholdValueHi, cmEthernetNetPortHistoryOPT=cmEthernetNetPortHistoryOPT, cmEthernetNetPortHistoryESC=cmEthernetNetPortHistoryESC, cmQosFlowPolicerHistoryFMRD=cmQosFlowPolicerHistoryFMRD, f3FpQosPolicerThresholdIndex=f3FpQosPolicerThresholdIndex, e3t3HistoryPathCESs=e3t3HistoryPathCESs, cmEthernetTrafficPortStatsESC=cmEthernetTrafficPortStatsESC, vtVcPathThresholdIndex=vtVcPathThresholdIndex, f3FpQosPolicerHistoryFMY=f3FpQosPolicerHistoryFMY, cmEthernetNetPortHistoryTemp=cmEthernetNetPortHistoryTemp, cmEthernetNetPortStatsESBS=cmEthernetNetPortStatsESBS, cmTrafficPortQosShaperStatsBT=cmTrafficPortQosShaperStatsBT, f3NetPortQosShaperStatsIntervalType=f3NetPortQosShaperStatsIntervalType, cmEthernetTrafficPortStatsESUF=cmEthernetTrafficPortStatsESUF, e3t3StatsPathCCVsFarEnd=e3t3StatsPathCCVsFarEnd, f3CardThresholdInterval=f3CardThresholdInterval, cmFlowPointHistoryFD=cmFlowPointHistoryFD, cmTrafficPortQosShaperHistoryBREDD=cmTrafficPortQosShaperHistoryBREDD, cmFlowBWA2NGFB=cmFlowBWA2NGFB, cmFlowHistoryIBRRlN2A=cmFlowHistoryIBRRlN2A, cmFlowHistoryIBRRlA2NMax=cmFlowHistoryIBRRlA2NMax, f3NetPortQosShaperThresholdMonValue=f3NetPortQosShaperThresholdMonValue, cmFlowStatsFMRDN2A=cmFlowStatsFMRDN2A, cmEthernetAccPortHistoryESBS=cmEthernetAccPortHistoryESBS, f3NetPortQosShaperHistoryBREDD=f3NetPortQosShaperHistoryBREDD, cmEthernetTrafficPortHistoryESCAE=cmEthernetTrafficPortHistoryESCAE, e1t1ThresholdCrossingAlert=e1t1ThresholdCrossingAlert, ocnStmStatsLineOPT=ocnStmStatsLineOPT, cmEthernetNetPortStatsIBRMinTx=cmEthernetNetPortStatsIBRMinTx, cmQosShaperV2StatsAction=cmQosShaperV2StatsAction, cmEthernetAccPortStatsValid=cmEthernetAccPortStatsValid, cmTrafficPortQosShaperStatsIntervalType=cmTrafficPortQosShaperStatsIntervalType, f3NetPortQosShaperStatsBR=f3NetPortQosShaperStatsBR, cmAccPortQosShaperThresholdTable=cmAccPortQosShaperThresholdTable, cmFlowStatsIBRRlN2AMax=cmFlowStatsIBRRlN2AMax, e1t1ThresholdValueLo=e1t1ThresholdValueLo, cmEthernetNetPortStatsOPR=cmEthernetNetPortStatsOPR, cmEthernetNetPortThresholdMonValue=cmEthernetNetPortThresholdMonValue, e3t3HistoryPathCUASs=e3t3HistoryPathCUASs, cmQosFlowPolicerHistoryValid=cmQosFlowPolicerHistoryValid, cmFlowStatsIBRA2N=cmFlowStatsIBRA2N, cmFlowPointHistoryEntry=cmFlowPointHistoryEntry, ocnStmThresholdMonValue=ocnStmThresholdMonValue, ocnStmThresholdIndex=ocnStmThresholdIndex, f3CardHistoryACU=f3CardHistoryACU, cmLagThresholdMonValue=cmLagThresholdMonValue, cmLagHistoryL2CPFD=cmLagHistoryL2CPFD, cmQosShaperV2ThresholdEntry=cmQosShaperV2ThresholdEntry, cmEthernetNetPortHistoryESUF=cmEthernetNetPortHistoryESUF, cmLagHistoryAPFD=cmLagHistoryAPFD, cmEthernetAccPortHistoryL2CPFP=cmEthernetAccPortHistoryL2CPFP, cmFlowPointStatsFMY=cmFlowPointStatsFMY, cmAccPortQosShaperHistoryBR=cmAccPortQosShaperHistoryBR, cmAccPortQosShaperThresholdInterval=cmAccPortQosShaperThresholdInterval, cmLagHistoryESOP=cmLagHistoryESOP, cmLagThresholdIndex=cmLagThresholdIndex)
mibBuilder.exportSymbols("CM-PERFORMANCE-MIB", f3FpQosShaperHistoryBT=f3FpQosShaperHistoryBT, cmEthernetTrafficPortStatsESJ=cmEthernetTrafficPortStatsESJ, e3t3HistoryPathFCs=e3t3HistoryPathFCs, cmFlowPointThresholdValueLo=cmFlowPointThresholdValueLo, cmLagHistoryValid=cmLagHistoryValid, f3FpQosPolicerPerfGroup=f3FpQosPolicerPerfGroup, ocnStmThresholdVarEntry=ocnStmThresholdVarEntry, cmLagStatsESP512=cmLagStatsESP512, cmEthernetAccPortHistoryESP64=cmEthernetAccPortHistoryESP64, cmEthernetTrafficPortHistoryAclFwd2Cpu=cmEthernetTrafficPortHistoryAclFwd2Cpu, cmEthernetNetPortStatsXdslDsLoss=cmEthernetNetPortStatsXdslDsLoss, cmEthernetAccPortThresholdInterval=cmEthernetAccPortThresholdInterval, f3AclRuleHistoryEntry=f3AclRuleHistoryEntry, cmOAMFlowPointThresholdValueHi=cmOAMFlowPointThresholdValueHi, cmEthernetAccPortHistoryESP1519=cmEthernetAccPortHistoryESP1519, cmPerfObjectGroup=cmPerfObjectGroup, ocnStmHistoryLineSESs=ocnStmHistoryLineSESs, cmEthernetAccPortHistoryAUFD=cmEthernetAccPortHistoryAUFD, cmEthernetNetPortHistoryESP=cmEthernetNetPortHistoryESP, cmTrafficPortQosShaperThresholdValueLo=cmTrafficPortQosShaperThresholdValueLo, e3t3HistoryPathCCVsFarEnd=e3t3HistoryPathCCVsFarEnd, cmFlowStatsBytesOutN2A=cmFlowStatsBytesOutN2A, cmEGXPerfNotifGroup=cmEGXPerfNotifGroup, cmLagHistoryESP64=cmLagHistoryESP64, f3AclRuleHistoryTable=f3AclRuleHistoryTable, f3AclRuleThresholdCrossingAlert=f3AclRuleThresholdCrossingAlert, trafficPMGroup=trafficPMGroup, cmFlowPointStatsL2CPFD=cmFlowPointStatsL2CPFD, f3NetPortQosShaperHistoryBT=f3NetPortQosShaperHistoryBT, f3NetPortQosShaperStatsFR=f3NetPortQosShaperStatsFR, f3FpQosShaperStatsFREDD=f3FpQosShaperStatsFREDD, cmFlowPointHistoryL2CPFD=cmFlowPointHistoryL2CPFD, cmEthernetNetPortHistoryPSC=cmEthernetNetPortHistoryPSC, cmTrafficPortQosShaperStatsABRRL=cmTrafficPortQosShaperStatsABRRL, f3NetPortQosShaperHistoryFR=f3NetPortQosShaperHistoryFR, cmLagStatsESP65=cmLagStatsESP65, stsVcPathThresholdEntry=stsVcPathThresholdEntry, e3t3HistoryIndex=e3t3HistoryIndex, cmEthernetAccPortHistoryESBF=cmEthernetAccPortHistoryESBF, cmTrafficPortQosShaperHistoryValid=cmTrafficPortQosShaperHistoryValid, cmAccPortQosShaperStatsBT=cmAccPortQosShaperStatsBT, cmEthernetNetPortStatsESP1519=cmEthernetNetPortStatsESP1519, cmOAMFlowPointThresholdEntry=cmOAMFlowPointThresholdEntry, cmAccPortQosShaperHistoryBT=cmAccPortQosShaperHistoryBT, cmEthernetNetPortThresholdVarEntry=cmEthernetNetPortThresholdVarEntry, cmEthernetTrafficPortStatsIBRTx=cmEthernetTrafficPortStatsIBRTx, cmAccPortQosShaperHistoryEntry=cmAccPortQosShaperHistoryEntry, e1t1ThresholdTable=e1t1ThresholdTable, cmEthernetNetPortStatsLES=cmEthernetNetPortStatsLES, e1t1HistoryPathSASs=e1t1HistoryPathSASs, cmEthernetAccPortThresholdVarOprVariance=cmEthernetAccPortThresholdVarOprVariance, cmEthernetNetPortHistoryESBS=cmEthernetNetPortHistoryESBS, cmEthernetNetPortThresholdVarTable=cmEthernetNetPortThresholdVarTable, stsVcPathStatsESs=stsVcPathStatsESs, f3CardHistoryMMU=f3CardHistoryMMU, cmFlowPointStatsIBRRl=cmFlowPointStatsIBRRl, ocnStmHistorySectionUASs=ocnStmHistorySectionUASs, cmEthernetNetPortStatsESP512=cmEthernetNetPortStatsESP512, cmEthernetNetPortHistoryL2PTRxFramesEncap=cmEthernetNetPortHistoryL2PTRxFramesEncap, cmEthernetTrafficPortHistoryESP1519=cmEthernetTrafficPortHistoryESP1519, cmQosShaperHistoryAction=cmQosShaperHistoryAction, ocnStmHistoryLineCVs=ocnStmHistoryLineCVs, cmOAMFlowPointStatsIntervalType=cmOAMFlowPointStatsIntervalType, cmQosShaperV2ThresholdVariable=cmQosShaperV2ThresholdVariable, cmFlowStatsIntervalType=cmFlowStatsIntervalType, cmQosShaperV2StatsABRRL=cmQosShaperV2StatsABRRL, cmQosShaperV2HistoryTime=cmQosShaperV2HistoryTime, ocnStmThresholdVariable=ocnStmThresholdVariable, cmFlowHistoryUAS=cmFlowHistoryUAS, cmEthernetNetPortHistoryIBRTx=cmEthernetNetPortHistoryIBRTx, vtVcPathFarEndHistoryUASs=vtVcPathFarEndHistoryUASs, cmEthernetAccPortStatsIBRMinRx=cmEthernetAccPortStatsIBRMinRx, cmEthernetTrafficPortHistoryValid=cmEthernetTrafficPortHistoryValid, cmLagStatsESP1024=cmLagStatsESP1024, cmEthernetNetPortStatsESCAE=cmEthernetNetPortStatsESCAE, cmEthernetTrafficPortStatsESO=cmEthernetTrafficPortStatsESO, cmLagHistoryTable=cmLagHistoryTable, cmFlowHistoryFTDA2N=cmFlowHistoryFTDA2N, vtVcPathHistoryTime=vtVcPathHistoryTime, cmEthernetAccPortHistoryFbcd=cmEthernetAccPortHistoryFbcd, cmFlowPointHistoryFBCD=cmFlowPointHistoryFBCD, cmEthernetNetPortHistoryL2PTTxFramesDecap=cmEthernetNetPortHistoryL2PTTxFramesDecap, e3t3StatsPathSEFs=e3t3StatsPathSEFs, cmQosShaperStatsIntervalType=cmQosShaperStatsIntervalType, stsVcPathStatsValid=stsVcPathStatsValid, e1t1StatsLineCVs=e1t1StatsLineCVs, cmAccPortQosShaperHistoryTime=cmAccPortQosShaperHistoryTime, ocnStmStatsAction=ocnStmStatsAction, cmFlowStatsFMYDA2N=cmFlowStatsFMYDA2N, cmAccPortQosShaperHistoryTable=cmAccPortQosShaperHistoryTable, cmLagHistoryESDE=cmLagHistoryESDE, e1t1ThresholdMonValue=e1t1ThresholdMonValue, cmLagHistoryESP1024=cmLagHistoryESP1024, cmEthernetAccPortStatsLkupFails=cmEthernetAccPortStatsLkupFails, e1t1HistoryLineSESs=e1t1HistoryLineSESs, cmAccPortQosShaperHistoryABRRL=cmAccPortQosShaperHistoryABRRL, cmEthernetNetPortHistoryESP512=cmEthernetNetPortHistoryESP512, cmFlowStatsEntry=cmFlowStatsEntry, cmQosShaperV2ThresholdCrossingAlert=cmQosShaperV2ThresholdCrossingAlert, f3CardStatsEntry=f3CardStatsEntry, cmQosFlowPolicerHistoryTime=cmQosFlowPolicerHistoryTime, cmEthernetNetPortStatsESMP=cmEthernetNetPortStatsESMP, cmAccPortQosShaperHistoryIndex=cmAccPortQosShaperHistoryIndex, f3FpQosPolicerHistoryABR=f3FpQosPolicerHistoryABR, e1t1HistoryPathFCs=e1t1HistoryPathFCs, cmEthernetNetPortHistoryESMF=cmEthernetNetPortHistoryESMF, cmEthernetAccPortThresholdValueLo=cmEthernetAccPortThresholdValueLo, cmLagStatsESP=cmLagStatsESP, cmFlowStatsSES=cmFlowStatsSES, e1t1HistoryPathSESs=e1t1HistoryPathSESs, cmFlowHistoryTime=cmFlowHistoryTime, cmLagHistoryESFS=cmLagHistoryESFS, vtVcPathFarEndStatsSESs=vtVcPathFarEndStatsSESs, cmEthernetAccPortStatsFbcd=cmEthernetAccPortStatsFbcd, cmEthernetTrafficPortStatsESOF=cmEthernetTrafficPortStatsESOF, cmEthernetAccPortStatsESO=cmEthernetAccPortStatsESO, cmFlowPointStatsTable=cmFlowPointStatsTable, cmEthernetNetPortStatsESJ=cmEthernetNetPortStatsESJ, ocnStmStatsLineLBC=ocnStmStatsLineLBC, cmFlowHistoryIBRRlA2NMin=cmFlowHistoryIBRRlA2NMin, e1t1HistoryIndex=e1t1HistoryIndex, cmLagHistoryESC=cmLagHistoryESC, e3t3StatsIntervalType=e3t3StatsIntervalType, cmLagHistoryESOF=cmLagHistoryESOF, cmLagStatsESBF=cmLagStatsESBF, cmEthernetNetPortStatsESDE=cmEthernetNetPortStatsESDE, cmAccPortQosShaperHistoryBTD=cmAccPortQosShaperHistoryBTD, cmQosShaperHistoryFREDD=cmQosShaperHistoryFREDD, f3FpQosPolicerThresholdTable=f3FpQosPolicerThresholdTable, f3FpQosShaperThresholdVariable=f3FpQosShaperThresholdVariable, e1t1StatsPathAISs=e1t1StatsPathAISs, f3AclRuleThresholdTable=f3AclRuleThresholdTable, cmTrafficPortQosShaperThresholdEntry=cmTrafficPortQosShaperThresholdEntry, cmEthernetNetPortHistoryESP256=cmEthernetNetPortHistoryESP256, f3CardHistoryAMU=f3CardHistoryAMU, stsVcPathFarEndStatsSESs=stsVcPathFarEndStatsSESs, cmQosShaperV2HistoryBREDD=cmQosShaperV2HistoryBREDD, cmEthernetTrafficPortHistoryAclDropNoMatch=cmEthernetTrafficPortHistoryAclDropNoMatch, ocnStmStatsTable=ocnStmStatsTable, cmQosFlowPolicerThresholdEntry=cmQosFlowPolicerThresholdEntry, cmEthernetNetPortHistoryABRTx=cmEthernetNetPortHistoryABRTx, cmEthernetNetPortStatsXdslUsPkt=cmEthernetNetPortStatsXdslUsPkt, cmEthernetAccPortStatsESOF=cmEthernetAccPortStatsESOF, cmEthernetAccPortHistoryESBP=cmEthernetAccPortHistoryESBP, f3NetPortQosShaperHistoryBTD=f3NetPortQosShaperHistoryBTD, stsVcPathHistoryValid=stsVcPathHistoryValid, f3CardHistoryTable=f3CardHistoryTable, cmLagHistoryLkupFails=cmLagHistoryLkupFails, f3FpQosPolicerHistoryFMG=f3FpQosPolicerHistoryFMG, cmQosShaperHistoryBREDD=cmQosShaperHistoryBREDD, stsVcPathStatsAction=stsVcPathStatsAction, cmQosPolicerV2StatsBytesIn=cmQosPolicerV2StatsBytesIn, cmFlowPointStatsEntry=cmFlowPointStatsEntry, cmPerfCompliance=cmPerfCompliance, stsVcPathHistoryEntry=stsVcPathHistoryEntry, cmEthernetNetPortStatsABRTx=cmEthernetNetPortStatsABRTx, cmFlowPointStatsBT=cmFlowPointStatsBT, cmEthernetTrafficPortHistoryIBRMinRx=cmEthernetTrafficPortHistoryIBRMinRx, cmFlowPointStatsValid=cmFlowPointStatsValid, cmEthernetTrafficPortHistoryL2CPFP=cmEthernetTrafficPortHistoryL2CPFP, cmAccPortQosShaperHistoryFR=cmAccPortQosShaperHistoryFR, cmQosShaperStatsBR=cmQosShaperStatsBR, cmQosShaperThresholdInterval=cmQosShaperThresholdInterval, ocnStmHistorySectionCVs=ocnStmHistorySectionCVs, cmEthernetAccPortHistoryESP65=cmEthernetAccPortHistoryESP65, cmEthernetTrafficPortStatsRLBC=cmEthernetTrafficPortStatsRLBC, cmEthernetNetPortStatsEntry=cmEthernetNetPortStatsEntry, f3FpQosShaperStatsAction=f3FpQosShaperStatsAction, vtVcPathHistoryEntry=vtVcPathHistoryEntry, cmEthernetNetPortHistoryESCAE=cmEthernetNetPortHistoryESCAE, cmQosPolicerV2StatsTable=cmQosPolicerV2StatsTable, e3t3ThresholdValueHi=e3t3ThresholdValueHi, cmFlowPointHistoryBytesOut=cmFlowPointHistoryBytesOut, cmEthernetTrafficPortStatsABRRx=cmEthernetTrafficPortStatsABRRx, ocnStmPortPerfGroup=ocnStmPortPerfGroup, cmFlowPointStatsIntervalType=cmFlowPointStatsIntervalType, cmQosFlowPolicerHistoryIndex=cmQosFlowPolicerHistoryIndex, f3FpQosPolicerHistoryBytesIn=f3FpQosPolicerHistoryBytesIn, cmFlowHistoryBytesOutN2A=cmFlowHistoryBytesOutN2A, cmEthernetAccPortStatsESCAE=cmEthernetAccPortStatsESCAE, stsVcPathHistoryTime=stsVcPathHistoryTime, cmLagStatsAction=cmLagStatsAction, e1t1StatsEntry=e1t1StatsEntry, cmFlowHistoryFMGN2A=cmFlowHistoryFMGN2A, cmLagStatsESBS=cmLagStatsESBS, cmEthernetTrafficPortStatsFbcd=cmEthernetTrafficPortStatsFbcd, f3FpQosShaperThresholdEntry=f3FpQosShaperThresholdEntry, f3FpQosShaperHistoryEntry=f3FpQosShaperHistoryEntry, cmEthernetTrafficPortStatsOPR=cmEthernetTrafficPortStatsOPR, cmFlowStatsIBRN2AMax=cmFlowStatsIBRN2AMax, cmFlowPointHistoryIBRRl=cmFlowPointHistoryIBRRl, cmAccPortQosShaperStatsFREDD=cmAccPortQosShaperStatsFREDD, cmFlowPointHistoryBytesIn=cmFlowPointHistoryBytesIn, e1t1ThresholdValueHi=e1t1ThresholdValueHi, e3t3StatsPathPSESs=e3t3StatsPathPSESs, cmTrafficPortQosShaperHistoryFTD=cmTrafficPortQosShaperHistoryFTD, cmFlowPointStatsIBRMin=cmFlowPointStatsIBRMin, cmEthernetNetPortHistoryXdslDsFullInits=cmEthernetNetPortHistoryXdslDsFullInits, cmEthernetTrafficPortHistoryAUFD=cmEthernetTrafficPortHistoryAUFD, stsVcPathHistoryIndex=stsVcPathHistoryIndex, e3t3StatsLineLOSSs=e3t3StatsLineLOSSs, e3t3HistoryLineSESs=e3t3HistoryLineSESs, cmEthernetAccPortThresholdVarEntry=cmEthernetAccPortThresholdVarEntry, cmQosPolicerV2ThresholdValueHi=cmQosPolicerV2ThresholdValueHi, cmQosShaperV2StatsBTD=cmQosShaperV2StatsBTD, cmFlowHistoryL2CPFD=cmFlowHistoryL2CPFD, cmQosShaperStatsBT=cmQosShaperStatsBT, f3AclRuleStatsValid=f3AclRuleStatsValid, ocnStmStatsLineFCs=ocnStmStatsLineFCs, f3NetPortQosShaperStatsAction=f3NetPortQosShaperStatsAction, cmQosPolicerV2HistoryTime=cmQosPolicerV2HistoryTime, e1t1StatsPathSEFsFarEnd=e1t1StatsPathSEFsFarEnd, f3FpQosShaperHistoryFD=f3FpQosShaperHistoryFD, cmFlowPointStatsEfBytesDiscarded=cmFlowPointStatsEfBytesDiscarded, cmEthernetTrafficPortPerfGroup=cmEthernetTrafficPortPerfGroup, cmEthernetNetPortStatsAclDropNoMatch=cmEthernetNetPortStatsAclDropNoMatch, e1t1StatsPathFCsFarEnd=e1t1StatsPathFCsFarEnd, cmEthernetNetPortThresholdVarOptVariance=cmEthernetNetPortThresholdVarOptVariance, cmEthernetAccPortStatsAclFwd2Cpu=cmEthernetAccPortStatsAclFwd2Cpu, stsVcPathThresholdCrossingAlert=stsVcPathThresholdCrossingAlert, e3t3HistoryPathCSESs=e3t3HistoryPathCSESs, f3CardStatsValid=f3CardStatsValid, cmEthernetAccPortStatsESP1519=cmEthernetAccPortStatsESP1519, e3t3StatsTable=e3t3StatsTable, e3t3HistoryPathAISs=e3t3HistoryPathAISs, cmFlowHistoryIBRA2NMin=cmFlowHistoryIBRA2NMin, e3t3StatsPathPUASs=e3t3StatsPathPUASs, ocnStmHistoryLineOPT=ocnStmHistoryLineOPT, f3NetPortQosShaperThresholdCrossingAlert=f3NetPortQosShaperThresholdCrossingAlert, e1t1HistoryLineLOSSs=e1t1HistoryLineLOSSs, cmTrafficPortQosShaperHistoryBT=cmTrafficPortQosShaperHistoryBT, cmQosShaperHistoryEntry=cmQosShaperHistoryEntry, e3t3StatsPathPESs=e3t3StatsPathPESs, e1t1StatsPathCVsFarEnd=e1t1StatsPathCVsFarEnd, e1t1StatsPathUASsFarEnd=e1t1StatsPathUASsFarEnd, cmEthernetAccPortStatsESP256=cmEthernetAccPortStatsESP256, cmEthernetAccPortHistoryEntry=cmEthernetAccPortHistoryEntry, e1t1StatsPathSASs=e1t1StatsPathSASs, cmEthernetTrafficPortHistoryESP64=cmEthernetTrafficPortHistoryESP64, cmEthernetNetPortHistoryXdslDsFec=cmEthernetNetPortHistoryXdslDsFec, cmEthernetTrafficPortStatsIBRMinTx=cmEthernetTrafficPortStatsIBRMinTx, e1t1HistoryPathESsFarEnd=e1t1HistoryPathESsFarEnd, cmEthernetNetPortHistoryXdslUsCrcError=cmEthernetNetPortHistoryXdslUsCrcError, cmTrafficPortQosShaperHistoryBTD=cmTrafficPortQosShaperHistoryBTD, cmEthernetTrafficPortHistoryAPFD=cmEthernetTrafficPortHistoryAPFD, cmQosPolicerV2HistoryTable=cmQosPolicerV2HistoryTable, vtVcPathHistoryTable=vtVcPathHistoryTable, cmEthernetNetPortHistoryAction=cmEthernetNetPortHistoryAction, e3t3StatsPathCESsFarEnd=e3t3StatsPathCESsFarEnd, ocnStmHistoryLineOPR=ocnStmHistoryLineOPR, cmFlowHistoryFMYDA2N=cmFlowHistoryFMYDA2N, cmFlowHistoryFMRDN2A=cmFlowHistoryFMRDN2A, cmTrafficPortQosShaperStatsIndex=cmTrafficPortQosShaperStatsIndex, f3FpQosPolicerHistoryTable=f3FpQosPolicerHistoryTable)
mibBuilder.exportSymbols("CM-PERFORMANCE-MIB", cmFlowPointHistoryFREDD=cmFlowPointHistoryFREDD, cmEthernetNetPortHistoryIBRMaxRx=cmEthernetNetPortHistoryIBRMaxRx, cmEthernetTrafficPortThresholdVarOptVariance=cmEthernetTrafficPortThresholdVarOptVariance, cmTrafficPortQosShaperHistoryFREDD=cmTrafficPortQosShaperHistoryFREDD, cmEthernetTrafficPortStatsL2CPFP=cmEthernetTrafficPortStatsL2CPFP, cmEthernetTrafficPortStatsESUP=cmEthernetTrafficPortStatsESUP, cmEthernetTrafficPortHistoryIBRTx=cmEthernetTrafficPortHistoryIBRTx, cmQosFlowPolicerStatsIntervalType=cmQosFlowPolicerStatsIntervalType, cmFlowPointHistoryFLD=cmFlowPointHistoryFLD, cmQosShaperThresholdEntry=cmQosShaperThresholdEntry, cmEthernetTrafficPortHistoryESC=cmEthernetTrafficPortHistoryESC, cmEthernetNetPortStatsOPT=cmEthernetNetPortStatsOPT, cmEthernetAccPortHistoryESP512=cmEthernetAccPortHistoryESP512, cmLagHistoryABRTx=cmLagHistoryABRTx, cmQosFlowPolicerStatsFMG=cmQosFlowPolicerStatsFMG, cmEthernetNetPortStatsTable=cmEthernetNetPortStatsTable, e3t3ThresholdInterval=e3t3ThresholdInterval, e1t1HistoryPathSEFsFarEnd=e1t1HistoryPathSEFsFarEnd, cmEthernetTrafficPortStatsIBRMinRx=cmEthernetTrafficPortStatsIBRMinRx, cmQosShaperStatsBTD=cmQosShaperStatsBTD, cmFlowPointStatsIBRRlMin=cmFlowPointStatsIBRRlMin, cmEthernetNetPortThresholdVarOprVariance=cmEthernetNetPortThresholdVarOprVariance, cmQosShaperThresholdValueHi=cmQosShaperThresholdValueHi, cmEthernetNetPortHistoryLkupFails=cmEthernetNetPortHistoryLkupFails, cmQosShaperV2StatsBREDD=cmQosShaperV2StatsBREDD, stsVcPathThresholdInterval=stsVcPathThresholdInterval, ocnStmStatsLineFarEndESs=ocnStmStatsLineFarEndESs, cmFlowHistoryIBRN2AMax=cmFlowHistoryIBRN2AMax, cmFlowPointStatsFdRxFb=cmFlowPointStatsFdRxFb, cmEthernetAccPortStatsESP64=cmEthernetAccPortStatsESP64, cmQosFlowPolicerHistoryAction=cmQosFlowPolicerHistoryAction, cmEthernetTrafficPortThresholdVarEntry=cmEthernetTrafficPortThresholdVarEntry, cmQosPolicerV2HistoryAction=cmQosPolicerV2HistoryAction, f3CardHistoryTime=f3CardHistoryTime, cmFlowPointHistoryIBRRlMin=cmFlowPointHistoryIBRRlMin, cmQosPolicerV2HistoryIndex=cmQosPolicerV2HistoryIndex, f3FpQosPolicerStatsTable=f3FpQosPolicerStatsTable, cmEthernetNetPortThresholdVariable=cmEthernetNetPortThresholdVariable, cmFlowHistoryIBRRlA2N=cmFlowHistoryIBRRlA2N, cmLagStatsEntry=cmLagStatsEntry, cmAccPortQosShaperThresholdCrossingAlert=cmAccPortQosShaperThresholdCrossingAlert, vtVcPathStatsSESs=vtVcPathStatsSESs, cmFlowBWA2NCIR=cmFlowBWA2NCIR, cmLagStatsAUFD=cmLagStatsAUFD, cmEthernetTrafficPortStatsFmcd=cmEthernetTrafficPortStatsFmcd, vtVcPathThresholdMonValue=vtVcPathThresholdMonValue, cmEthernetAccPortHistoryTime=cmEthernetAccPortHistoryTime, cmFlowPointHistoryFMY=cmFlowPointHistoryFMY, ocnStmThresholdTable=ocnStmThresholdTable, stsVcPathFarEndHistoryCVs=stsVcPathFarEndHistoryCVs, cmEthernetTrafficPortHistoryROPR=cmEthernetTrafficPortHistoryROPR, f3FpQosPolicerStatsValid=f3FpQosPolicerStatsValid, cmEthernetTrafficPortHistoryRTemp=cmEthernetTrafficPortHistoryRTemp, cmEthernetAccPortHistoryESJ=cmEthernetAccPortHistoryESJ, f3FpQosPolicerStatsIndex=f3FpQosPolicerStatsIndex, cmQosPolicerV2ThresholdIndex=cmQosPolicerV2ThresholdIndex, cmLagHistoryESMF=cmLagHistoryESMF, e3t3ThresholdMonValue=e3t3ThresholdMonValue, cmAccPortQosShaperHistoryFREDD=cmAccPortQosShaperHistoryFREDD, cmEthernetNetPortThresholdValueLo=cmEthernetNetPortThresholdValueLo, f3FpQosPolicerStatsFMY=f3FpQosPolicerStatsFMY, cmEthernetNetPortStatsESOF=cmEthernetNetPortStatsESOF, cmQosShaperStatsFREDD=cmQosShaperStatsFREDD, ocnStmStatsSectionESs=ocnStmStatsSectionESs, stsVcPathStatsSESs=stsVcPathStatsSESs, cmEthernetAccPortHistoryDhcpDropNoAssocIf=cmEthernetAccPortHistoryDhcpDropNoAssocIf, cmEthernetAccPortHistoryESP256=cmEthernetAccPortHistoryESP256, cmQosFlowPolicerThresholdIndex=cmQosFlowPolicerThresholdIndex, cmTrafficPortQosShaperThresholdIndex=cmTrafficPortQosShaperThresholdIndex, cmEthernetTrafficPortHistoryL2PTRxFramesEncap=cmEthernetTrafficPortHistoryL2PTRxFramesEncap, cmEthernetNetPortHistoryXdslDsCv=cmEthernetNetPortHistoryXdslDsCv, e1t1HistoryLineESsFarEnd=e1t1HistoryLineESsFarEnd, cmEthernetAccPortThresholdVariable=cmEthernetAccPortThresholdVariable, e3t3ThresholdCrossingAlert=e3t3ThresholdCrossingAlert, cmEthernetTrafficPortStatsESP1519=cmEthernetTrafficPortStatsESP1519, e1t1HistoryAction=e1t1HistoryAction, cmEthernetAccPortStatsIBRMinTx=cmEthernetAccPortStatsIBRMinTx, cmPerfNotifGroupCmHub=cmPerfNotifGroupCmHub, cmEthernetNetPortThresholdEntry=cmEthernetNetPortThresholdEntry, cmLagStatsABRRx=cmLagStatsABRRx, e1t1StatsIndex=e1t1StatsIndex, f3FpQosShaperHistoryFTD=f3FpQosShaperHistoryFTD, cmLagStatsAPFD=cmLagStatsAPFD, cmQosShaperV2HistoryAction=cmQosShaperV2HistoryAction, cmEthernetTrafficPortHistoryTable=cmEthernetTrafficPortHistoryTable, cmQosPolicerV2StatsValid=cmQosPolicerV2StatsValid, cmEthernetAccPortStatsIBRTx=cmEthernetAccPortStatsIBRTx, cmEthernetNetPortHistoryESP65=cmEthernetNetPortHistoryESP65, cmEthernetNetPortHistoryESOF=cmEthernetNetPortHistoryESOF, ocnStmHistoryValid=ocnStmHistoryValid, vtVcPathStatsValid=vtVcPathStatsValid, f3NetPortQosShaperStatsBT=f3NetPortQosShaperStatsBT, cmEthernetTrafficPortStatsValid=cmEthernetTrafficPortStatsValid, cmFlowThresholdInterval=cmFlowThresholdInterval, f3FpQosShaperStatsEntry=f3FpQosShaperStatsEntry, cmTrafficPortQosShaperStatsBTD=cmTrafficPortQosShaperStatsBTD, cmFlowPointHistoryFdTxFb=cmFlowPointHistoryFdTxFb, vtVcPathHistoryIndex=vtVcPathHistoryIndex, cmEthernetTrafficPortHistoryOPT=cmEthernetTrafficPortHistoryOPT, cmEthernetAccPortStatsABRTx=cmEthernetAccPortStatsABRTx, cmEthernetAccPortStatsAction=cmEthernetAccPortStatsAction, cmFlowHistoryBytesInN2A=cmFlowHistoryBytesInN2A, cmEthernetTrafficPortHistoryTemp=cmEthernetTrafficPortHistoryTemp, cmFlowPointHistoryTable=cmFlowPointHistoryTable, cmEthernetNetPortStatsAclFwd2Cpu=cmEthernetNetPortStatsAclFwd2Cpu, ocnStmHistoryEntry=ocnStmHistoryEntry, cmFlowStatsValid=cmFlowStatsValid, cmEthernetNetPortHistoryESO=cmEthernetNetPortHistoryESO, e1t1StatsAction=e1t1StatsAction, cmEthernetNetPortStatsESC=cmEthernetNetPortStatsESC, cmEthernetTrafficPortThresholdIndex=cmEthernetTrafficPortThresholdIndex, cmFlowHistoryFMYDN2A=cmFlowHistoryFMYDN2A, stsVcPathPerfGroup=stsVcPathPerfGroup, f3AclRuleStatsTable=f3AclRuleStatsTable, cmEthernetNetPortHistoryTable=cmEthernetNetPortHistoryTable, cmFlowStatsABRA2N=cmFlowStatsABRA2N, ocnStmHistoryLineUASs=ocnStmHistoryLineUASs, cmEthernetAccPortThresholdIndex=cmEthernetAccPortThresholdIndex, cmQosShaperV2StatsValid=cmQosShaperV2StatsValid, cmEthernetAccPortHistoryIBRMinRx=cmEthernetAccPortHistoryIBRMinRx, cmEthernetNetPortHistoryESMP=cmEthernetNetPortHistoryESMP, cmEthernetTrafficPortStatsROPR=cmEthernetTrafficPortStatsROPR, cmFlowPointHistoryFdRxFb=cmFlowPointHistoryFdRxFb, f3CardThresholdCrossingAlert=f3CardThresholdCrossingAlert, cmAccPortQosShaperStatsBTD=cmAccPortQosShaperStatsBTD, cmFlowBWN2AEIR=cmFlowBWN2AEIR, cmEthernetTrafficPortStatsESFS=cmEthernetTrafficPortStatsESFS, cmOAMFlowPointStatsEntry=cmOAMFlowPointStatsEntry, cmEthernetTrafficPortHistoryABRTx=cmEthernetTrafficPortHistoryABRTx, cmQosShaperHistoryValid=cmQosShaperHistoryValid, cmEthernetTrafficPortHistoryIBRMinTx=cmEthernetTrafficPortHistoryIBRMinTx, cmFlowPointStatsABRRLRx=cmFlowPointStatsABRRLRx, cmOAMFlowPointThresholdValueLo=cmOAMFlowPointThresholdValueLo, cmOAMFlowPointThresholdMonValue=cmOAMFlowPointThresholdMonValue, vtVcPathThresholdVariable=vtVcPathThresholdVariable, vtVcPathThresholdCrossingAlert=vtVcPathThresholdCrossingAlert, e1t1ThresholdIndex=e1t1ThresholdIndex, cmLagStatsESMF=cmLagStatsESMF, f3FpQosShaperThresholdCrossingAlert=f3FpQosShaperThresholdCrossingAlert, cmFlowBWA2NEIR=cmFlowBWA2NEIR, e3t3HistoryPathSEFs=e3t3HistoryPathSEFs, cmEthernetTrafficPortStatsLBC=cmEthernetTrafficPortStatsLBC, cmFlowPointStatsEfFramesDiscarded=cmFlowPointStatsEfFramesDiscarded, cmEthernetNetPortStatsValid=cmEthernetNetPortStatsValid, f3NetPortQosShaperThresholdEntry=f3NetPortQosShaperThresholdEntry, stsVcPathHistoryTable=stsVcPathHistoryTable, cmEthernetTrafficPortHistoryFbcd=cmEthernetTrafficPortHistoryFbcd, cmEthernetNetPortStatsIBRTx=cmEthernetNetPortStatsIBRTx, f3FpQosShaperStatsFD=f3FpQosShaperStatsFD, cmEthernetNetPortHistoryAclFwd2Cpu=cmEthernetNetPortHistoryAclFwd2Cpu, cmEthernetAccPortHistoryUAS=cmEthernetAccPortHistoryUAS, cmEthernetTrafficPortStatsESP65=cmEthernetTrafficPortStatsESP65, cmFlowStatsFBCDA2N=cmFlowStatsFBCDA2N, cmFlowStatsIBRRlN2A=cmFlowStatsIBRRlN2A, f3CardHistoryMCU=f3CardHistoryMCU, cmQosShaperStatsAction=cmQosShaperStatsAction, cmEthernetAccPortThresholdCrossingAlert=cmEthernetAccPortThresholdCrossingAlert, cmEthernetNetPortHistoryABRRx=cmEthernetNetPortHistoryABRRx, f3NetPortQosShaperHistoryTime=f3NetPortQosShaperHistoryTime, cmEthernetTrafficPortStatsEntry=cmEthernetTrafficPortStatsEntry, cmFlowPointHistoryFMRD=cmFlowPointHistoryFMRD, ocnStmStatsLineTemp=ocnStmStatsLineTemp, cmQosPolicerV2ThresholdInterval=cmQosPolicerV2ThresholdInterval, cmQosFlowPolicerHistoryTable=cmQosFlowPolicerHistoryTable, e3t3StatsLineCVs=e3t3StatsLineCVs, cmFlowStatsFMCDA2N=cmFlowStatsFMCDA2N, cmEthernetTrafficPortHistoryESJ=cmEthernetTrafficPortHistoryESJ, cmEthernetNetPortStatsL2CPFD=cmEthernetNetPortStatsL2CPFD, cmQosShaperStatsABRRLR=cmQosShaperStatsABRRLR, ocnStmStatsValid=ocnStmStatsValid, cmEthernetTrafficPortStatsIBRMaxTx=cmEthernetTrafficPortStatsIBRMaxTx, cmFlowHistoryIBRA2NMax=cmFlowHistoryIBRA2NMax, ocnStmStatsLineSESs=ocnStmStatsLineSESs, e1t1HistoryTime=e1t1HistoryTime, f3NetPortQosShaperStatsBTD=f3NetPortQosShaperStatsBTD, cmEthernetNetPortStatsAction=cmEthernetNetPortStatsAction, cmEthernetAccPortStatsESF=cmEthernetAccPortStatsESF, cmEthernetNetPortStatsFmcd=cmEthernetNetPortStatsFmcd, f3NetPortQosShaperHistoryBR=f3NetPortQosShaperHistoryBR, cmFlowPointHistoryIBR=cmFlowPointHistoryIBR, cmFlowPointStatsFREDD=cmFlowPointStatsFREDD, cmEthernetAccPortThresholdEntry=cmEthernetAccPortThresholdEntry, cmFlowStatsIBRRlA2N=cmFlowStatsIBRRlA2N, cmEthernetNetPortHistoryLES=cmEthernetNetPortHistoryLES, cmEthernetAccPortStatsESP65=cmEthernetAccPortStatsESP65, cmOAMFlowPointThresholdVariable=cmOAMFlowPointThresholdVariable, cmAccPortQosShaperStatsFD=cmAccPortQosShaperStatsFD, cmAccPortQosShaperStatsFR=cmAccPortQosShaperStatsFR, cmEthernetNetPortHistoryESOP=cmEthernetNetPortHistoryESOP, cmEthernetAccPortStatsESFS=cmEthernetAccPortStatsESFS, cmEthernetNetPortStatsIBRMaxTx=cmEthernetNetPortStatsIBRMaxTx, cmPerfConformance=cmPerfConformance, cmEthernetAccPortStatsESUF=cmEthernetAccPortStatsESUF, cmQosPolicerV2HistoryFMRD=cmQosPolicerV2HistoryFMRD, cmFlowPointThresholdValueHi=cmFlowPointThresholdValueHi, f3FpQosShaperHistoryBREDD=f3FpQosShaperHistoryBREDD, cmQosPolicerV2StatsABR=cmQosPolicerV2StatsABR, stsVcPathThresholdMonValue=stsVcPathThresholdMonValue, cmEthernetAccPortHistoryABRTx=cmEthernetAccPortHistoryABRTx, cmQosShaperV2StatsBT=cmQosShaperV2StatsBT, cmEthernetAccPortHistoryESP1024=cmEthernetAccPortHistoryESP1024, cmAccPortQosShaperThresholdVariable=cmAccPortQosShaperThresholdVariable, e1t1ThresholdEntry=e1t1ThresholdEntry, cmLagStatsABRTx=cmLagStatsABRTx, cmLagHistoryESP=cmLagHistoryESP, cmFlowPointHistoryEfFramesDiscarded=cmFlowPointHistoryEfFramesDiscarded, stsVcPathStatsCVs=stsVcPathStatsCVs, cmQosShaperHistoryTable=cmQosShaperHistoryTable, cmQosShaperV2HistoryBTD=cmQosShaperV2HistoryBTD, cmFlowStatsL2CPFD=cmFlowStatsL2CPFD, cmEthernetNetPortStatsESP65=cmEthernetNetPortStatsESP65, cmFlowHistoryIBRN2AMin=cmFlowHistoryIBRN2AMin, ethernetNetworkPortPMGroup=ethernetNetworkPortPMGroup, cmEthernetAccPortThresholdVarOptVariance=cmEthernetAccPortThresholdVarOptVariance, cmEthernetNetPortHistoryXdslDsFecs=cmEthernetNetPortHistoryXdslDsFecs, cmEthernetNetPortStatsIndex=cmEthernetNetPortStatsIndex, f3CardThresholdTable=f3CardThresholdTable, f3CardStatsIMU=f3CardStatsIMU, ocnStmHistoryLineFCs=ocnStmHistoryLineFCs, cmEthernetTrafficPortHistoryIndex=cmEthernetTrafficPortHistoryIndex, cmEthernetAccPortStatsDhcpDropNoAssocIf=cmEthernetAccPortStatsDhcpDropNoAssocIf, cmQosFlowPolicerThresholdInterval=cmQosFlowPolicerThresholdInterval, cmEthernetNetPortStatsXdslUsFecs=cmEthernetNetPortStatsXdslUsFecs, e3t3HistoryPathCESsFarEnd=e3t3HistoryPathCESsFarEnd, f3NetPortQosShaperStatsFREDD=f3NetPortQosShaperStatsFREDD, f3AclRuleHistoryTime=f3AclRuleHistoryTime, cmEthernetAccPortHistoryL2PTRxFramesEncap=cmEthernetAccPortHistoryL2PTRxFramesEncap, cmEthernetAccPortHistoryLkupFails=cmEthernetAccPortHistoryLkupFails, cmLagHistoryESP512=cmLagHistoryESP512, cmEthernetNetPortHistoryAPFD=cmEthernetNetPortHistoryAPFD, cmEthernetNetPortHistoryAUFD=cmEthernetNetPortHistoryAUFD, f3AclRuleHistoryAction=f3AclRuleHistoryAction, cmEthernetAccPortHistoryESMP=cmEthernetAccPortHistoryESMP, cmEthernetTrafficPortThresholdValueHi=cmEthernetTrafficPortThresholdValueHi, e1t1HistoryPathUASsFarEnd=e1t1HistoryPathUASsFarEnd, cmEthernetTrafficPortHistoryATFD=cmEthernetTrafficPortHistoryATFD, f3FpQosPolicerStatsFMG=f3FpQosPolicerStatsFMG, ocnStmThresholdInterval=ocnStmThresholdInterval, cmEthernetAccPortStatsAPFD=cmEthernetAccPortStatsAPFD, cmEthernetAccPortThresholdMonValue=cmEthernetAccPortThresholdMonValue, e3t3StatsValid=e3t3StatsValid, cmQosShaperHistoryBR=cmQosShaperHistoryBR, cmFlowBWA2NMFB=cmFlowBWA2NMFB, f3AclRuleStatsIntervalType=f3AclRuleStatsIntervalType, e3t3ThresholdVariable=e3t3ThresholdVariable, cmEthernetTrafficPortStatsAclDropNoMatch=cmEthernetTrafficPortStatsAclDropNoMatch, e3t3HistoryTable=e3t3HistoryTable, cmEthernetAccPortStatsESMP=cmEthernetAccPortStatsESMP, cmEthernetAccPortStatsEntry=cmEthernetAccPortStatsEntry, cmEthernetTrafficPortHistoryL2PTTxFramesDecap=cmEthernetTrafficPortHistoryL2PTTxFramesDecap, f3CardHistoryICU=f3CardHistoryICU, cmEthernetNetPortHistoryTime=cmEthernetNetPortHistoryTime, f3CardHistoryIMU=f3CardHistoryIMU, cmLagThresholdInterval=cmLagThresholdInterval)
mibBuilder.exportSymbols("CM-PERFORMANCE-MIB", cmEthernetAccPortHistoryESOF=cmEthernetAccPortHistoryESOF, cmEthernetNetPortStatsESFS=cmEthernetNetPortStatsESFS, cmLagStatsESJ=cmLagStatsESJ, cmLagThresholdTable=cmLagThresholdTable, ocnStmStatsLineCVs=ocnStmStatsLineCVs, f3CardStatsICU=f3CardStatsICU, cmQosPolicerV2HistoryEntry=cmQosPolicerV2HistoryEntry, cmAccPortQosShaperThresholdMonValue=cmAccPortQosShaperThresholdMonValue, ocnStmStatsSectionSESs=ocnStmStatsSectionSESs, f3FpQosShaperStatsBTD=f3FpQosShaperStatsBTD, cmQosFlowPolicerStatsBytesIn=cmQosFlowPolicerStatsBytesIn, cmEthernetTrafficPortStatsDroppedFragmented=cmEthernetTrafficPortStatsDroppedFragmented, f3CardThresholdVariable=f3CardThresholdVariable, cmEthernetTrafficPortStatsL2PTTxFramesDecap=cmEthernetTrafficPortStatsL2PTTxFramesDecap, cmEthernetNetPortStatsESO=cmEthernetNetPortStatsESO, cmOAMFlowPointStatsUAS=cmOAMFlowPointStatsUAS, e3t3HistoryAction=e3t3HistoryAction, cmAccPortQosShaperStatsIndex=cmAccPortQosShaperStatsIndex, vtVcPathStatsTable=vtVcPathStatsTable, cmOAMFlowPointThresholdIndex=cmOAMFlowPointThresholdIndex, cmLagThresholdValueHi=cmLagThresholdValueHi, cmEthernetAccPortStatsESDE=cmEthernetAccPortStatsESDE, cmFlowHistoryBytesOutA2N=cmFlowHistoryBytesOutA2N, ocnStmHistoryLineFarEndCVs=ocnStmHistoryLineFarEndCVs, cmLagStatsL2CPFD=cmLagStatsL2CPFD, cmEthernetAccPortStatsTemp=cmEthernetAccPortStatsTemp, cmEthernetAccPortStatsLBC=cmEthernetAccPortStatsLBC, f3FpQosPolicerStatsFMRD=f3FpQosPolicerStatsFMRD, e3t3StatsPathAISs=e3t3StatsPathAISs, f3NetPortQosShaperStatsValid=f3NetPortQosShaperStatsValid, cmOAMFlowPointStatsSES=cmOAMFlowPointStatsSES, cmFlowHistoryES=cmFlowHistoryES, cmEthernetNetPortHistoryESDE=cmEthernetNetPortHistoryESDE, cmEthernetAccPortStatsESP=cmEthernetAccPortStatsESP, cmEthernetTrafficPortHistoryLES=cmEthernetTrafficPortHistoryLES, cmEthernetTrafficPortThresholdVariable=cmEthernetTrafficPortThresholdVariable, cmQosShaperHistoryTime=cmQosShaperHistoryTime, cmEthernetAccPortStatsLES=cmEthernetAccPortStatsLES, cmEthernetTrafficPortHistoryESUP=cmEthernetTrafficPortHistoryESUP, cmEthernetNetPortHistoryESP64=cmEthernetNetPortHistoryESP64, cmFlowPointHistoryFMG=cmFlowPointHistoryFMG, f3CardStatsACU=f3CardStatsACU, cmEthernetAccPortStatsESC=cmEthernetAccPortStatsESC, cmFlowStatsAction=cmFlowStatsAction, cmEthernetNetPortStatsIntervalType=cmEthernetNetPortStatsIntervalType, cmFlowPointThresholdIndex=cmFlowPointThresholdIndex, cmQosPolicerV2StatsEntry=cmQosPolicerV2StatsEntry, cmFlowStatsBytesOutA2N=cmFlowStatsBytesOutA2N, cmOAMFlowPointThresholdTable=cmOAMFlowPointThresholdTable, cmEthernetTrafficPortStatsTemp=cmEthernetTrafficPortStatsTemp, cmTrafficPortQosShaperThresholdMonValue=cmTrafficPortQosShaperThresholdMonValue, cmEthernetTrafficPortHistoryESP=cmEthernetTrafficPortHistoryESP, e3t3HistoryPathPCVs=e3t3HistoryPathPCVs, cmLagStatsESCAE=cmLagStatsESCAE, cmEthernetNetPortStatsAUFD=cmEthernetNetPortStatsAUFD, cmEthernetNetPortHistoryESP1519=cmEthernetNetPortHistoryESP1519, f3AclRuleStatsAction=f3AclRuleStatsAction, f3FpQosShaperHistoryTable=f3FpQosShaperHistoryTable, cmFlowHistoryValid=cmFlowHistoryValid, cmLagHistoryESP128=cmLagHistoryESP128, cmEthernetTrafficPortHistoryESP512=cmEthernetTrafficPortHistoryESP512, cmEthernetAccPortStatsABRRx=cmEthernetAccPortStatsABRRx, e3t3ThresholdTable=e3t3ThresholdTable, cmEthernetAccPortHistoryESFS=cmEthernetAccPortHistoryESFS, cmQosPolicerV2ThresholdTable=cmQosPolicerV2ThresholdTable, cmQosPolicerV2StatsFMG=cmQosPolicerV2StatsFMG, cmEthernetNetPortHistoryESJ=cmEthernetNetPortHistoryESJ, cmEthernetTrafficPortStatsESBS=cmEthernetTrafficPortStatsESBS, cmQosFlowPolicerStatsBytesOut=cmQosFlowPolicerStatsBytesOut, cmFlowHistoryAction=cmFlowHistoryAction, cmFlowPointHistorySES=cmFlowPointHistorySES, cmQosFlowPolicerThresholdCrossingAlert=cmQosFlowPolicerThresholdCrossingAlert, cmEthernetNetPortHistoryXdslDsEs=cmEthernetNetPortHistoryXdslDsEs, f3CardHistoryIndex=f3CardHistoryIndex, cmFlowThresholdMonValue=cmFlowThresholdMonValue, cmFlowPointStatsFMG=cmFlowPointStatsFMG, cmEthernetTrafficPortHistoryESP256=cmEthernetTrafficPortHistoryESP256, cmEthernetTrafficPortHistoryESP1024=cmEthernetTrafficPortHistoryESP1024, cmEthernetTrafficPortHistoryESBF=cmEthernetTrafficPortHistoryESBF, e3t3HistoryLineCVs=e3t3HistoryLineCVs, e1t1StatsPathESsFarEnd=e1t1StatsPathESsFarEnd, cmFlowPointThresholdVariable=cmFlowPointThresholdVariable, cmTrafficPortQosShaperStatsFREDD=cmTrafficPortQosShaperStatsFREDD, cmEthernetAccPortHistoryIBRTx=cmEthernetAccPortHistoryIBRTx, vtVcPathHistorySESs=vtVcPathHistorySESs, cmPerfCompliances=cmPerfCompliances, cmEthernetTrafficPortHistoryESFS=cmEthernetTrafficPortHistoryESFS, f3NetPortQosShaperStatsTable=f3NetPortQosShaperStatsTable, ocnStmHistoryLineTemp=ocnStmHistoryLineTemp, e3t3StatsPathFCs=e3t3StatsPathFCs, e1t1StatsPathESs=e1t1StatsPathESs, cmEthernetTrafficPortStatsIBRRx=cmEthernetTrafficPortStatsIBRRx, e1t1StatsLineESsFarEnd=e1t1StatsLineESsFarEnd, cmFlowPointThresholdTable=cmFlowPointThresholdTable, cmEthernetNetPortHistoryXdslUsCv=cmEthernetNetPortHistoryXdslUsCv, cmQosShaperHistoryFD=cmQosShaperHistoryFD, cmEthernetNetPortHistoryDhcpDropNoAssocIf=cmEthernetNetPortHistoryDhcpDropNoAssocIf, cmQosShaperV2HistoryBT=cmQosShaperV2HistoryBT, cmQosShaperV2ThresholdTable=cmQosShaperV2ThresholdTable, cmQosShaperStatsFD=cmQosShaperStatsFD, f3NetPortQosShaperHistoryValid=f3NetPortQosShaperHistoryValid, cmEthernetTrafficPortThresholdVarTable=cmEthernetTrafficPortThresholdVarTable, cmAccPortQosShaperStatsIntervalType=cmAccPortQosShaperStatsIntervalType, e1t1StatsLineESs=e1t1StatsLineESs, cmEthernetNetPortStatsXdslDsFecs=cmEthernetNetPortStatsXdslDsFecs, cmQosPolicerV2ThresholdMonValue=cmQosPolicerV2ThresholdMonValue, f3NetPortQosShaperStatsBREDD=f3NetPortQosShaperStatsBREDD, cmEthernetAccPortThresholdValueHi=cmEthernetAccPortThresholdValueHi, cmLagHistoryESP65=cmLagHistoryESP65, cmEthernetTrafficPortStatsESMP=cmEthernetTrafficPortStatsESMP, cmEthernetNetPortHistoryValid=cmEthernetNetPortHistoryValid, cmEthernetAccPortHistoryESP=cmEthernetAccPortHistoryESP, cmEthernetNetPortStatsESP1024=cmEthernetNetPortStatsESP1024, cmEthernetTrafficPortStatsUAS=cmEthernetTrafficPortStatsUAS, cmLagThresholdEntry=cmLagThresholdEntry, cmQosPolicerV2StatsIntervalType=cmQosPolicerV2StatsIntervalType, cmLagHistoryATFD=cmLagHistoryATFD, stsVcPathHistorySESs=stsVcPathHistorySESs, cmEthernetNetPortStatsAPFD=cmEthernetNetPortStatsAPFD, cmQosShaperHistoryIndex=cmQosShaperHistoryIndex, vtVcPathFarEndStatsCVs=vtVcPathFarEndStatsCVs, cmFlowThresholdCrossingAlert=cmFlowThresholdCrossingAlert, e1t1ThresholdVariable=e1t1ThresholdVariable, cmEthernetNetPortThresholdValueHi=cmEthernetNetPortThresholdValueHi, ocnStmHistorySectionSESs=ocnStmHistorySectionSESs, cmEthernetNetPortHistoryOPR=cmEthernetNetPortHistoryOPR, stsVcPathStatsEntry=stsVcPathStatsEntry, ocnStmStatsLineOPR=ocnStmStatsLineOPR, e1t1HistoryPathFCsFarEnd=e1t1HistoryPathFCsFarEnd, e3t3StatsPathCCVs=e3t3StatsPathCCVs, cmQosFlowPolicerHistoryBytesOut=cmQosFlowPolicerHistoryBytesOut, cmEthernetTrafficPortStatsESBF=cmEthernetTrafficPortStatsESBF, cmFlowPointThresholdMonValue=cmFlowPointThresholdMonValue, e3t3StatsPathCUASs=e3t3StatsPathCUASs, cmQosFlowPolicerHistoryFMG=cmQosFlowPolicerHistoryFMG, cmEthernetTrafficPortStatsESDE=cmEthernetTrafficPortStatsESDE, cmOAMFlowPointStatsAction=cmOAMFlowPointStatsAction, cmQosPolicerV2ThresholdEntry=cmQosPolicerV2ThresholdEntry, cmQosShaperV2ThresholdInterval=cmQosShaperV2ThresholdInterval, stsVcPathStatsIndex=stsVcPathStatsIndex, cmEthernetNetPortStatsESBP=cmEthernetNetPortStatsESBP, cmQosFlowPolicerStatsTable=cmQosFlowPolicerStatsTable, cmPerfNotifications=cmPerfNotifications, cmEthernetTrafficPortHistoryPSC=cmEthernetTrafficPortHistoryPSC, cmEthernetAccPortHistoryOPT=cmEthernetAccPortHistoryOPT, f3FpQosShaperThresholdValueLo=f3FpQosShaperThresholdValueLo, cmEthernetAccPortHistoryLES=cmEthernetAccPortHistoryLES, cmEthernetAccPortHistoryESMF=cmEthernetAccPortHistoryESMF, cmEthernetNetPortHistoryXdslUsPkt=cmEthernetNetPortHistoryXdslUsPkt, ocnStmStatsLineFarEndSESs=ocnStmStatsLineFarEndSESs, cmTrafficPortQosShaperStatsTable=cmTrafficPortQosShaperStatsTable, f3FpQosShaperStatsTable=f3FpQosShaperStatsTable, cmEthernetAccPortHistoryTemp=cmEthernetAccPortHistoryTemp, cmEthernetNetPortThresholdTable=cmEthernetNetPortThresholdTable, cmLagHistoryESCAE=cmLagHistoryESCAE, e1t1HistoryLineESs=e1t1HistoryLineESs, e1t1HistoryLineCVs=e1t1HistoryLineCVs, ocnStmStatsLineFarEndCVs=ocnStmStatsLineFarEndCVs, cmFlowPointStatsFTD=cmFlowPointStatsFTD, cmEthernetNetPortStatsESUF=cmEthernetNetPortStatsESUF, cmOAMFlowPointHistoryValid=cmOAMFlowPointHistoryValid, cmFlowPointHistoryFACLD=cmFlowPointHistoryFACLD, ocnStmThresholdValueLo=ocnStmThresholdValueLo, f3CardStatsIntervalType=f3CardStatsIntervalType, cmEthernetNetPortStatsESP256=cmEthernetNetPortStatsESP256, cmLagStatsIndex=cmLagStatsIndex, e3t3ThresholdIndex=e3t3ThresholdIndex, cmEthernetAccPortHistoryFmcd=cmEthernetAccPortHistoryFmcd, cmFlowHistoryABRRLRA2N=cmFlowHistoryABRRLRA2N, stsVcPathHistoryAction=stsVcPathHistoryAction, cmLagStatsESO=cmLagStatsESO, f3AclRuleHistoryIndex=f3AclRuleHistoryIndex, cmFlowPointHistoryValid=cmFlowPointHistoryValid, cmEthernetNetPortStatsUAS=cmEthernetNetPortStatsUAS, f3CardThresholdValueHi=f3CardThresholdValueHi, cmFlowThresholdEntry=cmFlowThresholdEntry, cmQosPolicerV2ThresholdCrossingAlert=cmQosPolicerV2ThresholdCrossingAlert, e1t1HistoryPathCVsFarEnd=e1t1HistoryPathCVsFarEnd, cmQosShaperStatsIndex=cmQosShaperStatsIndex, cmTrafficPortQosShaperHistoryEntry=cmTrafficPortQosShaperHistoryEntry, vtVcPathStatsCVs=vtVcPathStatsCVs, cmFlowHistoryIBRA2N=cmFlowHistoryIBRA2N, cmEthernetAccPortHistoryTable=cmEthernetAccPortHistoryTable, cmEthernetTrafficPortThresholdCrossingAlert=cmEthernetTrafficPortThresholdCrossingAlert, cmOAMFlowPointHistoryUAS=cmOAMFlowPointHistoryUAS, cmFlowPointStatsFdicd=cmFlowPointStatsFdicd, cmTrafficPortQosShaperHistoryABRRL=cmTrafficPortQosShaperHistoryABRRL, cmEthernetNetPortHistoryXdslUsFecs=cmEthernetNetPortHistoryXdslUsFecs, f3FpQosShaperStatsBT=f3FpQosShaperStatsBT, cmFlowPointHistoryFMYD=cmFlowPointHistoryFMYD, e1t1StatsLineUASs=e1t1StatsLineUASs, cmEthernetNetPortHistoryXdslUsFec=cmEthernetNetPortHistoryXdslUsFec, cmAccPortQosShaperHistoryAction=cmAccPortQosShaperHistoryAction, cmQosPolicerV2HistoryBytesOut=cmQosPolicerV2HistoryBytesOut, cmTrafficPortQosShaperHistoryAction=cmTrafficPortQosShaperHistoryAction, stsVcPathStatsIntervalType=stsVcPathStatsIntervalType, f3CardThresholdIndex=f3CardThresholdIndex, cmLagStatsL2CPFP=cmLagStatsL2CPFP, ocnStmThresholdValueHi=ocnStmThresholdValueHi, cmAccPortQosShaperStatsEntry=cmAccPortQosShaperStatsEntry, cmQosFlowPolicerStatsValid=cmQosFlowPolicerStatsValid, cmEthernetNetPortHistoryIndex=cmEthernetNetPortHistoryIndex, f3FpQosShaperStatsIntervalType=f3FpQosShaperStatsIntervalType, cmFlowPointHistoryABRRx=cmFlowPointHistoryABRRx, cmEthernetTrafficPortStatsESP64=cmEthernetTrafficPortStatsESP64, cmEthernetAccPortHistoryAction=cmEthernetAccPortHistoryAction, cmEthernetTrafficPortHistoryIBRMaxRx=cmEthernetTrafficPortHistoryIBRMaxRx, PYSNMP_MODULE_ID=cmPerformanceMIB, cmEthernetNetPortStatsTemp=cmEthernetNetPortStatsTemp, cmEthernetAccPortStatsUAS=cmEthernetAccPortStatsUAS, cmFlowPointStatsAction=cmFlowPointStatsAction, cmEthernetTrafficPortHistoryESUF=cmEthernetTrafficPortHistoryESUF, cmEthernetAccPortHistoryIBRMaxRx=cmEthernetAccPortHistoryIBRMaxRx, cmTrafficPortQosShaperThresholdCrossingAlert=cmTrafficPortQosShaperThresholdCrossingAlert, cmOAMFlowPointHistoryEntry=cmOAMFlowPointHistoryEntry, e3t3StatsPathCESs=e3t3StatsPathCESs, f3FpQosPolicerStatsIntervalType=f3FpQosPolicerStatsIntervalType, f3AclRuleThresholdMonValue=f3AclRuleThresholdMonValue, cmQosPolicerV2StatsBytesOut=cmQosPolicerV2StatsBytesOut, cmEthernetTrafficPortStatsROPT=cmEthernetTrafficPortStatsROPT, cmFlowPointStatsFD=cmFlowPointStatsFD, cmEthernetNetPortHistoryESFS=cmEthernetNetPortHistoryESFS, cmFlowBWN2ACIR=cmFlowBWN2ACIR, e3t3StatsPathCUASsFarEnd=e3t3StatsPathCUASsFarEnd, vtVcPathPerfGroup=vtVcPathPerfGroup, ocnStmThresholdVarOptVariance=ocnStmThresholdVarOptVariance, cmOAMFlowPointHistoryAction=cmOAMFlowPointHistoryAction, f3CardThresholdMonValue=f3CardThresholdMonValue, cmFlowStatsABRRLA2N=cmFlowStatsABRRLA2N, cmTrafficPortQosShaperStatsEntry=cmTrafficPortQosShaperStatsEntry, cmEthernetNetPortStatsESBF=cmEthernetNetPortStatsESBF, cmFlowStatsFMYDN2A=cmFlowStatsFMYDN2A, cmEthernetNetPortXdslHistoryTable=cmEthernetNetPortXdslHistoryTable, cmFlowPointHistoryUAS=cmFlowPointHistoryUAS, cmQosShaperThresholdVariable=cmQosShaperThresholdVariable, vtVcPathThresholdEntry=vtVcPathThresholdEntry, f3CardStatsTable=f3CardStatsTable, cmEthernetNetPortStatsXdslDsPkt=cmEthernetNetPortStatsXdslDsPkt, cmFlowPointStatsUAS=cmFlowPointStatsUAS, cmFlowPointThresholdCrossingAlert=cmFlowPointThresholdCrossingAlert, vtVcPathThresholdInterval=vtVcPathThresholdInterval, cmQosShaperThresholdMonValue=cmQosShaperThresholdMonValue, cmFlowHistoryFMGA2N=cmFlowHistoryFMGA2N, cmFlowPointHistoryAclRuleDrop=cmFlowPointHistoryAclRuleDrop, cmEthernetAccPortStatsOPT=cmEthernetAccPortStatsOPT, cmEthernetNetPortXdslStatsEntry=cmEthernetNetPortXdslStatsEntry, vtVcPathHistoryAction=vtVcPathHistoryAction, f3FpQosShaperStatsValid=f3FpQosShaperStatsValid, cmEthernetNetPortHistoryLBC=cmEthernetNetPortHistoryLBC, f3NetPortQosShaperHistoryIndex=f3NetPortQosShaperHistoryIndex, cmLagStatsESP1519=cmLagStatsESP1519, cmEthernetTrafficPortHistoryDhcpDropNoAssocIf=cmEthernetTrafficPortHistoryDhcpDropNoAssocIf, cmLagStatsValid=cmLagStatsValid, f3FpQosPolicerStatsAction=f3FpQosPolicerStatsAction)
mibBuilder.exportSymbols("CM-PERFORMANCE-MIB", f3CardPerfGroup=f3CardPerfGroup, cmEthernetAccPortStatsFmcd=cmEthernetAccPortStatsFmcd, cmFlowStatsIBRN2A=cmFlowStatsIBRN2A, cmFlowHistoryABRRLN2A=cmFlowHistoryABRRLN2A, e3t3StatsLineSESs=e3t3StatsLineSESs, e1t1HistoryPathAISs=e1t1HistoryPathAISs, ocnStmStatsLineFarEndUASs=ocnStmStatsLineFarEndUASs, e3t3HistoryPathCUASsFarEnd=e3t3HistoryPathCUASsFarEnd, cmQosShaperV2StatsIndex=cmQosShaperV2StatsIndex, cmEthernetAccPortHistoryIndex=cmEthernetAccPortHistoryIndex, cmEthernetNetPortHistoryFbcd=cmEthernetNetPortHistoryFbcd, cmFlowHistoryEntry=cmFlowHistoryEntry, f3NetPortQosShaperThresholdVariable=f3NetPortQosShaperThresholdVariable, cmQosFlowPolicerStatsEntry=cmQosFlowPolicerStatsEntry, cmFlowPointStatsFdTxFb=cmFlowPointStatsFdTxFb, cmQosFlowPolicerHistoryFMY=cmQosFlowPolicerHistoryFMY, cmTrafficPortQosShaperThresholdValueHi=cmTrafficPortQosShaperThresholdValueHi, cmEthernetAccPortStatsESP1024=cmEthernetAccPortStatsESP1024, cmEthernetTrafficPortStatsESMF=cmEthernetTrafficPortStatsESMF, cmEthernetNetPortHistoryXdslDsUas=cmEthernetNetPortHistoryXdslDsUas, cmEthernetNetPortStatsLBC=cmEthernetNetPortStatsLBC, cmTrafficPortQosShaperHistoryTime=cmTrafficPortQosShaperHistoryTime, cmFlowPointHistoryAction=cmFlowPointHistoryAction, vtVcPathStatsIndex=vtVcPathStatsIndex, cmLagStatsTable=cmLagStatsTable, cmFlowThresholdValueLo=cmFlowThresholdValueLo, cmEthernetAccPortThresholdTable=cmEthernetAccPortThresholdTable, cmEthernetTrafficPortHistoryABRRx=cmEthernetTrafficPortHistoryABRRx, vtVcPathHistoryCVs=vtVcPathHistoryCVs, cmQosFlowPolicerStatsAction=cmQosFlowPolicerStatsAction, cmEthernetTrafficPortStatsL2CPFD=cmEthernetTrafficPortStatsL2CPFD, ocnStmHistoryTable=ocnStmHistoryTable, cmLagStatsESMP=cmLagStatsESMP, cmEthernetNetPortStatsXdslUsFec=cmEthernetNetPortStatsXdslUsFec, cmFlowPointHistoryFMCD=cmFlowPointHistoryFMCD, f3CardStatsMCU=f3CardStatsMCU, cmEthernetTrafficPortStatsDhcpDropNoAssocIf=cmEthernetTrafficPortStatsDhcpDropNoAssocIf, cmQosShaperV2HistoryFREDD=cmQosShaperV2HistoryFREDD, cmOAMFlowPointHistorySES=cmOAMFlowPointHistorySES, vtVcPathStatsESs=vtVcPathStatsESs, e3t3StatsPathCSESs=e3t3StatsPathCSESs, cmEthernetNetPortHistoryXdslUsFullInits=cmEthernetNetPortHistoryXdslUsFullInits, cmTrafficPortQosShaperThresholdTable=cmTrafficPortQosShaperThresholdTable, cmEthernetNetPortXdslHistoryEntry=cmEthernetNetPortXdslHistoryEntry, cmEthernetNetPortXdslPerfGroup=cmEthernetNetPortXdslPerfGroup, cmEthernetNetPortHistoryUAS=cmEthernetNetPortHistoryUAS, cmTrafficPortQosShaperThresholdInterval=cmTrafficPortQosShaperThresholdInterval, cmQosPolicerV2HistoryBytesIn=cmQosPolicerV2HistoryBytesIn, trafficPMGroupCmHub=trafficPMGroupCmHub, cmEthernetAccPortHistoryESF=cmEthernetAccPortHistoryESF, f3NetPortQosShaperStatsABRRL=f3NetPortQosShaperStatsABRRL, cmFlowPointHistoryIBRMax=cmFlowPointHistoryIBRMax, f3AclRuleStatsRuleMatch=f3AclRuleStatsRuleMatch, cmEthernetAccPortStatsESBP=cmEthernetAccPortStatsESBP, cmFlowPointStatsIBRRlMax=cmFlowPointStatsIBRRlMax, cmEthernetAccPortHistoryESP128=cmEthernetAccPortHistoryESP128, cmLagHistoryAUFD=cmLagHistoryAUFD, cmFlowPointHistoryNumLearnTableFlushes=cmFlowPointHistoryNumLearnTableFlushes, cmEthernetTrafficPortHistoryDroppedFragmented=cmEthernetTrafficPortHistoryDroppedFragmented, cmEthernetTrafficPortThresholdValueLo=cmEthernetTrafficPortThresholdValueLo, cmFlowStatsBytesInN2A=cmFlowStatsBytesInN2A, cmEthernetTrafficPortHistoryFmcd=cmEthernetTrafficPortHistoryFmcd, cmAccPortQosShaperStatsAction=cmAccPortQosShaperStatsAction, cmEthernetTrafficPortStatsRTemp=cmEthernetTrafficPortStatsRTemp, cmEthernetAccPortHistoryESUF=cmEthernetAccPortHistoryESUF, cmQosFlowPolicerThresholdValueHi=cmQosFlowPolicerThresholdValueHi, cmFlowPointHistoryTime=cmFlowPointHistoryTime, cmPerfScalarObjects=cmPerfScalarObjects, ocnStmHistoryLineFarEndSESs=ocnStmHistoryLineFarEndSESs, cmFlowStatsIBRRlA2NMax=cmFlowStatsIBRRlA2NMax, cmLagHistoryESBS=cmLagHistoryESBS, cmQosPolicerV2StatsAction=cmQosPolicerV2StatsAction, f3FpQosPolicerHistoryValid=f3FpQosPolicerHistoryValid, cmFlowHistoryFMYN2A=cmFlowHistoryFMYN2A, cmEthernetTrafficPortStatsLkupFails=cmEthernetTrafficPortStatsLkupFails, cmFlowPointStatsIBRMax=cmFlowPointStatsIBRMax, cmEthernetTrafficPortThresholdEntry=cmEthernetTrafficPortThresholdEntry, cmFlowPointStatsFMYD=cmFlowPointStatsFMYD, cmAccPortQosShaperStatsValid=cmAccPortQosShaperStatsValid, cmEthernetNetPortStatsXdslUsCv=cmEthernetNetPortStatsXdslUsCv, ocnStmStatsLineUASs=ocnStmStatsLineUASs, cmEthernetTrafficPortHistoryOPR=cmEthernetTrafficPortHistoryOPR, ocnStmStatsLinePSC=ocnStmStatsLinePSC, cmLagStatsESUP=cmLagStatsESUP, cmEthernetNetPortStatsLkupFails=cmEthernetNetPortStatsLkupFails, e3t3HistoryPathCFCsFarEnd=e3t3HistoryPathCFCsFarEnd, cmEthernetNetPortStatsXdslDsEs=cmEthernetNetPortStatsXdslDsEs, cmEthernetAccPortStatsESMF=cmEthernetAccPortStatsESMF, cmQosShaperHistoryABRRLR=cmQosShaperHistoryABRRLR, cmQosPolicerV2HistoryFMYD=cmQosPolicerV2HistoryFMYD, cmLagHistoryL2CPFP=cmLagHistoryL2CPFP, e1t1StatsPathFCs=e1t1StatsPathFCs, cmFlowPointStatsFMRD=cmFlowPointStatsFMRD, cmFlowStatsACLN2ADrop=cmFlowStatsACLN2ADrop, cmEthernetAccPortHistoryAPFD=cmEthernetAccPortHistoryAPFD, cmEthernetTrafficPortHistoryESDE=cmEthernetTrafficPortHistoryESDE, cmEthernetAccPortStatsAclDropNoMatch=cmEthernetAccPortStatsAclDropNoMatch, f3FpQosShaperThresholdInterval=f3FpQosShaperThresholdInterval, f3NetPortQosShaperThresholdIndex=f3NetPortQosShaperThresholdIndex, cmQosPolicerV2StatsFMYD=cmQosPolicerV2StatsFMYD, cmEthernetTrafficPortStatsAclFwd2Cpu=cmEthernetTrafficPortStatsAclFwd2Cpu, cmEthernetAccPortHistoryOPR=cmEthernetAccPortHistoryOPR, vtVcPathStatsUASs=vtVcPathStatsUASs, f3FpQosPolicerThresholdValueHi=f3FpQosPolicerThresholdValueHi, cmQosShaperThresholdCrossingAlert=cmQosShaperThresholdCrossingAlert, flowPointPmGroup=flowPointPmGroup, f3AclRulePerfGroup=f3AclRulePerfGroup, f3FpQosShaperHistoryTime=f3FpQosShaperHistoryTime, cmLagHistoryIndex=cmLagHistoryIndex, cmLagHistoryTime=cmLagHistoryTime, cmQosFlowPolicerStatsIndex=cmQosFlowPolicerStatsIndex, cmFlowPointStatsAclDropNoMatch=cmFlowPointStatsAclDropNoMatch, cmEthernetNetPortStatsXdslDsFullInits=cmEthernetNetPortStatsXdslDsFullInits, stsVcPathHistoryESs=stsVcPathHistoryESs, cmEthernetNetPortHistoryXdslUsLoss=cmEthernetNetPortHistoryXdslUsLoss, cmEthernetTrafficPortHistoryESOF=cmEthernetTrafficPortHistoryESOF, cmEthernetTrafficPortStatsESP256=cmEthernetTrafficPortStatsESP256, cmFlowStatsUAS=cmFlowStatsUAS, ocnStmHistoryAction=ocnStmHistoryAction, cmEthernetTrafficPortHistoryTime=cmEthernetTrafficPortHistoryTime, cmEthernetNetPortStatsL2PTTxFramesDecap=cmEthernetNetPortStatsL2PTTxFramesDecap, cmEthernetTrafficPortHistoryESMF=cmEthernetTrafficPortHistoryESMF, cmEthernetTrafficPortStatsESP1024=cmEthernetTrafficPortStatsESP1024, cmEthernetAccPortStatsIndex=cmEthernetAccPortStatsIndex, cmEthernetNetPortThresholdIndex=cmEthernetNetPortThresholdIndex, e3t3StatsPathCSESsFarEnd=e3t3StatsPathCSESsFarEnd, cmQosFlowPolicerHistoryBytesIn=cmQosFlowPolicerHistoryBytesIn, cmQosFlowPolicerStatsFMY=cmQosFlowPolicerStatsFMY, f3FpQosShaperPerfGroup=f3FpQosShaperPerfGroup, cmEthernetAccPortHistoryESDE=cmEthernetAccPortHistoryESDE, cmFlowPointThresholdEntry=cmFlowPointThresholdEntry, cmLagStatsATFD=cmLagStatsATFD, cmEthernetAccPortStatsIBRRx=cmEthernetAccPortStatsIBRRx, cmEthernetTrafficPortHistoryROPT=cmEthernetTrafficPortHistoryROPT, e3t3HistoryLineESs=e3t3HistoryLineESs, cmPerQueryGenTrap=cmPerQueryGenTrap, cmEthernetNetPortStatsESUP=cmEthernetNetPortStatsESUP, cmEthernetAccPortThresholdVarTable=cmEthernetAccPortThresholdVarTable, cmFlowStatsIBRRlA2NMin=cmFlowStatsIBRRlA2NMin, cmFlowHistoryABRA2N=cmFlowHistoryABRA2N, cmOAMFlowPointThresholdInterval=cmOAMFlowPointThresholdInterval, cmTrafficPortQosShaperStatsBREDD=cmTrafficPortQosShaperStatsBREDD, cmPerfObjects=cmPerfObjects, ocnStmHistoryLineFarEndUASs=ocnStmHistoryLineFarEndUASs, cmEthernetTrafficPortStatsESP512=cmEthernetTrafficPortStatsESP512, ocnStmThresholdVarGroup=ocnStmThresholdVarGroup, f3FpQosPolicerThresholdEntry=f3FpQosPolicerThresholdEntry, cmFlowStatsABRRLN2A=cmFlowStatsABRRLN2A, e3t3HistoryTime=e3t3HistoryTime, vtVcPathThresholdValueLo=vtVcPathThresholdValueLo, vtVcPathStatsAction=vtVcPathStatsAction, cmQosShaperThresholdValueLo=cmQosShaperThresholdValueLo, vtVcPathFarEndHistoryESs=vtVcPathFarEndHistoryESs, cmEthernetAccPortHistoryESUP=cmEthernetAccPortHistoryESUP, cmLagStatsESP128=cmLagStatsESP128, f3NetPortQosShaperHistoryABRRL=f3NetPortQosShaperHistoryABRRL, cmEthernetNetPortHistoryXdslDsPkt=cmEthernetNetPortHistoryXdslDsPkt, f3FpQosPolicerStatsBytesOut=f3FpQosPolicerStatsBytesOut, cmQosFlowPolicerStatsABR=cmQosFlowPolicerStatsABR, cmFlowHistoryFMCDA2N=cmFlowHistoryFMCDA2N, f3FpQosPolicerHistoryFMRD=f3FpQosPolicerHistoryFMRD, cmFlowPointHistoryIndex=cmFlowPointHistoryIndex, cmQosPolicerV2StatsFMY=cmQosPolicerV2StatsFMY, f3CardThresholdValueLo=f3CardThresholdValueLo, vtVcPathFarEndStatsUASs=vtVcPathFarEndStatsUASs, f3NetPortQosShaperStatsFTD=f3NetPortQosShaperStatsFTD, cmFlowHistoryFMRDA2N=cmFlowHistoryFMRDA2N, f3AclRuleHistoryRuleMatch=f3AclRuleHistoryRuleMatch, cmEthernetAccPortStatsESBF=cmEthernetAccPortStatsESBF, f3FpQosPolicerStatsABR=f3FpQosPolicerStatsABR, vtVcPathThresholdValueHi=vtVcPathThresholdValueHi, vtVcPathStatsEntry=vtVcPathStatsEntry, cmFlowStatsACLA2NDrop=cmFlowStatsACLA2NDrop, vtVcPathHistoryUASs=vtVcPathHistoryUASs, cmLagHistoryEntry=cmLagHistoryEntry, ethernetAccessPortPMGroup=ethernetAccessPortPMGroup, cmEthernetNetPortStatsXdslUsFullInits=cmEthernetNetPortStatsXdslUsFullInits, cmQosShaperHistoryFR=cmQosShaperHistoryFR, cmLagStatsESOF=cmLagStatsESOF, stsVcPathFarEndStatsCVs=stsVcPathFarEndStatsCVs, f3FpQosPolicerHistoryBytesOut=f3FpQosPolicerHistoryBytesOut, cmEthernetTrafficPortHistoryESOP=cmEthernetTrafficPortHistoryESOP, stsVcPathStatsUASs=stsVcPathStatsUASs, e1t1StatsPathUASs=e1t1StatsPathUASs, cmEthernetAccPortHistoryL2CPFD=cmEthernetAccPortHistoryL2CPFD, cmQosShaperThresholdIndex=cmQosShaperThresholdIndex, cmEthernetTrafficPortStatsOPT=cmEthernetTrafficPortStatsOPT, cmFlowPointStatsBytesIn=cmFlowPointStatsBytesIn, cmEthernetNetPortStatsXdslDsUas=cmEthernetNetPortStatsXdslDsUas, stsVcPathStatsTable=stsVcPathStatsTable, cmEthernetNetPortStatsDhcpDropNoAssocIf=cmEthernetNetPortStatsDhcpDropNoAssocIf, f3CardHistoryValid=f3CardHistoryValid, stsVcPathHistoryUASs=stsVcPathHistoryUASs, ocnStmHistoryIndex=ocnStmHistoryIndex, e1t1HistoryPathESs=e1t1HistoryPathESs, cmEthernetAccPortHistoryIBRRx=cmEthernetAccPortHistoryIBRRx, cmEthernetAccPortStatsL2PTTxFramesDecap=cmEthernetAccPortStatsL2PTTxFramesDecap, ocnStmHistoryLineLBC=ocnStmHistoryLineLBC, cmEthernetAccPortHistoryIBRMaxTx=cmEthernetAccPortHistoryIBRMaxTx, cmEthernetNetPortStatsESF=cmEthernetNetPortStatsESF, cmQosShaperHistoryABRRL=cmQosShaperHistoryABRRL, cmQosShaperV2HistoryABRRL=cmQosShaperV2HistoryABRRL, cmAccPortQosShaperThresholdValueHi=cmAccPortQosShaperThresholdValueHi, cmQosShaperHistoryBTD=cmQosShaperHistoryBTD, cmLagStatsESF=cmLagStatsESF, ocnStmHistorySectionSEFs=ocnStmHistorySectionSEFs, cmAccPortQosShaperHistoryFD=cmAccPortQosShaperHistoryFD, cmEthernetAccPortStatsL2CPFP=cmEthernetAccPortStatsL2CPFP, cmEthernetNetPortHistoryEntry=cmEthernetNetPortHistoryEntry, vtVcPathFarEndHistorySESs=vtVcPathFarEndHistorySESs, vtVcPathThresholdTable=vtVcPathThresholdTable, cmEthernetNetPortStatsXdslDsFec=cmEthernetNetPortStatsXdslDsFec, cmEthernetTrafficPortHistoryESMP=cmEthernetTrafficPortHistoryESMP, cmQosShaperV2HistoryValid=cmQosShaperV2HistoryValid, e1t1HistoryPathUASs=e1t1HistoryPathUASs, cmEthernetTrafficPortStatsL2PTRxFramesEncap=cmEthernetTrafficPortStatsL2PTRxFramesEncap, cmLagHistoryESP256=cmLagHistoryESP256, cmEthernetAccPortStatsESP512=cmEthernetAccPortStatsESP512, f3NetPortQosShaperThresholdTable=f3NetPortQosShaperThresholdTable, cmOAMFlowPointHistoryTime=cmOAMFlowPointHistoryTime, f3AclRuleStatsEntry=f3AclRuleStatsEntry, cmOAMFlowPointThresholdCrossingAlert=cmOAMFlowPointThresholdCrossingAlert, cmEthernetAccPortHistoryL2PTTxFramesDecap=cmEthernetAccPortHistoryL2PTTxFramesDecap, ocnStmStatsSectionSEFs=ocnStmStatsSectionSEFs, f3FpQosShaperHistoryFREDD=f3FpQosShaperHistoryFREDD, f3FpQosPolicerStatsBytesIn=f3FpQosPolicerStatsBytesIn, cmFlowPointHistoryFTD=cmFlowPointHistoryFTD, ocnStmThresholdVarTable=ocnStmThresholdVarTable, cmFlowPointThresholdInterval=cmFlowPointThresholdInterval, cmFlowPointStatsIndex=cmFlowPointStatsIndex, cmLagHistoryESJ=cmLagHistoryESJ, cmEthernetNetPortStatsXdslUsEs=cmEthernetNetPortStatsXdslUsEs, cmFlowStatsBytesInA2N=cmFlowStatsBytesInA2N, cmEthernetAccPortStatsESP128=cmEthernetAccPortStatsESP128, cmQosShaperV2StatsIntervalType=cmQosShaperV2StatsIntervalType, cmLagHistoryESMP=cmLagHistoryESMP, e3t3ThresholdValueLo=e3t3ThresholdValueLo, cmEthernetNetPortStatsXdslDsCv=cmEthernetNetPortStatsXdslDsCv, cmEthernetAccPortStatsIBRMaxRx=cmEthernetAccPortStatsIBRMaxRx, cmQosShaperV2ThresholdValueHi=cmQosShaperV2ThresholdValueHi, cmEthernetAccPortStatsL2PTRxFramesEncap=cmEthernetAccPortStatsL2PTRxFramesEncap, cmLagThresholdValueLo=cmLagThresholdValueLo, cmQosShaperV2StatsEntry=cmQosShaperV2StatsEntry, cmQosFlowPolicerThresholdVariable=cmQosFlowPolicerThresholdVariable, cmFlowPointStatsFBCD=cmFlowPointStatsFBCD, cmEthernetNetPortHistoryESF=cmEthernetNetPortHistoryESF, cmLagHistoryESF=cmLagHistoryESF, cmPerfGroups=cmPerfGroups, cmQosFlowPolicerThresholdTable=cmQosFlowPolicerThresholdTable, f3FpQosShaperStatsBREDD=f3FpQosShaperStatsBREDD, cmFlowThresholdValueHi=cmFlowThresholdValueHi, f3FpQosPolicerThresholdVariable=f3FpQosPolicerThresholdVariable, cmLagStatsESUF=cmLagStatsESUF, cmEthernetAccPortHistoryIBRMinTx=cmEthernetAccPortHistoryIBRMinTx)
mibBuilder.exportSymbols("CM-PERFORMANCE-MIB", e1t1HistoryLineUASs=e1t1HistoryLineUASs, cmTrafficPortQosShaperStatsValid=cmTrafficPortQosShaperStatsValid, cmEthernetNetPortHistoryIBRMinRx=cmEthernetNetPortHistoryIBRMinRx, cmFlowBWPerfGroup=cmFlowBWPerfGroup, cmEthernetTrafficPortThresholdVarOprVariance=cmEthernetTrafficPortThresholdVarOprVariance, cmEthernetNetPortStatsL2CPFP=cmEthernetNetPortStatsL2CPFP, cmFlowStatsFMRDA2N=cmFlowStatsFMRDA2N, ocnStmStatsSectionUASs=ocnStmStatsSectionUASs, f3FpQosShaperThresholdMonValue=f3FpQosShaperThresholdMonValue, f3FpQosPolicerThresholdInterval=f3FpQosPolicerThresholdInterval, f3AclRuleThresholdValueLo=f3AclRuleThresholdValueLo, cmEthernetTrafficPortStatsPSC=cmEthernetTrafficPortStatsPSC, cmFlowThresholdIndex=cmFlowThresholdIndex, cmQosShaperStatsEntry=cmQosShaperStatsEntry, cmOAMFlowPointStatsIndex=cmOAMFlowPointStatsIndex, cmAccPortQosShaperStatsTable=cmAccPortQosShaperStatsTable, cmLagStatsESBP=cmLagStatsESBP, f3FpQosShaperStatsFTD=f3FpQosShaperStatsFTD, cmEthernetTrafficPortThresholdMonValue=cmEthernetTrafficPortThresholdMonValue, e1t1StatsPathSESs=e1t1StatsPathSESs, cmEthernetAccPortStatsL2CPFD=cmEthernetAccPortStatsL2CPFD, f3FpQosShaperStatsIndex=f3FpQosShaperStatsIndex, cmTrafficPortQosShaperStatsFD=cmTrafficPortQosShaperStatsFD, stsVcPathHistoryCVs=stsVcPathHistoryCVs, f3NetPortQosShaperHistoryFTD=f3NetPortQosShaperHistoryFTD, f3CardHistoryEntry=f3CardHistoryEntry, cmEthernetTrafficPortStatsAPFD=cmEthernetTrafficPortStatsAPFD, cmQosPolicerV2HistoryFMG=cmQosPolicerV2HistoryFMG, cmEthernetTrafficPortHistoryEntry=cmEthernetTrafficPortHistoryEntry, cmFlowPointHistoryAclDropNoMatch=cmFlowPointHistoryAclDropNoMatch, cmEthernetNetPortHistoryL2CPFP=cmEthernetNetPortHistoryL2CPFP, cmQosFlowPolicerStatsFMYD=cmQosFlowPolicerStatsFMYD, cmFlowPointStatsFMCD=cmFlowPointStatsFMCD, cmLagHistoryESO=cmLagHistoryESO, cmFlowStatsFMGA2N=cmFlowStatsFMGA2N, cmEthernetNetPortStatsXdslUsSes=cmEthernetNetPortStatsXdslUsSes, cmFlowPointStatsFLD=cmFlowPointStatsFLD, f3FpQosPolicerThresholdValueLo=f3FpQosPolicerThresholdValueLo, e3t3HistoryValid=e3t3HistoryValid, cmFlowStatsABRN2A=cmFlowStatsABRN2A, cmEthernetTrafficPortStatsESF=cmEthernetTrafficPortStatsESF, f3FpQosPolicerThresholdCrossingAlert=f3FpQosPolicerThresholdCrossingAlert, cmQosShaperV2HistoryFTD=cmQosShaperV2HistoryFTD, cmFlowBWExtEntry=cmFlowBWExtEntry, cmFlowPointStatsNumLearnTableFlushes=cmFlowPointStatsNumLearnTableFlushes, cmFlowPointStatsSES=cmFlowPointStatsSES, cmEthernetTrafficPortHistoryESO=cmEthernetTrafficPortHistoryESO, cmEthernetNetPortStatsL2PTRxFramesEncap=cmEthernetNetPortStatsL2PTRxFramesEncap, cmFlowStatsES=cmFlowStatsES, cmEthernetNetPortStatsXdslDsSes=cmEthernetNetPortStatsXdslDsSes, cmQosPolicerV2ThresholdValueLo=cmQosPolicerV2ThresholdValueLo, cmTrafficPortQosShaperThresholdVariable=cmTrafficPortQosShaperThresholdVariable, cmEthernetNetPortHistoryXdslUsEs=cmEthernetNetPortHistoryXdslUsEs, cmLagStatsESFS=cmLagStatsESFS, cmEthernetNetPortHistoryXdslUsSes=cmEthernetNetPortHistoryXdslUsSes, f3FpQosShaperHistoryValid=f3FpQosShaperHistoryValid, cmEthernetNetPortStatsIBRMinRx=cmEthernetNetPortStatsIBRMinRx, cmEthernetAccPortHistoryABRRx=cmEthernetAccPortHistoryABRRx, cmLagHistoryESBF=cmLagHistoryESBF, cmEthernetTrafficPortHistoryESP128=cmEthernetTrafficPortHistoryESP128, cmQosShaperV2HistoryFD=cmQosShaperV2HistoryFD, cmEthernetTrafficPortStatsAUFD=cmEthernetTrafficPortStatsAUFD, cmEthernetTrafficPortStatsTable=cmEthernetTrafficPortStatsTable, cmEthernetNetPortHistoryIBRMaxTx=cmEthernetNetPortHistoryIBRMaxTx, cmEthernetTrafficPortHistoryESP65=cmEthernetTrafficPortHistoryESP65, f3CardStatsMMU=f3CardStatsMMU, cmEthernetTrafficPortStatsABRTx=cmEthernetTrafficPortStatsABRTx, cmPerQueryGenControl=cmPerQueryGenControl, cmFlowStatsFMYA2N=cmFlowStatsFMYA2N, cmAccPortQosShaperHistoryValid=cmAccPortQosShaperHistoryValid, cmOAMFlowPointHistoryIndex=cmOAMFlowPointHistoryIndex, f3NetPortQosShaperThresholdValueHi=f3NetPortQosShaperThresholdValueHi, e3t3HistoryPathPSESs=e3t3HistoryPathPSESs, cmFlowStatsTable=cmFlowStatsTable, cmFlowPointStatsAclRuleDrop=cmFlowPointStatsAclRuleDrop, cmQosShaperStatsFTD=cmQosShaperStatsFTD, f3FpQosPolicerThresholdMonValue=f3FpQosPolicerThresholdMonValue, cmEthernetTrafficPortStatsIntervalType=cmEthernetTrafficPortStatsIntervalType, cmFlowThresholdTable=cmFlowThresholdTable, cmEthernetTrafficPortHistoryESBP=cmEthernetTrafficPortHistoryESBP, cmLagThresholdVariable=cmLagThresholdVariable, cmQosShaperV2StatsFREDD=cmQosShaperV2StatsFREDD, cmEthernetNetPortStatsIBRRx=cmEthernetNetPortStatsIBRRx, cmQosPolicerV2StatsFMRD=cmQosPolicerV2StatsFMRD, f3FpQosPolicerStatsEntry=f3FpQosPolicerStatsEntry, cmQosShaperV2ThresholdValueLo=cmQosShaperV2ThresholdValueLo, e1t1StatsLineSESs=e1t1StatsLineSESs, cmLagStatsESC=cmLagStatsESC, cmLagHistoryESP1519=cmLagHistoryESP1519, cmEthernetNetPortThresholdInterval=cmEthernetNetPortThresholdInterval, e1t1HistoryTable=e1t1HistoryTable, stsVcPathThresholdValueLo=stsVcPathThresholdValueLo, cmEthernetAccPortHistoryESO=cmEthernetAccPortHistoryESO, cmEthernetNetPortHistoryXdslDsSes=cmEthernetNetPortHistoryXdslDsSes, cmFlowPointHistoryEfBytesDiscarded=cmFlowPointHistoryEfBytesDiscarded, cmFlowStatsIBRRlN2AMin=cmFlowStatsIBRRlN2AMin, cmAccPortQosShaperHistoryFTD=cmAccPortQosShaperHistoryFTD, cmEthernetNetPortStatsESP64=cmEthernetNetPortStatsESP64, cmFlowPointStatsABRRx=cmFlowPointStatsABRRx, stsVcPathThresholdTable=stsVcPathThresholdTable, cmQosShaperV2StatsFD=cmQosShaperV2StatsFD, cmEthernetNetPortStatsFbcd=cmEthernetNetPortStatsFbcd, f3FpQosShaperThresholdValueHi=f3FpQosShaperThresholdValueHi, cmFlowStatsFMYN2A=cmFlowStatsFMYN2A, cmLagHistoryABRRx=cmLagHistoryABRRx, cmFlowHistoryIBRN2A=cmFlowHistoryIBRN2A, cmEthernetNetPortHistoryXdslDsLoss=cmEthernetNetPortHistoryXdslDsLoss, cmQosPolicerV2StatsIndex=cmQosPolicerV2StatsIndex, cmEthernetAccPortHistoryESC=cmEthernetAccPortHistoryESC, cmEthernetNetPortStatsXdslUsLoss=cmEthernetNetPortStatsXdslUsLoss, cmEthernetAccPortStatsAUFD=cmEthernetAccPortStatsAUFD, cmOAMFlowPointHistoryTable=cmOAMFlowPointHistoryTable, ocnStmThresholdVarOprVariance=ocnStmThresholdVarOprVariance, cmFlowStatsIBRN2AMin=cmFlowStatsIBRN2AMin, cmQosShaperStatsTable=cmQosShaperStatsTable, f3FpQosPolicerHistoryIndex=f3FpQosPolicerHistoryIndex, f3NetPortQosShaperThresholdInterval=f3NetPortQosShaperThresholdInterval, ocnStmStatsSectionCVs=ocnStmStatsSectionCVs, cmFlowPointHistoryABRRLRx=cmFlowPointHistoryABRRLRx, cmEthernetTrafficPortHistoryESF=cmEthernetTrafficPortHistoryESF, f3FpQosShaperStatsABRRL=f3FpQosShaperStatsABRRL, cmQosShaperStatsABRRL=cmQosShaperStatsABRRL, f3AclRuleThresholdEntry=f3AclRuleThresholdEntry, cmQosFlowPolicerThresholdMonValue=cmQosFlowPolicerThresholdMonValue, cmQosFlowPolicerStatsFMRD=cmQosFlowPolicerStatsFMRD, vtVcPathFarEndStatsESs=vtVcPathFarEndStatsESs, f3FpQosShaperHistoryABRRL=f3FpQosShaperHistoryABRRL, cmQosShaperV2ThresholdMonValue=cmQosShaperV2ThresholdMonValue, f3NetPortQosShaperThresholdValueLo=f3NetPortQosShaperThresholdValueLo, e1t1StatsTable=e1t1StatsTable, cmEthernetNetPortStatsIBRMaxRx=cmEthernetNetPortStatsIBRMaxRx, cmFlowHistorySES=cmFlowHistorySES, cmFlowThresholdVariable=cmFlowThresholdVariable, e3t3StatsPathCFCsFarEnd=e3t3StatsPathCFCsFarEnd, ocnStmStatsEntry=ocnStmStatsEntry, f3CardStatsIndex=f3CardStatsIndex, vtVcPathHistoryValid=vtVcPathHistoryValid, cmEthernetNetPortStatsESP128=cmEthernetNetPortStatsESP128)
