#
# PySNMP MIB module JACQUES-650-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/jacques/JACQUES-650-MIB
# Produced by pysmi-1.1.12 at Wed Jul  3 12:25:07 2024
# On host fv-az1022-995 platform Linux version 6.5.0-1022-azure by user runner
# Using Python version 3.10.14 (main, Jun 20 2024, 15:20:03) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Integer32, Counter32, ObjectIdentity, NotificationType, Unsigned32, IpAddress, ModuleIdentity, Bits, Counter64, Gauge32, MibIdentifier, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Integer32", "Counter32", "ObjectIdentity", "NotificationType", "Unsigned32", "IpAddress", "ModuleIdentity", "Bits", "Counter64", "Gauge32", "MibIdentifier", "iso", "TimeTicks")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
jacquesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 49759))
jacquesMIB.setRevisions(('2017-03-26 00:00',))
if mibBuilder.loadTexts: jacquesMIB.setLastUpdated('201703260000Z')
if mibBuilder.loadTexts: jacquesMIB.setOrganization('Jacques Technologies')
jacquesMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 1))
jacquesScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 2))
jacquesNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 3))
jacquesAppNotifyPrePrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 3, 0))
jacquesAppNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 3, 0, 0))
jacquesEndpointNotifyPrePrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 3, 1))
jacquesEndpointNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 3, 1, 0))
jacquesMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 1, 1))
jacquesMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 49759, 1, 2))
jacquesServerName = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jacquesServerName.setStatus('current')
jacquesAppUp = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 2), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesAppUp.setStatus('current')
jacquesTag = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesTag.setStatus('current')
jacquesEndpointOnline = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 4), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesEndpointOnline.setStatus('current')
jacquesEndpointMode = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("remote", 2), ("isolate", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesEndpointMode.setStatus('current')
jacquesEndpointAlarmType = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesEndpointAlarmType.setStatus('current')
jacquesEndpointAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 49759, 2, 7), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jacquesEndpointAlarmState.setStatus('current')
jacquesJccpserverUpNotify = NotificationType((1, 3, 6, 1, 4, 1, 49759, 3, 0, 0, 1)).setObjects(("JACQUES-650-MIB", "jacquesAppUp"), ("JACQUES-650-MIB", "jacquesServerName"))
if mibBuilder.loadTexts: jacquesJccpserverUpNotify.setStatus('current')
jacquesEndpointOnlineNotify = NotificationType((1, 3, 6, 1, 4, 1, 49759, 3, 1, 0, 1)).setObjects(("JACQUES-650-MIB", "jacquesTag"), ("JACQUES-650-MIB", "jacquesEndpointOnline"))
if mibBuilder.loadTexts: jacquesEndpointOnlineNotify.setStatus('current')
jacquesEndpointModeNotify = NotificationType((1, 3, 6, 1, 4, 1, 49759, 3, 1, 0, 2)).setObjects(("JACQUES-650-MIB", "jacquesTag"), ("JACQUES-650-MIB", "jacquesEndpointMode"))
if mibBuilder.loadTexts: jacquesEndpointModeNotify.setStatus('current')
jacquesEndpointAlarmNotify = NotificationType((1, 3, 6, 1, 4, 1, 49759, 3, 1, 0, 3)).setObjects(("JACQUES-650-MIB", "jacquesTag"), ("JACQUES-650-MIB", "jacquesEndpointAlarmType"))
if mibBuilder.loadTexts: jacquesEndpointAlarmNotify.setStatus('current')
jacquesMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 49759, 1, 1, 1)).setObjects(("JACQUES-650-MIB", "jacquesServerGroup"), ("JACQUES-650-MIB", "jacquesEndpointGroup"), ("JACQUES-650-MIB", "jacquesServerNotifyGroup"), ("JACQUES-650-MIB", "jacquesEndpointNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jacquesMIBCompliance = jacquesMIBCompliance.setStatus('current')
jacquesServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 49759, 1, 2, 1)).setObjects(("JACQUES-650-MIB", "jacquesAppUp"), ("JACQUES-650-MIB", "jacquesServerName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jacquesServerGroup = jacquesServerGroup.setStatus('current')
jacquesEndpointGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 49759, 1, 2, 2)).setObjects(("JACQUES-650-MIB", "jacquesTag"), ("JACQUES-650-MIB", "jacquesEndpointOnline"), ("JACQUES-650-MIB", "jacquesEndpointMode"), ("JACQUES-650-MIB", "jacquesEndpointAlarmType"), ("JACQUES-650-MIB", "jacquesEndpointAlarmState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jacquesEndpointGroup = jacquesEndpointGroup.setStatus('current')
jacquesServerNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 49759, 1, 2, 3)).setObjects(("JACQUES-650-MIB", "jacquesJccpserverUpNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jacquesServerNotifyGroup = jacquesServerNotifyGroup.setStatus('current')
jacquesEndpointNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 49759, 1, 2, 4)).setObjects(("JACQUES-650-MIB", "jacquesEndpointOnlineNotify"), ("JACQUES-650-MIB", "jacquesEndpointModeNotify"), ("JACQUES-650-MIB", "jacquesEndpointAlarmNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    jacquesEndpointNotifyGroup = jacquesEndpointNotifyGroup.setStatus('current')
mibBuilder.exportSymbols("JACQUES-650-MIB", jacquesServerName=jacquesServerName, jacquesEndpointMode=jacquesEndpointMode, jacquesNotify=jacquesNotify, jacquesServerGroup=jacquesServerGroup, jacquesEndpointGroup=jacquesEndpointGroup, jacquesEndpointAlarmNotify=jacquesEndpointAlarmNotify, jacquesEndpointAlarmState=jacquesEndpointAlarmState, jacquesAppUp=jacquesAppUp, jacquesEndpointNotifyPrefix=jacquesEndpointNotifyPrefix, jacquesMIBCompliance=jacquesMIBCompliance, jacquesJccpserverUpNotify=jacquesJccpserverUpNotify, jacquesEndpointAlarmType=jacquesEndpointAlarmType, jacquesMIBConformance=jacquesMIBConformance, jacquesAppNotifyPrefix=jacquesAppNotifyPrefix, jacquesEndpointNotifyGroup=jacquesEndpointNotifyGroup, jacquesServerNotifyGroup=jacquesServerNotifyGroup, jacquesTag=jacquesTag, jacquesMIBCompliances=jacquesMIBCompliances, jacquesScalars=jacquesScalars, jacquesMIBGroups=jacquesMIBGroups, jacquesEndpointModeNotify=jacquesEndpointModeNotify, jacquesEndpointNotifyPrePrefix=jacquesEndpointNotifyPrePrefix, jacquesMIB=jacquesMIB, jacquesEndpointOnlineNotify=jacquesEndpointOnlineNotify, PYSNMP_MODULE_ID=jacquesMIB, jacquesAppNotifyPrePrefix=jacquesAppNotifyPrePrefix, jacquesEndpointOnline=jacquesEndpointOnline)
