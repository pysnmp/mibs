#
# PySNMP MIB module RS-XX9-FM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/rs/RS-XX9-FM-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 12:07:32 2024
# On host fv-az888-540 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
commonNotificationAlarmClass, = mibBuilder.importSymbols("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass")
rsXx9MibModule, rsXx9Fm = mibBuilder.importSymbols("RS-XX9-SMI-MIB", "rsXx9MibModule", "rsXx9Fm")
NotificationMask, NotificationState, SwitchOnOff, IndexTransmitter, IndexAB, NotificationPriority = mibBuilder.importSymbols("RS-XX9-TC-MIB", "NotificationMask", "NotificationState", "SwitchOnOff", "IndexTransmitter", "IndexAB", "NotificationPriority")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, IpAddress, Integer32, Counter32, Unsigned32, ModuleIdentity, Gauge32, Bits, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "IpAddress", "Integer32", "Counter32", "Unsigned32", "ModuleIdentity", "Gauge32", "Bits", "iso")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
rsXx9FmMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 1, 216, 11))
rsXx9FmMibModule.setRevisions(('2012-11-20 08:00',))
if mibBuilder.loadTexts: rsXx9FmMibModule.setLastUpdated('201211200800Z')
if mibBuilder.loadTexts: rsXx9FmMibModule.setOrganization('Rohde&Schwarz GmbH & Co. KG')
class FmPilotSyncSource(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("off", 1), ("aesUserBits", 2), ("aesStartFrame", 3), ("aesSB", 4), ("ext1PPS", 5))

class FmSoundMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("monoL", 1), ("monoR", 2), ("monoLpR", 3), ("stereo", 4))

rsXx9FmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 0))
fmAudioInputPrimary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 0, 1)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-FM-MIB", "fmInpStNotificationPriority"), ("RS-XX9-FM-MIB", "fmInpStNotificationState"))
if mibBuilder.loadTexts: fmAudioInputPrimary.setStatus('current')
fmAudioInputSecondary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 0, 2)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-FM-MIB", "fmInpStNotificationPriority"), ("RS-XX9-FM-MIB", "fmInpStNotificationState"))
if mibBuilder.loadTexts: fmAudioInputSecondary.setStatus('current')
fmAfLeft = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 0, 3)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-FM-MIB", "fmInpStNotificationPriority"), ("RS-XX9-FM-MIB", "fmInpStNotificationState"))
if mibBuilder.loadTexts: fmAfLeft.setStatus('current')
fmAfRight = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 0, 4)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-FM-MIB", "fmInpStNotificationPriority"), ("RS-XX9-FM-MIB", "fmInpStNotificationState"))
if mibBuilder.loadTexts: fmAfRight.setStatus('current')
fmMpx1 = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 0, 5)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-FM-MIB", "fmInpStNotificationPriority"), ("RS-XX9-FM-MIB", "fmInpStNotificationState"))
if mibBuilder.loadTexts: fmMpx1.setStatus('current')
fmMpx2 = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 0, 6)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-FM-MIB", "fmInpStNotificationPriority"), ("RS-XX9-FM-MIB", "fmInpStNotificationState"))
if mibBuilder.loadTexts: fmMpx2.setStatus('current')
fmAesLeft = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 0, 7)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-FM-MIB", "fmInpStNotificationPriority"), ("RS-XX9-FM-MIB", "fmInpStNotificationState"))
if mibBuilder.loadTexts: fmAesLeft.setStatus('current')
fmAesRight = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 0, 8)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-FM-MIB", "fmInpStNotificationPriority"), ("RS-XX9-FM-MIB", "fmInpStNotificationState"))
if mibBuilder.loadTexts: fmAesRight.setStatus('current')
fmAux1Input = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 0, 9)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-FM-MIB", "fmInpStNotificationPriority"), ("RS-XX9-FM-MIB", "fmInpStNotificationState"))
if mibBuilder.loadTexts: fmAux1Input.setStatus('current')
fmAux2Input = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 0, 10)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-FM-MIB", "fmInpStNotificationPriority"), ("RS-XX9-FM-MIB", "fmInpStNotificationState"))
if mibBuilder.loadTexts: fmAux2Input.setStatus('current')
rsXx9FmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1))
fmInput = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1))
fmInputStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1))
fmInpStNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 1), )
if mibBuilder.loadTexts: fmInpStNotificationTable.setStatus('current')
fmInpStNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 1, 1), ).setIndexNames((0, "RS-XX9-FM-MIB", "fmInpStNotificationTxIdx"), (0, "RS-XX9-FM-MIB", "fmInpStNotificationExcIdx"), (0, "RS-XX9-FM-MIB", "fmInpStNotificationIdx"))
if mibBuilder.loadTexts: fmInpStNotificationEntry.setStatus('current')
fmInpStNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: fmInpStNotificationTxIdx.setStatus('current')
fmInpStNotificationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: fmInpStNotificationExcIdx.setStatus('current')
fmInpStNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: fmInpStNotificationIdx.setStatus('current')
fmInpStNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("fmAudioInputPrimary", 1), ("fmAudioInputSecondary", 2), ("fmAfLeft", 3), ("fmAfRight", 4), ("fmMpx1", 5), ("fmMpx2", 6), ("fmAesLeft", 7), ("fmAesRight", 8), ("fmAux1Input", 9), ("fmAux2Input", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmInpStNotificationName.setStatus('current')
fmInpStNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmInpStNotificationMask.setStatus('current')
fmInpStNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmInpStNotificationPriority.setStatus('current')
fmInpStNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmInpStNotificationState.setStatus('current')
fmAfStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 2), )
if mibBuilder.loadTexts: fmAfStateTable.setStatus('current')
fmAfStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 2, 1), ).setIndexNames((0, "RS-XX9-FM-MIB", "fmInpStNotificationTxIdx"), (0, "RS-XX9-FM-MIB", "fmInpStNotificationExcIdx"))
if mibBuilder.loadTexts: fmAfStateEntry.setStatus('current')
fmAfStateLeftCurrentLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 2, 1, 1), Integer32()).setUnits('1/10 dBu').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAfStateLeftCurrentLevel.setStatus('current')
fmAfStateLeftCurrentLevelPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 2, 1, 2), Unsigned32()).setUnits('per thousand').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAfStateLeftCurrentLevelPercent.setStatus('current')
fmAfStateRightCurrentLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 2, 1, 3), Integer32()).setUnits('1/10 dBu').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAfStateRightCurrentLevel.setStatus('current')
fmAfStateRightCurrentLevelPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 2, 1, 4), Unsigned32()).setUnits('per thousand').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAfStateRightCurrentLevelPercent.setStatus('current')
fmDigitalAudioStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3), )
if mibBuilder.loadTexts: fmDigitalAudioStateTable.setStatus('current')
fmDigitalAudioStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1), )
fmAfStateEntry.registerAugmentions(("RS-XX9-FM-MIB", "fmDigitalAudioStateEntry"))
fmDigitalAudioStateEntry.setIndexNames(*fmAfStateEntry.getIndexNames())
if mibBuilder.loadTexts: fmDigitalAudioStateEntry.setStatus('current')
fmAesStateLeftCurrentLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1, 1), Integer32()).setUnits('1/10 dBFs').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesStateLeftCurrentLevel.setStatus('current')
fmAesStateLeftCurrentLevelPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1, 2), Unsigned32()).setUnits('per thousand').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesStateLeftCurrentLevelPercent.setStatus('current')
fmAesStateRightCurrentLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1, 3), Integer32()).setUnits('1/10 dBFs').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesStateRightCurrentLevel.setStatus('current')
fmAesStateRightCurrentLevelPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1, 4), Unsigned32()).setUnits('per thousand').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesStateRightCurrentLevelPercent.setStatus('current')
fmAesStateSampleRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1, 5), Unsigned32()).setUnits('1/10 kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesStateSampleRate.setStatus('current')
fmAesStatePreemphasis = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("on", 2), ("off", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesStatePreemphasis.setStatus('current')
fmAesStateAudio = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesStateAudio.setStatus('current')
fmAesStatePcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("ok", 2), ("warning", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesStatePcm.setStatus('current')
fmAesStateChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("ok", 2), ("warning", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesStateChannel.setStatus('current')
fmAesStateParityBiphase = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesStateParityBiphase.setStatus('current')
fmAesStateClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 3, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesStateClock.setStatus('current')
fmMpxAuxStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 4), )
if mibBuilder.loadTexts: fmMpxAuxStateTable.setStatus('current')
fmMpxAuxStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 4, 1), )
fmAfStateEntry.registerAugmentions(("RS-XX9-FM-MIB", "fmMpxAuxStateEntry"))
fmMpxAuxStateEntry.setIndexNames(*fmAfStateEntry.getIndexNames())
if mibBuilder.loadTexts: fmMpxAuxStateEntry.setStatus('current')
fmMpxAux1StateCurrentLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 4, 1, 1), Integer32()).setUnits('1/10 dBu').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmMpxAux1StateCurrentLevel.setStatus('current')
fmMpxAux1StateCurrentLevelPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 4, 1, 2), Unsigned32()).setUnits('per thousand').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmMpxAux1StateCurrentLevelPercent.setStatus('current')
fmMpxAux2StateCurrentLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 4, 1, 3), Integer32()).setUnits('1/10 dBu').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmMpxAux2StateCurrentLevel.setStatus('current')
fmMpxAux2StateCurrentLevelPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 1, 4, 1, 4), Unsigned32()).setUnits('per thousand').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmMpxAux2StateCurrentLevelPercent.setStatus('current')
fmInputSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2))
fmInputGeneralSetupTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 1), )
if mibBuilder.loadTexts: fmInputGeneralSetupTable.setStatus('current')
fmInputGeneralSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 1, 1), ).setIndexNames((0, "RS-XX9-FM-MIB", "fmInpGenSetupTxIdx"), (0, "RS-XX9-FM-MIB", "fmInpGenSetupExcIdx"))
if mibBuilder.loadTexts: fmInputGeneralSetupEntry.setStatus('current')
fmInpGenSetupTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: fmInpGenSetupTxIdx.setStatus('current')
fmInpGenSetupExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: fmInpGenSetupExcIdx.setStatus('current')
fmInpGenSetupMainSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5))).clone(namedValues=NamedValues(("af", 2), ("aes", 3), ("mpx1", 4), ("mpx2", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmInpGenSetupMainSource.setStatus('current')
fmInpGenSetupMainSoundMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 1, 1, 4), FmSoundMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmInpGenSetupMainSoundMode.setStatus('current')
fmInpGenSetupReserveSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("af", 2), ("aes", 3), ("mpx1", 4), ("mpx2", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmInpGenSetupReserveSource.setStatus('current')
fmInpGenSetupReserveSoundMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 1, 1, 6), FmSoundMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmInpGenSetupReserveSoundMode.setStatus('current')
fmInpGenSetupInputMonitoring = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("alwaysOn", 2), ("activeIfRfOn", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmInpGenSetupInputMonitoring.setStatus('current')
fmInpGenSetupMpxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unbalanced", 1), ("balanced", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmInpGenSetupMpxMode.setStatus('current')
fmAfSetupTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 2), )
if mibBuilder.loadTexts: fmAfSetupTable.setStatus('current')
fmAfSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 2, 1), )
fmInputGeneralSetupEntry.registerAugmentions(("RS-XX9-FM-MIB", "fmAfSetupEntry"))
fmAfSetupEntry.setIndexNames(*fmInputGeneralSetupEntry.getIndexNames())
if mibBuilder.loadTexts: fmAfSetupEntry.setStatus('current')
fmAfSetupImpedance = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("gt2kOhm", 1), ("sixhundredOhm", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmAfSetupImpedance.setStatus('current')
fmAfSetupNominalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-60, 120))).setUnits('1/10 dBu').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmAfSetupNominalLevel.setStatus('current')
fmAfSetupThresholdPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setUnits('per thousand').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmAfSetupThresholdPercent.setStatus('current')
fmAfSetupOnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmAfSetupOnTime.setStatus('current')
fmAfSetupOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmAfSetupOffTime.setStatus('current')
fmAfSetupThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 2, 1, 6), Integer32()).setUnits('1/10 dBu').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAfSetupThreshold.setStatus('current')
fmDigitalAudioSetupTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 3), )
if mibBuilder.loadTexts: fmDigitalAudioSetupTable.setStatus('current')
fmDigitalAudioSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 3, 1), )
fmInputGeneralSetupEntry.registerAugmentions(("RS-XX9-FM-MIB", "fmDigitalAudioSetupEntry"))
fmDigitalAudioSetupEntry.setIndexNames(*fmInputGeneralSetupEntry.getIndexNames())
if mibBuilder.loadTexts: fmDigitalAudioSetupEntry.setStatus('current')
fmAesSetupNominalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-120, 0))).setUnits('1/10 dB FS').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmAesSetupNominalLevel.setStatus('current')
fmAesSetupThresholdPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setUnits('per thousand').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmAesSetupThresholdPercent.setStatus('current')
fmAesSetupOnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmAesSetupOnTime.setStatus('current')
fmAesSetupOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmAesSetupOffTime.setStatus('current')
fmAesSetupThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 3, 1, 5), Integer32()).setUnits('1/10 dB FS').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmAesSetupThreshold.setStatus('current')
fmMpxSetupTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 4), )
if mibBuilder.loadTexts: fmMpxSetupTable.setStatus('current')
fmMpxSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 4, 1), ).setIndexNames((0, "RS-XX9-FM-MIB", "fmInpGenSetupTxIdx"), (0, "RS-XX9-FM-MIB", "fmInpGenSetupExcIdx"), (0, "RS-XX9-FM-MIB", "fmMpxSetupInpIdx"))
if mibBuilder.loadTexts: fmMpxSetupEntry.setStatus('current')
fmMpxSetupInpIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mpx1", 1), ("mpx2", 2))))
if mibBuilder.loadTexts: fmMpxSetupInpIdx.setStatus('current')
fmMpxSetupNominalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 160))).setUnits('1/10 dBu').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmMpxSetupNominalLevel.setStatus('current')
fmMpxSetupThresholdPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setUnits('per thousand').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmMpxSetupThresholdPercent.setStatus('current')
fmMpxSetupOnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmMpxSetupOnTime.setStatus('current')
fmMpxSetupOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmMpxSetupOffTime.setStatus('current')
fmMpxSetupThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 4, 1, 6), Integer32()).setUnits('1/10 dBu').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmMpxSetupThreshold.setStatus('current')
fmDataInputSetupTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 5), )
if mibBuilder.loadTexts: fmDataInputSetupTable.setStatus('current')
fmDataInputSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 5, 1), ).setIndexNames((0, "RS-XX9-FM-MIB", "fmInpGenSetupTxIdx"), (0, "RS-XX9-FM-MIB", "fmInpGenSetupExcIdx"), (0, "RS-XX9-FM-MIB", "fmDataSetupInpIdx"))
if mibBuilder.loadTexts: fmDataInputSetupEntry.setStatus('current')
fmDataSetupInpIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aux1", 1), ("aux2", 2))))
if mibBuilder.loadTexts: fmDataSetupInpIdx.setStatus('current')
fmDataSetupOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 5, 1, 2), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmDataSetupOperationMode.setStatus('current')
fmDataSetupNominalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-180, -70))).setUnits('1/10 dBu').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmDataSetupNominalLevel.setStatus('current')
fmDataSetupNominalDeviation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 100))).setUnits('1/10 kHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmDataSetupNominalDeviation.setStatus('current')
fmDataSetupThresholdPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setUnits('per thousand').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmDataSetupThresholdPercent.setStatus('current')
fmDataSetupOnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 5, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmDataSetupOnTime.setStatus('current')
fmDataSetupOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 5, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmDataSetupOffTime.setStatus('current')
fmDataSetupLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 5, 1, 8), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmDataSetupLabel.setStatus('current')
fmDataSetupThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 1, 2, 5, 1, 9), Integer32()).setUnits('1/10 dBu').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmDataSetupThreshold.setStatus('current')
fmPilotTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 2), )
if mibBuilder.loadTexts: fmPilotTable.setStatus('current')
fmPilotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 2, 1), ).setIndexNames((0, "RS-XX9-FM-MIB", "fmPilotTxIdx"), (0, "RS-XX9-FM-MIB", "fmPilotExcIdx"))
if mibBuilder.loadTexts: fmPilotEntry.setStatus('current')
fmPilotTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 2, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: fmPilotTxIdx.setStatus('current')
fmPilotExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 2, 1, 2), IndexAB())
if mibBuilder.loadTexts: fmPilotExcIdx.setStatus('current')
fmPilotOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 2, 1, 3), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmPilotOperationMode.setStatus('current')
fmPilotDeviation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(200, 1000))).setUnits('1/100 kHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmPilotDeviation.setStatus('current')
fmPreemphasisTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 3), )
if mibBuilder.loadTexts: fmPreemphasisTable.setStatus('current')
fmPreemphasisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 3, 1), )
fmPilotEntry.registerAugmentions(("RS-XX9-FM-MIB", "fmPreemphasisEntry"))
fmPreemphasisEntry.setIndexNames(*fmPilotEntry.getIndexNames())
if mibBuilder.loadTexts: fmPreemphasisEntry.setStatus('current')
fmPreemphasisOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 3, 1, 1), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmPreemphasisOperationMode.setStatus('current')
fmPreemphasisValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("microSec50", 1), ("microSec75", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmPreemphasisValue.setStatus('current')
fmDeviationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 4), )
if mibBuilder.loadTexts: fmDeviationTable.setStatus('current')
fmDeviationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 4, 1), )
fmPilotEntry.registerAugmentions(("RS-XX9-FM-MIB", "fmDeviationEntry"))
fmDeviationEntry.setIndexNames(*fmPilotEntry.getIndexNames())
if mibBuilder.loadTexts: fmDeviationEntry.setStatus('current')
fmDeviationNominal = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(400, 1500))).setUnits('1/10 kHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmDeviationNominal.setStatus('current')
fmDeviationCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 4, 1, 2), Unsigned32()).setUnits('1/10 kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmDeviationCurrent.setStatus('current')
fmLimiterOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("clipperOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmLimiterOperationMode.setStatus('current')
fmLimiterThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(400, 1500))).setUnits('1/10 kHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmLimiterThreshold.setStatus('current')
fmLimiterActivity = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 4, 1, 5), Integer32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmLimiterActivity.setStatus('current')
fmDeviationClipped = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 4, 1, 6), Unsigned32()).setUnits('1/10 kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmDeviationClipped.setStatus('current')
fmMPxPowerControlOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 4, 1, 7), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmMPxPowerControlOperationMode.setStatus('current')
fmMPxPowerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 50))).setUnits('1/10 dBr').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmMPxPowerThreshold.setStatus('current')
fmMPxPowerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 4, 1, 9), Integer32()).setUnits('1/10 dBr').setMaxAccess("readonly")
if mibBuilder.loadTexts: fmMPxPowerCurrent.setStatus('current')
fmSyncTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 6), )
if mibBuilder.loadTexts: fmSyncTable.setStatus('current')
fmSyncEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 6, 1), )
fmPilotEntry.registerAugmentions(("RS-XX9-FM-MIB", "fmSyncEntry"))
fmSyncEntry.setIndexNames(*fmPilotEntry.getIndexNames())
if mibBuilder.loadTexts: fmSyncEntry.setStatus('current')
fmSyncPilotSyncSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 6, 1, 1), FmPilotSyncSource()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSyncPilotSyncSource.setStatus('current')
fmSyncPilotSyncSourceCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 6, 1, 2), FmPilotSyncSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fmSyncPilotSyncSourceCurrent.setStatus('current')
fmSyncStaticDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999999))).setUnits('nano second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSyncStaticDelay.setStatus('current')
fmSyncPilotPhase = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 1, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('1/100 percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: fmSyncPilotPhase.setStatus('current')
rsXx9FmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 2))
rsXx9FmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 2, 1))
fmBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 2, 1, 1)).setObjects(("RS-XX9-FM-MIB", "fmObjBasic"), ("RS-XX9-FM-MIB", "fmObjInput"), ("RS-XX9-FM-MIB", "fmNotifyInput"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fmBasicCompliance = fmBasicCompliance.setStatus('current')
rsXx9FmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 2, 2))
fmObjBasic = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 2, 2, 1)).setObjects(("RS-XX9-FM-MIB", "fmPilotOperationMode"), ("RS-XX9-FM-MIB", "fmPilotDeviation"), ("RS-XX9-FM-MIB", "fmPreemphasisOperationMode"), ("RS-XX9-FM-MIB", "fmPreemphasisValue"), ("RS-XX9-FM-MIB", "fmDeviationNominal"), ("RS-XX9-FM-MIB", "fmDeviationCurrent"), ("RS-XX9-FM-MIB", "fmLimiterOperationMode"), ("RS-XX9-FM-MIB", "fmLimiterThreshold"), ("RS-XX9-FM-MIB", "fmLimiterActivity"), ("RS-XX9-FM-MIB", "fmDeviationClipped"), ("RS-XX9-FM-MIB", "fmMPxPowerControlOperationMode"), ("RS-XX9-FM-MIB", "fmMPxPowerThreshold"), ("RS-XX9-FM-MIB", "fmMPxPowerCurrent"), ("RS-XX9-FM-MIB", "fmSyncPilotSyncSource"), ("RS-XX9-FM-MIB", "fmSyncStaticDelay"), ("RS-XX9-FM-MIB", "fmSyncPilotPhase"), ("RS-XX9-FM-MIB", "fmSyncPilotSyncSourceCurrent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fmObjBasic = fmObjBasic.setStatus('current')
fmObjInput = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 2, 2, 2)).setObjects(("RS-XX9-FM-MIB", "fmInpStNotificationName"), ("RS-XX9-FM-MIB", "fmInpStNotificationMask"), ("RS-XX9-FM-MIB", "fmInpStNotificationPriority"), ("RS-XX9-FM-MIB", "fmInpStNotificationState"), ("RS-XX9-FM-MIB", "fmAesStateLeftCurrentLevel"), ("RS-XX9-FM-MIB", "fmAesStateLeftCurrentLevelPercent"), ("RS-XX9-FM-MIB", "fmAesStateRightCurrentLevel"), ("RS-XX9-FM-MIB", "fmAesStateRightCurrentLevelPercent"), ("RS-XX9-FM-MIB", "fmAesStateSampleRate"), ("RS-XX9-FM-MIB", "fmAesStatePreemphasis"), ("RS-XX9-FM-MIB", "fmAesStateAudio"), ("RS-XX9-FM-MIB", "fmAesStateClock"), ("RS-XX9-FM-MIB", "fmAfSetupImpedance"), ("RS-XX9-FM-MIB", "fmAfSetupNominalLevel"), ("RS-XX9-FM-MIB", "fmAfSetupThreshold"), ("RS-XX9-FM-MIB", "fmAfSetupOnTime"), ("RS-XX9-FM-MIB", "fmAfSetupOffTime"), ("RS-XX9-FM-MIB", "fmAesSetupNominalLevel"), ("RS-XX9-FM-MIB", "fmAesSetupThreshold"), ("RS-XX9-FM-MIB", "fmAesSetupOnTime"), ("RS-XX9-FM-MIB", "fmAesSetupOffTime"), ("RS-XX9-FM-MIB", "fmMpxSetupNominalLevel"), ("RS-XX9-FM-MIB", "fmMpxSetupThreshold"), ("RS-XX9-FM-MIB", "fmMpxSetupOnTime"), ("RS-XX9-FM-MIB", "fmMpxSetupOffTime"), ("RS-XX9-FM-MIB", "fmDataSetupOperationMode"), ("RS-XX9-FM-MIB", "fmDataSetupNominalLevel"), ("RS-XX9-FM-MIB", "fmDataSetupNominalDeviation"), ("RS-XX9-FM-MIB", "fmDataSetupThreshold"), ("RS-XX9-FM-MIB", "fmDataSetupOnTime"), ("RS-XX9-FM-MIB", "fmInpGenSetupMainSource"), ("RS-XX9-FM-MIB", "fmInpGenSetupMainSoundMode"), ("RS-XX9-FM-MIB", "fmInpGenSetupReserveSource"), ("RS-XX9-FM-MIB", "fmInpGenSetupReserveSoundMode"), ("RS-XX9-FM-MIB", "fmDataSetupLabel"), ("RS-XX9-FM-MIB", "fmDataSetupOffTime"), ("RS-XX9-FM-MIB", "fmAesStateParityBiphase"), ("RS-XX9-FM-MIB", "fmAesStatePcm"), ("RS-XX9-FM-MIB", "fmDataSetupThresholdPercent"), ("RS-XX9-FM-MIB", "fmMpxSetupThresholdPercent"), ("RS-XX9-FM-MIB", "fmAesSetupThresholdPercent"), ("RS-XX9-FM-MIB", "fmAfSetupThresholdPercent"), ("RS-XX9-FM-MIB", "fmInpGenSetupInputMonitoring"), ("RS-XX9-FM-MIB", "fmInpGenSetupMpxMode"), ("RS-XX9-FM-MIB", "fmAesStateChannel"), ("RS-XX9-FM-MIB", "fmAfStateLeftCurrentLevel"), ("RS-XX9-FM-MIB", "fmAfStateLeftCurrentLevelPercent"), ("RS-XX9-FM-MIB", "fmAfStateRightCurrentLevel"), ("RS-XX9-FM-MIB", "fmAfStateRightCurrentLevelPercent"), ("RS-XX9-FM-MIB", "fmMpxAux1StateCurrentLevel"), ("RS-XX9-FM-MIB", "fmMpxAux1StateCurrentLevelPercent"), ("RS-XX9-FM-MIB", "fmMpxAux2StateCurrentLevel"), ("RS-XX9-FM-MIB", "fmMpxAux2StateCurrentLevelPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fmObjInput = fmObjInput.setStatus('current')
fmNotifyInput = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 11, 2, 2, 3)).setObjects(("RS-XX9-FM-MIB", "fmAudioInputPrimary"), ("RS-XX9-FM-MIB", "fmAudioInputSecondary"), ("RS-XX9-FM-MIB", "fmMpx1"), ("RS-XX9-FM-MIB", "fmMpx2"), ("RS-XX9-FM-MIB", "fmAesLeft"), ("RS-XX9-FM-MIB", "fmAesRight"), ("RS-XX9-FM-MIB", "fmAfLeft"), ("RS-XX9-FM-MIB", "fmAfRight"), ("RS-XX9-FM-MIB", "fmAux1Input"), ("RS-XX9-FM-MIB", "fmAux2Input"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fmNotifyInput = fmNotifyInput.setStatus('current')
mibBuilder.exportSymbols("RS-XX9-FM-MIB", fmDataInputSetupTable=fmDataInputSetupTable, fmSyncPilotSyncSourceCurrent=fmSyncPilotSyncSourceCurrent, fmAesStatePreemphasis=fmAesStatePreemphasis, fmInputGeneralSetupEntry=fmInputGeneralSetupEntry, fmDeviationCurrent=fmDeviationCurrent, fmMpxAux1StateCurrentLevelPercent=fmMpxAux1StateCurrentLevelPercent, fmAfLeft=fmAfLeft, fmAfSetupTable=fmAfSetupTable, fmDataSetupThreshold=fmDataSetupThreshold, fmBasicCompliance=fmBasicCompliance, fmInpGenSetupReserveSoundMode=fmInpGenSetupReserveSoundMode, fmAudioInputPrimary=fmAudioInputPrimary, fmAesSetupThresholdPercent=fmAesSetupThresholdPercent, fmMpxSetupTable=fmMpxSetupTable, fmMpx1=fmMpx1, fmDataSetupOnTime=fmDataSetupOnTime, fmMpxAux2StateCurrentLevel=fmMpxAux2StateCurrentLevel, fmAfStateRightCurrentLevelPercent=fmAfStateRightCurrentLevelPercent, fmDataSetupNominalDeviation=fmDataSetupNominalDeviation, fmMpxSetupNominalLevel=fmMpxSetupNominalLevel, fmDigitalAudioSetupEntry=fmDigitalAudioSetupEntry, fmAesStatePcm=fmAesStatePcm, fmDataSetupInpIdx=fmDataSetupInpIdx, fmDataSetupOperationMode=fmDataSetupOperationMode, fmDeviationEntry=fmDeviationEntry, fmInpStNotificationName=fmInpStNotificationName, fmSyncPilotPhase=fmSyncPilotPhase, fmMpxAux1StateCurrentLevel=fmMpxAux1StateCurrentLevel, fmPreemphasisOperationMode=fmPreemphasisOperationMode, fmDataSetupOffTime=fmDataSetupOffTime, PYSNMP_MODULE_ID=rsXx9FmMibModule, fmAesRight=fmAesRight, fmInpGenSetupTxIdx=fmInpGenSetupTxIdx, fmPilotOperationMode=fmPilotOperationMode, fmAesStateLeftCurrentLevel=fmAesStateLeftCurrentLevel, fmSyncStaticDelay=fmSyncStaticDelay, fmAfStateLeftCurrentLevelPercent=fmAfStateLeftCurrentLevelPercent, fmAesStateParityBiphase=fmAesStateParityBiphase, fmAfSetupEntry=fmAfSetupEntry, fmAesStateRightCurrentLevel=fmAesStateRightCurrentLevel, fmMpxAuxStateEntry=fmMpxAuxStateEntry, rsXx9FmMibModule=rsXx9FmMibModule, fmAesSetupThreshold=fmAesSetupThreshold, fmInpStNotificationExcIdx=fmInpStNotificationExcIdx, fmPilotExcIdx=fmPilotExcIdx, fmAfSetupThresholdPercent=fmAfSetupThresholdPercent, fmInpStNotificationTxIdx=fmInpStNotificationTxIdx, fmAux1Input=fmAux1Input, fmInpGenSetupExcIdx=fmInpGenSetupExcIdx, fmAfStateTable=fmAfStateTable, fmMpx2=fmMpx2, fmMpxSetupThreshold=fmMpxSetupThreshold, fmMpxSetupEntry=fmMpxSetupEntry, fmAesStateChannel=fmAesStateChannel, fmAesStateLeftCurrentLevelPercent=fmAesStateLeftCurrentLevelPercent, fmAux2Input=fmAux2Input, fmDeviationNominal=fmDeviationNominal, rsXx9FmConformance=rsXx9FmConformance, fmMPxPowerThreshold=fmMPxPowerThreshold, fmAfSetupOffTime=fmAfSetupOffTime, fmAfSetupNominalLevel=fmAfSetupNominalLevel, fmPreemphasisValue=fmPreemphasisValue, fmMPxPowerControlOperationMode=fmMPxPowerControlOperationMode, fmSyncEntry=fmSyncEntry, fmAfRight=fmAfRight, fmNotifyInput=fmNotifyInput, fmLimiterThreshold=fmLimiterThreshold, fmInputStatus=fmInputStatus, fmDataSetupThresholdPercent=fmDataSetupThresholdPercent, fmPreemphasisTable=fmPreemphasisTable, fmAesSetupNominalLevel=fmAesSetupNominalLevel, fmAesStateSampleRate=fmAesStateSampleRate, fmAfSetupImpedance=fmAfSetupImpedance, fmDataSetupNominalLevel=fmDataSetupNominalLevel, fmAudioInputSecondary=fmAudioInputSecondary, fmAfStateLeftCurrentLevel=fmAfStateLeftCurrentLevel, fmDataInputSetupEntry=fmDataInputSetupEntry, rsXx9FmGroups=rsXx9FmGroups, fmInpStNotificationIdx=fmInpStNotificationIdx, fmLimiterActivity=fmLimiterActivity, FmSoundMode=FmSoundMode, fmInpGenSetupMpxMode=fmInpGenSetupMpxMode, fmInpStNotificationEntry=fmInpStNotificationEntry, fmInpStNotificationMask=fmInpStNotificationMask, fmObjInput=fmObjInput, fmInput=fmInput, fmMpxSetupOffTime=fmMpxSetupOffTime, fmPreemphasisEntry=fmPreemphasisEntry, fmObjBasic=fmObjBasic, fmAesStateRightCurrentLevelPercent=fmAesStateRightCurrentLevelPercent, fmAesLeft=fmAesLeft, fmAesStateAudio=fmAesStateAudio, fmInpGenSetupInputMonitoring=fmInpGenSetupInputMonitoring, fmInpGenSetupReserveSource=fmInpGenSetupReserveSource, fmAfStateRightCurrentLevel=fmAfStateRightCurrentLevel, fmMpxAuxStateTable=fmMpxAuxStateTable, fmInpGenSetupMainSource=fmInpGenSetupMainSource, fmInpGenSetupMainSoundMode=fmInpGenSetupMainSoundMode, fmInpStNotificationPriority=fmInpStNotificationPriority, fmPilotTable=fmPilotTable, fmDeviationTable=fmDeviationTable, fmMpxSetupInpIdx=fmMpxSetupInpIdx, fmSyncPilotSyncSource=fmSyncPilotSyncSource, fmDeviationClipped=fmDeviationClipped, fmAfSetupOnTime=fmAfSetupOnTime, fmInputSetup=fmInputSetup, FmPilotSyncSource=FmPilotSyncSource, rsXx9FmObjects=rsXx9FmObjects, fmMPxPowerCurrent=fmMPxPowerCurrent, fmAesSetupOnTime=fmAesSetupOnTime, fmAesStateClock=fmAesStateClock, fmDataSetupLabel=fmDataSetupLabel, fmInpStNotificationTable=fmInpStNotificationTable, fmDigitalAudioStateTable=fmDigitalAudioStateTable, fmDigitalAudioStateEntry=fmDigitalAudioStateEntry, fmMpxAux2StateCurrentLevelPercent=fmMpxAux2StateCurrentLevelPercent, fmPilotDeviation=fmPilotDeviation, fmMpxSetupOnTime=fmMpxSetupOnTime, fmMpxSetupThresholdPercent=fmMpxSetupThresholdPercent, fmPilotEntry=fmPilotEntry, fmInpStNotificationState=fmInpStNotificationState, fmDigitalAudioSetupTable=fmDigitalAudioSetupTable, fmInputGeneralSetupTable=fmInputGeneralSetupTable, fmAfSetupThreshold=fmAfSetupThreshold, fmSyncTable=fmSyncTable, fmLimiterOperationMode=fmLimiterOperationMode, rsXx9FmCompliances=rsXx9FmCompliances, fmAfStateEntry=fmAfStateEntry, fmAesSetupOffTime=fmAesSetupOffTime, fmPilotTxIdx=fmPilotTxIdx, rsXx9FmNotifications=rsXx9FmNotifications)
