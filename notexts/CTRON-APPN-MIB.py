#
# PySNMP MIB module CTRON-APPN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-APPN-MIB
# Produced by pysmi-1.1.12 at Wed Sep 18 06:45:17 2024
# On host fv-az1780-151 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
nwRtrProtoSuites, = mibBuilder.importSymbols("ROUTER-OIDS", "nwRtrProtoSuites")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter32, IpAddress, TimeTicks, ObjectIdentity, Integer32, MibIdentifier, Gauge32, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "IpAddress", "TimeTicks", "ObjectIdentity", "Integer32", "MibIdentifier", "Gauge32", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nwAppnRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5))
nwAppnMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 1))
nwAppnComponents = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2))
nwAppnSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1))
nwAppnForwarding = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2))
nwAppnTopology = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4))
nwAppnFib = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 5))
nwAppnEndSystems = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 6))
nwAppnAccessControl = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 7))
nwAppnFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 8))
nwAppnRedirector = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 9))
nwAppnEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10))
nwAppnWorkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 11))
nwAppnSysConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1))
nwAppnSysAdministration = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 2))
nwAppnSysCfgLocalNode = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2))
nwAppnSysCfgTables = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 3))
nwAppnFwdSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1))
nwAppnFwdInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2))
nwAppnFwdLinks = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3))
nwAppnFwdCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1))
nwAppnFwdIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1))
nwAppnIfCn = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3))
nwAppnFwdIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2))
nwAppnFwdLsConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1))
nwAppnFwdLsCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2))
nwAppnDistanceVector = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 1))
nwAppnLinkState = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2))
nwAppnIsr = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1))
nwAppnIsrSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 1))
nwAppnIsrInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 2))
nwAppnIsrDatabase = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 3))
nwAppnIsrFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 4))
nwAppnIsrConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 1, 1))
nwAppnIsrCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 1, 2))
nwAppnIsrIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 2, 1))
nwAppnIsrIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 2, 2))
nwAppnHostsSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 6, 1))
nwAppnHostsInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 6, 2))
nwAppnEventLogConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 1))
nwAppnEventLogFilterTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 2))
nwAppnEventLogTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 3))
nwAppnMibRevText = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnMibRevText.setStatus('mandatory')
nwAppnSysRouterId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysRouterId.setStatus('mandatory')
nwAppnSysNodeType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("networknode", 1))).clone('networknode')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnSysNodeType.setStatus('mandatory')
nwAppnSysCpAlias = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysCpAlias.setStatus('mandatory')
nwAppnSysModeCosMap = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysModeCosMap.setStatus('mandatory')
nwAppnSysMdsSupport = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysMdsSupport.setStatus('mandatory')
nwAppnSysMaxLocates = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysMaxLocates.setStatus('mandatory')
nwAppnSysDirCacheSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysDirCacheSize.setStatus('mandatory')
nwAppnSysMaxDirEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysMaxDirEntries.setStatus('mandatory')
nwAppnSysLocateTimeout = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysLocateTimeout.setStatus('mandatory')
nwAppnSysRegCds = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysRegCds.setStatus('mandatory')
nwAppnSysMdsSendQSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysMdsSendQSize.setStatus('mandatory')
nwAppnSysCosSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysCosSize.setStatus('mandatory')
nwAppnSysTreeSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysTreeSize.setStatus('mandatory')
nwAppnSysTreeUseLimit = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysTreeUseLimit.setStatus('mandatory')
nwAppnSysMaxTdmNodes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysMaxTdmNodes.setStatus('mandatory')
nwAppnSysMaxTdmTGs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysMaxTdmTGs.setStatus('mandatory')
nwAppnSysMaxIsrSessions = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysMaxIsrSessions.setStatus('mandatory')
nwAppnSysIsrUpperThresh = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(900)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysIsrUpperThresh.setStatus('mandatory')
nwAppnSysIsrLowerThresh = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysIsrLowerThresh.setStatus('mandatory')
nwAppnSysIsrMaxRuSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysIsrMaxRuSize.setStatus('mandatory')
nwAppnSysIsrRcvPaceWind = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysIsrRcvPaceWind.setStatus('mandatory')
nwAppnSysRtAddResist = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysRtAddResist.setStatus('mandatory')
nwAppnSysStopType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("abort", 1), ("immediate", 2), ("quiesce", 3), ("quiesceIsr", 4))).clone('quiesceIsr')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysStopType.setStatus('mandatory')
nwAppnSysBlockNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysBlockNum.setStatus('mandatory')
nwAppnSysIdNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 2, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysIdNum.setStatus('mandatory')
nwAppnSysLuTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 3, 1), )
if mibBuilder.loadTexts: nwAppnSysLuTable.setStatus('mandatory')
nwAppnSysLuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 3, 1, 1), ).setIndexNames((0, "CTRON-APPN-MIB", "nwAppnSysCpName"), (0, "CTRON-APPN-MIB", "nwAppnSysLuName"))
if mibBuilder.loadTexts: nwAppnSysLuEntry.setStatus('mandatory')
nwAppnSysCpName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysCpName.setStatus('mandatory')
nwAppnSysLuName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysLuName.setStatus('mandatory')
nwAppnSysLuControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("other", 1), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysLuControl.setStatus('mandatory')
nwAppnSysAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysAdminStatus.setStatus('mandatory')
nwAppnSysOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pendingDisable", 4), ("pendingEnable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnSysOperStatus.setStatus('mandatory')
nwAppnSysAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnSysAdminReset.setStatus('mandatory')
nwAppnSysOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 2, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnSysOperationalTime.setStatus('mandatory')
nwAppnSysVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 1, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnSysVersion.setStatus('mandatory')
nwAppnFwdCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdCtrAdminStatus.setStatus('mandatory')
nwAppnFwdCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdCtrReset.setStatus('mandatory')
nwAppnFwdCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrOperationalTime.setStatus('mandatory')
nwAppnFwdCtrInMus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrInMus.setStatus('mandatory')
nwAppnFwdCtrOutMus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrOutMus.setStatus('mandatory')
nwAppnFwdCtrFwdMus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrFwdMus.setStatus('mandatory')
nwAppnFwdCtrFilteredMus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrFilteredMus.setStatus('mandatory')
nwAppnFwdCtrDiscardMus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrDiscardMus.setStatus('mandatory')
nwAppnFwdCtrAddrErrMus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrAddrErrMus.setStatus('mandatory')
nwAppnFwdCtrLenErrMus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrLenErrMus.setStatus('mandatory')
nwAppnFwdCtrHdrErrMus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrHdrErrMus.setStatus('mandatory')
nwAppnFwdCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrInBytes.setStatus('mandatory')
nwAppnFwdCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrOutBytes.setStatus('mandatory')
nwAppnFwdCtrFwdBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrFwdBytes.setStatus('mandatory')
nwAppnFwdCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrFilteredBytes.setStatus('mandatory')
nwAppnFwdCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrDiscardBytes.setStatus('mandatory')
nwAppnFwdCtrHostInMus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrHostInMus.setStatus('mandatory')
nwAppnFwdCtrHostOutMus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrHostOutMus.setStatus('mandatory')
nwAppnFwdCtrHostDiscardMus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrHostDiscardMus.setStatus('mandatory')
nwAppnFwdCtrHostInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrHostInBytes.setStatus('mandatory')
nwAppnFwdCtrHostOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrHostOutBytes.setStatus('mandatory')
nwAppnFwdCtrHostDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdCtrHostDiscardBytes.setStatus('mandatory')
nwAppnFwdIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1), )
if mibBuilder.loadTexts: nwAppnFwdIfTable.setStatus('mandatory')
nwAppnFwdIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-APPN-MIB", "nwAppnFwdIfIndex"))
if mibBuilder.loadTexts: nwAppnFwdIfEntry.setStatus('mandatory')
nwAppnFwdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfIndex.setStatus('mandatory')
nwAppnFwdIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdIfAdminStatus.setStatus('mandatory')
nwAppnFwdIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pendingDisable", 4), ("pendingEnable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfOperStatus.setStatus('mandatory')
nwAppnFwdIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfOperationalTime.setStatus('mandatory')
nwAppnFwdIfControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("other", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdIfControl.setStatus('mandatory')
nwAppnFwdIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdIfMtu.setStatus('mandatory')
nwAppnFwdIfForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdIfForwarding.setStatus('mandatory')
nwAppnFwdIfFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("i8022", 4), ("sync", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdIfFrameType.setStatus('mandatory')
nwAppnFwdIfAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdIfAclIdentifier.setStatus('mandatory')
nwAppnFwdIfAclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdIfAclStatus.setStatus('mandatory')
nwAppnFwdIfCacheControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdIfCacheControl.setStatus('mandatory')
nwAppnFwdIfCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCacheEntries.setStatus('mandatory')
nwAppnFwdIfCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCacheHits.setStatus('mandatory')
nwAppnFwdIfCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCacheMisses.setStatus('mandatory')
nwAppnExtensionTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2), )
if mibBuilder.loadTexts: nwAppnExtensionTable.setStatus('mandatory')
nwAppnExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1), ).setIndexNames((0, "CTRON-APPN-MIB", "nwAppnExtIfIndex"))
if mibBuilder.loadTexts: nwAppnExtEntry.setStatus('mandatory')
nwAppnExtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnExtIfIndex.setStatus('mandatory')
nwAppnExtIfPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnExtIfPortName.setStatus('mandatory')
nwAppnExtIfPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nonswitched", 1), ("switched", 2), ("satf", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfPortType.setStatus('mandatory')
nwAppnExtIfDlcType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("llc2", 1), ("sdlc", 2), ("x25", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnExtIfDlcType.setStatus('mandatory')
nwAppnExtIfMaxRBtuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(99, 65535)).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfMaxRBtuSize.setStatus('mandatory')
nwAppnExtIfTotLsActLim = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfTotLsActLim.setStatus('mandatory')
nwAppnExtIfInbLsActLim = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfInbLsActLim.setStatus('mandatory')
nwAppnExtIfOutbLsActLim = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfOutbLsActLim.setStatus('mandatory')
nwAppnExtIfLocalLsRole = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("negotiable", 1), ("primary", 2), ("secondary", 3))).clone('negotiable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfLocalLsRole.setStatus('mandatory')
nwAppnExtIfActXidXchgLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfActXidXchgLimit.setStatus('mandatory')
nwAppnExtIfNonActXidXchgLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfNonActXidXchgLimit.setStatus('mandatory')
nwAppnExtIfLsXmitRcvCap = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("twowaysimultaneous", 1), ("twowayalternating", 2))).clone('twowaysimultaneous')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfLsXmitRcvCap.setStatus('mandatory')
nwAppnExtIfMaxIfrmRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfMaxIfrmRcvd.setStatus('mandatory')
nwAppnExtIfDfltTargetPacing = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfDfltTargetPacing.setStatus('mandatory')
nwAppnExtIfDfltMaxSBtuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(99, 65535)).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfDfltMaxSBtuSize.setStatus('mandatory')
nwAppnExtIfDfltEffectCap = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 603979776))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfDfltEffectCap.setStatus('mandatory')
nwAppnExtIfDfltConnectCost = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfDfltConnectCost.setStatus('mandatory')
nwAppnExtIfDfltByteCost = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfDfltByteCost.setStatus('mandatory')
nwAppnExtIfDfltSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 32, 64, 96, 128, 160, 192))).clone(namedValues=NamedValues(("nonsecure", 1), ("publicSwitchNw", 32), ("undergroundCable", 64), ("secureConduit", 96), ("guardedConduit", 128), ("encrypted", 160), ("guardedRadiation", 192)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfDfltSecurity.setStatus('mandatory')
nwAppnExtIfDfltPropDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 384, 9216, 147456, 294912, 2013265920))).clone(namedValues=NamedValues(("minimum", 0), ("negligible", 384), ("terrestrial", 9216), ("packetswitched", 147456), ("long", 294912), ("maximum", 2013265920)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfDfltPropDelay.setStatus('mandatory')
nwAppnExtIfDfltUsrDef1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfDfltUsrDef1.setStatus('mandatory')
nwAppnExtIfDfltUsrDef2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfDfltUsrDef2.setStatus('mandatory')
nwAppnExtIfDfltUsrDef3 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfDfltUsrDef3.setStatus('mandatory')
nwAppnExtIfStopType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("immediate", 1), ("orderly", 2))).clone('orderly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfStopType.setStatus('mandatory')
nwAppnExtIfCpCpSupp = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfCpCpSupp.setStatus('mandatory')
nwAppnExtIfLimitedRsrc = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfLimitedRsrc.setStatus('mandatory')
nwAppnExtIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 28), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnExtIfAddress.setStatus('mandatory')
nwAppnExtIfSsap = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 2, 1, 29), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="04")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnExtIfSsap.setStatus('mandatory')
nwAppnIfCnPortTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 1), )
if mibBuilder.loadTexts: nwAppnIfCnPortTable.setStatus('mandatory')
nwAppnIfCnPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 1, 1), ).setIndexNames((0, "CTRON-APPN-MIB", "nwAppnIfCnPtFqName"), (0, "CTRON-APPN-MIB", "nwAppnIfCnPtName"))
if mibBuilder.loadTexts: nwAppnIfCnPortEntry.setStatus('mandatory')
nwAppnIfCnPtFqName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnPtFqName.setStatus('mandatory')
nwAppnIfCnPtName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnPtName.setStatus('mandatory')
nwAppnIfCnPtControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("other", 1), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnPtControl.setStatus('mandatory')
nwAppnIfCnTgCharTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 2), )
if mibBuilder.loadTexts: nwAppnIfCnTgCharTable.setStatus('mandatory')
nwAppnIfCnTgCharEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 2, 1), ).setIndexNames((0, "CTRON-APPN-MIB", "nwAppnIfCnTgFqName"))
if mibBuilder.loadTexts: nwAppnIfCnTgCharEntry.setStatus('mandatory')
nwAppnIfCnTgFqName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnTgFqName.setStatus('mandatory')
nwAppnIfCnTgEffectCap = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 603979776))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnTgEffectCap.setStatus('mandatory')
nwAppnIfCnTgConnectCost = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnTgConnectCost.setStatus('mandatory')
nwAppnIfCnTgByteCost = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnTgByteCost.setStatus('mandatory')
nwAppnIfCnTgSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 32, 64, 96, 128, 160, 192))).clone(namedValues=NamedValues(("nonsecure", 1), ("publicSwitchNw", 32), ("undergroundCable", 64), ("secureConduit", 96), ("guardedConduit", 128), ("encrypted", 160), ("guardedRadiation", 192)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnTgSecurity.setStatus('mandatory')
nwAppnIfCnTgPropDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 384, 9216, 147456, 294912, 2013265920))).clone(namedValues=NamedValues(("minimum", 0), ("negligible", 384), ("terrestrial", 9216), ("packetswitched", 147456), ("long", 294912), ("maximum", 2013265920)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnTgPropDelay.setStatus('mandatory')
nwAppnIfCnTgUsrDef1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnTgUsrDef1.setStatus('mandatory')
nwAppnIfCnTgUsrDef2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnTgUsrDef2.setStatus('mandatory')
nwAppnIfCnTgUsrDef3 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIfCnTgUsrDef3.setStatus('mandatory')
nwAppnFwdIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1), )
if mibBuilder.loadTexts: nwAppnFwdIfCtrTable.setStatus('mandatory')
nwAppnFwdIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-APPN-MIB", "nwAppnFwdIfCtrIfIndex"))
if mibBuilder.loadTexts: nwAppnFwdIfCtrEntry.setStatus('mandatory')
nwAppnFwdIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrIfIndex.setStatus('mandatory')
nwAppnFwdIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdIfCtrAdminStatus.setStatus('mandatory')
nwAppnFwdIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdIfCtrReset.setStatus('mandatory')
nwAppnFwdIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrOperationalTime.setStatus('mandatory')
nwAppnFwdIfCtrInMus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrInMus.setStatus('mandatory')
nwAppnFwdIfCtrOutMus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrOutMus.setStatus('mandatory')
nwAppnFwdIfCtrFwdMus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrFwdMus.setStatus('mandatory')
nwAppnFwdIfCtrFilteredMus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrFilteredMus.setStatus('mandatory')
nwAppnFwdIfCtrDiscardMus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrDiscardMus.setStatus('mandatory')
nwAppnFwdIfCtrAddrErrMus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrAddrErrMus.setStatus('mandatory')
nwAppnFwdIfCtrLenErrMus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrLenErrMus.setStatus('mandatory')
nwAppnFwdIfCtrHdrErrMus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrHdrErrMus.setStatus('mandatory')
nwAppnFwdIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrInBytes.setStatus('mandatory')
nwAppnFwdIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrOutBytes.setStatus('mandatory')
nwAppnFwdIfCtrFwdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrFwdBytes.setStatus('mandatory')
nwAppnFwdIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrFilteredBytes.setStatus('mandatory')
nwAppnFwdIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrDiscardBytes.setStatus('mandatory')
nwAppnFwdIfCtrHostInMus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrHostInMus.setStatus('mandatory')
nwAppnFwdIfCtrHostOutMus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrHostOutMus.setStatus('mandatory')
nwAppnFwdIfCtrHostDiscardMus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrHostDiscardMus.setStatus('mandatory')
nwAppnFwdIfCtrHostInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrHostInBytes.setStatus('mandatory')
nwAppnFwdIfCtrHostOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrHostOutBytes.setStatus('mandatory')
nwAppnFwdIfCtrHostDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 2, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdIfCtrHostDiscardBytes.setStatus('mandatory')
nwAppnFwdLsTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1), )
if mibBuilder.loadTexts: nwAppnFwdLsTable.setStatus('mandatory')
nwAppnFwdLsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1), ).setIndexNames((0, "CTRON-APPN-MIB", "nwAppnFwdLsName"))
if mibBuilder.loadTexts: nwAppnFwdLsEntry.setStatus('mandatory')
nwAppnFwdLsName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsName.setStatus('mandatory')
nwAppnFwdLsAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsAdminStatus.setStatus('mandatory')
nwAppnFwdLsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pendingDisable", 4), ("pendingEnable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsOperStatus.setStatus('mandatory')
nwAppnFwdLsOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsOperationalTime.setStatus('mandatory')
nwAppnFwdLsControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("other", 1), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsControl.setStatus('mandatory')
nwAppnFwdLsPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsPortName.setStatus('mandatory')
nwAppnFwdLsAdjCpName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsAdjCpName.setStatus('mandatory')
nwAppnFwdLsAdjCpType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("endnode", 1), ("networknode", 2))).clone('endnode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsAdjCpType.setStatus('mandatory')
nwAppnFwdLsAutoActSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsAutoActSupport.setStatus('mandatory')
nwAppnFwdLsLimitedRsrc = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsLimitedRsrc.setStatus('mandatory')
nwAppnFwdLsSscpSession = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsSscpSession.setStatus('mandatory')
nwAppnFwdLsPuName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsPuName.setStatus('mandatory')
nwAppnFwdLsBackLvlLenEN = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("no", 1), ("xid3", 2), ("xid0", 3), ("noxid", 4))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsBackLvlLenEN.setStatus('mandatory')
nwAppnFwdLsCpCpSessSupp = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsCpCpSessSupp.setStatus('mandatory')
nwAppnFwdLsEffectCap = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 603979776))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsEffectCap.setStatus('mandatory')
nwAppnFwdLsConnectCost = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsConnectCost.setStatus('mandatory')
nwAppnFwdLsByteCost = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsByteCost.setStatus('mandatory')
nwAppnFwdLsSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 32, 64, 96, 128, 160, 192))).clone(namedValues=NamedValues(("nonsecure", 1), ("publicSwitchNw", 32), ("undergroundCable", 64), ("secureConduit", 96), ("guardedConduit", 128), ("encrypted", 160), ("guardedRadiation", 192)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsSecurity.setStatus('mandatory')
nwAppnFwdLsPropDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 384, 9216, 147456, 294912, 2013265920))).clone(namedValues=NamedValues(("minimum", 0), ("negligible", 384), ("terrestrial", 9216), ("packetswitched", 147456), ("long", 294912), ("maximum", 2013265920)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsPropDelay.setStatus('mandatory')
nwAppnFwdLsUsrDef1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsUsrDef1.setStatus('mandatory')
nwAppnFwdLsUsrDef2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsUsrDef2.setStatus('mandatory')
nwAppnFwdLsUsrDef3 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsUsrDef3.setStatus('mandatory')
nwAppnFwdLsTrgtPacingCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsTrgtPacingCount.setStatus('mandatory')
nwAppnFwdLsMaxSendBtu = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(99, 65535)).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsMaxSendBtu.setStatus('mandatory')
nwAppnFwdLsNumActiveSession = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsNumActiveSession.setStatus('mandatory')
nwAppnFwdLsdynamicLs = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsdynamicLs.setStatus('mandatory')
nwAppnFwdLsStopType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("immediate", 1), ("orderly", 2))).clone('orderly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsStopType.setStatus('mandatory')
nwAppnFwdLsPortNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsPortNbr.setStatus('mandatory')
nwAppnFwdLsDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsDestAddr.setStatus('mandatory')
nwAppnFwdLsDsap = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="04")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsDsap.setStatus('mandatory')
nwAppnFwdLsBlockNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsBlockNum.setStatus('mandatory')
nwAppnFwdLsIdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 1, 1, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsIdNum.setStatus('mandatory')
nwAppnFwdLsCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1), )
if mibBuilder.loadTexts: nwAppnFwdLsCtrTable.setStatus('mandatory')
nwAppnFwdLsCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1), ).setIndexNames((0, "CTRON-APPN-MIB", "nwAppnFwdLsCtrLsName"))
if mibBuilder.loadTexts: nwAppnFwdLsCtrEntry.setStatus('mandatory')
nwAppnFwdLsCtrLsName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrLsName.setStatus('mandatory')
nwAppnFwdLsCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsCtrAdminStatus.setStatus('mandatory')
nwAppnFwdLsCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnFwdLsCtrReset.setStatus('mandatory')
nwAppnFwdLsCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrOperationalTime.setStatus('mandatory')
nwAppnFwdLsCtrInBlus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrInBlus.setStatus('mandatory')
nwAppnFwdLsCtrOutBlus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrOutBlus.setStatus('mandatory')
nwAppnFwdLsCtrFwdBlus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrFwdBlus.setStatus('mandatory')
nwAppnFwdLsCtrFilteredBlus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrFilteredBlus.setStatus('mandatory')
nwAppnFwdLsCtrDiscardBlus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrDiscardBlus.setStatus('mandatory')
nwAppnFwdLsCtrAddrErrBlus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrAddrErrBlus.setStatus('mandatory')
nwAppnFwdLsCtrLenErrBlus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrLenErrBlus.setStatus('mandatory')
nwAppnFwdLsCtrHdrErrBlus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrHdrErrBlus.setStatus('mandatory')
nwAppnFwdLsCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrInBytes.setStatus('mandatory')
nwAppnFwdLsCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrOutBytes.setStatus('mandatory')
nwAppnFwdLsCtrFwdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrFwdBytes.setStatus('mandatory')
nwAppnFwdLsCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrFilteredBytes.setStatus('mandatory')
nwAppnFwdLsCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrDiscardBytes.setStatus('mandatory')
nwAppnFwdLsCtrHostInBlus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrHostInBlus.setStatus('mandatory')
nwAppnFwdLsCtrHostOutBlus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrHostOutBlus.setStatus('mandatory')
nwAppnFwdLsCtrHostDiscardBlus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrHostDiscardBlus.setStatus('mandatory')
nwAppnFwdLsCtrHostInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrHostInBytes.setStatus('mandatory')
nwAppnFwdLsCtrHostOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrHostOutBytes.setStatus('mandatory')
nwAppnFwdLsCtrHostDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 2, 3, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnFwdLsCtrHostDiscardBytes.setStatus('mandatory')
nwAppnIsrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnIsrAdminStatus.setStatus('mandatory')
nwAppnIsrOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pendingDisable", 4), ("pendingEnable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnIsrOperStatus.setStatus('mandatory')
nwAppnIsrAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("other", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnIsrAdminReset.setStatus('mandatory')
nwAppnIsrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnIsrOperationalTime.setStatus('mandatory')
nwAppnIsrVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 4, 2, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnIsrVersion.setStatus('mandatory')
nwAppnEventAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnEventAdminStatus.setStatus('mandatory')
nwAppnEventMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnEventMaxEntries.setStatus('mandatory')
nwAppnEventTraceAll = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnEventTraceAll.setStatus('mandatory')
nwAppnEventFilterTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 2, 1), )
if mibBuilder.loadTexts: nwAppnEventFilterTable.setStatus('mandatory')
nwAppnEventFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 2, 1, 1), ).setIndexNames((0, "CTRON-APPN-MIB", "nwAppnEventFltrProtocol"), (0, "CTRON-APPN-MIB", "nwAppnEventFltrIfNum"))
if mibBuilder.loadTexts: nwAppnEventFilterEntry.setStatus('mandatory')
nwAppnEventFltrProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnEventFltrProtocol.setStatus('mandatory')
nwAppnEventFltrIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnEventFltrIfNum.setStatus('mandatory')
nwAppnEventFltrControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("delete", 2), ("add", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnEventFltrControl.setStatus('mandatory')
nwAppnEventFltrType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("misc", 1), ("timer", 2), ("rcv", 4), ("xmit", 8), ("event", 16), ("error", 32)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnEventFltrType.setStatus('mandatory')
nwAppnEventFltrSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("highest", 1), ("highmed", 2), ("highlow", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnEventFltrSeverity.setStatus('mandatory')
nwAppnEventFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("log", 1), ("trap", 2), ("logTrap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwAppnEventFltrAction.setStatus('mandatory')
nwAppnEventTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 3, 1), )
if mibBuilder.loadTexts: nwAppnEventTable.setStatus('mandatory')
nwAppnEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 3, 1, 1), ).setIndexNames((0, "CTRON-APPN-MIB", "nwAppnEventNumber"))
if mibBuilder.loadTexts: nwAppnEventEntry.setStatus('mandatory')
nwAppnEventNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnEventNumber.setStatus('mandatory')
nwAppnEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 3, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnEventTime.setStatus('mandatory')
nwAppnEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64))).clone(namedValues=NamedValues(("misc", 1), ("timer", 2), ("rcv", 4), ("xmit", 8), ("event", 16), ("diags", 32), ("error", 64)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnEventType.setStatus('mandatory')
nwAppnEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("highest", 1), ("highmed", 2), ("highlow", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnEventSeverity.setStatus('mandatory')
nwAppnEventProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnEventProtocol.setStatus('mandatory')
nwAppnEventIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnEventIfNum.setStatus('mandatory')
nwAppnEventTextString = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 5, 2, 10, 3, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwAppnEventTextString.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-APPN-MIB", nwAppnEndSystems=nwAppnEndSystems, nwAppnIsrInterfaces=nwAppnIsrInterfaces, nwAppnFwdLsLimitedRsrc=nwAppnFwdLsLimitedRsrc, nwAppnFwdCtrAddrErrMus=nwAppnFwdCtrAddrErrMus, nwAppnSysIsrMaxRuSize=nwAppnSysIsrMaxRuSize, nwAppnSysModeCosMap=nwAppnSysModeCosMap, nwAppnFwdLsCtrHostInBytes=nwAppnFwdLsCtrHostInBytes, nwAppnFwdLsAdjCpName=nwAppnFwdLsAdjCpName, nwAppnFib=nwAppnFib, nwAppnSysIdNum=nwAppnSysIdNum, nwAppnFwdIfCtrAddrErrMus=nwAppnFwdIfCtrAddrErrMus, nwAppnExtIfNonActXidXchgLimit=nwAppnExtIfNonActXidXchgLimit, nwAppnFwdIfCtrDiscardBytes=nwAppnFwdIfCtrDiscardBytes, nwAppnFwdLsOperStatus=nwAppnFwdLsOperStatus, nwAppnFwdLsCtrHdrErrBlus=nwAppnFwdLsCtrHdrErrBlus, nwAppnDistanceVector=nwAppnDistanceVector, nwAppnSysMaxDirEntries=nwAppnSysMaxDirEntries, nwAppnIfCnPtControl=nwAppnIfCnPtControl, nwAppnFwdLsCtrLenErrBlus=nwAppnFwdLsCtrLenErrBlus, nwAppnSysLuName=nwAppnSysLuName, nwAppnIfCnTgPropDelay=nwAppnIfCnTgPropDelay, nwAppnFwdLsPortNbr=nwAppnFwdLsPortNbr, nwAppnSysVersion=nwAppnSysVersion, nwAppnExtIfDfltByteCost=nwAppnExtIfDfltByteCost, nwAppnExtIfAddress=nwAppnExtIfAddress, nwAppnFwdIfCtrHostOutBytes=nwAppnFwdIfCtrHostOutBytes, nwAppnMibRevText=nwAppnMibRevText, nwAppnEventFltrType=nwAppnEventFltrType, nwAppnFwdIfCtrHostInBytes=nwAppnFwdIfCtrHostInBytes, nwAppnFwdIfCtrOutBytes=nwAppnFwdIfCtrOutBytes, nwAppnLinkState=nwAppnLinkState, nwAppnEventFilterEntry=nwAppnEventFilterEntry, nwAppnFwdLsSscpSession=nwAppnFwdLsSscpSession, nwAppnEventFltrSeverity=nwAppnEventFltrSeverity, nwAppnFwdIfFrameType=nwAppnFwdIfFrameType, nwAppnSysStopType=nwAppnSysStopType, nwAppnSysCpName=nwAppnSysCpName, nwAppnFwdIfControl=nwAppnFwdIfControl, nwAppnExtIfDfltConnectCost=nwAppnExtIfDfltConnectCost, nwAppnFwdCtrHostOutBytes=nwAppnFwdCtrHostOutBytes, nwAppnFwdIfCtrEntry=nwAppnFwdIfCtrEntry, nwAppnFwdLsCtrAdminStatus=nwAppnFwdLsCtrAdminStatus, nwAppnExtIfDfltSecurity=nwAppnExtIfDfltSecurity, nwAppnSysMaxLocates=nwAppnSysMaxLocates, nwAppnFwdCtrFilteredMus=nwAppnFwdCtrFilteredMus, nwAppnIsrIfCounters=nwAppnIsrIfCounters, nwAppnFwdLsCtrLsName=nwAppnFwdLsCtrLsName, nwAppnSysAdminStatus=nwAppnSysAdminStatus, nwAppnIsrSystem=nwAppnIsrSystem, nwAppnFwdCtrOutBytes=nwAppnFwdCtrOutBytes, nwAppnSysDirCacheSize=nwAppnSysDirCacheSize, nwAppnIsrOperationalTime=nwAppnIsrOperationalTime, nwAppnIsrCounters=nwAppnIsrCounters, nwAppnFwdIfCtrIfIndex=nwAppnFwdIfCtrIfIndex, nwAppnExtIfLocalLsRole=nwAppnExtIfLocalLsRole, nwAppnExtIfLsXmitRcvCap=nwAppnExtIfLsXmitRcvCap, nwAppnSysOperationalTime=nwAppnSysOperationalTime, nwAppnIfCnTgUsrDef2=nwAppnIfCnTgUsrDef2, nwAppnFwdIfCtrHostOutMus=nwAppnFwdIfCtrHostOutMus, nwAppnFwdIfCounters=nwAppnFwdIfCounters, nwAppnFwdCtrFwdMus=nwAppnFwdCtrFwdMus, nwAppnFwdIfCtrFwdBytes=nwAppnFwdIfCtrFwdBytes, nwAppnFwdLsUsrDef1=nwAppnFwdLsUsrDef1, nwAppnSysLuControl=nwAppnSysLuControl, nwAppnFwdIfCtrReset=nwAppnFwdIfCtrReset, nwAppnIfCnTgFqName=nwAppnIfCnTgFqName, nwAppnFwdIfCtrLenErrMus=nwAppnFwdIfCtrLenErrMus, nwAppnFwdIfCtrInMus=nwAppnFwdIfCtrInMus, nwAppnHostsSystem=nwAppnHostsSystem, nwAppnSysRegCds=nwAppnSysRegCds, nwAppnFwdLsStopType=nwAppnFwdLsStopType, nwAppnEventEntry=nwAppnEventEntry, nwAppnFwdIfCtrHostDiscardMus=nwAppnFwdIfCtrHostDiscardMus, nwAppnExtIfDfltUsrDef1=nwAppnExtIfDfltUsrDef1, nwAppnExtIfDfltPropDelay=nwAppnExtIfDfltPropDelay, nwAppnFwdLsEntry=nwAppnFwdLsEntry, nwAppnEventFltrAction=nwAppnEventFltrAction, nwAppnFwdLinks=nwAppnFwdLinks, nwAppnSysBlockNum=nwAppnSysBlockNum, nwAppnFwdLsCtrFilteredBytes=nwAppnFwdLsCtrFilteredBytes, nwAppnFwdCtrOutMus=nwAppnFwdCtrOutMus, nwAppnFwdLsPuName=nwAppnFwdLsPuName, nwAppnFwdCtrFwdBytes=nwAppnFwdCtrFwdBytes, nwAppnFwdLsMaxSendBtu=nwAppnFwdLsMaxSendBtu, nwAppnSysAdministration=nwAppnSysAdministration, nwAppnFwdLsCtrTable=nwAppnFwdLsCtrTable, nwAppnExtIfLimitedRsrc=nwAppnExtIfLimitedRsrc, nwAppnSysMaxTdmNodes=nwAppnSysMaxTdmNodes, nwAppnForwarding=nwAppnForwarding, nwAppnSysMdsSendQSize=nwAppnSysMdsSendQSize, nwAppnFwdSystem=nwAppnFwdSystem, nwAppnIsrAdminReset=nwAppnIsrAdminReset, nwAppnFwdCtrInBytes=nwAppnFwdCtrInBytes, nwAppnFwdIfCtrInBytes=nwAppnFwdIfCtrInBytes, nwAppnFwdLsCtrOutBlus=nwAppnFwdLsCtrOutBlus, nwAppnFwdIfCacheMisses=nwAppnFwdIfCacheMisses, nwAppnEventType=nwAppnEventType, nwAppnFwdLsCtrAddrErrBlus=nwAppnFwdLsCtrAddrErrBlus, nwAppnFwdIfOperStatus=nwAppnFwdIfOperStatus, nwAppnFwdLsCtrEntry=nwAppnFwdLsCtrEntry, nwAppnSysLocateTimeout=nwAppnSysLocateTimeout, nwAppnExtIfDfltUsrDef3=nwAppnExtIfDfltUsrDef3, nwAppnSysCfgLocalNode=nwAppnSysCfgLocalNode, nwAppnIsrDatabase=nwAppnIsrDatabase, nwAppnRouter=nwAppnRouter, nwAppnIfCnPortTable=nwAppnIfCnPortTable, nwAppnFwdIfCtrFilteredBytes=nwAppnFwdIfCtrFilteredBytes, nwAppnIfCnTgUsrDef1=nwAppnIfCnTgUsrDef1, nwAppnSysIsrUpperThresh=nwAppnSysIsrUpperThresh, nwAppnFwdLsIdNum=nwAppnFwdLsIdNum, nwAppnSysMdsSupport=nwAppnSysMdsSupport, nwAppnExtIfInbLsActLim=nwAppnExtIfInbLsActLim, nwAppnIsrOperStatus=nwAppnIsrOperStatus, nwAppnEventIfNum=nwAppnEventIfNum, nwAppnFwdLsCounters=nwAppnFwdLsCounters, nwAppnIfCnTgConnectCost=nwAppnIfCnTgConnectCost, nwAppnFwdCtrAdminStatus=nwAppnFwdCtrAdminStatus, nwAppnExtIfOutbLsActLim=nwAppnExtIfOutbLsActLim, nwAppnFwdLsBlockNum=nwAppnFwdLsBlockNum, nwAppnFwdLsCtrReset=nwAppnFwdLsCtrReset, nwAppnWorkGroup=nwAppnWorkGroup, nwAppnFwdLsCtrHostOutBytes=nwAppnFwdLsCtrHostOutBytes, nwAppnSysCpAlias=nwAppnSysCpAlias, nwAppnSysTreeSize=nwAppnSysTreeSize, nwAppnFwdLsByteCost=nwAppnFwdLsByteCost, nwAppnAccessControl=nwAppnAccessControl, nwAppnFwdIfCtrOperationalTime=nwAppnFwdIfCtrOperationalTime, nwAppnIsrVersion=nwAppnIsrVersion, nwAppnFwdCtrHostDiscardBytes=nwAppnFwdCtrHostDiscardBytes, nwAppnExtIfDfltEffectCap=nwAppnExtIfDfltEffectCap, nwAppnExtIfDlcType=nwAppnExtIfDlcType, nwAppnIfCnTgByteCost=nwAppnIfCnTgByteCost, nwAppnFwdLsConfig=nwAppnFwdLsConfig, nwAppnFwdLsPortName=nwAppnFwdLsPortName, nwAppnIfCnTgEffectCap=nwAppnIfCnTgEffectCap, nwAppnExtIfPortName=nwAppnExtIfPortName, nwAppnEventMaxEntries=nwAppnEventMaxEntries, nwAppnFwdCtrOperationalTime=nwAppnFwdCtrOperationalTime, nwAppnMibs=nwAppnMibs, nwAppnExtIfSsap=nwAppnExtIfSsap, nwAppnExtIfPortType=nwAppnExtIfPortType, nwAppnFwdIfConfig=nwAppnFwdIfConfig, nwAppnFwdIfTable=nwAppnFwdIfTable, nwAppnExtIfIndex=nwAppnExtIfIndex, nwAppnFwdCtrDiscardBytes=nwAppnFwdCtrDiscardBytes, nwAppnFwdIfCtrHdrErrMus=nwAppnFwdIfCtrHdrErrMus, nwAppnFwdLsCtrDiscardBytes=nwAppnFwdLsCtrDiscardBytes, nwAppnIsr=nwAppnIsr, nwAppnIsrIfConfig=nwAppnIsrIfConfig, nwAppnFwdLsCtrHostDiscardBytes=nwAppnFwdLsCtrHostDiscardBytes, nwAppnFwdCtrHostInMus=nwAppnFwdCtrHostInMus, nwAppnSysCosSize=nwAppnSysCosSize, nwAppnFwdLsOperationalTime=nwAppnFwdLsOperationalTime, nwAppnExtIfActXidXchgLimit=nwAppnExtIfActXidXchgLimit, nwAppnSysIsrRcvPaceWind=nwAppnSysIsrRcvPaceWind, nwAppnFwdLsEffectCap=nwAppnFwdLsEffectCap, nwAppnEventNumber=nwAppnEventNumber, nwAppnFwdCtrLenErrMus=nwAppnFwdCtrLenErrMus, nwAppnFwdIfAclStatus=nwAppnFwdIfAclStatus, nwAppnFwdLsTrgtPacingCount=nwAppnFwdLsTrgtPacingCount, nwAppnFwdLsUsrDef2=nwAppnFwdLsUsrDef2, nwAppnSysMaxIsrSessions=nwAppnSysMaxIsrSessions, nwAppnSysLuEntry=nwAppnSysLuEntry, nwAppnIfCnTgCharTable=nwAppnIfCnTgCharTable, nwAppnEvent=nwAppnEvent, nwAppnExtEntry=nwAppnExtEntry, nwAppnSysRtAddResist=nwAppnSysRtAddResist, nwAppnFwdLsCtrHostInBlus=nwAppnFwdLsCtrHostInBlus, nwAppnFwdIfForwarding=nwAppnFwdIfForwarding, nwAppnFwdInterfaces=nwAppnFwdInterfaces, nwAppnFwdLsConnectCost=nwAppnFwdLsConnectCost, nwAppnFilters=nwAppnFilters, nwAppnFwdIfIndex=nwAppnFwdIfIndex, nwAppnFwdIfAclIdentifier=nwAppnFwdIfAclIdentifier, nwAppnFwdIfMtu=nwAppnFwdIfMtu, nwAppnFwdIfCtrDiscardMus=nwAppnFwdIfCtrDiscardMus, nwAppnFwdCtrFilteredBytes=nwAppnFwdCtrFilteredBytes, nwAppnExtIfDfltUsrDef2=nwAppnExtIfDfltUsrDef2, nwAppnFwdLsPropDelay=nwAppnFwdLsPropDelay, nwAppnFwdLsUsrDef3=nwAppnFwdLsUsrDef3, nwAppnFwdLsCtrFwdBytes=nwAppnFwdLsCtrFwdBytes, nwAppnHostsInterfaces=nwAppnHostsInterfaces, nwAppnFwdLsCtrHostOutBlus=nwAppnFwdLsCtrHostOutBlus, nwAppnSysIsrLowerThresh=nwAppnSysIsrLowerThresh, nwAppnFwdLsCpCpSessSupp=nwAppnFwdLsCpCpSessSupp, nwAppnExtIfMaxIfrmRcvd=nwAppnExtIfMaxIfrmRcvd, nwAppnFwdLsAutoActSupport=nwAppnFwdLsAutoActSupport, nwAppnFwdLsCtrFwdBlus=nwAppnFwdLsCtrFwdBlus, nwAppnFwdIfCacheControl=nwAppnFwdIfCacheControl, nwAppnFwdLsCtrHostDiscardBlus=nwAppnFwdLsCtrHostDiscardBlus, nwAppnSystem=nwAppnSystem, nwAppnIfCn=nwAppnIfCn, nwAppnFwdCtrHostInBytes=nwAppnFwdCtrHostInBytes, nwAppnFwdLsSecurity=nwAppnFwdLsSecurity, nwAppnSysRouterId=nwAppnSysRouterId, nwAppnEventLogConfig=nwAppnEventLogConfig, nwAppnFwdCtrHostOutMus=nwAppnFwdCtrHostOutMus, nwAppnComponents=nwAppnComponents, nwAppnSysOperStatus=nwAppnSysOperStatus, nwAppnEventAdminStatus=nwAppnEventAdminStatus, nwAppnSysCfgTables=nwAppnSysCfgTables, nwAppnEventFltrProtocol=nwAppnEventFltrProtocol, nwAppnFwdIfAdminStatus=nwAppnFwdIfAdminStatus, nwAppnIfCnPtFqName=nwAppnIfCnPtFqName, nwAppnFwdIfCtrTable=nwAppnFwdIfCtrTable, nwAppnExtIfCpCpSupp=nwAppnExtIfCpCpSupp, nwAppnFwdLsCtrOutBytes=nwAppnFwdLsCtrOutBytes, nwAppnExtIfMaxRBtuSize=nwAppnExtIfMaxRBtuSize, nwAppnExtIfStopType=nwAppnExtIfStopType, nwAppnEventTime=nwAppnEventTime, nwAppnFwdLsCtrDiscardBlus=nwAppnFwdLsCtrDiscardBlus, nwAppnFwdLsCtrInBlus=nwAppnFwdLsCtrInBlus, nwAppnFwdCtrHostDiscardMus=nwAppnFwdCtrHostDiscardMus, nwAppnFwdIfCacheHits=nwAppnFwdIfCacheHits, nwAppnExtIfTotLsActLim=nwAppnExtIfTotLsActLim, nwAppnSysAdminReset=nwAppnSysAdminReset, nwAppnEventTextString=nwAppnEventTextString, nwAppnFwdLsAdminStatus=nwAppnFwdLsAdminStatus, nwAppnFwdLsName=nwAppnFwdLsName, nwAppnFwdCtrDiscardMus=nwAppnFwdCtrDiscardMus, nwAppnIfCnTgUsrDef3=nwAppnIfCnTgUsrDef3, nwAppnSysLuTable=nwAppnSysLuTable, nwAppnFwdLsCtrFilteredBlus=nwAppnFwdLsCtrFilteredBlus, nwAppnFwdLsCtrInBytes=nwAppnFwdLsCtrInBytes, nwAppnEventFltrIfNum=nwAppnEventFltrIfNum, nwAppnFwdIfEntry=nwAppnFwdIfEntry, nwAppnFwdIfOperationalTime=nwAppnFwdIfOperationalTime, nwAppnFwdIfCtrAdminStatus=nwAppnFwdIfCtrAdminStatus, nwAppnFwdCtrHdrErrMus=nwAppnFwdCtrHdrErrMus, nwAppnExtIfDfltTargetPacing=nwAppnExtIfDfltTargetPacing, nwAppnFwdIfCtrFwdMus=nwAppnFwdIfCtrFwdMus, nwAppnFwdLsTable=nwAppnFwdLsTable, nwAppnTopology=nwAppnTopology, nwAppnRedirector=nwAppnRedirector, nwAppnFwdCounters=nwAppnFwdCounters, nwAppnIfCnPortEntry=nwAppnIfCnPortEntry, nwAppnExtensionTable=nwAppnExtensionTable, nwAppnFwdLsCtrOperationalTime=nwAppnFwdLsCtrOperationalTime, nwAppnEventProtocol=nwAppnEventProtocol, nwAppnFwdCtrReset=nwAppnFwdCtrReset, nwAppnIfCnTgSecurity=nwAppnIfCnTgSecurity, nwAppnFwdIfCtrHostInMus=nwAppnFwdIfCtrHostInMus, nwAppnFwdIfCtrHostDiscardBytes=nwAppnFwdIfCtrHostDiscardBytes, nwAppnEventTraceAll=nwAppnEventTraceAll, nwAppnIsrAdminStatus=nwAppnIsrAdminStatus, nwAppnFwdLsDsap=nwAppnFwdLsDsap, nwAppnEventSeverity=nwAppnEventSeverity, nwAppnFwdLsControl=nwAppnFwdLsControl, nwAppnSysConfig=nwAppnSysConfig, nwAppnIsrConfig=nwAppnIsrConfig, nwAppnIfCnPtName=nwAppnIfCnPtName, nwAppnFwdCtrInMus=nwAppnFwdCtrInMus, nwAppnFwdIfCtrOutMus=nwAppnFwdIfCtrOutMus, nwAppnFwdLsdynamicLs=nwAppnFwdLsdynamicLs)
mibBuilder.exportSymbols("CTRON-APPN-MIB", nwAppnFwdLsDestAddr=nwAppnFwdLsDestAddr, nwAppnEventFltrControl=nwAppnEventFltrControl, nwAppnIsrFilters=nwAppnIsrFilters, nwAppnFwdIfCacheEntries=nwAppnFwdIfCacheEntries, nwAppnFwdLsAdjCpType=nwAppnFwdLsAdjCpType, nwAppnSysNodeType=nwAppnSysNodeType, nwAppnExtIfDfltMaxSBtuSize=nwAppnExtIfDfltMaxSBtuSize, nwAppnIfCnTgCharEntry=nwAppnIfCnTgCharEntry, nwAppnFwdLsNumActiveSession=nwAppnFwdLsNumActiveSession, nwAppnEventFilterTable=nwAppnEventFilterTable, nwAppnEventTable=nwAppnEventTable, nwAppnSysTreeUseLimit=nwAppnSysTreeUseLimit, nwAppnEventLogTable=nwAppnEventLogTable, nwAppnSysMaxTdmTGs=nwAppnSysMaxTdmTGs, nwAppnFwdLsBackLvlLenEN=nwAppnFwdLsBackLvlLenEN, nwAppnFwdIfCtrFilteredMus=nwAppnFwdIfCtrFilteredMus, nwAppnEventLogFilterTable=nwAppnEventLogFilterTable)
