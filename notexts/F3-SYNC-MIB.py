#
# PySNMP MIB module F3-SYNC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/F3-SYNC-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 09:56:44 2024
# On host fv-az1427-100 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
fsp150cm, = mibBuilder.importSymbols("ADVA-MIB", "fsp150cm")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
RestartType, OperationalState, SecondaryState, F3DisplayString, AdminState = mibBuilder.importSymbols("CM-COMMON-MIB", "RestartType", "OperationalState", "SecondaryState", "F3DisplayString", "AdminState")
slotIndex, neIndex, shelfIndex = mibBuilder.importSymbols("CM-ENTITY-MIB", "slotIndex", "neIndex", "shelfIndex")
CmGenPgSwitchoverReason, = mibBuilder.importSymbols("CM-REDUNDANCY-MIB", "CmGenPgSwitchoverReason")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
IpAddress, ModuleIdentity, Counter64, MibIdentifier, Counter32, Bits, TimeTicks, iso, ObjectIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ModuleIdentity", "Counter64", "MibIdentifier", "Counter32", "Bits", "TimeTicks", "iso", "ObjectIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "Unsigned32")
DisplayString, DateAndTime, TextualConvention, TruthValue, StorageType, VariablePointer, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TextualConvention", "TruthValue", "StorageType", "VariablePointer", "RowStatus")
f3SyncMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12))
if mibBuilder.loadTexts: f3SyncMIB.setLastUpdated('202001150000Z')
if mibBuilder.loadTexts: f3SyncMIB.setOrganization('ADVA Optical Networking SE')
f3SyncObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1))
f3SyncConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 2))
class NetworkClockType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("option1", 1), ("option2", 2))

class ClockMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("notAvailable", 0), ("freerun", 1), ("holdover", 2), ("tracking", 3), ("lossoflock", 4), ("locked", 5), ("bypass", 6))

class SSMQualityLevel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))
    namedValues = NamedValues(("not-applicable", 0), ("ql-dnu", 1), ("ql-eec1", 2), ("ql-eec2", 3), ("ql-inv", 4), ("ql-inv0", 5), ("ql-inv1", 6), ("ql-inv2", 7), ("ql-inv3", 8), ("ql-inv5", 9), ("ql-inv7", 10), ("ql-inv8", 11), ("ql-inv9", 12), ("ql-inv10", 13), ("ql-inv11", 14), ("ql-inv12", 15), ("ql-none", 16), ("ql-nsupp", 17), ("ql-prc", 18), ("ql-prov", 19), ("ql-prs", 20), ("ql-smc", 21), ("ql-ssu-a", 22), ("ql-ssu-b", 23), ("ql-st2", 24), ("ql-st3e", 25), ("ql-stu", 26), ("ql-tnc", 27), ("ql-unc", 28), ("ql-failed", 29), ("ql-inv6", 30), ("ql-inv13", 31), ("ql-inv14", 32), ("ql-dus", 33), ("ql-na", 34))

class SyncRefStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("not-applicable", 0), ("ref-ok", 1), ("ref-failed", 2), ("ref-freq-ok", 3))

class SyncRefState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("not-applicable", 0), ("active", 1), ("standby", 2), ("unavailable", 3), ("lockedout", 4))

class SyncDomainType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("chassis", 1), ("linecard", 2))

class SyncOperationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("none", 1), ("forcedswitch", 2), ("manualswitch", 3), ("lockout", 4), ("clearwtr", 5), ("clearlockout", 6), ("clearswitch", 7))

class SyncSelectionMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ql-mode", 1), ("priority-mode", 2))

class TimeScale(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ptp", 1), ("arb", 2))

class TODSource(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("na", 1), ("system-tod", 2), ("manual", 3))

class SquelchControl(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("never", 1), ("holdover", 2), ("lock", 3), ("squelch-ql", 4))

class TimeClockMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("freerun", 1), ("warmup", 2), ("tracking", 3), ("transition", 4), ("holdover", 5), ("locked", 6))

class TimeTraceAbilityStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("notTraceAble", 1), ("timeLocked", 2), ("timeFreqLock", 3), ("timeHoldover", 4))

class HoldoverAccuracy(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("time-500ns", 1), ("time-1000ns", 2), ("time-1500ns", 3), ("time-5000ns", 4), ("time-10000ns", 5))

class TimeHoldoverPerformance(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("time-500ns", 1), ("time-1000ns", 2), ("time-1500ns", 3), ("time-5000ns", 4), ("time-10000ns", 5), ("time-0ns", 6), ("time-100ns", 7), ("na", 8))

class TimeSource(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("atomic", 1), ("gps", 2), ("ptp", 3), ("internal", 4), ("other", 5))

class PLLBw(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("eec", 1), ("ssu", 2))

class SsmMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disbled", 2))

class AcknowledgeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("no-action", 1), ("accuracy-adjust", 2))

class ClkSignalType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("not-applicable", 0), ("freq-10mhz", 1), ("freq-2048khz", 2))

f3SyncTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1), )
if mibBuilder.loadTexts: f3SyncTable.setStatus('current')
f3SyncEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "F3-SYNC-MIB", "f3SyncIndex"))
if mibBuilder.loadTexts: f3SyncEntry.setStatus('current')
f3SyncIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncIndex.setStatus('current')
f3SyncAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 2), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncAdminState.setStatus('current')
f3SyncOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 3), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncOperationalState.setStatus('current')
f3SyncSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 4), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncSecondaryState.setStatus('current')
f3SyncNetworkClockType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 5), NetworkClockType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncNetworkClockType.setStatus('current')
f3SyncSelectedReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 6), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncSelectedReference.setStatus('current')
f3SyncClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 7), ClockMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncClockMode.setStatus('current')
f3SyncQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 8), SSMQualityLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncQL.setStatus('current')
f3SyncAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncAlias.setStatus('current')
f3SyncDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 10), SyncDomainType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncDomain.setStatus('current')
f3SyncSelectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 11), SyncSelectionMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncSelectionMode.setStatus('current')
f3SyncWaitToRestoreTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncWaitToRestoreTime.setStatus('current')
f3SyncOperationSyncRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 13), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncOperationSyncRef.setStatus('current')
f3SyncOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 14), SyncOperationType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncOperationType.setStatus('current')
f3SyncPLLBw = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 1, 1, 15), PLLBw()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncPLLBw.setStatus('current')
f3SyncRefTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2), )
if mibBuilder.loadTexts: f3SyncRefTable.setStatus('current')
f3SyncRefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "F3-SYNC-MIB", "f3SyncIndex"), (0, "F3-SYNC-MIB", "f3SyncRefIndex"))
if mibBuilder.loadTexts: f3SyncRefEntry.setStatus('current')
f3SyncRefIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncRefIndex.setStatus('current')
f3SyncRefReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1, 2), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncRefReference.setStatus('current')
f3SyncRefPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncRefPriority.setStatus('current')
f3SyncRefStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1, 4), SyncRefStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncRefStatus.setStatus('current')
f3SyncRefState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1, 5), SyncRefState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncRefState.setStatus('current')
f3SyncRefReceivedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1, 6), SSMQualityLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncRefReceivedQL.setStatus('current')
f3SyncRefStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1, 7), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncRefStorageType.setStatus('current')
f3SyncRefRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncRefRowStatus.setStatus('current')
f3SyncRefAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncRefAlias.setStatus('current')
f3SyncRefEffectiveQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1, 10), SSMQualityLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncRefEffectiveQL.setStatus('current')
f3SyncRefOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 2, 1, 11), SyncOperationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncRefOperationType.setStatus('current')
f3TimeClockTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3), )
if mibBuilder.loadTexts: f3TimeClockTable.setStatus('current')
f3TimeClockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "F3-SYNC-MIB", "f3TimeClockIndex"))
if mibBuilder.loadTexts: f3TimeClockEntry.setStatus('current')
f3TimeClockIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: f3TimeClockIndex.setStatus('current')
f3TimeClockAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 2), F3DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockAlias.setStatus('current')
f3TimeClockAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockAdminState.setStatus('current')
f3TimeClockOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockOperationalState.setStatus('current')
f3TimeClockSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockSecondaryState.setStatus('current')
f3TimeClockSelectedReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 6), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockSelectedReference.setStatus('current')
f3TimeClockClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 7), TimeClockMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockClockMode.setStatus('current')
f3TimeClockClockClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockClockClass.setStatus('deprecated')
f3TimeClockSelectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 9), SyncSelectionMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockSelectionMode.setStatus('current')
f3TimeClockWaitToRestoreTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockWaitToRestoreTime.setStatus('current')
f3TimeClockOperationTimeClockRef = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 11), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockOperationTimeClockRef.setStatus('current')
f3TimeClockOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 12), SyncOperationType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockOperationType.setStatus('current')
f3TimeClockLeap59 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockLeap59.setStatus('current')
f3TimeClockLeap61 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockLeap61.setStatus('current')
f3TimeClockTimeTraceAbilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 15), TimeTraceAbilityStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockTimeTraceAbilityStatus.setStatus('current')
f3TimeClockExpectedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 16), SSMQualityLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockExpectedQL.setStatus('current')
f3TimeClockCurrentQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 17), SSMQualityLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockCurrentQL.setStatus('current')
f3TimeClockSyncRefCandidate = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockSyncRefCandidate.setStatus('current')
f3TimeClockTimeHoldoverPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 19), TimeHoldoverPerformance()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockTimeHoldoverPerformance.setStatus('current')
f3TimeClockUtcOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockUtcOffset.setStatus('current')
f3TimeClockCurrentTimeOfDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockCurrentTimeOfDay.setStatus('current')
f3TimeClockFrequencyReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 22), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockFrequencyReference.setStatus('current')
f3TimeClockFrequencyClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 23), ClockMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockFrequencyClockMode.setStatus('current')
f3TimeClockTimeScale = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 24), TimeScale()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockTimeScale.setStatus('current')
f3TimeClockTODSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 25), TODSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockTODSource.setStatus('current')
f3TimeClockEPRTCModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 26), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockEPRTCModeEnabled.setStatus('current')
f3TimeClockTimeHoldoverTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockTimeHoldoverTimeout.setStatus('current')
f3TimeClockTimeInHoldover = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockTimeInHoldover.setStatus('current')
f3TimeClockAtoiCurrentOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockAtoiCurrentOffset.setStatus('current')
f3TimeClockAtoiJumpSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockAtoiJumpSeconds.setStatus('current')
f3TimeClockAtoiTimeOfNextJump = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 31), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockAtoiTimeOfNextJump.setStatus('current')
f3TimeClockAtoiDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockAtoiDisplayName.setStatus('current')
f3TimeClockPhaseAdjust = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 3, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 250000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockPhaseAdjust.setStatus('current')
f3TimeClockRefTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 4), )
if mibBuilder.loadTexts: f3TimeClockRefTable.setStatus('current')
f3TimeClockRefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 4, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "F3-SYNC-MIB", "f3TimeClockIndex"), (0, "F3-SYNC-MIB", "f3TimeClockRefIndex"))
if mibBuilder.loadTexts: f3TimeClockRefEntry.setStatus('current')
f3TimeClockRefIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: f3TimeClockRefIndex.setStatus('current')
f3TimeClockRefAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 4, 1, 2), F3DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TimeClockRefAlias.setStatus('current')
f3TimeClockRefReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 4, 1, 3), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TimeClockRefReference.setStatus('current')
f3TimeClockRefPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TimeClockRefPriority.setStatus('current')
f3TimeClockRefStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 4, 1, 5), SyncRefStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockRefStatus.setStatus('current')
f3TimeClockRefState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 4, 1, 6), SyncRefState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockRefState.setStatus('current')
f3TimeClockRefOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 4, 1, 7), SyncOperationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockRefOperationType.setStatus('current')
f3TimeClockRefStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 4, 1, 8), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TimeClockRefStorageType.setStatus('current')
f3TimeClockRefRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 4, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TimeClockRefRowStatus.setStatus('current')
f3PrcTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5), )
if mibBuilder.loadTexts: f3PrcTable.setStatus('current')
f3PrcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "F3-SYNC-MIB", "f3PrcIndex"))
if mibBuilder.loadTexts: f3PrcEntry.setStatus('current')
f3PrcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647)))
if mibBuilder.loadTexts: f3PrcIndex.setStatus('current')
f3PrcAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1, 2), F3DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PrcAlias.setStatus('current')
f3PrcAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PrcAdminState.setStatus('current')
f3PrcOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PrcOperationalState.setStatus('current')
f3PrcSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PrcSecondaryState.setStatus('current')
f3PrcSsmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1, 6), SsmMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PrcSsmMode.setStatus('current')
f3PrcClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1, 7), TimeClockMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PrcClockMode.setStatus('current')
f3PrcAccuracyAdjustement = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PrcAccuracyAdjustement.setStatus('current')
f3PrcCurrentQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1, 9), SSMQualityLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3PrcCurrentQL.setStatus('current')
f3PrcAcknowledgeAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1, 10), AcknowledgeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PrcAcknowledgeAction.setStatus('current')
f3PrcRestartAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 5, 1, 11), RestartType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3PrcRestartAction.setStatus('current')
f3SyncProtGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 6), )
if mibBuilder.loadTexts: f3SyncProtGroupTable.setStatus('current')
f3SyncProtGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 6, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNC-MIB", "f3SyncProtGroupIndex"))
if mibBuilder.loadTexts: f3SyncProtGroupEntry.setStatus('current')
f3SyncProtGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncProtGroupIndex.setStatus('current')
f3SyncProtGroupAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 6, 1, 2), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3SyncProtGroupAdminState.setStatus('current')
f3SyncProtGroupActiveMember = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 6, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncProtGroupActiveMember.setStatus('current')
f3SyncProtGroupLastSwitchOverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 6, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncProtGroupLastSwitchOverTime.setStatus('current')
f3SyncProtGroupLastSwitchOverReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 6, 1, 5), CmGenPgSwitchoverReason()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3SyncProtGroupLastSwitchOverReason.setStatus('current')
f3SyncProtGroupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 6, 1, 6), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncProtGroupStorageType.setStatus('current')
f3SyncProtGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncProtGroupRowStatus.setStatus('current')
f3SyncProtMemberTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 7), )
if mibBuilder.loadTexts: f3SyncProtMemberTable.setStatus('current')
f3SyncProtMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 7, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNC-MIB", "f3SyncProtGroupIndex"), (0, "F3-SYNC-MIB", "f3SyncProtMemberObject"))
if mibBuilder.loadTexts: f3SyncProtMemberEntry.setStatus('current')
f3SyncProtMemberObject = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 7, 1, 1), VariablePointer())
if mibBuilder.loadTexts: f3SyncProtMemberObject.setStatus('current')
f3SyncProtMemberStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 7, 1, 2), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncProtMemberStorageType.setStatus('current')
f3SyncProtMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3SyncProtMemberRowStatus.setStatus('current')
f3TimeClockProtGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 8), )
if mibBuilder.loadTexts: f3TimeClockProtGroupTable.setStatus('current')
f3TimeClockProtGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 8, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNC-MIB", "f3TimeClockProtGroupIndex"))
if mibBuilder.loadTexts: f3TimeClockProtGroupEntry.setStatus('current')
f3TimeClockProtGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockProtGroupIndex.setStatus('current')
f3TimeClockProtGroupAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 8, 1, 2), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3TimeClockProtGroupAdminState.setStatus('current')
f3TimeClockProtGroupActiveMember = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 8, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockProtGroupActiveMember.setStatus('current')
f3TimeClockProtGroupLastSwitchOverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 8, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockProtGroupLastSwitchOverTime.setStatus('current')
f3TimeClockProtGroupLastSwitchOverReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 8, 1, 5), CmGenPgSwitchoverReason()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3TimeClockProtGroupLastSwitchOverReason.setStatus('current')
f3TimeClockProtGroupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 8, 1, 6), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TimeClockProtGroupStorageType.setStatus('current')
f3TimeClockProtGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 8, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TimeClockProtGroupRowStatus.setStatus('current')
f3TimeClockProtMemberTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 9), )
if mibBuilder.loadTexts: f3TimeClockProtMemberTable.setStatus('current')
f3TimeClockProtMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 9, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "F3-SYNC-MIB", "f3TimeClockProtGroupIndex"), (0, "F3-SYNC-MIB", "f3TimeClockProtMemberObject"))
if mibBuilder.loadTexts: f3TimeClockProtMemberEntry.setStatus('current')
f3TimeClockProtMemberObject = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 9, 1, 1), VariablePointer())
if mibBuilder.loadTexts: f3TimeClockProtMemberObject.setStatus('current')
f3TimeClockProtMemberStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 9, 1, 2), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TimeClockProtMemberStorageType.setStatus('current')
f3TimeClockProtMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 1, 9, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3TimeClockProtMemberRowStatus.setStatus('current')
f3SyncCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 2, 1))
f3SyncGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 2, 2))
f3SyncCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 2, 1, 1)).setObjects(("F3-SYNC-MIB", "f3SyncObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3SyncCompliance = f3SyncCompliance.setStatus('current')
f3SyncObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 2, 2, 1)).setObjects(("F3-SYNC-MIB", "f3SyncIndex"), ("F3-SYNC-MIB", "f3SyncAdminState"), ("F3-SYNC-MIB", "f3SyncOperationalState"), ("F3-SYNC-MIB", "f3SyncSecondaryState"), ("F3-SYNC-MIB", "f3SyncNetworkClockType"), ("F3-SYNC-MIB", "f3SyncSelectedReference"), ("F3-SYNC-MIB", "f3SyncClockMode"), ("F3-SYNC-MIB", "f3SyncQL"), ("F3-SYNC-MIB", "f3SyncAlias"), ("F3-SYNC-MIB", "f3SyncDomain"), ("F3-SYNC-MIB", "f3SyncSelectionMode"), ("F3-SYNC-MIB", "f3SyncWaitToRestoreTime"), ("F3-SYNC-MIB", "f3SyncOperationSyncRef"), ("F3-SYNC-MIB", "f3SyncOperationType"), ("F3-SYNC-MIB", "f3SyncPLLBw"), ("F3-SYNC-MIB", "f3SyncRefIndex"), ("F3-SYNC-MIB", "f3SyncRefReference"), ("F3-SYNC-MIB", "f3SyncRefPriority"), ("F3-SYNC-MIB", "f3SyncRefStatus"), ("F3-SYNC-MIB", "f3SyncRefState"), ("F3-SYNC-MIB", "f3SyncRefReceivedQL"), ("F3-SYNC-MIB", "f3SyncRefStorageType"), ("F3-SYNC-MIB", "f3SyncRefRowStatus"), ("F3-SYNC-MIB", "f3SyncRefAlias"), ("F3-SYNC-MIB", "f3SyncRefEffectiveQL"), ("F3-SYNC-MIB", "f3SyncRefOperationType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3SyncObjectGroup = f3SyncObjectGroup.setStatus('current')
f3TimeClockObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 2, 2, 2)).setObjects(("F3-SYNC-MIB", "f3TimeClockIndex"), ("F3-SYNC-MIB", "f3TimeClockAlias"), ("F3-SYNC-MIB", "f3TimeClockAdminState"), ("F3-SYNC-MIB", "f3TimeClockOperationalState"), ("F3-SYNC-MIB", "f3TimeClockSecondaryState"), ("F3-SYNC-MIB", "f3TimeClockSelectedReference"), ("F3-SYNC-MIB", "f3TimeClockClockMode"), ("F3-SYNC-MIB", "f3TimeClockClockClass"), ("F3-SYNC-MIB", "f3TimeClockSelectionMode"), ("F3-SYNC-MIB", "f3TimeClockWaitToRestoreTime"), ("F3-SYNC-MIB", "f3TimeClockOperationTimeClockRef"), ("F3-SYNC-MIB", "f3TimeClockOperationType"), ("F3-SYNC-MIB", "f3TimeClockLeap59"), ("F3-SYNC-MIB", "f3TimeClockLeap61"), ("F3-SYNC-MIB", "f3TimeClockTimeTraceAbilityStatus"), ("F3-SYNC-MIB", "f3TimeClockExpectedQL"), ("F3-SYNC-MIB", "f3TimeClockCurrentQL"), ("F3-SYNC-MIB", "f3TimeClockSyncRefCandidate"), ("F3-SYNC-MIB", "f3TimeClockTimeHoldoverPerformance"), ("F3-SYNC-MIB", "f3TimeClockUtcOffset"), ("F3-SYNC-MIB", "f3TimeClockCurrentTimeOfDay"), ("F3-SYNC-MIB", "f3TimeClockFrequencyReference"), ("F3-SYNC-MIB", "f3TimeClockFrequencyClockMode"), ("F3-SYNC-MIB", "f3TimeClockTimeScale"), ("F3-SYNC-MIB", "f3TimeClockTODSource"), ("F3-SYNC-MIB", "f3TimeClockEPRTCModeEnabled"), ("F3-SYNC-MIB", "f3TimeClockTimeHoldoverTimeout"), ("F3-SYNC-MIB", "f3TimeClockTimeInHoldover"), ("F3-SYNC-MIB", "f3TimeClockAtoiCurrentOffset"), ("F3-SYNC-MIB", "f3TimeClockAtoiJumpSeconds"), ("F3-SYNC-MIB", "f3TimeClockAtoiTimeOfNextJump"), ("F3-SYNC-MIB", "f3TimeClockAtoiDisplayName"), ("F3-SYNC-MIB", "f3TimeClockPhaseAdjust"), ("F3-SYNC-MIB", "f3TimeClockRefIndex"), ("F3-SYNC-MIB", "f3TimeClockRefAlias"), ("F3-SYNC-MIB", "f3TimeClockRefReference"), ("F3-SYNC-MIB", "f3TimeClockRefPriority"), ("F3-SYNC-MIB", "f3TimeClockRefStatus"), ("F3-SYNC-MIB", "f3TimeClockRefState"), ("F3-SYNC-MIB", "f3TimeClockRefOperationType"), ("F3-SYNC-MIB", "f3TimeClockRefStorageType"), ("F3-SYNC-MIB", "f3TimeClockRefRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3TimeClockObjectGroup = f3TimeClockObjectGroup.setStatus('current')
f3PrcObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 2, 2, 3)).setObjects(("F3-SYNC-MIB", "f3PrcIndex"), ("F3-SYNC-MIB", "f3PrcAlias"), ("F3-SYNC-MIB", "f3PrcAdminState"), ("F3-SYNC-MIB", "f3PrcOperationalState"), ("F3-SYNC-MIB", "f3PrcSecondaryState"), ("F3-SYNC-MIB", "f3PrcClockMode"), ("F3-SYNC-MIB", "f3PrcSsmMode"), ("F3-SYNC-MIB", "f3PrcAccuracyAdjustement"), ("F3-SYNC-MIB", "f3PrcCurrentQL"), ("F3-SYNC-MIB", "f3PrcAcknowledgeAction"), ("F3-SYNC-MIB", "f3PrcRestartAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3PrcObjectGroup = f3PrcObjectGroup.setStatus('current')
f3ProtObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 12, 2, 2, 4)).setObjects(("F3-SYNC-MIB", "f3SyncProtGroupIndex"), ("F3-SYNC-MIB", "f3SyncProtGroupAdminState"), ("F3-SYNC-MIB", "f3SyncProtGroupActiveMember"), ("F3-SYNC-MIB", "f3SyncProtGroupLastSwitchOverTime"), ("F3-SYNC-MIB", "f3SyncProtGroupLastSwitchOverReason"), ("F3-SYNC-MIB", "f3SyncProtGroupStorageType"), ("F3-SYNC-MIB", "f3SyncProtGroupRowStatus"), ("F3-SYNC-MIB", "f3SyncProtMemberObject"), ("F3-SYNC-MIB", "f3SyncProtMemberStorageType"), ("F3-SYNC-MIB", "f3SyncProtMemberRowStatus"), ("F3-SYNC-MIB", "f3TimeClockProtGroupIndex"), ("F3-SYNC-MIB", "f3TimeClockProtGroupAdminState"), ("F3-SYNC-MIB", "f3TimeClockProtGroupActiveMember"), ("F3-SYNC-MIB", "f3TimeClockProtGroupLastSwitchOverTime"), ("F3-SYNC-MIB", "f3TimeClockProtGroupLastSwitchOverReason"), ("F3-SYNC-MIB", "f3TimeClockProtGroupStorageType"), ("F3-SYNC-MIB", "f3TimeClockProtGroupRowStatus"), ("F3-SYNC-MIB", "f3TimeClockProtMemberObject"), ("F3-SYNC-MIB", "f3TimeClockProtMemberStorageType"), ("F3-SYNC-MIB", "f3TimeClockProtMemberRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3ProtObjectGroup = f3ProtObjectGroup.setStatus('current')
mibBuilder.exportSymbols("F3-SYNC-MIB", f3TimeClockProtGroupRowStatus=f3TimeClockProtGroupRowStatus, f3TimeClockRefTable=f3TimeClockRefTable, f3PrcSecondaryState=f3PrcSecondaryState, f3SyncRefOperationType=f3SyncRefOperationType, f3SyncClockMode=f3SyncClockMode, f3TimeClockTimeHoldoverTimeout=f3TimeClockTimeHoldoverTimeout, f3TimeClockAtoiDisplayName=f3TimeClockAtoiDisplayName, f3TimeClockRefOperationType=f3TimeClockRefOperationType, ClockMode=ClockMode, f3SyncOperationalState=f3SyncOperationalState, AcknowledgeType=AcknowledgeType, f3SyncObjects=f3SyncObjects, f3TimeClockProtMemberTable=f3TimeClockProtMemberTable, f3SyncRefTable=f3SyncRefTable, f3TimeClockTimeHoldoverPerformance=f3TimeClockTimeHoldoverPerformance, f3SyncProtGroupTable=f3SyncProtGroupTable, TimeScale=TimeScale, f3SyncAlias=f3SyncAlias, f3TimeClockRefReference=f3TimeClockRefReference, f3TimeClockIndex=f3TimeClockIndex, f3SyncProtGroupAdminState=f3SyncProtGroupAdminState, f3TimeClockFrequencyReference=f3TimeClockFrequencyReference, f3TimeClockProtGroupLastSwitchOverReason=f3TimeClockProtGroupLastSwitchOverReason, f3TimeClockClockMode=f3TimeClockClockMode, f3TimeClockAtoiTimeOfNextJump=f3TimeClockAtoiTimeOfNextJump, TimeHoldoverPerformance=TimeHoldoverPerformance, f3SyncCompliances=f3SyncCompliances, SquelchControl=SquelchControl, TimeSource=TimeSource, f3SyncRefReceivedQL=f3SyncRefReceivedQL, f3SyncObjectGroup=f3SyncObjectGroup, f3TimeClockProtGroupEntry=f3TimeClockProtGroupEntry, f3SyncIndex=f3SyncIndex, SyncRefState=SyncRefState, f3SyncRefState=f3SyncRefState, SyncDomainType=SyncDomainType, f3TimeClockLeap59=f3TimeClockLeap59, HoldoverAccuracy=HoldoverAccuracy, SsmMode=SsmMode, f3TimeClockTable=f3TimeClockTable, f3SyncProtGroupActiveMember=f3SyncProtGroupActiveMember, f3SyncRefPriority=f3SyncRefPriority, f3TimeClockPhaseAdjust=f3TimeClockPhaseAdjust, f3TimeClockRefPriority=f3TimeClockRefPriority, f3TimeClockProtGroupIndex=f3TimeClockProtGroupIndex, f3TimeClockTimeInHoldover=f3TimeClockTimeInHoldover, f3TimeClockProtMemberStorageType=f3TimeClockProtMemberStorageType, f3TimeClockEntry=f3TimeClockEntry, f3PrcEntry=f3PrcEntry, f3TimeClockTimeScale=f3TimeClockTimeScale, f3SyncMIB=f3SyncMIB, f3PrcAcknowledgeAction=f3PrcAcknowledgeAction, f3SyncProtGroupIndex=f3SyncProtGroupIndex, f3PrcAdminState=f3PrcAdminState, f3ProtObjectGroup=f3ProtObjectGroup, f3TimeClockOperationalState=f3TimeClockOperationalState, f3TimeClockRefIndex=f3TimeClockRefIndex, f3TimeClockRefStatus=f3TimeClockRefStatus, f3TimeClockOperationTimeClockRef=f3TimeClockOperationTimeClockRef, f3TimeClockClockClass=f3TimeClockClockClass, f3TimeClockFrequencyClockMode=f3TimeClockFrequencyClockMode, TODSource=TODSource, f3SyncNetworkClockType=f3SyncNetworkClockType, f3TimeClockSyncRefCandidate=f3TimeClockSyncRefCandidate, f3PrcAccuracyAdjustement=f3PrcAccuracyAdjustement, ClkSignalType=ClkSignalType, f3TimeClockAlias=f3TimeClockAlias, f3TimeClockUtcOffset=f3TimeClockUtcOffset, f3TimeClockTimeTraceAbilityStatus=f3TimeClockTimeTraceAbilityStatus, f3SyncRefStorageType=f3SyncRefStorageType, f3TimeClockOperationType=f3TimeClockOperationType, SSMQualityLevel=SSMQualityLevel, f3TimeClockProtGroupAdminState=f3TimeClockProtGroupAdminState, f3SyncProtGroupStorageType=f3SyncProtGroupStorageType, f3SyncDomain=f3SyncDomain, f3TimeClockExpectedQL=f3TimeClockExpectedQL, f3SyncGroups=f3SyncGroups, f3SyncProtGroupLastSwitchOverTime=f3SyncProtGroupLastSwitchOverTime, f3TimeClockProtGroupTable=f3TimeClockProtGroupTable, f3TimeClockWaitToRestoreTime=f3TimeClockWaitToRestoreTime, f3SyncProtMemberTable=f3SyncProtMemberTable, f3SyncRefIndex=f3SyncRefIndex, NetworkClockType=NetworkClockType, f3SyncQL=f3SyncQL, f3SyncProtGroupLastSwitchOverReason=f3SyncProtGroupLastSwitchOverReason, f3SyncRefReference=f3SyncRefReference, f3SyncSecondaryState=f3SyncSecondaryState, f3TimeClockTODSource=f3TimeClockTODSource, f3TimeClockRefStorageType=f3TimeClockRefStorageType, f3TimeClockRefState=f3TimeClockRefState, PLLBw=PLLBw, SyncSelectionMode=SyncSelectionMode, f3SyncOperationSyncRef=f3SyncOperationSyncRef, f3TimeClockEPRTCModeEnabled=f3TimeClockEPRTCModeEnabled, f3SyncRefAlias=f3SyncRefAlias, f3TimeClockProtMemberObject=f3TimeClockProtMemberObject, f3TimeClockCurrentTimeOfDay=f3TimeClockCurrentTimeOfDay, PYSNMP_MODULE_ID=f3SyncMIB, f3TimeClockRefAlias=f3TimeClockRefAlias, f3TimeClockCurrentQL=f3TimeClockCurrentQL, f3SyncAdminState=f3SyncAdminState, f3SyncRefStatus=f3SyncRefStatus, f3TimeClockAtoiCurrentOffset=f3TimeClockAtoiCurrentOffset, f3SyncWaitToRestoreTime=f3SyncWaitToRestoreTime, f3SyncCompliance=f3SyncCompliance, TimeTraceAbilityStatus=TimeTraceAbilityStatus, f3TimeClockAtoiJumpSeconds=f3TimeClockAtoiJumpSeconds, f3TimeClockProtMemberEntry=f3TimeClockProtMemberEntry, f3TimeClockRefEntry=f3TimeClockRefEntry, f3TimeClockSecondaryState=f3TimeClockSecondaryState, f3TimeClockProtGroupActiveMember=f3TimeClockProtGroupActiveMember, f3SyncSelectionMode=f3SyncSelectionMode, TimeClockMode=TimeClockMode, f3SyncProtMemberStorageType=f3SyncProtMemberStorageType, f3TimeClockRefRowStatus=f3TimeClockRefRowStatus, f3SyncConformance=f3SyncConformance, f3TimeClockSelectionMode=f3TimeClockSelectionMode, f3SyncEntry=f3SyncEntry, f3SyncProtMemberObject=f3SyncProtMemberObject, f3SyncPLLBw=f3SyncPLLBw, SyncRefStatus=SyncRefStatus, f3SyncProtMemberRowStatus=f3SyncProtMemberRowStatus, f3PrcIndex=f3PrcIndex, f3SyncTable=f3SyncTable, f3PrcAlias=f3PrcAlias, f3PrcCurrentQL=f3PrcCurrentQL, f3TimeClockProtMemberRowStatus=f3TimeClockProtMemberRowStatus, f3PrcOperationalState=f3PrcOperationalState, f3TimeClockProtGroupStorageType=f3TimeClockProtGroupStorageType, f3SyncOperationType=f3SyncOperationType, f3SyncProtGroupRowStatus=f3SyncProtGroupRowStatus, f3TimeClockObjectGroup=f3TimeClockObjectGroup, f3SyncRefRowStatus=f3SyncRefRowStatus, f3PrcClockMode=f3PrcClockMode, f3TimeClockSelectedReference=f3TimeClockSelectedReference, f3PrcTable=f3PrcTable, f3SyncSelectedReference=f3SyncSelectedReference, f3TimeClockLeap61=f3TimeClockLeap61, f3SyncRefEntry=f3SyncRefEntry, f3TimeClockProtGroupLastSwitchOverTime=f3TimeClockProtGroupLastSwitchOverTime, f3PrcRestartAction=f3PrcRestartAction, f3SyncRefEffectiveQL=f3SyncRefEffectiveQL, f3TimeClockAdminState=f3TimeClockAdminState, f3PrcObjectGroup=f3PrcObjectGroup, f3SyncProtMemberEntry=f3SyncProtMemberEntry, f3PrcSsmMode=f3PrcSsmMode, SyncOperationType=SyncOperationType, f3SyncProtGroupEntry=f3SyncProtGroupEntry)
