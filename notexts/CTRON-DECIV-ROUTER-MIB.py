#
# PySNMP MIB module CTRON-DECIV-ROUTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-DECIV-ROUTER-MIB
# Produced by pysmi-1.1.12 at Fri Nov 22 15:38:53 2024
# On host fv-az973-242 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
nwRtrProtoSuites, = mibBuilder.importSymbols("ROUTER-OIDS", "nwRtrProtoSuites")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Unsigned32, iso, Integer32, NotificationType, Gauge32, Counter64, ModuleIdentity, ObjectIdentity, TimeTicks, MibIdentifier, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Unsigned32", "iso", "Integer32", "NotificationType", "Gauge32", "Counter64", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "MibIdentifier", "IpAddress", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nwDecIVRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3))
nwDecIVMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 1))
nwDecIVComponents = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2))
nwDecIVSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1))
nwDecIVForwarding = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2))
nwDecIVTopology = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4))
nwDecIVFib = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 5))
nwDecIVEndSystems = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6))
nwDecIVAccessControl = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 7))
nwDecIVFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 8))
nwDecIVRedirector = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 9))
nwDecIVEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10))
nwDecIVWorkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 11))
nwDecIVSysConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1))
nwDecIVSysAdministration = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 2))
nwDecIVFwdSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1))
nwDecIVFwdInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2))
nwDecIVFwdCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1))
nwDecIVFwdIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1))
nwDecIVFwdIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2))
nwDecIVDistanceVector = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1))
nwDecIVLinkState = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 2))
nwDecIVProto = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1))
nwDecIVProtoSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1))
nwDecIVProtoInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2))
nwDecIVProtoConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 1))
nwDecIVProtoCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2))
nwDecIVProtoIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1))
nwDecIVProtoIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2))
nwDecIVHostsSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6, 1))
nwDecIVHostsInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6, 2))
nwDecIVHostsToMedia = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6, 3))
nwDecIVEventLogConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 1))
nwDecIVEventLogFilterTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 2))
nwDecIVEventLogTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 3))
class DecIVAddress(OctetString):
    pass

nwDecIVMibRevText = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVMibRevText.setStatus('mandatory')
nwDecIVSysRouterId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 1), DecIVAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVSysRouterId.setStatus('mandatory')
nwDecIVNodeType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("routing-iv", 2), ("area", 3))).clone('routing-iv')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVNodeType.setStatus('mandatory')
nwDecIVMaxNodes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 3), Integer32().clone(1023)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVMaxNodes.setStatus('mandatory')
nwDecIVMaxBRA = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 4), Integer32().clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVMaxBRA.setStatus('mandatory')
nwDecIVMaxBEA = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 5), Integer32().clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVMaxBEA.setStatus('mandatory')
nwDecIVMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 6), Integer32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVMaxHops.setStatus('mandatory')
nwDecIVMaxCost = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 7), Integer32().clone(1022)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVMaxCost.setStatus('mandatory')
nwDecIVMaxVisits = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 8), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVMaxVisits.setStatus('mandatory')
nwDecIVNonBroadcastTimer = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 9), TimeTicks().clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVNonBroadcastTimer.setStatus('mandatory')
nwDecIVBroadcastTimer = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 10), TimeTicks().clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVBroadcastTimer.setStatus('mandatory')
nwDecIVAreas = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 11), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVAreas.setStatus('mandatory')
nwDecIVMaxAreaHops = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 12), Integer32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVMaxAreaHops.setStatus('mandatory')
nwDecIVMaxAreaCost = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 1, 13), Integer32().clone(1022)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVMaxAreaCost.setStatus('mandatory')
nwDecIVSysAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVSysAdminStatus.setStatus('mandatory')
nwDecIVSysOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVSysOperStatus.setStatus('mandatory')
nwDecIVSysAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVSysAdminReset.setStatus('mandatory')
nwDecIVSysOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 2, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVSysOperationalTime.setStatus('mandatory')
nwDecIVSysVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 1, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVSysVersion.setStatus('mandatory')
nwDecIVFwdCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdCtrAdminStatus.setStatus('mandatory')
nwDecIVFwdCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdCtrReset.setStatus('mandatory')
nwDecIVFwdCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrOperationalTime.setStatus('mandatory')
nwDecIVFwdCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrInPkts.setStatus('mandatory')
nwDecIVFwdCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrOutPkts.setStatus('mandatory')
nwDecIVFwdCtrFwdPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrFwdPkts.setStatus('mandatory')
nwDecIVFwdCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrFilteredPkts.setStatus('mandatory')
nwDecIVFwdCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrDiscardPkts.setStatus('mandatory')
nwDecIVFwdCtrAddrErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrAddrErrPkts.setStatus('mandatory')
nwDecIVFwdCtrLenErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrLenErrPkts.setStatus('mandatory')
nwDecIVFwdCtrHdrErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrHdrErrPkts.setStatus('mandatory')
nwDecIVFwdCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrInBytes.setStatus('mandatory')
nwDecIVFwdCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrOutBytes.setStatus('mandatory')
nwDecIVFwdCtrFwdBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrFwdBytes.setStatus('mandatory')
nwDecIVFwdCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrFilteredBytes.setStatus('mandatory')
nwDecIVFwdCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrDiscardBytes.setStatus('mandatory')
nwDecIVFwdCtrHostInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrHostInPkts.setStatus('mandatory')
nwDecIVFwdCtrHostOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrHostOutPkts.setStatus('mandatory')
nwDecIVFwdCtrHostDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrHostDiscardPkts.setStatus('mandatory')
nwDecIVFwdCtrHostInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrHostInBytes.setStatus('mandatory')
nwDecIVFwdCtrHostOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrHostOutBytes.setStatus('mandatory')
nwDecIVFwdCtrHostDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdCtrHostDiscardBytes.setStatus('mandatory')
nwDecIVFwdIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1), )
if mibBuilder.loadTexts: nwDecIVFwdIfTable.setStatus('mandatory')
nwDecIVFwdIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVFwdIfIndex"))
if mibBuilder.loadTexts: nwDecIVFwdIfEntry.setStatus('mandatory')
nwDecIVFwdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfIndex.setStatus('mandatory')
nwDecIVFwdIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdIfAdminStatus.setStatus('mandatory')
nwDecIVFwdIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfOperStatus.setStatus('mandatory')
nwDecIVFwdIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfOperationalTime.setStatus('mandatory')
nwDecIVFwdIfControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("add", 2), ("delete", 3))).clone('add')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdIfControl.setStatus('mandatory')
nwDecIVFwdIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 6), Integer32().clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdIfMtu.setStatus('mandatory')
nwDecIVFwdIfForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdIfForwarding.setStatus('mandatory')
nwDecIVFwdIfFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 8, 9, 11, 14, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("snap", 3), ("nativewan", 8), ("encapenet", 9), ("encapenetsnap", 11), ("encaptrsnap", 14), ("encapfddisnap", 16), ("canonical", 17))).clone('ethernet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdIfFrameType.setStatus('mandatory')
nwDecIVFwdIfAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdIfAclIdentifier.setStatus('mandatory')
nwDecIVFwdIfAclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdIfAclStatus.setStatus('mandatory')
nwDecIVFwdIfCacheControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdIfCacheControl.setStatus('mandatory')
nwDecIVFwdIfCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCacheEntries.setStatus('mandatory')
nwDecIVFwdIfCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCacheHits.setStatus('mandatory')
nwDecIVFwdIfCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCacheMisses.setStatus('mandatory')
nwDecIVFwdIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1), )
if mibBuilder.loadTexts: nwDecIVFwdIfCtrTable.setStatus('mandatory')
nwDecIVFwdIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVFwdIfCtrIfIndex"))
if mibBuilder.loadTexts: nwDecIVFwdIfCtrEntry.setStatus('mandatory')
nwDecIVFwdIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrIfIndex.setStatus('mandatory')
nwDecIVFwdIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrAdminStatus.setStatus('mandatory')
nwDecIVFwdIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrReset.setStatus('mandatory')
nwDecIVFwdIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrOperationalTime.setStatus('mandatory')
nwDecIVFwdIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrInPkts.setStatus('mandatory')
nwDecIVFwdIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrOutPkts.setStatus('mandatory')
nwDecIVFwdIfCtrFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrFwdPkts.setStatus('mandatory')
nwDecIVFwdIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrFilteredPkts.setStatus('mandatory')
nwDecIVFwdIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrDiscardPkts.setStatus('mandatory')
nwDecIVFwdIfCtrAddrErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrAddrErrPkts.setStatus('mandatory')
nwDecIVFwdIfCtrLenErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrLenErrPkts.setStatus('mandatory')
nwDecIVFwdIfCtrHdrErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrHdrErrPkts.setStatus('mandatory')
nwDecIVFwdIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrInBytes.setStatus('mandatory')
nwDecIVFwdIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrOutBytes.setStatus('mandatory')
nwDecIVFwdIfCtrFwdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrFwdBytes.setStatus('mandatory')
nwDecIVFwdIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrFilteredBytes.setStatus('mandatory')
nwDecIVFwdIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrDiscardBytes.setStatus('mandatory')
nwDecIVFwdIfCtrHostInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrHostInPkts.setStatus('mandatory')
nwDecIVFwdIfCtrHostOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrHostOutPkts.setStatus('mandatory')
nwDecIVFwdIfCtrHostDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrHostDiscardPkts.setStatus('mandatory')
nwDecIVFwdIfCtrHostInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrHostInBytes.setStatus('mandatory')
nwDecIVFwdIfCtrHostOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrHostOutBytes.setStatus('mandatory')
nwDecIVFwdIfCtrHostDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFwdIfCtrHostDiscardBytes.setStatus('mandatory')
nwDecIVProtoAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoAdminStatus.setStatus('mandatory')
nwDecIVProtoOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoOperStatus.setStatus('mandatory')
nwDecIVProtoAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoAdminReset.setStatus('mandatory')
nwDecIVProtoOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoOperationalTime.setStatus('mandatory')
nwDecIVProtoVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoVersion.setStatus('mandatory')
nwDecIVProtoStackSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 1, 6), Integer32().clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoStackSize.setStatus('mandatory')
nwDecIVProtoThreadPriority = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 1, 7), Integer32().clone(127)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoThreadPriority.setStatus('mandatory')
nwDecIVProtoDatabaseThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 1, 8), Integer32().clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoDatabaseThreshold.setStatus('mandatory')
nwDecIVProtoAgeOut = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 1, 9), Integer32().clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoAgeOut.setStatus('mandatory')
nwDecIVProtoHoldDown = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 1, 10), Integer32().clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoHoldDown.setStatus('mandatory')
nwDecIVProtoCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoCtrAdminStatus.setStatus('mandatory')
nwDecIVProtoCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoCtrReset.setStatus('mandatory')
nwDecIVProtoCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoCtrOperationalTime.setStatus('mandatory')
nwDecIVProtoCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoCtrInPkts.setStatus('mandatory')
nwDecIVProtoCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoCtrOutPkts.setStatus('mandatory')
nwDecIVProtoCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoCtrFilteredPkts.setStatus('mandatory')
nwDecIVProtoCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoCtrDiscardPkts.setStatus('mandatory')
nwDecIVProtoCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoCtrInBytes.setStatus('mandatory')
nwDecIVProtoCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoCtrOutBytes.setStatus('mandatory')
nwDecIVProtoCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoCtrFilteredBytes.setStatus('mandatory')
nwDecIVProtoCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 1, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoCtrDiscardBytes.setStatus('mandatory')
nwDecIVProtoIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1), )
if mibBuilder.loadTexts: nwDecIVProtoIfTable.setStatus('mandatory')
nwDecIVProtoIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVProtoIfIndex"))
if mibBuilder.loadTexts: nwDecIVProtoIfEntry.setStatus('mandatory')
nwDecIVProtoIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfIndex.setStatus('mandatory')
nwDecIVProtoIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfAdminStatus.setStatus('mandatory')
nwDecIVProtoIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfOperStatus.setStatus('mandatory')
nwDecIVProtoIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfOperationalTime.setStatus('mandatory')
nwDecIVProtoIfVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 5), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfVersion.setStatus('mandatory')
nwDecIVProtoIfAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 6), Integer32().clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfAdvertisement.setStatus('mandatory')
nwDecIVProtoIfFloodDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 7), Integer32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfFloodDelay.setStatus('mandatory')
nwDecIVProtoIfRequestDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfRequestDelay.setStatus('mandatory')
nwDecIVProtoIfPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 9), Integer32().clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfPriority.setStatus('mandatory')
nwDecIVProtoIfHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 10), Integer32().clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfHelloTimer.setStatus('mandatory')
nwDecIVProtoIfSplitHorizon = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfSplitHorizon.setStatus('mandatory')
nwDecIVProtoIfPoisonReverse = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfPoisonReverse.setStatus('mandatory')
nwDecIVProtoIfSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfSnooping.setStatus('mandatory')
nwDecIVProtoIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("bma", 2), ("nbma", 3))).clone('bma')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfType.setStatus('mandatory')
nwDecIVProtoIfXmitCost = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 15), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfXmitCost.setStatus('mandatory')
nwDecIVProtoIfAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfAclIdentifier.setStatus('mandatory')
nwDecIVProtoIfAclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfAclStatus.setStatus('mandatory')
nwDecIVProtoIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: nwDecIVProtoIfCtrTable.setStatus('mandatory')
nwDecIVProtoIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVProtoIfCtrIfIndex"))
if mibBuilder.loadTexts: nwDecIVProtoIfCtrEntry.setStatus('mandatory')
nwDecIVProtoIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrIfIndex.setStatus('mandatory')
nwDecIVProtoIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrAdminStatus.setStatus('mandatory')
nwDecIVProtoIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrReset.setStatus('mandatory')
nwDecIVProtoIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrOperationalTime.setStatus('mandatory')
nwDecIVProtoIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrInPkts.setStatus('mandatory')
nwDecIVProtoIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrOutPkts.setStatus('mandatory')
nwDecIVProtoIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrFilteredPkts.setStatus('mandatory')
nwDecIVProtoIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrDiscardPkts.setStatus('mandatory')
nwDecIVProtoIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrInBytes.setStatus('mandatory')
nwDecIVProtoIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrOutBytes.setStatus('mandatory')
nwDecIVProtoIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrFilteredBytes.setStatus('mandatory')
nwDecIVProtoIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 4, 1, 1, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVProtoIfCtrDiscardBytes.setStatus('mandatory')
nwDecIVFibTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 5, 1), )
if mibBuilder.loadTexts: nwDecIVFibTable.setStatus('mandatory')
nwDecIVFibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 5, 1, 1), ).setIndexNames((0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVFibNodeId"))
if mibBuilder.loadTexts: nwDecIVFibEntry.setStatus('mandatory')
nwDecIVFibNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 5, 1, 1, 1), DecIVAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVFibNodeId.setStatus('mandatory')
nwDecIVFibNextHopNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 5, 1, 1, 2), DecIVAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFibNextHopNodeId.setStatus('mandatory')
nwDecIVFibNextHopIf = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 5, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFibNextHopIf.setStatus('mandatory')
nwDecIVFibRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("remote", 4))).clone('direct')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVFibRouteType.setStatus('mandatory')
nwDecIVAclValidEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 7, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVAclValidEntries.setStatus('mandatory')
nwDecIVAclTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 7, 2), )
if mibBuilder.loadTexts: nwDecIVAclTable.setStatus('mandatory')
nwDecIVAclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 7, 2, 1), ).setIndexNames((0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVAclIdentifier"), (0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVAclSequence"))
if mibBuilder.loadTexts: nwDecIVAclEntry.setStatus('mandatory')
nwDecIVAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVAclIdentifier.setStatus('mandatory')
nwDecIVAclSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVAclSequence.setStatus('mandatory')
nwDecIVAclPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permit", 3), ("deny", 4), ("permit-bidirectional", 5), ("deny-bidirectional", 6))).clone('permit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVAclPermission.setStatus('mandatory')
nwDecIVAclMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVAclMatches.setStatus('mandatory')
nwDecIVAclDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 7, 2, 1, 5), DecIVAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVAclDestAddress.setStatus('mandatory')
nwDecIVAclSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 7, 2, 1, 6), DecIVAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVAclSrcAddress.setStatus('mandatory')
nwDecIVHostMapTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6, 3, 1), )
if mibBuilder.loadTexts: nwDecIVHostMapTable.setStatus('mandatory')
nwDecIVHostMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6, 3, 1, 1), ).setIndexNames((0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVHostMapIfIndex"), (0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVHostMapDecIVAddr"))
if mibBuilder.loadTexts: nwDecIVHostMapEntry.setStatus('mandatory')
nwDecIVHostMapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVHostMapIfIndex.setStatus('mandatory')
nwDecIVHostMapDecIVAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6, 3, 1, 1, 2), DecIVAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVHostMapDecIVAddr.setStatus('mandatory')
nwDecIVHostMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4), ("inactive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVHostMapType.setStatus('mandatory')
nwDecIVHostMapCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVHostMapCircuitID.setStatus('mandatory')
nwDecIVHostMapFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 8, 9, 11, 14, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("snap", 3), ("nativewan", 8), ("encapenet", 9), ("encapenetsnap", 11), ("encaptrsnap", 14), ("encapfddisnap", 16), ("canonical", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVHostMapFraming.setStatus('mandatory')
nwDecIVHostMapPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 6, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVHostMapPortNumber.setStatus('mandatory')
nwDecIVEventAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVEventAdminStatus.setStatus('mandatory')
nwDecIVEventMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 1, 2), Integer32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVEventMaxEntries.setStatus('mandatory')
nwDecIVEventTraceAll = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVEventTraceAll.setStatus('mandatory')
nwDecIVEventFilterTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 2, 1), )
if mibBuilder.loadTexts: nwDecIVEventFilterTable.setStatus('mandatory')
nwDecIVEventFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 2, 1, 1), ).setIndexNames((0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVEventFltrProtocol"), (0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVEventFltrIfNum"))
if mibBuilder.loadTexts: nwDecIVEventFilterEntry.setStatus('mandatory')
nwDecIVEventFltrProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVEventFltrProtocol.setStatus('mandatory')
nwDecIVEventFltrIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVEventFltrIfNum.setStatus('mandatory')
nwDecIVEventFltrControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("delete", 2), ("add", 3))).clone('add')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVEventFltrControl.setStatus('mandatory')
nwDecIVEventFltrType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64))).clone(namedValues=NamedValues(("misc", 1), ("timer", 2), ("rcv", 4), ("xmit", 8), ("event", 16), ("diags", 32), ("error", 64)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVEventFltrType.setStatus('mandatory')
nwDecIVEventFltrSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("highest", 1), ("highmed", 2), ("highlow", 3))).clone('highest')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVEventFltrSeverity.setStatus('mandatory')
nwDecIVEventFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("log", 1), ("trap", 2), ("log-trap", 3))).clone('log')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwDecIVEventFltrAction.setStatus('mandatory')
nwDecIVEventTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 3, 1), )
if mibBuilder.loadTexts: nwDecIVEventTable.setStatus('mandatory')
nwDecIVEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 3, 1, 1), ).setIndexNames((0, "CTRON-DECIV-ROUTER-MIB", "nwDecIVEventNumber"))
if mibBuilder.loadTexts: nwDecIVEventEntry.setStatus('mandatory')
nwDecIVEventNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVEventNumber.setStatus('mandatory')
nwDecIVEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 3, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVEventTime.setStatus('mandatory')
nwDecIVEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("misc", 1), ("timer", 2), ("rcv", 4), ("xmit", 8), ("event", 16), ("error", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVEventType.setStatus('mandatory')
nwDecIVEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("highest", 1), ("highmed", 2), ("highlow", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVEventSeverity.setStatus('mandatory')
nwDecIVEventProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVEventProtocol.setStatus('mandatory')
nwDecIVEventIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVEventIfNum.setStatus('mandatory')
nwDecIVEventTextString = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 3, 2, 10, 3, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwDecIVEventTextString.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-DECIV-ROUTER-MIB", nwDecIVRedirector=nwDecIVRedirector, nwDecIVFwdSystem=nwDecIVFwdSystem, nwDecIVMaxAreaCost=nwDecIVMaxAreaCost, nwDecIVFwdIfTable=nwDecIVFwdIfTable, nwDecIVAclEntry=nwDecIVAclEntry, nwDecIVFwdCtrDiscardPkts=nwDecIVFwdCtrDiscardPkts, nwDecIVEventLogFilterTable=nwDecIVEventLogFilterTable, nwDecIVFwdIfCtrOutBytes=nwDecIVFwdIfCtrOutBytes, nwDecIVProtoAgeOut=nwDecIVProtoAgeOut, nwDecIVProtoOperationalTime=nwDecIVProtoOperationalTime, nwDecIVProtoIfType=nwDecIVProtoIfType, nwDecIVEventIfNum=nwDecIVEventIfNum, nwDecIVProtoIfCtrDiscardPkts=nwDecIVProtoIfCtrDiscardPkts, nwDecIVFwdCtrInPkts=nwDecIVFwdCtrInPkts, nwDecIVEventAdminStatus=nwDecIVEventAdminStatus, nwDecIVFwdIfCtrInPkts=nwDecIVFwdIfCtrInPkts, nwDecIVNonBroadcastTimer=nwDecIVNonBroadcastTimer, nwDecIVFwdCtrHostOutPkts=nwDecIVFwdCtrHostOutPkts, nwDecIVProtoCtrInBytes=nwDecIVProtoCtrInBytes, nwDecIVProtoIfRequestDelay=nwDecIVProtoIfRequestDelay, nwDecIVProtoCtrInPkts=nwDecIVProtoCtrInPkts, nwDecIVRouter=nwDecIVRouter, nwDecIVSysOperStatus=nwDecIVSysOperStatus, nwDecIVProtoIfCtrReset=nwDecIVProtoIfCtrReset, nwDecIVEventTraceAll=nwDecIVEventTraceAll, nwDecIVAclIdentifier=nwDecIVAclIdentifier, nwDecIVFibNextHopNodeId=nwDecIVFibNextHopNodeId, nwDecIVProtoIfPriority=nwDecIVProtoIfPriority, nwDecIVProtoIfXmitCost=nwDecIVProtoIfXmitCost, nwDecIVFwdIfCacheControl=nwDecIVFwdIfCacheControl, nwDecIVFibNextHopIf=nwDecIVFibNextHopIf, nwDecIVFwdCtrFwdBytes=nwDecIVFwdCtrFwdBytes, nwDecIVTopology=nwDecIVTopology, nwDecIVProtoCtrReset=nwDecIVProtoCtrReset, nwDecIVWorkGroup=nwDecIVWorkGroup, nwDecIVProtoIfEntry=nwDecIVProtoIfEntry, nwDecIVProtoCtrDiscardPkts=nwDecIVProtoCtrDiscardPkts, nwDecIVFwdIfControl=nwDecIVFwdIfControl, nwDecIVAreas=nwDecIVAreas, nwDecIVFibEntry=nwDecIVFibEntry, nwDecIVFwdCtrLenErrPkts=nwDecIVFwdCtrLenErrPkts, nwDecIVFwdCtrAddrErrPkts=nwDecIVFwdCtrAddrErrPkts, nwDecIVFwdIfConfig=nwDecIVFwdIfConfig, nwDecIVProtoIfCtrTable=nwDecIVProtoIfCtrTable, nwDecIVSysConfig=nwDecIVSysConfig, nwDecIVProtoCtrOperationalTime=nwDecIVProtoCtrOperationalTime, nwDecIVEventNumber=nwDecIVEventNumber, nwDecIVProtoIfTable=nwDecIVProtoIfTable, nwDecIVSysAdminStatus=nwDecIVSysAdminStatus, nwDecIVFwdIfCtrDiscardBytes=nwDecIVFwdIfCtrDiscardBytes, nwDecIVFwdIfCtrHostOutBytes=nwDecIVFwdIfCtrHostOutBytes, nwDecIVEventFilterTable=nwDecIVEventFilterTable, nwDecIVFwdCtrHdrErrPkts=nwDecIVFwdCtrHdrErrPkts, nwDecIVFwdIfForwarding=nwDecIVFwdIfForwarding, nwDecIVFwdIfFrameType=nwDecIVFwdIfFrameType, nwDecIVEventSeverity=nwDecIVEventSeverity, nwDecIVFwdCtrHostDiscardPkts=nwDecIVFwdCtrHostDiscardPkts, nwDecIVEndSystems=nwDecIVEndSystems, nwDecIVProtoDatabaseThreshold=nwDecIVProtoDatabaseThreshold, nwDecIVFwdCtrInBytes=nwDecIVFwdCtrInBytes, nwDecIVMaxAreaHops=nwDecIVMaxAreaHops, nwDecIVProtoIfAdvertisement=nwDecIVProtoIfAdvertisement, nwDecIVAclDestAddress=nwDecIVAclDestAddress, nwDecIVFwdCtrAdminStatus=nwDecIVFwdCtrAdminStatus, nwDecIVFwdIfOperationalTime=nwDecIVFwdIfOperationalTime, nwDecIVProtoIfAdminStatus=nwDecIVProtoIfAdminStatus, nwDecIVSysAdminReset=nwDecIVSysAdminReset, nwDecIVFilters=nwDecIVFilters, nwDecIVFwdIfAclIdentifier=nwDecIVFwdIfAclIdentifier, nwDecIVProtoIfOperationalTime=nwDecIVProtoIfOperationalTime, nwDecIVEventEntry=nwDecIVEventEntry, nwDecIVProtoIfCounters=nwDecIVProtoIfCounters, nwDecIVMaxBEA=nwDecIVMaxBEA, nwDecIVProtoVersion=nwDecIVProtoVersion, nwDecIVFwdIfCtrFilteredPkts=nwDecIVFwdIfCtrFilteredPkts, nwDecIVHostMapTable=nwDecIVHostMapTable, nwDecIVEventMaxEntries=nwDecIVEventMaxEntries, nwDecIVFwdIfCtrHostDiscardPkts=nwDecIVFwdIfCtrHostDiscardPkts, nwDecIVProtoHoldDown=nwDecIVProtoHoldDown, nwDecIVFwdIfCtrDiscardPkts=nwDecIVFwdIfCtrDiscardPkts, nwDecIVNodeType=nwDecIVNodeType, nwDecIVMaxBRA=nwDecIVMaxBRA, nwDecIVProtoConfig=nwDecIVProtoConfig, nwDecIVFwdIfOperStatus=nwDecIVFwdIfOperStatus, nwDecIVProtoIfSnooping=nwDecIVProtoIfSnooping, nwDecIVFwdIfAclStatus=nwDecIVFwdIfAclStatus, nwDecIVFib=nwDecIVFib, nwDecIVEventFltrControl=nwDecIVEventFltrControl, nwDecIVAclPermission=nwDecIVAclPermission, nwDecIVAclSequence=nwDecIVAclSequence, nwDecIVProtoIfSplitHorizon=nwDecIVProtoIfSplitHorizon, nwDecIVFwdIfEntry=nwDecIVFwdIfEntry, nwDecIVFwdIfCacheHits=nwDecIVFwdIfCacheHits, nwDecIVProtoAdminStatus=nwDecIVProtoAdminStatus, nwDecIVProtoIfFloodDelay=nwDecIVProtoIfFloodDelay, nwDecIVAclValidEntries=nwDecIVAclValidEntries, nwDecIVFwdIfCtrHostInPkts=nwDecIVFwdIfCtrHostInPkts, nwDecIVProtoIfCtrFilteredBytes=nwDecIVProtoIfCtrFilteredBytes, nwDecIVAclSrcAddress=nwDecIVAclSrcAddress, nwDecIVProtoIfCtrInPkts=nwDecIVProtoIfCtrInPkts, nwDecIVProtoIfPoisonReverse=nwDecIVProtoIfPoisonReverse, nwDecIVEventTime=nwDecIVEventTime, nwDecIVProtoInterface=nwDecIVProtoInterface, nwDecIVEventFltrType=nwDecIVEventFltrType, nwDecIVFwdIfCtrEntry=nwDecIVFwdIfCtrEntry, nwDecIVHostMapType=nwDecIVHostMapType, nwDecIVEventLogConfig=nwDecIVEventLogConfig, nwDecIVHostsInterfaces=nwDecIVHostsInterfaces, nwDecIVFwdIfMtu=nwDecIVFwdIfMtu, nwDecIVSysAdministration=nwDecIVSysAdministration, nwDecIVFwdIfCtrOutPkts=nwDecIVFwdIfCtrOutPkts, nwDecIVFwdIfCtrAddrErrPkts=nwDecIVFwdIfCtrAddrErrPkts, nwDecIVFwdCtrFilteredBytes=nwDecIVFwdCtrFilteredBytes, nwDecIVHostMapCircuitID=nwDecIVHostMapCircuitID, nwDecIVHostsSystem=nwDecIVHostsSystem, nwDecIVProtoIfVersion=nwDecIVProtoIfVersion, nwDecIVProtoIfCtrInBytes=nwDecIVProtoIfCtrInBytes, nwDecIVHostMapEntry=nwDecIVHostMapEntry, nwDecIVProtoIfIndex=nwDecIVProtoIfIndex, nwDecIVHostsToMedia=nwDecIVHostsToMedia, nwDecIVProtoAdminReset=nwDecIVProtoAdminReset, nwDecIVProtoIfCtrDiscardBytes=nwDecIVProtoIfCtrDiscardBytes, nwDecIVComponents=nwDecIVComponents, nwDecIVEventTextString=nwDecIVEventTextString, nwDecIVMibRevText=nwDecIVMibRevText, nwDecIVAclTable=nwDecIVAclTable, nwDecIVEventTable=nwDecIVEventTable, nwDecIVProtoIfHelloTimer=nwDecIVProtoIfHelloTimer, nwDecIVFwdCtrHostOutBytes=nwDecIVFwdCtrHostOutBytes, nwDecIVForwarding=nwDecIVForwarding, nwDecIVProtoCtrFilteredPkts=nwDecIVProtoCtrFilteredPkts, nwDecIVProtoCtrOutPkts=nwDecIVProtoCtrOutPkts, nwDecIVFwdCtrOutBytes=nwDecIVFwdCtrOutBytes, nwDecIVHostMapIfIndex=nwDecIVHostMapIfIndex, nwDecIVFwdIfCtrReset=nwDecIVFwdIfCtrReset, nwDecIVFwdIfCtrHostInBytes=nwDecIVFwdIfCtrHostInBytes, nwDecIVFwdCtrOutPkts=nwDecIVFwdCtrOutPkts, nwDecIVEventFltrProtocol=nwDecIVEventFltrProtocol, nwDecIVEventFilterEntry=nwDecIVEventFilterEntry, nwDecIVSysVersion=nwDecIVSysVersion, nwDecIVProtoStackSize=nwDecIVProtoStackSize, nwDecIVFwdIfCtrFwdPkts=nwDecIVFwdIfCtrFwdPkts, nwDecIVEventProtocol=nwDecIVEventProtocol, nwDecIVAccessControl=nwDecIVAccessControl, nwDecIVFwdIfCacheMisses=nwDecIVFwdIfCacheMisses, nwDecIVMaxVisits=nwDecIVMaxVisits, nwDecIVProtoIfCtrOutBytes=nwDecIVProtoIfCtrOutBytes, nwDecIVSystem=nwDecIVSystem, nwDecIVProtoCtrAdminStatus=nwDecIVProtoCtrAdminStatus, nwDecIVFwdCtrFwdPkts=nwDecIVFwdCtrFwdPkts, nwDecIVFwdCtrHostInBytes=nwDecIVFwdCtrHostInBytes, nwDecIVFwdIfCounters=nwDecIVFwdIfCounters, nwDecIVProtoIfCtrOperationalTime=nwDecIVProtoIfCtrOperationalTime, nwDecIVProtoIfConfig=nwDecIVProtoIfConfig, nwDecIVFwdCtrFilteredPkts=nwDecIVFwdCtrFilteredPkts, nwDecIVFwdIfCtrFilteredBytes=nwDecIVFwdIfCtrFilteredBytes, nwDecIVProtoIfCtrIfIndex=nwDecIVProtoIfCtrIfIndex, nwDecIVFwdInterfaces=nwDecIVFwdInterfaces, nwDecIVFwdIfCtrOperationalTime=nwDecIVFwdIfCtrOperationalTime, nwDecIVFwdIfCtrHostDiscardBytes=nwDecIVFwdIfCtrHostDiscardBytes, nwDecIVFwdIfCtrIfIndex=nwDecIVFwdIfCtrIfIndex, nwDecIVProtoIfCtrFilteredPkts=nwDecIVProtoIfCtrFilteredPkts, nwDecIVEventFltrIfNum=nwDecIVEventFltrIfNum, nwDecIVLinkState=nwDecIVLinkState, nwDecIVFwdCounters=nwDecIVFwdCounters, DecIVAddress=DecIVAddress, nwDecIVProtoIfAclIdentifier=nwDecIVProtoIfAclIdentifier, nwDecIVFwdIfCtrLenErrPkts=nwDecIVFwdIfCtrLenErrPkts, nwDecIVMibs=nwDecIVMibs, nwDecIVProtoIfAclStatus=nwDecIVProtoIfAclStatus, nwDecIVEvent=nwDecIVEvent, nwDecIVDistanceVector=nwDecIVDistanceVector, nwDecIVBroadcastTimer=nwDecIVBroadcastTimer, nwDecIVProtoSystem=nwDecIVProtoSystem, nwDecIVFwdCtrReset=nwDecIVFwdCtrReset, nwDecIVFwdIfCtrFwdBytes=nwDecIVFwdIfCtrFwdBytes, nwDecIVFibNodeId=nwDecIVFibNodeId, nwDecIVMaxCost=nwDecIVMaxCost, nwDecIVProtoCtrFilteredBytes=nwDecIVProtoCtrFilteredBytes, nwDecIVEventType=nwDecIVEventType, nwDecIVFwdCtrHostInPkts=nwDecIVFwdCtrHostInPkts, nwDecIVFwdIfCtrHostOutPkts=nwDecIVFwdIfCtrHostOutPkts, nwDecIVProto=nwDecIVProto, nwDecIVProtoCtrOutBytes=nwDecIVProtoCtrOutBytes, nwDecIVEventFltrAction=nwDecIVEventFltrAction, nwDecIVFwdIfAdminStatus=nwDecIVFwdIfAdminStatus, nwDecIVAclMatches=nwDecIVAclMatches, nwDecIVFibRouteType=nwDecIVFibRouteType, nwDecIVSysOperationalTime=nwDecIVSysOperationalTime, nwDecIVFwdIfCtrHdrErrPkts=nwDecIVFwdIfCtrHdrErrPkts, nwDecIVHostMapFraming=nwDecIVHostMapFraming, nwDecIVMaxNodes=nwDecIVMaxNodes, nwDecIVFwdIfCtrAdminStatus=nwDecIVFwdIfCtrAdminStatus, nwDecIVFwdCtrOperationalTime=nwDecIVFwdCtrOperationalTime, nwDecIVProtoOperStatus=nwDecIVProtoOperStatus, nwDecIVFibTable=nwDecIVFibTable, nwDecIVProtoIfCtrAdminStatus=nwDecIVProtoIfCtrAdminStatus, nwDecIVProtoThreadPriority=nwDecIVProtoThreadPriority, nwDecIVEventFltrSeverity=nwDecIVEventFltrSeverity, nwDecIVMaxHops=nwDecIVMaxHops, nwDecIVFwdCtrHostDiscardBytes=nwDecIVFwdCtrHostDiscardBytes, nwDecIVFwdIfCtrTable=nwDecIVFwdIfCtrTable, nwDecIVSysRouterId=nwDecIVSysRouterId, nwDecIVFwdCtrDiscardBytes=nwDecIVFwdCtrDiscardBytes, nwDecIVProtoIfCtrOutPkts=nwDecIVProtoIfCtrOutPkts, nwDecIVProtoCtrDiscardBytes=nwDecIVProtoCtrDiscardBytes, nwDecIVProtoCounters=nwDecIVProtoCounters, nwDecIVFwdIfCtrInBytes=nwDecIVFwdIfCtrInBytes, nwDecIVHostMapDecIVAddr=nwDecIVHostMapDecIVAddr, nwDecIVProtoIfCtrEntry=nwDecIVProtoIfCtrEntry, nwDecIVEventLogTable=nwDecIVEventLogTable, nwDecIVProtoIfOperStatus=nwDecIVProtoIfOperStatus, nwDecIVHostMapPortNumber=nwDecIVHostMapPortNumber, nwDecIVFwdIfCacheEntries=nwDecIVFwdIfCacheEntries, nwDecIVFwdIfIndex=nwDecIVFwdIfIndex)
