#
# PySNMP MIB module CTRON-ALIAS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-ALIAS-MIB
# Produced by pysmi-1.1.12 at Mon Oct  7 02:52:49 2024
# On host fv-az775-99 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
ctAliasMib, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctAliasMib")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
TimeFilter, = mibBuilder.importSymbols("RMON2-MIB", "TimeFilter")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, iso, IpAddress, TimeTicks, MibIdentifier, Unsigned32, ObjectIdentity, NotificationType, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "iso", "IpAddress", "TimeTicks", "MibIdentifier", "Unsigned32", "ObjectIdentity", "NotificationType", "Counter32", "Gauge32")
TextualConvention, DisplayString, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "MacAddress")
cabletronAliasMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1))
cabletronAliasMib.setRevisions(('2013-02-15 14:30', '2011-02-14 15:25', '2003-04-22 13:39', '2002-01-30 13:01', '2002-01-23 20:56', '2002-01-18 20:22', '1999-09-26 00:00', '1999-09-04 00:00', '1999-08-06 00:00', '1999-07-28 00:00',))
if mibBuilder.loadTexts: cabletronAliasMib.setLastUpdated('201302151430Z')
if mibBuilder.loadTexts: cabletronAliasMib.setOrganization('Enterasys Networks, Inc')
class CabletronProtocolTC(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29))
    namedValues = NamedValues(("unknown", 0), ("ip", 1), ("apl", 2), ("mac", 3), ("hsrp", 4), ("dhcps", 5), ("dhcpc", 6), ("bootps", 7), ("bootpc", 8), ("ospf", 9), ("vrrp", 10), ("ipx", 11), ("xrip", 12), ("xsap", 13), ("xnlsp", 14), ("ipx20", 15), ("rtmp", 16), ("netBios", 17), ("nbt", 18), ("n802q", 19), ("bgp", 20), ("rip", 21), ("igrp", 22), ("dec", 23), ("bpdu", 24), ("udp", 25), ("ipv6", 26), ("mdns", 27), ("llmnr", 28), ("ssdp", 29))

class AliasAddress(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x '
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class CabletronProtocolBits(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("unknown", 0), ("ipv4", 1), ("apl", 2), ("mac", 3), ("hsrp", 4), ("dhcps", 5), ("dhcpc", 6), ("bootps", 7), ("bootpc", 8), ("ospf", 9), ("vrrp", 10), ("ipx", 11), ("xrip", 12), ("xsap", 13), ("xnlsp", 14), ("ipx20", 15), ("rtmp", 16), ("netBios", 17), ("nbt", 18), ("n802q", 19), ("bgp", 20), ("rip", 21), ("igrp", 22), ("dec", 23), ("bpdu", 24), ("udp", 25), ("ipv6", 26), ("mdns", 27), ("llmnr", 28), ("ssdp", 29))

ctAlias = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1))
ctAliasTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 1), )
if mibBuilder.loadTexts: ctAliasTable.setStatus('current')
ctAliasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 1, 1), ).setIndexNames((0, "CTRON-ALIAS-MIB", "ctAliasTimeFilter"), (0, "CTRON-ALIAS-MIB", "ctAliasReference"))
if mibBuilder.loadTexts: ctAliasEntry.setStatus('current')
ctAliasTimeFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 1, 1, 1), TimeFilter())
if mibBuilder.loadTexts: ctAliasTimeFilter.setStatus('current')
ctAliasReference = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: ctAliasReference.setStatus('current')
ctAliasInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 1, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasInterface.setStatus('current')
ctAliasMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasMacAddress.setStatus('current')
ctAliasVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 1, 1, 5), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasVlanID.setStatus('current')
ctAliasProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 1, 1, 6), CabletronProtocolTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasProtocol.setStatus('current')
ctAliasAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 1, 1, 7), AliasAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasAddress.setStatus('current')
ctAliasIsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasIsActive.setStatus('current')
ctAliasAddressText = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasAddressText.setStatus('current')
ctAliasControlTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 2), )
if mibBuilder.loadTexts: ctAliasControlTable.setStatus('current')
ctAliasControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 2, 1), ).setIndexNames((0, "CTRON-ALIAS-MIB", "ctAliasID"))
if mibBuilder.loadTexts: ctAliasControlEntry.setStatus('current')
ctAliasID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: ctAliasID.setStatus('current')
ctAliasMarkInactive = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAliasMarkInactive.setStatus('deprecated')
ctAliasEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("remove", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAliasEntryStatus.setStatus('current')
ctAliasStats = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 3))
ctAliasTableStatsTotalEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 3, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasTableStatsTotalEntries.setStatus('current')
ctAliasTableStatsActiveEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 3, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasTableStatsActiveEntries.setStatus('current')
ctAliasTableStatsPurgeTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 3, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasTableStatsPurgeTime.setStatus('current')
ctAliasTableStatsState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notStarted", 1), ("ready", 2), ("full", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasTableStatsState.setStatus('current')
ctAliasConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 4))
ctAliasConfigurationSystemAllocatedEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 4, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasConfigurationSystemAllocatedEntries.setStatus('current')
ctAliasConfigurationSystemTotalEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 4, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasConfigurationSystemTotalEntries.setStatus('current')
ctAliasConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 4, 3), )
if mibBuilder.loadTexts: ctAliasConfigurationTable.setStatus('current')
ctAliasConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 4, 3, 1), ).setIndexNames((0, "CTRON-ALIAS-MIB", "ctAliasInterface"))
if mibBuilder.loadTexts: ctAliasConfigurationEntry.setStatus('current')
ctAliasConfigurationInterfaceTotalEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 4, 3, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasConfigurationInterfaceTotalEntries.setStatus('current')
ctAliasConfigurationInterfaceMaxEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 4, 3, 1, 2), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAliasConfigurationInterfaceMaxEntries.setStatus('current')
ctAliasConfigurationInterfaceEnableState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 4, 3, 1, 3), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAliasConfigurationInterfaceEnableState.setStatus('current')
ctAliasConfigurationNumQueueWraps = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasConfigurationNumQueueWraps.setStatus('current')
ctAliasConfigurationProtocolEnableState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 4, 4), CabletronProtocolBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAliasConfigurationProtocolEnableState.setStatus('current')
ctAliasMacAddressTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 5), )
if mibBuilder.loadTexts: ctAliasMacAddressTable.setStatus('current')
ctAliasMacAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 5, 1), ).setIndexNames((0, "CTRON-ALIAS-MIB", "ctAliasMacAddress"), (0, "CTRON-ALIAS-MIB", "ctAliasProtocol"), (0, "CTRON-ALIAS-MIB", "ctAliasAddress"), (0, "CTRON-ALIAS-MIB", "ctAliasReference"))
if mibBuilder.loadTexts: ctAliasMacAddressEntry.setStatus('current')
ctAliasMacAddressInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 5, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasMacAddressInterface.setStatus('current')
ctAliasMacAddressVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 5, 1, 2), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasMacAddressVlanID.setStatus('current')
ctAliasMacAddressIsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasMacAddressIsActive.setStatus('current')
ctAliasMacAddressAddressText = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 5, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasMacAddressAddressText.setStatus('current')
ctAliasMacAddressTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 5, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasMacAddressTime.setStatus('current')
ctAliasProtocolAddressTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 6), )
if mibBuilder.loadTexts: ctAliasProtocolAddressTable.setStatus('current')
ctAliasProtocolAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 6, 1), ).setIndexNames((0, "CTRON-ALIAS-MIB", "ctAliasProtocol"), (0, "CTRON-ALIAS-MIB", "ctAliasAddress"), (0, "CTRON-ALIAS-MIB", "ctAliasMacAddress"), (0, "CTRON-ALIAS-MIB", "ctAliasReference"))
if mibBuilder.loadTexts: ctAliasProtocolAddressEntry.setStatus('current')
ctAliasProtocolAddressInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 6, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasProtocolAddressInterface.setStatus('current')
ctAliasProtocolAddressVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 6, 1, 2), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasProtocolAddressVlanID.setStatus('current')
ctAliasProtocolAddressIsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 6, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasProtocolAddressIsActive.setStatus('current')
ctAliasProtocolAddressAddressText = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 6, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasProtocolAddressAddressText.setStatus('current')
ctAliasProtocolAddressTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 6, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasProtocolAddressTime.setStatus('current')
ctAliasEntryClearAll = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAliasEntryClearAll.setStatus('current')
ctAliasInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 8), )
if mibBuilder.loadTexts: ctAliasInterfaceTable.setStatus('current')
ctAliasInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 8, 1), ).setIndexNames((0, "CTRON-ALIAS-MIB", "ctAliasInterface"), (0, "CTRON-ALIAS-MIB", "ctAliasReference"))
if mibBuilder.loadTexts: ctAliasInterfaceEntry.setStatus('current')
ctAliasInterfaceMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 8, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasInterfaceMacAddress.setStatus('current')
ctAliasInterfaceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 8, 1, 2), CabletronProtocolTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasInterfaceProtocol.setStatus('current')
ctAliasInterfaceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 8, 1, 3), AliasAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasInterfaceAddress.setStatus('current')
ctAliasInterfaceVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 8, 1, 4), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasInterfaceVlanID.setStatus('current')
ctAliasInterfaceIsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 8, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasInterfaceIsActive.setStatus('current')
ctAliasInterfaceAddressText = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 8, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasInterfaceAddressText.setStatus('current')
ctAliasInterfaceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 1, 1, 8, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAliasInterfaceTime.setStatus('current')
ctAliasConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2))
ctAliasGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1))
ctAliasCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 2))
ctAliasBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1, 1)).setObjects(("CTRON-ALIAS-MIB", "ctAliasInterface"), ("CTRON-ALIAS-MIB", "ctAliasMacAddress"), ("CTRON-ALIAS-MIB", "ctAliasVlanID"), ("CTRON-ALIAS-MIB", "ctAliasProtocol"), ("CTRON-ALIAS-MIB", "ctAliasAddress"), ("CTRON-ALIAS-MIB", "ctAliasIsActive"), ("CTRON-ALIAS-MIB", "ctAliasAddressText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasBasicGroup = ctAliasBasicGroup.setStatus('current')
ctAliasStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1, 2)).setObjects(("CTRON-ALIAS-MIB", "ctAliasTableStatsTotalEntries"), ("CTRON-ALIAS-MIB", "ctAliasTableStatsActiveEntries"), ("CTRON-ALIAS-MIB", "ctAliasTableStatsPurgeTime"), ("CTRON-ALIAS-MIB", "ctAliasTableStatsState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasStatsGroup = ctAliasStatsGroup.setStatus('current')
ctAliasControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1, 3)).setObjects(("CTRON-ALIAS-MIB", "ctAliasMarkInactive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasControlGroup = ctAliasControlGroup.setStatus('deprecated')
ctAliasConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1, 4)).setObjects(("CTRON-ALIAS-MIB", "ctAliasConfigurationSystemAllocatedEntries"), ("CTRON-ALIAS-MIB", "ctAliasConfigurationSystemTotalEntries"), ("CTRON-ALIAS-MIB", "ctAliasConfigurationInterfaceTotalEntries"), ("CTRON-ALIAS-MIB", "ctAliasConfigurationInterfaceMaxEntries"), ("CTRON-ALIAS-MIB", "ctAliasConfigurationInterfaceEnableState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasConfigurationGroup = ctAliasConfigurationGroup.setStatus('deprecated')
ctAliasMacAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1, 5)).setObjects(("CTRON-ALIAS-MIB", "ctAliasMacAddressInterface"), ("CTRON-ALIAS-MIB", "ctAliasMacAddressVlanID"), ("CTRON-ALIAS-MIB", "ctAliasMacAddressIsActive"), ("CTRON-ALIAS-MIB", "ctAliasMacAddressAddressText"), ("CTRON-ALIAS-MIB", "ctAliasMacAddressTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasMacAddressGroup = ctAliasMacAddressGroup.setStatus('current')
ctAliasProtocolAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1, 6)).setObjects(("CTRON-ALIAS-MIB", "ctAliasProtocolAddressInterface"), ("CTRON-ALIAS-MIB", "ctAliasProtocolAddressVlanID"), ("CTRON-ALIAS-MIB", "ctAliasProtocolAddressIsActive"), ("CTRON-ALIAS-MIB", "ctAliasProtocolAddressAddressText"), ("CTRON-ALIAS-MIB", "ctAliasProtocolAddressTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasProtocolAddressGroup = ctAliasProtocolAddressGroup.setStatus('current')
ctAliasControlGroupI = ObjectGroup((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1, 7)).setObjects(("CTRON-ALIAS-MIB", "ctAliasEntryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasControlGroupI = ctAliasControlGroupI.setStatus('current')
ctAliasGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1, 8)).setObjects(("CTRON-ALIAS-MIB", "ctAliasEntryClearAll"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasGroup = ctAliasGroup.setStatus('current')
ctAliasConfigurationGroupI = ObjectGroup((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1, 9)).setObjects(("CTRON-ALIAS-MIB", "ctAliasConfigurationNumQueueWraps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasConfigurationGroupI = ctAliasConfigurationGroupI.setStatus('current')
ctAliasConfigurationGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1, 10)).setObjects(("CTRON-ALIAS-MIB", "ctAliasConfigurationSystemAllocatedEntries"), ("CTRON-ALIAS-MIB", "ctAliasConfigurationSystemTotalEntries"), ("CTRON-ALIAS-MIB", "ctAliasConfigurationInterfaceTotalEntries"), ("CTRON-ALIAS-MIB", "ctAliasConfigurationInterfaceMaxEntries"), ("CTRON-ALIAS-MIB", "ctAliasConfigurationInterfaceEnableState"), ("CTRON-ALIAS-MIB", "ctAliasConfigurationProtocolEnableState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasConfigurationGroup2 = ctAliasConfigurationGroup2.setStatus('current')
ctAliasInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 1, 11)).setObjects(("CTRON-ALIAS-MIB", "ctAliasInterfaceMacAddress"), ("CTRON-ALIAS-MIB", "ctAliasInterfaceProtocol"), ("CTRON-ALIAS-MIB", "ctAliasInterfaceAddress"), ("CTRON-ALIAS-MIB", "ctAliasInterfaceVlanID"), ("CTRON-ALIAS-MIB", "ctAliasInterfaceIsActive"), ("CTRON-ALIAS-MIB", "ctAliasInterfaceAddressText"), ("CTRON-ALIAS-MIB", "ctAliasInterfaceTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasInterfaceGroup = ctAliasInterfaceGroup.setStatus('current')
ctAliasCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 2, 1)).setObjects(("CTRON-ALIAS-MIB", "ctAliasBasicGroup"), ("CTRON-ALIAS-MIB", "ctAliasStatsGroup"), ("CTRON-ALIAS-MIB", "ctAliasGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasCompliance = ctAliasCompliance.setStatus('current')
ctAliasCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 52, 4, 1, 3, 7, 2, 2, 2)).setObjects(("CTRON-ALIAS-MIB", "ctAliasBasicGroup"), ("CTRON-ALIAS-MIB", "ctAliasStatsGroup"), ("CTRON-ALIAS-MIB", "ctAliasGroup"), ("CTRON-ALIAS-MIB", "ctAliasMacAddressGroup"), ("CTRON-ALIAS-MIB", "ctAliasProtocolAddressGroup"), ("CTRON-ALIAS-MIB", "ctAliasControlGroupI"), ("CTRON-ALIAS-MIB", "ctAliasGroup"), ("CTRON-ALIAS-MIB", "ctAliasConfigurationGroupI"), ("CTRON-ALIAS-MIB", "ctAliasConfigurationGroup2"), ("CTRON-ALIAS-MIB", "ctAliasInterfaceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctAliasCompliance2 = ctAliasCompliance2.setStatus('current')
mibBuilder.exportSymbols("CTRON-ALIAS-MIB", ctAliasConfigurationGroup2=ctAliasConfigurationGroup2, ctAliasProtocolAddressIsActive=ctAliasProtocolAddressIsActive, ctAliasMacAddressTime=ctAliasMacAddressTime, ctAliasInterface=ctAliasInterface, ctAliasControlTable=ctAliasControlTable, ctAliasConfigurationSystemAllocatedEntries=ctAliasConfigurationSystemAllocatedEntries, ctAliasMacAddress=ctAliasMacAddress, ctAliasInterfaceTable=ctAliasInterfaceTable, ctAliasConformance=ctAliasConformance, CabletronProtocolBits=CabletronProtocolBits, ctAliasAddressText=ctAliasAddressText, AliasAddress=AliasAddress, ctAliasEntry=ctAliasEntry, ctAliasMacAddressTable=ctAliasMacAddressTable, ctAliasConfigurationProtocolEnableState=ctAliasConfigurationProtocolEnableState, ctAliasProtocol=ctAliasProtocol, ctAliasTableStatsPurgeTime=ctAliasTableStatsPurgeTime, ctAliasMacAddressVlanID=ctAliasMacAddressVlanID, ctAliasInterfaceProtocol=ctAliasInterfaceProtocol, ctAliasInterfaceAddress=ctAliasInterfaceAddress, ctAliasConfiguration=ctAliasConfiguration, ctAliasAddress=ctAliasAddress, ctAliasInterfaceGroup=ctAliasInterfaceGroup, ctAliasGroup=ctAliasGroup, ctAliasConfigurationGroupI=ctAliasConfigurationGroupI, ctAliasCompliance2=ctAliasCompliance2, ctAliasCompliances=ctAliasCompliances, ctAliasMacAddressAddressText=ctAliasMacAddressAddressText, ctAliasTable=ctAliasTable, ctAliasTableStatsState=ctAliasTableStatsState, ctAliasConfigurationEntry=ctAliasConfigurationEntry, ctAliasControlEntry=ctAliasControlEntry, PYSNMP_MODULE_ID=cabletronAliasMib, ctAliasConfigurationInterfaceEnableState=ctAliasConfigurationInterfaceEnableState, ctAliasControlGroup=ctAliasControlGroup, CabletronProtocolTC=CabletronProtocolTC, ctAliasInterfaceEntry=ctAliasInterfaceEntry, ctAliasMacAddressIsActive=ctAliasMacAddressIsActive, ctAliasConfigurationNumQueueWraps=ctAliasConfigurationNumQueueWraps, ctAliasInterfaceIsActive=ctAliasInterfaceIsActive, ctAliasMacAddressEntry=ctAliasMacAddressEntry, ctAliasProtocolAddressTime=ctAliasProtocolAddressTime, ctAliasVlanID=ctAliasVlanID, cabletronAliasMib=cabletronAliasMib, ctAliasConfigurationGroup=ctAliasConfigurationGroup, ctAliasProtocolAddressAddressText=ctAliasProtocolAddressAddressText, ctAliasID=ctAliasID, ctAliasInterfaceAddressText=ctAliasInterfaceAddressText, ctAliasMacAddressInterface=ctAliasMacAddressInterface, ctAliasStatsGroup=ctAliasStatsGroup, ctAliasReference=ctAliasReference, ctAliasIsActive=ctAliasIsActive, ctAliasInterfaceMacAddress=ctAliasInterfaceMacAddress, ctAlias=ctAlias, ctAliasInterfaceTime=ctAliasInterfaceTime, ctAliasInterfaceVlanID=ctAliasInterfaceVlanID, ctAliasGroups=ctAliasGroups, ctAliasEntryStatus=ctAliasEntryStatus, ctAliasTimeFilter=ctAliasTimeFilter, ctAliasTableStatsActiveEntries=ctAliasTableStatsActiveEntries, ctAliasProtocolAddressGroup=ctAliasProtocolAddressGroup, ctAliasMacAddressGroup=ctAliasMacAddressGroup, ctAliasCompliance=ctAliasCompliance, ctAliasConfigurationInterfaceTotalEntries=ctAliasConfigurationInterfaceTotalEntries, ctAliasConfigurationInterfaceMaxEntries=ctAliasConfigurationInterfaceMaxEntries, ctAliasStats=ctAliasStats, ctAliasProtocolAddressInterface=ctAliasProtocolAddressInterface, ctAliasControlGroupI=ctAliasControlGroupI, ctAliasMarkInactive=ctAliasMarkInactive, ctAliasProtocolAddressTable=ctAliasProtocolAddressTable, ctAliasProtocolAddressVlanID=ctAliasProtocolAddressVlanID, ctAliasBasicGroup=ctAliasBasicGroup, ctAliasConfigurationSystemTotalEntries=ctAliasConfigurationSystemTotalEntries, ctAliasTableStatsTotalEntries=ctAliasTableStatsTotalEntries, ctAliasProtocolAddressEntry=ctAliasProtocolAddressEntry, ctAliasConfigurationTable=ctAliasConfigurationTable, ctAliasEntryClearAll=ctAliasEntryClearAll)
