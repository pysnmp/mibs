#
# PySNMP MIB module CTMMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/ctm/CTMMIBV2
# Produced by pysmi-1.1.12 at Mon Jun  3 12:21:08 2024
# On host fv-az1530-743 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, TimeTicks, Gauge32, enterprises, IpAddress, NotificationType, ObjectIdentity, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter32, Counter64, Integer32, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Gauge32", "enterprises", "IpAddress", "NotificationType", "ObjectIdentity", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter32", "Counter64", "Integer32", "Unsigned32", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
lastmilegear = MibIdentifier((1, 3, 6, 1, 4, 1, 25868))
mibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25868, 1))
version = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: version.setStatus('mandatory')
site = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: site.setStatus('mandatory')
lastIP = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lastIP.setStatus('mandatory')
lastTime = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lastTime.setStatus('mandatory')
nSats = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nSats.setStatus('mandatory')
pwrP = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwrP.setStatus('mandatory')
pwrS = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwrS.setStatus('mandatory')
cbTrip = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbTrip.setStatus('mandatory')
tempC = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempC.setStatus('mandatory')
voltsM1 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltsM1.setStatus('mandatory')
voltsM2 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltsM2.setStatus('mandatory')
portOnM = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portOnM.setStatus('mandatory')
portSyncM = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portSyncM.setStatus('mandatory')
portPwrM1 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM1.setStatus('mandatory')
portPwrM2 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM2.setStatus('mandatory')
portPwrM3 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM3.setStatus('mandatory')
portPwrM4 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM4.setStatus('mandatory')
portPwrM5 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM5.setStatus('mandatory')
portPwrM6 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM6.setStatus('mandatory')
portPwrM7 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM7.setStatus('mandatory')
portPwrM8 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM8.setStatus('mandatory')
modeReqM = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 39), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modeReqM.setStatus('mandatory')
trpCntGM1 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM1.setStatus('mandatory')
trpCntGM2 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM2.setStatus('mandatory')
trpCntGM3 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM3.setStatus('mandatory')
trpCntGM4 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM4.setStatus('mandatory')
trpCntGM5 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM5.setStatus('mandatory')
trpCntGM6 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM6.setStatus('mandatory')
trpCntGM7 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM7.setStatus('mandatory')
trpCntGM8 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM8.setStatus('mandatory')
trpCntBM1 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM1.setStatus('mandatory')
trpCntBM2 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM2.setStatus('mandatory')
trpCntBM3 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM3.setStatus('mandatory')
trpCntBM4 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM4.setStatus('mandatory')
trpCntBM5 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM5.setStatus('mandatory')
trpCntBM6 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM6.setStatus('mandatory')
trpCntBM7 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM7.setStatus('mandatory')
trpCntBM8 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM8.setStatus('mandatory')
lostEthernetConnection = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,0))
masterPrimayPowerLost = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,1))
masterSecondaryPowerLost = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,2))
gpsSignalLost = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,3))
masterTempatureError = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,4))
masterCircuitBreakerTripCode = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,5))
loginFailedAttempt = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,6))
settingsChanged = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,7))
masterPrimaryPowerOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,10))
masterSecondaryPowerOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,20))
gpsSignalOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,30))
tempatureOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,40))
circuitBreakersOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,50))
masterAutoRestartCBCompletedOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,52))
loginOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,60))
resetComplete = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,80))
ethernetConnectionRestored = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,99))
mibBuilder.exportSymbols("CTMMIB", portPwrM7=portPwrM7, portSyncM=portSyncM, lastIP=lastIP, masterTempatureError=masterTempatureError, trpCntBM8=trpCntBM8, voltsM2=voltsM2, masterPrimaryPowerOK=masterPrimaryPowerOK, lostEthernetConnection=lostEthernetConnection, trpCntGM2=trpCntGM2, trpCntBM1=trpCntBM1, version=version, gpsSignalOK=gpsSignalOK, trpCntGM6=trpCntGM6, trpCntBM2=trpCntBM2, trpCntGM4=trpCntGM4, tempC=tempC, portOnM=portOnM, mibObjects=mibObjects, tempatureOK=tempatureOK, modeReqM=modeReqM, voltsM1=voltsM1, trpCntGM1=trpCntGM1, trpCntGM3=trpCntGM3, masterPrimayPowerLost=masterPrimayPowerLost, portPwrM1=portPwrM1, trpCntGM5=trpCntGM5, site=site, masterAutoRestartCBCompletedOK=masterAutoRestartCBCompletedOK, masterSecondaryPowerLost=masterSecondaryPowerLost, ethernetConnectionRestored=ethernetConnectionRestored, trpCntBM5=trpCntBM5, portPwrM4=portPwrM4, trpCntGM8=trpCntGM8, trpCntBM3=trpCntBM3, lastTime=lastTime, portPwrM6=portPwrM6, gpsSignalLost=gpsSignalLost, circuitBreakersOK=circuitBreakersOK, portPwrM5=portPwrM5, portPwrM8=portPwrM8, loginFailedAttempt=loginFailedAttempt, resetComplete=resetComplete, cbTrip=cbTrip, trpCntGM7=trpCntGM7, masterSecondaryPowerOK=masterSecondaryPowerOK, pwrP=pwrP, masterCircuitBreakerTripCode=masterCircuitBreakerTripCode, loginOK=loginOK, pwrS=pwrS, trpCntBM7=trpCntBM7, settingsChanged=settingsChanged, trpCntBM4=trpCntBM4, portPwrM2=portPwrM2, lastmilegear=lastmilegear, trpCntBM6=trpCntBM6, portPwrM3=portPwrM3, nSats=nSats)
