#
# PySNMP MIB module RS-XX9-DVBT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/rs/RS-XX9-DVBT-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 13:33:57 2024
# On host fv-az883-167 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
commonNotificationAlarmClass, = mibBuilder.importSymbols("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass")
rsXx9MibModule, rsXx9DvbT = mibBuilder.importSymbols("RS-XX9-SMI-MIB", "rsXx9MibModule", "rsXx9DvbT")
NotificationMask, NotificationPriority, IndexAB, SwitchOnOff, IndexTransmitter, NotificationState = mibBuilder.importSymbols("RS-XX9-TC-MIB", "NotificationMask", "NotificationPriority", "IndexAB", "SwitchOnOff", "IndexTransmitter", "NotificationState")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, Integer32, NotificationType, IpAddress, iso, ModuleIdentity, Gauge32, Bits, Counter32, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "NotificationType", "IpAddress", "iso", "ModuleIdentity", "Gauge32", "Bits", "Counter32", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
rsXx9DvbtMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 1, 216, 6))
rsXx9DvbtMibModule.setRevisions(('2014-12-22 16:00', '2014-02-05 16:00', '2012-02-23 08:00',))
if mibBuilder.loadTexts: rsXx9DvbtMibModule.setLastUpdated('201412221600Z')
if mibBuilder.loadTexts: rsXx9DvbtMibModule.setOrganization('Rohde&Schwarz GmbH & Co. KG')
class DvbtChannelBandwidth(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 4, 5, 6, 7))
    namedValues = NamedValues(("undefined", 1), ("mhz5", 4), ("mhz6", 5), ("mhz7", 6), ("mhz8", 7))

class DvbtFftSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5))
    namedValues = NamedValues(("undefined", 1), ("k2", 3), ("k4", 4), ("k8", 5))

class DvbtGuardInterval(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("undefined", 1), ("oneDiv32", 2), ("oneDiv16", 3), ("oneDiv8", 4), ("oneDiv4", 5))

class DvbtModulation(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 4, 5, 6))
    namedValues = NamedValues(("undefined", 1), ("qpsk", 4), ("qam16", 5), ("qam64", 6))

class DvbtCodeRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 7, 8))
    namedValues = NamedValues(("undefined", 1), ("oneHalf", 2), ("twoThird", 4), ("threeFourth", 5), ("fiveSixth", 7), ("sevenEighth", 8))

class DvbtInterleave(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("nat", 1), ("inDepth", 2))

rsXx9DvbtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 0))
dvbtEncoderSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 0, 1)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT-MIB", "dvbtStatusNotificationPriority"), ("RS-XX9-DVBT-MIB", "dvbtStatusNotificationState"))
if mibBuilder.loadTexts: dvbtEncoderSummary.setStatus('current')
dvbtTest = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 0, 2)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-DVBT-MIB", "dvbtStatusNotificationPriority"), ("RS-XX9-DVBT-MIB", "dvbtStatusNotificationState"))
if mibBuilder.loadTexts: dvbtTest.setStatus('current')
rsXx9DvbtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1))
dvbtStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1))
dvbtStatusNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 1), )
if mibBuilder.loadTexts: dvbtStatusNotificationTable.setStatus('current')
dvbtStatusNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 1, 1), ).setIndexNames((0, "RS-XX9-DVBT-MIB", "dvbtStatusNotificationTxIdx"), (0, "RS-XX9-DVBT-MIB", "dvbtStatusNotificationExcIdx"), (0, "RS-XX9-DVBT-MIB", "dvbtStatusNotificationIdx"))
if mibBuilder.loadTexts: dvbtStatusNotificationEntry.setStatus('current')
dvbtStatusNotificationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: dvbtStatusNotificationTxIdx.setStatus('current')
dvbtStatusNotificationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: dvbtStatusNotificationExcIdx.setStatus('current')
dvbtStatusNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: dvbtStatusNotificationIdx.setStatus('current')
dvbtStatusNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dvbtEncoderSummary", 1), ("dvbtTest", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtStatusNotificationName.setStatus('current')
dvbtStatusNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 1, 1, 5), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtStatusNotificationMask.setStatus('current')
dvbtStatusNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 1, 1, 6), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtStatusNotificationPriority.setStatus('current')
dvbtStatusNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 1, 1, 7), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtStatusNotificationState.setStatus('current')
dvbtStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 2), )
if mibBuilder.loadTexts: dvbtStateTable.setStatus('current')
dvbtStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 2, 1), ).setIndexNames((0, "RS-XX9-DVBT-MIB", "dvbtStatusNotificationTxIdx"), (0, "RS-XX9-DVBT-MIB", "dvbtStatusNotificationExcIdx"))
if mibBuilder.loadTexts: dvbtStateEntry.setStatus('current')
dvbtStTxFrequencyOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 2, 1, 1), Integer32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtStTxFrequencyOffset.setStatus('current')
dvbtStTxDelayOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 2, 1, 2), Integer32()).setUnits('1/10 micro second').setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtStTxDelayOffset.setStatus('current')
dvbtStCellId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("ok", 2), ("notPresent", 3), ("txControlDisabled", 4), ("txAddressFail", 5), ("mipFail", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtStCellId.setStatus('current')
dvbtSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2))
dvbtConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 1), )
if mibBuilder.loadTexts: dvbtConfigurationTable.setStatus('current')
dvbtConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 1, 1), ).setIndexNames((0, "RS-XX9-DVBT-MIB", "dvbtConfigurationTxIdx"), (0, "RS-XX9-DVBT-MIB", "dvbtConfigurationExcIdx"))
if mibBuilder.loadTexts: dvbtConfigurationEntry.setStatus('current')
dvbtConfigurationTxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 1, 1, 1), IndexTransmitter())
if mibBuilder.loadTexts: dvbtConfigurationTxIdx.setStatus('current')
dvbtConfigurationExcIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 1, 1, 2), IndexAB())
if mibBuilder.loadTexts: dvbtConfigurationExcIdx.setStatus('current')
dvbtConfigurationModulationSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("mip", 2), ("manual", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtConfigurationModulationSource.setStatus('current')
dvbtConfigurationDigitalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("dvbT", 2), ("dvbH", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtConfigurationDigitalMode.setStatus('current')
dvbtLocalizationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 2), )
if mibBuilder.loadTexts: dvbtLocalizationTable.setStatus('current')
dvbtLocalizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 2, 1), )
dvbtConfigurationEntry.registerAugmentions(("RS-XX9-DVBT-MIB", "dvbtLocalizationEntry"))
dvbtLocalizationEntry.setIndexNames(*dvbtConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbtLocalizationEntry.setStatus('current')
dvbtLocalizationTxControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("on", 2), ("off", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtLocalizationTxControl.setStatus('current')
dvbtLocalizationTxAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtLocalizationTxAddress.setStatus('current')
dvbtLocalizationCellIdSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("mip", 2), ("manual", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtLocalizationCellIdSource.setStatus('current')
dvbtLocalizationCellId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtLocalizationCellId.setStatus('current')
dvbtModulationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 3), )
if mibBuilder.loadTexts: dvbtModulationTable.setStatus('current')
dvbtModulationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 3, 1), )
dvbtConfigurationEntry.registerAugmentions(("RS-XX9-DVBT-MIB", "dvbtModulationEntry"))
dvbtModulationEntry.setIndexNames(*dvbtConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbtModulationEntry.setStatus('current')
dvbtModulationChannelBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 3, 1, 3), DvbtChannelBandwidth()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtModulationChannelBandwidth.setStatus('current')
dvbtModulationFftMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 3, 1, 4), DvbtFftSize()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtModulationFftMode.setStatus('current')
dvbtModulationGuardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 3, 1, 5), DvbtGuardInterval()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtModulationGuardInterval.setStatus('current')
dvbtModulationConstellation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 3, 1, 6), DvbtModulation()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtModulationConstellation.setStatus('current')
dvbtModulationCodeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 3, 1, 7), DvbtCodeRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtModulationCodeRate.setStatus('current')
dvbtModulationMpeFEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 3, 1, 8), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtModulationMpeFEC.setStatus('current')
dvbtModulationTimeSlicing = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 3, 1, 9), SwitchOnOff()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtModulationTimeSlicing.setStatus('current')
dvbtModulationInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 3, 1, 10), DvbtInterleave()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtModulationInterleave.setStatus('current')
dvbtTestTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 4), )
if mibBuilder.loadTexts: dvbtTestTable.setStatus('current')
dvbtTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 4, 1), )
dvbtConfigurationEntry.registerAugmentions(("RS-XX9-DVBT-MIB", "dvbtTestEntry"))
dvbtTestEntry.setIndexNames(*dvbtConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbtTestEntry.setStatus('current')
dvbtTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6))).clone(namedValues=NamedValues(("off", 1), ("prbs", 2), ("singleCarrier", 3), ("mute1P1SymOfSuperFrame", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtTestMode.setStatus('current')
dvbtOutput = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3))
dvbtOutLocalizationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 2), )
if mibBuilder.loadTexts: dvbtOutLocalizationTable.setStatus('current')
dvbtOutLocalizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 2, 1), )
dvbtConfigurationEntry.registerAugmentions(("RS-XX9-DVBT-MIB", "dvbtOutLocalizationEntry"))
dvbtOutLocalizationEntry.setIndexNames(*dvbtConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbtOutLocalizationEntry.setStatus('current')
dvbtOutLocalizationCellId = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dvbtOutLocalizationCellId.setStatus('current')
dvbtOutModulationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 3), )
if mibBuilder.loadTexts: dvbtOutModulationTable.setStatus('current')
dvbtOutModulationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 3, 1), )
dvbtConfigurationEntry.registerAugmentions(("RS-XX9-DVBT-MIB", "dvbtOutModulationEntry"))
dvbtOutModulationEntry.setIndexNames(*dvbtConfigurationEntry.getIndexNames())
if mibBuilder.loadTexts: dvbtOutModulationEntry.setStatus('current')
dvbtOutModulationChannelBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 3, 1, 3), DvbtChannelBandwidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtOutModulationChannelBandwidth.setStatus('current')
dvbtOutModulationFftMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 3, 1, 4), DvbtFftSize()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtOutModulationFftMode.setStatus('current')
dvbtOutModulationGuardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 3, 1, 5), DvbtGuardInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtOutModulationGuardInterval.setStatus('current')
dvbtOutModulationConstellation = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 3, 1, 6), DvbtModulation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtOutModulationConstellation.setStatus('current')
dvbtOutModulationCodeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 3, 1, 7), DvbtCodeRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtOutModulationCodeRate.setStatus('current')
dvbtOutModulationMpeFEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 3, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtOutModulationMpeFEC.setStatus('current')
dvbtOutModulationTimeSlicing = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 3, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtOutModulationTimeSlicing.setStatus('current')
dvbtOutModulationInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 1, 3, 3, 1, 10), DvbtInterleave()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dvbtOutModulationInterleave.setStatus('current')
rsXx9DvbtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 2))
rsXx9DvbtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 2, 1))
dvbtBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 2, 1, 1)).setObjects(("RS-XX9-DVBT-MIB", "dvbtObjBasic"), ("RS-XX9-DVBT-MIB", "dvbtNotifyBasic"), ("RS-XX9-DVBT-MIB", "dvbtObjDvbH"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbtBasicCompliance = dvbtBasicCompliance.setStatus('current')
rsXx9DvbtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 2, 2))
dvbtObjBasic = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 2, 2, 1)).setObjects(("RS-XX9-DVBT-MIB", "dvbtStatusNotificationName"), ("RS-XX9-DVBT-MIB", "dvbtStatusNotificationMask"), ("RS-XX9-DVBT-MIB", "dvbtStatusNotificationPriority"), ("RS-XX9-DVBT-MIB", "dvbtStatusNotificationState"), ("RS-XX9-DVBT-MIB", "dvbtConfigurationModulationSource"), ("RS-XX9-DVBT-MIB", "dvbtModulationChannelBandwidth"), ("RS-XX9-DVBT-MIB", "dvbtModulationFftMode"), ("RS-XX9-DVBT-MIB", "dvbtModulationGuardInterval"), ("RS-XX9-DVBT-MIB", "dvbtModulationConstellation"), ("RS-XX9-DVBT-MIB", "dvbtModulationCodeRate"), ("RS-XX9-DVBT-MIB", "dvbtLocalizationCellId"), ("RS-XX9-DVBT-MIB", "dvbtLocalizationCellIdSource"), ("RS-XX9-DVBT-MIB", "dvbtLocalizationTxAddress"), ("RS-XX9-DVBT-MIB", "dvbtLocalizationTxControl"), ("RS-XX9-DVBT-MIB", "dvbtOutModulationCodeRate"), ("RS-XX9-DVBT-MIB", "dvbtOutModulationConstellation"), ("RS-XX9-DVBT-MIB", "dvbtOutModulationGuardInterval"), ("RS-XX9-DVBT-MIB", "dvbtOutModulationFftMode"), ("RS-XX9-DVBT-MIB", "dvbtOutModulationChannelBandwidth"), ("RS-XX9-DVBT-MIB", "dvbtOutLocalizationCellId"), ("RS-XX9-DVBT-MIB", "dvbtConfigurationDigitalMode"), ("RS-XX9-DVBT-MIB", "dvbtTestMode"), ("RS-XX9-DVBT-MIB", "dvbtStCellId"), ("RS-XX9-DVBT-MIB", "dvbtStTxDelayOffset"), ("RS-XX9-DVBT-MIB", "dvbtStTxFrequencyOffset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbtObjBasic = dvbtObjBasic.setStatus('current')
dvbtNotifyBasic = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 2, 2, 101)).setObjects(("RS-XX9-DVBT-MIB", "dvbtEncoderSummary"), ("RS-XX9-DVBT-MIB", "dvbtTest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbtNotifyBasic = dvbtNotifyBasic.setStatus('current')
dvbtObjDvbH = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 6, 2, 2, 102)).setObjects(("RS-XX9-DVBT-MIB", "dvbtModulationMpeFEC"), ("RS-XX9-DVBT-MIB", "dvbtModulationTimeSlicing"), ("RS-XX9-DVBT-MIB", "dvbtModulationInterleave"), ("RS-XX9-DVBT-MIB", "dvbtOutModulationMpeFEC"), ("RS-XX9-DVBT-MIB", "dvbtOutModulationTimeSlicing"), ("RS-XX9-DVBT-MIB", "dvbtOutModulationInterleave"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dvbtObjDvbH = dvbtObjDvbH.setStatus('current')
mibBuilder.exportSymbols("RS-XX9-DVBT-MIB", dvbtStateEntry=dvbtStateEntry, dvbtStTxDelayOffset=dvbtStTxDelayOffset, dvbtBasicCompliance=dvbtBasicCompliance, PYSNMP_MODULE_ID=rsXx9DvbtMibModule, dvbtOutput=dvbtOutput, dvbtLocalizationTable=dvbtLocalizationTable, dvbtModulationMpeFEC=dvbtModulationMpeFEC, rsXx9DvbtCompliances=rsXx9DvbtCompliances, dvbtModulationTable=dvbtModulationTable, dvbtStCellId=dvbtStCellId, dvbtTest=dvbtTest, DvbtModulation=DvbtModulation, dvbtStatusNotificationExcIdx=dvbtStatusNotificationExcIdx, dvbtStateTable=dvbtStateTable, dvbtOutModulationInterleave=dvbtOutModulationInterleave, dvbtStatusNotificationEntry=dvbtStatusNotificationEntry, dvbtOutModulationTimeSlicing=dvbtOutModulationTimeSlicing, dvbtLocalizationEntry=dvbtLocalizationEntry, dvbtOutModulationEntry=dvbtOutModulationEntry, dvbtLocalizationCellId=dvbtLocalizationCellId, rsXx9DvbtConformance=rsXx9DvbtConformance, dvbtTestEntry=dvbtTestEntry, dvbtSetup=dvbtSetup, dvbtStatusNotificationMask=dvbtStatusNotificationMask, dvbtOutModulationConstellation=dvbtOutModulationConstellation, dvbtModulationFftMode=dvbtModulationFftMode, dvbtOutLocalizationCellId=dvbtOutLocalizationCellId, rsXx9DvbtObjects=rsXx9DvbtObjects, dvbtTestMode=dvbtTestMode, dvbtOutModulationTable=dvbtOutModulationTable, dvbtStatus=dvbtStatus, rsXx9DvbtMibModule=rsXx9DvbtMibModule, DvbtInterleave=DvbtInterleave, dvbtLocalizationTxControl=dvbtLocalizationTxControl, dvbtStatusNotificationName=dvbtStatusNotificationName, DvbtCodeRate=DvbtCodeRate, rsXx9DvbtNotifications=rsXx9DvbtNotifications, dvbtConfigurationTable=dvbtConfigurationTable, dvbtConfigurationEntry=dvbtConfigurationEntry, dvbtModulationTimeSlicing=dvbtModulationTimeSlicing, rsXx9DvbtGroups=rsXx9DvbtGroups, dvbtStatusNotificationState=dvbtStatusNotificationState, dvbtModulationChannelBandwidth=dvbtModulationChannelBandwidth, DvbtGuardInterval=DvbtGuardInterval, dvbtOutLocalizationTable=dvbtOutLocalizationTable, dvbtConfigurationDigitalMode=dvbtConfigurationDigitalMode, dvbtConfigurationTxIdx=dvbtConfigurationTxIdx, dvbtObjDvbH=dvbtObjDvbH, dvbtConfigurationModulationSource=dvbtConfigurationModulationSource, dvbtStatusNotificationTxIdx=dvbtStatusNotificationTxIdx, dvbtModulationCodeRate=dvbtModulationCodeRate, dvbtStTxFrequencyOffset=dvbtStTxFrequencyOffset, dvbtOutModulationChannelBandwidth=dvbtOutModulationChannelBandwidth, dvbtOutLocalizationEntry=dvbtOutLocalizationEntry, dvbtModulationConstellation=dvbtModulationConstellation, dvbtOutModulationGuardInterval=dvbtOutModulationGuardInterval, dvbtNotifyBasic=dvbtNotifyBasic, dvbtEncoderSummary=dvbtEncoderSummary, dvbtModulationGuardInterval=dvbtModulationGuardInterval, dvbtOutModulationFftMode=dvbtOutModulationFftMode, dvbtTestTable=dvbtTestTable, dvbtOutModulationCodeRate=dvbtOutModulationCodeRate, dvbtStatusNotificationIdx=dvbtStatusNotificationIdx, dvbtStatusNotificationTable=dvbtStatusNotificationTable, dvbtModulationInterleave=dvbtModulationInterleave, dvbtStatusNotificationPriority=dvbtStatusNotificationPriority, DvbtChannelBandwidth=DvbtChannelBandwidth, dvbtLocalizationTxAddress=dvbtLocalizationTxAddress, dvbtLocalizationCellIdSource=dvbtLocalizationCellIdSource, dvbtModulationEntry=dvbtModulationEntry, dvbtOutModulationMpeFEC=dvbtOutModulationMpeFEC, dvbtConfigurationExcIdx=dvbtConfigurationExcIdx, DvbtFftSize=DvbtFftSize, dvbtObjBasic=dvbtObjBasic)
