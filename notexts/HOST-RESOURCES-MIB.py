#
# PySNMP MIB module HOST-RESOURCES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source https://pysnmp.github.io:443/mibs/asn1/HOST-RESOURCES-MIB
# Produced by pysmi-1.1.12 at Tue Dec  3 10:55:38 2024
# On host fv-az1117-982 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, NotificationType, MibIdentifier, Unsigned32, iso, Counter32, IpAddress, mib_2, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ModuleIdentity, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "MibIdentifier", "Unsigned32", "iso", "Counter32", "IpAddress", "mib-2", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ModuleIdentity", "Bits", "TimeTicks")
TruthValue, DateAndTime, AutonomousType, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DateAndTime", "AutonomousType", "TextualConvention", "DisplayString")
hostResourcesMibModule = ModuleIdentity((1, 3, 6, 1, 2, 1, 25, 7, 1))
hostResourcesMibModule.setRevisions(('2000-03-06 00:00', '1999-10-20 22:00',))
if mibBuilder.loadTexts: hostResourcesMibModule.setLastUpdated('200003060000Z')
if mibBuilder.loadTexts: hostResourcesMibModule.setOrganization('IETF Host Resources MIB Working Group')
host = MibIdentifier((1, 3, 6, 1, 2, 1, 25))
hrSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 1))
hrStorage = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2))
hrDevice = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3))
hrSWRun = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 4))
hrSWRunPerf = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 5))
hrSWInstalled = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 6))
hrMIBAdminInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 7))
class KBytes(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class ProductID(TextualConvention, ObjectIdentifier):
    status = 'current'

class InternationalDisplayString(TextualConvention, OctetString):
    status = 'current'

hrSystemUptime = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSystemUptime.setStatus('current')
hrSystemDate = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 2), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrSystemDate.setStatus('current')
hrSystemInitialLoadDevice = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrSystemInitialLoadDevice.setStatus('current')
hrSystemInitialLoadParameters = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 4), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrSystemInitialLoadParameters.setStatus('current')
hrSystemNumUsers = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSystemNumUsers.setStatus('current')
hrSystemProcesses = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSystemProcesses.setStatus('current')
hrSystemMaxProcesses = MibScalar((1, 3, 6, 1, 2, 1, 25, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSystemMaxProcesses.setStatus('current')
hrStorageTypes = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2, 1))
hrMemorySize = MibScalar((1, 3, 6, 1, 2, 1, 25, 2, 2), KBytes()).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hrMemorySize.setStatus('current')
hrStorageTable = MibTable((1, 3, 6, 1, 2, 1, 25, 2, 3), )
if mibBuilder.loadTexts: hrStorageTable.setStatus('current')
hrStorageEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 2, 3, 1), ).setIndexNames((0, "HOST-RESOURCES-MIB", "hrStorageIndex"))
if mibBuilder.loadTexts: hrStorageEntry.setStatus('current')
hrStorageIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageIndex.setStatus('current')
hrStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageType.setStatus('current')
hrStorageDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageDescr.setStatus('current')
hrStorageAllocationUnits = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageAllocationUnits.setStatus('current')
hrStorageSize = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrStorageSize.setStatus('current')
hrStorageUsed = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageUsed.setStatus('current')
hrStorageAllocationFailures = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrStorageAllocationFailures.setStatus('current')
hrDeviceTypes = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1))
hrDeviceTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 2), )
if mibBuilder.loadTexts: hrDeviceTable.setStatus('current')
hrDeviceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 2, 1), ).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: hrDeviceEntry.setStatus('current')
hrDeviceIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceIndex.setStatus('current')
hrDeviceType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceType.setStatus('current')
hrDeviceDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceDescr.setStatus('current')
hrDeviceID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 4), ProductID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceID.setStatus('current')
hrDeviceStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("running", 2), ("warning", 3), ("testing", 4), ("down", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceStatus.setStatus('current')
hrDeviceErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDeviceErrors.setStatus('current')
hrProcessorTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 3), )
if mibBuilder.loadTexts: hrProcessorTable.setStatus('current')
hrProcessorEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 3, 1), ).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: hrProcessorEntry.setStatus('current')
hrProcessorFrwID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 3, 1, 1), ProductID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrProcessorFrwID.setStatus('current')
hrProcessorLoad = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrProcessorLoad.setStatus('current')
hrNetworkTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 4), )
if mibBuilder.loadTexts: hrNetworkTable.setStatus('current')
hrNetworkEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 4, 1), ).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: hrNetworkEntry.setStatus('current')
hrNetworkIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 4, 1, 1), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrNetworkIfIndex.setStatus('current')
hrPrinterTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 5), )
if mibBuilder.loadTexts: hrPrinterTable.setStatus('current')
hrPrinterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 5, 1), ).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: hrPrinterEntry.setStatus('current')
hrPrinterStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("idle", 3), ("printing", 4), ("warmup", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPrinterStatus.setStatus('current')
hrPrinterDetectedErrorState = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPrinterDetectedErrorState.setStatus('current')
hrDiskStorageTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 6), )
if mibBuilder.loadTexts: hrDiskStorageTable.setStatus('current')
hrDiskStorageEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 6, 1), ).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
if mibBuilder.loadTexts: hrDiskStorageEntry.setStatus('current')
hrDiskStorageAccess = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readWrite", 1), ("readOnly", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDiskStorageAccess.setStatus('current')
hrDiskStorageMedia = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("unknown", 2), ("hardDisk", 3), ("floppyDisk", 4), ("opticalDiskROM", 5), ("opticalDiskWORM", 6), ("opticalDiskRW", 7), ("ramDisk", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDiskStorageMedia.setStatus('current')
hrDiskStorageRemoveble = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDiskStorageRemoveble.setStatus('current')
hrDiskStorageCapacity = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 4), KBytes()).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hrDiskStorageCapacity.setStatus('current')
hrPartitionTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 7), )
if mibBuilder.loadTexts: hrPartitionTable.setStatus('current')
hrPartitionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 7, 1), ).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"), (0, "HOST-RESOURCES-MIB", "hrPartitionIndex"))
if mibBuilder.loadTexts: hrPartitionEntry.setStatus('current')
hrPartitionIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPartitionIndex.setStatus('current')
hrPartitionLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 2), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPartitionLabel.setStatus('current')
hrPartitionID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPartitionID.setStatus('current')
hrPartitionSize = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 4), KBytes()).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPartitionSize.setStatus('current')
hrPartitionFSIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrPartitionFSIndex.setStatus('current')
hrFSTypes = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9))
hrFSTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 8), )
if mibBuilder.loadTexts: hrFSTable.setStatus('current')
hrFSEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 8, 1), ).setIndexNames((0, "HOST-RESOURCES-MIB", "hrFSIndex"))
if mibBuilder.loadTexts: hrFSEntry.setStatus('current')
hrFSIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSIndex.setStatus('current')
hrFSMountPoint = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 2), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSMountPoint.setStatus('current')
hrFSRemoteMountPoint = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 3), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSRemoteMountPoint.setStatus('current')
hrFSType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 4), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSType.setStatus('current')
hrFSAccess = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readWrite", 1), ("readOnly", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSAccess.setStatus('current')
hrFSBootable = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSBootable.setStatus('current')
hrFSStorageIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrFSStorageIndex.setStatus('current')
hrFSLastFullBackupDate = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 8), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrFSLastFullBackupDate.setStatus('current')
hrFSLastPartialBackupDate = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 9), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrFSLastPartialBackupDate.setStatus('current')
hrSWOSIndex = MibScalar((1, 3, 6, 1, 2, 1, 25, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWOSIndex.setStatus('current')
hrSWRunTable = MibTable((1, 3, 6, 1, 2, 1, 25, 4, 2), )
if mibBuilder.loadTexts: hrSWRunTable.setStatus('current')
hrSWRunEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 4, 2, 1), ).setIndexNames((0, "HOST-RESOURCES-MIB", "hrSWRunIndex"))
if mibBuilder.loadTexts: hrSWRunEntry.setStatus('current')
hrSWRunIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunIndex.setStatus('current')
hrSWRunName = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 2), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunName.setStatus('current')
hrSWRunID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 3), ProductID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunID.setStatus('current')
hrSWRunPath = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 4), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunPath.setStatus('current')
hrSWRunParameters = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 5), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunParameters.setStatus('current')
hrSWRunType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("operatingSystem", 2), ("deviceDriver", 3), ("application", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunType.setStatus('current')
hrSWRunStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("running", 1), ("runnable", 2), ("notRunnable", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hrSWRunStatus.setStatus('current')
hrSWRunPerfTable = MibTable((1, 3, 6, 1, 2, 1, 25, 5, 1), )
if mibBuilder.loadTexts: hrSWRunPerfTable.setStatus('current')
hrSWRunPerfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 5, 1, 1), )
hrSWRunEntry.registerAugmentions(("HOST-RESOURCES-MIB", "hrSWRunPerfEntry"))
hrSWRunPerfEntry.setIndexNames(*hrSWRunEntry.getIndexNames())
if mibBuilder.loadTexts: hrSWRunPerfEntry.setStatus('current')
hrSWRunPerfCPU = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunPerfCPU.setStatus('current')
hrSWRunPerfMem = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 5, 1, 1, 2), KBytes()).setUnits('KBytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWRunPerfMem.setStatus('current')
hrSWInstalledLastChange = MibScalar((1, 3, 6, 1, 2, 1, 25, 6, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledLastChange.setStatus('current')
hrSWInstalledLastUpdateTime = MibScalar((1, 3, 6, 1, 2, 1, 25, 6, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledLastUpdateTime.setStatus('current')
hrSWInstalledTable = MibTable((1, 3, 6, 1, 2, 1, 25, 6, 3), )
if mibBuilder.loadTexts: hrSWInstalledTable.setStatus('current')
hrSWInstalledEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 6, 3, 1), ).setIndexNames((0, "HOST-RESOURCES-MIB", "hrSWInstalledIndex"))
if mibBuilder.loadTexts: hrSWInstalledEntry.setStatus('current')
hrSWInstalledIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledIndex.setStatus('current')
hrSWInstalledName = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 2), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledName.setStatus('current')
hrSWInstalledID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 3), ProductID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledID.setStatus('current')
hrSWInstalledType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("operatingSystem", 2), ("deviceDriver", 3), ("application", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledType.setStatus('current')
hrSWInstalledDate = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrSWInstalledDate.setStatus('current')
hrMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 7, 2))
hrMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 7, 3))
hrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 25, 7, 2, 1)).setObjects(("HOST-RESOURCES-MIB", "hrSystemGroup"), ("HOST-RESOURCES-MIB", "hrStorageGroup"), ("HOST-RESOURCES-MIB", "hrDeviceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrMIBCompliance = hrMIBCompliance.setStatus('current')
hrSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 1)).setObjects(("HOST-RESOURCES-MIB", "hrSystemUptime"), ("HOST-RESOURCES-MIB", "hrSystemDate"), ("HOST-RESOURCES-MIB", "hrSystemInitialLoadDevice"), ("HOST-RESOURCES-MIB", "hrSystemInitialLoadParameters"), ("HOST-RESOURCES-MIB", "hrSystemNumUsers"), ("HOST-RESOURCES-MIB", "hrSystemProcesses"), ("HOST-RESOURCES-MIB", "hrSystemMaxProcesses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrSystemGroup = hrSystemGroup.setStatus('current')
hrStorageGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 2)).setObjects(("HOST-RESOURCES-MIB", "hrMemorySize"), ("HOST-RESOURCES-MIB", "hrStorageIndex"), ("HOST-RESOURCES-MIB", "hrStorageType"), ("HOST-RESOURCES-MIB", "hrStorageDescr"), ("HOST-RESOURCES-MIB", "hrStorageAllocationUnits"), ("HOST-RESOURCES-MIB", "hrStorageSize"), ("HOST-RESOURCES-MIB", "hrStorageUsed"), ("HOST-RESOURCES-MIB", "hrStorageAllocationFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrStorageGroup = hrStorageGroup.setStatus('current')
hrDeviceGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 3)).setObjects(("HOST-RESOURCES-MIB", "hrDeviceIndex"), ("HOST-RESOURCES-MIB", "hrDeviceType"), ("HOST-RESOURCES-MIB", "hrDeviceDescr"), ("HOST-RESOURCES-MIB", "hrDeviceID"), ("HOST-RESOURCES-MIB", "hrDeviceStatus"), ("HOST-RESOURCES-MIB", "hrDeviceErrors"), ("HOST-RESOURCES-MIB", "hrProcessorFrwID"), ("HOST-RESOURCES-MIB", "hrProcessorLoad"), ("HOST-RESOURCES-MIB", "hrNetworkIfIndex"), ("HOST-RESOURCES-MIB", "hrPrinterStatus"), ("HOST-RESOURCES-MIB", "hrPrinterDetectedErrorState"), ("HOST-RESOURCES-MIB", "hrDiskStorageAccess"), ("HOST-RESOURCES-MIB", "hrDiskStorageMedia"), ("HOST-RESOURCES-MIB", "hrDiskStorageRemoveble"), ("HOST-RESOURCES-MIB", "hrDiskStorageCapacity"), ("HOST-RESOURCES-MIB", "hrPartitionIndex"), ("HOST-RESOURCES-MIB", "hrPartitionLabel"), ("HOST-RESOURCES-MIB", "hrPartitionID"), ("HOST-RESOURCES-MIB", "hrPartitionSize"), ("HOST-RESOURCES-MIB", "hrPartitionFSIndex"), ("HOST-RESOURCES-MIB", "hrFSIndex"), ("HOST-RESOURCES-MIB", "hrFSMountPoint"), ("HOST-RESOURCES-MIB", "hrFSRemoteMountPoint"), ("HOST-RESOURCES-MIB", "hrFSType"), ("HOST-RESOURCES-MIB", "hrFSAccess"), ("HOST-RESOURCES-MIB", "hrFSBootable"), ("HOST-RESOURCES-MIB", "hrFSStorageIndex"), ("HOST-RESOURCES-MIB", "hrFSLastFullBackupDate"), ("HOST-RESOURCES-MIB", "hrFSLastPartialBackupDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrDeviceGroup = hrDeviceGroup.setStatus('current')
hrSWRunGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 4)).setObjects(("HOST-RESOURCES-MIB", "hrSWOSIndex"), ("HOST-RESOURCES-MIB", "hrSWRunIndex"), ("HOST-RESOURCES-MIB", "hrSWRunName"), ("HOST-RESOURCES-MIB", "hrSWRunID"), ("HOST-RESOURCES-MIB", "hrSWRunPath"), ("HOST-RESOURCES-MIB", "hrSWRunParameters"), ("HOST-RESOURCES-MIB", "hrSWRunType"), ("HOST-RESOURCES-MIB", "hrSWRunStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrSWRunGroup = hrSWRunGroup.setStatus('current')
hrSWRunPerfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 5)).setObjects(("HOST-RESOURCES-MIB", "hrSWRunPerfCPU"), ("HOST-RESOURCES-MIB", "hrSWRunPerfMem"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrSWRunPerfGroup = hrSWRunPerfGroup.setStatus('current')
hrSWInstalledGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 6)).setObjects(("HOST-RESOURCES-MIB", "hrSWInstalledLastChange"), ("HOST-RESOURCES-MIB", "hrSWInstalledLastUpdateTime"), ("HOST-RESOURCES-MIB", "hrSWInstalledIndex"), ("HOST-RESOURCES-MIB", "hrSWInstalledName"), ("HOST-RESOURCES-MIB", "hrSWInstalledID"), ("HOST-RESOURCES-MIB", "hrSWInstalledType"), ("HOST-RESOURCES-MIB", "hrSWInstalledDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hrSWInstalledGroup = hrSWInstalledGroup.setStatus('current')
mibBuilder.exportSymbols("HOST-RESOURCES-MIB", hrDevice=hrDevice, hrSWRunPath=hrSWRunPath, hrSWRunID=hrSWRunID, KBytes=KBytes, hrSWRunName=hrSWRunName, hrSWRunPerfTable=hrSWRunPerfTable, hrSWRunTable=hrSWRunTable, hrDeviceID=hrDeviceID, hrDiskStorageRemoveble=hrDiskStorageRemoveble, hrDiskStorageTable=hrDiskStorageTable, hrStorageTypes=hrStorageTypes, hrFSMountPoint=hrFSMountPoint, hrSWRunGroup=hrSWRunGroup, hrSWInstalledName=hrSWInstalledName, hrSWInstalledID=hrSWInstalledID, hrSWRunPerfEntry=hrSWRunPerfEntry, hrSWInstalledEntry=hrSWInstalledEntry, hrNetworkTable=hrNetworkTable, hrNetworkEntry=hrNetworkEntry, hrFSRemoteMountPoint=hrFSRemoteMountPoint, hrStorage=hrStorage, hrPrinterDetectedErrorState=hrPrinterDetectedErrorState, hrSystemDate=hrSystemDate, hrFSType=hrFSType, hrSWInstalledIndex=hrSWInstalledIndex, hrSWInstalled=hrSWInstalled, hrDeviceDescr=hrDeviceDescr, hrSWInstalledGroup=hrSWInstalledGroup, hrDeviceStatus=hrDeviceStatus, hrSystemGroup=hrSystemGroup, hrSystemMaxProcesses=hrSystemMaxProcesses, InternationalDisplayString=InternationalDisplayString, hrDeviceTypes=hrDeviceTypes, hrDiskStorageAccess=hrDiskStorageAccess, hrSWInstalledDate=hrSWInstalledDate, hrStorageDescr=hrStorageDescr, hrProcessorEntry=hrProcessorEntry, hrSystemNumUsers=hrSystemNumUsers, hrSystem=hrSystem, hrPrinterTable=hrPrinterTable, hrSWOSIndex=hrSWOSIndex, hrSWRunIndex=hrSWRunIndex, host=host, hrSWRunPerfGroup=hrSWRunPerfGroup, hrSystemUptime=hrSystemUptime, hrSWRunPerfCPU=hrSWRunPerfCPU, hrPartitionSize=hrPartitionSize, hrStorageIndex=hrStorageIndex, hrSWRunStatus=hrSWRunStatus, hrMemorySize=hrMemorySize, hrFSStorageIndex=hrFSStorageIndex, hrProcessorFrwID=hrProcessorFrwID, hrStorageUsed=hrStorageUsed, hrProcessorLoad=hrProcessorLoad, hrSWInstalledType=hrSWInstalledType, hrMIBAdminInfo=hrMIBAdminInfo, hrStorageSize=hrStorageSize, PYSNMP_MODULE_ID=hostResourcesMibModule, hostResourcesMibModule=hostResourcesMibModule, hrMIBCompliances=hrMIBCompliances, hrDeviceGroup=hrDeviceGroup, hrPartitionIndex=hrPartitionIndex, hrFSAccess=hrFSAccess, hrDeviceEntry=hrDeviceEntry, hrDiskStorageMedia=hrDiskStorageMedia, hrDeviceIndex=hrDeviceIndex, hrFSLastPartialBackupDate=hrFSLastPartialBackupDate, hrPrinterEntry=hrPrinterEntry, hrFSTable=hrFSTable, hrPartitionID=hrPartitionID, hrFSEntry=hrFSEntry, hrPrinterStatus=hrPrinterStatus, hrSWRunParameters=hrSWRunParameters, hrSystemProcesses=hrSystemProcesses, hrDeviceType=hrDeviceType, hrSWRunEntry=hrSWRunEntry, hrSystemInitialLoadParameters=hrSystemInitialLoadParameters, hrProcessorTable=hrProcessorTable, hrPartitionLabel=hrPartitionLabel, hrDeviceTable=hrDeviceTable, hrStorageType=hrStorageType, hrFSTypes=hrFSTypes, hrStorageTable=hrStorageTable, hrDiskStorageCapacity=hrDiskStorageCapacity, hrDeviceErrors=hrDeviceErrors, hrNetworkIfIndex=hrNetworkIfIndex, hrFSIndex=hrFSIndex, hrFSLastFullBackupDate=hrFSLastFullBackupDate, hrFSBootable=hrFSBootable, hrPartitionFSIndex=hrPartitionFSIndex, hrSystemInitialLoadDevice=hrSystemInitialLoadDevice, hrStorageGroup=hrStorageGroup, hrMIBCompliance=hrMIBCompliance, hrSWRun=hrSWRun, hrSWRunType=hrSWRunType, ProductID=ProductID, hrMIBGroups=hrMIBGroups, hrStorageEntry=hrStorageEntry, hrStorageAllocationFailures=hrStorageAllocationFailures, hrSWRunPerf=hrSWRunPerf, hrStorageAllocationUnits=hrStorageAllocationUnits, hrSWInstalledLastChange=hrSWInstalledLastChange, hrDiskStorageEntry=hrDiskStorageEntry, hrSWInstalledTable=hrSWInstalledTable, hrSWRunPerfMem=hrSWRunPerfMem, hrPartitionEntry=hrPartitionEntry, hrSWInstalledLastUpdateTime=hrSWInstalledLastUpdateTime, hrPartitionTable=hrPartitionTable)
