#
# PySNMP MIB module FREENAS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/ixsystems/FREENAS-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 02:42:18 2024
# On host fv-az1200-411 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Unsigned32, MibIdentifier, ObjectIdentity, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, ModuleIdentity, TimeTicks, Counter32, IpAddress, iso, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "MibIdentifier", "ObjectIdentity", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "ModuleIdentity", "TimeTicks", "Counter32", "IpAddress", "iso", "Gauge32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
freeNas = ModuleIdentity((1, 3, 6, 1, 4, 1, 50536))
freeNas.setRevisions(('2017-10-27 00:00',))
if mibBuilder.loadTexts: freeNas.setLastUpdated('201710270000Z')
if mibBuilder.loadTexts: freeNas.setOrganization('www.ixsystems.com')
class ZPoolHealthType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("online", 0), ("degraded", 1), ("faulted", 2), ("offline", 3), ("unavail", 4), ("removed", 5))

class AlertLevelType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(20, 30, 50))
    namedValues = NamedValues(("info", 20), ("warning", 30), ("critical", 50))

zfs = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 1))
notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 2))
notificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 2, 1))
notificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 2, 2))
zpool = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 1, 1))
dataset = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 1, 2))
zvol = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 1, 3))
arc = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 1, 4))
l2arc = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 1, 5))
zil = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 1, 6))
zpoolTable = MibTable((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1), )
if mibBuilder.loadTexts: zpoolTable.setStatus('current')
zpoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1), ).setIndexNames((0, "FREENAS-MIB", "zpoolIndex"))
if mibBuilder.loadTexts: zpoolEntry.setStatus('current')
zpoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: zpoolIndex.setStatus('current')
zpoolDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolDescr.setStatus('current')
zpoolAllocationUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolAllocationUnits.setStatus('current')
zpoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zpoolSize.setStatus('current')
zpoolUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolUsed.setStatus('current')
zpoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolAvailable.setStatus('current')
zpoolHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 7), ZPoolHealthType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolHealth.setStatus('current')
zpoolReadOps = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolReadOps.setStatus('current')
zpoolWriteOps = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolWriteOps.setStatus('current')
zpoolReadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolReadBytes.setStatus('current')
zpoolWriteBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolWriteBytes.setStatus('current')
zpoolReadOps1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolReadOps1sec.setStatus('current')
zpoolWriteOps1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolWriteOps1sec.setStatus('current')
zpoolReadBytes1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolReadBytes1sec.setStatus('current')
zpoolWriteBytes1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolWriteBytes1sec.setStatus('current')
datasetTable = MibTable((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1), )
if mibBuilder.loadTexts: datasetTable.setStatus('current')
datasetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1), ).setIndexNames((0, "FREENAS-MIB", "datasetIndex"))
if mibBuilder.loadTexts: datasetEntry.setStatus('current')
datasetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: datasetIndex.setStatus('current')
datasetDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: datasetDescr.setStatus('current')
datasetAllocationUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: datasetAllocationUnits.setStatus('current')
datasetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: datasetSize.setStatus('current')
datasetUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: datasetUsed.setStatus('current')
datasetAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: datasetAvailable.setStatus('current')
zvolTable = MibTable((1, 3, 6, 1, 4, 1, 50536, 1, 3, 1), )
if mibBuilder.loadTexts: zvolTable.setStatus('current')
zvolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50536, 1, 3, 1, 1), ).setIndexNames((0, "FREENAS-MIB", "zvolIndex"))
if mibBuilder.loadTexts: zvolEntry.setStatus('current')
zvolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: zvolIndex.setStatus('current')
zvolDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zvolDescr.setStatus('current')
zvolAllocationUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: zvolAllocationUnits.setStatus('current')
zvolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zvolSize.setStatus('current')
zvolUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zvolUsed.setStatus('current')
zvolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zvolAvailable.setStatus('current')
zfsArcSize = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 4, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsArcSize.setStatus('current')
zfsArcMeta = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 4, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsArcMeta.setStatus('current')
zfsArcData = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 4, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsArcData.setStatus('current')
zfsArcHits = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 4, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsArcHits.setStatus('current')
zfsArcMisses = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 4, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsArcMisses.setStatus('current')
zfsArcC = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 4, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsArcC.setStatus('current')
zfsArcP = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 4, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsArcP.setStatus('current')
zfsArcMissPercent = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 4, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsArcMissPercent.setStatus('current')
zfsArcCacheHitRatio = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 4, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsArcCacheHitRatio.setStatus('current')
zfsArcCacheMissRatio = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 4, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsArcCacheMissRatio.setStatus('current')
zfsL2ArcHits = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsL2ArcHits.setStatus('current')
zfsL2ArcMisses = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsL2ArcMisses.setStatus('current')
zfsL2ArcRead = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsL2ArcRead.setStatus('current')
zfsL2ArcWrite = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsL2ArcWrite.setStatus('current')
zfsL2ArcSize = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 5, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsL2ArcSize.setStatus('current')
zfsZilstatOps1sec = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsZilstatOps1sec.setStatus('current')
zfsZilstatOps5sec = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 6, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsZilstatOps5sec.setStatus('current')
zfsZilstatOps10sec = MibScalar((1, 3, 6, 1, 4, 1, 50536, 1, 6, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zfsZilstatOps10sec.setStatus('current')
alert = NotificationType((1, 3, 6, 1, 4, 1, 50536, 2, 1, 1)).setObjects(("FREENAS-MIB", "alertId"), ("FREENAS-MIB", "alertLevel"), ("FREENAS-MIB", "alertMessage"))
if mibBuilder.loadTexts: alert.setStatus('current')
alertId = MibScalar((1, 3, 6, 1, 4, 1, 50536, 2, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alertId.setStatus('current')
alertLevel = MibScalar((1, 3, 6, 1, 4, 1, 50536, 2, 2, 2), AlertLevelType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alertLevel.setStatus('current')
alertMessage = MibScalar((1, 3, 6, 1, 4, 1, 50536, 2, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alertMessage.setStatus('current')
alertCancellation = NotificationType((1, 3, 6, 1, 4, 1, 50536, 2, 1, 2)).setObjects(("FREENAS-MIB", "alertId"))
if mibBuilder.loadTexts: alertCancellation.setStatus('current')
mibBuilder.exportSymbols("FREENAS-MIB", zfsArcP=zfsArcP, zpoolWriteBytes1sec=zpoolWriteBytes1sec, notificationObjects=notificationObjects, zvolTable=zvolTable, zvolAllocationUnits=zvolAllocationUnits, zfsZilstatOps1sec=zfsZilstatOps1sec, PYSNMP_MODULE_ID=freeNas, zpoolWriteOps1sec=zpoolWriteOps1sec, AlertLevelType=AlertLevelType, notifications=notifications, zpoolDescr=zpoolDescr, zpoolUsed=zpoolUsed, zfsL2ArcMisses=zfsL2ArcMisses, alert=alert, datasetTable=datasetTable, zpoolReadBytes1sec=zpoolReadBytes1sec, dataset=dataset, zpoolEntry=zpoolEntry, zpoolWriteOps=zpoolWriteOps, arc=arc, zpoolReadOps1sec=zpoolReadOps1sec, datasetUsed=datasetUsed, zvolSize=zvolSize, zfsArcMisses=zfsArcMisses, zfsL2ArcSize=zfsL2ArcSize, alertLevel=alertLevel, zfsArcData=zfsArcData, zfsL2ArcRead=zfsL2ArcRead, datasetIndex=datasetIndex, zpoolHealth=zpoolHealth, zvolEntry=zvolEntry, datasetAllocationUnits=datasetAllocationUnits, zpoolSize=zpoolSize, zpoolIndex=zpoolIndex, notificationPrefix=notificationPrefix, zpool=zpool, zvol=zvol, zfsArcC=zfsArcC, zfsArcCacheMissRatio=zfsArcCacheMissRatio, alertId=alertId, zfsL2ArcWrite=zfsL2ArcWrite, datasetAvailable=datasetAvailable, alertMessage=alertMessage, zfsZilstatOps5sec=zfsZilstatOps5sec, ZPoolHealthType=ZPoolHealthType, datasetSize=datasetSize, zpoolAvailable=zpoolAvailable, datasetEntry=datasetEntry, zpoolWriteBytes=zpoolWriteBytes, zpoolTable=zpoolTable, zfs=zfs, zvolIndex=zvolIndex, zfsArcMeta=zfsArcMeta, zfsArcHits=zfsArcHits, zfsL2ArcHits=zfsL2ArcHits, alertCancellation=alertCancellation, zpoolReadOps=zpoolReadOps, zfsZilstatOps10sec=zfsZilstatOps10sec, zil=zil, zfsArcCacheHitRatio=zfsArcCacheHitRatio, zpoolAllocationUnits=zpoolAllocationUnits, datasetDescr=datasetDescr, zvolAvailable=zvolAvailable, zvolUsed=zvolUsed, zpoolReadBytes=zpoolReadBytes, zvolDescr=zvolDescr, zfsArcSize=zfsArcSize, zfsArcMissPercent=zfsArcMissPercent, l2arc=l2arc, freeNas=freeNas)
