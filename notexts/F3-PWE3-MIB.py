#
# PySNMP MIB module F3-PWE3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/F3-PWE3-MIB
# Produced by pysmi-1.1.12 at Wed May 29 08:06:25 2024
# On host fv-az698-992 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
fsp150cm, = mibBuilder.importSymbols("ADVA-MIB", "fsp150cm")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
CmPmBinAction, IpPriorityMapMode, CmPmIntervalType, SecondaryState, PerfCounter64, VlanPriority, OperationalState, IpVersion, VlanId, AdminState = mibBuilder.importSymbols("CM-COMMON-MIB", "CmPmBinAction", "IpPriorityMapMode", "CmPmIntervalType", "SecondaryState", "PerfCounter64", "VlanPriority", "OperationalState", "IpVersion", "VlanId", "AdminState")
shelfIndex, slotIndex, neIndex = mibBuilder.importSymbols("CM-ENTITY-MIB", "shelfIndex", "slotIndex", "neIndex")
cmEthernetNetPortIndex, cmEthernetAccPortIndex = mibBuilder.importSymbols("CM-FACILITY-MIB", "cmEthernetNetPortIndex", "cmEthernetAccPortIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, TimeTicks, ModuleIdentity, IpAddress, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, Counter64, NotificationType, Unsigned32, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "ModuleIdentity", "IpAddress", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "Counter64", "NotificationType", "Unsigned32", "ObjectIdentity", "MibIdentifier")
StorageType, DisplayString, DateAndTime, TruthValue, VariablePointer, TextualConvention, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "DisplayString", "DateAndTime", "TruthValue", "VariablePointer", "TextualConvention", "MacAddress", "RowStatus")
f3Pwe3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19))
f3Pwe3MIB.setRevisions(('2012-04-03 00:00',))
if mibBuilder.loadTexts: f3Pwe3MIB.setLastUpdated('201204030000Z')
if mibBuilder.loadTexts: f3Pwe3MIB.setOrganization('ADVA Optical Networking')
f3Pwe3ConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1))
f3Pwe3PerformanceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2))
f3Pwe3PerformanceNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 3))
f3Pwe3Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 4))
class PWE3SatopDiscoveryType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("dynamic", 1), ("static", 2))

class PWE3SatopEncapsulationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("vlan-one-mpls-label", 1), ("vlan-two-mpls-label", 2), ("novlan-two-mpls-label", 3))

class PWE3SatopRTPTSUpdateFreqType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("freq-8kHz", 1), ("freq-16kHz", 2), ("freq-32kHz", 3), ("freq-64kHz", 4), ("freq-128kHz", 5), ("freq-256kHz", 6), ("freq-512kHz", 7), ("freq-1024kHz", 8))

class PWE3SatopTransportMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("satop-e1", 1), ("satop-t1", 2), ("satop-octetalignt1", 3))

class MplsLabel(TextualConvention, Unsigned32):
    status = 'current'

f3Pwe3IdlePatternProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 1), )
if mibBuilder.loadTexts: f3Pwe3IdlePatternProfileTable.setStatus('current')
f3Pwe3IdlePatternProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 1, 1), ).setIndexNames((0, "F3-PWE3-MIB", "f3Pwe3IdlePatternProfileIndex"))
if mibBuilder.loadTexts: f3Pwe3IdlePatternProfileEntry.setStatus('current')
f3Pwe3IdlePatternProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: f3Pwe3IdlePatternProfileIndex.setStatus('current')
f3Pwe3IdlePatternProfileByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3IdlePatternProfileByte.setStatus('current')
f3Pwe3ResyncProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 2), )
if mibBuilder.loadTexts: f3Pwe3ResyncProfileTable.setStatus('current')
f3Pwe3ResyncProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 2, 1), ).setIndexNames((0, "F3-PWE3-MIB", "f3Pwe3ResyncProfileIndex"))
if mibBuilder.loadTexts: f3Pwe3ResyncProfileEntry.setStatus('current')
f3Pwe3ResyncProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: f3Pwe3ResyncProfileIndex.setStatus('current')
f3Pwe3ResyncProfileIncreaseFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3ResyncProfileIncreaseFactor.setStatus('current')
f3Pwe3ResyncProfileDecreaseFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3ResyncProfileDecreaseFactor.setStatus('current')
f3Pwe3ResyncProfileResyncThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3ResyncProfileResyncThreshold.setStatus('current')
f3Pwe3LoopbackProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 3), )
if mibBuilder.loadTexts: f3Pwe3LoopbackProfileTable.setStatus('current')
f3Pwe3LoopbackProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 3, 1), ).setIndexNames((0, "F3-PWE3-MIB", "f3Pwe3LoopbackProfileIndex"))
if mibBuilder.loadTexts: f3Pwe3LoopbackProfileEntry.setStatus('current')
f3Pwe3LoopbackProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: f3Pwe3LoopbackProfileIndex.setStatus('current')
f3Pwe3LoopbackProfileLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3LoopbackProfileLength.setStatus('current')
f3Pwe3LoopbackProfilePattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3LoopbackProfilePattern.setStatus('current')
f3Pwe3LoopbackProfileRepeatTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3LoopbackProfileRepeatTime.setStatus('current')
f3Pwe3LoopbackProfileClearLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3LoopbackProfileClearLength.setStatus('current')
f3Pwe3LoopbackProfileClearPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3LoopbackProfileClearPattern.setStatus('current')
f3Pwe3LossProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 4), )
if mibBuilder.loadTexts: f3Pwe3LossProfileTable.setStatus('current')
f3Pwe3LossProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 4, 1), ).setIndexNames((0, "F3-PWE3-MIB", "f3Pwe3LossProfileIndex"))
if mibBuilder.loadTexts: f3Pwe3LossProfileEntry.setStatus('current')
f3Pwe3LossProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: f3Pwe3LossProfileIndex.setStatus('current')
f3Pwe3LossProfileLossStateEnterTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3LossProfileLossStateEnterTime.setStatus('current')
f3Pwe3LossProfileLossStateExitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 4, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3LossProfileLossStateExitTime.setStatus('current')
f3Pwe3AisStabilizationProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 5), )
if mibBuilder.loadTexts: f3Pwe3AisStabilizationProfileTable.setStatus('current')
f3Pwe3AisStabilizationProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 5, 1), ).setIndexNames((0, "F3-PWE3-MIB", "f3Pwe3AisStabilizationProfileIndex"))
if mibBuilder.loadTexts: f3Pwe3AisStabilizationProfileEntry.setStatus('current')
f3Pwe3AisStabilizationProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: f3Pwe3AisStabilizationProfileIndex.setStatus('current')
f3Pwe3AisStabilizationProfileEnterTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3AisStabilizationProfileEnterTime.setStatus('current')
f3Pwe3AisStabilizationProfileExitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 5, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3AisStabilizationProfileExitTime.setStatus('current')
f3Pwe3SatopTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6), )
if mibBuilder.loadTexts: f3Pwe3SatopTable.setStatus('current')
f3Pwe3SatopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "F3-PWE3-MIB", "f3Pwe3SatopIndex"))
if mibBuilder.loadTexts: f3Pwe3SatopEntry.setStatus('current')
f3Pwe3SatopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: f3Pwe3SatopIndex.setStatus('current')
f3Pwe3SatopAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopAlias.setStatus('current')
f3Pwe3SatopAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 3), AdminState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3SatopAdminState.setStatus('current')
f3Pwe3SatopOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 4), OperationalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopOperationalState.setStatus('current')
f3Pwe3SatopSecondaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 5), SecondaryState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopSecondaryState.setStatus('current')
f3Pwe3SatopTDMEntity = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 6), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopTDMEntity.setStatus('current')
f3Pwe3SatopDiscoveryType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 7), PWE3SatopDiscoveryType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopDiscoveryType.setStatus('current')
f3Pwe3SatopRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopRemoteIpAddress.setStatus('current')
f3Pwe3SatopRemoteMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 9), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopRemoteMacAddress.setStatus('current')
f3Pwe3SatopEncapsulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 10), PWE3SatopEncapsulationType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopEncapsulationType.setStatus('current')
f3Pwe3SatopRTPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopRTPEnabled.setStatus('current')
f3Pwe3SatopRTPUpdateFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 12), PWE3SatopRTPTSUpdateFreqType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopRTPUpdateFrequency.setStatus('current')
f3Pwe3SatopControlWordEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopControlWordEnabled.setStatus('current')
f3Pwe3SatopJitterBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 14), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopJitterBufferSize.setStatus('current')
f3Pwe3SatopPayloadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 15), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopPayloadSize.setStatus('current')
f3Pwe3SatopVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 16), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopVlanId.setStatus('current')
f3Pwe3SatopVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 17), VlanPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopVlanPriority.setStatus('current')
f3Pwe3SatopRxMplsLabel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 18), MplsLabel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopRxMplsLabel1.setStatus('current')
f3Pwe3SatopRxMplsLabel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 19), MplsLabel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopRxMplsLabel2.setStatus('current')
f3Pwe3SatopTxMplsLabel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 20), MplsLabel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopTxMplsLabel1.setStatus('current')
f3Pwe3SatopTxMplsLabel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 21), MplsLabel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopTxMplsLabel2.setStatus('current')
f3Pwe3SatopAisStabilizationProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 22), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopAisStabilizationProfile.setStatus('current')
f3Pwe3SatopResyncProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 23), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopResyncProfile.setStatus('current')
f3Pwe3SatopLossProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 24), VariablePointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopLossProfile.setStatus('current')
f3Pwe3SatopTransportMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 25), PWE3SatopTransportMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopTransportMode.setStatus('current')
f3Pwe3SatopStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 26), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopStorageType.setStatus('current')
f3Pwe3SatopRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 6, 1, 27), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopRowStatus.setStatus('current')
f3Pwe3SatopTDMEntitiesTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 7), )
if mibBuilder.loadTexts: f3Pwe3SatopTDMEntitiesTable.setStatus('current')
f3Pwe3SatopTDMEntitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 7, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "F3-PWE3-MIB", "f3Pwe3SatopIndex"), (0, "F3-PWE3-MIB", "f3Pwe3SatopTDMEntityIndex"))
if mibBuilder.loadTexts: f3Pwe3SatopTDMEntitiesEntry.setStatus('current')
f3Pwe3SatopTDMEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 7, 1, 1), Integer32())
if mibBuilder.loadTexts: f3Pwe3SatopTDMEntityIndex.setStatus('current')
f3Pwe3SatopTDMEntityObject = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 7, 1, 2), VariablePointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3SatopTDMEntityObject.setStatus('current')
f3Pwe3SatopTDMEntityStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 7, 1, 3), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopTDMEntityStorageType.setStatus('current')
f3Pwe3SatopTDMEntityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 1, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: f3Pwe3SatopTDMEntityRowStatus.setStatus('current')
f3Pwe3SatopStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1), )
if mibBuilder.loadTexts: f3Pwe3SatopStatsTable.setStatus('current')
f3Pwe3SatopStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "F3-PWE3-MIB", "f3Pwe3SatopIndex"), (0, "F3-PWE3-MIB", "f3Pwe3SatopStatsIndex"))
if mibBuilder.loadTexts: f3Pwe3SatopStatsEntry.setStatus('current')
f3Pwe3SatopStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3Pwe3SatopStatsIndex.setStatus('current')
f3Pwe3SatopStatsIntervalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsIntervalType.setStatus('current')
f3Pwe3SatopStatsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsValid.setStatus('current')
f3Pwe3SatopStatsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3SatopStatsAction.setStatus('current')
f3Pwe3SatopStatsESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsESs.setStatus('current')
f3Pwe3SatopStatsSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsSESs.setStatus('current')
f3Pwe3SatopStatsEBs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsEBs.setStatus('current')
f3Pwe3SatopStatsResyncs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsResyncs.setStatus('current')
f3Pwe3SatopStatsMaxJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsMaxJitter.setStatus('current')
f3Pwe3SatopStatsFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsFramesTx.setStatus('current')
f3Pwe3SatopStatsPayloadOctetsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsPayloadOctetsTx.setStatus('current')
f3Pwe3SatopStatsFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsFramesRx.setStatus('current')
f3Pwe3SatopStatsPayloadOctetsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsPayloadOctetsRx.setStatus('current')
f3Pwe3SatopStatsOutOfSeqFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsOutOfSeqFramesRx.setStatus('current')
f3Pwe3SatopStatsLostFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsLostFrames.setStatus('current')
f3Pwe3SatopStatsLostFramesStateTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsLostFramesStateTrans.setStatus('current')
f3Pwe3SatopStatsMalformedFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsMalformedFramesRx.setStatus('current')
f3Pwe3SatopStatsJitterBufferLateFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 1, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopStatsJitterBufferLateFrames.setStatus('current')
f3Pwe3SatopHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2), )
if mibBuilder.loadTexts: f3Pwe3SatopHistoryTable.setStatus('current')
f3Pwe3SatopHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "F3-PWE3-MIB", "f3Pwe3SatopIndex"), (0, "F3-PWE3-MIB", "f3Pwe3SatopStatsIndex"), (0, "F3-PWE3-MIB", "f3Pwe3SatopHistoryIndex"))
if mibBuilder.loadTexts: f3Pwe3SatopHistoryEntry.setStatus('current')
f3Pwe3SatopHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3Pwe3SatopHistoryIndex.setStatus('current')
f3Pwe3SatopHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryTime.setStatus('current')
f3Pwe3SatopHistoryValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryValid.setStatus('current')
f3Pwe3SatopHistoryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 4), CmPmBinAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryAction.setStatus('current')
f3Pwe3SatopHistoryESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 5), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryESs.setStatus('current')
f3Pwe3SatopHistorySESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 6), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistorySESs.setStatus('current')
f3Pwe3SatopHistoryEBs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 7), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryEBs.setStatus('current')
f3Pwe3SatopHistoryResyncs = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 8), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryResyncs.setStatus('current')
f3Pwe3SatopHistoryMaxJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryMaxJitter.setStatus('current')
f3Pwe3SatopHistoryFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 10), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryFramesTx.setStatus('current')
f3Pwe3SatopHistoryPayloadOctetsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 11), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryPayloadOctetsTx.setStatus('current')
f3Pwe3SatopHistoryFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 12), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryFramesRx.setStatus('current')
f3Pwe3SatopHistoryPayloadOctetsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 13), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryPayloadOctetsRx.setStatus('current')
f3Pwe3SatopHistoryOutOfSeqFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 14), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryOutOfSeqFramesRx.setStatus('current')
f3Pwe3SatopHistoryLostFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 15), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryLostFrames.setStatus('current')
f3Pwe3SatopHistoryLostFramesStateTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 16), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryLostFramesStateTrans.setStatus('current')
f3Pwe3SatopHistoryMalformedFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 17), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryMalformedFramesRx.setStatus('current')
f3Pwe3SatopHistoryJitterBufferLateFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 2, 1, 18), PerfCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopHistoryJitterBufferLateFrames.setStatus('current')
f3Pwe3SatopThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 3), )
if mibBuilder.loadTexts: f3Pwe3SatopThresholdTable.setStatus('current')
f3Pwe3SatopThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 3, 1), ).setIndexNames((0, "CM-ENTITY-MIB", "neIndex"), (0, "CM-ENTITY-MIB", "shelfIndex"), (0, "CM-ENTITY-MIB", "slotIndex"), (0, "F3-PWE3-MIB", "f3Pwe3SatopIndex"), (0, "F3-PWE3-MIB", "f3Pwe3SatopStatsIndex"), (0, "F3-PWE3-MIB", "f3Pwe3SatopThresholdIndex"))
if mibBuilder.loadTexts: f3Pwe3SatopThresholdEntry.setStatus('current')
f3Pwe3SatopThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: f3Pwe3SatopThresholdIndex.setStatus('current')
f3Pwe3SatopThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 3, 1, 2), CmPmIntervalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopThresholdInterval.setStatus('current')
f3Pwe3SatopThresholdVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 3, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopThresholdVariable.setStatus('current')
f3Pwe3SatopThresholdValueLo = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3SatopThresholdValueLo.setStatus('current')
f3Pwe3SatopThresholdValueHi = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: f3Pwe3SatopThresholdValueHi.setStatus('current')
f3Pwe3SatopThresholdMonValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 2, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: f3Pwe3SatopThresholdMonValue.setStatus('current')
f3Pwe3SatopThresholdCrossingAlert = NotificationType((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 3, 1)).setObjects(("F3-PWE3-MIB", "f3Pwe3SatopThresholdIndex"), ("F3-PWE3-MIB", "f3Pwe3SatopThresholdInterval"), ("F3-PWE3-MIB", "f3Pwe3SatopThresholdVariable"), ("F3-PWE3-MIB", "f3Pwe3SatopThresholdValueLo"), ("F3-PWE3-MIB", "f3Pwe3SatopThresholdValueHi"), ("F3-PWE3-MIB", "f3Pwe3SatopThresholdMonValue"))
if mibBuilder.loadTexts: f3Pwe3SatopThresholdCrossingAlert.setStatus('current')
f3Pwe3Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 4, 1))
f3Pwe3Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 4, 2))
f3Pwe3Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 4, 1, 1)).setObjects(("F3-PWE3-MIB", "f3Pwe3ObjectGroup"), ("F3-PWE3-MIB", "f3Pwe3PerfObjectGroup"), ("F3-PWE3-MIB", "f3Pwe3PerfNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3Pwe3Compliance = f3Pwe3Compliance.setStatus('current')
f3Pwe3ObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 4, 2, 1)).setObjects(("F3-PWE3-MIB", "f3Pwe3IdlePatternProfileIndex"), ("F3-PWE3-MIB", "f3Pwe3IdlePatternProfileByte"), ("F3-PWE3-MIB", "f3Pwe3ResyncProfileIndex"), ("F3-PWE3-MIB", "f3Pwe3ResyncProfileIncreaseFactor"), ("F3-PWE3-MIB", "f3Pwe3ResyncProfileDecreaseFactor"), ("F3-PWE3-MIB", "f3Pwe3ResyncProfileResyncThreshold"), ("F3-PWE3-MIB", "f3Pwe3LoopbackProfileIndex"), ("F3-PWE3-MIB", "f3Pwe3LoopbackProfileLength"), ("F3-PWE3-MIB", "f3Pwe3LoopbackProfilePattern"), ("F3-PWE3-MIB", "f3Pwe3LoopbackProfileRepeatTime"), ("F3-PWE3-MIB", "f3Pwe3LoopbackProfileClearLength"), ("F3-PWE3-MIB", "f3Pwe3LoopbackProfileClearPattern"), ("F3-PWE3-MIB", "f3Pwe3LossProfileIndex"), ("F3-PWE3-MIB", "f3Pwe3LossProfileLossStateEnterTime"), ("F3-PWE3-MIB", "f3Pwe3LossProfileLossStateExitTime"), ("F3-PWE3-MIB", "f3Pwe3AisStabilizationProfileIndex"), ("F3-PWE3-MIB", "f3Pwe3AisStabilizationProfileEnterTime"), ("F3-PWE3-MIB", "f3Pwe3AisStabilizationProfileExitTime"), ("F3-PWE3-MIB", "f3Pwe3SatopIndex"), ("F3-PWE3-MIB", "f3Pwe3SatopAlias"), ("F3-PWE3-MIB", "f3Pwe3SatopAdminState"), ("F3-PWE3-MIB", "f3Pwe3SatopOperationalState"), ("F3-PWE3-MIB", "f3Pwe3SatopSecondaryState"), ("F3-PWE3-MIB", "f3Pwe3SatopTDMEntity"), ("F3-PWE3-MIB", "f3Pwe3SatopDiscoveryType"), ("F3-PWE3-MIB", "f3Pwe3SatopRemoteIpAddress"), ("F3-PWE3-MIB", "f3Pwe3SatopRemoteMacAddress"), ("F3-PWE3-MIB", "f3Pwe3SatopEncapsulationType"), ("F3-PWE3-MIB", "f3Pwe3SatopRTPEnabled"), ("F3-PWE3-MIB", "f3Pwe3SatopRTPUpdateFrequency"), ("F3-PWE3-MIB", "f3Pwe3SatopControlWordEnabled"), ("F3-PWE3-MIB", "f3Pwe3SatopJitterBufferSize"), ("F3-PWE3-MIB", "f3Pwe3SatopPayloadSize"), ("F3-PWE3-MIB", "f3Pwe3SatopVlanId"), ("F3-PWE3-MIB", "f3Pwe3SatopVlanPriority"), ("F3-PWE3-MIB", "f3Pwe3SatopRxMplsLabel1"), ("F3-PWE3-MIB", "f3Pwe3SatopRxMplsLabel2"), ("F3-PWE3-MIB", "f3Pwe3SatopTxMplsLabel1"), ("F3-PWE3-MIB", "f3Pwe3SatopTxMplsLabel2"), ("F3-PWE3-MIB", "f3Pwe3SatopAisStabilizationProfile"), ("F3-PWE3-MIB", "f3Pwe3SatopResyncProfile"), ("F3-PWE3-MIB", "f3Pwe3SatopLossProfile"), ("F3-PWE3-MIB", "f3Pwe3SatopTransportMode"), ("F3-PWE3-MIB", "f3Pwe3SatopStorageType"), ("F3-PWE3-MIB", "f3Pwe3SatopRowStatus"), ("F3-PWE3-MIB", "f3Pwe3SatopTDMEntityIndex"), ("F3-PWE3-MIB", "f3Pwe3SatopTDMEntityObject"), ("F3-PWE3-MIB", "f3Pwe3SatopTDMEntityStorageType"), ("F3-PWE3-MIB", "f3Pwe3SatopTDMEntityRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3Pwe3ObjectGroup = f3Pwe3ObjectGroup.setStatus('current')
f3Pwe3PerfObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 4, 2, 2)).setObjects(("F3-PWE3-MIB", "f3Pwe3SatopStatsIndex"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsIntervalType"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsValid"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsAction"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsESs"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsSESs"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsEBs"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsResyncs"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsMaxJitter"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsFramesTx"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsPayloadOctetsTx"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsFramesRx"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsPayloadOctetsRx"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsOutOfSeqFramesRx"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsLostFrames"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsLostFramesStateTrans"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsMalformedFramesRx"), ("F3-PWE3-MIB", "f3Pwe3SatopStatsJitterBufferLateFrames"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryIndex"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryTime"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryValid"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryAction"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryESs"), ("F3-PWE3-MIB", "f3Pwe3SatopHistorySESs"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryEBs"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryResyncs"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryMaxJitter"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryFramesTx"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryPayloadOctetsTx"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryFramesRx"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryPayloadOctetsRx"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryOutOfSeqFramesRx"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryLostFrames"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryLostFramesStateTrans"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryMalformedFramesRx"), ("F3-PWE3-MIB", "f3Pwe3SatopHistoryJitterBufferLateFrames"), ("F3-PWE3-MIB", "f3Pwe3SatopThresholdIndex"), ("F3-PWE3-MIB", "f3Pwe3SatopThresholdInterval"), ("F3-PWE3-MIB", "f3Pwe3SatopThresholdVariable"), ("F3-PWE3-MIB", "f3Pwe3SatopThresholdValueLo"), ("F3-PWE3-MIB", "f3Pwe3SatopThresholdValueHi"), ("F3-PWE3-MIB", "f3Pwe3SatopThresholdMonValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3Pwe3PerfObjectGroup = f3Pwe3PerfObjectGroup.setStatus('current')
f3Pwe3PerfNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2544, 1, 12, 19, 4, 2, 3)).setObjects(("F3-PWE3-MIB", "f3Pwe3SatopThresholdCrossingAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    f3Pwe3PerfNotifGroup = f3Pwe3PerfNotifGroup.setStatus('current')
mibBuilder.exportSymbols("F3-PWE3-MIB", PYSNMP_MODULE_ID=f3Pwe3MIB, f3Pwe3PerfObjectGroup=f3Pwe3PerfObjectGroup, f3Pwe3SatopStatsOutOfSeqFramesRx=f3Pwe3SatopStatsOutOfSeqFramesRx, f3Pwe3LoopbackProfileLength=f3Pwe3LoopbackProfileLength, f3Pwe3ObjectGroup=f3Pwe3ObjectGroup, f3Pwe3LoopbackProfileTable=f3Pwe3LoopbackProfileTable, f3Pwe3LossProfileLossStateEnterTime=f3Pwe3LossProfileLossStateEnterTime, f3Pwe3SatopStatsJitterBufferLateFrames=f3Pwe3SatopStatsJitterBufferLateFrames, f3Pwe3SatopTransportMode=f3Pwe3SatopTransportMode, f3Pwe3SatopTDMEntityObject=f3Pwe3SatopTDMEntityObject, f3Pwe3ResyncProfileTable=f3Pwe3ResyncProfileTable, f3Pwe3SatopTDMEntity=f3Pwe3SatopTDMEntity, f3Pwe3SatopHistoryValid=f3Pwe3SatopHistoryValid, f3Pwe3SatopHistoryJitterBufferLateFrames=f3Pwe3SatopHistoryJitterBufferLateFrames, f3Pwe3AisStabilizationProfileTable=f3Pwe3AisStabilizationProfileTable, f3Pwe3SatopControlWordEnabled=f3Pwe3SatopControlWordEnabled, f3Pwe3Conformance=f3Pwe3Conformance, f3Pwe3SatopResyncProfile=f3Pwe3SatopResyncProfile, f3Pwe3SatopTable=f3Pwe3SatopTable, f3Pwe3SatopRTPUpdateFrequency=f3Pwe3SatopRTPUpdateFrequency, f3Pwe3LossProfileTable=f3Pwe3LossProfileTable, f3Pwe3SatopHistoryResyncs=f3Pwe3SatopHistoryResyncs, f3Pwe3SatopThresholdEntry=f3Pwe3SatopThresholdEntry, f3Pwe3ResyncProfileIncreaseFactor=f3Pwe3ResyncProfileIncreaseFactor, f3Pwe3SatopRxMplsLabel2=f3Pwe3SatopRxMplsLabel2, f3Pwe3SatopTDMEntityIndex=f3Pwe3SatopTDMEntityIndex, PWE3SatopEncapsulationType=PWE3SatopEncapsulationType, f3Pwe3IdlePatternProfileTable=f3Pwe3IdlePatternProfileTable, f3Pwe3SatopRemoteMacAddress=f3Pwe3SatopRemoteMacAddress, f3Pwe3SatopRemoteIpAddress=f3Pwe3SatopRemoteIpAddress, f3Pwe3SatopThresholdTable=f3Pwe3SatopThresholdTable, f3Pwe3SatopStatsPayloadOctetsRx=f3Pwe3SatopStatsPayloadOctetsRx, f3Pwe3SatopRTPEnabled=f3Pwe3SatopRTPEnabled, f3Pwe3Compliance=f3Pwe3Compliance, f3Pwe3PerfNotifGroup=f3Pwe3PerfNotifGroup, f3Pwe3LoopbackProfileIndex=f3Pwe3LoopbackProfileIndex, f3Pwe3SatopThresholdVariable=f3Pwe3SatopThresholdVariable, f3Pwe3SatopStatsSESs=f3Pwe3SatopStatsSESs, f3Pwe3SatopOperationalState=f3Pwe3SatopOperationalState, f3Pwe3SatopStatsFramesRx=f3Pwe3SatopStatsFramesRx, f3Pwe3SatopStatsLostFramesStateTrans=f3Pwe3SatopStatsLostFramesStateTrans, f3Pwe3SatopJitterBufferSize=f3Pwe3SatopJitterBufferSize, f3Pwe3LossProfileEntry=f3Pwe3LossProfileEntry, f3Pwe3SatopStatsIntervalType=f3Pwe3SatopStatsIntervalType, f3Pwe3SatopStatsFramesTx=f3Pwe3SatopStatsFramesTx, f3Pwe3SatopStatsMalformedFramesRx=f3Pwe3SatopStatsMalformedFramesRx, f3Pwe3SatopRxMplsLabel1=f3Pwe3SatopRxMplsLabel1, f3Pwe3SatopTDMEntitiesTable=f3Pwe3SatopTDMEntitiesTable, f3Pwe3SatopThresholdValueLo=f3Pwe3SatopThresholdValueLo, f3Pwe3SatopHistoryLostFramesStateTrans=f3Pwe3SatopHistoryLostFramesStateTrans, f3Pwe3SatopHistoryLostFrames=f3Pwe3SatopHistoryLostFrames, f3Pwe3SatopHistoryTime=f3Pwe3SatopHistoryTime, f3Pwe3SatopEntry=f3Pwe3SatopEntry, f3Pwe3SatopTDMEntityStorageType=f3Pwe3SatopTDMEntityStorageType, f3Pwe3SatopHistoryMalformedFramesRx=f3Pwe3SatopHistoryMalformedFramesRx, f3Pwe3SatopStatsESs=f3Pwe3SatopStatsESs, f3Pwe3Compliances=f3Pwe3Compliances, f3Pwe3ResyncProfileDecreaseFactor=f3Pwe3ResyncProfileDecreaseFactor, f3Pwe3ResyncProfileIndex=f3Pwe3ResyncProfileIndex, f3Pwe3LoopbackProfilePattern=f3Pwe3LoopbackProfilePattern, f3Pwe3SatopHistoryPayloadOctetsRx=f3Pwe3SatopHistoryPayloadOctetsRx, f3Pwe3MIB=f3Pwe3MIB, PWE3SatopRTPTSUpdateFreqType=PWE3SatopRTPTSUpdateFreqType, f3Pwe3SatopDiscoveryType=f3Pwe3SatopDiscoveryType, f3Pwe3SatopStatsIndex=f3Pwe3SatopStatsIndex, f3Pwe3Groups=f3Pwe3Groups, f3Pwe3LoopbackProfileClearPattern=f3Pwe3LoopbackProfileClearPattern, f3Pwe3PerformanceNotifications=f3Pwe3PerformanceNotifications, f3Pwe3SatopHistorySESs=f3Pwe3SatopHistorySESs, f3Pwe3SatopTxMplsLabel1=f3Pwe3SatopTxMplsLabel1, f3Pwe3SatopHistoryOutOfSeqFramesRx=f3Pwe3SatopHistoryOutOfSeqFramesRx, f3Pwe3SatopPayloadSize=f3Pwe3SatopPayloadSize, f3Pwe3SatopVlanId=f3Pwe3SatopVlanId, f3Pwe3ResyncProfileEntry=f3Pwe3ResyncProfileEntry, f3Pwe3SatopLossProfile=f3Pwe3SatopLossProfile, f3Pwe3SatopTDMEntityRowStatus=f3Pwe3SatopTDMEntityRowStatus, f3Pwe3LossProfileLossStateExitTime=f3Pwe3LossProfileLossStateExitTime, f3Pwe3SatopThresholdValueHi=f3Pwe3SatopThresholdValueHi, f3Pwe3SatopRowStatus=f3Pwe3SatopRowStatus, f3Pwe3SatopStatsEBs=f3Pwe3SatopStatsEBs, f3Pwe3SatopStatsTable=f3Pwe3SatopStatsTable, f3Pwe3SatopHistoryPayloadOctetsTx=f3Pwe3SatopHistoryPayloadOctetsTx, f3Pwe3SatopHistoryEntry=f3Pwe3SatopHistoryEntry, f3Pwe3IdlePatternProfileIndex=f3Pwe3IdlePatternProfileIndex, f3Pwe3ResyncProfileResyncThreshold=f3Pwe3ResyncProfileResyncThreshold, f3Pwe3SatopIndex=f3Pwe3SatopIndex, f3Pwe3LoopbackProfileRepeatTime=f3Pwe3LoopbackProfileRepeatTime, f3Pwe3PerformanceObjects=f3Pwe3PerformanceObjects, f3Pwe3SatopThresholdCrossingAlert=f3Pwe3SatopThresholdCrossingAlert, f3Pwe3ConfigObjects=f3Pwe3ConfigObjects, f3Pwe3AisStabilizationProfileIndex=f3Pwe3AisStabilizationProfileIndex, PWE3SatopDiscoveryType=PWE3SatopDiscoveryType, f3Pwe3SatopHistoryFramesRx=f3Pwe3SatopHistoryFramesRx, f3Pwe3SatopTxMplsLabel2=f3Pwe3SatopTxMplsLabel2, f3Pwe3SatopHistoryESs=f3Pwe3SatopHistoryESs, f3Pwe3SatopHistoryIndex=f3Pwe3SatopHistoryIndex, f3Pwe3SatopThresholdInterval=f3Pwe3SatopThresholdInterval, f3Pwe3AisStabilizationProfileExitTime=f3Pwe3AisStabilizationProfileExitTime, f3Pwe3SatopAisStabilizationProfile=f3Pwe3SatopAisStabilizationProfile, f3Pwe3IdlePatternProfileEntry=f3Pwe3IdlePatternProfileEntry, f3Pwe3SatopStatsPayloadOctetsTx=f3Pwe3SatopStatsPayloadOctetsTx, f3Pwe3SatopTDMEntitiesEntry=f3Pwe3SatopTDMEntitiesEntry, f3Pwe3SatopStatsEntry=f3Pwe3SatopStatsEntry, f3Pwe3SatopThresholdMonValue=f3Pwe3SatopThresholdMonValue, f3Pwe3SatopAdminState=f3Pwe3SatopAdminState, MplsLabel=MplsLabel, f3Pwe3SatopSecondaryState=f3Pwe3SatopSecondaryState, f3Pwe3SatopHistoryEBs=f3Pwe3SatopHistoryEBs, f3Pwe3SatopHistoryTable=f3Pwe3SatopHistoryTable, f3Pwe3SatopStorageType=f3Pwe3SatopStorageType, f3Pwe3SatopAlias=f3Pwe3SatopAlias, PWE3SatopTransportMode=PWE3SatopTransportMode, f3Pwe3SatopHistoryAction=f3Pwe3SatopHistoryAction, f3Pwe3IdlePatternProfileByte=f3Pwe3IdlePatternProfileByte, f3Pwe3SatopHistoryFramesTx=f3Pwe3SatopHistoryFramesTx, f3Pwe3SatopEncapsulationType=f3Pwe3SatopEncapsulationType, f3Pwe3SatopStatsLostFrames=f3Pwe3SatopStatsLostFrames, f3Pwe3LoopbackProfileClearLength=f3Pwe3LoopbackProfileClearLength, f3Pwe3SatopHistoryMaxJitter=f3Pwe3SatopHistoryMaxJitter, f3Pwe3LossProfileIndex=f3Pwe3LossProfileIndex, f3Pwe3AisStabilizationProfileEntry=f3Pwe3AisStabilizationProfileEntry, f3Pwe3SatopStatsAction=f3Pwe3SatopStatsAction, f3Pwe3SatopVlanPriority=f3Pwe3SatopVlanPriority, f3Pwe3SatopStatsResyncs=f3Pwe3SatopStatsResyncs, f3Pwe3SatopStatsMaxJitter=f3Pwe3SatopStatsMaxJitter, f3Pwe3LoopbackProfileEntry=f3Pwe3LoopbackProfileEntry, f3Pwe3SatopStatsValid=f3Pwe3SatopStatsValid, f3Pwe3AisStabilizationProfileEnterTime=f3Pwe3AisStabilizationProfileEnterTime, f3Pwe3SatopThresholdIndex=f3Pwe3SatopThresholdIndex)
