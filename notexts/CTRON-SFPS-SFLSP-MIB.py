#
# PySNMP MIB module CTRON-SFPS-SFLSP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-SFPS-SFLSP-MIB
# Produced by pysmi-1.1.12 at Tue Jun  4 12:20:46 2024
# On host fv-az1789-327 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
vlanSflspTracePathAPI, vlanSflspLSDBFlood, vlanSflspInterfaces, vlanSflspArea, vlanSflspNeighbors, vlanSflspLSPStats, vlanSflspLsdb, vlanSflsp1stHop, vlanSflspIfMetric, vlanSflspGeneralVariables, vlanSflspTracePathInternal = mibBuilder.importSymbols("CTRON-SFPS-INCLUDE-MIB", "vlanSflspTracePathAPI", "vlanSflspLSDBFlood", "vlanSflspInterfaces", "vlanSflspArea", "vlanSflspNeighbors", "vlanSflspLSPStats", "vlanSflspLsdb", "vlanSflsp1stHop", "vlanSflspIfMetric", "vlanSflspGeneralVariables", "vlanSflspTracePathInternal")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, TimeTicks, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Integer32, Counter64, Gauge32, IpAddress, ModuleIdentity, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Integer32", "Counter64", "Gauge32", "IpAddress", "ModuleIdentity", "NotificationType", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class SfpsAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

vlanSflspGeneralSwitchID = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspGeneralSwitchID.setStatus('mandatory')
vlanSflspGeneralAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspGeneralAdminStatus.setStatus('mandatory')
vlanSflspGeneralVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspGeneralVersion.setStatus('mandatory')
vlanSflspGeneralAreaBRStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspGeneralAreaBRStatus.setStatus('mandatory')
vlanSflspGeneralASBRStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspGeneralASBRStatus.setStatus('mandatory')
vlanSflspGeneralTOSSupport = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspGeneralTOSSupport.setStatus('mandatory')
vlanSflspGeneralOrgNewLSAs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspGeneralOrgNewLSAs.setStatus('mandatory')
vlanSflspGeneralRcvNewLSAs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspGeneralRcvNewLSAs.setStatus('mandatory')
vlanSflspGeneralMaxOnQueue = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspGeneralMaxOnQueue.setStatus('mandatory')
vlanSflspGeneralCurOnQueue = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspGeneralCurOnQueue.setStatus('mandatory')
vlanSflspGeneralMaxTimeUs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspGeneralMaxTimeUs.setStatus('mandatory')
vlanSflspGeneralCurTimeUs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspGeneralCurTimeUs.setStatus('mandatory')
vlanSflspGeneralMaxEvents = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspGeneralMaxEvents.setStatus('mandatory')
vlanSflspGeneralMaxTimeOccurred = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 14), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspGeneralMaxTimeOccurred.setStatus('mandatory')
vlanSflspGeneralMaxOnQOccurred = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 15), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspGeneralMaxOnQOccurred.setStatus('mandatory')
vlanSflspGeneralTotalSwLinks = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspGeneralTotalSwLinks.setStatus('mandatory')
vlanSflspGeneralLastChangeDet = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 17), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspGeneralLastChangeDet.setStatus('mandatory')
vlanSflspGeneralFloodMask = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspGeneralFloodMask.setStatus('mandatory')
vlanSflspGeneralLowestMac = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspGeneralLowestMac.setStatus('mandatory')
vlanSflspGeneralRootId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 20), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspGeneralRootId.setStatus('mandatory')
vlanSflspGeneralFloodAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspGeneralFloodAdminStatus.setStatus('mandatory')
vlanSflspLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 2, 1), )
if mibBuilder.loadTexts: vlanSflspLsdbTable.setStatus('mandatory')
vlanSflspLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 2, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspLsdbAreaID"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspLsdbType"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspLsdbLSID"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspLsdbSwitchID"))
if mibBuilder.loadTexts: vlanSflspLsdbEntry.setStatus('mandatory')
vlanSflspLsdbAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLsdbAreaID.setStatus('mandatory')
vlanSflspLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switch-link", 1), ("connection-link", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLsdbType.setStatus('mandatory')
vlanSflspLsdbLSID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 2, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLsdbLSID.setStatus('mandatory')
vlanSflspLsdbSwitchID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 2, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLsdbSwitchID.setStatus('mandatory')
vlanSflspLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLsdbSequence.setStatus('mandatory')
vlanSflspLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLsdbAge.setStatus('mandatory')
vlanSflspLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLsdbChecksum.setStatus('mandatory')
vlanSflspLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 2, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLsdbAdvertisement.setStatus('mandatory')
vlanSflspLsdbUsedInSPF = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLsdbUsedInSPF.setStatus('mandatory')
vlanSflspInterfacesTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1), )
if mibBuilder.loadTexts: vlanSflspInterfacesTable.setStatus('mandatory')
vlanSflspInterfacesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspInterfacesIFAddress"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspInterfacesSwAddressLess"))
if mibBuilder.loadTexts: vlanSflspInterfacesEntry.setStatus('mandatory')
vlanSflspInterfacesIFAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 1), SfpsAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspInterfacesIFAddress.setStatus('mandatory')
vlanSflspInterfacesSwAddressLess = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspInterfacesSwAddressLess.setStatus('mandatory')
vlanSflspInterfacesAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspInterfacesAreaID.setStatus('mandatory')
vlanSflspInterfacesIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("brodcast", 1), ("nbma", 2), ("point-to-point", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspInterfacesIfType.setStatus('mandatory')
vlanSflspInterfacesAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspInterfacesAdminStatus.setStatus('mandatory')
vlanSflspInterfacesSwPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspInterfacesSwPriority.setStatus('mandatory')
vlanSflspInterfacesTransDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspInterfacesTransDelay.setStatus('mandatory')
vlanSflspInterfacesReTransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspInterfacesReTransInterval.setStatus('mandatory')
vlanSflspInterfacesHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspInterfacesHelloInterval.setStatus('mandatory')
vlanSflspInterfacesDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspInterfacesDeadInterval.setStatus('mandatory')
vlanSflspInterfacesPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspInterfacesPollInterval.setStatus('mandatory')
vlanSflspInterfacesState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("down", 1), ("loopback", 2), ("waiting", 3), ("point-to-point", 4), ("dr", 5), ("bdr", 6), ("dr-other", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspInterfacesState.setStatus('mandatory')
vlanSflspInterfacesDS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 13), SfpsAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspInterfacesDS.setStatus('mandatory')
vlanSflspInterfacesBDS = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 14), SfpsAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspInterfacesBDS.setStatus('mandatory')
vlanSflspInterfacesEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspInterfacesEvents.setStatus('mandatory')
vlanSflspInterfacesAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 3, 1, 1, 16), SfpsAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspInterfacesAuthKey.setStatus('mandatory')
vlanSflspIfMetricTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 4, 1), )
if mibBuilder.loadTexts: vlanSflspIfMetricTable.setStatus('mandatory')
vlanSflspIfMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 4, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspIfMetricIfAddress"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspIfMetricIfTOSType"))
if mibBuilder.loadTexts: vlanSflspIfMetricEntry.setStatus('mandatory')
vlanSflspIfMetricIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 4, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspIfMetricIfAddress.setStatus('mandatory')
vlanSflspIfMetricIfTOSType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspIfMetricIfTOSType.setStatus('mandatory')
vlanSflspIfMetricIfMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 4, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspIfMetricIfMetric.setStatus('mandatory')
vlanSflspIfMetricIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspIfMetricIfStatus.setStatus('mandatory')
vlanSflspNeighborsTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1), )
if mibBuilder.loadTexts: vlanSflspNeighborsTable.setStatus('mandatory')
vlanSflspNeighborsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspNeighborsPortName"))
if mibBuilder.loadTexts: vlanSflspNeighborsEntry.setStatus('mandatory')
vlanSflspNeighborsPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsPortName.setStatus('mandatory')
vlanSflspNeighborsSwitchID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsSwitchID.setStatus('mandatory')
vlanSflspNeighborsOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsOptions.setStatus('mandatory')
vlanSflspNeighborsPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsPriority.setStatus('mandatory')
vlanSflspNeighborsState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("two-way", 4), ("exchange", 5), ("exchange-start", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsState.setStatus('mandatory')
vlanSflspNeighborsEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsEvents.setStatus('mandatory')
vlanSflspNeighborsLSRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsLSRetransQLen.setStatus('mandatory')
vlanSflspNeighborsHELLOsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsHELLOsRcvd.setStatus('mandatory')
vlanSflspNeighborsDBDsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsDBDsRcvd.setStatus('mandatory')
vlanSflspNeighborsLSUsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsLSUsRcvd.setStatus('mandatory')
vlanSflspNeighborsLSRsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsLSRsRcvd.setStatus('mandatory')
vlanSflspNeighborsLSACKsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsLSACKsRcvd.setStatus('mandatory')
vlanSflspNeighborsHELLOsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsHELLOsSent.setStatus('mandatory')
vlanSflspNeighborsDBDsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsDBDsSent.setStatus('mandatory')
vlanSflspNeighborsLSUsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsLSUsSent.setStatus('mandatory')
vlanSflspNeighborsLSRsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsLSRsSent.setStatus('mandatory')
vlanSflspNeighborsLSACKsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsLSACKsSent.setStatus('mandatory')
vlanSflspNeighborsNBMAStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsNBMAStatus.setStatus('mandatory')
vlanSflspNeighborsFULLTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 5, 1, 1, 19), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspNeighborsFULLTimeSec.setStatus('mandatory')
vlanSflspAreaTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 6, 1), )
if mibBuilder.loadTexts: vlanSflspAreaTable.setStatus('mandatory')
vlanSflspAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 6, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspAreaAreaID"))
if mibBuilder.loadTexts: vlanSflspAreaEntry.setStatus('mandatory')
vlanSflspAreaAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 6, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspAreaAreaID.setStatus('mandatory')
vlanSflspAreaAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 6, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspAreaAuthType.setStatus('mandatory')
vlanSflspAreaSPFRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 6, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspAreaSPFRuns.setStatus('mandatory')
vlanSflspAreaABRCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 6, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspAreaABRCount.setStatus('mandatory')
vlanSflspAreaASBRCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 6, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspAreaASBRCount.setStatus('mandatory')
vlanSflspAreaAreaLSACnt = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 6, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspAreaAreaLSACnt.setStatus('mandatory')
vlanSflspAreaAreaCheckSum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 6, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspAreaAreaCheckSum.setStatus('mandatory')
vlanSflspAreaLastSpfRun = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 6, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspAreaLastSpfRun.setStatus('mandatory')
vlanSflsp1stHopTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 7, 1), )
if mibBuilder.loadTexts: vlanSflsp1stHopTable.setStatus('mandatory')
vlanSflsp1stHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 7, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SFLSP-MIB", "vlanSflsp1stHopDestSwitch"))
if mibBuilder.loadTexts: vlanSflsp1stHopEntry.setStatus('mandatory')
vlanSflsp1stHopDestSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 7, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflsp1stHopDestSwitch.setStatus('mandatory')
vlanSflsp1stHopPath11stHop = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 7, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflsp1stHopPath11stHop.setStatus('mandatory')
vlanSflsp1stHopPath21stHop = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 7, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflsp1stHopPath21stHop.setStatus('mandatory')
vlanSflsp1stHopPath31stHop = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 7, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflsp1stHopPath31stHop.setStatus('mandatory')
vlanSflspTracePathAPIDest = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 1, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspTracePathAPIDest.setStatus('mandatory')
vlanSflspTracePathAPIID = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspTracePathAPIID.setStatus('mandatory')
vlanSflspTracePathAPIType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspTracePathAPIType.setStatus('mandatory')
vlanSflspTracePathAPIAction = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("activate", 2), ("suspend", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspTracePathAPIAction.setStatus('mandatory')
vlanSflspTracePathTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 1), )
if mibBuilder.loadTexts: vlanSflspTracePathTable.setStatus('mandatory')
vlanSflspTracePathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspTracePathDest"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspTracePathID"))
if mibBuilder.loadTexts: vlanSflspTracePathEntry.setStatus('mandatory')
vlanSflspTracePathDest = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspTracePathDest.setStatus('mandatory')
vlanSflspTracePathID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspTracePathID.setStatus('mandatory')
vlanSflspTracePathAction = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("activate", 2), ("suspend", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspTracePathAction.setStatus('mandatory')
vlanSflspTracePathStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("success", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspTracePathStatus.setStatus('mandatory')
vlanSflspTracePathListTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 2), )
if mibBuilder.loadTexts: vlanSflspTracePathListTable.setStatus('mandatory')
vlanSflspTracePathListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 2, 1), ).setIndexNames((0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspTracePathListDest"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspTracePathListID"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspTracePathListPathNum"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspTracePathListHopNum"))
if mibBuilder.loadTexts: vlanSflspTracePathListEntry.setStatus('mandatory')
vlanSflspTracePathListDest = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspTracePathListDest.setStatus('mandatory')
vlanSflspTracePathListID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspTracePathListID.setStatus('mandatory')
vlanSflspTracePathListPathNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspTracePathListPathNum.setStatus('mandatory')
vlanSflspTracePathListHopNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspTracePathListHopNum.setStatus('mandatory')
vlanSflspTracePathListHopAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 8, 2, 2, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspTracePathListHopAddr.setStatus('mandatory')
vlanSflspLSDBFloodTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1), )
if mibBuilder.loadTexts: vlanSflspLSDBFloodTable.setStatus('mandatory')
vlanSflspLSDBFloodEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1, 1), ).setIndexNames((0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspLSDBFloodAreaID"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspLSDBFloodType"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspLSDBFloodLSID"), (0, "CTRON-SFPS-SFLSP-MIB", "vlanSflspLSDBFloodAdvSwitchID"))
if mibBuilder.loadTexts: vlanSflspLSDBFloodEntry.setStatus('mandatory')
vlanSflspLSDBFloodAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSDBFloodAreaID.setStatus('mandatory')
vlanSflspLSDBFloodType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switchLink", 1), ("connectionLink", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSDBFloodType.setStatus('mandatory')
vlanSflspLSDBFloodLSID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1, 1, 3), SfpsAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSDBFloodLSID.setStatus('mandatory')
vlanSflspLSDBFloodAdvSwitchID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1, 1, 4), SfpsAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSDBFloodAdvSwitchID.setStatus('mandatory')
vlanSflspLSDBFloodSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSDBFloodSequence.setStatus('mandatory')
vlanSflspLSDBFloodAge = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSDBFloodAge.setStatus('mandatory')
vlanSflspLSDBFloodChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSDBFloodChecksum.setStatus('mandatory')
vlanSflspLSDBFloodAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1, 1, 8), SfpsAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSDBFloodAdvertisement.setStatus('mandatory')
vlanSflspLSDBFloodUsedInSPF = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSDBFloodUsedInSPF.setStatus('mandatory')
vlanSflspLSDBFloodEverUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 20, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSDBFloodEverUsed.setStatus('mandatory')
vlanSflspLSPStatsMaxOnQueue = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsMaxOnQueue.setStatus('mandatory')
vlanSflspLSPStatsCurOnQueue = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsCurOnQueue.setStatus('mandatory')
vlanSflspLSPStatsMaxTimeUs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsMaxTimeUs.setStatus('mandatory')
vlanSflspLSPStatsCurTimeUs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsCurTimeUs.setStatus('mandatory')
vlanSflspLSPStatsMaxTimeOccurred = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsMaxTimeOccurred.setStatus('mandatory')
vlanSflspLSPStatsMaxOnQOccurred = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsMaxOnQOccurred.setStatus('mandatory')
vlanSflspLSPStatsTotalSwLinks = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsTotalSwLinks.setStatus('mandatory')
vlanSflspLSPStatsLastChangeDet = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsLastChangeDet.setStatus('mandatory')
vlanSflspLSPStatsNumSPFRuns = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanSflspLSPStatsNumSPFRuns.setStatus('mandatory')
vlanSflspLSPStatsNumFULLNbrs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsNumFULLNbrs.setStatus('mandatory')
vlanSflspLSPStatsNumIntfs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsNumIntfs.setStatus('mandatory')
vlanSflspLSPStatsNum1stHops = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsNum1stHops.setStatus('mandatory')
vlanSflspLSPStatsNumUpdates = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsNumUpdates.setStatus('mandatory')
vlanSflspLSPStatsLastUpdateRecvd = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 12, 1, 2, 7, 21, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSflspLSPStatsLastUpdateRecvd.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-SFPS-SFLSP-MIB", vlanSflspLSPStatsTotalSwLinks=vlanSflspLSPStatsTotalSwLinks, vlanSflspInterfacesAdminStatus=vlanSflspInterfacesAdminStatus, vlanSflspAreaEntry=vlanSflspAreaEntry, vlanSflspTracePathListID=vlanSflspTracePathListID, SfpsAddress=SfpsAddress, vlanSflspInterfacesEvents=vlanSflspInterfacesEvents, vlanSflsp1stHopEntry=vlanSflsp1stHopEntry, vlanSflspLSPStatsLastChangeDet=vlanSflspLSPStatsLastChangeDet, vlanSflspGeneralMaxTimeUs=vlanSflspGeneralMaxTimeUs, vlanSflspNeighborsEntry=vlanSflspNeighborsEntry, vlanSflspGeneralAdminStatus=vlanSflspGeneralAdminStatus, vlanSflspGeneralMaxTimeOccurred=vlanSflspGeneralMaxTimeOccurred, vlanSflspInterfacesDeadInterval=vlanSflspInterfacesDeadInterval, vlanSflspNeighborsSwitchID=vlanSflspNeighborsSwitchID, vlanSflspNeighborsLSUsRcvd=vlanSflspNeighborsLSUsRcvd, vlanSflspNeighborsNBMAStatus=vlanSflspNeighborsNBMAStatus, vlanSflspGeneralMaxOnQOccurred=vlanSflspGeneralMaxOnQOccurred, vlanSflspGeneralCurTimeUs=vlanSflspGeneralCurTimeUs, vlanSflspLSPStatsNum1stHops=vlanSflspLSPStatsNum1stHops, vlanSflspTracePathAPIAction=vlanSflspTracePathAPIAction, vlanSflspInterfacesBDS=vlanSflspInterfacesBDS, vlanSflspGeneralFloodAdminStatus=vlanSflspGeneralFloodAdminStatus, vlanSflspAreaAuthType=vlanSflspAreaAuthType, vlanSflspLSDBFloodEverUsed=vlanSflspLSDBFloodEverUsed, vlanSflspLSPStatsNumSPFRuns=vlanSflspLSPStatsNumSPFRuns, vlanSflspTracePathListHopAddr=vlanSflspTracePathListHopAddr, vlanSflspAreaASBRCount=vlanSflspAreaASBRCount, vlanSflspLSDBFloodAge=vlanSflspLSDBFloodAge, vlanSflspLsdbEntry=vlanSflspLsdbEntry, vlanSflsp1stHopPath11stHop=vlanSflsp1stHopPath11stHop, vlanSflspGeneralTotalSwLinks=vlanSflspGeneralTotalSwLinks, vlanSflspLSPStatsCurOnQueue=vlanSflspLSPStatsCurOnQueue, vlanSflspLsdbLSID=vlanSflspLsdbLSID, vlanSflspNeighborsLSUsSent=vlanSflspNeighborsLSUsSent, vlanSflspNeighborsPortName=vlanSflspNeighborsPortName, vlanSflspInterfacesEntry=vlanSflspInterfacesEntry, vlanSflspInterfacesSwPriority=vlanSflspInterfacesSwPriority, vlanSflspLsdbAreaID=vlanSflspLsdbAreaID, vlanSflspNeighborsDBDsSent=vlanSflspNeighborsDBDsSent, vlanSflspNeighborsFULLTimeSec=vlanSflspNeighborsFULLTimeSec, vlanSflspInterfacesAuthKey=vlanSflspInterfacesAuthKey, vlanSflspTracePathAPIID=vlanSflspTracePathAPIID, vlanSflspTracePathAPIType=vlanSflspTracePathAPIType, vlanSflspLSDBFloodTable=vlanSflspLSDBFloodTable, vlanSflspTracePathDest=vlanSflspTracePathDest, vlanSflspLSPStatsMaxOnQueue=vlanSflspLSPStatsMaxOnQueue, vlanSflspGeneralRcvNewLSAs=vlanSflspGeneralRcvNewLSAs, vlanSflspLSPStatsNumIntfs=vlanSflspLSPStatsNumIntfs, vlanSflspIfMetricIfTOSType=vlanSflspIfMetricIfTOSType, vlanSflspNeighborsEvents=vlanSflspNeighborsEvents, vlanSflspNeighborsHELLOsSent=vlanSflspNeighborsHELLOsSent, vlanSflspLSDBFloodLSID=vlanSflspLSDBFloodLSID, vlanSflspLSDBFloodSequence=vlanSflspLSDBFloodSequence, vlanSflspLsdbAge=vlanSflspLsdbAge, vlanSflspGeneralVersion=vlanSflspGeneralVersion, vlanSflspTracePathListPathNum=vlanSflspTracePathListPathNum, vlanSflspLSDBFloodType=vlanSflspLSDBFloodType, vlanSflspLSPStatsNumFULLNbrs=vlanSflspLSPStatsNumFULLNbrs, vlanSflspGeneralMaxOnQueue=vlanSflspGeneralMaxOnQueue, vlanSflspInterfacesIfType=vlanSflspInterfacesIfType, vlanSflspNeighborsDBDsRcvd=vlanSflspNeighborsDBDsRcvd, vlanSflspGeneralMaxEvents=vlanSflspGeneralMaxEvents, vlanSflspAreaAreaLSACnt=vlanSflspAreaAreaLSACnt, vlanSflspLSDBFloodAreaID=vlanSflspLSDBFloodAreaID, vlanSflspLsdbSequence=vlanSflspLsdbSequence, vlanSflspGeneralLastChangeDet=vlanSflspGeneralLastChangeDet, vlanSflspInterfacesPollInterval=vlanSflspInterfacesPollInterval, vlanSflspLSPStatsMaxTimeOccurred=vlanSflspLSPStatsMaxTimeOccurred, vlanSflspInterfacesIFAddress=vlanSflspInterfacesIFAddress, vlanSflspTracePathID=vlanSflspTracePathID, vlanSflsp1stHopTable=vlanSflsp1stHopTable, vlanSflspGeneralLowestMac=vlanSflspGeneralLowestMac, vlanSflspNeighborsOptions=vlanSflspNeighborsOptions, vlanSflspGeneralOrgNewLSAs=vlanSflspGeneralOrgNewLSAs, vlanSflspAreaLastSpfRun=vlanSflspAreaLastSpfRun, vlanSflsp1stHopPath21stHop=vlanSflsp1stHopPath21stHop, vlanSflspNeighborsLSACKsRcvd=vlanSflspNeighborsLSACKsRcvd, vlanSflspNeighborsTable=vlanSflspNeighborsTable, vlanSflspInterfacesTransDelay=vlanSflspInterfacesTransDelay, vlanSflspLsdbUsedInSPF=vlanSflspLsdbUsedInSPF, vlanSflspLSDBFloodChecksum=vlanSflspLSDBFloodChecksum, vlanSflspTracePathStatus=vlanSflspTracePathStatus, vlanSflspLsdbSwitchID=vlanSflspLsdbSwitchID, vlanSflspInterfacesReTransInterval=vlanSflspInterfacesReTransInterval, vlanSflspLSPStatsMaxTimeUs=vlanSflspLSPStatsMaxTimeUs, vlanSflspTracePathAction=vlanSflspTracePathAction, vlanSflspLSDBFloodAdvSwitchID=vlanSflspLSDBFloodAdvSwitchID, vlanSflspTracePathAPIDest=vlanSflspTracePathAPIDest, vlanSflspInterfacesDS=vlanSflspInterfacesDS, vlanSflspLSPStatsMaxOnQOccurred=vlanSflspLSPStatsMaxOnQOccurred, vlanSflspTracePathListDest=vlanSflspTracePathListDest, vlanSflspAreaABRCount=vlanSflspAreaABRCount, vlanSflspLSDBFloodUsedInSPF=vlanSflspLSDBFloodUsedInSPF, vlanSflspLsdbTable=vlanSflspLsdbTable, vlanSflsp1stHopPath31stHop=vlanSflsp1stHopPath31stHop, vlanSflspAreaTable=vlanSflspAreaTable, vlanSflspInterfacesState=vlanSflspInterfacesState, vlanSflspAreaAreaCheckSum=vlanSflspAreaAreaCheckSum, vlanSflspTracePathEntry=vlanSflspTracePathEntry, vlanSflspInterfacesAreaID=vlanSflspInterfacesAreaID, vlanSflspNeighborsLSRsRcvd=vlanSflspNeighborsLSRsRcvd, vlanSflspNeighborsLSRsSent=vlanSflspNeighborsLSRsSent, vlanSflspNeighborsHELLOsRcvd=vlanSflspNeighborsHELLOsRcvd, vlanSflspGeneralSwitchID=vlanSflspGeneralSwitchID, vlanSflspLSPStatsCurTimeUs=vlanSflspLSPStatsCurTimeUs, vlanSflspIfMetricIfMetric=vlanSflspIfMetricIfMetric, vlanSflspIfMetricEntry=vlanSflspIfMetricEntry, vlanSflspLSPStatsNumUpdates=vlanSflspLSPStatsNumUpdates, vlanSflspNeighborsPriority=vlanSflspNeighborsPriority, vlanSflspIfMetricTable=vlanSflspIfMetricTable, vlanSflspLsdbType=vlanSflspLsdbType, vlanSflspInterfacesTable=vlanSflspInterfacesTable, vlanSflspGeneralFloodMask=vlanSflspGeneralFloodMask, vlanSflspTracePathListTable=vlanSflspTracePathListTable, vlanSflspIfMetricIfStatus=vlanSflspIfMetricIfStatus, vlanSflspNeighborsLSACKsSent=vlanSflspNeighborsLSACKsSent, vlanSflspAreaSPFRuns=vlanSflspAreaSPFRuns, vlanSflspGeneralTOSSupport=vlanSflspGeneralTOSSupport, vlanSflspLSDBFloodEntry=vlanSflspLSDBFloodEntry, vlanSflspLSDBFloodAdvertisement=vlanSflspLSDBFloodAdvertisement, vlanSflspAreaAreaID=vlanSflspAreaAreaID, vlanSflspGeneralRootId=vlanSflspGeneralRootId, vlanSflspGeneralASBRStatus=vlanSflspGeneralASBRStatus, vlanSflspInterfacesHelloInterval=vlanSflspInterfacesHelloInterval, vlanSflspTracePathListEntry=vlanSflspTracePathListEntry, vlanSflspLSPStatsLastUpdateRecvd=vlanSflspLSPStatsLastUpdateRecvd, vlanSflspLsdbAdvertisement=vlanSflspLsdbAdvertisement, vlanSflspNeighborsState=vlanSflspNeighborsState, vlanSflspIfMetricIfAddress=vlanSflspIfMetricIfAddress, vlanSflsp1stHopDestSwitch=vlanSflsp1stHopDestSwitch, vlanSflspGeneralCurOnQueue=vlanSflspGeneralCurOnQueue, vlanSflspNeighborsLSRetransQLen=vlanSflspNeighborsLSRetransQLen, vlanSflspTracePathTable=vlanSflspTracePathTable, vlanSflspTracePathListHopNum=vlanSflspTracePathListHopNum, vlanSflspLsdbChecksum=vlanSflspLsdbChecksum, vlanSflspInterfacesSwAddressLess=vlanSflspInterfacesSwAddressLess, vlanSflspGeneralAreaBRStatus=vlanSflspGeneralAreaBRStatus)
