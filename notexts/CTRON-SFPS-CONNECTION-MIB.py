#
# PySNMP MIB module CTRON-SFPS-CONNECTION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-SFPS-CONNECTION-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 13:28:37 2024
# On host fv-az883-167 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
sfpsConnectionQueryAPI, sfpsConnectionLookupAPI, sfpsConnectionTestAPI, sfpsConnectionAPI, sfpsConnectionStats, sfpsSwitchConnections, sfpsCNXPacketStats, sfpsConnectionConfigAPI = mibBuilder.importSymbols("CTRON-SFPS-INCLUDE-MIB", "sfpsConnectionQueryAPI", "sfpsConnectionLookupAPI", "sfpsConnectionTestAPI", "sfpsConnectionAPI", "sfpsConnectionStats", "sfpsSwitchConnections", "sfpsCNXPacketStats", "sfpsConnectionConfigAPI")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, iso, TimeTicks, Counter32, Gauge32, ModuleIdentity, Bits, NotificationType, Integer32, Unsigned32, IpAddress, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "iso", "TimeTicks", "Counter32", "Gauge32", "ModuleIdentity", "Bits", "NotificationType", "Integer32", "Unsigned32", "IpAddress", "MibIdentifier", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class SfpsSwitchPort(Integer32):
    pass

class SfpsAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

sfpsConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1), )
if mibBuilder.loadTexts: sfpsConnectionTable.setStatus('mandatory')
sfpsConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1), ).setIndexNames((0, "CTRON-SFPS-CONNECTION-MIB", "sfpsConnectionDestination"), (0, "CTRON-SFPS-CONNECTION-MIB", "sfpsConnectionSource"))
if mibBuilder.loadTexts: sfpsConnectionEntry.setStatus('mandatory')
sfpsConnectionDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 1), SfpsAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionDestination.setStatus('mandatory')
sfpsConnectionSource = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 2), SfpsAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionSource.setStatus('mandatory')
sfpsConnectionPrimInPort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionPrimInPort.setStatus('mandatory')
sfpsConnectionPrimOutPort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionPrimOutPort.setStatus('mandatory')
sfpsConnectionSecInPort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionSecInPort.setStatus('mandatory')
sfpsConnectionSecOutPort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionSecOutPort.setStatus('mandatory')
sfpsConnectionCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("activate", 2), ("delete", 3), ("under-creation", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionCtrlStatus.setStatus('mandatory')
sfpsConnectionAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionAdminStatus.setStatus('mandatory')
sfpsConnectionAge = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionAge.setStatus('mandatory')
sfpsConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("filter", 1), ("provisioned", 2), ("switched", 3), ("netport-filter", 4), ("self-prog-non-filter", 5), ("vlan", 6), ("tap", 7), ("mcast", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionType.setStatus('mandatory')
sfpsConnectionPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionPkts.setStatus('mandatory')
sfpsConnectionBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionBytes.setStatus('mandatory')
sfpsConnectionCanAge = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionCanAge.setStatus('mandatory')
sfpsConnectionPrimOutPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionPrimOutPorts.setStatus('mandatory')
sfpsConnectionSecOutPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionSecOutPorts.setStatus('mandatory')
sfpsAPIVerb = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("map", 2), ("unmap", 3), ("unmapall", 4))).clone('map')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIVerb.setStatus('mandatory')
sfpsAPIInPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 2), SfpsSwitchPort()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIInPort.setStatus('mandatory')
sfpsAPIInHeaderType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("mac-da-sa", 2), ("atm-vpi-vci", 3))).clone('mac-da-sa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIInHeaderType.setStatus('mandatory')
sfpsAPIInHeaderLength = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)).clone(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIInHeaderLength.setStatus('mandatory')
sfpsAPIInHeaderValue = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIInHeaderValue.setStatus('mandatory')
sfpsAPIOutPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 6), SfpsSwitchPort()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIOutPort.setStatus('mandatory')
sfpsAPIOutHeaderType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("mac-da-sa", 2), ("atm-vpi-vci", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIOutHeaderType.setStatus('mandatory')
sfpsAPIOutHeaderLength = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIOutHeaderLength.setStatus('mandatory')
sfpsAPIOutHeaderValue = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIOutHeaderValue.setStatus('mandatory')
sfpsAPIArgumentDirection = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("bi-directional", 2), ("uni-directional", 3))).clone('bi-directional')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIArgumentDirection.setStatus('mandatory')
sfpsAPIArgumentOwner = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("own-the-call", 2), ("dont-own-the-call", 3))).clone('dont-own-the-call')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIArgumentOwner.setStatus('mandatory')
sfpsAPIArgumentPriority = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("priority-1", 2), ("priority-2", 3), ("priority-3", 4), ("priority-4", 5), ("priority-5", 6))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIArgumentPriority.setStatus('mandatory')
sfpsAPIType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("switched", 2), ("filtered", 3), ("provisioned", 4))).clone('switched')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsAPIType.setStatus('mandatory')
sfpsConnectionStatsMaxCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsMaxCnxs.setStatus('mandatory')
sfpsConnectionStatsTotalCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsTotalCnxs.setStatus('mandatory')
sfpsConnectionStatsSwitchedCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsSwitchedCnxs.setStatus('mandatory')
sfpsConnectionStatsVlanCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsVlanCnxs.setStatus('mandatory')
sfpsConnectionStatsFilterCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsFilterCnxs.setStatus('mandatory')
sfpsConnectionStatsSelfProgCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsSelfProgCnxs.setStatus('mandatory')
sfpsConnectionStatsProvsnedCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsProvsnedCnxs.setStatus('mandatory')
sfpsConnectionStatsTapCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsTapCnxs.setStatus('mandatory')
sfpsConnectionStatsMcastCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsMcastCnxs.setStatus('mandatory')
sfpsConnectionStatsNetPortFilterCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsNetPortFilterCnxs.setStatus('mandatory')
sfpsConnectionStatsNonCriticalVlans = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsNonCriticalVlans.setStatus('mandatory')
sfpsConnectionStatsAddErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsAddErrors.setStatus('mandatory')
sfpsConnectionStatsDeleteErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 4, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionStatsDeleteErrors.setStatus('mandatory')
sfpsConnectionTestAPIVerb = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fillTable", 1), ("reapAllCnxs", 2), ("reapCnxsGivenMac", 3), ("reapCnxsGivenPort", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionTestAPIVerb.setStatus('mandatory')
sfpsConnectionTestAPIType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("filter", 1), ("provisioned", 2), ("switched", 3), ("netport-filter", 4), ("self-prog-non-filter", 5), ("vlan", 6), ("tap", 7), ("mcast", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionTestAPIType.setStatus('mandatory')
sfpsConnectionTestAPINumCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionTestAPINumCnxs.setStatus('mandatory')
sfpsConnectionTestAPIMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 6, 4), SfpsAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionTestAPIMacAddr.setStatus('mandatory')
sfpsConnectionTestAPIPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 6, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionTestAPIPort.setStatus('mandatory')
sfpsConnectionConfigAPIVerb = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("agePartial", 1), ("ageFull", 2), ("setParameter", 3), ("ageFilters", 4), ("stopAging", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionConfigAPIVerb.setStatus('mandatory')
sfpsConnectionConfigAPICnxHiMark = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 2), Integer32().clone(95)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionConfigAPICnxHiMark.setStatus('mandatory')
sfpsConnectionConfigAPICnxNumToAge = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 3), Integer32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionConfigAPICnxNumToAge.setStatus('mandatory')
sfpsConnectionConfigAPIAgePeriod = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionConfigAPIAgePeriod.setStatus('mandatory')
sfpsConnectionConfigAPIAgePassInProgress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionConfigAPIAgePassInProgress.setStatus('mandatory')
sfpsConnectionConfigAPICurCapacity = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionConfigAPICurCapacity.setStatus('mandatory')
sfpsConnectionConfigAPILastPassTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionConfigAPILastPassTime.setStatus('mandatory')
sfpsConnectionConfigAPITimeSinceLastPass = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionConfigAPITimeSinceLastPass.setStatus('mandatory')
sfpsConnectionConfigAPIAgePassDelta = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionConfigAPIAgePassDelta.setStatus('mandatory')
sfpsConnectionConfigAPIAgePassCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionConfigAPIAgePassCount.setStatus('mandatory')
sfpsConnectionConfigAPIAgeStatsHiMark = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionConfigAPIAgeStatsHiMark.setStatus('mandatory')
sfpsConnectionConfigAPIStatsAgingEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionConfigAPIStatsAgingEnable.setStatus('mandatory')
sfpsConnectionConfigAPIAgeStatsAgingSupported = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionConfigAPIAgeStatsAgingSupported.setStatus('mandatory')
sfpsConnectionConfigAPIIdleCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionConfigAPIIdleCnxs.setStatus('mandatory')
sfpsConnectionConfigAPIActiveCnxs = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionConfigAPIActiveCnxs.setStatus('mandatory')
sfpsConnectionQueryAPIVerb = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("lookup", 1), ("add", 2), ("delete", 3), ("mapPort", 4), ("unmapPort", 5), ("reapCnxsGivenMac", 6), ("mapPorts", 7), ("unMapPorts", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIVerb.setStatus('mandatory')
sfpsConnectionQueryAPIDestAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 2), SfpsAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIDestAddr.setStatus('mandatory')
sfpsConnectionQueryAPISourceAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 3), SfpsAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionQueryAPISourceAddr.setStatus('mandatory')
sfpsConnectionQueryAPIInPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIInPort.setStatus('mandatory')
sfpsConnectionQueryAPIOutPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIOutPort.setStatus('mandatory')
sfpsConnectionQueryAPICtrlStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("activate", 2), ("delete", 3), ("under-creation", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionQueryAPICtrlStatus.setStatus('mandatory')
sfpsConnectionQueryAPIAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIAdminStatus.setStatus('mandatory')
sfpsConnectionQueryAPIAge = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIAge.setStatus('mandatory')
sfpsConnectionQueryAPIQueryType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("filter", 1), ("provisioned", 2), ("switched", 3), ("netport-filter", 4), ("self-prog-non-filter", 5), ("vlan", 6), ("tap", 7), ("mcast", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIQueryType.setStatus('mandatory')
sfpsConnectionQueryAPIOwner = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIOwner.setStatus('mandatory')
sfpsConnectionQueryAPIPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIPkts.setStatus('mandatory')
sfpsConnectionQueryAPIBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIBytes.setStatus('mandatory')
sfpsConnectionQueryAPICanAge = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionQueryAPICanAge.setStatus('mandatory')
sfpsConnectionQueryAPIOutPorts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIOutPorts.setStatus('mandatory')
sfpsConnectionQueryAPIMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 15), SfpsAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionQueryAPIMacAddr.setStatus('mandatory')
sfpsConnectionQueryAPISecInPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionQueryAPISecInPort.setStatus('mandatory')
sfpsConnectionQueryAPISecOutPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionQueryAPISecOutPort.setStatus('mandatory')
sfpsConnectionQueryAPISecOutPorts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 5, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionQueryAPISecOutPorts.setStatus('mandatory')
sfpsConnectionLookupAPIVerb = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("getEntry", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionLookupAPIVerb.setStatus('mandatory')
sfpsConnectionLookupAPIMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 2), SfpsAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfpsConnectionLookupAPIMacAddr.setStatus('mandatory')
sfpsConnectionLookupAPIDestAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 3), SfpsAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPIDestAddr.setStatus('mandatory')
sfpsConnectionLookupAPISourceAddr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 4), SfpsAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPISourceAddr.setStatus('mandatory')
sfpsConnectionLookupAPIPrimInPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPIPrimInPort.setStatus('mandatory')
sfpsConnectionLookupAPIPrimOutPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPIPrimOutPort.setStatus('mandatory')
sfpsConnectionLookupAPISecInPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPISecInPort.setStatus('mandatory')
sfpsConnectionLookupAPISecOutPort = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPISecOutPort.setStatus('mandatory')
sfpsConnectionLookupAPICtrlStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("activate", 2), ("delete", 3), ("under-creation", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPICtrlStatus.setStatus('mandatory')
sfpsConnectionLookupAPIAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPIAdminStatus.setStatus('mandatory')
sfpsConnectionLookupAPIAge = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPIAge.setStatus('mandatory')
sfpsConnectionLookupAPIType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("provisioned", 2), ("switched", 3), ("self-prog-filter", 4), ("self-prog-non-filter", 5), ("vlan", 6), ("tap", 7), ("mcast", 8), ("flood", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPIType.setStatus('mandatory')
sfpsConnectionLookupAPIPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPIPkts.setStatus('mandatory')
sfpsConnectionLookupAPIBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPIBytes.setStatus('mandatory')
sfpsConnectionLookupAPICanAge = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPICanAge.setStatus('mandatory')
sfpsConnectionLookupAPIPrimOutPorts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPIPrimOutPorts.setStatus('mandatory')
sfpsConnectionLookupAPISecOutPorts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 3, 2, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsConnectionLookupAPISecOutPorts.setStatus('mandatory')
sfpsCNXPacketStatsVer1Tx = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 15, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCNXPacketStatsVer1Tx.setStatus('mandatory')
sfpsCNXPacketStatsVer2Tx = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 15, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCNXPacketStatsVer2Tx.setStatus('mandatory')
sfpsCNXPacketStatsVer1Rx = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 15, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCNXPacketStatsVer1Rx.setStatus('mandatory')
sfpsCNXPacketStatsVer2Rx = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 15, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCNXPacketStatsVer2Rx.setStatus('mandatory')
sfpsCNXPacketStatsOpCode1Tx = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 15, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCNXPacketStatsOpCode1Tx.setStatus('mandatory')
sfpsCNXPacketStatsOpCode2Tx = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 15, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCNXPacketStatsOpCode2Tx.setStatus('mandatory')
sfpsCNXPacketStatsOpCode1Rx = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 15, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCNXPacketStatsOpCode1Rx.setStatus('mandatory')
sfpsCNXPacketStatsOpCode2Rx = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 15, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCNXPacketStatsOpCode2Rx.setStatus('mandatory')
sfpsCNXPacketStatsRxErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 4, 2, 1, 15, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sfpsCNXPacketStatsRxErrors.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-SFPS-CONNECTION-MIB", sfpsConnectionConfigAPITimeSinceLastPass=sfpsConnectionConfigAPITimeSinceLastPass, sfpsConnectionBytes=sfpsConnectionBytes, sfpsConnectionConfigAPIAgePassDelta=sfpsConnectionConfigAPIAgePassDelta, sfpsAPIArgumentPriority=sfpsAPIArgumentPriority, sfpsConnectionQueryAPIInPort=sfpsConnectionQueryAPIInPort, sfpsConnectionAdminStatus=sfpsConnectionAdminStatus, sfpsConnectionConfigAPIAgePeriod=sfpsConnectionConfigAPIAgePeriod, sfpsConnectionConfigAPICnxNumToAge=sfpsConnectionConfigAPICnxNumToAge, sfpsConnectionCtrlStatus=sfpsConnectionCtrlStatus, sfpsConnectionConfigAPIActiveCnxs=sfpsConnectionConfigAPIActiveCnxs, sfpsConnectionQueryAPISecOutPorts=sfpsConnectionQueryAPISecOutPorts, sfpsConnectionQueryAPISecOutPort=sfpsConnectionQueryAPISecOutPort, sfpsConnectionTestAPIMacAddr=sfpsConnectionTestAPIMacAddr, sfpsAPIOutHeaderValue=sfpsAPIOutHeaderValue, sfpsAPIInHeaderValue=sfpsAPIInHeaderValue, sfpsConnectionQueryAPIBytes=sfpsConnectionQueryAPIBytes, sfpsConnectionStatsSelfProgCnxs=sfpsConnectionStatsSelfProgCnxs, sfpsConnectionLookupAPIDestAddr=sfpsConnectionLookupAPIDestAddr, sfpsCNXPacketStatsOpCode1Tx=sfpsCNXPacketStatsOpCode1Tx, sfpsAPIInHeaderLength=sfpsAPIInHeaderLength, sfpsConnectionEntry=sfpsConnectionEntry, sfpsConnectionConfigAPIVerb=sfpsConnectionConfigAPIVerb, sfpsConnectionStatsTotalCnxs=sfpsConnectionStatsTotalCnxs, sfpsConnectionQueryAPIAdminStatus=sfpsConnectionQueryAPIAdminStatus, sfpsConnectionQueryAPIOutPorts=sfpsConnectionQueryAPIOutPorts, sfpsConnectionStatsMaxCnxs=sfpsConnectionStatsMaxCnxs, sfpsConnectionLookupAPIBytes=sfpsConnectionLookupAPIBytes, sfpsConnectionQueryAPISourceAddr=sfpsConnectionQueryAPISourceAddr, sfpsConnectionLookupAPIPrimOutPorts=sfpsConnectionLookupAPIPrimOutPorts, sfpsCNXPacketStatsVer2Tx=sfpsCNXPacketStatsVer2Tx, sfpsCNXPacketStatsOpCode2Rx=sfpsCNXPacketStatsOpCode2Rx, sfpsConnectionQueryAPICanAge=sfpsConnectionQueryAPICanAge, sfpsConnectionLookupAPIAdminStatus=sfpsConnectionLookupAPIAdminStatus, sfpsConnectionConfigAPIStatsAgingEnable=sfpsConnectionConfigAPIStatsAgingEnable, sfpsConnectionStatsVlanCnxs=sfpsConnectionStatsVlanCnxs, sfpsConnectionAge=sfpsConnectionAge, sfpsConnectionQueryAPIOutPort=sfpsConnectionQueryAPIOutPort, sfpsConnectionLookupAPIVerb=sfpsConnectionLookupAPIVerb, sfpsConnectionLookupAPICanAge=sfpsConnectionLookupAPICanAge, sfpsAPIArgumentDirection=sfpsAPIArgumentDirection, sfpsConnectionPrimOutPort=sfpsConnectionPrimOutPort, sfpsCNXPacketStatsRxErrors=sfpsCNXPacketStatsRxErrors, sfpsConnectionTestAPIPort=sfpsConnectionTestAPIPort, sfpsConnectionSecInPort=sfpsConnectionSecInPort, sfpsConnectionType=sfpsConnectionType, sfpsConnectionStatsProvsnedCnxs=sfpsConnectionStatsProvsnedCnxs, sfpsAPIOutHeaderType=sfpsAPIOutHeaderType, sfpsConnectionLookupAPISecInPort=sfpsConnectionLookupAPISecInPort, sfpsConnectionStatsSwitchedCnxs=sfpsConnectionStatsSwitchedCnxs, sfpsConnectionQueryAPIDestAddr=sfpsConnectionQueryAPIDestAddr, sfpsConnectionConfigAPIAgePassInProgress=sfpsConnectionConfigAPIAgePassInProgress, SfpsAddress=SfpsAddress, sfpsConnectionLookupAPIMacAddr=sfpsConnectionLookupAPIMacAddr, sfpsConnectionStatsFilterCnxs=sfpsConnectionStatsFilterCnxs, sfpsConnectionLookupAPISecOutPort=sfpsConnectionLookupAPISecOutPort, sfpsAPIInHeaderType=sfpsAPIInHeaderType, sfpsConnectionTestAPINumCnxs=sfpsConnectionTestAPINumCnxs, sfpsConnectionStatsAddErrors=sfpsConnectionStatsAddErrors, sfpsConnectionStatsNonCriticalVlans=sfpsConnectionStatsNonCriticalVlans, sfpsConnectionLookupAPIPrimInPort=sfpsConnectionLookupAPIPrimInPort, sfpsCNXPacketStatsOpCode2Tx=sfpsCNXPacketStatsOpCode2Tx, sfpsCNXPacketStatsVer1Tx=sfpsCNXPacketStatsVer1Tx, sfpsAPIOutHeaderLength=sfpsAPIOutHeaderLength, sfpsAPIOutPort=sfpsAPIOutPort, sfpsConnectionQueryAPIVerb=sfpsConnectionQueryAPIVerb, sfpsConnectionStatsDeleteErrors=sfpsConnectionStatsDeleteErrors, sfpsConnectionCanAge=sfpsConnectionCanAge, sfpsConnectionQueryAPICtrlStatus=sfpsConnectionQueryAPICtrlStatus, sfpsAPIInPort=sfpsAPIInPort, sfpsConnectionConfigAPICnxHiMark=sfpsConnectionConfigAPICnxHiMark, sfpsConnectionQueryAPISecInPort=sfpsConnectionQueryAPISecInPort, sfpsConnectionLookupAPIType=sfpsConnectionLookupAPIType, sfpsConnectionTestAPIVerb=sfpsConnectionTestAPIVerb, sfpsConnectionLookupAPICtrlStatus=sfpsConnectionLookupAPICtrlStatus, sfpsConnectionLookupAPIPrimOutPort=sfpsConnectionLookupAPIPrimOutPort, sfpsConnectionQueryAPIQueryType=sfpsConnectionQueryAPIQueryType, sfpsConnectionStatsMcastCnxs=sfpsConnectionStatsMcastCnxs, sfpsCNXPacketStatsVer2Rx=sfpsCNXPacketStatsVer2Rx, sfpsConnectionLookupAPIAge=sfpsConnectionLookupAPIAge, sfpsConnectionLookupAPISecOutPorts=sfpsConnectionLookupAPISecOutPorts, sfpsAPIType=sfpsAPIType, sfpsConnectionLookupAPISourceAddr=sfpsConnectionLookupAPISourceAddr, sfpsConnectionLookupAPIPkts=sfpsConnectionLookupAPIPkts, sfpsConnectionSecOutPort=sfpsConnectionSecOutPort, sfpsConnectionConfigAPIAgeStatsHiMark=sfpsConnectionConfigAPIAgeStatsHiMark, sfpsCNXPacketStatsVer1Rx=sfpsCNXPacketStatsVer1Rx, sfpsConnectionConfigAPICurCapacity=sfpsConnectionConfigAPICurCapacity, sfpsConnectionConfigAPIAgePassCount=sfpsConnectionConfigAPIAgePassCount, sfpsConnectionConfigAPIAgeStatsAgingSupported=sfpsConnectionConfigAPIAgeStatsAgingSupported, sfpsCNXPacketStatsOpCode1Rx=sfpsCNXPacketStatsOpCode1Rx, sfpsConnectionPrimInPort=sfpsConnectionPrimInPort, sfpsConnectionTable=sfpsConnectionTable, sfpsConnectionQueryAPIOwner=sfpsConnectionQueryAPIOwner, sfpsConnectionStatsNetPortFilterCnxs=sfpsConnectionStatsNetPortFilterCnxs, sfpsConnectionPrimOutPorts=sfpsConnectionPrimOutPorts, sfpsConnectionDestination=sfpsConnectionDestination, sfpsConnectionQueryAPIPkts=sfpsConnectionQueryAPIPkts, sfpsConnectionConfigAPIIdleCnxs=sfpsConnectionConfigAPIIdleCnxs, sfpsAPIArgumentOwner=sfpsAPIArgumentOwner, sfpsConnectionPkts=sfpsConnectionPkts, sfpsConnectionStatsTapCnxs=sfpsConnectionStatsTapCnxs, SfpsSwitchPort=SfpsSwitchPort, sfpsConnectionQueryAPIAge=sfpsConnectionQueryAPIAge, sfpsAPIVerb=sfpsAPIVerb, sfpsConnectionSource=sfpsConnectionSource, sfpsConnectionConfigAPILastPassTime=sfpsConnectionConfigAPILastPassTime, sfpsConnectionSecOutPorts=sfpsConnectionSecOutPorts, sfpsConnectionQueryAPIMacAddr=sfpsConnectionQueryAPIMacAddr, sfpsConnectionTestAPIType=sfpsConnectionTestAPIType)
