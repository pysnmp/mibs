#
# PySNMP MIB module RS-XX9-AIR-COOLING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/rs/RS-XX9-AIR-COOLING-MIB
# Produced by pysmi-1.1.12 at Wed Oct  9 02:24:31 2024
# On host fv-az1144-128 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
commonNotificationAlarmClass, = mibBuilder.importSymbols("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass")
rsXx9AirCooling, rsXx9MibModule = mibBuilder.importSymbols("RS-XX9-SMI-MIB", "rsXx9AirCooling", "rsXx9MibModule")
NotificationPriority, NotificationState, NotificationMask = mibBuilder.importSymbols("RS-XX9-TC-MIB", "NotificationPriority", "NotificationState", "NotificationMask")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, Counter32, Bits, Integer32, ObjectIdentity, NotificationType, ModuleIdentity, iso, MibIdentifier, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "Counter32", "Bits", "Integer32", "ObjectIdentity", "NotificationType", "ModuleIdentity", "iso", "MibIdentifier", "IpAddress", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rsXx9AirCoolingMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2566, 149, 1, 216, 101))
rsXx9AirCoolingMibModule.setRevisions(('2015-02-27 15:00', '2014-01-28 12:00', '2012-08-01 08:00',))
if mibBuilder.loadTexts: rsXx9AirCoolingMibModule.setLastUpdated('201502271500Z')
if mibBuilder.loadTexts: rsXx9AirCoolingMibModule.setOrganization('Rohde&Schwarz GmbH & Co. KG')
rsXx9AirCoolingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 0))
airCoolingSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 0, 1)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationPriority"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationState"))
if mibBuilder.loadTexts: airCoolingSummary.setStatus('current')
airCoolingSensorsSummary = NotificationType((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 0, 2)).setObjects(("RS-XX9-COMMON-MIB", "commonNotificationAlarmClass"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationPriority"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationState"))
if mibBuilder.loadTexts: airCoolingSensorsSummary.setStatus('current')
rsXx9AirCoolingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1))
airCoolingStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1))
airCoolingNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 1), )
if mibBuilder.loadTexts: airCoolingNotificationTable.setStatus('current')
airCoolingNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 1, 1), ).setIndexNames((0, "RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationCycleIdx"), (0, "RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationIdx"))
if mibBuilder.loadTexts: airCoolingNotificationEntry.setStatus('current')
airCoolingNotificationCycleIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: airCoolingNotificationCycleIdx.setStatus('current')
airCoolingNotificationIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: airCoolingNotificationIdx.setStatus('current')
airCoolingNotificationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("airCoolingSummary", 1), ("airCoolingSensorsSummary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: airCoolingNotificationName.setStatus('current')
airCoolingNotificationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 1, 1, 4), NotificationMask()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: airCoolingNotificationMask.setStatus('current')
airCoolingNotificationPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 1, 1, 5), NotificationPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: airCoolingNotificationPriority.setStatus('current')
airCoolingNotificationState = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 1, 1, 6), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: airCoolingNotificationState.setStatus('current')
airCoolingStateTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 2), )
if mibBuilder.loadTexts: airCoolingStateTable.setStatus('current')
airCoolingStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 2, 1), ).setIndexNames((0, "RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationCycleIdx"))
if mibBuilder.loadTexts: airCoolingStateEntry.setStatus('current')
airCoolingOutletTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 2, 1, 2), Integer32()).setUnits('1/10 degree Celsius').setMaxAccess("readwrite")
if mibBuilder.loadTexts: airCoolingOutletTemperature.setStatus('current')
airCoolingOutletTemperatureSensor = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 2, 1, 3), NotificationState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: airCoolingOutletTemperatureSensor.setStatus('current')
airCoolingInletTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 2, 1, 4), Integer32()).setUnits('1/10 degree Celsius').setMaxAccess("readwrite")
if mibBuilder.loadTexts: airCoolingInletTemperature.setStatus('current')
airCoolingInletTemperatureSensor = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 2, 1, 5), NotificationState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: airCoolingInletTemperatureSensor.setStatus('current')
airCoolingPressureTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 3), )
if mibBuilder.loadTexts: airCoolingPressureTable.setStatus('current')
airCoolingPressureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 3, 1), ).setIndexNames((0, "RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationCycleIdx"), (0, "RS-XX9-AIR-COOLING-MIB", "airCoolingPressureSensorIdx"))
if mibBuilder.loadTexts: airCoolingPressureEntry.setStatus('current')
airCoolingPressureSensorIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: airCoolingPressureSensorIdx.setStatus('current')
airCoolingPressureValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 3, 1, 3), Integer32()).setUnits('deci Pascal').setMaxAccess("readonly")
if mibBuilder.loadTexts: airCoolingPressureValue.setStatus('current')
airCoolingPressureSensor = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 3, 1, 4), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: airCoolingPressureSensor.setStatus('current')
airCoolingFanTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 4), )
if mibBuilder.loadTexts: airCoolingFanTable.setStatus('current')
airCoolingFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 4, 1), ).setIndexNames((0, "RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationCycleIdx"), (0, "RS-XX9-AIR-COOLING-MIB", "airCoolingFanIdx"))
if mibBuilder.loadTexts: airCoolingFanEntry.setStatus('current')
airCoolingFanIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: airCoolingFanIdx.setStatus('current')
airCoolingFanSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 4, 1, 3), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: airCoolingFanSummary.setStatus('current')
airCoolingFanCommunication = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 4, 1, 4), NotificationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: airCoolingFanCommunication.setStatus('current')
airCoolingFanCurrentSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 1, 4, 1, 5), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: airCoolingFanCurrentSpeed.setStatus('current')
airCoolingConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 2))
airCoolingConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 2, 1), )
if mibBuilder.loadTexts: airCoolingConfigTable.setStatus('current')
airCoolingConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 2, 1, 1), ).setIndexNames((0, "RS-XX9-AIR-COOLING-MIB", "airCoolingCfgCycleIdx"))
if mibBuilder.loadTexts: airCoolingConfigEntry.setStatus('current')
airCoolingCfgCycleIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: airCoolingCfgCycleIdx.setStatus('current')
airCoolingCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("conductedOutletAir", 1), ("conductedInletOutletAir", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: airCoolingCfgType.setStatus('current')
rsXx9AirCoolingConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 2))
rsXx9AirCoolingCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 2, 1))
rsXx9AirCoolingBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 2, 1, 1)).setObjects(("RS-XX9-AIR-COOLING-MIB", "rsXx9AirCoolingObj"), ("RS-XX9-AIR-COOLING-MIB", "rsXx9AirCoolingNotify"), ("RS-XX9-AIR-COOLING-MIB", "rsXx9AirCoolingConductedObj"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsXx9AirCoolingBasicCompliance = rsXx9AirCoolingBasicCompliance.setStatus('current')
rsXx9AirCoolingGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 2, 2))
rsXx9AirCoolingObj = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 2, 2, 1)).setObjects(("RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationName"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationMask"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationPriority"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingNotificationState"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingCfgType"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingOutletTemperature"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingOutletTemperatureSensor"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingPressureValue"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingPressureSensor"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingFanSummary"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingFanCommunication"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingFanCurrentSpeed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsXx9AirCoolingObj = rsXx9AirCoolingObj.setStatus('current')
rsXx9AirCoolingConductedObj = ObjectGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 2, 2, 2)).setObjects(("RS-XX9-AIR-COOLING-MIB", "airCoolingInletTemperature"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingInletTemperatureSensor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsXx9AirCoolingConductedObj = rsXx9AirCoolingConductedObj.setStatus('current')
rsXx9AirCoolingNotify = NotificationGroup((1, 3, 6, 1, 4, 1, 2566, 127, 1, 2, 216, 101, 2, 2, 3)).setObjects(("RS-XX9-AIR-COOLING-MIB", "airCoolingSummary"), ("RS-XX9-AIR-COOLING-MIB", "airCoolingSensorsSummary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rsXx9AirCoolingNotify = rsXx9AirCoolingNotify.setStatus('current')
mibBuilder.exportSymbols("RS-XX9-AIR-COOLING-MIB", airCoolingNotificationTable=airCoolingNotificationTable, airCoolingSensorsSummary=airCoolingSensorsSummary, airCoolingOutletTemperatureSensor=airCoolingOutletTemperatureSensor, airCoolingInletTemperature=airCoolingInletTemperature, airCoolingOutletTemperature=airCoolingOutletTemperature, rsXx9AirCoolingNotifications=rsXx9AirCoolingNotifications, airCoolingNotificationState=airCoolingNotificationState, airCoolingInletTemperatureSensor=airCoolingInletTemperatureSensor, airCoolingPressureSensorIdx=airCoolingPressureSensorIdx, airCoolingCfgCycleIdx=airCoolingCfgCycleIdx, airCoolingStateTable=airCoolingStateTable, rsXx9AirCoolingCompliances=rsXx9AirCoolingCompliances, airCoolingFanEntry=airCoolingFanEntry, PYSNMP_MODULE_ID=rsXx9AirCoolingMibModule, airCoolingStateEntry=airCoolingStateEntry, airCoolingConfiguration=airCoolingConfiguration, airCoolingNotificationIdx=airCoolingNotificationIdx, airCoolingPressureSensor=airCoolingPressureSensor, airCoolingPressureValue=airCoolingPressureValue, airCoolingPressureEntry=airCoolingPressureEntry, airCoolingCfgType=airCoolingCfgType, airCoolingFanIdx=airCoolingFanIdx, airCoolingConfigTable=airCoolingConfigTable, airCoolingFanCommunication=airCoolingFanCommunication, airCoolingFanCurrentSpeed=airCoolingFanCurrentSpeed, airCoolingNotificationName=airCoolingNotificationName, airCoolingConfigEntry=airCoolingConfigEntry, airCoolingNotificationMask=airCoolingNotificationMask, airCoolingNotificationEntry=airCoolingNotificationEntry, rsXx9AirCoolingGroups=rsXx9AirCoolingGroups, rsXx9AirCoolingNotify=rsXx9AirCoolingNotify, airCoolingSummary=airCoolingSummary, airCoolingFanTable=airCoolingFanTable, rsXx9AirCoolingConductedObj=rsXx9AirCoolingConductedObj, rsXx9AirCoolingMibModule=rsXx9AirCoolingMibModule, airCoolingPressureTable=airCoolingPressureTable, airCoolingNotificationPriority=airCoolingNotificationPriority, rsXx9AirCoolingObjects=rsXx9AirCoolingObjects, airCoolingFanSummary=airCoolingFanSummary, airCoolingStatus=airCoolingStatus, rsXx9AirCoolingObj=rsXx9AirCoolingObj, rsXx9AirCoolingBasicCompliance=rsXx9AirCoolingBasicCompliance, rsXx9AirCoolingConformance=rsXx9AirCoolingConformance, airCoolingNotificationCycleIdx=airCoolingNotificationCycleIdx)
