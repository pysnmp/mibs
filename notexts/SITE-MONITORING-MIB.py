#
# PySNMP MIB module SITE-MONITORING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/alpha/SITE-MONITORING-MIB
# Produced by pysmi-1.1.12 at Thu Sep 26 02:10:03 2024
# On host fv-az1144-917 platform Linux version 6.8.0-1014-azure by user runner
# Using Python version 3.10.15 (main, Sep  9 2024, 03:02:45) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, Bits, MibIdentifier, IpAddress, ModuleIdentity, ObjectIdentity, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, TimeTicks, Gauge32, Counter32, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "MibIdentifier", "IpAddress", "ModuleIdentity", "ObjectIdentity", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "TimeTicks", "Gauge32", "Counter32", "Unsigned32", "NotificationType")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
siteMonitoringMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 26854, 1, 1))
siteMonitoringMIB.setRevisions(('2017-05-16 16:00',))
if mibBuilder.loadTexts: siteMonitoringMIB.setLastUpdated('201705161600Z')
if mibBuilder.loadTexts: siteMonitoringMIB.setOrganization('Alpha Innovations')
atsa = MibIdentifier((1, 3, 6, 1, 4, 1, 26854))
atsaCorporate = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 1))
atsaUs = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 2))
atsaEu = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3))
atsaEuDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 1))
siteMonitoring = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2))
siteV1 = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1))
siteV1GlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1GlobalStatus.setStatus('current')
siteV1GlobalAlarmSeverityType = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1GlobalAlarmSeverityType.setStatus('current')
siteV1GlobalAlarmSeverityLevel = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1GlobalAlarmSeverityLevel.setStatus('current')
siteV1GlobalAlarmSeverityTypeInt = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1GlobalAlarmSeverityTypeInt.setStatus('current')
siteV1Description = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10))
siteV1DescriptionNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DescriptionNumber.setStatus('current')
siteV1DescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 2), )
if mibBuilder.loadTexts: siteV1DescriptionTable.setStatus('current')
siteV1DescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "siteV1DescriptionIndex"))
if mibBuilder.loadTexts: siteV1DescriptionEntry.setStatus('current')
siteV1DescriptionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: siteV1DescriptionIndex.setStatus('current')
siteV1DescriptionName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DescriptionName.setStatus('current')
siteV1DescriptionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: siteV1DescriptionValue.setStatus('current')
siteV1DescriptionEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: siteV1DescriptionEntryStatus.setStatus('current')
siteV1DescriptionList = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3))
siteV1DescDescriptionSiteNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionSiteNumber.setStatus('current')
siteV1DescDescriptionSiteName = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionSiteName.setStatus('current')
siteV1DescDescriptionShortDescription = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionShortDescription.setStatus('current')
siteV1DescDescriptionInfo = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionInfo.setStatus('current')
siteV1DescDescriptionDescription = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionDescription.setStatus('current')
siteV1DescDescriptionReference = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionReference.setStatus('current')
siteV1DescDescriptionContactName = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionContactName.setStatus('current')
siteV1DescDescriptionPhoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionPhoneNumber.setStatus('current')
siteV1DescDescriptionStreet = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionStreet.setStatus('current')
siteV1DescDescriptionCity = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionCity.setStatus('current')
siteV1DescDescriptionProvince = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionProvince.setStatus('current')
siteV1DescDescriptionPostalCode = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionPostalCode.setStatus('current')
siteV1DescDescriptionRegion = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionRegion.setStatus('current')
siteV1DescDescriptionCountry = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionCountry.setStatus('current')
siteV1DescDescriptionGroup1 = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionGroup1.setStatus('current')
siteV1DescDescriptionGroup2 = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionGroup2.setStatus('current')
siteV1DescDescriptionGroup3 = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionGroup3.setStatus('current')
siteV1DescDescriptionGroup4 = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionGroup4.setStatus('current')
siteV1DescDescriptionGroup5 = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionGroup5.setStatus('current')
siteV1DescDescriptionLatitude = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionLatitude.setStatus('current')
siteV1DescDescriptionLongitude = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionLongitude.setStatus('current')
siteV1DescDescriptionAltitude = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 33), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1DescDescriptionAltitude.setStatus('current')
siteV1DescControllerSoftwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 91), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DescControllerSoftwareRevision.setStatus('current')
siteV1DescControllerOperatingSystemRevision = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 92), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DescControllerOperatingSystemRevision.setStatus('current')
siteV1DescControllerCPU = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 93), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DescControllerCPU.setStatus('current')
siteV1DescControllerCard = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 94), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DescControllerCard.setStatus('current')
siteV1DescControllerStarterVersion = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 100), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DescControllerStarterVersion.setStatus('current')
siteV1DescControllerFactoryCompasVersion = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 105), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DescControllerFactoryCompasVersion.setStatus('current')
siteV1DescControllerUserCompasVersion = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 106), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DescControllerUserCompasVersion.setStatus('current')
siteV1DescControllerFactoryFTPServerVersion = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 110), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DescControllerFactoryFTPServerVersion.setStatus('current')
siteV1DescControllerUserFTPServerVersion = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 10, 3, 111), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DescControllerUserFTPServerVersion.setStatus('current')
siteV1Alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11))
siteV1AlarmNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1AlarmNumber.setStatus('current')
siteV1AlarmTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 2), )
if mibBuilder.loadTexts: siteV1AlarmTable.setStatus('current')
siteV1AlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "siteV1AlarmIndex"))
if mibBuilder.loadTexts: siteV1AlarmEntry.setStatus('current')
siteV1AlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: siteV1AlarmIndex.setStatus('current')
siteV1AlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1AlarmName.setStatus('current')
siteV1AlarmActive = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1AlarmActive.setStatus('current')
siteV1AlarmSeverityType = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1AlarmSeverityType.setStatus('current')
siteV1AlarmSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1AlarmSeverityLevel.setStatus('current')
siteV1AlarmStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1AlarmStartTime.setStatus('current')
siteV1AlarmStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1AlarmStopTime.setStatus('current')
siteV1AlarmEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: siteV1AlarmEntryStatus.setStatus('current')
siteV1AlarmSummary = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 11, 3), Bits().clone(namedValues=NamedValues(("inventoryCANBusFail", 0), ("inventoryCANBusAddressingError", 1), ("inventoryMissingCANBusNodeIDs", 2), ("inventoryRunningCANLSSDeviceDetection", 3), ("inventoryRunningCANFirmwareUpgrade", 4), ("controllerControllerRebootRequired", 10), ("controllerLastConfChangesUnsaved", 14), ("xMLXMLHeartbeatPostFail", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1AlarmSummary.setStatus('current')
siteV1Event = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 12))
siteV1EventNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1EventNumber.setStatus('current')
siteV1EventTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 12, 2), )
if mibBuilder.loadTexts: siteV1EventTable.setStatus('current')
siteV1EventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 12, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "siteV1EventIndex"))
if mibBuilder.loadTexts: siteV1EventEntry.setStatus('current')
siteV1EventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 12, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: siteV1EventIndex.setStatus('current')
siteV1EventId = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 12, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1EventId.setStatus('current')
siteV1EventName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 12, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1EventName.setStatus('current')
siteV1EventDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 12, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1EventDateTime.setStatus('current')
siteV1EventSeverityType = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 12, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1EventSeverityType.setStatus('current')
siteV1EventSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 12, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1EventSeverityLevel.setStatus('current')
siteV1EventEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 12, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: siteV1EventEntryStatus.setStatus('current')
siteV1Data = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13))
siteV1DataNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataNumber.setStatus('current')
siteV1DataTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 2), )
if mibBuilder.loadTexts: siteV1DataTable.setStatus('current')
siteV1DataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "siteV1DataIndex"))
if mibBuilder.loadTexts: siteV1DataEntry.setStatus('current')
siteV1DataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: siteV1DataIndex.setStatus('current')
siteV1DataName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataName.setStatus('current')
siteV1DataValue = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataValue.setStatus('current')
siteV1DataEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: siteV1DataEntryStatus.setStatus('current')
siteV1DataList = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3))
siteV1DataNetworkCurrentIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataNetworkCurrentIPAddress.setStatus('current')
siteV1DataNetworkCurrentIPMask = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataNetworkCurrentIPMask.setStatus('current')
siteV1DataNetworkCurrentMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataNetworkCurrentMACAddress.setStatus('current')
siteV1DataControllerLicensedOptions = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataControllerLicensedOptions.setStatus('current')
siteV1DataTimeDateAndTimeLocal = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataTimeDateAndTimeLocal.setStatus('current')
siteV1DataTimeDateAndTimeUTC = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataTimeDateAndTimeUTC.setStatus('current')
siteV1DataControllerMonitoringMemoryUsed = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataControllerMonitoringMemoryUsed.setStatus('current')
siteV1DataControllerCPUPercentageUsage = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataControllerCPUPercentageUsage.setStatus('current')
siteV1DataControllerFreeFlashMemorySpace = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataControllerFreeFlashMemorySpace.setStatus('current')
siteV1DataControllerFTPServerStatus = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataControllerFTPServerStatus.setStatus('current')
siteV1DataDataRecordsTotalFifoSizeOfSecondRecords = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataDataRecordsTotalFifoSizeOfSecondRecords.setStatus('current')
siteV1DataDataRecordsTotalFifoSizeOfMinuteRecords = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataDataRecordsTotalFifoSizeOfMinuteRecords.setStatus('current')
siteV1DataDataRecordsTotalFifoSizeOfHourRecords = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataDataRecordsTotalFifoSizeOfHourRecords.setStatus('current')
siteV1DataDataRecordsTotalFifoSizeOfDayRecords = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataDataRecordsTotalFifoSizeOfDayRecords.setStatus('current')
siteV1DataInventoryCANBusNodeIDs = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataInventoryCANBusNodeIDs.setStatus('current')
siteV1DataCloudLinkCloudLinkState = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 13, 3, 166), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1DataCloudLinkCloudLinkState.setStatus('current')
siteV1Config = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15))
siteV1ConfigNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1ConfigNumber.setStatus('current')
siteV1ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 2), )
if mibBuilder.loadTexts: siteV1ConfigTable.setStatus('current')
siteV1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "siteV1ConfigIndex"))
if mibBuilder.loadTexts: siteV1ConfigEntry.setStatus('current')
siteV1ConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: siteV1ConfigIndex.setStatus('current')
siteV1ConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1ConfigName.setStatus('current')
siteV1ConfigValue = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1ConfigValue.setStatus('current')
siteV1ConfigEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: siteV1ConfigEntryStatus.setStatus('current')
siteV1ConfigList = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3))
siteV1CfgNetworkDHCPEnabled = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgNetworkDHCPEnabled.setStatus('current')
siteV1CfgNetworkIPAddressIfStatic = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgNetworkIPAddressIfStatic.setStatus('current')
siteV1CfgNetworkSubnetMaskIfStatic = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgNetworkSubnetMaskIfStatic.setStatus('current')
siteV1CfgNetworkDefaultGatewayIfStatic = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgNetworkDefaultGatewayIfStatic.setStatus('current')
siteV1CfgNetworkDNSIfStatic = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgNetworkDNSIfStatic.setStatus('current')
siteV1CfgNetworkMaxTransmissionUnit = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgNetworkMaxTransmissionUnit.setStatus('current')
siteV1CfgTimeSNTPTimeServer = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgTimeSNTPTimeServer.setStatus('current')
siteV1CfgTimeTimeZoneName = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgTimeTimeZoneName.setStatus('current')
siteV1CfgTimeSNTPTimeRefresh = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgTimeSNTPTimeRefresh.setStatus('current')
siteV1CfgTimeSNTPTimeRecoveryRefresh = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgTimeSNTPTimeRecoveryRefresh.setStatus('current')
siteV1CfgWebServerWebServerSecurityEnabled = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgWebServerWebServerSecurityEnabled.setStatus('current')
siteV1CfgWebServerWebServerPort = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgWebServerWebServerPort.setStatus('current')
siteV1CfgWebServerWebAuthenticationMethod = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgWebServerWebAuthenticationMethod.setStatus('current')
siteV1CfgWebServerHttpsWebServerPort = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgWebServerHttpsWebServerPort.setStatus('current')
siteV1CfgWebServerDefaultPage = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgWebServerDefaultPage.setStatus('current')
siteV1CfgXMLXMLEventPostingActivated = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 41), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLEventPostingActivated.setStatus('current')
siteV1CfgXMLXMLEventPostingRefreshTime = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 42), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLEventPostingRefreshTime.setStatus('current')
siteV1CfgXMLXMLEventPostingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 43), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLEventPostingTimeout.setStatus('current')
siteV1CfgXMLXMLEventPostingToSecOnlyIfPrimFail = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 45), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLEventPostingToSecOnlyIfPrimFail.setStatus('current')
siteV1CfgXMLXMLTablesToPostOnXMLEvent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 46), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLTablesToPostOnXMLEvent.setStatus('current')
siteV1CfgXMLXMLHeartbeatTime = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLHeartbeatTime.setStatus('current')
siteV1CfgSNMPSNMPActivated = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 61), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPActivated.setStatus('current')
siteV1CfgSNMPSNMPTrapVersion = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 63), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPTrapVersion.setStatus('current')
siteV1CfgSNMPSNMPGETMinSecurityLevel = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 64), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPGETMinSecurityLevel.setStatus('current')
siteV1CfgSNMPSNMPSETMinSecurityLevel = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 65), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPSETMinSecurityLevel.setStatus('current')
siteV1CfgSNMPSNMPV3AuthAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 66), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPV3AuthAlgorithm.setStatus('current')
siteV1CfgSNMPSNMPV3PrivacyAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 67), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPV3PrivacyAlgorithm.setStatus('current')
siteV1CfgSNMPSNMPV3PrivacyPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 68), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPV3PrivacyPassword.setStatus('current')
siteV1CfgSNMPSNMPV3EngineID = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 69), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPV3EngineID.setStatus('current')
siteV1CfgSNMPSNMPV3TrapAuthAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 72), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPV3TrapAuthAlgorithm.setStatus('current')
siteV1CfgSNMPSNMPV3TrapPrivacyAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 73), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPV3TrapPrivacyAlgorithm.setStatus('current')
siteV1CfgSNMPSNMPV3TrapUsername = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 74), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPV3TrapUsername.setStatus('current')
siteV1CfgSNMPSNMPV3TrapAuthPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 75), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPV3TrapAuthPassword.setStatus('current')
siteV1CfgSNMPSNMPV3TrapPrivacyPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 76), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPV3TrapPrivacyPassword.setStatus('current')
siteV1CfgSNMPSiteDescriptionIdsIncludedInTraps = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 77), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSiteDescriptionIdsIncludedInTraps.setStatus('current')
siteV1CfgGenericGenerateEventOnConfChanges = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 81), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgGenericGenerateEventOnConfChanges.setStatus('current')
siteV1CfgDataRecordsAutoArchivePeriodDataRecord = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 82), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgDataRecordsAutoArchivePeriodDataRecord.setStatus('current')
siteV1CfgGenericGenerateEventOnControlExecution = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 83), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgGenericGenerateEventOnControlExecution.setStatus('current')
siteV1CfgGenericGenerateEventOnAlarmAcknowledge = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 84), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgGenericGenerateEventOnAlarmAcknowledge.setStatus('current')
siteV1CfgInventoryRequiredCANBusNodeIDs = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 91), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgInventoryRequiredCANBusNodeIDs.setStatus('current')
siteV1CfgInventoryLSSCANidrange = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 92), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgInventoryLSSCANidrange.setStatus('current')
siteV1CfgInventorySystemNodesDefinition = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 93), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgInventorySystemNodesDefinition.setStatus('current')
siteV1CfgInventoryLSSCANOpenSavedConf = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 95), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgInventoryLSSCANOpenSavedConf.setStatus('current')
siteV1CfgUsersAdministratorLoginPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 101), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgUsersAdministratorLoginPassword.setStatus('current')
siteV1CfgUsersUser1LoginPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 102), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgUsersUser1LoginPassword.setStatus('current')
siteV1CfgUsersUser2LoginPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 103), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgUsersUser2LoginPassword.setStatus('current')
siteV1CfgUsersUser3LoginPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 104), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgUsersUser3LoginPassword.setStatus('current')
siteV1CfgUsersUser4LoginPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 105), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgUsersUser4LoginPassword.setStatus('current')
siteV1CfgUsersUser5LoginPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 106), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgUsersUser5LoginPassword.setStatus('current')
siteV1CfgRadiusAuthenticationRadiusServer = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 111), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgRadiusAuthenticationRadiusServer.setStatus('current')
siteV1CfgRadiusAuthenticationRadiusPort = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 112), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgRadiusAuthenticationRadiusPort.setStatus('current')
siteV1CfgRadiusAuthenticationRadiusSecret = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 113), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgRadiusAuthenticationRadiusSecret.setStatus('current')
siteV1CfgEmailEnableEmailFeature = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 120), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgEmailEnableEmailFeature.setStatus('current')
siteV1CfgEmailSmtpServer = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 121), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgEmailSmtpServer.setStatus('current')
siteV1CfgEmailSmtpDomain = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 122), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgEmailSmtpDomain.setStatus('current')
siteV1CfgEmailSmtpUserLoginPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 123), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgEmailSmtpUserLoginPassword.setStatus('current')
siteV1CfgEmailMailSender = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 130), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgEmailMailSender.setStatus('current')
siteV1CfgEmailMailRecipients = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 131), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgEmailMailRecipients.setStatus('current')
siteV1CfgEmailMinimalSeverityTypeToSendMail = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 135), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgEmailMinimalSeverityTypeToSendMail.setStatus('current')
siteV1CfgControllerAutomaticReboot = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 150), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgControllerAutomaticReboot.setStatus('current')
siteV1CfgCloudLinkCloudEnabled = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 161), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgCloudLinkCloudEnabled.setStatus('current')
siteV1CfgCloudLinkCloudServer = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 162), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgCloudLinkCloudServer.setStatus('current')
siteV1CfgCloudLinkCloudPort = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 163), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgCloudLinkCloudPort.setStatus('current')
siteV1CfgCloudLinkCloudCredential = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 164), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgCloudLinkCloudCredential.setStatus('current')
siteV1CfgCloudLinkCloudCluster = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 165), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgCloudLinkCloudCluster.setStatus('current')
siteV1CfgInventoryRS485ExtensionsConf = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 210), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgInventoryRS485ExtensionsConf.setStatus('current')
siteV1CfgInventoryEthernetExtensionsConf = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 220), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgInventoryEthernetExtensionsConf.setStatus('current')
siteV1CfgScriptingEnabledscripts = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 250), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgScriptingEnabledscripts.setStatus('current')
siteV1CfgScriptingNumberofErrorsbeforetriggeringalarm = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 251), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgScriptingNumberofErrorsbeforetriggeringalarm.setStatus('current')
siteV1CfgGenericReadAccessUserNumbers = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 521), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgGenericReadAccessUserNumbers.setStatus('current')
siteV1CfgGenericWriteAccessUserNumbers = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 522), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgGenericWriteAccessUserNumbers.setStatus('current')
siteV1CfgGenericEventTableLength = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 601), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgGenericEventTableLength.setStatus('current')
siteV1CfgSNMPSNMPTrapTargetsIP = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 611), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPSNMPTrapTargetsIP.setStatus('current')
siteV1CfgSNMPMinimalEventSeverityForTraps = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 612), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgSNMPMinimalEventSeverityForTraps.setStatus('current')
siteV1CfgXMLXMLEventsPrimPostURL = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 651), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLEventsPrimPostURL.setStatus('current')
siteV1CfgXMLXMLEventsPrimPostLogin = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 652), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLEventsPrimPostLogin.setStatus('current')
siteV1CfgXMLXMLEventsPrimPostPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 653), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLEventsPrimPostPassword.setStatus('current')
siteV1CfgXMLXMLEventsSecPostURL = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 661), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLEventsSecPostURL.setStatus('current')
siteV1CfgXMLXMLEventsSecPostLogin = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 662), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLEventsSecPostLogin.setStatus('current')
siteV1CfgXMLXMLEventsSecPostPassword = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 663), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgXMLXMLEventsSecPostPassword.setStatus('current')
siteV1CfgPLCNumberOfPLCData = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 901), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgPLCNumberOfPLCData.setStatus('current')
siteV1CfgPLCNumberOfPLCAlarm = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 15, 3, 902), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CfgPLCNumberOfPLCAlarm.setStatus('current')
siteV1Control = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16))
siteV1ControlNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1ControlNumber.setStatus('current')
siteV1ControlTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 2), )
if mibBuilder.loadTexts: siteV1ControlTable.setStatus('current')
siteV1ControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "siteV1ControlIndex"))
if mibBuilder.loadTexts: siteV1ControlEntry.setStatus('current')
siteV1ControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: siteV1ControlIndex.setStatus('current')
siteV1ControlName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteV1ControlName.setStatus('current')
siteV1ControlValue = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1ControlValue.setStatus('current')
siteV1ControlEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: siteV1ControlEntryStatus.setStatus('current')
siteV1ControlList = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3))
siteV1CtrlControllerRebootController = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlControllerRebootController.setStatus('current')
siteV1CtrlControllerSaveConfAndRebootController = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlControllerSaveConfAndRebootController.setStatus('current')
siteV1CtrlControllerRebootControllerWithoutSavingRecords = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlControllerRebootControllerWithoutSavingRecords.setStatus('current')
siteV1CtrlNetworkApplyNetworkConf = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlNetworkApplyNetworkConf.setStatus('current')
siteV1CtrlTimeForceSNTPTimeRefresh = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlTimeForceSNTPTimeRefresh.setStatus('current')
siteV1CtrlTimeSetLocalTime = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlTimeSetLocalTime.setStatus('current')
siteV1CtrlTimeSetUTCTime = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlTimeSetUTCTime.setStatus('current')
siteV1CtrlTimeResetUptime = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlTimeResetUptime.setStatus('current')
siteV1CtrlControllerCleanandSaveXMLUserConf = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlControllerCleanandSaveXMLUserConf.setStatus('current')
siteV1CtrlControllerSaveXMLUserConf = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlControllerSaveXMLUserConf.setStatus('current')
siteV1CtrlControllerSaveInventory = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlControllerSaveInventory.setStatus('current')
siteV1CtrlDataRecordsSaveDataRecords = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 33), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlDataRecordsSaveDataRecords.setStatus('current')
siteV1CtrlDataRecordsExportDataRecordsinCSV = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlDataRecordsExportDataRecordsinCSV.setStatus('current')
siteV1CtrlDataRecordsArchiveDataRecords = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 35), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlDataRecordsArchiveDataRecords.setStatus('current')
siteV1CtrlDataRecordsDeleteAllDataRecords = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlDataRecordsDeleteAllDataRecords.setStatus('current')
siteV1CtrlControllerEmulateRecords = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlControllerEmulateRecords.setStatus('current')
siteV1CtrlControllerReloadTranslations = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 41), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlControllerReloadTranslations.setStatus('current')
siteV1CtrlControllerReloadLicense = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlControllerReloadLicense.setStatus('current')
siteV1CtrlControllerManageFTPServer = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 55), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlControllerManageFTPServer.setStatus('current')
siteV1CtrlInventoryRemoveAbsentEquipments = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 61), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlInventoryRemoveAbsentEquipments.setStatus('current')
siteV1CtrlInventoryResetCANBusNode = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 81), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlInventoryResetCANBusNode.setStatus('current')
siteV1CtrlInventorySaveCANOpenLSSConf = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 82), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlInventorySaveCANOpenLSSConf.setStatus('current')
siteV1CtrlInventoryStartNewInventory = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 83), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlInventoryStartNewInventory.setStatus('current')
siteV1CtrlInventoryUpgradeNodeFirmware = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 91), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlInventoryUpgradeNodeFirmware.setStatus('current')
siteV1CtrlInventoryCancelFirmwareUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 92), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlInventoryCancelFirmwareUpgrade.setStatus('current')
siteV1CtrlFilesFlashBinary = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 103), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlFilesFlashBinary.setStatus('current')
siteV1CtrlFilesDownloadFileFromUrl = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 110), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlFilesDownloadFileFromUrl.setStatus('current')
siteV1CtrlFilesDeleteUserUploadedFile = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 111), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlFilesDeleteUserUploadedFile.setStatus('current')
siteV1CtrlFilesMoveUserUploadedFile = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 112), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlFilesMoveUserUploadedFile.setStatus('current')
siteV1CtrlFilesExtractZipFileinuserupload = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 113), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlFilesExtractZipFileinuserupload.setStatus('current')
siteV1CtrlEmailSendSummaryEmail = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 120), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlEmailSendSummaryEmail.setStatus('current')
siteV1CtrlScriptingControlLuaScript = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 250), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlScriptingControlLuaScript.setStatus('current')
siteV1CtrlControllerAdvancedFunctionGenericCommandExecution = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 300), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlControllerAdvancedFunctionGenericCommandExecution.setStatus('current')
siteV1CtrlGenericClearMyEvents = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 501), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlGenericClearMyEvents.setStatus('current')
siteV1CtrlGenericClearAllEvents = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 502), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlGenericClearAllEvents.setStatus('current')
siteV1CtrlGenericAddEvent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 511), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlGenericAddEvent.setStatus('current')
siteV1CtrlGenericAddMajorEvent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 512), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlGenericAddMajorEvent.setStatus('current')
siteV1CtrlGenericResetDefaultNamesAndGroups = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 521), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlGenericResetDefaultNamesAndGroups.setStatus('current')
siteV1CtrlGenericResetDefaultNamesAndGroupsRecursive = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 16, 3, 522), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siteV1CtrlGenericResetDefaultNamesAndGroupsRecursive.setStatus('current')
siteV1Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 18))
siteV1NotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 18, 0))
siteV1NotificationOfEvent = NotificationType((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 18, 0, 1)).setObjects(("SITE-MONITORING-MIB", "siteV1EventId"), ("SITE-MONITORING-MIB", "siteV1EventName"), ("SITE-MONITORING-MIB", "siteV1EventDateTime"), ("SITE-MONITORING-MIB", "siteV1EventSeverityType"), ("SITE-MONITORING-MIB", "siteV1EventSeverityLevel"), ("SITE-MONITORING-MIB", "siteV1AlarmSummary"))
if mibBuilder.loadTexts: siteV1NotificationOfEvent.setStatus('current')
siteV1Compliance = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 19))
siteV1ComplianceGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 19, 1))
siteV1FullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 19, 2)).setObjects(("SITE-MONITORING-MIB", "siteV1GlobalGroup"), ("SITE-MONITORING-MIB", "siteV1NotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    siteV1FullCompliance = siteV1FullCompliance.setStatus('current')
siteV1GlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 19, 1, 1)).setObjects(("SITE-MONITORING-MIB", "siteV1GlobalStatus"), ("SITE-MONITORING-MIB", "siteV1GlobalAlarmSeverityType"), ("SITE-MONITORING-MIB", "siteV1GlobalAlarmSeverityLevel"), ("SITE-MONITORING-MIB", "siteV1GlobalAlarmSeverityTypeInt"), ("SITE-MONITORING-MIB", "siteV1DescriptionNumber"), ("SITE-MONITORING-MIB", "siteV1DescriptionName"), ("SITE-MONITORING-MIB", "siteV1DescriptionValue"), ("SITE-MONITORING-MIB", "siteV1DescriptionEntryStatus"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionSiteNumber"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionSiteName"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionShortDescription"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionInfo"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionDescription"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionReference"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionContactName"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionPhoneNumber"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionStreet"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionCity"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionProvince"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionPostalCode"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionRegion"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionCountry"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionGroup1"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionGroup2"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionGroup3"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionGroup4"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionGroup5"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionLatitude"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionLongitude"), ("SITE-MONITORING-MIB", "siteV1DescDescriptionAltitude"), ("SITE-MONITORING-MIB", "siteV1DescControllerSoftwareRevision"), ("SITE-MONITORING-MIB", "siteV1DescControllerOperatingSystemRevision"), ("SITE-MONITORING-MIB", "siteV1DescControllerCPU"), ("SITE-MONITORING-MIB", "siteV1DescControllerCard"), ("SITE-MONITORING-MIB", "siteV1DescControllerStarterVersion"), ("SITE-MONITORING-MIB", "siteV1DescControllerFactoryCompasVersion"), ("SITE-MONITORING-MIB", "siteV1DescControllerUserCompasVersion"), ("SITE-MONITORING-MIB", "siteV1DescControllerFactoryFTPServerVersion"), ("SITE-MONITORING-MIB", "siteV1DescControllerUserFTPServerVersion"), ("SITE-MONITORING-MIB", "siteV1AlarmNumber"), ("SITE-MONITORING-MIB", "siteV1AlarmName"), ("SITE-MONITORING-MIB", "siteV1AlarmActive"), ("SITE-MONITORING-MIB", "siteV1AlarmSeverityType"), ("SITE-MONITORING-MIB", "siteV1AlarmSeverityLevel"), ("SITE-MONITORING-MIB", "siteV1AlarmStartTime"), ("SITE-MONITORING-MIB", "siteV1AlarmStopTime"), ("SITE-MONITORING-MIB", "siteV1AlarmEntryStatus"), ("SITE-MONITORING-MIB", "siteV1AlarmSummary"), ("SITE-MONITORING-MIB", "siteV1EventNumber"), ("SITE-MONITORING-MIB", "siteV1EventId"), ("SITE-MONITORING-MIB", "siteV1EventName"), ("SITE-MONITORING-MIB", "siteV1EventDateTime"), ("SITE-MONITORING-MIB", "siteV1EventSeverityType"), ("SITE-MONITORING-MIB", "siteV1EventSeverityLevel"), ("SITE-MONITORING-MIB", "siteV1EventEntryStatus"), ("SITE-MONITORING-MIB", "siteV1DataNumber"), ("SITE-MONITORING-MIB", "siteV1DataName"), ("SITE-MONITORING-MIB", "siteV1DataValue"), ("SITE-MONITORING-MIB", "siteV1DataEntryStatus"), ("SITE-MONITORING-MIB", "siteV1DataNetworkCurrentIPAddress"), ("SITE-MONITORING-MIB", "siteV1DataNetworkCurrentIPMask"), ("SITE-MONITORING-MIB", "siteV1DataNetworkCurrentMACAddress"), ("SITE-MONITORING-MIB", "siteV1DataControllerLicensedOptions"), ("SITE-MONITORING-MIB", "siteV1DataTimeDateAndTimeLocal"), ("SITE-MONITORING-MIB", "siteV1DataTimeDateAndTimeUTC"), ("SITE-MONITORING-MIB", "siteV1DataControllerMonitoringMemoryUsed"), ("SITE-MONITORING-MIB", "siteV1DataControllerCPUPercentageUsage"), ("SITE-MONITORING-MIB", "siteV1DataControllerFreeFlashMemorySpace"), ("SITE-MONITORING-MIB", "siteV1DataControllerFTPServerStatus"), ("SITE-MONITORING-MIB", "siteV1DataDataRecordsTotalFifoSizeOfSecondRecords"), ("SITE-MONITORING-MIB", "siteV1DataDataRecordsTotalFifoSizeOfMinuteRecords"), ("SITE-MONITORING-MIB", "siteV1DataDataRecordsTotalFifoSizeOfHourRecords"), ("SITE-MONITORING-MIB", "siteV1DataDataRecordsTotalFifoSizeOfDayRecords"), ("SITE-MONITORING-MIB", "siteV1DataInventoryCANBusNodeIDs"), ("SITE-MONITORING-MIB", "siteV1DataCloudLinkCloudLinkState"), ("SITE-MONITORING-MIB", "siteV1ConfigNumber"), ("SITE-MONITORING-MIB", "siteV1ConfigName"), ("SITE-MONITORING-MIB", "siteV1ConfigValue"), ("SITE-MONITORING-MIB", "siteV1ConfigEntryStatus"), ("SITE-MONITORING-MIB", "siteV1CfgNetworkDHCPEnabled"), ("SITE-MONITORING-MIB", "siteV1CfgNetworkIPAddressIfStatic"), ("SITE-MONITORING-MIB", "siteV1CfgNetworkSubnetMaskIfStatic"), ("SITE-MONITORING-MIB", "siteV1CfgNetworkDefaultGatewayIfStatic"), ("SITE-MONITORING-MIB", "siteV1CfgNetworkDNSIfStatic"), ("SITE-MONITORING-MIB", "siteV1CfgNetworkMaxTransmissionUnit"), ("SITE-MONITORING-MIB", "siteV1CfgTimeSNTPTimeServer"), ("SITE-MONITORING-MIB", "siteV1CfgTimeTimeZoneName"), ("SITE-MONITORING-MIB", "siteV1CfgTimeSNTPTimeRefresh"), ("SITE-MONITORING-MIB", "siteV1CfgTimeSNTPTimeRecoveryRefresh"), ("SITE-MONITORING-MIB", "siteV1CfgWebServerWebServerSecurityEnabled"), ("SITE-MONITORING-MIB", "siteV1CfgWebServerWebServerPort"), ("SITE-MONITORING-MIB", "siteV1CfgWebServerWebAuthenticationMethod"), ("SITE-MONITORING-MIB", "siteV1CfgWebServerHttpsWebServerPort"), ("SITE-MONITORING-MIB", "siteV1CfgWebServerDefaultPage"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLEventPostingActivated"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLEventPostingRefreshTime"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLEventPostingTimeout"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLEventPostingToSecOnlyIfPrimFail"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLTablesToPostOnXMLEvent"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLHeartbeatTime"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPActivated"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPTrapVersion"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPGETMinSecurityLevel"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPSETMinSecurityLevel"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPV3AuthAlgorithm"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPV3PrivacyAlgorithm"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPV3PrivacyPassword"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPV3EngineID"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPV3TrapAuthAlgorithm"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPV3TrapPrivacyAlgorithm"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPV3TrapUsername"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPV3TrapAuthPassword"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPV3TrapPrivacyPassword"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSiteDescriptionIdsIncludedInTraps"), ("SITE-MONITORING-MIB", "siteV1CfgGenericGenerateEventOnConfChanges"), ("SITE-MONITORING-MIB", "siteV1CfgDataRecordsAutoArchivePeriodDataRecord"), ("SITE-MONITORING-MIB", "siteV1CfgGenericGenerateEventOnControlExecution"), ("SITE-MONITORING-MIB", "siteV1CfgGenericGenerateEventOnAlarmAcknowledge"), ("SITE-MONITORING-MIB", "siteV1CfgInventoryRequiredCANBusNodeIDs"), ("SITE-MONITORING-MIB", "siteV1CfgInventoryLSSCANidrange"), ("SITE-MONITORING-MIB", "siteV1CfgInventorySystemNodesDefinition"), ("SITE-MONITORING-MIB", "siteV1CfgInventoryLSSCANOpenSavedConf"), ("SITE-MONITORING-MIB", "siteV1CfgUsersAdministratorLoginPassword"), ("SITE-MONITORING-MIB", "siteV1CfgUsersUser1LoginPassword"), ("SITE-MONITORING-MIB", "siteV1CfgUsersUser2LoginPassword"), ("SITE-MONITORING-MIB", "siteV1CfgUsersUser3LoginPassword"), ("SITE-MONITORING-MIB", "siteV1CfgUsersUser4LoginPassword"), ("SITE-MONITORING-MIB", "siteV1CfgUsersUser5LoginPassword"), ("SITE-MONITORING-MIB", "siteV1CfgRadiusAuthenticationRadiusServer"), ("SITE-MONITORING-MIB", "siteV1CfgRadiusAuthenticationRadiusPort"), ("SITE-MONITORING-MIB", "siteV1CfgRadiusAuthenticationRadiusSecret"), ("SITE-MONITORING-MIB", "siteV1CfgEmailEnableEmailFeature"), ("SITE-MONITORING-MIB", "siteV1CfgEmailSmtpServer"), ("SITE-MONITORING-MIB", "siteV1CfgEmailSmtpDomain"), ("SITE-MONITORING-MIB", "siteV1CfgEmailSmtpUserLoginPassword"), ("SITE-MONITORING-MIB", "siteV1CfgEmailMailSender"), ("SITE-MONITORING-MIB", "siteV1CfgEmailMailRecipients"), ("SITE-MONITORING-MIB", "siteV1CfgEmailMinimalSeverityTypeToSendMail"), ("SITE-MONITORING-MIB", "siteV1CfgControllerAutomaticReboot"), ("SITE-MONITORING-MIB", "siteV1CfgCloudLinkCloudEnabled"), ("SITE-MONITORING-MIB", "siteV1CfgCloudLinkCloudServer"), ("SITE-MONITORING-MIB", "siteV1CfgCloudLinkCloudPort"), ("SITE-MONITORING-MIB", "siteV1CfgCloudLinkCloudCredential"), ("SITE-MONITORING-MIB", "siteV1CfgCloudLinkCloudCluster"), ("SITE-MONITORING-MIB", "siteV1CfgInventoryRS485ExtensionsConf"), ("SITE-MONITORING-MIB", "siteV1CfgInventoryEthernetExtensionsConf"), ("SITE-MONITORING-MIB", "siteV1CfgScriptingEnabledscripts"), ("SITE-MONITORING-MIB", "siteV1CfgScriptingNumberofErrorsbeforetriggeringalarm"), ("SITE-MONITORING-MIB", "siteV1CfgGenericReadAccessUserNumbers"), ("SITE-MONITORING-MIB", "siteV1CfgGenericWriteAccessUserNumbers"), ("SITE-MONITORING-MIB", "siteV1CfgGenericEventTableLength"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPSNMPTrapTargetsIP"), ("SITE-MONITORING-MIB", "siteV1CfgSNMPMinimalEventSeverityForTraps"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLEventsPrimPostURL"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLEventsPrimPostLogin"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLEventsPrimPostPassword"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLEventsSecPostURL"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLEventsSecPostLogin"), ("SITE-MONITORING-MIB", "siteV1CfgXMLXMLEventsSecPostPassword"), ("SITE-MONITORING-MIB", "siteV1CfgPLCNumberOfPLCData"), ("SITE-MONITORING-MIB", "siteV1CfgPLCNumberOfPLCAlarm"), ("SITE-MONITORING-MIB", "siteV1ControlNumber"), ("SITE-MONITORING-MIB", "siteV1ControlName"), ("SITE-MONITORING-MIB", "siteV1ControlValue"), ("SITE-MONITORING-MIB", "siteV1ControlEntryStatus"), ("SITE-MONITORING-MIB", "siteV1CtrlControllerRebootController"), ("SITE-MONITORING-MIB", "siteV1CtrlControllerSaveConfAndRebootController"), ("SITE-MONITORING-MIB", "siteV1CtrlControllerRebootControllerWithoutSavingRecords"), ("SITE-MONITORING-MIB", "siteV1CtrlNetworkApplyNetworkConf"), ("SITE-MONITORING-MIB", "siteV1CtrlTimeForceSNTPTimeRefresh"), ("SITE-MONITORING-MIB", "siteV1CtrlTimeSetLocalTime"), ("SITE-MONITORING-MIB", "siteV1CtrlTimeSetUTCTime"), ("SITE-MONITORING-MIB", "siteV1CtrlTimeResetUptime"), ("SITE-MONITORING-MIB", "siteV1CtrlControllerCleanandSaveXMLUserConf"), ("SITE-MONITORING-MIB", "siteV1CtrlControllerSaveXMLUserConf"), ("SITE-MONITORING-MIB", "siteV1CtrlControllerSaveInventory"), ("SITE-MONITORING-MIB", "siteV1CtrlDataRecordsSaveDataRecords"), ("SITE-MONITORING-MIB", "siteV1CtrlDataRecordsExportDataRecordsinCSV"), ("SITE-MONITORING-MIB", "siteV1CtrlDataRecordsArchiveDataRecords"), ("SITE-MONITORING-MIB", "siteV1CtrlDataRecordsDeleteAllDataRecords"), ("SITE-MONITORING-MIB", "siteV1CtrlControllerEmulateRecords"), ("SITE-MONITORING-MIB", "siteV1CtrlControllerReloadTranslations"), ("SITE-MONITORING-MIB", "siteV1CtrlControllerReloadLicense"), ("SITE-MONITORING-MIB", "siteV1CtrlControllerManageFTPServer"), ("SITE-MONITORING-MIB", "siteV1CtrlInventoryRemoveAbsentEquipments"), ("SITE-MONITORING-MIB", "siteV1CtrlInventoryResetCANBusNode"), ("SITE-MONITORING-MIB", "siteV1CtrlInventorySaveCANOpenLSSConf"), ("SITE-MONITORING-MIB", "siteV1CtrlInventoryStartNewInventory"), ("SITE-MONITORING-MIB", "siteV1CtrlInventoryUpgradeNodeFirmware"), ("SITE-MONITORING-MIB", "siteV1CtrlInventoryCancelFirmwareUpgrade"), ("SITE-MONITORING-MIB", "siteV1CtrlFilesFlashBinary"), ("SITE-MONITORING-MIB", "siteV1CtrlFilesDownloadFileFromUrl"), ("SITE-MONITORING-MIB", "siteV1CtrlFilesDeleteUserUploadedFile"), ("SITE-MONITORING-MIB", "siteV1CtrlFilesMoveUserUploadedFile"), ("SITE-MONITORING-MIB", "siteV1CtrlFilesExtractZipFileinuserupload"), ("SITE-MONITORING-MIB", "siteV1CtrlEmailSendSummaryEmail"), ("SITE-MONITORING-MIB", "siteV1CtrlScriptingControlLuaScript"), ("SITE-MONITORING-MIB", "siteV1CtrlControllerAdvancedFunctionGenericCommandExecution"), ("SITE-MONITORING-MIB", "siteV1CtrlGenericClearMyEvents"), ("SITE-MONITORING-MIB", "siteV1CtrlGenericClearAllEvents"), ("SITE-MONITORING-MIB", "siteV1CtrlGenericAddEvent"), ("SITE-MONITORING-MIB", "siteV1CtrlGenericAddMajorEvent"), ("SITE-MONITORING-MIB", "siteV1CtrlGenericResetDefaultNamesAndGroups"), ("SITE-MONITORING-MIB", "siteV1CtrlGenericResetDefaultNamesAndGroupsRecursive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    siteV1GlobalGroup = siteV1GlobalGroup.setStatus('current')
siteV1NotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 19, 1, 2)).setObjects(("SITE-MONITORING-MIB", "siteV1NotificationOfEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    siteV1NotificationGroup = siteV1NotificationGroup.setStatus('current')
energySystems = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20))
es1 = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1))
es1GlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1GlobalStatus.setStatus('current')
es1GlobalAlarmSeverityType = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1GlobalAlarmSeverityType.setStatus('current')
es1GlobalAlarmSeverityLevel = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1GlobalAlarmSeverityLevel.setStatus('current')
es1GlobalAlarmSeverityTypeInt = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1GlobalAlarmSeverityTypeInt.setStatus('current')
es1Description = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 10))
es1DescriptionNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1DescriptionNumber.setStatus('current')
es1DescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 10, 2), )
if mibBuilder.loadTexts: es1DescriptionTable.setStatus('current')
es1DescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 10, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "es1DescriptionIndex"))
if mibBuilder.loadTexts: es1DescriptionEntry.setStatus('current')
es1DescriptionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 10, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: es1DescriptionIndex.setStatus('current')
es1DescriptionName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 10, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1DescriptionName.setStatus('current')
es1DescriptionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 10, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1DescriptionValue.setStatus('current')
es1DescriptionEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 10, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1DescriptionEntryStatus.setStatus('current')
es1DescriptionList = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 10, 3))
es1DescDescriptionDescription = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 10, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1DescDescriptionDescription.setStatus('current')
es1DescDescriptionReference = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 10, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1DescDescriptionReference.setStatus('current')
es1Alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11))
es1AlarmNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1AlarmNumber.setStatus('current')
es1AlarmTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 2), )
if mibBuilder.loadTexts: es1AlarmTable.setStatus('current')
es1AlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "es1AlarmIndex"))
if mibBuilder.loadTexts: es1AlarmEntry.setStatus('current')
es1AlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: es1AlarmIndex.setStatus('current')
es1AlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1AlarmName.setStatus('current')
es1AlarmActive = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1AlarmActive.setStatus('current')
es1AlarmSeverityType = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1AlarmSeverityType.setStatus('current')
es1AlarmSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1AlarmSeverityLevel.setStatus('current')
es1AlarmStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1AlarmStartTime.setStatus('current')
es1AlarmStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1AlarmStopTime.setStatus('current')
es1AlarmEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1AlarmEntryStatus.setStatus('current')
es1AlarmSummary = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 11, 3), Bits().clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1AlarmSummary.setStatus('current')
es1Event = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 12))
es1EventNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1EventNumber.setStatus('current')
es1EventTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 12, 2), )
if mibBuilder.loadTexts: es1EventTable.setStatus('current')
es1EventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 12, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "es1EventIndex"))
if mibBuilder.loadTexts: es1EventEntry.setStatus('current')
es1EventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 12, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: es1EventIndex.setStatus('current')
es1EventId = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 12, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1EventId.setStatus('current')
es1EventName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 12, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1EventName.setStatus('current')
es1EventDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 12, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1EventDateTime.setStatus('current')
es1EventSeverityType = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 12, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1EventSeverityType.setStatus('current')
es1EventSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 12, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1EventSeverityLevel.setStatus('current')
es1EventEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 12, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1EventEntryStatus.setStatus('current')
es1Data = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 13))
es1DataNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 13, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1DataNumber.setStatus('current')
es1Config = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 15))
es1ConfigNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 15, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1ConfigNumber.setStatus('current')
es1ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 15, 2), )
if mibBuilder.loadTexts: es1ConfigTable.setStatus('current')
es1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 15, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "es1ConfigIndex"))
if mibBuilder.loadTexts: es1ConfigEntry.setStatus('current')
es1ConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 15, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: es1ConfigIndex.setStatus('current')
es1ConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 15, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1ConfigName.setStatus('current')
es1ConfigValue = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 15, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1ConfigValue.setStatus('current')
es1ConfigEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 15, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1ConfigEntryStatus.setStatus('current')
es1ConfigList = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 15, 3))
es1CfgEnergyMeterNumberOfGenericPulseEnergyCounter = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 15, 3, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1CfgEnergyMeterNumberOfGenericPulseEnergyCounter.setStatus('current')
es1Control = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16))
es1ControlNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1ControlNumber.setStatus('current')
es1ControlTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 2), )
if mibBuilder.loadTexts: es1ControlTable.setStatus('current')
es1ControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "es1ControlIndex"))
if mibBuilder.loadTexts: es1ControlEntry.setStatus('current')
es1ControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: es1ControlIndex.setStatus('current')
es1ControlName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1ControlName.setStatus('current')
es1ControlValue = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1ControlValue.setStatus('current')
es1ControlEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1ControlEntryStatus.setStatus('current')
es1ControlList = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 3))
es1CtrlGenericClearMyEvents = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 3, 501), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1CtrlGenericClearMyEvents.setStatus('current')
es1CtrlGenericClearAllEvents = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 3, 502), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1CtrlGenericClearAllEvents.setStatus('current')
es1CtrlGenericAddEvent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 3, 511), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1CtrlGenericAddEvent.setStatus('current')
es1CtrlGenericAddMajorEvent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 3, 512), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1CtrlGenericAddMajorEvent.setStatus('current')
es1CtrlGenericResetDefaultNamesAndGroups = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 3, 521), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1CtrlGenericResetDefaultNamesAndGroups.setStatus('current')
es1CtrlGenericResetDefaultNamesAndGroupsRecursive = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 16, 3, 522), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1CtrlGenericResetDefaultNamesAndGroupsRecursive.setStatus('current')
es1Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 18))
es1NotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 18, 0))
es1NotificationOfEvent = NotificationType((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 18, 0, 1)).setObjects(("SITE-MONITORING-MIB", "es1EventId"), ("SITE-MONITORING-MIB", "es1EventName"), ("SITE-MONITORING-MIB", "es1EventDateTime"), ("SITE-MONITORING-MIB", "es1EventSeverityType"), ("SITE-MONITORING-MIB", "es1EventSeverityLevel"), ("SITE-MONITORING-MIB", "es1AlarmSummary"))
if mibBuilder.loadTexts: es1NotificationOfEvent.setStatus('current')
es1Compliance = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 19))
es1ComplianceGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 19, 1))
es1FullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 19, 2)).setObjects(("SITE-MONITORING-MIB", "es1GlobalGroup"), ("SITE-MONITORING-MIB", "es1NotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    es1FullCompliance = es1FullCompliance.setStatus('current')
es1GlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 19, 1, 1)).setObjects(("SITE-MONITORING-MIB", "es1GlobalStatus"), ("SITE-MONITORING-MIB", "es1GlobalAlarmSeverityType"), ("SITE-MONITORING-MIB", "es1GlobalAlarmSeverityLevel"), ("SITE-MONITORING-MIB", "es1GlobalAlarmSeverityTypeInt"), ("SITE-MONITORING-MIB", "es1DescriptionNumber"), ("SITE-MONITORING-MIB", "es1DescriptionName"), ("SITE-MONITORING-MIB", "es1DescriptionValue"), ("SITE-MONITORING-MIB", "es1DescriptionEntryStatus"), ("SITE-MONITORING-MIB", "es1DescDescriptionDescription"), ("SITE-MONITORING-MIB", "es1DescDescriptionReference"), ("SITE-MONITORING-MIB", "es1AlarmNumber"), ("SITE-MONITORING-MIB", "es1AlarmName"), ("SITE-MONITORING-MIB", "es1AlarmActive"), ("SITE-MONITORING-MIB", "es1AlarmSeverityType"), ("SITE-MONITORING-MIB", "es1AlarmSeverityLevel"), ("SITE-MONITORING-MIB", "es1AlarmStartTime"), ("SITE-MONITORING-MIB", "es1AlarmStopTime"), ("SITE-MONITORING-MIB", "es1AlarmEntryStatus"), ("SITE-MONITORING-MIB", "es1AlarmSummary"), ("SITE-MONITORING-MIB", "es1EventNumber"), ("SITE-MONITORING-MIB", "es1EventId"), ("SITE-MONITORING-MIB", "es1EventName"), ("SITE-MONITORING-MIB", "es1EventDateTime"), ("SITE-MONITORING-MIB", "es1EventSeverityType"), ("SITE-MONITORING-MIB", "es1EventSeverityLevel"), ("SITE-MONITORING-MIB", "es1EventEntryStatus"), ("SITE-MONITORING-MIB", "es1DataNumber"), ("SITE-MONITORING-MIB", "es1ConfigNumber"), ("SITE-MONITORING-MIB", "es1ConfigName"), ("SITE-MONITORING-MIB", "es1ConfigValue"), ("SITE-MONITORING-MIB", "es1ConfigEntryStatus"), ("SITE-MONITORING-MIB", "es1CfgEnergyMeterNumberOfGenericPulseEnergyCounter"), ("SITE-MONITORING-MIB", "es1ControlNumber"), ("SITE-MONITORING-MIB", "es1ControlName"), ("SITE-MONITORING-MIB", "es1ControlValue"), ("SITE-MONITORING-MIB", "es1ControlEntryStatus"), ("SITE-MONITORING-MIB", "es1CtrlGenericClearMyEvents"), ("SITE-MONITORING-MIB", "es1CtrlGenericClearAllEvents"), ("SITE-MONITORING-MIB", "es1CtrlGenericAddEvent"), ("SITE-MONITORING-MIB", "es1CtrlGenericAddMajorEvent"), ("SITE-MONITORING-MIB", "es1CtrlGenericResetDefaultNamesAndGroups"), ("SITE-MONITORING-MIB", "es1CtrlGenericResetDefaultNamesAndGroupsRecursive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    es1GlobalGroup = es1GlobalGroup.setStatus('current')
es1NotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 19, 1, 2)).setObjects(("SITE-MONITORING-MIB", "es1NotificationOfEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    es1NotificationGroup = es1NotificationGroup.setStatus('current')
es1DCSystems = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20))
es1dc1 = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1))
es1dc1GlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1GlobalStatus.setStatus('current')
es1dc1GlobalAlarmSeverityType = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1GlobalAlarmSeverityType.setStatus('current')
es1dc1GlobalAlarmSeverityLevel = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1GlobalAlarmSeverityLevel.setStatus('current')
es1dc1GlobalAlarmSeverityTypeInt = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1GlobalAlarmSeverityTypeInt.setStatus('current')
es1dc1Description = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10))
es1dc1DescriptionNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescriptionNumber.setStatus('current')
es1dc1DescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 2), )
if mibBuilder.loadTexts: es1dc1DescriptionTable.setStatus('current')
es1dc1DescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "es1dc1DescriptionIndex"))
if mibBuilder.loadTexts: es1dc1DescriptionEntry.setStatus('current')
es1dc1DescriptionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: es1dc1DescriptionIndex.setStatus('current')
es1dc1DescriptionName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescriptionName.setStatus('current')
es1dc1DescriptionValue = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1dc1DescriptionValue.setStatus('current')
es1dc1DescriptionEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1dc1DescriptionEntryStatus.setStatus('current')
es1dc1DescriptionList = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3))
es1dc1DescDescriptionDescription = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1DescDescriptionDescription.setStatus('current')
es1dc1DescDescriptionReference = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1DescDescriptionReference.setStatus('current')
es1dc1DescDescriptionProductName = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescDescriptionProductName.setStatus('current')
es1dc1DescDescriptionHardwareReference = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescDescriptionHardwareReference.setStatus('current')
es1dc1DescDescriptionSoftwareReference = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescDescriptionSoftwareReference.setStatus('current')
es1dc1DescDescriptionSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescDescriptionSerialNumber.setStatus('current')
es1dc1DescDescriptionManufacturingDate = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescDescriptionManufacturingDate.setStatus('current')
es1dc1DescDescriptionDistributionModuleProductName = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescDescriptionDistributionModuleProductName.setStatus('current')
es1dc1DescDescriptionDistributionModuleHardwareReference = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescDescriptionDistributionModuleHardwareReference.setStatus('current')
es1dc1DescDescriptionDistributionModuleSoftwareReference = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescDescriptionDistributionModuleSoftwareReference.setStatus('current')
es1dc1DescDescriptionDistributionModuleSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescDescriptionDistributionModuleSerialNumber.setStatus('current')
es1dc1DescDescriptionDistributionModuleManufacturingDate = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 10, 3, 38), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DescDescriptionDistributionModuleManufacturingDate.setStatus('current')
es1dc1Alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11))
es1dc1AlarmNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1AlarmNumber.setStatus('current')
es1dc1AlarmTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 2), )
if mibBuilder.loadTexts: es1dc1AlarmTable.setStatus('current')
es1dc1AlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "es1dc1AlarmIndex"))
if mibBuilder.loadTexts: es1dc1AlarmEntry.setStatus('current')
es1dc1AlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: es1dc1AlarmIndex.setStatus('current')
es1dc1AlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1AlarmName.setStatus('current')
es1dc1AlarmActive = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1AlarmActive.setStatus('current')
es1dc1AlarmSeverityType = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1AlarmSeverityType.setStatus('current')
es1dc1AlarmSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1AlarmSeverityLevel.setStatus('current')
es1dc1AlarmStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1AlarmStartTime.setStatus('current')
es1dc1AlarmStopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1AlarmStopTime.setStatus('current')
es1dc1AlarmEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1dc1AlarmEntryStatus.setStatus('current')
es1dc1AlarmSummary = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 11, 3), Bits().clone(namedValues=NamedValues(("dCBusDCBusExtraLow", 0), ("dCBusDCBusLow", 1), ("dCBusDCBusHigh", 2), ("dCBusDCBusExtraHigh", 3), ("dCBusDCBusVoltageSenseFail", 4), ("aCBusMainsFail", 5), ("aCBusMainsPartialFail", 6), ("aCBusMainsLow", 7), ("rectifiersOneRectifierFail", 9), ("rectifiersMoreThanOneRectifierFail", 10), ("rectifiersMissingRectifiers", 11), ("batBatLastTestFailed", 12), ("batBatOnDischarge", 13), ("lVDBatLVDRelOpen", 16), ("batBatTempTooHigh", 17), ("batBatTempTooLow", 18), ("batBatTempSensorFail", 19), ("sensorsAmbientTempTooHigh", 20), ("sensorsAmbientTempTooLow", 21), ("sensorsAmbientTempSensorFail", 22), ("digInputsDistributionBreakerOpen", 24), ("digInputsBatBreakerOpen", 25), ("digInputsDigInput1", 26), ("digInputsDigInput2", 27), ("digInputsDigInput3", 28), ("digInputsDigInput4", 29)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1AlarmSummary.setStatus('current')
es1dc1Event = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 12))
es1dc1EventNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1EventNumber.setStatus('current')
es1dc1EventTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 12, 2), )
if mibBuilder.loadTexts: es1dc1EventTable.setStatus('current')
es1dc1EventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 12, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "es1dc1EventIndex"))
if mibBuilder.loadTexts: es1dc1EventEntry.setStatus('current')
es1dc1EventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 12, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: es1dc1EventIndex.setStatus('current')
es1dc1EventId = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 12, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1EventId.setStatus('current')
es1dc1EventName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 12, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1EventName.setStatus('current')
es1dc1EventDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 12, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1EventDateTime.setStatus('current')
es1dc1EventSeverityType = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 12, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1EventSeverityType.setStatus('current')
es1dc1EventSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 12, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1EventSeverityLevel.setStatus('current')
es1dc1EventEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 12, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1dc1EventEntryStatus.setStatus('current')
es1dc1Data = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13))
es1dc1DataNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataNumber.setStatus('current')
es1dc1DataTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 2), )
if mibBuilder.loadTexts: es1dc1DataTable.setStatus('current')
es1dc1DataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "es1dc1DataIndex"))
if mibBuilder.loadTexts: es1dc1DataEntry.setStatus('current')
es1dc1DataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: es1dc1DataIndex.setStatus('current')
es1dc1DataName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataName.setStatus('current')
es1dc1DataValue = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataValue.setStatus('current')
es1dc1DataEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1dc1DataEntryStatus.setStatus('current')
es1dc1DataList = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3))
es1dc1DataSystemDCMode = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataSystemDCMode.setStatus('current')
es1dc1DataSystemPreviousDCMode = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataSystemPreviousDCMode.setStatus('current')
es1dc1DataSystemNiMHChargeMode = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataSystemNiMHChargeMode.setStatus('current')
es1dc1DataDCBusBusVoltage = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataDCBusBusVoltage.setStatus('current')
es1dc1DataSystemRatioDeliveredOnAvailablePower = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataSystemRatioDeliveredOnAvailablePower.setStatus('current')
es1dc1DataACBusMinutesSinceLastACFailBegin = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataACBusMinutesSinceLastACFailBegin.setStatus('current')
es1dc1DataACBusMinutesSinceLastACFailEnd = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataACBusMinutesSinceLastACFailEnd.setStatus('current')
es1dc1DataRectifiersRectifiersOutPower = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersRectifiersOutPower.setStatus('current')
es1dc1DataRectifiersRectifiersOutCurrent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersRectifiersOutCurrent.setStatus('current')
es1dc1DataRectifiersRectifiersOutPowerMax = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersRectifiersOutPowerMax.setStatus('current')
es1dc1DataRectifiersRectifiersOutCurrentMax = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersRectifiersOutCurrentMax.setStatus('current')
es1dc1DataRectifiersNumberOfRectifierMax = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersNumberOfRectifierMax.setStatus('current')
es1dc1DataRectifiersNumberOfPresentRectifier = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersNumberOfPresentRectifier.setStatus('current')
es1dc1DataRectifiersNumberOfAbsentRectifier = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersNumberOfAbsentRectifier.setStatus('current')
es1dc1DataRectifiersNumberOfActiveRectifier = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersNumberOfActiveRectifier.setStatus('current')
es1dc1DataRectifiersNumberOfACFailRectifier = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersNumberOfACFailRectifier.setStatus('current')
es1dc1DataRectifiersNumberOfDCFailRectifier = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersNumberOfDCFailRectifier.setStatus('current')
es1dc1DataRectifiersNumberOfRemoteOffRectifier = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersNumberOfRemoteOffRectifier.setStatus('current')
es1dc1DataRectifiersNumberOfOverTempRectifier = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRectifiersNumberOfOverTempRectifier.setStatus('current')
es1dc1DataLoadLoadPower = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataLoadLoadPower.setStatus('current')
es1dc1DataLoadLoadCurrent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataLoadLoadCurrent.setStatus('current')
es1dc1DataBatBatInputCurrent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatBatInputCurrent.setStatus('current')
es1dc1DataBatBatInputPower = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatBatInputPower.setStatus('current')
es1dc1DataBatBatTemp = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatBatTemp.setStatus('current')
es1dc1DataBatBatTestState = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatBatTestState.setStatus('current')
es1dc1DataBatLastBatTestDischargedCapacityRatio = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatLastBatTestDischargedCapacityRatio.setStatus('current')
es1dc1DataBatLastBatTestDischargedCapacity = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatLastBatTestDischargedCapacity.setStatus('current')
es1dc1DataBatLastBatTestFinalVoltage = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatLastBatTestFinalVoltage.setStatus('current')
es1dc1DataBatBatTestDuration = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatBatTestDuration.setStatus('current')
es1dc1DataBatPreviousBatTestDischargedCapacityRatio = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatPreviousBatTestDischargedCapacityRatio.setStatus('current')
es1dc1DataBatPreviousBatTestDischargedCapacity = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatPreviousBatTestDischargedCapacity.setStatus('current')
es1dc1DataBatPreviousBatTestFinalVoltage = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatPreviousBatTestFinalVoltage.setStatus('current')
es1dc1DataBatPreviousBatTestDuration = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatPreviousBatTestDuration.setStatus('current')
es1dc1DataBatPreviousBatTestState = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatPreviousBatTestState.setStatus('current')
es1dc1DataBatMinutesSinceLastTestBat = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatMinutesSinceLastTestBat.setStatus('current')
es1dc1DataBatNextScheduledBatTest = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 84), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatNextScheduledBatTest.setStatus('current')
es1dc1DataBatBatChargeCapacity = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 91), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatBatChargeCapacity.setStatus('current')
es1dc1DataBatCalculatedAutonomy = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatCalculatedAutonomy.setStatus('current')
es1dc1DataBatBatCurrentIntegration = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 94), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataBatBatCurrentIntegration.setStatus('current')
es1dc1DataLVDLVDState = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 101), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataLVDLVDState.setStatus('current')
es1dc1DataRelsRel1State = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 111), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRelsRel1State.setStatus('current')
es1dc1DataRelsRel2State = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 112), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRelsRel2State.setStatus('current')
es1dc1DataRelsRel3State = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 113), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRelsRel3State.setStatus('current')
es1dc1DataRelsRel4State = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 114), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataRelsRel4State.setStatus('current')
es1dc1DataSmartEnergyEfficiencyOptimizedNumberOfRectifier = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 121), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataSmartEnergyEfficiencyOptimizedNumberOfRectifier.setStatus('current')
es1dc1DataSmartEnergySystemLossWithoutOptimisation = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 122), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataSmartEnergySystemLossWithoutOptimisation.setStatus('current')
es1dc1DataSmartEnergySystemLossWithOptimisation = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 123), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataSmartEnergySystemLossWithOptimisation.setStatus('current')
es1dc1DataSmartEnergyRectifierModelUsedForCalculation = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 124), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataSmartEnergyRectifierModelUsedForCalculation.setStatus('current')
es1dc1DataSmartEnergySmartEnergySavings = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 125), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataSmartEnergySmartEnergySavings.setStatus('current')
es1dc1DataSensorsAmbientTemp = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 151), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataSensorsAmbientTemp.setStatus('current')
es1dc1DataSensorsPulseCounter4 = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 13, 3, 204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1DataSensorsPulseCounter4.setStatus('current')
es1dc1Config = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15))
es1dc1ConfigNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1ConfigNumber.setStatus('current')
es1dc1ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 2), )
if mibBuilder.loadTexts: es1dc1ConfigTable.setStatus('current')
es1dc1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "es1dc1ConfigIndex"))
if mibBuilder.loadTexts: es1dc1ConfigEntry.setStatus('current')
es1dc1ConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: es1dc1ConfigIndex.setStatus('current')
es1dc1ConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1ConfigName.setStatus('current')
es1dc1ConfigValue = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1ConfigValue.setStatus('current')
es1dc1ConfigEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1dc1ConfigEntryStatus.setStatus('current')
es1dc1ConfigList = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3))
es1dc1CfgDCBusDCBusFloatVoltageat25degC = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDCBusDCBusFloatVoltageat25degC.setStatus('current')
es1dc1CfgDCBusDCBusVoltageExtraLow = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDCBusDCBusVoltageExtraLow.setStatus('current')
es1dc1CfgDCBusDCBusVoltageExtraLowHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDCBusDCBusVoltageExtraLowHysteresis.setStatus('current')
es1dc1CfgDCBusDCBusVoltageLow = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDCBusDCBusVoltageLow.setStatus('current')
es1dc1CfgDCBusDCBusVoltageLowHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDCBusDCBusVoltageLowHysteresis.setStatus('current')
es1dc1CfgDCBusDCBusVoltageHigh = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDCBusDCBusVoltageHigh.setStatus('current')
es1dc1CfgDCBusDCBusVoltageHighHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDCBusDCBusVoltageHighHysteresis.setStatus('current')
es1dc1CfgDCBusDCBusVoltageExtraHigh = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDCBusDCBusVoltageExtraHigh.setStatus('current')
es1dc1CfgDCBusDCBusVoltageExtraHighHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDCBusDCBusVoltageExtraHighHysteresis.setStatus('current')
es1dc1CfgLVDLVDDisconnectVoltage = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgLVDLVDDisconnectVoltage.setStatus('current')
es1dc1CfgLVDLVDDisconnectDelay = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgLVDLVDDisconnectDelay.setStatus('current')
es1dc1CfgBatTempCompensationSlope = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatTempCompensationSlope.setStatus('current')
es1dc1CfgBatMaxPosTempCompensation = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatMaxPosTempCompensation.setStatus('current')
es1dc1CfgBatMaxNegTempCompensation = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatMaxNegTempCompensation.setStatus('current')
es1dc1CfgRectifiersMinimalNumberOfPresentRectifiers = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgRectifiersMinimalNumberOfPresentRectifiers.setStatus('current')
es1dc1CfgRectifiersRectifierModel = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgRectifiersRectifierModel.setStatus('current')
es1dc1CfgRectifiersForcedRemoteOffRectifers = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgRectifiersForcedRemoteOffRectifers.setStatus('current')
es1dc1CfgBatBatChargeCurrentLimit = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatChargeCurrentLimit.setStatus('current')
es1dc1CfgBatBatStringCapacity = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatStringCapacity.setStatus('current')
es1dc1CfgBatBatTempLow = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 33), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTempLow.setStatus('current')
es1dc1CfgBatBatTempHigh = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTempHigh.setStatus('current')
es1dc1CfgBatBatTempHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 35), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTempHysteresis.setStatus('current')
es1dc1CfgBatMinimalCurrentForDischargingAlarm = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatMinimalCurrentForDischargingAlarm.setStatus('current')
es1dc1CfgBatCurrentHysteresisForDischargingAlarm = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 37), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatCurrentHysteresisForDischargingAlarm.setStatus('current')
es1dc1CfgBatPeukertNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 38), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatPeukertNumber.setStatus('current')
es1dc1CfgBatMaxDepthOfDischargeforAutonomyEstimation = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 39), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatMaxDepthOfDischargeforAutonomyEstimation.setStatus('current')
es1dc1CfgBatBoostAutomatic = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBoostAutomatic.setStatus('current')
es1dc1CfgBatBoostActivationLowVoltage = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBoostActivationLowVoltage.setStatus('current')
es1dc1CfgBatBoostTerminationVoltage = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 53), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBoostTerminationVoltage.setStatus('current')
es1dc1CfgBatBoostTerminationCurrent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 54), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBoostTerminationCurrent.setStatus('current')
es1dc1CfgBatBoostTerminationTime = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 55), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBoostTerminationTime.setStatus('current')
es1dc1CfgBatBatTestType = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 69), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTestType.setStatus('current')
es1dc1CfgBatBatTestEndVoltage = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 70), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTestEndVoltage.setStatus('current')
es1dc1CfgBatBatTestDischargeRatio = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 71), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTestDischargeRatio.setStatus('current')
es1dc1CfgBatBatTestInterval = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 72), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTestInterval.setStatus('current')
es1dc1CfgBatBatTestDischargeCurrent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 73), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTestDischargeCurrent.setStatus('current')
es1dc1CfgBatBatTestMinimalDischargeCurrent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 74), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTestMinimalDischargeCurrent.setStatus('current')
es1dc1CfgBatBatTestDuration = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 75), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTestDuration.setStatus('current')
es1dc1CfgBatBatTestRequMinutesWithoutMainsFail = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 76), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTestRequMinutesWithoutMainsFail.setStatus('current')
es1dc1CfgBatBatTestSchedulerCronRule = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 77), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgBatBatTestSchedulerCronRule.setStatus('current')
es1dc1CfgSmartEnergySmartEnergyBooleanCond = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 83), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgSmartEnergySmartEnergyBooleanCond.setStatus('current')
es1dc1CfgLVDBatLVDNodeId = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 86), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgLVDBatLVDNodeId.setStatus('current')
es1dc1CfgDigInputsDigInput1Name = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 91), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput1Name.setStatus('current')
es1dc1CfgDigInputsDigInput1NormallyClosed = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 92), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput1NormallyClosed.setStatus('current')
es1dc1CfgDigInputsDigInput2Name = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 93), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput2Name.setStatus('current')
es1dc1CfgDigInputsDigInput2NormallyClosed = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 94), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput2NormallyClosed.setStatus('current')
es1dc1CfgDigInputsDigInput3Name = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 95), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput3Name.setStatus('current')
es1dc1CfgDigInputsDigInput3NormallyClosed = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 96), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput3NormallyClosed.setStatus('current')
es1dc1CfgDigInputsDigInput4Name = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 97), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput4Name.setStatus('current')
es1dc1CfgDigInputsDigInput4NormallyClosed = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 98), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput4NormallyClosed.setStatus('current')
es1dc1CfgDigInputsDigInput5Name = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 99), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput5Name.setStatus('current')
es1dc1CfgDigInputsDigInput5NormallyClosed = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput5NormallyClosed.setStatus('current')
es1dc1CfgDigInputsDigInput6Name = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 101), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput6Name.setStatus('current')
es1dc1CfgDigInputsDigInput6NormallyClosed = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 102), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgDigInputsDigInput6NormallyClosed.setStatus('current')
es1dc1CfgRelsDryAlarm1AlternativeBooleanCond = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 111), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgRelsDryAlarm1AlternativeBooleanCond.setStatus('current')
es1dc1CfgRelsDryAlarm2AlternativeBooleanCond = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 112), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgRelsDryAlarm2AlternativeBooleanCond.setStatus('current')
es1dc1CfgRelsDryAlarm3AlternativeBooleanCond = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 113), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgRelsDryAlarm3AlternativeBooleanCond.setStatus('current')
es1dc1CfgRelsDryAlarm4AlternativeBooleanCond = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 114), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgRelsDryAlarm4AlternativeBooleanCond.setStatus('current')
es1dc1CfgSensorsAmbientTempLow = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 131), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgSensorsAmbientTempLow.setStatus('current')
es1dc1CfgSensorsAmbientTempHigh = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 132), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgSensorsAmbientTempHigh.setStatus('current')
es1dc1CfgSensorsAmbientTempHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 133), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgSensorsAmbientTempHysteresis.setStatus('current')
es1dc1CfgGenericReadAccessUserNumbers = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 521), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgGenericReadAccessUserNumbers.setStatus('current')
es1dc1CfgGenericWriteAccessUserNumbers = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 522), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgGenericWriteAccessUserNumbers.setStatus('current')
es1dc1CfgGenericEventTableLength = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 601), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgGenericEventTableLength.setStatus('current')
es1dc1CfgGenericEventTableLengthByRectifier = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 602), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgGenericEventTableLengthByRectifier.setStatus('current')
es1dc1CfgPLCNumberOfPLCData = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 901), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgPLCNumberOfPLCData.setStatus('current')
es1dc1CfgPLCNumberOfPLCAlarm = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 15, 3, 902), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CfgPLCNumberOfPLCAlarm.setStatus('current')
es1dc1Control = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16))
es1dc1ControlNumber = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1ControlNumber.setStatus('current')
es1dc1ControlTable = MibTable((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 2), )
if mibBuilder.loadTexts: es1dc1ControlTable.setStatus('current')
es1dc1ControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 2, 1), ).setIndexNames((0, "SITE-MONITORING-MIB", "es1dc1ControlIndex"))
if mibBuilder.loadTexts: es1dc1ControlEntry.setStatus('current')
es1dc1ControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: es1dc1ControlIndex.setStatus('current')
es1dc1ControlName = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es1dc1ControlName.setStatus('current')
es1dc1ControlValue = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1ControlValue.setStatus('current')
es1dc1ControlEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: es1dc1ControlEntryStatus.setStatus('current')
es1dc1ControlList = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3))
es1dc1CtrlSystemBackToFloat = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlSystemBackToFloat.setStatus('current')
es1dc1CtrlSystemStartBatTest = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlSystemStartBatTest.setStatus('current')
es1dc1CtrlSystemForceBatTest = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlSystemForceBatTest.setStatus('current')
es1dc1CtrlSystemStartBoostMode = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlSystemStartBoostMode.setStatus('current')
es1dc1CtrlLVDOpenTheLVD = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlLVDOpenTheLVD.setStatus('current')
es1dc1CtrlLVDCloseTheLVD = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlLVDCloseTheLVD.setStatus('current')
es1dc1CtrlBatCorrectBatCurrentOffset = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlBatCorrectBatCurrentOffset.setStatus('current')
es1dc1CtrlBatResetLastBatTestState = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 41), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlBatResetLastBatTestState.setStatus('current')
es1dc1CtrlSaveSaveConfInMCU = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlSaveSaveConfInMCU.setStatus('current')
es1dc1CtrlAdvancedSetMCUSpecificConfId = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 55), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlAdvancedSetMCUSpecificConfId.setStatus('current')
es1dc1CtrlDigInputsSetDigInput4CounterValue = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 61), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlDigInputsSetDigInput4CounterValue.setStatus('current')
es1dc1CtrlRelsInvertRel1StateForXSeconds = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 111), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlRelsInvertRel1StateForXSeconds.setStatus('current')
es1dc1CtrlRelsInvertRel2StateForXSeconds = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 112), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlRelsInvertRel2StateForXSeconds.setStatus('current')
es1dc1CtrlRelsInvertRel3StateForXSeconds = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 113), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlRelsInvertRel3StateForXSeconds.setStatus('current')
es1dc1CtrlRelsInvertRel4StateForXSeconds = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 114), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlRelsInvertRel4StateForXSeconds.setStatus('current')
es1dc1CtrlGenericClearMyEvents = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 501), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlGenericClearMyEvents.setStatus('current')
es1dc1CtrlGenericClearAllEvents = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 502), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlGenericClearAllEvents.setStatus('current')
es1dc1CtrlGenericAddEvent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 511), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlGenericAddEvent.setStatus('current')
es1dc1CtrlGenericAddMajorEvent = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 512), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlGenericAddMajorEvent.setStatus('current')
es1dc1CtrlGenericResetDefaultNamesAndGroups = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 521), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlGenericResetDefaultNamesAndGroups.setStatus('current')
es1dc1CtrlGenericResetDefaultNamesAndGroupsRecursive = MibScalar((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 16, 3, 522), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es1dc1CtrlGenericResetDefaultNamesAndGroupsRecursive.setStatus('current')
es1dc1Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 18))
es1dc1NotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 18, 0))
es1dc1NotificationOfEvent = NotificationType((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 18, 0, 1)).setObjects(("SITE-MONITORING-MIB", "es1dc1EventId"), ("SITE-MONITORING-MIB", "es1dc1EventName"), ("SITE-MONITORING-MIB", "es1dc1EventDateTime"), ("SITE-MONITORING-MIB", "es1dc1EventSeverityType"), ("SITE-MONITORING-MIB", "es1dc1EventSeverityLevel"), ("SITE-MONITORING-MIB", "es1dc1AlarmSummary"))
if mibBuilder.loadTexts: es1dc1NotificationOfEvent.setStatus('current')
es1dc1Compliance = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 19))
es1dc1ComplianceGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 19, 1))
es1dc1FullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 19, 2)).setObjects(("SITE-MONITORING-MIB", "es1dc1GlobalGroup"), ("SITE-MONITORING-MIB", "es1dc1NotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    es1dc1FullCompliance = es1dc1FullCompliance.setStatus('current')
es1dc1GlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 19, 1, 1)).setObjects(("SITE-MONITORING-MIB", "es1dc1GlobalStatus"), ("SITE-MONITORING-MIB", "es1dc1GlobalAlarmSeverityType"), ("SITE-MONITORING-MIB", "es1dc1GlobalAlarmSeverityLevel"), ("SITE-MONITORING-MIB", "es1dc1GlobalAlarmSeverityTypeInt"), ("SITE-MONITORING-MIB", "es1dc1DescriptionNumber"), ("SITE-MONITORING-MIB", "es1dc1DescriptionName"), ("SITE-MONITORING-MIB", "es1dc1DescriptionValue"), ("SITE-MONITORING-MIB", "es1dc1DescriptionEntryStatus"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionDescription"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionReference"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionProductName"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionHardwareReference"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionSoftwareReference"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionSerialNumber"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionManufacturingDate"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionDistributionModuleProductName"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionDistributionModuleHardwareReference"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionDistributionModuleSoftwareReference"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionDistributionModuleSerialNumber"), ("SITE-MONITORING-MIB", "es1dc1DescDescriptionDistributionModuleManufacturingDate"), ("SITE-MONITORING-MIB", "es1dc1AlarmNumber"), ("SITE-MONITORING-MIB", "es1dc1AlarmName"), ("SITE-MONITORING-MIB", "es1dc1AlarmActive"), ("SITE-MONITORING-MIB", "es1dc1AlarmSeverityType"), ("SITE-MONITORING-MIB", "es1dc1AlarmSeverityLevel"), ("SITE-MONITORING-MIB", "es1dc1AlarmStartTime"), ("SITE-MONITORING-MIB", "es1dc1AlarmStopTime"), ("SITE-MONITORING-MIB", "es1dc1AlarmEntryStatus"), ("SITE-MONITORING-MIB", "es1dc1AlarmSummary"), ("SITE-MONITORING-MIB", "es1dc1EventNumber"), ("SITE-MONITORING-MIB", "es1dc1EventId"), ("SITE-MONITORING-MIB", "es1dc1EventName"), ("SITE-MONITORING-MIB", "es1dc1EventDateTime"), ("SITE-MONITORING-MIB", "es1dc1EventSeverityType"), ("SITE-MONITORING-MIB", "es1dc1EventSeverityLevel"), ("SITE-MONITORING-MIB", "es1dc1EventEntryStatus"), ("SITE-MONITORING-MIB", "es1dc1DataNumber"), ("SITE-MONITORING-MIB", "es1dc1DataName"), ("SITE-MONITORING-MIB", "es1dc1DataValue"), ("SITE-MONITORING-MIB", "es1dc1DataEntryStatus"), ("SITE-MONITORING-MIB", "es1dc1DataSystemDCMode"), ("SITE-MONITORING-MIB", "es1dc1DataSystemPreviousDCMode"), ("SITE-MONITORING-MIB", "es1dc1DataSystemNiMHChargeMode"), ("SITE-MONITORING-MIB", "es1dc1DataDCBusBusVoltage"), ("SITE-MONITORING-MIB", "es1dc1DataSystemRatioDeliveredOnAvailablePower"), ("SITE-MONITORING-MIB", "es1dc1DataACBusMinutesSinceLastACFailBegin"), ("SITE-MONITORING-MIB", "es1dc1DataACBusMinutesSinceLastACFailEnd"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersRectifiersOutPower"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersRectifiersOutCurrent"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersRectifiersOutPowerMax"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersRectifiersOutCurrentMax"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersNumberOfRectifierMax"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersNumberOfPresentRectifier"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersNumberOfAbsentRectifier"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersNumberOfActiveRectifier"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersNumberOfACFailRectifier"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersNumberOfDCFailRectifier"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersNumberOfRemoteOffRectifier"), ("SITE-MONITORING-MIB", "es1dc1DataRectifiersNumberOfOverTempRectifier"), ("SITE-MONITORING-MIB", "es1dc1DataLoadLoadPower"), ("SITE-MONITORING-MIB", "es1dc1DataLoadLoadCurrent"), ("SITE-MONITORING-MIB", "es1dc1DataBatBatInputCurrent"), ("SITE-MONITORING-MIB", "es1dc1DataBatBatInputPower"), ("SITE-MONITORING-MIB", "es1dc1DataBatBatTemp"), ("SITE-MONITORING-MIB", "es1dc1DataBatBatTestState"), ("SITE-MONITORING-MIB", "es1dc1DataBatLastBatTestDischargedCapacityRatio"), ("SITE-MONITORING-MIB", "es1dc1DataBatLastBatTestDischargedCapacity"), ("SITE-MONITORING-MIB", "es1dc1DataBatLastBatTestFinalVoltage"), ("SITE-MONITORING-MIB", "es1dc1DataBatBatTestDuration"), ("SITE-MONITORING-MIB", "es1dc1DataBatPreviousBatTestDischargedCapacityRatio"), ("SITE-MONITORING-MIB", "es1dc1DataBatPreviousBatTestDischargedCapacity"), ("SITE-MONITORING-MIB", "es1dc1DataBatPreviousBatTestFinalVoltage"), ("SITE-MONITORING-MIB", "es1dc1DataBatPreviousBatTestDuration"), ("SITE-MONITORING-MIB", "es1dc1DataBatPreviousBatTestState"), ("SITE-MONITORING-MIB", "es1dc1DataBatMinutesSinceLastTestBat"), ("SITE-MONITORING-MIB", "es1dc1DataBatNextScheduledBatTest"), ("SITE-MONITORING-MIB", "es1dc1DataBatBatChargeCapacity"), ("SITE-MONITORING-MIB", "es1dc1DataBatCalculatedAutonomy"), ("SITE-MONITORING-MIB", "es1dc1DataBatBatCurrentIntegration"), ("SITE-MONITORING-MIB", "es1dc1DataLVDLVDState"), ("SITE-MONITORING-MIB", "es1dc1DataRelsRel1State"), ("SITE-MONITORING-MIB", "es1dc1DataRelsRel2State"), ("SITE-MONITORING-MIB", "es1dc1DataRelsRel3State"), ("SITE-MONITORING-MIB", "es1dc1DataRelsRel4State"), ("SITE-MONITORING-MIB", "es1dc1DataSmartEnergyEfficiencyOptimizedNumberOfRectifier"), ("SITE-MONITORING-MIB", "es1dc1DataSmartEnergySystemLossWithoutOptimisation"), ("SITE-MONITORING-MIB", "es1dc1DataSmartEnergySystemLossWithOptimisation"), ("SITE-MONITORING-MIB", "es1dc1DataSmartEnergyRectifierModelUsedForCalculation"), ("SITE-MONITORING-MIB", "es1dc1DataSmartEnergySmartEnergySavings"), ("SITE-MONITORING-MIB", "es1dc1DataSensorsAmbientTemp"), ("SITE-MONITORING-MIB", "es1dc1DataSensorsPulseCounter4"), ("SITE-MONITORING-MIB", "es1dc1ConfigNumber"), ("SITE-MONITORING-MIB", "es1dc1ConfigName"), ("SITE-MONITORING-MIB", "es1dc1ConfigValue"), ("SITE-MONITORING-MIB", "es1dc1ConfigEntryStatus"), ("SITE-MONITORING-MIB", "es1dc1CfgDCBusDCBusFloatVoltageat25degC"), ("SITE-MONITORING-MIB", "es1dc1CfgDCBusDCBusVoltageExtraLow"), ("SITE-MONITORING-MIB", "es1dc1CfgDCBusDCBusVoltageExtraLowHysteresis"), ("SITE-MONITORING-MIB", "es1dc1CfgDCBusDCBusVoltageLow"), ("SITE-MONITORING-MIB", "es1dc1CfgDCBusDCBusVoltageLowHysteresis"), ("SITE-MONITORING-MIB", "es1dc1CfgDCBusDCBusVoltageHigh"), ("SITE-MONITORING-MIB", "es1dc1CfgDCBusDCBusVoltageHighHysteresis"), ("SITE-MONITORING-MIB", "es1dc1CfgDCBusDCBusVoltageExtraHigh"), ("SITE-MONITORING-MIB", "es1dc1CfgDCBusDCBusVoltageExtraHighHysteresis"), ("SITE-MONITORING-MIB", "es1dc1CfgLVDLVDDisconnectVoltage"), ("SITE-MONITORING-MIB", "es1dc1CfgLVDLVDDisconnectDelay"), ("SITE-MONITORING-MIB", "es1dc1CfgBatTempCompensationSlope"), ("SITE-MONITORING-MIB", "es1dc1CfgBatMaxPosTempCompensation"), ("SITE-MONITORING-MIB", "es1dc1CfgBatMaxNegTempCompensation"), ("SITE-MONITORING-MIB", "es1dc1CfgRectifiersMinimalNumberOfPresentRectifiers"), ("SITE-MONITORING-MIB", "es1dc1CfgRectifiersRectifierModel"), ("SITE-MONITORING-MIB", "es1dc1CfgRectifiersForcedRemoteOffRectifers"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatChargeCurrentLimit"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatStringCapacity"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTempLow"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTempHigh"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTempHysteresis"), ("SITE-MONITORING-MIB", "es1dc1CfgBatMinimalCurrentForDischargingAlarm"), ("SITE-MONITORING-MIB", "es1dc1CfgBatCurrentHysteresisForDischargingAlarm"), ("SITE-MONITORING-MIB", "es1dc1CfgBatPeukertNumber"), ("SITE-MONITORING-MIB", "es1dc1CfgBatMaxDepthOfDischargeforAutonomyEstimation"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBoostAutomatic"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBoostActivationLowVoltage"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBoostTerminationVoltage"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBoostTerminationCurrent"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBoostTerminationTime"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTestType"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTestEndVoltage"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTestDischargeRatio"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTestInterval"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTestDischargeCurrent"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTestMinimalDischargeCurrent"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTestDuration"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTestRequMinutesWithoutMainsFail"), ("SITE-MONITORING-MIB", "es1dc1CfgBatBatTestSchedulerCronRule"), ("SITE-MONITORING-MIB", "es1dc1CfgSmartEnergySmartEnergyBooleanCond"), ("SITE-MONITORING-MIB", "es1dc1CfgLVDBatLVDNodeId"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput1Name"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput1NormallyClosed"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput2Name"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput2NormallyClosed"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput3Name"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput3NormallyClosed"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput4Name"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput4NormallyClosed"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput5Name"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput5NormallyClosed"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput6Name"), ("SITE-MONITORING-MIB", "es1dc1CfgDigInputsDigInput6NormallyClosed"), ("SITE-MONITORING-MIB", "es1dc1CfgRelsDryAlarm1AlternativeBooleanCond"), ("SITE-MONITORING-MIB", "es1dc1CfgRelsDryAlarm2AlternativeBooleanCond"), ("SITE-MONITORING-MIB", "es1dc1CfgRelsDryAlarm3AlternativeBooleanCond"), ("SITE-MONITORING-MIB", "es1dc1CfgRelsDryAlarm4AlternativeBooleanCond"), ("SITE-MONITORING-MIB", "es1dc1CfgSensorsAmbientTempLow"), ("SITE-MONITORING-MIB", "es1dc1CfgSensorsAmbientTempHigh"), ("SITE-MONITORING-MIB", "es1dc1CfgSensorsAmbientTempHysteresis"), ("SITE-MONITORING-MIB", "es1dc1CfgGenericReadAccessUserNumbers"), ("SITE-MONITORING-MIB", "es1dc1CfgGenericWriteAccessUserNumbers"), ("SITE-MONITORING-MIB", "es1dc1CfgGenericEventTableLength"), ("SITE-MONITORING-MIB", "es1dc1CfgGenericEventTableLengthByRectifier"), ("SITE-MONITORING-MIB", "es1dc1CfgPLCNumberOfPLCData"), ("SITE-MONITORING-MIB", "es1dc1CfgPLCNumberOfPLCAlarm"), ("SITE-MONITORING-MIB", "es1dc1ControlNumber"), ("SITE-MONITORING-MIB", "es1dc1ControlName"), ("SITE-MONITORING-MIB", "es1dc1ControlValue"), ("SITE-MONITORING-MIB", "es1dc1ControlEntryStatus"), ("SITE-MONITORING-MIB", "es1dc1CtrlSystemBackToFloat"), ("SITE-MONITORING-MIB", "es1dc1CtrlSystemStartBatTest"), ("SITE-MONITORING-MIB", "es1dc1CtrlSystemForceBatTest"), ("SITE-MONITORING-MIB", "es1dc1CtrlSystemStartBoostMode"), ("SITE-MONITORING-MIB", "es1dc1CtrlLVDOpenTheLVD"), ("SITE-MONITORING-MIB", "es1dc1CtrlLVDCloseTheLVD"), ("SITE-MONITORING-MIB", "es1dc1CtrlBatCorrectBatCurrentOffset"), ("SITE-MONITORING-MIB", "es1dc1CtrlBatResetLastBatTestState"), ("SITE-MONITORING-MIB", "es1dc1CtrlSaveSaveConfInMCU"), ("SITE-MONITORING-MIB", "es1dc1CtrlAdvancedSetMCUSpecificConfId"), ("SITE-MONITORING-MIB", "es1dc1CtrlDigInputsSetDigInput4CounterValue"), ("SITE-MONITORING-MIB", "es1dc1CtrlRelsInvertRel1StateForXSeconds"), ("SITE-MONITORING-MIB", "es1dc1CtrlRelsInvertRel2StateForXSeconds"), ("SITE-MONITORING-MIB", "es1dc1CtrlRelsInvertRel3StateForXSeconds"), ("SITE-MONITORING-MIB", "es1dc1CtrlRelsInvertRel4StateForXSeconds"), ("SITE-MONITORING-MIB", "es1dc1CtrlGenericClearMyEvents"), ("SITE-MONITORING-MIB", "es1dc1CtrlGenericClearAllEvents"), ("SITE-MONITORING-MIB", "es1dc1CtrlGenericAddEvent"), ("SITE-MONITORING-MIB", "es1dc1CtrlGenericAddMajorEvent"), ("SITE-MONITORING-MIB", "es1dc1CtrlGenericResetDefaultNamesAndGroups"), ("SITE-MONITORING-MIB", "es1dc1CtrlGenericResetDefaultNamesAndGroupsRecursive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    es1dc1GlobalGroup = es1dc1GlobalGroup.setStatus('current')
es1dc1NotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 20, 1, 19, 1, 2)).setObjects(("SITE-MONITORING-MIB", "es1dc1NotificationOfEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    es1dc1NotificationGroup = es1dc1NotificationGroup.setStatus('current')
extensions = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 21))
es1InverterSystems = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 25))
es1RemotePowerFeedingSystems = MibIdentifier((1, 3, 6, 1, 4, 1, 26854, 3, 2, 1, 20, 1, 28))
mibBuilder.exportSymbols("SITE-MONITORING-MIB", siteV1DescDescriptionPhoneNumber=siteV1DescDescriptionPhoneNumber, es1dc1DataBatBatInputCurrent=es1dc1DataBatBatInputCurrent, siteV1EventName=siteV1EventName, siteV1CtrlGenericClearAllEvents=siteV1CtrlGenericClearAllEvents, es1dc1CfgBatBatTempHysteresis=es1dc1CfgBatBatTempHysteresis, siteV1CtrlFilesDownloadFileFromUrl=siteV1CtrlFilesDownloadFileFromUrl, siteV1CfgScriptingNumberofErrorsbeforetriggeringalarm=siteV1CfgScriptingNumberofErrorsbeforetriggeringalarm, es1dc1CfgGenericEventTableLength=es1dc1CfgGenericEventTableLength, siteV1CfgEmailMinimalSeverityTypeToSendMail=siteV1CfgEmailMinimalSeverityTypeToSendMail, siteV1CtrlEmailSendSummaryEmail=siteV1CtrlEmailSendSummaryEmail, es1dc1DataTable=es1dc1DataTable, es1DescriptionNumber=es1DescriptionNumber, es1dc1DataValue=es1dc1DataValue, es1dc1DescriptionName=es1dc1DescriptionName, es1Alarm=es1Alarm, es1dc1DataRectifiersNumberOfPresentRectifier=es1dc1DataRectifiersNumberOfPresentRectifier, es1ControlList=es1ControlList, siteV1CtrlControllerSaveInventory=siteV1CtrlControllerSaveInventory, es1dc1CfgBatBatTempHigh=es1dc1CfgBatBatTempHigh, siteV1CtrlDataRecordsArchiveDataRecords=siteV1CtrlDataRecordsArchiveDataRecords, siteV1CfgSNMPSNMPGETMinSecurityLevel=siteV1CfgSNMPSNMPGETMinSecurityLevel, es1dc1DescriptionValue=es1dc1DescriptionValue, siteV1CfgSNMPSNMPV3TrapPrivacyPassword=siteV1CfgSNMPSNMPV3TrapPrivacyPassword, siteV1AlarmActive=siteV1AlarmActive, siteV1CtrlFilesMoveUserUploadedFile=siteV1CtrlFilesMoveUserUploadedFile, siteV1CfgEmailSmtpDomain=siteV1CfgEmailSmtpDomain, es1ConfigList=es1ConfigList, siteV1CtrlTimeResetUptime=siteV1CtrlTimeResetUptime, es1dc1CtrlRelsInvertRel3StateForXSeconds=es1dc1CtrlRelsInvertRel3StateForXSeconds, siteV1DescControllerOperatingSystemRevision=siteV1DescControllerOperatingSystemRevision, es1dc1CtrlGenericResetDefaultNamesAndGroupsRecursive=es1dc1CtrlGenericResetDefaultNamesAndGroupsRecursive, es1dc1CfgDCBusDCBusVoltageExtraHighHysteresis=es1dc1CfgDCBusDCBusVoltageExtraHighHysteresis, siteV1CfgInventoryLSSCANidrange=siteV1CfgInventoryLSSCANidrange, siteV1CfgTimeSNTPTimeRecoveryRefresh=siteV1CfgTimeSNTPTimeRecoveryRefresh, es1DescDescriptionReference=es1DescDescriptionReference, es1AlarmSeverityType=es1AlarmSeverityType, siteV1CfgXMLXMLEventsSecPostURL=siteV1CfgXMLXMLEventsSecPostURL, siteV1CtrlFilesExtractZipFileinuserupload=siteV1CtrlFilesExtractZipFileinuserupload, es1dc1CfgBatPeukertNumber=es1dc1CfgBatPeukertNumber, siteV1CfgPLCNumberOfPLCAlarm=siteV1CfgPLCNumberOfPLCAlarm, es1dc1ConfigEntry=es1dc1ConfigEntry, es1dc1ControlName=es1dc1ControlName, es1dc1CfgBatCurrentHysteresisForDischargingAlarm=es1dc1CfgBatCurrentHysteresisForDischargingAlarm, es1DescriptionValue=es1DescriptionValue, siteV1CfgInventoryEthernetExtensionsConf=siteV1CfgInventoryEthernetExtensionsConf, siteV1CtrlFilesDeleteUserUploadedFile=siteV1CtrlFilesDeleteUserUploadedFile, es1dc1DescDescriptionDistributionModuleProductName=es1dc1DescDescriptionDistributionModuleProductName, es1AlarmEntry=es1AlarmEntry, es1dc1ConfigName=es1dc1ConfigName, siteV1CfgGenericGenerateEventOnConfChanges=siteV1CfgGenericGenerateEventOnConfChanges, siteV1Event=siteV1Event, es1dc1DataIndex=es1dc1DataIndex, es1EventEntry=es1EventEntry, atsaUs=atsaUs, es1AlarmEntryStatus=es1AlarmEntryStatus, siteV1DescControllerSoftwareRevision=siteV1DescControllerSoftwareRevision, es1dc1CtrlLVDCloseTheLVD=es1dc1CtrlLVDCloseTheLVD, siteV1CfgXMLXMLHeartbeatTime=siteV1CfgXMLXMLHeartbeatTime, es1dc1GlobalStatus=es1dc1GlobalStatus, es1dc1DataSystemRatioDeliveredOnAvailablePower=es1dc1DataSystemRatioDeliveredOnAvailablePower, es1AlarmStartTime=es1AlarmStartTime, es1dc1CtrlGenericClearMyEvents=es1dc1CtrlGenericClearMyEvents, siteV1CfgCloudLinkCloudCredential=siteV1CfgCloudLinkCloudCredential, siteV1CfgSNMPSNMPV3TrapPrivacyAlgorithm=siteV1CfgSNMPSNMPV3TrapPrivacyAlgorithm, siteV1CfgEmailMailRecipients=siteV1CfgEmailMailRecipients, es1dc1DataBatLastBatTestDischargedCapacity=es1dc1DataBatLastBatTestDischargedCapacity, es1dc1CfgBatTempCompensationSlope=es1dc1CfgBatTempCompensationSlope, siteV1EventDateTime=siteV1EventDateTime, siteV1DescDescriptionSiteNumber=siteV1DescDescriptionSiteNumber, siteV1ConfigIndex=siteV1ConfigIndex, siteV1GlobalStatus=siteV1GlobalStatus, es1dc1ConfigEntryStatus=es1dc1ConfigEntryStatus, siteV1DescriptionList=siteV1DescriptionList, siteV1DescDescriptionProvince=siteV1DescDescriptionProvince, siteV1DescDescriptionShortDescription=siteV1DescDescriptionShortDescription, es1EventTable=es1EventTable, es1ConfigIndex=es1ConfigIndex, es1CtrlGenericResetDefaultNamesAndGroupsRecursive=es1CtrlGenericResetDefaultNamesAndGroupsRecursive, siteV1DescriptionEntryStatus=siteV1DescriptionEntryStatus, es1dc1DataRectifiersNumberOfRemoteOffRectifier=es1dc1DataRectifiersNumberOfRemoteOffRectifier, es1dc1DescDescriptionManufacturingDate=es1dc1DescDescriptionManufacturingDate, es1dc1CfgBatBatChargeCurrentLimit=es1dc1CfgBatBatChargeCurrentLimit, es1dc1DataBatPreviousBatTestDuration=es1dc1DataBatPreviousBatTestDuration, es1dc1DataSensorsPulseCounter4=es1dc1DataSensorsPulseCounter4, siteV1DescControllerStarterVersion=siteV1DescControllerStarterVersion, siteV1CfgSNMPSNMPV3TrapUsername=siteV1CfgSNMPSNMPV3TrapUsername, es1Notifications=es1Notifications, es1DescriptionIndex=es1DescriptionIndex, siteV1CfgWebServerWebServerPort=siteV1CfgWebServerWebServerPort, es1dc1ControlList=es1dc1ControlList, es1DescriptionName=es1DescriptionName, siteV1CfgInventoryLSSCANOpenSavedConf=siteV1CfgInventoryLSSCANOpenSavedConf, siteV1DataTable=siteV1DataTable, siteV1CfgUsersUser1LoginPassword=siteV1CfgUsersUser1LoginPassword, siteV1Alarm=siteV1Alarm, siteV1CfgXMLXMLEventPostingActivated=siteV1CfgXMLXMLEventPostingActivated, es1dc1CtrlRelsInvertRel4StateForXSeconds=es1dc1CtrlRelsInvertRel4StateForXSeconds, es1EventNumber=es1EventNumber, siteV1DescriptionEntry=siteV1DescriptionEntry, es1ConfigTable=es1ConfigTable, es1ComplianceGroups=es1ComplianceGroups, es1dc1DescriptionIndex=es1dc1DescriptionIndex, siteV1CfgInventoryRequiredCANBusNodeIDs=siteV1CfgInventoryRequiredCANBusNodeIDs, es1EventName=es1EventName, siteV1CfgSNMPSNMPTrapVersion=siteV1CfgSNMPSNMPTrapVersion, siteV1CfgSNMPSiteDescriptionIdsIncludedInTraps=siteV1CfgSNMPSiteDescriptionIdsIncludedInTraps, es1dc1Config=es1dc1Config, es1ControlEntryStatus=es1ControlEntryStatus, siteV1CtrlGenericResetDefaultNamesAndGroups=siteV1CtrlGenericResetDefaultNamesAndGroups, es1dc1DataRectifiersNumberOfOverTempRectifier=es1dc1DataRectifiersNumberOfOverTempRectifier, siteV1DescDescriptionStreet=siteV1DescDescriptionStreet, es1DCSystems=es1DCSystems, siteV1CfgTimeSNTPTimeServer=siteV1CfgTimeSNTPTimeServer, es1dc1DescDescriptionDescription=es1dc1DescDescriptionDescription, siteV1ConfigValue=siteV1ConfigValue, siteV1AlarmEntryStatus=siteV1AlarmEntryStatus, siteV1CfgEmailEnableEmailFeature=siteV1CfgEmailEnableEmailFeature, es1AlarmTable=es1AlarmTable, siteV1DataNetworkCurrentIPMask=siteV1DataNetworkCurrentIPMask, es1dc1DataBatBatInputPower=es1dc1DataBatBatInputPower, es1dc1CfgBatBatTestRequMinutesWithoutMainsFail=es1dc1CfgBatBatTestRequMinutesWithoutMainsFail, es1dc1GlobalAlarmSeverityType=es1dc1GlobalAlarmSeverityType, siteV1CtrlScriptingControlLuaScript=siteV1CtrlScriptingControlLuaScript, es1dc1ComplianceGroups=es1dc1ComplianceGroups, es1dc1CfgBatBatTestMinimalDischargeCurrent=es1dc1CfgBatBatTestMinimalDischargeCurrent, siteV1EventTable=siteV1EventTable, es1ConfigName=es1ConfigName, siteV1CfgDataRecordsAutoArchivePeriodDataRecord=siteV1CfgDataRecordsAutoArchivePeriodDataRecord, es1EventIndex=es1EventIndex, es1dc1CfgLVDBatLVDNodeId=es1dc1CfgLVDBatLVDNodeId, siteV1CfgNetworkSubnetMaskIfStatic=siteV1CfgNetworkSubnetMaskIfStatic, siteV1DataInventoryCANBusNodeIDs=siteV1DataInventoryCANBusNodeIDs, es1DescriptionTable=es1DescriptionTable, siteV1CtrlTimeForceSNTPTimeRefresh=siteV1CtrlTimeForceSNTPTimeRefresh, es1dc1CfgRelsDryAlarm4AlternativeBooleanCond=es1dc1CfgRelsDryAlarm4AlternativeBooleanCond, siteV1ControlTable=siteV1ControlTable, es1GlobalGroup=es1GlobalGroup, es1dc1GlobalAlarmSeverityTypeInt=es1dc1GlobalAlarmSeverityTypeInt, es1dc1DataSystemDCMode=es1dc1DataSystemDCMode, siteV1DescDescriptionGroup4=siteV1DescDescriptionGroup4, es1dc1Alarm=es1dc1Alarm, siteV1ConfigNumber=siteV1ConfigNumber, siteV1CfgInventoryRS485ExtensionsConf=siteV1CfgInventoryRS485ExtensionsConf, es1dc1CfgGenericReadAccessUserNumbers=es1dc1CfgGenericReadAccessUserNumbers, es1dc1ConfigIndex=es1dc1ConfigIndex, es1dc1CfgDigInputsDigInput2Name=es1dc1CfgDigInputsDigInput2Name, es1dc1AlarmEntryStatus=es1dc1AlarmEntryStatus, siteV1AlarmIndex=siteV1AlarmIndex, siteV1DescriptionIndex=siteV1DescriptionIndex, es1ControlValue=es1ControlValue, es1dc1CfgDigInputsDigInput1NormallyClosed=es1dc1CfgDigInputsDigInput1NormallyClosed, es1Event=es1Event, siteV1DescDescriptionContactName=siteV1DescDescriptionContactName, es1dc1DataBatPreviousBatTestState=es1dc1DataBatPreviousBatTestState, siteV1DescDescriptionCountry=siteV1DescDescriptionCountry, siteV1CfgSNMPSNMPActivated=siteV1CfgSNMPSNMPActivated, es1dc1=es1dc1, siteV1DataName=siteV1DataName, es1dc1CfgGenericEventTableLengthByRectifier=es1dc1CfgGenericEventTableLengthByRectifier, es1RemotePowerFeedingSystems=es1RemotePowerFeedingSystems, es1dc1DataLVDLVDState=es1dc1DataLVDLVDState, es1dc1CfgBatBatTestDuration=es1dc1CfgBatBatTestDuration, siteV1CtrlGenericResetDefaultNamesAndGroupsRecursive=siteV1CtrlGenericResetDefaultNamesAndGroupsRecursive, es1AlarmActive=es1AlarmActive, siteV1CfgXMLXMLEventPostingRefreshTime=siteV1CfgXMLXMLEventPostingRefreshTime, es1dc1DescDescriptionSerialNumber=es1dc1DescDescriptionSerialNumber, siteV1CfgPLCNumberOfPLCData=siteV1CfgPLCNumberOfPLCData, es1dc1CfgRelsDryAlarm2AlternativeBooleanCond=es1dc1CfgRelsDryAlarm2AlternativeBooleanCond, siteV1GlobalAlarmSeverityLevel=siteV1GlobalAlarmSeverityLevel, siteV1ControlValue=siteV1ControlValue, siteV1DataDataRecordsTotalFifoSizeOfDayRecords=siteV1DataDataRecordsTotalFifoSizeOfDayRecords, es1dc1DataRectifiersNumberOfRectifierMax=es1dc1DataRectifiersNumberOfRectifierMax, siteV1DataControllerCPUPercentageUsage=siteV1DataControllerCPUPercentageUsage, siteV1Notifications=siteV1Notifications, es1GlobalStatus=es1GlobalStatus, es1ConfigValue=es1ConfigValue, es1DataNumber=es1DataNumber, es1dc1DataBatBatCurrentIntegration=es1dc1DataBatBatCurrentIntegration, siteV1DescDescriptionSiteName=siteV1DescDescriptionSiteName, es1EventDateTime=es1EventDateTime, es1dc1DataBatCalculatedAutonomy=es1dc1DataBatCalculatedAutonomy, siteV1DataTimeDateAndTimeUTC=siteV1DataTimeDateAndTimeUTC, es1dc1CfgDigInputsDigInput4NormallyClosed=es1dc1CfgDigInputsDigInput4NormallyClosed, siteV1CtrlTimeSetLocalTime=siteV1CtrlTimeSetLocalTime, es1dc1DescDescriptionReference=es1dc1DescDescriptionReference, siteV1DataList=siteV1DataList, siteV1CtrlNetworkApplyNetworkConf=siteV1CtrlNetworkApplyNetworkConf, siteV1DataEntry=siteV1DataEntry, siteV1CfgRadiusAuthenticationRadiusServer=siteV1CfgRadiusAuthenticationRadiusServer, es1=es1, es1dc1CfgDigInputsDigInput6Name=es1dc1CfgDigInputsDigInput6Name, es1dc1DescriptionList=es1dc1DescriptionList, es1Description=es1Description, siteV1DataDataRecordsTotalFifoSizeOfMinuteRecords=siteV1DataDataRecordsTotalFifoSizeOfMinuteRecords, es1dc1CtrlGenericAddEvent=es1dc1CtrlGenericAddEvent, es1dc1Description=es1dc1Description, siteV1EventSeverityType=siteV1EventSeverityType, es1dc1CfgDCBusDCBusVoltageLowHysteresis=es1dc1CfgDCBusDCBusVoltageLowHysteresis, es1NotificationPrefix=es1NotificationPrefix, es1dc1ControlEntry=es1dc1ControlEntry, es1dc1DescriptionTable=es1dc1DescriptionTable, siteV1CtrlDataRecordsDeleteAllDataRecords=siteV1CtrlDataRecordsDeleteAllDataRecords, siteV1ControlName=siteV1ControlName, es1dc1FullCompliance=es1dc1FullCompliance, es1GlobalAlarmSeverityLevel=es1GlobalAlarmSeverityLevel, siteV1DataNumber=siteV1DataNumber, es1dc1ControlTable=es1dc1ControlTable, es1dc1AlarmStartTime=es1dc1AlarmStartTime, siteV1GlobalAlarmSeverityType=siteV1GlobalAlarmSeverityType, es1dc1AlarmStopTime=es1dc1AlarmStopTime, es1dc1DataLoadLoadCurrent=es1dc1DataLoadLoadCurrent, es1AlarmIndex=es1AlarmIndex, siteV1CtrlInventoryRemoveAbsentEquipments=siteV1CtrlInventoryRemoveAbsentEquipments, siteV1CfgXMLXMLEventsSecPostPassword=siteV1CfgXMLXMLEventsSecPostPassword, siteV1EventSeverityLevel=siteV1EventSeverityLevel, siteV1CfgRadiusAuthenticationRadiusSecret=siteV1CfgRadiusAuthenticationRadiusSecret, es1dc1DataEntry=es1dc1DataEntry, es1ControlName=es1ControlName, es1dc1CtrlSystemStartBatTest=es1dc1CtrlSystemStartBatTest, siteV1DescControllerUserCompasVersion=siteV1DescControllerUserCompasVersion, siteV1DataEntryStatus=siteV1DataEntryStatus, siteV1ConfigList=siteV1ConfigList, siteV1CtrlGenericAddEvent=siteV1CtrlGenericAddEvent, es1GlobalAlarmSeverityTypeInt=es1GlobalAlarmSeverityTypeInt, siteV1CtrlControllerReloadTranslations=siteV1CtrlControllerReloadTranslations, siteV1CfgUsersUser5LoginPassword=siteV1CfgUsersUser5LoginPassword, es1EventEntryStatus=es1EventEntryStatus, es1dc1DescDescriptionHardwareReference=es1dc1DescDescriptionHardwareReference, es1dc1CfgDCBusDCBusVoltageExtraLowHysteresis=es1dc1CfgDCBusDCBusVoltageExtraLowHysteresis, es1dc1CfgBatBatStringCapacity=es1dc1CfgBatBatStringCapacity, es1dc1CfgDigInputsDigInput4Name=es1dc1CfgDigInputsDigInput4Name, es1dc1CtrlGenericClearAllEvents=es1dc1CtrlGenericClearAllEvents, es1NotificationOfEvent=es1NotificationOfEvent, siteV1DataDataRecordsTotalFifoSizeOfHourRecords=siteV1DataDataRecordsTotalFifoSizeOfHourRecords, es1dc1DescDescriptionSoftwareReference=es1dc1DescDescriptionSoftwareReference, es1ConfigEntryStatus=es1ConfigEntryStatus, es1dc1DataBatBatChargeCapacity=es1dc1DataBatBatChargeCapacity, es1dc1CfgDigInputsDigInput1Name=es1dc1CfgDigInputsDigInput1Name, es1dc1DataRelsRel3State=es1dc1DataRelsRel3State, siteV1=siteV1, siteV1CfgTimeTimeZoneName=siteV1CfgTimeTimeZoneName, siteV1CtrlControllerEmulateRecords=siteV1CtrlControllerEmulateRecords, es1GlobalAlarmSeverityType=es1GlobalAlarmSeverityType, siteV1CtrlDataRecordsSaveDataRecords=siteV1CtrlDataRecordsSaveDataRecords, es1dc1DataRectifiersRectifiersOutPower=es1dc1DataRectifiersRectifiersOutPower, es1EventId=es1EventId, siteV1CtrlFilesFlashBinary=siteV1CtrlFilesFlashBinary, es1dc1CfgSensorsAmbientTempHysteresis=es1dc1CfgSensorsAmbientTempHysteresis, es1dc1CtrlSystemStartBoostMode=es1dc1CtrlSystemStartBoostMode, siteV1CfgNetworkMaxTransmissionUnit=siteV1CfgNetworkMaxTransmissionUnit, es1dc1CfgSensorsAmbientTempHigh=es1dc1CfgSensorsAmbientTempHigh, siteV1CfgXMLXMLEventPostingTimeout=siteV1CfgXMLXMLEventPostingTimeout, es1EventSeverityLevel=es1EventSeverityLevel, es1dc1DataRectifiersRectifiersOutCurrentMax=es1dc1DataRectifiersRectifiersOutCurrentMax)
mibBuilder.exportSymbols("SITE-MONITORING-MIB", es1dc1CfgGenericWriteAccessUserNumbers=es1dc1CfgGenericWriteAccessUserNumbers, es1dc1AlarmSummary=es1dc1AlarmSummary, es1dc1CfgLVDLVDDisconnectVoltage=es1dc1CfgLVDLVDDisconnectVoltage, es1dc1DataLoadLoadPower=es1dc1DataLoadLoadPower, siteV1ControlEntry=siteV1ControlEntry, es1dc1CtrlSystemForceBatTest=es1dc1CtrlSystemForceBatTest, es1dc1Compliance=es1dc1Compliance, es1dc1DescDescriptionDistributionModuleHardwareReference=es1dc1DescDescriptionDistributionModuleHardwareReference, siteV1AlarmName=siteV1AlarmName, siteV1CfgSNMPSNMPV3EngineID=siteV1CfgSNMPSNMPV3EngineID, es1DescriptionEntryStatus=es1DescriptionEntryStatus, siteV1CfgWebServerDefaultPage=siteV1CfgWebServerDefaultPage, es1dc1AlarmEntry=es1dc1AlarmEntry, es1dc1DataBatBatTestDuration=es1dc1DataBatBatTestDuration, es1dc1CtrlGenericAddMajorEvent=es1dc1CtrlGenericAddMajorEvent, es1dc1Notifications=es1dc1Notifications, siteV1CtrlControllerSaveConfAndRebootController=siteV1CtrlControllerSaveConfAndRebootController, siteV1CfgSNMPSNMPV3PrivacyAlgorithm=siteV1CfgSNMPSNMPV3PrivacyAlgorithm, es1ControlIndex=es1ControlIndex, siteV1DataControllerMonitoringMemoryUsed=siteV1DataControllerMonitoringMemoryUsed, siteV1CfgSNMPSNMPV3TrapAuthPassword=siteV1CfgSNMPSNMPV3TrapAuthPassword, siteV1Description=siteV1Description, es1dc1CtrlRelsInvertRel2StateForXSeconds=es1dc1CtrlRelsInvertRel2StateForXSeconds, es1dc1CtrlSystemBackToFloat=es1dc1CtrlSystemBackToFloat, siteV1CfgSNMPSNMPV3TrapAuthAlgorithm=siteV1CfgSNMPSNMPV3TrapAuthAlgorithm, es1dc1CfgRectifiersForcedRemoteOffRectifers=es1dc1CfgRectifiersForcedRemoteOffRectifers, siteV1CfgGenericGenerateEventOnAlarmAcknowledge=siteV1CfgGenericGenerateEventOnAlarmAcknowledge, siteV1DescDescriptionAltitude=siteV1DescDescriptionAltitude, siteV1Control=siteV1Control, es1dc1DataBatBatTemp=es1dc1DataBatBatTemp, siteV1DataTimeDateAndTimeLocal=siteV1DataTimeDateAndTimeLocal, es1dc1EventSeverityType=es1dc1EventSeverityType, es1dc1AlarmTable=es1dc1AlarmTable, PYSNMP_MODULE_ID=siteMonitoringMIB, siteV1DescControllerFactoryCompasVersion=siteV1DescControllerFactoryCompasVersion, siteV1CfgEmailMailSender=siteV1CfgEmailMailSender, siteV1FullCompliance=siteV1FullCompliance, atsaEuDevices=atsaEuDevices, es1dc1ConfigNumber=es1dc1ConfigNumber, siteV1CtrlControllerReloadLicense=siteV1CtrlControllerReloadLicense, siteV1EventEntryStatus=siteV1EventEntryStatus, es1dc1AlarmSeverityType=es1dc1AlarmSeverityType, siteV1GlobalGroup=siteV1GlobalGroup, es1dc1AlarmNumber=es1dc1AlarmNumber, es1dc1CfgDigInputsDigInput6NormallyClosed=es1dc1CfgDigInputsDigInput6NormallyClosed, es1AlarmName=es1AlarmName, es1dc1EventDateTime=es1dc1EventDateTime, es1dc1CfgDigInputsDigInput5Name=es1dc1CfgDigInputsDigInput5Name, siteV1CfgGenericEventTableLength=siteV1CfgGenericEventTableLength, es1dc1CtrlSaveSaveConfInMCU=es1dc1CtrlSaveSaveConfInMCU, siteV1ConfigEntryStatus=siteV1ConfigEntryStatus, es1dc1DataBatPreviousBatTestDischargedCapacityRatio=es1dc1DataBatPreviousBatTestDischargedCapacityRatio, es1dc1ControlIndex=es1dc1ControlIndex, es1dc1CfgBatBoostActivationLowVoltage=es1dc1CfgBatBoostActivationLowVoltage, es1dc1AlarmActive=es1dc1AlarmActive, siteV1DescDescriptionRegion=siteV1DescDescriptionRegion, siteV1CfgXMLXMLEventsPrimPostLogin=siteV1CfgXMLXMLEventsPrimPostLogin, siteV1DescDescriptionCity=siteV1DescDescriptionCity, es1dc1DataSmartEnergySmartEnergySavings=es1dc1DataSmartEnergySmartEnergySavings, atsaCorporate=atsaCorporate, es1ControlEntry=es1ControlEntry, es1dc1EventTable=es1dc1EventTable, siteV1DataControllerFTPServerStatus=siteV1DataControllerFTPServerStatus, siteV1CfgControllerAutomaticReboot=siteV1CfgControllerAutomaticReboot, es1dc1DataRectifiersRectifiersOutCurrent=es1dc1DataRectifiersRectifiersOutCurrent, es1NotificationGroup=es1NotificationGroup, siteV1CfgCloudLinkCloudPort=siteV1CfgCloudLinkCloudPort, siteV1CtrlTimeSetUTCTime=siteV1CtrlTimeSetUTCTime, es1DescriptionEntry=es1DescriptionEntry, siteV1DescDescriptionGroup1=siteV1DescDescriptionGroup1, es1dc1AlarmIndex=es1dc1AlarmIndex, siteV1CfgSNMPSNMPSETMinSecurityLevel=siteV1CfgSNMPSNMPSETMinSecurityLevel, siteV1CfgUsersUser4LoginPassword=siteV1CfgUsersUser4LoginPassword, es1InverterSystems=es1InverterSystems, siteV1NotificationGroup=siteV1NotificationGroup, es1dc1DataBatLastBatTestFinalVoltage=es1dc1DataBatLastBatTestFinalVoltage, es1dc1CfgRelsDryAlarm1AlternativeBooleanCond=es1dc1CfgRelsDryAlarm1AlternativeBooleanCond, es1dc1DataSmartEnergySystemLossWithoutOptimisation=es1dc1DataSmartEnergySystemLossWithoutOptimisation, es1ConfigNumber=es1ConfigNumber, es1CtrlGenericClearMyEvents=es1CtrlGenericClearMyEvents, siteV1CtrlControllerRebootController=siteV1CtrlControllerRebootController, es1dc1CfgPLCNumberOfPLCData=es1dc1CfgPLCNumberOfPLCData, es1dc1DataBatPreviousBatTestFinalVoltage=es1dc1DataBatPreviousBatTestFinalVoltage, es1dc1DataRectifiersNumberOfACFailRectifier=es1dc1DataRectifiersNumberOfACFailRectifier, es1Compliance=es1Compliance, siteV1CfgXMLXMLEventPostingToSecOnlyIfPrimFail=siteV1CfgXMLXMLEventPostingToSecOnlyIfPrimFail, es1dc1CtrlDigInputsSetDigInput4CounterValue=es1dc1CtrlDigInputsSetDigInput4CounterValue, es1dc1DataRectifiersNumberOfDCFailRectifier=es1dc1DataRectifiersNumberOfDCFailRectifier, siteV1Data=siteV1Data, es1EventSeverityType=es1EventSeverityType, siteV1CfgNetworkDNSIfStatic=siteV1CfgNetworkDNSIfStatic, siteV1DescDescriptionGroup3=siteV1DescDescriptionGroup3, es1dc1DescDescriptionDistributionModuleManufacturingDate=es1dc1DescDescriptionDistributionModuleManufacturingDate, siteV1CfgXMLXMLEventsSecPostLogin=siteV1CfgXMLXMLEventsSecPostLogin, es1dc1DataACBusMinutesSinceLastACFailBegin=es1dc1DataACBusMinutesSinceLastACFailBegin, siteV1CtrlControllerCleanandSaveXMLUserConf=siteV1CtrlControllerCleanandSaveXMLUserConf, siteV1DataControllerLicensedOptions=siteV1DataControllerLicensedOptions, siteV1CtrlGenericClearMyEvents=siteV1CtrlGenericClearMyEvents, es1dc1CfgBatBatTestEndVoltage=es1dc1CfgBatBatTestEndVoltage, es1dc1DescDescriptionDistributionModuleSerialNumber=es1dc1DescDescriptionDistributionModuleSerialNumber, siteV1CtrlDataRecordsExportDataRecordsinCSV=siteV1CtrlDataRecordsExportDataRecordsinCSV, atsa=atsa, es1DescDescriptionDescription=es1DescDescriptionDescription, es1dc1DescriptionEntry=es1dc1DescriptionEntry, es1AlarmNumber=es1AlarmNumber, es1dc1DataBatBatTestState=es1dc1DataBatBatTestState, siteV1DescControllerUserFTPServerVersion=siteV1DescControllerUserFTPServerVersion, siteV1DescDescriptionGroup5=siteV1DescDescriptionGroup5, es1Control=es1Control, es1dc1DataDCBusBusVoltage=es1dc1DataDCBusBusVoltage, es1Data=es1Data, siteV1CfgXMLXMLTablesToPostOnXMLEvent=siteV1CfgXMLXMLTablesToPostOnXMLEvent, siteV1ControlNumber=siteV1ControlNumber, siteV1DescriptionValue=siteV1DescriptionValue, es1dc1CfgBatMinimalCurrentForDischargingAlarm=es1dc1CfgBatMinimalCurrentForDischargingAlarm, siteV1DescDescriptionReference=siteV1DescDescriptionReference, siteV1DataControllerFreeFlashMemorySpace=siteV1DataControllerFreeFlashMemorySpace, siteV1CtrlControllerManageFTPServer=siteV1CtrlControllerManageFTPServer, siteV1CfgSNMPSNMPV3AuthAlgorithm=siteV1CfgSNMPSNMPV3AuthAlgorithm, siteV1CfgEmailSmtpUserLoginPassword=siteV1CfgEmailSmtpUserLoginPassword, es1dc1ControlEntryStatus=es1dc1ControlEntryStatus, es1dc1Data=es1dc1Data, es1dc1CfgRectifiersRectifierModel=es1dc1CfgRectifiersRectifierModel, es1dc1CfgBatMaxDepthOfDischargeforAutonomyEstimation=es1dc1CfgBatMaxDepthOfDischargeforAutonomyEstimation, siteV1EventIndex=siteV1EventIndex, es1dc1NotificationGroup=es1dc1NotificationGroup, siteV1GlobalAlarmSeverityTypeInt=siteV1GlobalAlarmSeverityTypeInt, siteV1ControlList=siteV1ControlList, es1dc1CfgDigInputsDigInput3Name=es1dc1CfgDigInputsDigInput3Name, es1dc1ControlValue=es1dc1ControlValue, siteV1DescDescriptionPostalCode=siteV1DescDescriptionPostalCode, es1dc1AlarmName=es1dc1AlarmName, es1dc1DescDescriptionDistributionModuleSoftwareReference=es1dc1DescDescriptionDistributionModuleSoftwareReference, es1dc1DataSystemPreviousDCMode=es1dc1DataSystemPreviousDCMode, es1dc1CfgRectifiersMinimalNumberOfPresentRectifiers=es1dc1CfgRectifiersMinimalNumberOfPresentRectifiers, siteV1DescriptionTable=siteV1DescriptionTable, es1dc1EventName=es1dc1EventName, siteV1CfgSNMPSNMPV3PrivacyPassword=siteV1CfgSNMPSNMPV3PrivacyPassword, es1dc1CfgDCBusDCBusFloatVoltageat25degC=es1dc1CfgDCBusDCBusFloatVoltageat25degC, siteV1CtrlGenericAddMajorEvent=siteV1CtrlGenericAddMajorEvent, siteV1ConfigTable=siteV1ConfigTable, siteV1CtrlInventoryUpgradeNodeFirmware=siteV1CtrlInventoryUpgradeNodeFirmware, es1dc1DataSensorsAmbientTemp=es1dc1DataSensorsAmbientTemp, extensions=extensions, es1dc1CfgDCBusDCBusVoltageHighHysteresis=es1dc1CfgDCBusDCBusVoltageHighHysteresis, es1CtrlGenericAddEvent=es1CtrlGenericAddEvent, es1dc1DataSmartEnergyRectifierModelUsedForCalculation=es1dc1DataSmartEnergyRectifierModelUsedForCalculation, siteV1CtrlControllerSaveXMLUserConf=siteV1CtrlControllerSaveXMLUserConf, siteV1CtrlInventoryResetCANBusNode=siteV1CtrlInventoryResetCANBusNode, siteV1CfgXMLXMLEventsPrimPostPassword=siteV1CfgXMLXMLEventsPrimPostPassword, es1dc1CfgDigInputsDigInput2NormallyClosed=es1dc1CfgDigInputsDigInput2NormallyClosed, es1dc1GlobalAlarmSeverityLevel=es1dc1GlobalAlarmSeverityLevel, siteV1AlarmStopTime=siteV1AlarmStopTime, siteV1NotificationPrefix=siteV1NotificationPrefix, es1dc1DescDescriptionProductName=es1dc1DescDescriptionProductName, es1dc1DescriptionNumber=es1dc1DescriptionNumber, es1dc1DescriptionEntryStatus=es1dc1DescriptionEntryStatus, es1dc1CfgDCBusDCBusVoltageLow=es1dc1CfgDCBusDCBusVoltageLow, atsaEu=atsaEu, siteV1CfgEmailSmtpServer=siteV1CfgEmailSmtpServer, es1dc1CtrlGenericResetDefaultNamesAndGroups=es1dc1CtrlGenericResetDefaultNamesAndGroups, es1dc1DataList=es1dc1DataList, es1dc1CfgBatBoostAutomatic=es1dc1CfgBatBoostAutomatic, siteV1DataValue=siteV1DataValue, es1dc1NotificationOfEvent=es1dc1NotificationOfEvent, siteV1DescDescriptionInfo=siteV1DescDescriptionInfo, siteV1ConfigEntry=siteV1ConfigEntry, energySystems=energySystems, es1dc1DataRectifiersRectifiersOutPowerMax=es1dc1DataRectifiersRectifiersOutPowerMax, siteV1DescDescriptionLatitude=siteV1DescDescriptionLatitude, siteV1AlarmEntry=siteV1AlarmEntry, es1dc1CfgPLCNumberOfPLCAlarm=es1dc1CfgPLCNumberOfPLCAlarm, es1dc1DataRelsRel1State=es1dc1DataRelsRel1State, es1dc1EventIndex=es1dc1EventIndex, es1dc1CfgRelsDryAlarm3AlternativeBooleanCond=es1dc1CfgRelsDryAlarm3AlternativeBooleanCond, siteV1CfgGenericWriteAccessUserNumbers=siteV1CfgGenericWriteAccessUserNumbers, siteV1CfgInventorySystemNodesDefinition=siteV1CfgInventorySystemNodesDefinition, siteV1CfgGenericReadAccessUserNumbers=siteV1CfgGenericReadAccessUserNumbers, siteV1AlarmTable=siteV1AlarmTable, siteV1CfgXMLXMLEventsPrimPostURL=siteV1CfgXMLXMLEventsPrimPostURL, es1dc1CtrlRelsInvertRel1StateForXSeconds=es1dc1CtrlRelsInvertRel1StateForXSeconds, es1dc1EventEntryStatus=es1dc1EventEntryStatus, es1dc1DataBatMinutesSinceLastTestBat=es1dc1DataBatMinutesSinceLastTestBat, siteV1DataCloudLinkCloudLinkState=siteV1DataCloudLinkCloudLinkState, es1dc1CfgBatBatTestSchedulerCronRule=es1dc1CfgBatBatTestSchedulerCronRule, siteV1NotificationOfEvent=siteV1NotificationOfEvent, siteV1ControlEntryStatus=siteV1ControlEntryStatus, es1CfgEnergyMeterNumberOfGenericPulseEnergyCounter=es1CfgEnergyMeterNumberOfGenericPulseEnergyCounter, siteV1DescriptionNumber=siteV1DescriptionNumber, es1dc1CfgDCBusDCBusVoltageHigh=es1dc1CfgDCBusDCBusVoltageHigh, es1dc1DataRelsRel2State=es1dc1DataRelsRel2State, siteV1Compliance=siteV1Compliance, es1Config=es1Config, es1DescriptionList=es1DescriptionList, es1dc1CfgLVDLVDDisconnectDelay=es1dc1CfgLVDLVDDisconnectDelay, es1dc1DataSmartEnergySystemLossWithOptimisation=es1dc1DataSmartEnergySystemLossWithOptimisation, es1dc1AlarmSeverityLevel=es1dc1AlarmSeverityLevel, siteV1CfgUsersUser2LoginPassword=siteV1CfgUsersUser2LoginPassword, es1dc1EventNumber=es1dc1EventNumber, siteV1CfgWebServerWebAuthenticationMethod=siteV1CfgWebServerWebAuthenticationMethod, siteV1CfgCloudLinkCloudServer=siteV1CfgCloudLinkCloudServer, es1dc1CfgDigInputsDigInput3NormallyClosed=es1dc1CfgDigInputsDigInput3NormallyClosed, siteV1CfgNetworkDefaultGatewayIfStatic=siteV1CfgNetworkDefaultGatewayIfStatic, siteV1CtrlControllerAdvancedFunctionGenericCommandExecution=siteV1CtrlControllerAdvancedFunctionGenericCommandExecution, siteV1CfgGenericGenerateEventOnControlExecution=siteV1CfgGenericGenerateEventOnControlExecution, es1dc1DataSmartEnergyEfficiencyOptimizedNumberOfRectifier=es1dc1DataSmartEnergyEfficiencyOptimizedNumberOfRectifier, es1dc1CfgBatBatTestDischargeRatio=es1dc1CfgBatBatTestDischargeRatio, es1dc1CfgBatBoostTerminationVoltage=es1dc1CfgBatBoostTerminationVoltage, es1dc1Event=es1dc1Event, es1dc1DataRectifiersNumberOfActiveRectifier=es1dc1DataRectifiersNumberOfActiveRectifier, es1dc1CfgSmartEnergySmartEnergyBooleanCond=es1dc1CfgSmartEnergySmartEnergyBooleanCond, es1dc1ConfigList=es1dc1ConfigList, es1dc1DataACBusMinutesSinceLastACFailEnd=es1dc1DataACBusMinutesSinceLastACFailEnd, es1dc1DataEntryStatus=es1dc1DataEntryStatus, siteV1AlarmSeverityLevel=siteV1AlarmSeverityLevel, es1dc1DataBatPreviousBatTestDischargedCapacity=es1dc1DataBatPreviousBatTestDischargedCapacity, siteV1AlarmStartTime=siteV1AlarmStartTime, siteV1DescControllerCPU=siteV1DescControllerCPU, es1CtrlGenericResetDefaultNamesAndGroups=es1CtrlGenericResetDefaultNamesAndGroups, es1dc1DataRectifiersNumberOfAbsentRectifier=es1dc1DataRectifiersNumberOfAbsentRectifier, es1dc1CtrlBatResetLastBatTestState=es1dc1CtrlBatResetLastBatTestState, es1dc1ControlNumber=es1dc1ControlNumber, es1AlarmSeverityLevel=es1AlarmSeverityLevel, siteV1CfgTimeSNTPTimeRefresh=siteV1CfgTimeSNTPTimeRefresh, es1dc1NotificationPrefix=es1dc1NotificationPrefix, es1dc1CfgBatBoostTerminationTime=es1dc1CfgBatBoostTerminationTime, es1dc1CfgBatMaxNegTempCompensation=es1dc1CfgBatMaxNegTempCompensation, siteV1CfgCloudLinkCloudEnabled=siteV1CfgCloudLinkCloudEnabled, siteV1AlarmSummary=siteV1AlarmSummary, es1dc1ConfigValue=es1dc1ConfigValue, siteV1CfgNetworkIPAddressIfStatic=siteV1CfgNetworkIPAddressIfStatic, es1dc1EventSeverityLevel=es1dc1EventSeverityLevel, es1dc1CtrlAdvancedSetMCUSpecificConfId=es1dc1CtrlAdvancedSetMCUSpecificConfId, es1dc1EventEntry=es1dc1EventEntry, es1dc1CfgDigInputsDigInput5NormallyClosed=es1dc1CfgDigInputsDigInput5NormallyClosed, siteV1CfgCloudLinkCloudCluster=siteV1CfgCloudLinkCloudCluster, siteV1ConfigName=siteV1ConfigName, siteV1CtrlInventoryStartNewInventory=siteV1CtrlInventoryStartNewInventory, siteV1CtrlInventoryCancelFirmwareUpgrade=siteV1CtrlInventoryCancelFirmwareUpgrade, siteV1DataNetworkCurrentIPAddress=siteV1DataNetworkCurrentIPAddress, es1dc1GlobalGroup=es1dc1GlobalGroup, siteV1ComplianceGroups=siteV1ComplianceGroups, siteV1CfgNetworkDHCPEnabled=siteV1CfgNetworkDHCPEnabled, es1dc1DataNumber=es1dc1DataNumber, es1dc1DataName=es1dc1DataName, siteV1EventEntry=siteV1EventEntry, siteV1CfgUsersUser3LoginPassword=siteV1CfgUsersUser3LoginPassword, siteV1EventNumber=siteV1EventNumber, siteV1DescControllerFactoryFTPServerVersion=siteV1DescControllerFactoryFTPServerVersion, es1dc1ConfigTable=es1dc1ConfigTable, siteV1DescControllerCard=siteV1DescControllerCard, siteV1DescDescriptionGroup2=siteV1DescDescriptionGroup2, es1dc1DataBatNextScheduledBatTest=es1dc1DataBatNextScheduledBatTest, siteV1DescriptionName=siteV1DescriptionName)
mibBuilder.exportSymbols("SITE-MONITORING-MIB", es1dc1CfgSensorsAmbientTempLow=es1dc1CfgSensorsAmbientTempLow, es1dc1DataBatLastBatTestDischargedCapacityRatio=es1dc1DataBatLastBatTestDischargedCapacityRatio, siteV1ControlIndex=siteV1ControlIndex, siteV1Config=siteV1Config, es1dc1CtrlBatCorrectBatCurrentOffset=es1dc1CtrlBatCorrectBatCurrentOffset, siteV1CtrlControllerRebootControllerWithoutSavingRecords=siteV1CtrlControllerRebootControllerWithoutSavingRecords, siteV1DataIndex=siteV1DataIndex, siteV1AlarmSeverityType=siteV1AlarmSeverityType, es1AlarmStopTime=es1AlarmStopTime, es1dc1EventId=es1dc1EventId, es1dc1Control=es1dc1Control, es1dc1CfgDCBusDCBusVoltageExtraLow=es1dc1CfgDCBusDCBusVoltageExtraLow, siteV1CfgScriptingEnabledscripts=siteV1CfgScriptingEnabledscripts, es1CtrlGenericAddMajorEvent=es1CtrlGenericAddMajorEvent, es1dc1CfgBatBatTestDischargeCurrent=es1dc1CfgBatBatTestDischargeCurrent, siteMonitoringMIB=siteMonitoringMIB, siteV1EventId=siteV1EventId, siteV1CfgRadiusAuthenticationRadiusPort=siteV1CfgRadiusAuthenticationRadiusPort, siteMonitoring=siteMonitoring, es1dc1DataRelsRel4State=es1dc1DataRelsRel4State, es1dc1CfgDCBusDCBusVoltageExtraHigh=es1dc1CfgDCBusDCBusVoltageExtraHigh, es1FullCompliance=es1FullCompliance, es1dc1CfgBatBatTempLow=es1dc1CfgBatBatTempLow, siteV1CfgWebServerWebServerSecurityEnabled=siteV1CfgWebServerWebServerSecurityEnabled, es1ControlTable=es1ControlTable, es1dc1DataSystemNiMHChargeMode=es1dc1DataSystemNiMHChargeMode, siteV1DescDescriptionLongitude=siteV1DescDescriptionLongitude, siteV1DataDataRecordsTotalFifoSizeOfSecondRecords=siteV1DataDataRecordsTotalFifoSizeOfSecondRecords, siteV1CfgSNMPSNMPTrapTargetsIP=siteV1CfgSNMPSNMPTrapTargetsIP, siteV1CfgUsersAdministratorLoginPassword=siteV1CfgUsersAdministratorLoginPassword, es1dc1CfgBatMaxPosTempCompensation=es1dc1CfgBatMaxPosTempCompensation, siteV1DataNetworkCurrentMACAddress=siteV1DataNetworkCurrentMACAddress, siteV1DescDescriptionDescription=siteV1DescDescriptionDescription, siteV1CfgWebServerHttpsWebServerPort=siteV1CfgWebServerHttpsWebServerPort, es1ControlNumber=es1ControlNumber, es1dc1CtrlLVDOpenTheLVD=es1dc1CtrlLVDOpenTheLVD, siteV1CfgSNMPMinimalEventSeverityForTraps=siteV1CfgSNMPMinimalEventSeverityForTraps, es1dc1CfgBatBoostTerminationCurrent=es1dc1CfgBatBoostTerminationCurrent, es1AlarmSummary=es1AlarmSummary, siteV1AlarmNumber=siteV1AlarmNumber, es1dc1CfgBatBatTestInterval=es1dc1CfgBatBatTestInterval, es1dc1CfgBatBatTestType=es1dc1CfgBatBatTestType, es1ConfigEntry=es1ConfigEntry, es1CtrlGenericClearAllEvents=es1CtrlGenericClearAllEvents, siteV1CtrlInventorySaveCANOpenLSSConf=siteV1CtrlInventorySaveCANOpenLSSConf)
