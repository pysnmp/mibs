#
# PySNMP MIB module APH323-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/oracle/APH323-MIB
# Produced by pysmi-1.1.12 at Mon Jun  3 14:06:13 2024
# On host fv-az914-826 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
acmepacketMgmt, = mibBuilder.importSymbols("ACMEPACKET-SMI", "acmepacketMgmt")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
InetAddressType, InetAddress, InetAddressPrefixLength, InetVersion, InetZoneIndex = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressPrefixLength", "InetVersion", "InetZoneIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, iso, ModuleIdentity, Integer32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, Counter32, Counter64, Gauge32, ObjectIdentity, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "ModuleIdentity", "Integer32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "Counter32", "Counter64", "Gauge32", "ObjectIdentity", "MibIdentifier", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
apH323Module = ModuleIdentity((1, 3, 6, 1, 4, 1, 9148, 3, 10))
apH323Module.setRevisions(('2012-07-16 00:00', '2014-06-26 00:00',))
if mibBuilder.loadTexts: apH323Module.setLastUpdated('201406260000Z')
if mibBuilder.loadTexts: apH323Module.setOrganization('Oracle Communications')
apH323MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 10, 1))
apH323NotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 10, 2))
apH323NotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 10, 3))
apH323Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 10, 4))
apH323Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 10, 3, 0))
apH323Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 10, 4, 1))
apH323NotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 10, 4, 2))
apH323StackTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 10, 1, 1), )
if mibBuilder.loadTexts: apH323StackTable.setStatus('current')
apH323StackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 10, 1, 1, 1), ).setIndexNames((1, "APH323-MIB", "apH323StackName"))
if mibBuilder.loadTexts: apH323StackEntry.setStatus('current')
apH323StackName = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 10, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apH323StackName.setStatus('current')
apH323StackCurrentCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 10, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apH323StackCurrentCalls.setStatus('current')
apH323StackMaxCalls = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 10, 2, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apH323StackMaxCalls.setStatus('current')
apH323StackMaxCallsThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 10, 2, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apH323StackMaxCallsThreshold.setStatus('current')
apH323StackMaxCallThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 10, 3, 0, 1)).setObjects(("APH323-MIB", "apH323StackName"), ("APH323-MIB", "apH323StackMaxCalls"), ("APH323-MIB", "apH323StackMaxCallsThreshold"), ("APH323-MIB", "apH323StackCurrentCalls"))
if mibBuilder.loadTexts: apH323StackMaxCallThresholdTrap.setStatus('current')
apH323StackMaxCallThresholdClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 10, 3, 0, 2)).setObjects(("APH323-MIB", "apH323StackName"), ("APH323-MIB", "apH323StackMaxCalls"), ("APH323-MIB", "apH323StackMaxCallsThreshold"), ("APH323-MIB", "apH323StackCurrentCalls"))
if mibBuilder.loadTexts: apH323StackMaxCallThresholdClearTrap.setStatus('current')
apH323StackObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 10, 4, 1, 1)).setObjects(("APH323-MIB", "apH323StackName"), ("APH323-MIB", "apH323StackCurrentCalls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apH323StackObjectsGroup = apH323StackObjectsGroup.setStatus('current')
apH323StackNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 10, 4, 2, 1)).setObjects(("APH323-MIB", "apH323StackMaxCallThresholdTrap"), ("APH323-MIB", "apH323StackMaxCallThresholdClearTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apH323StackNotificationsGroup = apH323StackNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("APH323-MIB", apH323StackMaxCallThresholdTrap=apH323StackMaxCallThresholdTrap, apH323Module=apH323Module, apH323StackObjectsGroup=apH323StackObjectsGroup, apH323MIBObjects=apH323MIBObjects, apH323StackMaxCalls=apH323StackMaxCalls, apH323Notifications=apH323Notifications, apH323StackMaxCallsThreshold=apH323StackMaxCallsThreshold, apH323StackNotificationsGroup=apH323StackNotificationsGroup, apH323NotificationGroups=apH323NotificationGroups, apH323Groups=apH323Groups, apH323StackName=apH323StackName, apH323StackCurrentCalls=apH323StackCurrentCalls, apH323NotificationPrefix=apH323NotificationPrefix, PYSNMP_MODULE_ID=apH323Module, apH323StackMaxCallThresholdClearTrap=apH323StackMaxCallThresholdClearTrap, apH323StackTable=apH323StackTable, apH323Conformance=apH323Conformance, apH323StackEntry=apH323StackEntry, apH323NotificationObjects=apH323NotificationObjects)
