#
# PySNMP MIB module APLICENSE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/oracle/APLICENSE-MIB
# Produced by pysmi-1.1.12 at Tue May 28 11:50:44 2024
# On host fv-az665-912 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
acmepacketMgmt, = mibBuilder.importSymbols("ACMEPACKET-SMI", "acmepacketMgmt")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Integer32, Unsigned32, MibIdentifier, iso, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks, ObjectIdentity, NotificationType, Bits, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "MibIdentifier", "iso", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks", "ObjectIdentity", "NotificationType", "Bits", "Counter32", "IpAddress")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
apLicenseModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9148, 3, 5))
apLicenseModule.setRevisions(('2012-07-16 00:00', '2014-06-26 00:00', '2017-11-24 00:00',))
if mibBuilder.loadTexts: apLicenseModule.setLastUpdated('201711240000Z')
if mibBuilder.loadTexts: apLicenseModule.setOrganization('Oracle Communications')
apLicenseMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1))
apLicenseTable = MibTable((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1), )
if mibBuilder.loadTexts: apLicenseTable.setStatus('current')
apLicenseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1), ).setIndexNames((0, "APLICENSE-MIB", "apLicenseIndex"))
if mibBuilder.loadTexts: apLicenseEntry.setStatus('current')
apLicenseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: apLicenseIndex.setStatus('current')
apLicenseKey = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseKey.setStatus('current')
apLicenseCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseCapacity.setStatus('current')
apLicenseInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseInstallDate.setStatus('current')
apLicenseBeginDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseBeginDate.setStatus('current')
apLicenseExpireDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseExpireDate.setStatus('current')
apLicenseSIPFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseSIPFeature.setStatus('current')
apLicenseMGCPFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseMGCPFeature.setStatus('current')
apLicenseH323Feature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseH323Feature.setStatus('current')
apLicenseIWFFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseIWFFeature.setStatus('current')
apLicenseQOSFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseQOSFeature.setStatus('current')
apLicenseACPFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseACPFeature.setStatus('current')
apLicenseLPFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseLPFeature.setStatus('current')
apLicenseSAGFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseSAGFeature.setStatus('current')
apLicenseACCTFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseACCTFeature.setStatus('current')
apLicenseHAFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseHAFeature.setStatus('current')
apLicensePACFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicensePACFeature.setStatus('current')
apLicenseIKEFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseIKEFeature.setStatus('current')
apLicenseIPsecTunCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseIPsecTunCap.setStatus('current')
apLicenseAuthFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseAuthFeature.setStatus('current')
apLicenseDatabaseRegFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseDatabaseRegFeature.setStatus('current')
apLicenseDatabaseRegCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseDatabaseRegCap.setStatus('current')
apLicenseSLBEndpointCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseSLBEndpointCap.setStatus('current')
apLicenseAMRLicensedCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseAMRLicensedCap.setStatus('current')
apLicenseAMRWBLicensedCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseAMRWBLicensedCap.setStatus('current')
apLicenseEVRCLicensedCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseEVRCLicensedCap.setStatus('current')
apLicenseEVRCBLicensedCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseEVRCBLicensedCap.setStatus('current')
apLicenseOPUSLicensedCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseOPUSLicensedCap.setStatus('current')
apLicenseSILKLicensedCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseSILKLicensedCap.setStatus('current')
apLicenseEVSLicensedCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9148, 3, 5, 1, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apLicenseEVSLicensedCap.setStatus('current')
apLicenseNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 2))
apLicenseExpirationWarningAcliIndex = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 5, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apLicenseExpirationWarningAcliIndex.setStatus('current')
apLicenseExpirationWarningSnmpIndex = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 5, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apLicenseExpirationWarningSnmpIndex.setStatus('current')
apLicenseExpirationWarningKey = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 5, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apLicenseExpirationWarningKey.setStatus('current')
apLicenseExpirationWarningDays = MibScalar((1, 3, 6, 1, 4, 1, 9148, 3, 5, 2, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: apLicenseExpirationWarningDays.setStatus('current')
apLicenseNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 3))
apLicenseNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 3, 0))
apLicenseApproachingCapacityNotification = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 5, 3, 0, 1))
if mibBuilder.loadTexts: apLicenseApproachingCapacityNotification.setStatus('current')
apLicenseNotApproachingCapacityNotification = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 5, 3, 0, 2))
if mibBuilder.loadTexts: apLicenseNotApproachingCapacityNotification.setStatus('current')
apLicenseExpirationWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 9148, 3, 5, 3, 0, 3)).setObjects(("APLICENSE-MIB", "apLicenseExpirationWarningAcliIndex"), ("APLICENSE-MIB", "apLicenseExpirationWarningSnmpIndex"), ("APLICENSE-MIB", "apLicenseExpirationWarningKey"), ("APLICENSE-MIB", "apLicenseExpirationWarningDays"))
if mibBuilder.loadTexts: apLicenseExpirationWarningNotification.setStatus('current')
apLicenseConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4))
apLicenseCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 1))
apLicenseGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 2))
apLicenseNotificationsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 3))
apLicenseObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 2, 1)).setObjects(("APLICENSE-MIB", "apLicenseKey"), ("APLICENSE-MIB", "apLicenseCapacity"), ("APLICENSE-MIB", "apLicenseInstallDate"), ("APLICENSE-MIB", "apLicenseBeginDate"), ("APLICENSE-MIB", "apLicenseExpireDate"), ("APLICENSE-MIB", "apLicenseSIPFeature"), ("APLICENSE-MIB", "apLicenseMGCPFeature"), ("APLICENSE-MIB", "apLicenseH323Feature"), ("APLICENSE-MIB", "apLicenseIWFFeature"), ("APLICENSE-MIB", "apLicenseQOSFeature"), ("APLICENSE-MIB", "apLicenseACPFeature"), ("APLICENSE-MIB", "apLicenseLPFeature"), ("APLICENSE-MIB", "apLicenseSAGFeature"), ("APLICENSE-MIB", "apLicenseACCTFeature"), ("APLICENSE-MIB", "apLicenseHAFeature"), ("APLICENSE-MIB", "apLicensePACFeature"), ("APLICENSE-MIB", "apLicenseIKEFeature"), ("APLICENSE-MIB", "apLicenseIPsecTunCap"), ("APLICENSE-MIB", "apLicenseSLBEndpointCap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apLicenseObjectsGroup = apLicenseObjectsGroup.setStatus('current')
apLicenseDatabaseRegGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 2, 2)).setObjects(("APLICENSE-MIB", "apLicenseAuthFeature"), ("APLICENSE-MIB", "apLicenseDatabaseRegFeature"), ("APLICENSE-MIB", "apLicenseDatabaseRegCap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apLicenseDatabaseRegGroup = apLicenseDatabaseRegGroup.setStatus('current')
apLicenseCodecLicensedCapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 2, 3)).setObjects(("APLICENSE-MIB", "apLicenseAMRLicensedCap"), ("APLICENSE-MIB", "apLicenseAMRWBLicensedCap"), ("APLICENSE-MIB", "apLicenseEVRCLicensedCap"), ("APLICENSE-MIB", "apLicenseEVRCBLicensedCap"), ("APLICENSE-MIB", "apLicenseOPUSLicensedCap"), ("APLICENSE-MIB", "apLicenseSILKLicensedCap"), ("APLICENSE-MIB", "apLicenseEVSLicensedCap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apLicenseCodecLicensedCapGroup = apLicenseCodecLicensedCapGroup.setStatus('current')
apLicenseNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 3, 1)).setObjects(("APLICENSE-MIB", "apLicenseApproachingCapacityNotification"), ("APLICENSE-MIB", "apLicenseNotApproachingCapacityNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apLicenseNotificationsGroup = apLicenseNotificationsGroup.setStatus('current')
apLicenseExpirationNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9148, 3, 5, 4, 3, 2)).setObjects(("APLICENSE-MIB", "apLicenseExpirationWarningNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    apLicenseExpirationNotificationsGroup = apLicenseExpirationNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("APLICENSE-MIB", apLicenseTable=apLicenseTable, apLicenseSIPFeature=apLicenseSIPFeature, apLicenseACPFeature=apLicenseACPFeature, apLicenseACCTFeature=apLicenseACCTFeature, apLicenseOPUSLicensedCap=apLicenseOPUSLicensedCap, apLicenseAMRLicensedCap=apLicenseAMRLicensedCap, apLicenseEVSLicensedCap=apLicenseEVSLicensedCap, apLicenseEVRCLicensedCap=apLicenseEVRCLicensedCap, apLicenseExpirationWarningSnmpIndex=apLicenseExpirationWarningSnmpIndex, apLicenseNotifications=apLicenseNotifications, apLicenseDatabaseRegCap=apLicenseDatabaseRegCap, apLicenseNotificationPrefix=apLicenseNotificationPrefix, apLicenseGroups=apLicenseGroups, apLicenseNotificationsGroups=apLicenseNotificationsGroups, apLicenseNotificationsGroup=apLicenseNotificationsGroup, apLicenseEntry=apLicenseEntry, apLicenseSILKLicensedCap=apLicenseSILKLicensedCap, apLicenseHAFeature=apLicenseHAFeature, apLicenseCapacity=apLicenseCapacity, apLicenseSAGFeature=apLicenseSAGFeature, apLicenseH323Feature=apLicenseH323Feature, apLicenseKey=apLicenseKey, apLicenseExpirationWarningDays=apLicenseExpirationWarningDays, apLicenseInstallDate=apLicenseInstallDate, apLicenseExpirationWarningKey=apLicenseExpirationWarningKey, apLicenseNotificationObjects=apLicenseNotificationObjects, apLicenseIndex=apLicenseIndex, apLicenseCodecLicensedCapGroup=apLicenseCodecLicensedCapGroup, apLicenseExpirationNotificationsGroup=apLicenseExpirationNotificationsGroup, apLicenseQOSFeature=apLicenseQOSFeature, apLicenseModule=apLicenseModule, apLicenseDatabaseRegFeature=apLicenseDatabaseRegFeature, apLicenseAMRWBLicensedCap=apLicenseAMRWBLicensedCap, apLicenseApproachingCapacityNotification=apLicenseApproachingCapacityNotification, apLicenseLPFeature=apLicenseLPFeature, apLicenseBeginDate=apLicenseBeginDate, apLicenseEVRCBLicensedCap=apLicenseEVRCBLicensedCap, apLicenseExpireDate=apLicenseExpireDate, apLicenseExpirationWarningNotification=apLicenseExpirationWarningNotification, apLicenseNotApproachingCapacityNotification=apLicenseNotApproachingCapacityNotification, apLicenseMIBObjects=apLicenseMIBObjects, apLicensePACFeature=apLicensePACFeature, apLicenseSLBEndpointCap=apLicenseSLBEndpointCap, apLicenseObjectsGroup=apLicenseObjectsGroup, apLicenseConformance=apLicenseConformance, apLicenseAuthFeature=apLicenseAuthFeature, apLicenseIPsecTunCap=apLicenseIPsecTunCap, apLicenseCompliances=apLicenseCompliances, apLicenseExpirationWarningAcliIndex=apLicenseExpirationWarningAcliIndex, apLicenseMGCPFeature=apLicenseMGCPFeature, apLicenseIWFFeature=apLicenseIWFFeature, apLicenseDatabaseRegGroup=apLicenseDatabaseRegGroup, apLicenseIKEFeature=apLicenseIKEFeature, PYSNMP_MODULE_ID=apLicenseModule)
