#
# PySNMP MIB module CT-PIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CT-PIC-MIB
# Produced by pysmi-1.1.12 at Tue Sep 17 09:59:56 2024
# On host fv-az1427-100 platform Linux version 6.5.0-1025-azure by user runner
# Using Python version 3.10.14 (main, Jul 16 2024, 19:03:10) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ctPIC, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctPIC")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Integer32, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, MibIdentifier, ModuleIdentity, Counter32, NotificationType, IpAddress, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Counter32", "NotificationType", "IpAddress", "TimeTicks", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
pic = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1))
ctPicNumberEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicNumberEntries.setStatus('mandatory')
ctPicTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2), )
if mibBuilder.loadTexts: ctPicTable.setStatus('mandatory')
ctPicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1), ).setIndexNames((0, "CT-PIC-MIB", "ctPicSlot"), (0, "CT-PIC-MIB", "ctPicIndex"))
if mibBuilder.loadTexts: ctPicEntry.setStatus('mandatory')
ctPicSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicSlot.setStatus('mandatory')
ctPicIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicIndex.setStatus('mandatory')
ctPicLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicLocation.setStatus('mandatory')
ctPicStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("present", 2), ("notPresent", 3), ("checkSum", 4), ("error", 5), ("limited", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicStatus.setStatus('mandatory')
ctPicVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicVersion.setStatus('mandatory')
ctPicModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicModuleType.setStatus('mandatory')
ctPicMfgPN = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMfgPN.setStatus('mandatory')
ctPicMfgSN = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMfgSN.setStatus('mandatory')
ctPicMfgPartNumb = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(7, 7)).setFixedLength(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMfgPartNumb.setStatus('mandatory')
ctPicMfgSerialNumb = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMfgSerialNumb.setStatus('mandatory')
ctPicMfgReworkLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMfgReworkLocation.setStatus('mandatory')
ctPicMfgMfgLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMfgMfgLocation.setStatus('mandatory')
ctPicMfgDateCode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMfgDateCode.setStatus('mandatory')
ctPicMfgRevisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMfgRevisionCode.setStatus('mandatory')
ctPicTLPN = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicTLPN.setStatus('mandatory')
ctPicTLSN = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicTLSN.setStatus('mandatory')
ctPicTLPartNumb = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(7, 7)).setFixedLength(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicTLPartNumb.setStatus('mandatory')
ctPicTLSerialNumb = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicTLSerialNumb.setStatus('mandatory')
ctPicTLReworkLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicTLReworkLocation.setStatus('mandatory')
ctPicTLMfgLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicTLMfgLocation.setStatus('mandatory')
ctPicTLDateCode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicTLDateCode.setStatus('mandatory')
ctPicTLRevisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicTLRevisionCode.setStatus('mandatory')
ctPicPcbRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicPcbRevision.setStatus('mandatory')
ctPicMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMacAddr.setStatus('mandatory')
ctPicNumbRsvdAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicNumbRsvdAddrs.setStatus('mandatory')
ctPicBoardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicBoardRevision.setStatus('mandatory')
ctPicModuleTypeString = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicModuleTypeString.setStatus('mandatory')
ctPicDCDCconverterType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicDCDCconverterType.setStatus('mandatory')
ctPicDCDCconvInputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicDCDCconvInputPower.setStatus('mandatory')
ctPicSMB1promVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicSMB1promVersion.setStatus('mandatory')
ctPicAtmMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctPicAtmMacAddr.setStatus('mandatory')
ctPicOEMVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("cabletron", 1), ("nEC", 2), ("dEC", 3), ("cPQ", 4), ("newbridge", 5), ("enTeraSys", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicOEMVendorId.setStatus('mandatory')
ctPicOEMVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicOEMVendorName.setStatus('mandatory')
ctPicMfg97SN = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMfg97SN.setStatus('mandatory')
ctPicMfg97DateCode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMfg97DateCode.setStatus('mandatory')
ctPicMfg97RevisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicMfg97RevisionCode.setStatus('mandatory')
ctPicTL97SN = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicTL97SN.setStatus('mandatory')
ctPicTL97DateCode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicTL97DateCode.setStatus('mandatory')
ctPicTL97RevisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicTL97RevisionCode.setStatus('mandatory')
ctPicOEMTLSN = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 2, 1, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicOEMTLSN.setStatus('mandatory')
ctPicECOTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 3), )
if mibBuilder.loadTexts: ctPicECOTable.setStatus('mandatory')
ctPicECOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 3, 1), ).setIndexNames((0, "CT-PIC-MIB", "ctPicECOSlot"), (0, "CT-PIC-MIB", "ctPicECOIndex"), (0, "CT-PIC-MIB", "ctPicECOID"))
if mibBuilder.loadTexts: ctPicECOEntry.setStatus('mandatory')
ctPicECOSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicECOSlot.setStatus('mandatory')
ctPicECOIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicECOIndex.setStatus('mandatory')
ctPicECOID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicECOID.setStatus('mandatory')
ctPicECONumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicECONumber.setStatus('mandatory')
ctPicDiagTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 5), )
if mibBuilder.loadTexts: ctPicDiagTable.setStatus('mandatory')
ctPicDiagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 5, 1), ).setIndexNames((0, "CT-PIC-MIB", "ctPicDiagSlot"), (0, "CT-PIC-MIB", "ctPicDiagIndex"), (0, "CT-PIC-MIB", "ctPicDiagID"))
if mibBuilder.loadTexts: ctPicDiagEntry.setStatus('mandatory')
ctPicDiagSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicDiagSlot.setStatus('mandatory')
ctPicDiagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicDiagIndex.setStatus('mandatory')
ctPicDiagID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicDiagID.setStatus('mandatory')
ctPicDiagResults = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicDiagResults.setStatus('mandatory')
ctPicControlTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 8), )
if mibBuilder.loadTexts: ctPicControlTable.setStatus('mandatory')
ctPicControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 8, 1), ).setIndexNames((0, "CT-PIC-MIB", "ctPicSlot"), (0, "CT-PIC-MIB", "ctPicIndex"))
if mibBuilder.loadTexts: ctPicControlEntry.setStatus('mandatory')
ctPicRefresh = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reFresh", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPicRefresh.setStatus('mandatory')
ctPicLocationID = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 4))
ctPicLocationModule = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 4, 1))
ctPicBrim = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 4, 2))
ctPicChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 4, 3))
ctPicDaughter = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 4, 4))
ctPicBackPlane = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 5, 9, 1, 4, 5))
mibBuilder.exportSymbols("CT-PIC-MIB", ctPicLocation=ctPicLocation, ctPicECONumber=ctPicECONumber, ctPicMfgPN=ctPicMfgPN, ctPicTL97SN=ctPicTL97SN, ctPicIndex=ctPicIndex, ctPicTL97RevisionCode=ctPicTL97RevisionCode, ctPicTable=ctPicTable, ctPicPcbRevision=ctPicPcbRevision, ctPicDaughter=ctPicDaughter, ctPicTLRevisionCode=ctPicTLRevisionCode, ctPicMfgSN=ctPicMfgSN, ctPicTLSerialNumb=ctPicTLSerialNumb, ctPicDiagEntry=ctPicDiagEntry, ctPicDiagID=ctPicDiagID, ctPicECOSlot=ctPicECOSlot, ctPicRefresh=ctPicRefresh, ctPicBoardRevision=ctPicBoardRevision, ctPicMfgRevisionCode=ctPicMfgRevisionCode, ctPicMfgMfgLocation=ctPicMfgMfgLocation, ctPicTLPartNumb=ctPicTLPartNumb, ctPicOEMTLSN=ctPicOEMTLSN, ctPicTLPN=ctPicTLPN, ctPicNumbRsvdAddrs=ctPicNumbRsvdAddrs, ctPicAtmMacAddr=ctPicAtmMacAddr, ctPicOEMVendorId=ctPicOEMVendorId, ctPicBrim=ctPicBrim, ctPicControlTable=ctPicControlTable, ctPicLocationModule=ctPicLocationModule, pic=pic, ctPicLocationID=ctPicLocationID, ctPicECOIndex=ctPicECOIndex, ctPicTL97DateCode=ctPicTL97DateCode, ctPicMfgDateCode=ctPicMfgDateCode, ctPicMfg97DateCode=ctPicMfg97DateCode, ctPicECOID=ctPicECOID, ctPicDiagResults=ctPicDiagResults, ctPicEntry=ctPicEntry, ctPicModuleType=ctPicModuleType, ctPicMfg97RevisionCode=ctPicMfg97RevisionCode, ctPicBackPlane=ctPicBackPlane, ctPicTLMfgLocation=ctPicTLMfgLocation, ctPicModuleTypeString=ctPicModuleTypeString, ctPicChassis=ctPicChassis, ctPicVersion=ctPicVersion, ctPicTLReworkLocation=ctPicTLReworkLocation, ctPicOEMVendorName=ctPicOEMVendorName, ctPicECOTable=ctPicECOTable, ctPicMfgSerialNumb=ctPicMfgSerialNumb, ctPicStatus=ctPicStatus, ctPicECOEntry=ctPicECOEntry, ctPicMfgPartNumb=ctPicMfgPartNumb, ctPicMacAddr=ctPicMacAddr, ctPicDiagSlot=ctPicDiagSlot, ctPicDiagIndex=ctPicDiagIndex, ctPicControlEntry=ctPicControlEntry, ctPicSMB1promVersion=ctPicSMB1promVersion, ctPicMfg97SN=ctPicMfg97SN, ctPicTLDateCode=ctPicTLDateCode, ctPicMfgReworkLocation=ctPicMfgReworkLocation, ctPicSlot=ctPicSlot, ctPicNumberEntries=ctPicNumberEntries, ctPicDiagTable=ctPicDiagTable, ctPicTLSN=ctPicTLSN, ctPicDCDCconvInputPower=ctPicDCDCconvInputPower, ctPicDCDCconverterType=ctPicDCDCconverterType)
