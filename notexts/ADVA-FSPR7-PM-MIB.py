#
# PySNMP MIB module ADVA-FSPR7-PM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adva/ADVA-FSPR7-PM-MIB
# Produced by pysmi-1.1.12 at Tue May 28 12:08:18 2024
# On host fv-az1567-4 platform Linux version 6.5.0-1021-azure by user runner
# Using Python version 3.10.14 (main, May  8 2024, 15:05:35) [GCC 11.4.0]
#
entityEqptClassName, entityFacilityShelfNo, entityFacilityExtNo, entityDcnShelfNo, entityEqptShelfNo, entityFacilityPortNo, entityEqptSlotNo, entityTerminPointIndexNo1, entityFacilityClassName, entityDcnExtNo, entityShelfConnPortNo, entityEqptPortNo, entityOpticalMuxExtNo, entityShelfConnClassName, entityFacilitySlotNo, entityTerminPointClassName, entityOpticalMuxPortNo, entityOpticalMuxShelfNo, entityShelfConnExtNo, entityOpticalMuxSlotNo, entityTerminPointIndexNo3, entityTerminPointIndexNo2, entityShelfConnShelfNo, entityDcnClassName, entityTerminPointIndexNo4, entityShelfConnSlotNo, entityDcnSlotNo, entityEqptExtNo, entityDcnPortNo, entityOpticalMuxClassName = mibBuilder.importSymbols("ADVA-FSPR7-MIB", "entityEqptClassName", "entityFacilityShelfNo", "entityFacilityExtNo", "entityDcnShelfNo", "entityEqptShelfNo", "entityFacilityPortNo", "entityEqptSlotNo", "entityTerminPointIndexNo1", "entityFacilityClassName", "entityDcnExtNo", "entityShelfConnPortNo", "entityEqptPortNo", "entityOpticalMuxExtNo", "entityShelfConnClassName", "entityFacilitySlotNo", "entityTerminPointClassName", "entityOpticalMuxPortNo", "entityOpticalMuxShelfNo", "entityShelfConnExtNo", "entityOpticalMuxSlotNo", "entityTerminPointIndexNo3", "entityTerminPointIndexNo2", "entityShelfConnShelfNo", "entityDcnClassName", "entityTerminPointIndexNo4", "entityShelfConnSlotNo", "entityDcnSlotNo", "entityEqptExtNo", "entityDcnPortNo", "entityOpticalMuxClassName")
fspR7, Counter64String = mibBuilder.importSymbols("ADVA-MIB", "fspR7", "Counter64String")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, ObjectIdentity, MibIdentifier, Counter32, NotificationType, Integer32, Bits, Counter64, ModuleIdentity, TimeTicks, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "MibIdentifier", "Counter32", "NotificationType", "Integer32", "Bits", "Counter64", "ModuleIdentity", "TimeTicks", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
DateAndTime, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "DisplayString", "TextualConvention")
advaFspR7Pm = ModuleIdentity((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11))
advaFspR7Pm.setRevisions(('2018-12-14 00:00', '2018-10-30 00:00', '2018-08-09 00:00', '2018-05-28 00:00', '2018-04-17 00:00', '2017-09-11 00:00', '2017-03-23 00:00', '2016-09-01 00:00', '2016-04-01 00:00', '2015-12-10 00:00', '2015-09-03 00:00', '2015-03-20 00:00', '2014-10-15 00:00', '2014-09-29 00:00', '2013-12-04 00:00', '2013-08-20 00:00',))
if mibBuilder.loadTexts: advaFspR7Pm.setLastUpdated('201812140000Z')
if mibBuilder.loadTexts: advaFspR7Pm.setOrganization('ADVA Optical Networking')
pmEqpt = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1))
pmEqptData = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 1))
pmEqptDataThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 1, 1))
pmqpteDataRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 1, 2))
pmEqptPhysical = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2))
pmEqptPhysValue = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1))
pmEqptPhysThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2))
pmEqptPhysRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3))
pmDcn = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2))
pmDcnData = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1))
pmDcnDataThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 1))
pmDcnDataRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2))
pmDcnPhysical = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2))
pmDcnPhysValue = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1))
pmDcnPhysThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 2))
pmDcnPhysRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3))
pmFacility = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7))
pmFacilityData = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1))
pmFacilityDataThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1))
pmFacilityDataRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2))
pmFacilityDataValue = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 3))
pmFacilityPhysical = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2))
pmFacilityPhysValue = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1))
pmFacilityPhysThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2))
pmFacilityPhysRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3))
pmTerminPoint = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10))
pmTerminPointData = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 1))
pmTerminPointDataThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 1, 1))
pmTerminPointDataRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 1, 2))
pmTerminPointPhysical = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 2))
pmTerminPointPhysValue = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 2, 1))
pmTerminPointPhysThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 2, 2))
pmTerminPointPhysRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 2, 3))
pmOptMux = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17))
pmOptMuxData = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1))
pmOptMuxDataThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 1))
pmOptMuxDataRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2))
pmOptMuxPhysical = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2))
pmOptMuxPhysValue = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1))
pmOptMuxPhysThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2))
pmOptMuxPhysRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3))
pmShelfConnection = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18))
pmShelfConnectionData = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1))
pmShelfConnectionDataRecord = MibIdentifier((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2))
eqptPhysInstValueTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1), )
if mibBuilder.loadTexts: eqptPhysInstValueTable.setStatus('current')
eqptPhysInstValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"), (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"), (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"), (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"), (0, "ADVA-FSPR7-MIB", "entityEqptClassName"))
if mibBuilder.loadTexts: eqptPhysInstValueEntry.setStatus('current')
eqptPhysInstValueWattUp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 1), Unsigned32()).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValueWattUp.setStatus('current')
eqptPhysInstValueWattOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 2), Unsigned32()).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValueWattOut.setStatus('current')
eqptPhysInstValueSubTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 3), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValueSubTemp.setStatus('current')
eqptPhysInstValueAmpere = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 4), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValueAmpere.setStatus('current')
eqptPhysInstValueTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 5), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValueTemp.setStatus('current')
eqptPhysInstValuePsuAmpere = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 6), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValuePsuAmpere.setStatus('current')
eqptPhysInstValuePsuVoltInp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 7), Unsigned32()).setUnits('0.001 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValuePsuVoltInp.setStatus('current')
eqptPhysInstValueTempExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 8), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValueTempExt.setStatus('current')
eqptPhysInstValueMaxOutProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 9), Unsigned32()).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValueMaxOutProt.setStatus('current')
eqptPhysInstValuePwrUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 10), Unsigned32()).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValuePwrUse.setStatus('current')
eqptPhysInstValueMaxOutThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 11), Unsigned32()).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValueMaxOutThres.setStatus('current')
eqptPhysInstValueLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 12), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValueLaserTemp.setStatus('current')
eqptPhysInstValuePwrConsumption = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 13), Unsigned32()).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValuePwrConsumption.setStatus('current')
eqptPhysInstValueFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 14), Unsigned32()).setUnits('rpm').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValueFanSpeed.setStatus('current')
eqptPhysInstValueOutputPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 1, 1, 15), Unsigned32()).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysInstValueOutputPwr.setStatus('current')
endOfEqptPhysInstValueTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfEqptPhysInstValueTable.setStatus('current')
endOfPmEqptPhysValue = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 1, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmEqptPhysValue.setStatus('current')
eqptPhysThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 1), )
if mibBuilder.loadTexts: eqptPhysThresholdTable.setStatus('current')
eqptPhysThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"), (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"), (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"), (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"), (0, "ADVA-FSPR7-MIB", "entityEqptClassName"))
if mibBuilder.loadTexts: eqptPhysThresholdEntry.setStatus('current')
eqptPhysThresholdTempHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 1, 1, 1), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysThresholdTempHigh.setStatus('current')
eqptPhysThresholdTempLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 1, 1, 2), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysThresholdTempLow.setStatus('current')
eqptPhysThresholdAmpHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 1, 1, 3), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysThresholdAmpHigh.setStatus('current')
eqptPhysThresholdSubTempHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 1, 1, 4), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysThresholdSubTempHigh.setStatus('current')
eqptPhysThresholdLaserTempHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 1, 1, 5), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysThresholdLaserTempHighThres.setStatus('current')
eqptPhysThresholdLaserTempLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 1, 1, 6), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysThresholdLaserTempLowThres.setStatus('current')
eqptPhysThresholdPwrConsumptionHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 1, 1, 7), Unsigned32()).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysThresholdPwrConsumptionHigh.setStatus('current')
eqptPhysThresholdOutputPwrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 1, 1, 8), Unsigned32()).setUnits('W').setMaxAccess("readonly")
if mibBuilder.loadTexts: eqptPhysThresholdOutputPwrHigh.setStatus('current')
endOfEqptPhysThresholdTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfEqptPhysThresholdTable.setStatus('current')
endOfPmEqptPhysThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 2, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmEqptPhysThreshold.setStatus('current')
ampEqptHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 1), )
if mibBuilder.loadTexts: ampEqptHistorical15minTable.setStatus('current')
ampEqptHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"), (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"), (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"), (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"), (0, "ADVA-FSPR7-MIB", "entityEqptClassName"), (0, "ADVA-FSPR7-PM-MIB", "ampEqptHistorical15minNumber"))
if mibBuilder.loadTexts: ampEqptHistorical15minEntry.setStatus('current')
ampEqptHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: ampEqptHistorical15minNumber.setStatus('current')
ampEqptHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 1, 1, 2), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical15minLow.setStatus('current')
ampEqptHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 1, 1, 3), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical15minMean.setStatus('current')
ampEqptHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 1, 1, 4), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical15minHigh.setStatus('current')
ampEqptHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical15minValidFlag.setStatus('current')
ampEqptHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical15minTimeStamp.setStatus('current')
endOfAmpEqptHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAmpEqptHistorical15minTable.setStatus('current')
ampEqptHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 3), )
if mibBuilder.loadTexts: ampEqptHistorical1dayTable.setStatus('current')
ampEqptHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 3, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"), (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"), (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"), (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"), (0, "ADVA-FSPR7-MIB", "entityEqptClassName"), (0, "ADVA-FSPR7-PM-MIB", "ampEqptHistorical1dayNumber"))
if mibBuilder.loadTexts: ampEqptHistorical1dayEntry.setStatus('current')
ampEqptHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: ampEqptHistorical1dayNumber.setStatus('current')
ampEqptHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 3, 1, 2), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical1dayLow.setStatus('current')
ampEqptHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 3, 1, 3), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical1dayMean.setStatus('current')
ampEqptHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 3, 1, 4), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical1dayHigh.setStatus('current')
ampEqptHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical1dayValidFlag.setStatus('current')
ampEqptHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 3, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical1dayTimeStamp.setStatus('current')
endOfAmpEqptHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAmpEqptHistorical1dayTable.setStatus('current')
ampEqptHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 5), )
if mibBuilder.loadTexts: ampEqptHistorical1weekTable.setStatus('current')
ampEqptHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 5, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"), (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"), (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"), (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"), (0, "ADVA-FSPR7-MIB", "entityEqptClassName"), (0, "ADVA-FSPR7-PM-MIB", "ampEqptHistorical1weekNumber"))
if mibBuilder.loadTexts: ampEqptHistorical1weekEntry.setStatus('current')
ampEqptHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: ampEqptHistorical1weekNumber.setStatus('current')
ampEqptHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 5, 1, 2), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical1weekLow.setStatus('current')
ampEqptHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 5, 1, 3), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical1weekMean.setStatus('current')
ampEqptHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 5, 1, 4), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical1weekHigh.setStatus('current')
ampEqptHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 5, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical1weekValidFlag.setStatus('current')
ampEqptHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 5, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampEqptHistorical1weekTimeStamp.setStatus('current')
endOfAmpEqptHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAmpEqptHistorical1weekTable.setStatus('current')
ampInEqptHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 7), )
if mibBuilder.loadTexts: ampInEqptHistorical15minTable.setStatus('current')
ampInEqptHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 7, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"), (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"), (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"), (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"), (0, "ADVA-FSPR7-MIB", "entityEqptClassName"), (0, "ADVA-FSPR7-PM-MIB", "ampInEqptHistorical15minNumber"))
if mibBuilder.loadTexts: ampInEqptHistorical15minEntry.setStatus('current')
ampInEqptHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: ampInEqptHistorical15minNumber.setStatus('current')
ampInEqptHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 7, 1, 2), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical15minLow.setStatus('current')
ampInEqptHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 7, 1, 3), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical15minMean.setStatus('current')
ampInEqptHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 7, 1, 4), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical15minHigh.setStatus('current')
ampInEqptHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 7, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical15minValidFlag.setStatus('current')
ampInEqptHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 7, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical15minTimeStamp.setStatus('current')
endOfAmpInEqptHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAmpInEqptHistorical15minTable.setStatus('current')
ampInEqptHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 9), )
if mibBuilder.loadTexts: ampInEqptHistorical1dayTable.setStatus('current')
ampInEqptHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 9, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"), (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"), (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"), (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"), (0, "ADVA-FSPR7-MIB", "entityEqptClassName"), (0, "ADVA-FSPR7-PM-MIB", "ampInEqptHistorical1dayNumber"))
if mibBuilder.loadTexts: ampInEqptHistorical1dayEntry.setStatus('current')
ampInEqptHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: ampInEqptHistorical1dayNumber.setStatus('current')
ampInEqptHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 9, 1, 2), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical1dayLow.setStatus('current')
ampInEqptHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 9, 1, 3), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical1dayMean.setStatus('current')
ampInEqptHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 9, 1, 4), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical1dayHigh.setStatus('current')
ampInEqptHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 9, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical1dayValidFlag.setStatus('current')
ampInEqptHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 9, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical1dayTimeStamp.setStatus('current')
endOfAmpInEqptHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAmpInEqptHistorical1dayTable.setStatus('current')
ampInEqptHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 11), )
if mibBuilder.loadTexts: ampInEqptHistorical1weekTable.setStatus('current')
ampInEqptHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 11, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"), (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"), (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"), (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"), (0, "ADVA-FSPR7-MIB", "entityEqptClassName"), (0, "ADVA-FSPR7-PM-MIB", "ampInEqptHistorical1weekNumber"))
if mibBuilder.loadTexts: ampInEqptHistorical1weekEntry.setStatus('current')
ampInEqptHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: ampInEqptHistorical1weekNumber.setStatus('current')
ampInEqptHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 11, 1, 2), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical1weekLow.setStatus('current')
ampInEqptHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 11, 1, 3), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical1weekMean.setStatus('current')
ampInEqptHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 11, 1, 4), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical1weekHigh.setStatus('current')
ampInEqptHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 11, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical1weekValidFlag.setStatus('current')
ampInEqptHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 11, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ampInEqptHistorical1weekTimeStamp.setStatus('current')
endOfAmpInEqptHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAmpInEqptHistorical1weekTable.setStatus('current')
voltInpEqptHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 13), )
if mibBuilder.loadTexts: voltInpEqptHistorical15minTable.setStatus('current')
voltInpEqptHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 13, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"), (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"), (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"), (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"), (0, "ADVA-FSPR7-MIB", "entityEqptClassName"), (0, "ADVA-FSPR7-PM-MIB", "voltInpEqptHistorical15minNumber"))
if mibBuilder.loadTexts: voltInpEqptHistorical15minEntry.setStatus('current')
voltInpEqptHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: voltInpEqptHistorical15minNumber.setStatus('current')
voltInpEqptHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 13, 1, 2), Unsigned32()).setUnits('0.001 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical15minLow.setStatus('current')
voltInpEqptHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 13, 1, 3), Unsigned32()).setUnits('0.001 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical15minMean.setStatus('current')
voltInpEqptHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 13, 1, 4), Unsigned32()).setUnits('0.001 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical15minHigh.setStatus('current')
voltInpEqptHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 13, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical15minValidFlag.setStatus('current')
voltInpEqptHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 13, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical15minTimeStamp.setStatus('current')
endOfVoltInpEqptHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfVoltInpEqptHistorical15minTable.setStatus('current')
voltInpEqptHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 15), )
if mibBuilder.loadTexts: voltInpEqptHistorical1dayTable.setStatus('current')
voltInpEqptHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 15, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"), (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"), (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"), (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"), (0, "ADVA-FSPR7-MIB", "entityEqptClassName"), (0, "ADVA-FSPR7-PM-MIB", "voltInpEqptHistorical1dayNumber"))
if mibBuilder.loadTexts: voltInpEqptHistorical1dayEntry.setStatus('current')
voltInpEqptHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: voltInpEqptHistorical1dayNumber.setStatus('current')
voltInpEqptHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 15, 1, 2), Unsigned32()).setUnits('0.001 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical1dayLow.setStatus('current')
voltInpEqptHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 15, 1, 3), Unsigned32()).setUnits('0.001 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical1dayMean.setStatus('current')
voltInpEqptHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 15, 1, 4), Unsigned32()).setUnits('0.001 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical1dayHigh.setStatus('current')
voltInpEqptHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 15, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical1dayValidFlag.setStatus('current')
voltInpEqptHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 15, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical1dayTimeStamp.setStatus('current')
endOfVoltInpEqptHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfVoltInpEqptHistorical1dayTable.setStatus('current')
voltInpEqptHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 17), )
if mibBuilder.loadTexts: voltInpEqptHistorical1weekTable.setStatus('current')
voltInpEqptHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 17, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityEqptShelfNo"), (0, "ADVA-FSPR7-MIB", "entityEqptSlotNo"), (0, "ADVA-FSPR7-MIB", "entityEqptPortNo"), (0, "ADVA-FSPR7-MIB", "entityEqptExtNo"), (0, "ADVA-FSPR7-MIB", "entityEqptClassName"), (0, "ADVA-FSPR7-PM-MIB", "voltInpEqptHistorical1weekNumber"))
if mibBuilder.loadTexts: voltInpEqptHistorical1weekEntry.setStatus('current')
voltInpEqptHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: voltInpEqptHistorical1weekNumber.setStatus('current')
voltInpEqptHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 17, 1, 2), Unsigned32()).setUnits('0.001 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical1weekLow.setStatus('current')
voltInpEqptHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 17, 1, 3), Unsigned32()).setUnits('0.001 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical1weekMean.setStatus('current')
voltInpEqptHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 17, 1, 4), Unsigned32()).setUnits('0.001 V').setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical1weekHigh.setStatus('current')
voltInpEqptHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 17, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical1weekValidFlag.setStatus('current')
voltInpEqptHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 17, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltInpEqptHistorical1weekTimeStamp.setStatus('current')
endOfVoltInpEqptHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfVoltInpEqptHistorical1weekTable.setStatus('current')
endOfPmEqptPhysRecord = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 1, 2, 3, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmEqptPhysRecord.setStatus('current')
frRcv2DcnCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 1), )
if mibBuilder.loadTexts: frRcv2DcnCurrent15minTable.setStatus('current')
frRcv2DcnCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: frRcv2DcnCurrent15minEntry.setStatus('current')
frRcv2DcnCurrent15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 1, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnCurrent15minGoodFrames.setStatus('current')
frRcv2DcnCurrent15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 1, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnCurrent15minPauseFrames.setStatus('current')
frRcv2DcnCurrent15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 1, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnCurrent15minCrcFrames.setStatus('current')
frRcv2DcnCurrent15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 1, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnCurrent15minBytes.setStatus('current')
frRcv2DcnCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnCurrent15minElapsedTime.setStatus('current')
endOfFrRcv2DcnCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2DcnCurrent15minTable.setStatus('current')
frRcv2DcnCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 3), )
if mibBuilder.loadTexts: frRcv2DcnCurrent1dayTable.setStatus('current')
frRcv2DcnCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 3, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: frRcv2DcnCurrent1dayEntry.setStatus('current')
frRcv2DcnCurrent1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 3, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnCurrent1dayGoodFrames.setStatus('current')
frRcv2DcnCurrent1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 3, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnCurrent1dayPauseFrames.setStatus('current')
frRcv2DcnCurrent1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 3, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnCurrent1dayCrcFrames.setStatus('current')
frRcv2DcnCurrent1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 3, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnCurrent1dayBytes.setStatus('current')
frRcv2DcnCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnCurrent1dayElapsedTime.setStatus('current')
endOfFrRcv2DcnCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2DcnCurrent1dayTable.setStatus('current')
frRcv2DcnHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 5), )
if mibBuilder.loadTexts: frRcv2DcnHistorical15minTable.setStatus('current')
frRcv2DcnHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 5, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv2DcnHistorical15minNumber"))
if mibBuilder.loadTexts: frRcv2DcnHistorical15minEntry.setStatus('current')
frRcv2DcnHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: frRcv2DcnHistorical15minNumber.setStatus('current')
frRcv2DcnHistorical15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 5, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical15minGoodFrames.setStatus('current')
frRcv2DcnHistorical15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 5, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical15minPauseFrames.setStatus('current')
frRcv2DcnHistorical15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 5, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical15minCrcFrames.setStatus('current')
frRcv2DcnHistorical15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 5, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical15minBytes.setStatus('current')
frRcv2DcnHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical15minValidFlag.setStatus('current')
frRcv2DcnHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 5, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical15minTimeStamp.setStatus('current')
endOfFrRcv2DcnHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2DcnHistorical15minTable.setStatus('current')
frRcv2DcnHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 7), )
if mibBuilder.loadTexts: frRcv2DcnHistorical1dayTable.setStatus('current')
frRcv2DcnHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 7, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv2DcnHistorical1dayNumber"))
if mibBuilder.loadTexts: frRcv2DcnHistorical1dayEntry.setStatus('current')
frRcv2DcnHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: frRcv2DcnHistorical1dayNumber.setStatus('current')
frRcv2DcnHistorical1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 7, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical1dayGoodFrames.setStatus('current')
frRcv2DcnHistorical1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 7, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical1dayPauseFrames.setStatus('current')
frRcv2DcnHistorical1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 7, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical1dayCrcFrames.setStatus('current')
frRcv2DcnHistorical1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 7, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical1dayBytes.setStatus('current')
frRcv2DcnHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 7, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical1dayValidFlag.setStatus('current')
frRcv2DcnHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 7, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2DcnHistorical1dayTimeStamp.setStatus('current')
endOfFrRcv2DcnHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2DcnHistorical1dayTable.setStatus('current')
macRxDcnCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 9), )
if mibBuilder.loadTexts: macRxDcnCurrent15minTable.setStatus('current')
macRxDcnCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 9, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: macRxDcnCurrent15minEntry.setStatus('current')
macRxDcnCurrent15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 9, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnCurrent15minGoodFrames.setStatus('current')
macRxDcnCurrent15minOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 9, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnCurrent15minOctRcv.setStatus('current')
macRxDcnCurrent15minBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 9, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnCurrent15minBroadcastFramesRcv.setStatus('current')
macRxDcnCurrent15minMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 9, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnCurrent15minMulticastFramesRcv.setStatus('current')
macRxDcnCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnCurrent15minElapsedTime.setStatus('current')
endOfMacRxDcnCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacRxDcnCurrent15minTable.setStatus('current')
macRxDcnCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 11), )
if mibBuilder.loadTexts: macRxDcnCurrent1dayTable.setStatus('current')
macRxDcnCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 11, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: macRxDcnCurrent1dayEntry.setStatus('current')
macRxDcnCurrent1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 11, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnCurrent1dayGoodFrames.setStatus('current')
macRxDcnCurrent1dayOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 11, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnCurrent1dayOctRcv.setStatus('current')
macRxDcnCurrent1dayBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 11, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnCurrent1dayBroadcastFramesRcv.setStatus('current')
macRxDcnCurrent1dayMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 11, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnCurrent1dayMulticastFramesRcv.setStatus('current')
macRxDcnCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnCurrent1dayElapsedTime.setStatus('current')
endOfMacRxDcnCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacRxDcnCurrent1dayTable.setStatus('current')
macRxDcnHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 13), )
if mibBuilder.loadTexts: macRxDcnHistorical15minTable.setStatus('current')
macRxDcnHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 13, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macRxDcnHistorical15minNumber"))
if mibBuilder.loadTexts: macRxDcnHistorical15minEntry.setStatus('current')
macRxDcnHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: macRxDcnHistorical15minNumber.setStatus('current')
macRxDcnHistorical15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 13, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical15minGoodFrames.setStatus('current')
macRxDcnHistorical15minOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 13, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical15minOctRcv.setStatus('current')
macRxDcnHistorical15minBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 13, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical15minBroadcastFramesRcv.setStatus('current')
macRxDcnHistorical15minMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 13, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical15minMulticastFramesRcv.setStatus('current')
macRxDcnHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 13, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical15minValidFlag.setStatus('current')
macRxDcnHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 13, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical15minTimeStamp.setStatus('current')
endOfMacRxDcnHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacRxDcnHistorical15minTable.setStatus('current')
macRxDcnHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 15), )
if mibBuilder.loadTexts: macRxDcnHistorical1dayTable.setStatus('current')
macRxDcnHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 15, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macRxDcnHistorical1dayNumber"))
if mibBuilder.loadTexts: macRxDcnHistorical1dayEntry.setStatus('current')
macRxDcnHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: macRxDcnHistorical1dayNumber.setStatus('current')
macRxDcnHistorical1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 15, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical1dayGoodFrames.setStatus('current')
macRxDcnHistorical1dayOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 15, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical1dayOctRcv.setStatus('current')
macRxDcnHistorical1dayBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 15, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical1dayBroadcastFramesRcv.setStatus('current')
macRxDcnHistorical1dayMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 15, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical1dayMulticastFramesRcv.setStatus('current')
macRxDcnHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 15, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical1dayValidFlag.setStatus('current')
macRxDcnHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 15, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxDcnHistorical1dayTimeStamp.setStatus('current')
endOfMacRxDcnHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacRxDcnHistorical1dayTable.setStatus('current')
macTxDcnCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 17), )
if mibBuilder.loadTexts: macTxDcnCurrent15minTable.setStatus('current')
macTxDcnCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 17, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: macTxDcnCurrent15minEntry.setStatus('current')
macTxDcnCurrent15minFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 17, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent15minFramesTrmt.setStatus('current')
macTxDcnCurrent15minBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 17, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent15minBytesTrmt.setStatus('current')
macTxDcnCurrent15minBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 17, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent15minBroadcastFramesTrmt.setStatus('current')
macTxDcnCurrent15minMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 17, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent15minMulticastFramesTrmt.setStatus('current')
macTxDcnCurrent15minDiscardedFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 17, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent15minDiscardedFramesTrmt.setStatus('current')
macTxDcnCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent15minElapsedTime.setStatus('current')
endOfMacTxDcnCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacTxDcnCurrent15minTable.setStatus('current')
macTxDcnCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 19), )
if mibBuilder.loadTexts: macTxDcnCurrent1dayTable.setStatus('current')
macTxDcnCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 19, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: macTxDcnCurrent1dayEntry.setStatus('current')
macTxDcnCurrent1dayFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 19, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent1dayFramesTrmt.setStatus('current')
macTxDcnCurrent1dayBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 19, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent1dayBytesTrmt.setStatus('current')
macTxDcnCurrent1dayBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 19, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent1dayBroadcastFramesTrmt.setStatus('current')
macTxDcnCurrent1dayMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 19, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent1dayMulticastFramesTrmt.setStatus('current')
macTxDcnCurrent1dayDiscardedFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 19, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent1dayDiscardedFramesTrmt.setStatus('current')
macTxDcnCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnCurrent1dayElapsedTime.setStatus('current')
endOfMacTxDcnCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacTxDcnCurrent1dayTable.setStatus('current')
macTxDcnHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 21), )
if mibBuilder.loadTexts: macTxDcnHistorical15minTable.setStatus('current')
macTxDcnHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 21, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macTxDcnHistorical15minNumber"))
if mibBuilder.loadTexts: macTxDcnHistorical15minEntry.setStatus('current')
macTxDcnHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: macTxDcnHistorical15minNumber.setStatus('current')
macTxDcnHistorical15minFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 21, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical15minFramesTrmt.setStatus('current')
macTxDcnHistorical15minBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 21, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical15minBytesTrmt.setStatus('current')
macTxDcnHistorical15minBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 21, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical15minBroadcastFramesTrmt.setStatus('current')
macTxDcnHistorical15minMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 21, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical15minMulticastFramesTrmt.setStatus('current')
macTxDcnHistorical15minDiscardedFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 21, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical15minDiscardedFramesTrmt.setStatus('current')
macTxDcnHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 21, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical15minValidFlag.setStatus('current')
macTxDcnHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 21, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical15minTimeStamp.setStatus('current')
endOfMacTxDcnHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacTxDcnHistorical15minTable.setStatus('current')
macTxDcnHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 23), )
if mibBuilder.loadTexts: macTxDcnHistorical1dayTable.setStatus('current')
macTxDcnHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 23, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macTxDcnHistorical1dayNumber"))
if mibBuilder.loadTexts: macTxDcnHistorical1dayEntry.setStatus('current')
macTxDcnHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: macTxDcnHistorical1dayNumber.setStatus('current')
macTxDcnHistorical1dayFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 23, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical1dayFramesTrmt.setStatus('current')
macTxDcnHistorical1dayBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 23, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical1dayBytesTrmt.setStatus('current')
macTxDcnHistorical1dayBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 23, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical1dayBroadcastFramesTrmt.setStatus('current')
macTxDcnHistorical1dayMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 23, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical1dayMulticastFramesTrmt.setStatus('current')
macTxDcnHistorical1dayDiscardedFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 23, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical1dayDiscardedFramesTrmt.setStatus('current')
macTxDcnHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 23, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical1dayValidFlag.setStatus('current')
macTxDcnHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 23, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxDcnHistorical1dayTimeStamp.setStatus('current')
endOfMacTxDcnHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacTxDcnHistorical1dayTable.setStatus('current')
macSzRxDcnCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 25), )
if mibBuilder.loadTexts: macSzRxDcnCurrent15minTable.setStatus('current')
macSzRxDcnCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 25, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: macSzRxDcnCurrent15minEntry.setStatus('current')
macSzRxDcnCurrent15minBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 25, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent15minBytesFrames64Rcv.setStatus('current')
macSzRxDcnCurrent15minBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 25, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent15minBytesFrames65Rcv.setStatus('current')
macSzRxDcnCurrent15minBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 25, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent15minBytesFrames128Rcv.setStatus('current')
macSzRxDcnCurrent15minBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 25, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent15minBytesFrames256Rcv.setStatus('current')
macSzRxDcnCurrent15minBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 25, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent15minBytesFrames512Rcv.setStatus('current')
macSzRxDcnCurrent15minBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 25, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent15minBytesFrames1024Rcv.setStatus('current')
macSzRxDcnCurrent15minBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 25, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent15minBytesFrames1519Rcv.setStatus('current')
macSzRxDcnCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 25, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent15minElapsedTime.setStatus('current')
endOfMacSzRxDcnCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacSzRxDcnCurrent15minTable.setStatus('current')
macSzRxDcnCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 27), )
if mibBuilder.loadTexts: macSzRxDcnCurrent1dayTable.setStatus('current')
macSzRxDcnCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 27, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: macSzRxDcnCurrent1dayEntry.setStatus('current')
macSzRxDcnCurrent1dayBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 27, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent1dayBytesFrames64Rcv.setStatus('current')
macSzRxDcnCurrent1dayBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 27, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent1dayBytesFrames65Rcv.setStatus('current')
macSzRxDcnCurrent1dayBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 27, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent1dayBytesFrames128Rcv.setStatus('current')
macSzRxDcnCurrent1dayBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 27, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent1dayBytesFrames256Rcv.setStatus('current')
macSzRxDcnCurrent1dayBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 27, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent1dayBytesFrames512Rcv.setStatus('current')
macSzRxDcnCurrent1dayBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 27, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent1dayBytesFrames1024Rcv.setStatus('current')
macSzRxDcnCurrent1dayBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 27, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent1dayBytesFrames1519Rcv.setStatus('current')
macSzRxDcnCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 27, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnCurrent1dayElapsedTime.setStatus('current')
endOfMacSzRxDcnCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacSzRxDcnCurrent1dayTable.setStatus('current')
macSzRxDcnHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29), )
if mibBuilder.loadTexts: macSzRxDcnHistorical15minTable.setStatus('current')
macSzRxDcnHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macSzRxDcnHistorical15minNumber"))
if mibBuilder.loadTexts: macSzRxDcnHistorical15minEntry.setStatus('current')
macSzRxDcnHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: macSzRxDcnHistorical15minNumber.setStatus('current')
macSzRxDcnHistorical15minBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical15minBytesFrames64Rcv.setStatus('current')
macSzRxDcnHistorical15minBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical15minBytesFrames65Rcv.setStatus('current')
macSzRxDcnHistorical15minBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical15minBytesFrames128Rcv.setStatus('current')
macSzRxDcnHistorical15minBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical15minBytesFrames256Rcv.setStatus('current')
macSzRxDcnHistorical15minBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical15minBytesFrames512Rcv.setStatus('current')
macSzRxDcnHistorical15minBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical15minBytesFrames1024Rcv.setStatus('current')
macSzRxDcnHistorical15minBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical15minBytesFrames1519Rcv.setStatus('current')
macSzRxDcnHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical15minValidFlag.setStatus('current')
macSzRxDcnHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 29, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical15minTimeStamp.setStatus('current')
endOfMacSzRxDcnHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacSzRxDcnHistorical15minTable.setStatus('current')
macSzRxDcnHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31), )
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayTable.setStatus('current')
macSzRxDcnHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macSzRxDcnHistorical1dayNumber"))
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayEntry.setStatus('current')
macSzRxDcnHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayNumber.setStatus('current')
macSzRxDcnHistorical1dayBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayBytesFrames64Rcv.setStatus('current')
macSzRxDcnHistorical1dayBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayBytesFrames65Rcv.setStatus('current')
macSzRxDcnHistorical1dayBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayBytesFrames128Rcv.setStatus('current')
macSzRxDcnHistorical1dayBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayBytesFrames256Rcv.setStatus('current')
macSzRxDcnHistorical1dayBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayBytesFrames512Rcv.setStatus('current')
macSzRxDcnHistorical1dayBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayBytesFrames1024Rcv.setStatus('current')
macSzRxDcnHistorical1dayBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayBytesFrames1519Rcv.setStatus('current')
macSzRxDcnHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayValidFlag.setStatus('current')
macSzRxDcnHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 31, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxDcnHistorical1dayTimeStamp.setStatus('current')
endOfMacSzRxDcnHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacSzRxDcnHistorical1dayTable.setStatus('current')
macErrRxDcnCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 33), )
if mibBuilder.loadTexts: macErrRxDcnCurrent15minTable.setStatus('current')
macErrRxDcnCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 33, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: macErrRxDcnCurrent15minEntry.setStatus('current')
macErrRxDcnCurrent15minCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 33, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnCurrent15minCrcErrorsRcv.setStatus('current')
macErrRxDcnCurrent15minOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 33, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnCurrent15minOversizedFramesRcv.setStatus('current')
macErrRxDcnCurrent15minUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 33, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnCurrent15minUndersizedFramesRcv.setStatus('current')
macErrRxDcnCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 33, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnCurrent15minElapsedTime.setStatus('current')
endOfMacErrRxDcnCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacErrRxDcnCurrent15minTable.setStatus('current')
macErrRxDcnCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 35), )
if mibBuilder.loadTexts: macErrRxDcnCurrent1dayTable.setStatus('current')
macErrRxDcnCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 35, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: macErrRxDcnCurrent1dayEntry.setStatus('current')
macErrRxDcnCurrent1dayCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 35, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnCurrent1dayCrcErrorsRcv.setStatus('current')
macErrRxDcnCurrent1dayOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 35, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnCurrent1dayOversizedFramesRcv.setStatus('current')
macErrRxDcnCurrent1dayUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 35, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnCurrent1dayUndersizedFramesRcv.setStatus('current')
macErrRxDcnCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 35, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnCurrent1dayElapsedTime.setStatus('current')
endOfMacErrRxDcnCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacErrRxDcnCurrent1dayTable.setStatus('current')
macErrRxDcnHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 37), )
if mibBuilder.loadTexts: macErrRxDcnHistorical15minTable.setStatus('current')
macErrRxDcnHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 37, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macErrRxDcnHistorical15minNumber"))
if mibBuilder.loadTexts: macErrRxDcnHistorical15minEntry.setStatus('current')
macErrRxDcnHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 37, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: macErrRxDcnHistorical15minNumber.setStatus('current')
macErrRxDcnHistorical15minCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 37, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnHistorical15minCrcErrorsRcv.setStatus('current')
macErrRxDcnHistorical15minOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 37, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnHistorical15minOversizedFramesRcv.setStatus('current')
macErrRxDcnHistorical15minUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 37, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnHistorical15minUndersizedFramesRcv.setStatus('current')
macErrRxDcnHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 37, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnHistorical15minValidFlag.setStatus('current')
macErrRxDcnHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 37, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnHistorical15minTimeStamp.setStatus('current')
endOfMacErrRxDcnHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacErrRxDcnHistorical15minTable.setStatus('current')
macErrRxDcnHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 39), )
if mibBuilder.loadTexts: macErrRxDcnHistorical1dayTable.setStatus('current')
macErrRxDcnHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 39, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macErrRxDcnHistorical1dayNumber"))
if mibBuilder.loadTexts: macErrRxDcnHistorical1dayEntry.setStatus('current')
macErrRxDcnHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 39, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: macErrRxDcnHistorical1dayNumber.setStatus('current')
macErrRxDcnHistorical1dayCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 39, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnHistorical1dayCrcErrorsRcv.setStatus('current')
macErrRxDcnHistorical1dayOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 39, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnHistorical1dayOversizedFramesRcv.setStatus('current')
macErrRxDcnHistorical1dayUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 39, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnHistorical1dayUndersizedFramesRcv.setStatus('current')
macErrRxDcnHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 39, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnHistorical1dayValidFlag.setStatus('current')
macErrRxDcnHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 39, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxDcnHistorical1dayTimeStamp.setStatus('current')
endOfMacErrRxDcnHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 1, 2, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacErrRxDcnHistorical1dayTable.setStatus('current')
dcnPhysInstValueTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1, 1), )
if mibBuilder.loadTexts: dcnPhysInstValueTable.setStatus('current')
dcnPhysInstValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: dcnPhysInstValueEntry.setStatus('current')
dcnPhysInstValuelbcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1, 1, 1, 1), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: dcnPhysInstValuelbcn.setStatus('current')
dcnPhysInstValueOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1, 1, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: dcnPhysInstValueOpt.setStatus('current')
dcnPhysInstValueOpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1, 1, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: dcnPhysInstValueOpr.setStatus('current')
dcnPhysInstValueAtRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1, 1, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: dcnPhysInstValueAtRcv.setStatus('current')
dcnPhysInstValueAttRmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1, 1, 1, 5), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: dcnPhysInstValueAttRmt.setStatus('current')
dcnPhysInstValuelbcl = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1, 1, 1, 6), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: dcnPhysInstValuelbcl.setStatus('current')
dcnPhysInstValueFiberLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('km').setMaxAccess("readonly")
if mibBuilder.loadTexts: dcnPhysInstValueFiberLength.setStatus('current')
endOfDcnPhysInstValueTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDcnPhysInstValueTable.setStatus('current')
endOfPmDcnPhysValue = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 1, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmDcnPhysValue.setStatus('current')
dcnPhysThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 2, 1), )
if mibBuilder.loadTexts: dcnPhysThresholdTable.setStatus('current')
dcnPhysThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 2, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"))
if mibBuilder.loadTexts: dcnPhysThresholdEntry.setStatus('current')
dcnPhysThresholdOprLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-450, 260))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dcnPhysThresholdOprLow.setStatus('current')
dcnPhysThresholdOprHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-450, 270))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dcnPhysThresholdOprHigh.setStatus('current')
dcnPhysThresholdOptLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 2, 1, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: dcnPhysThresholdOptLow.setStatus('current')
dcnPhysThresholdOptHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 2, 1, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: dcnPhysThresholdOptHigh.setStatus('current')
dcnPhysThresholdAttRcvLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 2, 1, 1, 5), Integer32()).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dcnPhysThresholdAttRcvLow.setStatus('current')
dcnPhysThresholdAttRcvHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 2, 1, 1, 6), Integer32()).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dcnPhysThresholdAttRcvHigh.setStatus('current')
endOfDcnPhysThresholdTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDcnPhysThresholdTable.setStatus('current')
endOfPmDcnPhysThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 2, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmDcnPhysThreshold.setStatus('current')
optDcnHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 1), )
if mibBuilder.loadTexts: optDcnHistorical15minTable.setStatus('current')
optDcnHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "optDcnHistorical15minNumber"))
if mibBuilder.loadTexts: optDcnHistorical15minEntry.setStatus('current')
optDcnHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: optDcnHistorical15minNumber.setStatus('current')
optDcnHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 1, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical15minLow.setStatus('current')
optDcnHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 1, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical15minMean.setStatus('current')
optDcnHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 1, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical15minHigh.setStatus('current')
optDcnHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical15minValidFlag.setStatus('current')
optDcnHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical15minTimeStamp.setStatus('current')
endOfOptDcnHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOptDcnHistorical15minTable.setStatus('current')
optDcnHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 3), )
if mibBuilder.loadTexts: optDcnHistorical1dayTable.setStatus('current')
optDcnHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 3, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "optDcnHistorical1dayNumber"))
if mibBuilder.loadTexts: optDcnHistorical1dayEntry.setStatus('current')
optDcnHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: optDcnHistorical1dayNumber.setStatus('current')
optDcnHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 3, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical1dayLow.setStatus('current')
optDcnHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 3, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical1dayMean.setStatus('current')
optDcnHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 3, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical1dayHigh.setStatus('current')
optDcnHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical1dayValidFlag.setStatus('current')
optDcnHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 3, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical1dayTimeStamp.setStatus('current')
endOfOptDcnHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOptDcnHistorical1dayTable.setStatus('current')
optDcnHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 5), )
if mibBuilder.loadTexts: optDcnHistorical1weekTable.setStatus('current')
optDcnHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 5, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "optDcnHistorical1weekNumber"))
if mibBuilder.loadTexts: optDcnHistorical1weekEntry.setStatus('current')
optDcnHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: optDcnHistorical1weekNumber.setStatus('current')
optDcnHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 5, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical1weekLow.setStatus('current')
optDcnHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 5, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical1weekMean.setStatus('current')
optDcnHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 5, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical1weekHigh.setStatus('current')
optDcnHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 5, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical1weekValidFlag.setStatus('current')
optDcnHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 5, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optDcnHistorical1weekTimeStamp.setStatus('current')
endOfOptDcnHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOptDcnHistorical1weekTable.setStatus('current')
oprDcnHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 7), )
if mibBuilder.loadTexts: oprDcnHistorical15minTable.setStatus('current')
oprDcnHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 7, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "oprDcnHistorical15minNumber"))
if mibBuilder.loadTexts: oprDcnHistorical15minEntry.setStatus('current')
oprDcnHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: oprDcnHistorical15minNumber.setStatus('current')
oprDcnHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 7, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical15minLow.setStatus('current')
oprDcnHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 7, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical15minMean.setStatus('current')
oprDcnHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 7, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical15minHigh.setStatus('current')
oprDcnHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 7, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical15minValidFlag.setStatus('current')
oprDcnHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 7, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical15minTimeStamp.setStatus('current')
endOfOprDcnHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOprDcnHistorical15minTable.setStatus('current')
oprDcnHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 9), )
if mibBuilder.loadTexts: oprDcnHistorical1dayTable.setStatus('current')
oprDcnHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 9, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "oprDcnHistorical1dayNumber"))
if mibBuilder.loadTexts: oprDcnHistorical1dayEntry.setStatus('current')
oprDcnHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: oprDcnHistorical1dayNumber.setStatus('current')
oprDcnHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 9, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical1dayLow.setStatus('current')
oprDcnHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 9, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical1dayMean.setStatus('current')
oprDcnHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 9, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical1dayHigh.setStatus('current')
oprDcnHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 9, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical1dayValidFlag.setStatus('current')
oprDcnHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 9, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical1dayTimeStamp.setStatus('current')
endOfOprDcnHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOprDcnHistorical1dayTable.setStatus('current')
oprDcnHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 11), )
if mibBuilder.loadTexts: oprDcnHistorical1weekTable.setStatus('current')
oprDcnHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 11, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "oprDcnHistorical1weekNumber"))
if mibBuilder.loadTexts: oprDcnHistorical1weekEntry.setStatus('current')
oprDcnHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: oprDcnHistorical1weekNumber.setStatus('current')
oprDcnHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 11, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical1weekLow.setStatus('current')
oprDcnHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 11, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical1weekMean.setStatus('current')
oprDcnHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 11, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical1weekHigh.setStatus('current')
oprDcnHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 11, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical1weekValidFlag.setStatus('current')
oprDcnHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 11, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprDcnHistorical1weekTimeStamp.setStatus('current')
endOfOprDcnHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOprDcnHistorical1weekTable.setStatus('current')
lbcnDcnHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 13), )
if mibBuilder.loadTexts: lbcnDcnHistorical15minTable.setStatus('current')
lbcnDcnHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 13, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "lbcnDcnHistorical15minNumber"))
if mibBuilder.loadTexts: lbcnDcnHistorical15minEntry.setStatus('current')
lbcnDcnHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: lbcnDcnHistorical15minNumber.setStatus('current')
lbcnDcnHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 13, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical15minLow.setStatus('current')
lbcnDcnHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 13, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical15minMean.setStatus('current')
lbcnDcnHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 13, 1, 4), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical15minHigh.setStatus('current')
lbcnDcnHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 13, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical15minValidFlag.setStatus('current')
lbcnDcnHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 13, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical15minTimeStamp.setStatus('current')
endOfLbcnDcnHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLbcnDcnHistorical15minTable.setStatus('current')
lbcnDcnHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 15), )
if mibBuilder.loadTexts: lbcnDcnHistorical1dayTable.setStatus('current')
lbcnDcnHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 15, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "lbcnDcnHistorical1dayNumber"))
if mibBuilder.loadTexts: lbcnDcnHistorical1dayEntry.setStatus('current')
lbcnDcnHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: lbcnDcnHistorical1dayNumber.setStatus('current')
lbcnDcnHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 15, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical1dayLow.setStatus('current')
lbcnDcnHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 15, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical1dayMean.setStatus('current')
lbcnDcnHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 15, 1, 4), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical1dayHigh.setStatus('current')
lbcnDcnHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 15, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical1dayValidFlag.setStatus('current')
lbcnDcnHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 15, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical1dayTimeStamp.setStatus('current')
endOfLbcnDcnHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLbcnDcnHistorical1dayTable.setStatus('current')
lbcnDcnHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 17), )
if mibBuilder.loadTexts: lbcnDcnHistorical1weekTable.setStatus('current')
lbcnDcnHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 17, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "lbcnDcnHistorical1weekNumber"))
if mibBuilder.loadTexts: lbcnDcnHistorical1weekEntry.setStatus('current')
lbcnDcnHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: lbcnDcnHistorical1weekNumber.setStatus('current')
lbcnDcnHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 17, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical1weekLow.setStatus('current')
lbcnDcnHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 17, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical1weekMean.setStatus('current')
lbcnDcnHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 17, 1, 4), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical1weekHigh.setStatus('current')
lbcnDcnHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 17, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical1weekValidFlag.setStatus('current')
lbcnDcnHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 17, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnDcnHistorical1weekTimeStamp.setStatus('current')
endOfLbcnDcnHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLbcnDcnHistorical1weekTable.setStatus('current')
atrcvDcnHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 19), )
if mibBuilder.loadTexts: atrcvDcnHistorical15minTable.setStatus('current')
atrcvDcnHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 19, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "atrcvDcnHistorical15minNumber"))
if mibBuilder.loadTexts: atrcvDcnHistorical15minEntry.setStatus('current')
atrcvDcnHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: atrcvDcnHistorical15minNumber.setStatus('current')
atrcvDcnHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 19, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical15minLow.setStatus('current')
atrcvDcnHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 19, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical15minMean.setStatus('current')
atrcvDcnHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 19, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical15minHigh.setStatus('current')
atrcvDcnHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 19, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical15minValidFlag.setStatus('current')
atrcvDcnHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 19, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical15minTimeStamp.setStatus('current')
endOfAtrcvDcnHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAtrcvDcnHistorical15minTable.setStatus('current')
atrcvDcnHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 21), )
if mibBuilder.loadTexts: atrcvDcnHistorical1dayTable.setStatus('current')
atrcvDcnHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 21, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "atrcvDcnHistorical1dayNumber"))
if mibBuilder.loadTexts: atrcvDcnHistorical1dayEntry.setStatus('current')
atrcvDcnHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: atrcvDcnHistorical1dayNumber.setStatus('current')
atrcvDcnHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 21, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical1dayLow.setStatus('current')
atrcvDcnHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 21, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical1dayMean.setStatus('current')
atrcvDcnHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 21, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical1dayHigh.setStatus('current')
atrcvDcnHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 21, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical1dayValidFlag.setStatus('current')
atrcvDcnHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 21, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical1dayTimeStamp.setStatus('current')
endOfAtrcvDcnHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAtrcvDcnHistorical1dayTable.setStatus('current')
atrcvDcnHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 23), )
if mibBuilder.loadTexts: atrcvDcnHistorical1weekTable.setStatus('current')
atrcvDcnHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 23, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "atrcvDcnHistorical1weekNumber"))
if mibBuilder.loadTexts: atrcvDcnHistorical1weekEntry.setStatus('current')
atrcvDcnHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: atrcvDcnHistorical1weekNumber.setStatus('current')
atrcvDcnHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 23, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical1weekLow.setStatus('current')
atrcvDcnHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 23, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical1weekMean.setStatus('current')
atrcvDcnHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 23, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical1weekHigh.setStatus('current')
atrcvDcnHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 23, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical1weekValidFlag.setStatus('current')
atrcvDcnHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 23, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atrcvDcnHistorical1weekTimeStamp.setStatus('current')
endOfAtrcvDcnHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAtrcvDcnHistorical1weekTable.setStatus('current')
endOfPmDcnPhysRecord = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 2, 2, 3, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmDcnPhysRecord.setStatus('current')
facilityDataThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1), )
if mibBuilder.loadTexts: facilityDataThresholdTable.setStatus('current')
facilityDataThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: facilityDataThresholdEntry.setStatus('current')
facilityDataThresholdESOduHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESOduHT15min.setStatus('current')
facilityDataThresholdESOduHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESOduHT1day.setStatus('current')
facilityDataThresholdSESOduHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESOduHT15min.setStatus('current')
facilityDataThresholdSESOduHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESOduHT1day.setStatus('current')
facilityDataThresholdBBEOduHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 5), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBEOduHT15min.setStatus('current')
facilityDataThresholdBBEOduHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 6), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBEOduHT1day.setStatus('current')
facilityDataThresholdUASOduHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASOduHT15min.setStatus('current')
facilityDataThresholdUASOduHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASOduHT1day.setStatus('current')
facilityDataThresholdESTcmaHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESTcmaHT15min.setStatus('current')
facilityDataThresholdESTcmaHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESTcmaHT1day.setStatus('current')
facilityDataThresholdSESTcmaHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESTcmaHT15min.setStatus('current')
facilityDataThresholdSESTcmaHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESTcmaHT1day.setStatus('current')
facilityDataThresholdBBETcmaHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 13), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBETcmaHT15min.setStatus('current')
facilityDataThresholdBBETcmaHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 14), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBETcmaHT1day.setStatus('current')
facilityDataThresholdUASTcmaHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASTcmaHT15min.setStatus('current')
facilityDataThresholdUASTcmaHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASTcmaHT1day.setStatus('current')
facilityDataThresholdESTcmbHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESTcmbHT15min.setStatus('current')
facilityDataThresholdESTcmbHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESTcmbHT1day.setStatus('current')
facilityDataThresholdSESTcmbHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESTcmbHT15min.setStatus('current')
facilityDataThresholdSESTcmbHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESTcmbHT1day.setStatus('current')
facilityDataThresholdBBETcmbHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 21), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBETcmbHT15min.setStatus('current')
facilityDataThresholdBBETcmbHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 22), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBETcmbHT1day.setStatus('current')
facilityDataThresholdUASTcmbHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASTcmbHT15min.setStatus('current')
facilityDataThresholdUASTcmbHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASTcmbHT1day.setStatus('current')
facilityDataThresholdESTcmcHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESTcmcHT15min.setStatus('current')
facilityDataThresholdESTcmcHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESTcmcHT1day.setStatus('current')
facilityDataThresholdSESTcmcHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESTcmcHT15min.setStatus('current')
facilityDataThresholdSESTcmcHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESTcmcHT1day.setStatus('current')
facilityDataThresholdBBETcmcHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 29), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBETcmcHT15min.setStatus('current')
facilityDataThresholdBBETcmcHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 30), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBETcmcHT1day.setStatus('current')
facilityDataThresholdUASTcmcHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASTcmcHT15min.setStatus('current')
facilityDataThresholdUASTcmcHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASTcmcHT1day.setStatus('current')
facilityDataThresholdESOtuHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESOtuHT15min.setStatus('current')
facilityDataThresholdESOtuHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESOtuHT1day.setStatus('current')
facilityDataThresholdSESOtuHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESOtuHT15min.setStatus('current')
facilityDataThresholdSESOtuHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESOtuHT1day.setStatus('current')
facilityDataThresholdBBEOtuHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 37), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBEOtuHT15min.setStatus('current')
facilityDataThresholdBBEOtuHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 38), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBEOtuHT1day.setStatus('current')
facilityDataThresholdUASOtuHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 39), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASOtuHT15min.setStatus('current')
facilityDataThresholdUASOtuHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASOtuHT1day.setStatus('current')
facilityDataThresholdESFecHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 41), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESFecHT15min.setStatus('current')
facilityDataThresholdESFecHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 42), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESFecHT1day.setStatus('current')
facilityDataThresholdSESFecHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESFecHT15min.setStatus('current')
facilityDataThresholdSESFecHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 44), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESFecHT1day.setStatus('current')
facilityDataThresholdUBEFecHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 45), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUBEFecHT15min.setStatus('current')
facilityDataThresholdUBEFecHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 46), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUBEFecHT1day.setStatus('current')
facilityDataThresholdCEFecHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 47), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCEFecHT15min.setStatus('current')
facilityDataThresholdCEFecHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 48), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCEFecHT1day.setStatus('current')
facilityDataThresholdBERCEFecHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 49), Counter64String()).setUnits('1.0E-18').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBERCEFecHT15min.setStatus('current')
facilityDataThresholdBERCEFecHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 50), Counter64String()).setUnits('1.0E-18').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBERCEFecHT1day.setStatus('current')
facilityDataThresholdESPcsHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 51), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESPcsHT15min.setStatus('current')
facilityDataThresholdESPcsHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 52), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 89400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESPcsHT1day.setStatus('current')
facilityDataThresholdDEPcsHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 53), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdDEPcsHT15min.setStatus('current')
facilityDataThresholdDEPcsHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 54), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdDEPcsHT1day.setStatus('current')
facilityDataThresholdCVPcsHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 55), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCVPcsHT15min.setStatus('current')
facilityDataThresholdCVPcsHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 56), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCVPcsHT1day.setStatus('current')
facilityDataThresholdESLHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 57), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESLHT15min.setStatus('current')
facilityDataThresholdESLHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 58), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESLHT1day.setStatus('current')
facilityDataThresholdSESLHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 59), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESLHT15min.setStatus('current')
facilityDataThresholdSESLHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 60), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESLHT1day.setStatus('current')
facilityDataThresholdUASLHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 61), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASLHT15min.setStatus('current')
facilityDataThresholdUASLHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 62), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdUASLHT1day.setStatus('current')
facilityDataThresholdCVLHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 63), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCVLHT15min.setStatus('current')
facilityDataThresholdCVLHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 64), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCVLHT1day.setStatus('current')
facilityDataThresholdESSHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 65), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESSHT15min.setStatus('current')
facilityDataThresholdESSHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 66), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdESSHT1day.setStatus('current')
facilityDataThresholdSESSHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 67), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESSHT15min.setStatus('current')
facilityDataThresholdSESSHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 68), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSESSHT1day.setStatus('current')
facilityDataThresholdSEFSSHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 69), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSEFSSHT15min.setStatus('current')
facilityDataThresholdSEFSSHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 70), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSEFSSHT1day.setStatus('current')
facilityDataThresholdCVSHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 71), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCVSHT15min.setStatus('current')
facilityDataThresholdCVSHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 72), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCVSHT1day.setStatus('current')
facilityDataThresholdBBEPcsHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 73), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBEPcsHT15min.setStatus('current')
facilityDataThresholdBBEPcsHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 74), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBEPcsHT1day.setStatus('current')
facilityDataThresholdCVDEPcsHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 75), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCVDEPcsHT15min.setStatus('current')
facilityDataThresholdCVDEPcsHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 76), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCVDEPcsHT1day.setStatus('current')
facilityDataThresholdSEPcsHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 77), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSEPcsHT15min.setStatus('current')
facilityDataThresholdSEPcsHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 78), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdSEPcsHT1day.setStatus('current')
facilityDataThresholdCRCFrRcvHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 79), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCRCFrRcvHT15min.setStatus('current')
facilityDataThresholdCRCFrRcvHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 80), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCRCFrRcvHT1day.setStatus('current')
facilityDataThresholdCRCFrEgrsHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 81), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCRCFrEgrsHT15min.setStatus('current')
facilityDataThresholdCRCFrEgrsHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 82), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdCRCFrEgrsHT1day.setStatus('current')
facilityDataThresholdBBESHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 83), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBESHT15min.setStatus('current')
facilityDataThresholdBBESHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 84), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBESHT1day.setStatus('current')
facilityDataThresholdBBELHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 85), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBELHT15min.setStatus('current')
facilityDataThresholdBBELHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 86), Counter64String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdBBELHT1day.setStatus('current')
facilityDataThresholdOOFSSHT15min = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 87), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdOOFSSHT15min.setStatus('current')
facilityDataThresholdOOFSSHT1day = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 1, 1, 88), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityDataThresholdOOFSSHT1day.setStatus('current')
endOfFacilityDataThresholdTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFacilityDataThresholdTable.setStatus('current')
endOfPmFacilityDataThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 1, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmFacilityDataThreshold.setStatus('current')
oduFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 1), )
if mibBuilder.loadTexts: oduFacilityCurrent15minTable.setStatus('current')
oduFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: oduFacilityCurrent15minEntry.setStatus('current')
oduFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityCurrent15minES.setStatus('current')
oduFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityCurrent15minSES.setStatus('current')
oduFacilityCurrent15minBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 1, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityCurrent15minBbe.setStatus('current')
oduFacilityCurrent15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityCurrent15minUAS.setStatus('current')
oduFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityCurrent15minElapsedTime.setStatus('current')
endOfOduFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOduFacilityCurrent15minTable.setStatus('current')
oduFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 3), )
if mibBuilder.loadTexts: oduFacilityCurrent1dayTable.setStatus('current')
oduFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 3, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: oduFacilityCurrent1dayEntry.setStatus('current')
oduFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityCurrent1dayES.setStatus('current')
oduFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityCurrent1daySES.setStatus('current')
oduFacilityCurrent1dayBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 3, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityCurrent1dayBbe.setStatus('current')
oduFacilityCurrent1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityCurrent1dayUAS.setStatus('current')
oduFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityCurrent1dayElapsedTime.setStatus('current')
endOfOduFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOduFacilityCurrent1dayTable.setStatus('current')
oduFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 5), )
if mibBuilder.loadTexts: oduFacilityHistorical15minTable.setStatus('current')
oduFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 5, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "oduFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: oduFacilityHistorical15minEntry.setStatus('current')
oduFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: oduFacilityHistorical15minNumber.setStatus('current')
oduFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical15minES.setStatus('current')
oduFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical15minSES.setStatus('current')
oduFacilityHistorical15minBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 5, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical15minBbe.setStatus('current')
oduFacilityHistorical15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical15minUAS.setStatus('current')
oduFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical15minValidFlag.setStatus('current')
oduFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 5, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical15minTimeStamp.setStatus('current')
endOfOduFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOduFacilityHistorical15minTable.setStatus('current')
oduFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 7), )
if mibBuilder.loadTexts: oduFacilityHistorical1dayTable.setStatus('current')
oduFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 7, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "oduFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: oduFacilityHistorical1dayEntry.setStatus('current')
oduFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: oduFacilityHistorical1dayNumber.setStatus('current')
oduFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 7, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical1dayES.setStatus('current')
oduFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 7, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical1daySES.setStatus('current')
oduFacilityHistorical1dayBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 7, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical1dayBbe.setStatus('current')
oduFacilityHistorical1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 7, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical1dayUAS.setStatus('current')
oduFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 7, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical1dayValidFlag.setStatus('current')
oduFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 7, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oduFacilityHistorical1dayTimeStamp.setStatus('current')
endOfOduFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOduFacilityHistorical1dayTable.setStatus('current')
tcmAFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 9), )
if mibBuilder.loadTexts: tcmAFacilityCurrent15minTable.setStatus('current')
tcmAFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 9, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: tcmAFacilityCurrent15minEntry.setStatus('current')
tcmAFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 9, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityCurrent15minES.setStatus('current')
tcmAFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 9, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityCurrent15minSES.setStatus('current')
tcmAFacilityCurrent15minBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 9, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityCurrent15minBbe.setStatus('current')
tcmAFacilityCurrent15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 9, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityCurrent15minUAS.setStatus('current')
tcmAFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityCurrent15minElapsedTime.setStatus('current')
endOfTcmAFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmAFacilityCurrent15minTable.setStatus('current')
tcmAFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 11), )
if mibBuilder.loadTexts: tcmAFacilityCurrent1dayTable.setStatus('current')
tcmAFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 11, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: tcmAFacilityCurrent1dayEntry.setStatus('current')
tcmAFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 11, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityCurrent1dayES.setStatus('current')
tcmAFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 11, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityCurrent1daySES.setStatus('current')
tcmAFacilityCurrent1dayBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 11, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityCurrent1dayBbe.setStatus('current')
tcmAFacilityCurrent1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 11, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityCurrent1dayUAS.setStatus('current')
tcmAFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityCurrent1dayElapsedTime.setStatus('current')
endOfTcmAFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmAFacilityCurrent1dayTable.setStatus('current')
tcmAFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 13), )
if mibBuilder.loadTexts: tcmAFacilityHistorical15minTable.setStatus('current')
tcmAFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 13, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "tcmAFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: tcmAFacilityHistorical15minEntry.setStatus('current')
tcmAFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: tcmAFacilityHistorical15minNumber.setStatus('current')
tcmAFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 13, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical15minES.setStatus('current')
tcmAFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 13, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical15minSES.setStatus('current')
tcmAFacilityHistorical15minBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 13, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical15minBbe.setStatus('current')
tcmAFacilityHistorical15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 13, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical15minUAS.setStatus('current')
tcmAFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 13, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical15minValidFlag.setStatus('current')
tcmAFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 13, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical15minTimeStamp.setStatus('current')
endOfTcmAFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmAFacilityHistorical15minTable.setStatus('current')
tcmAFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 15), )
if mibBuilder.loadTexts: tcmAFacilityHistorical1dayTable.setStatus('current')
tcmAFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 15, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "oduFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: tcmAFacilityHistorical1dayEntry.setStatus('current')
tcmAFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: tcmAFacilityHistorical1dayNumber.setStatus('current')
tcmAFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 15, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical1dayES.setStatus('current')
tcmAFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 15, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical1daySES.setStatus('current')
tcmAFacilityHistorical1dayBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 15, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical1dayBbe.setStatus('current')
tcmAFacilityHistorical1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 15, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical1dayUAS.setStatus('current')
tcmAFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 15, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical1dayValidFlag.setStatus('current')
tcmAFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 15, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmAFacilityHistorical1dayTimeStamp.setStatus('current')
endOfTcmAFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmAFacilityHistorical1dayTable.setStatus('current')
tcmBFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 17), )
if mibBuilder.loadTexts: tcmBFacilityCurrent15minTable.setStatus('current')
tcmBFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 17, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: tcmBFacilityCurrent15minEntry.setStatus('current')
tcmBFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 17, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityCurrent15minES.setStatus('current')
tcmBFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 17, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityCurrent15minSES.setStatus('current')
tcmBFacilityCurrent15minBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 17, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityCurrent15minBbe.setStatus('current')
tcmBFacilityCurrent15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 17, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityCurrent15minUAS.setStatus('current')
tcmBFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityCurrent15minElapsedTime.setStatus('current')
endOfTcmBFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmBFacilityCurrent15minTable.setStatus('current')
tcmBFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 19), )
if mibBuilder.loadTexts: tcmBFacilityCurrent1dayTable.setStatus('current')
tcmBFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 19, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: tcmBFacilityCurrent1dayEntry.setStatus('current')
tcmBFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 19, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityCurrent1dayES.setStatus('current')
tcmBFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 19, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityCurrent1daySES.setStatus('current')
tcmBFacilityCurrent1dayBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 19, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityCurrent1dayBbe.setStatus('current')
tcmBFacilityCurrent1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 19, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityCurrent1dayUAS.setStatus('current')
tcmBFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityCurrent1dayElapsedTime.setStatus('current')
endOfTcmBFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmBFacilityCurrent1dayTable.setStatus('current')
tcmBFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 21), )
if mibBuilder.loadTexts: tcmBFacilityHistorical15minTable.setStatus('current')
tcmBFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 21, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "tcmBFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: tcmBFacilityHistorical15minEntry.setStatus('current')
tcmBFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: tcmBFacilityHistorical15minNumber.setStatus('current')
tcmBFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 21, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical15minES.setStatus('current')
tcmBFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 21, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical15minSES.setStatus('current')
tcmBFacilityHistorical15minBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 21, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical15minBbe.setStatus('current')
tcmBFacilityHistorical15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 21, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical15minUAS.setStatus('current')
tcmBFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 21, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical15minValidFlag.setStatus('current')
tcmBFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 21, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical15minTimeStamp.setStatus('current')
endOfTcmBFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmBFacilityHistorical15minTable.setStatus('current')
tcmBFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 23), )
if mibBuilder.loadTexts: tcmBFacilityHistorical1dayTable.setStatus('current')
tcmBFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 23, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "tcmBFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: tcmBFacilityHistorical1dayEntry.setStatus('current')
tcmBFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: tcmBFacilityHistorical1dayNumber.setStatus('current')
tcmBFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 23, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical1dayES.setStatus('current')
tcmBFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 23, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical1daySES.setStatus('current')
tcmBFacilityHistorical1dayBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 23, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical1dayBbe.setStatus('current')
tcmBFacilityHistorical1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 23, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical1dayUAS.setStatus('current')
tcmBFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 23, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical1dayValidFlag.setStatus('current')
tcmBFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 23, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmBFacilityHistorical1dayTimeStamp.setStatus('current')
endOfTcmBFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmBFacilityHistorical1dayTable.setStatus('current')
tcmCFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 25), )
if mibBuilder.loadTexts: tcmCFacilityCurrent15minTable.setStatus('current')
tcmCFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 25, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: tcmCFacilityCurrent15minEntry.setStatus('current')
tcmCFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 25, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityCurrent15minES.setStatus('current')
tcmCFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 25, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityCurrent15minSES.setStatus('current')
tcmCFacilityCurrent15minBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 25, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityCurrent15minBbe.setStatus('current')
tcmCFacilityCurrent15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 25, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityCurrent15minUAS.setStatus('current')
tcmCFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 25, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityCurrent15minElapsedTime.setStatus('current')
endOfTcmCFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmCFacilityCurrent15minTable.setStatus('current')
tcmCFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 27), )
if mibBuilder.loadTexts: tcmCFacilityCurrent1dayTable.setStatus('current')
tcmCFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 27, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: tcmCFacilityCurrent1dayEntry.setStatus('current')
tcmCFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 27, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityCurrent1dayES.setStatus('current')
tcmCFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 27, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityCurrent1daySES.setStatus('current')
tcmCFacilityCurrent1dayBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 27, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityCurrent1dayBbe.setStatus('current')
tcmCFacilityCurrent1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 27, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityCurrent1dayUAS.setStatus('current')
tcmCFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 27, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityCurrent1dayElapsedTime.setStatus('current')
endOfTcmCFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmCFacilityCurrent1dayTable.setStatus('current')
tcmCFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 29), )
if mibBuilder.loadTexts: tcmCFacilityHistorical15minTable.setStatus('current')
tcmCFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 29, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "tcmCFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: tcmCFacilityHistorical15minEntry.setStatus('current')
tcmCFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: tcmCFacilityHistorical15minNumber.setStatus('current')
tcmCFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 29, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical15minES.setStatus('current')
tcmCFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 29, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical15minSES.setStatus('current')
tcmCFacilityHistorical15minBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 29, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical15minBbe.setStatus('current')
tcmCFacilityHistorical15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 29, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical15minUAS.setStatus('current')
tcmCFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 29, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical15minValidFlag.setStatus('current')
tcmCFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 29, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical15minTimeStamp.setStatus('current')
endOfTcmCFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmCFacilityHistorical15minTable.setStatus('current')
tcmCFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 31), )
if mibBuilder.loadTexts: tcmCFacilityHistorical1dayTable.setStatus('current')
tcmCFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 31, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "tcmCFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: tcmCFacilityHistorical1dayEntry.setStatus('current')
tcmCFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: tcmCFacilityHistorical1dayNumber.setStatus('current')
tcmCFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 31, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical1dayES.setStatus('current')
tcmCFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 31, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical1daySES.setStatus('current')
tcmCFacilityHistorical1dayBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 31, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical1dayBbe.setStatus('current')
tcmCFacilityHistorical1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 31, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical1dayUAS.setStatus('current')
tcmCFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 31, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical1dayValidFlag.setStatus('current')
tcmCFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 31, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcmCFacilityHistorical1dayTimeStamp.setStatus('current')
endOfTcmCFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTcmCFacilityHistorical1dayTable.setStatus('current')
otuFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 33), )
if mibBuilder.loadTexts: otuFacilityCurrent15minTable.setStatus('current')
otuFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 33, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: otuFacilityCurrent15minEntry.setStatus('current')
otuFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 33, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityCurrent15minES.setStatus('current')
otuFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 33, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityCurrent15minSES.setStatus('current')
otuFacilityCurrent15minBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 33, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityCurrent15minBbe.setStatus('current')
otuFacilityCurrent15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 33, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityCurrent15minUAS.setStatus('current')
otuFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 33, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityCurrent15minElapsedTime.setStatus('current')
endOfOtuFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOtuFacilityCurrent15minTable.setStatus('current')
otuFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 35), )
if mibBuilder.loadTexts: otuFacilityCurrent1dayTable.setStatus('current')
otuFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 35, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: otuFacilityCurrent1dayEntry.setStatus('current')
otuFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 35, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityCurrent1dayES.setStatus('current')
otuFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 35, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityCurrent1daySES.setStatus('current')
otuFacilityCurrent1dayBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 35, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityCurrent1dayBbe.setStatus('current')
otuFacilityCurrent1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 35, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityCurrent1dayUAS.setStatus('current')
otuFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 35, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityCurrent1dayElapsedTime.setStatus('current')
endOfOtuFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOtuFacilityCurrent1dayTable.setStatus('current')
otuFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 37), )
if mibBuilder.loadTexts: otuFacilityHistorical15minTable.setStatus('current')
otuFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 37, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "otuFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: otuFacilityHistorical15minEntry.setStatus('current')
otuFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 37, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: otuFacilityHistorical15minNumber.setStatus('current')
otuFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 37, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical15minES.setStatus('current')
otuFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 37, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical15minSES.setStatus('current')
otuFacilityHistorical15minBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 37, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical15minBbe.setStatus('current')
otuFacilityHistorical15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 37, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical15minUAS.setStatus('current')
otuFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 37, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical15minValidFlag.setStatus('current')
otuFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 37, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical15minTimeStamp.setStatus('current')
endOfOtuFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOtuFacilityHistorical15minTable.setStatus('current')
otuFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 39), )
if mibBuilder.loadTexts: otuFacilityHistorical1dayTable.setStatus('current')
otuFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 39, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "otuFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: otuFacilityHistorical1dayEntry.setStatus('current')
otuFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 39, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: otuFacilityHistorical1dayNumber.setStatus('current')
otuFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 39, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical1dayES.setStatus('current')
otuFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 39, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical1daySES.setStatus('current')
otuFacilityHistorical1dayBbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 39, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical1dayBbe.setStatus('current')
otuFacilityHistorical1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 39, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical1dayUAS.setStatus('current')
otuFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 39, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical1dayValidFlag.setStatus('current')
otuFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 39, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFacilityHistorical1dayTimeStamp.setStatus('current')
endOfOtuFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOtuFacilityHistorical1dayTable.setStatus('current')
otuFecFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 41), )
if mibBuilder.loadTexts: otuFecFacilityCurrent15minTable.setStatus('current')
otuFecFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 41, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: otuFecFacilityCurrent15minEntry.setStatus('current')
otuFecFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 41, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent15minES.setStatus('current')
otuFecFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 41, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent15minSES.setStatus('current')
otuFecFacilityCurrent15minCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 41, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent15minCE.setStatus('current')
otuFecFacilityCurrent15minUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 41, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent15minUBE.setStatus('current')
otuFecFacilityCurrent15minBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 41, 1, 5), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent15minBERCE.setStatus('current')
otuFecFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 41, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent15minElapsedTime.setStatus('current')
endOfOtuFecFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOtuFecFacilityCurrent15minTable.setStatus('current')
otuFecFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 43), )
if mibBuilder.loadTexts: otuFecFacilityCurrent1dayTable.setStatus('current')
otuFecFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 43, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: otuFecFacilityCurrent1dayEntry.setStatus('current')
otuFecFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 43, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent1dayES.setStatus('current')
otuFecFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 43, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent1daySES.setStatus('current')
otuFecFacilityCurrent1dayCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 43, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent1dayCE.setStatus('current')
otuFecFacilityCurrent1dayUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 43, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent1dayUBE.setStatus('current')
otuFecFacilityCurrent1dayBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 43, 1, 5), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent1dayBERCE.setStatus('current')
otuFecFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 43, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityCurrent1dayElapsedTime.setStatus('current')
endOfOtuFecFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOtuFecFacilityCurrent1dayTable.setStatus('current')
otuFecFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 45), )
if mibBuilder.loadTexts: otuFecFacilityHistorical15minTable.setStatus('current')
otuFecFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 45, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "otuFecFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: otuFecFacilityHistorical15minEntry.setStatus('current')
otuFecFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 45, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: otuFecFacilityHistorical15minNumber.setStatus('current')
otuFecFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 45, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical15minES.setStatus('current')
otuFecFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 45, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical15minSES.setStatus('current')
otuFecFacilityHistorical15minCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 45, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical15minCE.setStatus('current')
otuFecFacilityHistorical15minUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 45, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical15minUBE.setStatus('current')
otuFecFacilityHistorical15minBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 45, 1, 6), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical15minBERCE.setStatus('current')
otuFecFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 45, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical15minValidFlag.setStatus('current')
otuFecFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 45, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical15minTimeStamp.setStatus('current')
endOfOtuFecFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOtuFecFacilityHistorical15minTable.setStatus('current')
otuFecFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 47), )
if mibBuilder.loadTexts: otuFecFacilityHistorical1dayTable.setStatus('current')
otuFecFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 47, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "otuFecFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: otuFecFacilityHistorical1dayEntry.setStatus('current')
otuFecFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 47, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: otuFecFacilityHistorical1dayNumber.setStatus('current')
otuFecFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 47, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical1dayES.setStatus('current')
otuFecFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 47, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical1daySES.setStatus('current')
otuFecFacilityHistorical1dayCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 47, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical1dayCE.setStatus('current')
otuFecFacilityHistorical1dayUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 47, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical1dayUBE.setStatus('current')
otuFecFacilityHistorical1dayBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 47, 1, 6), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical1dayBERCE.setStatus('current')
otuFecFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 47, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical1dayValidFlag.setStatus('current')
otuFecFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 47, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: otuFecFacilityHistorical1dayTimeStamp.setStatus('current')
endOfOtuFecFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOtuFecFacilityHistorical1dayTable.setStatus('current')
fecFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 49), )
if mibBuilder.loadTexts: fecFacilityCurrent15minTable.setStatus('current')
fecFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 49, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: fecFacilityCurrent15minEntry.setStatus('current')
fecFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 49, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityCurrent15minSES.setStatus('current')
fecFacilityCurrent15minCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 49, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityCurrent15minCE.setStatus('current')
fecFacilityCurrent15minUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 49, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityCurrent15minUBE.setStatus('current')
fecFacilityCurrent15minBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 49, 1, 4), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityCurrent15minBERCE.setStatus('current')
fecFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 49, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityCurrent15minElapsedTime.setStatus('current')
endOfFecFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFecFacilityCurrent15minTable.setStatus('current')
fecFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 51), )
if mibBuilder.loadTexts: fecFacilityCurrent1dayTable.setStatus('current')
fecFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 51, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: fecFacilityCurrent1dayEntry.setStatus('current')
fecFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 51, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityCurrent1daySES.setStatus('current')
fecFacilityCurrent1dayCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 51, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityCurrent1dayCE.setStatus('current')
fecFacilityCurrent1dayUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 51, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityCurrent1dayUBE.setStatus('current')
fecFacilityCurrent1dayBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 51, 1, 4), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityCurrent1dayBERCE.setStatus('current')
fecFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 51, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityCurrent1dayElapsedTime.setStatus('current')
endOfFecFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFecFacilityCurrent1dayTable.setStatus('current')
fecFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 53), )
if mibBuilder.loadTexts: fecFacilityHistorical15minTable.setStatus('current')
fecFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 53, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "fecFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: fecFacilityHistorical15minEntry.setStatus('current')
fecFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 53, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: fecFacilityHistorical15minNumber.setStatus('current')
fecFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 53, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical15minSES.setStatus('current')
fecFacilityHistorical15minCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 53, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical15minCE.setStatus('current')
fecFacilityHistorical15minUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 53, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical15minUBE.setStatus('current')
fecFacilityHistorical15minBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 53, 1, 5), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical15minBERCE.setStatus('current')
fecFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 53, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical15minValidFlag.setStatus('current')
fecFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 53, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical15minTimeStamp.setStatus('current')
endOfFecFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFecFacilityHistorical15minTable.setStatus('current')
fecFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 55), )
if mibBuilder.loadTexts: fecFacilityHistorical1dayTable.setStatus('current')
fecFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 55, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "fecFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: fecFacilityHistorical1dayEntry.setStatus('current')
fecFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 55, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: fecFacilityHistorical1dayNumber.setStatus('current')
fecFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 55, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical1daySES.setStatus('current')
fecFacilityHistorical1dayCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 55, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical1dayCE.setStatus('current')
fecFacilityHistorical1dayUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 55, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical1dayUBE.setStatus('current')
fecFacilityHistorical1dayBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 55, 1, 5), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical1dayBERCE.setStatus('current')
fecFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 55, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical1dayValidFlag.setStatus('current')
fecFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 55, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fecFacilityHistorical1dayTimeStamp.setStatus('current')
endOfFecFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFecFacilityHistorical1dayTable.setStatus('current')
pcs1FacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 57), )
if mibBuilder.loadTexts: pcs1FacilityCurrent15minTable.setStatus('current')
pcs1FacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 57, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcs1FacilityCurrent15minEntry.setStatus('current')
pcs1FacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 57, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityCurrent15minES.setStatus('current')
pcs1FacilityCurrent15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 57, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityCurrent15minCV.setStatus('current')
pcs1FacilityCurrent15minSE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 57, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityCurrent15minSE.setStatus('current')
pcs1FacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 57, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityCurrent15minElapsedTime.setStatus('current')
endOfPcs1FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs1FacilityCurrent15minTable.setStatus('current')
pcs1FacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 59), )
if mibBuilder.loadTexts: pcs1FacilityCurrent1dayTable.setStatus('current')
pcs1FacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 59, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcs1FacilityCurrent1dayEntry.setStatus('current')
pcs1FacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 59, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityCurrent1dayES.setStatus('current')
pcs1FacilityCurrent1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 59, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityCurrent1dayCV.setStatus('current')
pcs1FacilityCurrent1daySE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 59, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityCurrent1daySE.setStatus('current')
pcs1FacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 59, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityCurrent1dayElapsedTime.setStatus('current')
endOfPcs1FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs1FacilityCurrent1dayTable.setStatus('current')
pcs1FacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 61), )
if mibBuilder.loadTexts: pcs1FacilityHistorical15minTable.setStatus('current')
pcs1FacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 61, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcs1FacilityHistorical15minNumber"))
if mibBuilder.loadTexts: pcs1FacilityHistorical15minEntry.setStatus('current')
pcs1FacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 61, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: pcs1FacilityHistorical15minNumber.setStatus('current')
pcs1FacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 61, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityHistorical15minES.setStatus('current')
pcs1FacilityHistorical15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 61, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityHistorical15minCV.setStatus('current')
pcs1FacilityHistorical15minSE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 61, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityHistorical15minSE.setStatus('current')
pcs1FacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 61, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityHistorical15minValidFlag.setStatus('current')
pcs1FacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 61, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityHistorical15minTimeStamp.setStatus('current')
endOfPcs1FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs1FacilityHistorical15minTable.setStatus('current')
pcs1FacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 63), )
if mibBuilder.loadTexts: pcs1FacilityHistorical1dayTable.setStatus('current')
pcs1FacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 63, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcs1FacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: pcs1FacilityHistorical1dayEntry.setStatus('current')
pcs1FacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 63, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: pcs1FacilityHistorical1dayNumber.setStatus('current')
pcs1FacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 63, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityHistorical1dayES.setStatus('current')
pcs1FacilityHistorical1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 63, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityHistorical1dayCV.setStatus('current')
pcs1FacilityHistorical1daySE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 63, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityHistorical1daySE.setStatus('current')
pcs1FacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 63, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityHistorical1dayValidFlag.setStatus('current')
pcs1FacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 63, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs1FacilityHistorical1dayTimeStamp.setStatus('current')
endOfPcs1FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs1FacilityHistorical1dayTable.setStatus('current')
pcs2FacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 65), )
if mibBuilder.loadTexts: pcs2FacilityCurrent15minTable.setStatus('current')
pcs2FacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 65, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcs2FacilityCurrent15minEntry.setStatus('current')
pcs2FacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 65, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityCurrent15minES.setStatus('current')
pcs2FacilityCurrent15minDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 65, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityCurrent15minDE.setStatus('current')
pcs2FacilityCurrent15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 65, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityCurrent15minCV.setStatus('current')
pcs2FacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 65, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityCurrent15minElapsedTime.setStatus('current')
endOfPcs2FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs2FacilityCurrent15minTable.setStatus('current')
pcs2FacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 67), )
if mibBuilder.loadTexts: pcs2FacilityCurrent1dayTable.setStatus('current')
pcs2FacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 67, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcs2FacilityCurrent1dayEntry.setStatus('current')
pcs2FacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 67, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityCurrent1dayES.setStatus('current')
pcs2FacilityCurrent1dayDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 67, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityCurrent1dayDE.setStatus('current')
pcs2FacilityCurrent1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 67, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityCurrent1dayCV.setStatus('current')
pcs2FacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 67, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityCurrent1dayElapsedTime.setStatus('current')
endOfPcs2FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs2FacilityCurrent1dayTable.setStatus('current')
pcs2FacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 69), )
if mibBuilder.loadTexts: pcs2FacilityHistorical15minTable.setStatus('current')
pcs2FacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 69, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcs2FacilityHistorical15minNumber"))
if mibBuilder.loadTexts: pcs2FacilityHistorical15minEntry.setStatus('current')
pcs2FacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 69, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: pcs2FacilityHistorical15minNumber.setStatus('current')
pcs2FacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 69, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityHistorical15minES.setStatus('current')
pcs2FacilityHistorical15minDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 69, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityHistorical15minDE.setStatus('current')
pcs2FacilityHistorical15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 69, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityHistorical15minCV.setStatus('current')
pcs2FacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 69, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityHistorical15minValidFlag.setStatus('current')
pcs2FacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 69, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityHistorical15minTimeStamp.setStatus('current')
endOfPcs2FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs2FacilityHistorical15minTable.setStatus('current')
pcs2FacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 71), )
if mibBuilder.loadTexts: pcs2FacilityHistorical1dayTable.setStatus('current')
pcs2FacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 71, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcs2FacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: pcs2FacilityHistorical1dayEntry.setStatus('current')
pcs2FacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 71, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: pcs2FacilityHistorical1dayNumber.setStatus('current')
pcs2FacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 71, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityHistorical1dayES.setStatus('current')
pcs2FacilityHistorical1dayDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 71, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityHistorical1dayDE.setStatus('current')
pcs2FacilityHistorical1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 71, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityHistorical1dayCV.setStatus('current')
pcs2FacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 71, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityHistorical1dayValidFlag.setStatus('current')
pcs2FacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 71, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs2FacilityHistorical1dayTimeStamp.setStatus('current')
endOfPcs2FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs2FacilityHistorical1dayTable.setStatus('current')
pcs3FacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 73), )
if mibBuilder.loadTexts: pcs3FacilityCurrent15minTable.setStatus('current')
pcs3FacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 73, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcs3FacilityCurrent15minEntry.setStatus('current')
pcs3FacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 73, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityCurrent15minES.setStatus('current')
pcs3FacilityCurrent15minCVDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 73, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityCurrent15minCVDE.setStatus('current')
pcs3FacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 73, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityCurrent15minElapsedTime.setStatus('current')
endOfPcs3FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs3FacilityCurrent15minTable.setStatus('current')
pcs3FacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 75), )
if mibBuilder.loadTexts: pcs3FacilityCurrent1dayTable.setStatus('current')
pcs3FacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 75, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcs3FacilityCurrent1dayEntry.setStatus('current')
pcs3FacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 75, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityCurrent1dayES.setStatus('current')
pcs3FacilityCurrent1dayCVDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 75, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityCurrent1dayCVDE.setStatus('current')
pcs3FacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 75, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityCurrent1dayElapsedTime.setStatus('current')
endOfPcs3FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs3FacilityCurrent1dayTable.setStatus('current')
pcs3FacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 77), )
if mibBuilder.loadTexts: pcs3FacilityHistorical15minTable.setStatus('current')
pcs3FacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 77, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcs3FacilityHistorical15minNumber"))
if mibBuilder.loadTexts: pcs3FacilityHistorical15minEntry.setStatus('current')
pcs3FacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 77, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: pcs3FacilityHistorical15minNumber.setStatus('current')
pcs3FacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 77, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityHistorical15minES.setStatus('current')
pcs3FacilityHistorical15minCVDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 77, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityHistorical15minCVDE.setStatus('current')
pcs3FacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 77, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityHistorical15minValidFlag.setStatus('current')
pcs3FacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 77, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityHistorical15minTimeStamp.setStatus('current')
endOfPcs3FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs3FacilityHistorical15minTable.setStatus('current')
pcs3FacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 79), )
if mibBuilder.loadTexts: pcs3FacilityHistorical1dayTable.setStatus('current')
pcs3FacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 79, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcs3FacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: pcs3FacilityHistorical1dayEntry.setStatus('current')
pcs3FacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 79, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: pcs3FacilityHistorical1dayNumber.setStatus('current')
pcs3FacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 79, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityHistorical1dayES.setStatus('current')
pcs3FacilityHistorical1dayCVDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 79, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityHistorical1dayCVDE.setStatus('current')
pcs3FacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 79, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityHistorical1dayValidFlag.setStatus('current')
pcs3FacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 79, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs3FacilityHistorical1dayTimeStamp.setStatus('current')
endOfPcs3FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs3FacilityHistorical1dayTable.setStatus('current')
pcs4FacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 81), )
if mibBuilder.loadTexts: pcs4FacilityCurrent15minTable.setStatus('current')
pcs4FacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 81, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcs4FacilityCurrent15minEntry.setStatus('current')
pcs4FacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 81, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityCurrent15minES.setStatus('current')
pcs4FacilityCurrent15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 81, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityCurrent15minCV.setStatus('current')
pcs4FacilityCurrent15minBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 81, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityCurrent15minBBE.setStatus('current')
pcs4FacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 81, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityCurrent15minElapsedTime.setStatus('current')
endOfPcs4FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs4FacilityCurrent15minTable.setStatus('current')
pcs4FacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 83), )
if mibBuilder.loadTexts: pcs4FacilityCurrent1dayTable.setStatus('current')
pcs4FacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 83, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcs4FacilityCurrent1dayEntry.setStatus('current')
pcs4FacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 83, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityCurrent1dayES.setStatus('current')
pcs4FacilityCurrent1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 83, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityCurrent1dayCV.setStatus('current')
pcs4FacilityCurrent1dayBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 83, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityCurrent1dayBBE.setStatus('current')
pcs4FacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 83, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityCurrent1dayElapsedTime.setStatus('current')
endOfPcs4FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 84), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs4FacilityCurrent1dayTable.setStatus('current')
pcs4FacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 85), )
if mibBuilder.loadTexts: pcs4FacilityHistorical15minTable.setStatus('current')
pcs4FacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 85, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcs4FacilityHistorical15minNumber"))
if mibBuilder.loadTexts: pcs4FacilityHistorical15minEntry.setStatus('current')
pcs4FacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 85, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: pcs4FacilityHistorical15minNumber.setStatus('current')
pcs4FacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 85, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityHistorical15minES.setStatus('current')
pcs4FacilityHistorical15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 85, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityHistorical15minCV.setStatus('current')
pcs4FacilityHistorical15minBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 85, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityHistorical15minBBE.setStatus('current')
pcs4FacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 85, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityHistorical15minValidFlag.setStatus('current')
pcs4FacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 85, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityHistorical15minTimeStamp.setStatus('current')
endOfPcs4FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 86), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs4FacilityHistorical15minTable.setStatus('current')
pcs4FacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 87), )
if mibBuilder.loadTexts: pcs4FacilityHistorical1dayTable.setStatus('current')
pcs4FacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 87, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcs4FacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: pcs4FacilityHistorical1dayEntry.setStatus('current')
pcs4FacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 87, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: pcs4FacilityHistorical1dayNumber.setStatus('current')
pcs4FacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 87, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityHistorical1dayES.setStatus('current')
pcs4FacilityHistorical1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 87, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityHistorical1dayCV.setStatus('current')
pcs4FacilityHistorical1dayBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 87, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityHistorical1dayBBE.setStatus('current')
pcs4FacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 87, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityHistorical1dayValidFlag.setStatus('current')
pcs4FacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 87, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcs4FacilityHistorical1dayTimeStamp.setStatus('current')
endOfPcs4FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 88), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcs4FacilityHistorical1dayTable.setStatus('current')
lFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 89), )
if mibBuilder.loadTexts: lFacilityCurrent15minTable.setStatus('current')
lFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 89, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lFacilityCurrent15minEntry.setStatus('current')
lFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 89, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityCurrent15minES.setStatus('current')
lFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 89, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityCurrent15minSES.setStatus('current')
lFacilityCurrent15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 89, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityCurrent15minUAS.setStatus('current')
lFacilityCurrent15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 89, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityCurrent15minCV.setStatus('current')
lFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 89, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityCurrent15minElapsedTime.setStatus('current')
endOfLFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 90), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLFacilityCurrent15minTable.setStatus('current')
lFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 91), )
if mibBuilder.loadTexts: lFacilityCurrent1dayTable.setStatus('current')
lFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 91, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lFacilityCurrent1dayEntry.setStatus('current')
lFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 91, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityCurrent1dayES.setStatus('current')
lFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 91, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityCurrent1daySES.setStatus('current')
lFacilityCurrent1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 91, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityCurrent1dayUAS.setStatus('current')
lFacilityCurrent1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 91, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityCurrent1dayCV.setStatus('current')
lFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 91, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityCurrent1dayElapsedTime.setStatus('current')
endOfLFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLFacilityCurrent1dayTable.setStatus('current')
lFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 93), )
if mibBuilder.loadTexts: lFacilityHistorical15minTable.setStatus('current')
lFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 93, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: lFacilityHistorical15minEntry.setStatus('current')
lFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 93, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: lFacilityHistorical15minNumber.setStatus('current')
lFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 93, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical15minES.setStatus('current')
lFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 93, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical15minSES.setStatus('current')
lFacilityHistorical15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 93, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical15minUAS.setStatus('current')
lFacilityHistorical15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 93, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical15minCV.setStatus('current')
lFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 93, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical15minValidFlag.setStatus('current')
lFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 93, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical15minTimeStamp.setStatus('current')
endOfLFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 94), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLFacilityHistorical15minTable.setStatus('current')
lFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 95), )
if mibBuilder.loadTexts: lFacilityHistorical1dayTable.setStatus('current')
lFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 95, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: lFacilityHistorical1dayEntry.setStatus('current')
lFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 95, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: lFacilityHistorical1dayNumber.setStatus('current')
lFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 95, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical1dayES.setStatus('current')
lFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 95, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical1daySES.setStatus('current')
lFacilityHistorical1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 95, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical1dayUAS.setStatus('current')
lFacilityHistorical1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 95, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical1dayCV.setStatus('current')
lFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 95, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical1dayValidFlag.setStatus('current')
lFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 95, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lFacilityHistorical1dayTimeStamp.setStatus('current')
endOfLFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 96), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLFacilityHistorical1dayTable.setStatus('current')
sFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 97), )
if mibBuilder.loadTexts: sFacilityCurrent15minTable.setStatus('current')
sFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 97, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: sFacilityCurrent15minEntry.setStatus('current')
sFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 97, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityCurrent15minES.setStatus('current')
sFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 97, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityCurrent15minSES.setStatus('current')
sFacilityCurrent15minSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 97, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityCurrent15minSEFS.setStatus('current')
sFacilityCurrent15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 97, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityCurrent15minCV.setStatus('current')
sFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 97, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityCurrent15minElapsedTime.setStatus('current')
endOfSFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 98), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSFacilityCurrent15minTable.setStatus('current')
sFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 99), )
if mibBuilder.loadTexts: sFacilityCurrent1dayTable.setStatus('current')
sFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 99, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: sFacilityCurrent1dayEntry.setStatus('current')
sFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 99, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityCurrent1dayES.setStatus('current')
sFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 99, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityCurrent1daySES.setStatus('current')
sFacilityCurrent1daySEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 99, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityCurrent1daySEFS.setStatus('current')
sFacilityCurrent1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 99, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityCurrent1dayCV.setStatus('current')
sFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 99, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityCurrent1dayElapsedTime.setStatus('current')
endOfSFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSFacilityCurrent1dayTable.setStatus('current')
sFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 101), )
if mibBuilder.loadTexts: sFacilityHistorical15minTable.setStatus('current')
sFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 101, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "sFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: sFacilityHistorical15minEntry.setStatus('current')
sFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 101, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: sFacilityHistorical15minNumber.setStatus('current')
sFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 101, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical15minES.setStatus('current')
sFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 101, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical15minSES.setStatus('current')
sFacilityHistorical15minSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 101, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical15minSEFS.setStatus('current')
sFacilityHistorical15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 101, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical15minCV.setStatus('current')
sFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 101, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical15minValidFlag.setStatus('current')
sFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 101, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical15minTimeStamp.setStatus('current')
endOfSFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSFacilityHistorical15minTable.setStatus('current')
sFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 103), )
if mibBuilder.loadTexts: sFacilityHistorical1dayTable.setStatus('current')
sFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 103, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "sFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: sFacilityHistorical1dayEntry.setStatus('current')
sFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 103, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: sFacilityHistorical1dayNumber.setStatus('current')
sFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 103, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical1dayES.setStatus('current')
sFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 103, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical1daySES.setStatus('current')
sFacilityHistorical1daySEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 103, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical1daySEFS.setStatus('current')
sFacilityHistorical1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 103, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical1dayCV.setStatus('current')
sFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 103, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical1dayValidFlag.setStatus('current')
sFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 103, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sFacilityHistorical1dayTimeStamp.setStatus('current')
endOfSFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSFacilityHistorical1dayTable.setStatus('current')
gfpfrFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 105), )
if mibBuilder.loadTexts: gfpfrFacilityCurrent15minTable.setStatus('current')
gfpfrFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 105, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: gfpfrFacilityCurrent15minEntry.setStatus('current')
gfpfrFacilityCurrent15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 105, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityCurrent15minGoodFrames.setStatus('current')
gfpfrFacilityCurrent15minCHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 105, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityCurrent15minCHecDiscardedFrames.setStatus('current')
gfpfrFacilityCurrent15minTHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 105, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityCurrent15minTHecDiscardedFrames.setStatus('current')
gfpfrFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 105, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityCurrent15minElapsedTime.setStatus('current')
endOfGfpfrFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfGfpfrFacilityCurrent15minTable.setStatus('current')
gfpfrFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 107), )
if mibBuilder.loadTexts: gfpfrFacilityCurrent1dayTable.setStatus('current')
gfpfrFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 107, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: gfpfrFacilityCurrent1dayEntry.setStatus('current')
gfpfrFacilityCurrent1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 107, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityCurrent1dayGoodFrames.setStatus('current')
gfpfrFacilityCurrent1dayCHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 107, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityCurrent1dayCHecDiscardedFrames.setStatus('current')
gfpfrFacilityCurrent1dayTHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 107, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityCurrent1dayTHecDiscardedFrames.setStatus('current')
gfpfrFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 107, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityCurrent1dayElapsedTime.setStatus('current')
endOfGfpfrFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 108), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfGfpfrFacilityCurrent1dayTable.setStatus('current')
gfpfrFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 109), )
if mibBuilder.loadTexts: gfpfrFacilityHistorical15minTable.setStatus('current')
gfpfrFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 109, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "gfpfrFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: gfpfrFacilityHistorical15minEntry.setStatus('current')
gfpfrFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 109, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: gfpfrFacilityHistorical15minNumber.setStatus('current')
gfpfrFacilityHistorical15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 109, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityHistorical15minGoodFrames.setStatus('current')
gfpfrFacilityHistorical15minCHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 109, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityHistorical15minCHecDiscardedFrames.setStatus('current')
gfpfrFacilityHistorical15minTHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 109, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityHistorical15minTHecDiscardedFrames.setStatus('current')
gfpfrFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 109, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityHistorical15minValidFlag.setStatus('current')
gfpfrFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 109, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityHistorical15minTimeStamp.setStatus('current')
endOfGfpfrFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 110), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfGfpfrFacilityHistorical15minTable.setStatus('current')
gfpfrFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 111), )
if mibBuilder.loadTexts: gfpfrFacilityHistorical1dayTable.setStatus('current')
gfpfrFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 111, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "gfpfrFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: gfpfrFacilityHistorical1dayEntry.setStatus('current')
gfpfrFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 111, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: gfpfrFacilityHistorical1dayNumber.setStatus('current')
gfpfrFacilityHistorical1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 111, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityHistorical1dayGoodFrames.setStatus('current')
gfpfrFacilityHistorical1dayCHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 111, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityHistorical1dayCHecDiscardedFrames.setStatus('current')
gfpfrFacilityHistorical1dayTHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 111, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityHistorical1dayTHecDiscardedFrames.setStatus('current')
gfpfrFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 111, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityHistorical1dayValidFlag.setStatus('current')
gfpfrFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 111, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gfpfrFacilityHistorical1dayTimeStamp.setStatus('current')
endOfGfpfrFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 112), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfGfpfrFacilityHistorical1dayTable.setStatus('current')
checfrFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 113), )
if mibBuilder.loadTexts: checfrFacilityCurrent15minTable.setStatus('current')
checfrFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 113, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: checfrFacilityCurrent15minEntry.setStatus('current')
checfrFacilityCurrent15minCoreHecCorrectedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 113, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityCurrent15minCoreHecCorrectedFrames.setStatus('current')
checfrFacilityCurrent15minTypeHecCorrectedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 113, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityCurrent15minTypeHecCorrectedFrames.setStatus('current')
checfrFacilityCurrent15minTypeHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 113, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityCurrent15minTypeHecDiscardedFrames.setStatus('current')
checfrFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 113, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityCurrent15minElapsedTime.setStatus('current')
endOfChecfrFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 114), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfChecfrFacilityCurrent15minTable.setStatus('current')
checfrFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 115), )
if mibBuilder.loadTexts: checfrFacilityCurrent1dayTable.setStatus('current')
checfrFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 115, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: checfrFacilityCurrent1dayEntry.setStatus('current')
checfrFacilityCurrent1dayCoreHecCorrectedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 115, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityCurrent1dayCoreHecCorrectedFrames.setStatus('current')
checfrFacilityCurrent1dayTypeHecCorrectedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 115, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityCurrent1dayTypeHecCorrectedFrames.setStatus('current')
checfrFacilityCurrent1dayTypeHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 115, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityCurrent1dayTypeHecDiscardedFrames.setStatus('current')
checfrFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 115, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityCurrent1dayElapsedTime.setStatus('current')
endOfChecfrFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 116), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfChecfrFacilityCurrent1dayTable.setStatus('current')
checfrFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 117), )
if mibBuilder.loadTexts: checfrFacilityHistorical15minTable.setStatus('current')
checfrFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 117, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "checfrFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: checfrFacilityHistorical15minEntry.setStatus('current')
checfrFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 117, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: checfrFacilityHistorical15minNumber.setStatus('current')
checfrFacilityHistorical15minCoreHecCorrectedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 117, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityHistorical15minCoreHecCorrectedFrames.setStatus('current')
checfrFacilityHistorical15minTypeHecCorrectedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 117, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityHistorical15minTypeHecCorrectedFrames.setStatus('current')
checfrFacilityHistorical15minTypeHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 117, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityHistorical15minTypeHecDiscardedFrames.setStatus('current')
checfrFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 117, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityHistorical15minValidFlag.setStatus('current')
checfrFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 117, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityHistorical15minTimeStamp.setStatus('current')
endOfChecfrFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 118), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfChecfrFacilityHistorical15minTable.setStatus('current')
checfrFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 119), )
if mibBuilder.loadTexts: checfrFacilityHistorical1dayTable.setStatus('current')
checfrFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 119, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "checfrFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: checfrFacilityHistorical1dayEntry.setStatus('current')
checfrFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 119, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: checfrFacilityHistorical1dayNumber.setStatus('current')
checfrFacilityHistorical1dayCoreHecCorrectedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 119, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityHistorical1dayCoreHecCorrectedFrames.setStatus('current')
checfrFacilityHistorical1dayTypeHecCorrectedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 119, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityHistorical1dayTypeHecCorrectedFrames.setStatus('current')
checfrFacilityHistorical1dayTypeHecDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 119, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityHistorical1dayTypeHecDiscardedFrames.setStatus('current')
checfrFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 119, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityHistorical1dayValidFlag.setStatus('current')
checfrFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 119, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checfrFacilityHistorical1dayTimeStamp.setStatus('current')
endOfChecfrFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 120), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfChecfrFacilityHistorical1dayTable.setStatus('current')
discsBlockFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 121), )
if mibBuilder.loadTexts: discsBlockFacilityCurrent15minTable.setStatus('current')
discsBlockFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 121, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: discsBlockFacilityCurrent15minEntry.setStatus('current')
discsBlockFacilityCurrent15minDiscardedSuperblocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 121, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: discsBlockFacilityCurrent15minDiscardedSuperblocks.setStatus('current')
discsBlockFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 121, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: discsBlockFacilityCurrent15minElapsedTime.setStatus('current')
endOfDiscsBlockFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 122), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDiscsBlockFacilityCurrent15minTable.setStatus('current')
discsBlockFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 123), )
if mibBuilder.loadTexts: discsBlockFacilityCurrent1dayTable.setStatus('current')
discsBlockFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 123, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: discsBlockFacilityCurrent1dayEntry.setStatus('current')
discsBlockFacilityCurrent1dayDiscardedSuperblocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 123, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: discsBlockFacilityCurrent1dayDiscardedSuperblocks.setStatus('current')
discsBlockFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 123, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: discsBlockFacilityCurrent1dayElapsedTime.setStatus('current')
endOfDiscsBlockFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 124), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDiscsBlockFacilityCurrent1dayTable.setStatus('current')
discsBlockFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 125), )
if mibBuilder.loadTexts: discsBlockFacilityHistorical15minTable.setStatus('current')
discsBlockFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 125, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "discsBlockFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: discsBlockFacilityHistorical15minEntry.setStatus('current')
discsBlockFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 125, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: discsBlockFacilityHistorical15minNumber.setStatus('current')
discsBlockFacilityHistorical15minDiscardedSuperblocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 125, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: discsBlockFacilityHistorical15minDiscardedSuperblocks.setStatus('current')
discsBlockFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 125, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: discsBlockFacilityHistorical15minValidFlag.setStatus('current')
discsBlockFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 125, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: discsBlockFacilityHistorical15minTimeStamp.setStatus('current')
endOfDiscsBlockFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 126), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDiscsBlockFacilityHistorical15minTable.setStatus('current')
discsBlockFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 127), )
if mibBuilder.loadTexts: discsBlockFacilityHistorical1dayTable.setStatus('current')
discsBlockFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 127, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "discsBlockFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: discsBlockFacilityHistorical1dayEntry.setStatus('current')
discsBlockFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 127, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: discsBlockFacilityHistorical1dayNumber.setStatus('current')
discsBlockFacilityHistorical1dayDiscardedSuperblocks = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 127, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: discsBlockFacilityHistorical1dayDiscardedSuperblocks.setStatus('current')
discsBlockFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 127, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: discsBlockFacilityHistorical1dayValidFlag.setStatus('current')
discsBlockFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 127, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: discsBlockFacilityHistorical1dayTimeStamp.setStatus('current')
endOfDiscsBlockFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 128), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDiscsBlockFacilityHistorical1dayTable.setStatus('current')
l2PortTxFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129), )
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minTable.setStatus('current')
l2PortTxFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minEntry.setStatus('current')
l2PortTxFacilityCurrent15minFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minFramesTrmt.setStatus('current')
l2PortTxFacilityCurrent15minBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minBytesTrmt.setStatus('current')
l2PortTxFacilityCurrent15minBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minBroadcastFramesTrmt.setStatus('current')
l2PortTxFacilityCurrent15minMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minMulticastFramesTrmt.setStatus('current')
l2PortTxFacilityCurrent15minPauseFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minPauseFramesTrmt.setStatus('current')
l2PortTxFacilityCurrent15minBytesFrames64Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minBytesFrames64Trmt.setStatus('current')
l2PortTxFacilityCurrent15minBytesFrames65Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minBytesFrames65Trmt.setStatus('current')
l2PortTxFacilityCurrent15minBytesFrames128Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minBytesFrames128Trmt.setStatus('current')
l2PortTxFacilityCurrent15minBytesFrames256Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minBytesFrames256Trmt.setStatus('current')
l2PortTxFacilityCurrent15minBytesFrames512Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minBytesFrames512Trmt.setStatus('current')
l2PortTxFacilityCurrent15minBytesFrames1024Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minBytesFrames1024Trmt.setStatus('current')
l2PortTxFacilityCurrent15minBytesFrames1519Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minBytesFrames1519Trmt.setStatus('current')
l2PortTxFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 129, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent15minElapsedTime.setStatus('current')
endOfL2ProtTxFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 130), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfL2ProtTxFacilityCurrent15minTable.setStatus('current')
l2PortTxFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131), )
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayTable.setStatus('current')
l2PortTxFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayEntry.setStatus('current')
l2PortTxFacilityCurrent1dayFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayFramesTrmt.setStatus('current')
l2PortTxFacilityCurrent1dayBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayBytesTrmt.setStatus('current')
l2PortTxFacilityCurrent1dayBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayBroadcastFramesTrmt.setStatus('current')
l2PortTxFacilityCurrent1dayMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayMulticastFramesTrmt.setStatus('current')
l2PortTxFacilityCurrent1dayPauseFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayPauseFramesTrmt.setStatus('current')
l2PortTxFacilityCurrent1dayBytesFrames64Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayBytesFrames64Trmt.setStatus('current')
l2PortTxFacilityCurrent1dayBytesFrames65Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayBytesFrames65Trmt.setStatus('current')
l2PortTxFacilityCurrent1dayBytesFrames128Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayBytesFrames128Trmt.setStatus('current')
l2PortTxFacilityCurrent1dayBytesFrames256Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayBytesFrames256Trmt.setStatus('current')
l2PortTxFacilityCurrent1dayBytesFrames512Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayBytesFrames512Trmt.setStatus('current')
l2PortTxFacilityCurrent1dayBytesFrames1024Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayBytesFrames1024Trmt.setStatus('current')
l2PortTxFacilityCurrent1dayBytesFrames1519Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayBytesFrames1519Trmt.setStatus('current')
l2PortTxFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 131, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityCurrent1dayElapsedTime.setStatus('current')
endOfL2PortTxFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 132), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfL2PortTxFacilityCurrent1dayTable.setStatus('current')
l2PortTxFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133), )
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minTable.setStatus('current')
l2PortTxFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "l2PortTxFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minEntry.setStatus('current')
l2PortTxFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minNumber.setStatus('current')
l2PortTxFacilityHistorical15minFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minFramesTrmt.setStatus('current')
l2PortTxFacilityHistorical15minBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minBytesTrmt.setStatus('current')
l2PortTxFacilityHistorical15minBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minBroadcastFramesTrmt.setStatus('current')
l2PortTxFacilityHistorical15minMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minMulticastFramesTrmt.setStatus('current')
l2PortTxFacilityHistorical15minPauseFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minPauseFramesTrmt.setStatus('current')
l2PortTxFacilityHistorical15minBytesFrames64Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minBytesFrames64Trmt.setStatus('current')
l2PortTxFacilityHistorical15minBytesFrames65Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minBytesFrames65Trmt.setStatus('current')
l2PortTxFacilityHistorical15minBytesFrames128Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minBytesFrames128Trmt.setStatus('current')
l2PortTxFacilityHistorical15minBytesFrames256Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minBytesFrames256Trmt.setStatus('current')
l2PortTxFacilityHistorical15minBytesFrames512Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minBytesFrames512Trmt.setStatus('current')
l2PortTxFacilityHistorical15minBytesFrames1024Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minBytesFrames1024Trmt.setStatus('current')
l2PortTxFacilityHistorical15minBytesFrames1519Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 13), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minBytesFrames1519Trmt.setStatus('current')
l2PortTxFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minValidFlag.setStatus('current')
l2PortTxFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 133, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical15minTimeStamp.setStatus('current')
endOfL2PortTxFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 134), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfL2PortTxFacilityHistorical15minTable.setStatus('current')
l2PortTxFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135), )
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayTable.setStatus('current')
l2PortTxFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "l2PortTxFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayEntry.setStatus('current')
l2PortTxFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayNumber.setStatus('current')
l2PortTxFacilityHistorical1dayFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayFramesTrmt.setStatus('current')
l2PortTxFacilityHistorical1dayBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayBytesTrmt.setStatus('current')
l2PortTxFacilityHistorical1dayBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayBroadcastFramesTrmt.setStatus('current')
l2PortTxFacilityHistorical1dayMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayMulticastFramesTrmt.setStatus('current')
l2PortTxFacilityHistorical1dayPauseFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayPauseFramesTrmt.setStatus('current')
l2PortTxFacilityHistorical1dayBytesFrames64Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayBytesFrames64Trmt.setStatus('current')
l2PortTxFacilityHistorical1dayBytesFrames65Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayBytesFrames65Trmt.setStatus('current')
l2PortTxFacilityHistorical1dayBytesFrames128Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayBytesFrames128Trmt.setStatus('current')
l2PortTxFacilityHistorical1dayBytesFrames256Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayBytesFrames256Trmt.setStatus('current')
l2PortTxFacilityHistorical1dayBytesFrames512Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayBytesFrames512Trmt.setStatus('current')
l2PortTxFacilityHistorical1dayBytesFrames1024Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayBytesFrames1024Trmt.setStatus('current')
l2PortTxFacilityHistorical1dayBytesFrames1519Trmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 13), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayBytesFrames1519Trmt.setStatus('current')
l2PortTxFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayValidFlag.setStatus('current')
l2PortTxFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 135, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortTxFacilityHistorical1dayTimeStamp.setStatus('current')
endOfL2PortTxFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 136), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfL2PortTxFacilityHistorical1dayTable.setStatus('current')
l2PortRxFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137), )
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minTable.setStatus('current')
l2PortRxFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minEntry.setStatus('current')
l2PortRxFacilityCurrent15minFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minFramesRcv.setStatus('current')
l2PortRxFacilityCurrent15minBytesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minBytesRcv.setStatus('current')
l2PortRxFacilityCurrent15minBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minBroadcastFramesRcv.setStatus('current')
l2PortRxFacilityCurrent15minMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minMulticastFramesRcv.setStatus('current')
l2PortRxFacilityCurrent15minCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minCrcErrorsRcv.setStatus('current')
l2PortRxFacilityCurrent15minUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minUndersizedFramesRcv.setStatus('current')
l2PortRxFacilityCurrent15minOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minOversizedFramesRcv.setStatus('current')
l2PortRxFacilityCurrent15minPauseFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minPauseFramesRcv.setStatus('current')
l2PortRxFacilityCurrent15minBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minBytesFrames64Rcv.setStatus('current')
l2PortRxFacilityCurrent15minBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minBytesFrames65Rcv.setStatus('current')
l2PortRxFacilityCurrent15minBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minBytesFrames128Rcv.setStatus('current')
l2PortRxFacilityCurrent15minBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minBytesFrames256Rcv.setStatus('current')
l2PortRxFacilityCurrent15minBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 13), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minBytesFrames512Rcv.setStatus('current')
l2PortRxFacilityCurrent15minBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 14), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minBytesFrames1024Rcv.setStatus('current')
l2PortRxFacilityCurrent15minBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 15), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minBytesFrames1519Rcv.setStatus('current')
l2PortRxFacilityCurrent15minInterPackJunkBytesFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 16), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minInterPackJunkBytesFramesRcv.setStatus('current')
l2PortRxFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 137, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent15minElapsedTime.setStatus('current')
endOfL2PortRxFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 138), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfL2PortRxFacilityCurrent15minTable.setStatus('current')
l2PortRxFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139), )
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayTable.setStatus('current')
l2PortRxFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayEntry.setStatus('current')
l2PortRxFacilityCurrent1dayFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayFramesRcv.setStatus('current')
l2PortRxFacilityCurrent1dayBytesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayBytesRcv.setStatus('current')
l2PortRxFacilityCurrent1dayBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayBroadcastFramesRcv.setStatus('current')
l2PortRxFacilityCurrent1dayMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayMulticastFramesRcv.setStatus('current')
l2PortRxFacilityCurrent1dayCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayCrcErrorsRcv.setStatus('current')
l2PortRxFacilityCurrent1dayUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayUndersizedFramesRcv.setStatus('current')
l2PortRxFacilityCurrent1dayOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayOversizedFramesRcv.setStatus('current')
l2PortRxFacilityCurrent1dayPauseFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayPauseFramesRcv.setStatus('current')
l2PortRxFacilityCurrent1dayBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayBytesFrames64Rcv.setStatus('current')
l2PortRxFacilityCurrent1dayBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayBytesFrames65Rcv.setStatus('current')
l2PortRxFacilityCurrent1dayBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayBytesFrames128Rcv.setStatus('current')
l2PortRxFacilityCurrent1dayBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayBytesFrames256Rcv.setStatus('current')
l2PortRxFacilityCurrent1dayBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 13), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayBytesFrames512Rcv.setStatus('current')
l2PortRxFacilityCurrent1dayBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 14), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayBytesFrames1024Rcv.setStatus('current')
l2PortRxFacilityCurrent1dayBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 15), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayBytesFrames1519Rcv.setStatus('current')
l2PortRxFacilityCurrent1dayInterPackJunkBytesFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 16), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayInterPackJunkBytesFramesRcv.setStatus('current')
l2PortRxFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 139, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityCurrent1dayElapsedTime.setStatus('current')
endOfL2PortRxFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 140), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfL2PortRxFacilityCurrent1dayTable.setStatus('current')
l2PortRxFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141), )
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minTable.setStatus('current')
l2PortRxFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "l2PortRxFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minEntry.setStatus('current')
l2PortRxFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minNumber.setStatus('current')
l2PortRxFacilityHistorical15minFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minFramesRcv.setStatus('current')
l2PortRxFacilityHistorical15minBytesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minBytesRcv.setStatus('current')
l2PortRxFacilityHistorical15minBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minBroadcastFramesRcv.setStatus('current')
l2PortRxFacilityHistorical15minMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minMulticastFramesRcv.setStatus('current')
l2PortRxFacilityHistorical15minCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minCrcErrorsRcv.setStatus('current')
l2PortRxFacilityHistorical15minUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minUndersizedFramesRcv.setStatus('current')
l2PortRxFacilityHistorical15minOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minOversizedFramesRcv.setStatus('current')
l2PortRxFacilityHistorical15minPauseFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minPauseFramesRcv.setStatus('current')
l2PortRxFacilityHistorical15minBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minBytesFrames64Rcv.setStatus('current')
l2PortRxFacilityHistorical15minBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minBytesFrames65Rcv.setStatus('current')
l2PortRxFacilityHistorical15minBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minBytesFrames128Rcv.setStatus('current')
l2PortRxFacilityHistorical15minBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 13), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minBytesFrames256Rcv.setStatus('current')
l2PortRxFacilityHistorical15minBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 14), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minBytesFrames512Rcv.setStatus('current')
l2PortRxFacilityHistorical15minBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 15), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minBytesFrames1024Rcv.setStatus('current')
l2PortRxFacilityHistorical15minBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 16), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minBytesFrames1519Rcv.setStatus('current')
l2PortRxFacilityHistorical15minInterPackJunkBytesFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 17), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minInterPackJunkBytesFramesRcv.setStatus('current')
l2PortRxFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minValidFlag.setStatus('current')
l2PortRxFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 141, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical15minTimeStamp.setStatus('current')
endOfL2PortRxFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 142), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfL2PortRxFacilityHistorical15minTable.setStatus('current')
l2PortRxFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143), )
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayTable.setStatus('current')
l2PortRxFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "l2PortRxFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayEntry.setStatus('current')
l2PortRxFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayNumber.setStatus('current')
l2PortRxFacilityHistorical1dayFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayFramesRcv.setStatus('current')
l2PortRxFacilityHistorical1dayBytesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayBytesRcv.setStatus('current')
l2PortRxFacilityHistorical1dayBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayBroadcastFramesRcv.setStatus('current')
l2PortRxFacilityHistorical1dayMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayMulticastFramesRcv.setStatus('current')
l2PortRxFacilityHistorical1dayCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayCrcErrorsRcv.setStatus('current')
l2PortRxFacilityHistorical1dayUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayUndersizedFramesRcv.setStatus('current')
l2PortRxFacilityHistorical1dayOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayOversizedFramesRcv.setStatus('current')
l2PortRxFacilityHistorical1dayPauseFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayPauseFramesRcv.setStatus('current')
l2PortRxFacilityHistorical1dayBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayBytesFrames64Rcv.setStatus('current')
l2PortRxFacilityHistorical1dayBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayBytesFrames65Rcv.setStatus('current')
l2PortRxFacilityHistorical1dayBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayBytesFrames128Rcv.setStatus('current')
l2PortRxFacilityHistorical1dayBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 13), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayBytesFrames256Rcv.setStatus('current')
l2PortRxFacilityHistorical1dayBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 14), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayBytesFrames512Rcv.setStatus('current')
l2PortRxFacilityHistorical1dayBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 15), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayBytesFrames1024Rcv.setStatus('current')
l2PortRxFacilityHistorical1dayBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 16), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayBytesFrames1519Rcv.setStatus('current')
l2PortRxFacilityHistorical1dayInterPackJunkBytesFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 17), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayInterPackJunkBytesFramesRcv.setStatus('current')
l2PortRxFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayValidFlag.setStatus('current')
l2PortRxFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 143, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2PortRxFacilityHistorical1dayTimeStamp.setStatus('current')
endOfL2PortRxFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 144), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfL2PortRxFacilityHistorical1dayTable.setStatus('current')
frRcv1FacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 145), )
if mibBuilder.loadTexts: frRcv1FacilityCurrent15minTable.setStatus('current')
frRcv1FacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 145, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frRcv1FacilityCurrent15minEntry.setStatus('current')
frRcv1FacilityCurrent15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 145, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent15minGoodFrames.setStatus('current')
frRcv1FacilityCurrent15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 145, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent15minPauseFrames.setStatus('current')
frRcv1FacilityCurrent15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 145, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent15minCrcFrames.setStatus('current')
frRcv1FacilityCurrent15minDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 145, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent15minDiscardedFrames.setStatus('current')
frRcv1FacilityCurrent15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 145, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent15minBytes.setStatus('current')
frRcv1FacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 145, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent15minElapsedTime.setStatus('current')
endOfFrRcv1FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 146), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv1FacilityCurrent15minTable.setStatus('current')
frRcv1FacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 147), )
if mibBuilder.loadTexts: frRcv1FacilityCurrent1dayTable.setStatus('current')
frRcv1FacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 147, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frRcv1FacilityCurrent1dayEntry.setStatus('current')
frRcv1FacilityCurrent1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 147, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent1dayGoodFrames.setStatus('current')
frRcv1FacilityCurrent1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 147, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent1dayPauseFrames.setStatus('current')
frRcv1FacilityCurrent1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 147, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent1dayCrcFrames.setStatus('current')
frRcv1FacilityCurrent1dayDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 147, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent1dayDiscardedFrames.setStatus('current')
frRcv1FacilityCurrent1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 147, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent1dayBytes.setStatus('current')
frRcv1FacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 147, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityCurrent1dayElapsedTime.setStatus('current')
endOfFrRcv1FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 148), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv1FacilityCurrent1dayTable.setStatus('current')
frRcv1FacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 149), )
if mibBuilder.loadTexts: frRcv1FacilityHistorical15minTable.setStatus('current')
frRcv1FacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 149, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv1FacilityHistorical15minNumber"))
if mibBuilder.loadTexts: frRcv1FacilityHistorical15minEntry.setStatus('current')
frRcv1FacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 149, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: frRcv1FacilityHistorical15minNumber.setStatus('current')
frRcv1FacilityHistorical15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 149, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical15minGoodFrames.setStatus('current')
frRcv1FacilityHistorical15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 149, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical15minPauseFrames.setStatus('current')
frRcv1FacilityHistorical15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 149, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical15minCrcFrames.setStatus('current')
frRcv1FacilityHistorical15minDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 149, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical15minDiscardedFrames.setStatus('current')
frRcv1FacilityHistorical15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 149, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical15minBytes.setStatus('current')
frRcv1FacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 149, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical15minValidFlag.setStatus('current')
frRcv1FacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 149, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical15minTimeStamp.setStatus('current')
endOfFrRcv1FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 150), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv1FacilityHistorical15minTable.setStatus('current')
frRcv1FacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 151), )
if mibBuilder.loadTexts: frRcv1FacilityHistorical1dayTable.setStatus('current')
frRcv1FacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 151, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv1FacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: frRcv1FacilityHistorical1dayEntry.setStatus('current')
frRcv1FacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 151, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: frRcv1FacilityHistorical1dayNumber.setStatus('current')
frRcv1FacilityHistorical1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 151, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical1dayGoodFrames.setStatus('current')
frRcv1FacilityHistorical1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 151, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical1dayPauseFrames.setStatus('current')
frRcv1FacilityHistorical1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 151, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical1dayCrcFrames.setStatus('current')
frRcv1FacilityHistorical1dayDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 151, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical1dayDiscardedFrames.setStatus('current')
frRcv1FacilityHistorical1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 151, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical1dayBytes.setStatus('current')
frRcv1FacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 151, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical1dayValidFlag.setStatus('current')
frRcv1FacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 151, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv1FacilityHistorical1dayTimeStamp.setStatus('current')
endOfFrRcv1FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 152), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv1FacilityHistorical1dayTable.setStatus('current')
frRcv2FacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 153), )
if mibBuilder.loadTexts: frRcv2FacilityCurrent15minTable.setStatus('current')
frRcv2FacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 153, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frRcv2FacilityCurrent15minEntry.setStatus('current')
frRcv2FacilityCurrent15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 153, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityCurrent15minGoodFrames.setStatus('current')
frRcv2FacilityCurrent15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 153, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityCurrent15minPauseFrames.setStatus('current')
frRcv2FacilityCurrent15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 153, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityCurrent15minCrcFrames.setStatus('current')
frRcv2FacilityCurrent15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 153, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityCurrent15minBytes.setStatus('current')
frRcv2FacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 153, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityCurrent15minElapsedTime.setStatus('current')
endOfFrRcv2FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 154), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2FacilityCurrent15minTable.setStatus('current')
frRcv2FacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 155), )
if mibBuilder.loadTexts: frRcv2FacilityCurrent1dayTable.setStatus('current')
frRcv2FacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 155, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frRcv2FacilityCurrent1dayEntry.setStatus('current')
frRcv2FacilityCurrent1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 155, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityCurrent1dayGoodFrames.setStatus('current')
frRcv2FacilityCurrent1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 155, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityCurrent1dayPauseFrames.setStatus('current')
frRcv2FacilityCurrent1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 155, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityCurrent1dayCrcFrames.setStatus('current')
frRcv2FacilityCurrent1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 155, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityCurrent1dayBytes.setStatus('current')
frRcv2FacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 155, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityCurrent1dayElapsedTime.setStatus('current')
endOfFrRcv2FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 156), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2FacilityCurrent1dayTable.setStatus('current')
frRcv2FacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 157), )
if mibBuilder.loadTexts: frRcv2FacilityHistorical15minTable.setStatus('current')
frRcv2FacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 157, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv2FacilityHistorical15minNumber"))
if mibBuilder.loadTexts: frRcv2FacilityHistorical15minEntry.setStatus('current')
frRcv2FacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 157, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: frRcv2FacilityHistorical15minNumber.setStatus('current')
frRcv2FacilityHistorical15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 157, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical15minGoodFrames.setStatus('current')
frRcv2FacilityHistorical15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 157, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical15minPauseFrames.setStatus('current')
frRcv2FacilityHistorical15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 157, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical15minCrcFrames.setStatus('current')
frRcv2FacilityHistorical15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 157, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical15minBytes.setStatus('current')
frRcv2FacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 157, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical15minValidFlag.setStatus('current')
frRcv2FacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 157, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical15minTimeStamp.setStatus('current')
endOfFrRcv2FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 158), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2FacilityHistorical15minTable.setStatus('current')
frRcv2FacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 159), )
if mibBuilder.loadTexts: frRcv2FacilityHistorical1dayTable.setStatus('current')
frRcv2FacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 159, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv2FacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: frRcv2FacilityHistorical1dayEntry.setStatus('current')
frRcv2FacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 159, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: frRcv2FacilityHistorical1dayNumber.setStatus('current')
frRcv2FacilityHistorical1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 159, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical1dayGoodFrames.setStatus('current')
frRcv2FacilityHistorical1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 159, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical1dayPauseFrames.setStatus('current')
frRcv2FacilityHistorical1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 159, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical1dayCrcFrames.setStatus('current')
frRcv2FacilityHistorical1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 159, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical1dayBytes.setStatus('current')
frRcv2FacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 159, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical1dayValidFlag.setStatus('current')
frRcv2FacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 159, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2FacilityHistorical1dayTimeStamp.setStatus('current')
endOfFrRcv2FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 160), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2FacilityHistorical1dayTable.setStatus('current')
frRcv3FacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161), )
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minTable.setStatus('current')
frRcv3FacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minEntry.setStatus('current')
frRcv3FacilityCurrent15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minGoodFrames.setStatus('current')
frRcv3FacilityCurrent15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minPauseFrames.setStatus('current')
frRcv3FacilityCurrent15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minCrcFrames.setStatus('current')
frRcv3FacilityCurrent15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minBytes.setStatus('current')
frRcv3FacilityCurrent15minBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minBroadcastFramesRcv.setStatus('current')
frRcv3FacilityCurrent15minMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minMulticastFramesRcv.setStatus('current')
frRcv3FacilityCurrent15minUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minUndersizedFramesRcv.setStatus('current')
frRcv3FacilityCurrent15minOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minOversizedFramesRcv.setStatus('current')
frRcv3FacilityCurrent15minFragmentFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minFragmentFramesRcv.setStatus('current')
frRcv3FacilityCurrent15minJabberFrameRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minJabberFrameRcv.setStatus('current')
frRcv3FacilityCurrent15minControlFrameRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minControlFrameRcv.setStatus('current')
frRcv3FacilityCurrent15minBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minBytesFrames64Rcv.setStatus('current')
frRcv3FacilityCurrent15minBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 13), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minBytesFrames65Rcv.setStatus('current')
frRcv3FacilityCurrent15minBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 14), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minBytesFrames128Rcv.setStatus('current')
frRcv3FacilityCurrent15minBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 15), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minBytesFrames256Rcv.setStatus('current')
frRcv3FacilityCurrent15minBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 16), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minBytesFrames512Rcv.setStatus('current')
frRcv3FacilityCurrent15minBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 17), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minBytesFrames1024Rcv.setStatus('current')
frRcv3FacilityCurrent15minBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 18), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minBytesFrames1519Rcv.setStatus('current')
frRcv3FacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 161, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent15minElapsedTime.setStatus('current')
endOfFrRcv3FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 162), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv3FacilityCurrent15minTable.setStatus('current')
frRcv3FacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163), )
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayTable.setStatus('current')
frRcv3FacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayEntry.setStatus('current')
frRcv3FacilityCurrent1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayGoodFrames.setStatus('current')
frRcv3FacilityCurrent1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayPauseFrames.setStatus('current')
frRcv3FacilityCurrent1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayCrcFrames.setStatus('current')
frRcv3FacilityCurrent1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayBytes.setStatus('current')
frRcv3FacilityCurrent1dayBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayBroadcastFramesRcv.setStatus('current')
frRcv3FacilityCurrent1dayMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayMulticastFramesRcv.setStatus('current')
frRcv3FacilityCurrent1dayUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayUndersizedFramesRcv.setStatus('current')
frRcv3FacilityCurrent1dayOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayOversizedFramesRcv.setStatus('current')
frRcv3FacilityCurrent1dayFragmentFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayFragmentFramesRcv.setStatus('current')
frRcv3FacilityCurrent1dayJabberFrameRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayJabberFrameRcv.setStatus('current')
frRcv3FacilityCurrent1dayControlFrameRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayControlFrameRcv.setStatus('current')
frRcv3FacilityCurrent1dayBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayBytesFrames64Rcv.setStatus('current')
frRcv3FacilityCurrent1dayBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 13), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayBytesFrames65Rcv.setStatus('current')
frRcv3FacilityCurrent1dayBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 14), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayBytesFrames128Rcv.setStatus('current')
frRcv3FacilityCurrent1dayBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 15), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayBytesFrames256Rcv.setStatus('current')
frRcv3FacilityCurrent1dayBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 16), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayBytesFrames512Rcv.setStatus('current')
frRcv3FacilityCurrent1dayBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 17), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayBytesFrames1024Rcv.setStatus('current')
frRcv3FacilityCurrent1dayBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 18), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayBytesFrames1519Rcv.setStatus('current')
frRcv3FacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 163, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityCurrent1dayElapsedTime.setStatus('current')
endOfFrRcv3FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 164), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv3FacilityCurrent1dayTable.setStatus('current')
frRcv3FacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165), )
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minTable.setStatus('current')
frRcv3FacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv3FacilityHistorical15minNumber"))
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minEntry.setStatus('current')
frRcv3FacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minNumber.setStatus('current')
frRcv3FacilityHistorical15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minGoodFrames.setStatus('current')
frRcv3FacilityHistorical15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minPauseFrames.setStatus('current')
frRcv3FacilityHistorical15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minCrcFrames.setStatus('current')
frRcv3FacilityHistorical15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minBytes.setStatus('current')
frRcv3FacilityHistorical15minBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minBroadcastFramesRcv.setStatus('current')
frRcv3FacilityHistorical15minMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minMulticastFramesRcv.setStatus('current')
frRcv3FacilityHistorical15minUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minUndersizedFramesRcv.setStatus('current')
frRcv3FacilityHistorical15minOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minOversizedFramesRcv.setStatus('current')
frRcv3FacilityHistorical15minFragmentFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minFragmentFramesRcv.setStatus('current')
frRcv3FacilityHistorical15minJabberFrameRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minJabberFrameRcv.setStatus('current')
frRcv3FacilityHistorical15minControlFrameRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minControlFrameRcv.setStatus('current')
frRcv3FacilityHistorical15minBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 13), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minBytesFrames64Rcv.setStatus('current')
frRcv3FacilityHistorical15minBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 14), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minBytesFrames65Rcv.setStatus('current')
frRcv3FacilityHistorical15minBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 15), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minBytesFrames128Rcv.setStatus('current')
frRcv3FacilityHistorical15minBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 16), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minBytesFrames256Rcv.setStatus('current')
frRcv3FacilityHistorical15minBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 17), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minBytesFrames512Rcv.setStatus('current')
frRcv3FacilityHistorical15minBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 18), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minBytesFrames1024Rcv.setStatus('current')
frRcv3FacilityHistorical15minBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 19), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minBytesFrames1519Rcv.setStatus('current')
frRcv3FacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minValidFlag.setStatus('current')
frRcv3FacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 165, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical15minTimeStamp.setStatus('current')
endOfFrRcv3FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 166), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv3FacilityHistorical15minTable.setStatus('current')
frRcv3FacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167), )
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayTable.setStatus('current')
frRcv3FacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv3FacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayEntry.setStatus('current')
frRcv3FacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayNumber.setStatus('current')
frRcv3FacilityHistorical1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayGoodFrames.setStatus('current')
frRcv3FacilityHistorical1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayPauseFrames.setStatus('current')
frRcv3FacilityHistorical1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayCrcFrames.setStatus('current')
frRcv3FacilityHistorical1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayBytes.setStatus('current')
frRcv3FacilityHistorical1dayBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayBroadcastFramesRcv.setStatus('current')
frRcv3FacilityHistorical1dayMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayMulticastFramesRcv.setStatus('current')
frRcv3FacilityHistorical1dayUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayUndersizedFramesRcv.setStatus('current')
frRcv3FacilityHistorical1dayOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 9), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayOversizedFramesRcv.setStatus('current')
frRcv3FacilityHistorical1dayFragmentFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 10), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayFragmentFramesRcv.setStatus('current')
frRcv3FacilityHistorical1dayJabberFrameRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 11), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayJabberFrameRcv.setStatus('current')
frRcv3FacilityHistorical1dayControlFrameRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 12), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayControlFrameRcv.setStatus('current')
frRcv3FacilityHistorical1dayBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 13), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayBytesFrames64Rcv.setStatus('current')
frRcv3FacilityHistorical1dayBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 14), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayBytesFrames65Rcv.setStatus('current')
frRcv3FacilityHistorical1dayBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 15), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayBytesFrames128Rcv.setStatus('current')
frRcv3FacilityHistorical1dayBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 16), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayBytesFrames256Rcv.setStatus('current')
frRcv3FacilityHistorical1dayBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 17), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayBytesFrames512Rcv.setStatus('current')
frRcv3FacilityHistorical1dayBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 18), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayBytesFrames1024Rcv.setStatus('current')
frRcv3FacilityHistorical1dayBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 19), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayBytesFrames1519Rcv.setStatus('current')
frRcv3FacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayValidFlag.setStatus('current')
frRcv3FacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 167, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv3FacilityHistorical1dayTimeStamp.setStatus('current')
endOfFrRcv3FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 168), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv3FacilityHistorical1dayTable.setStatus('current')
dsFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 169), )
if mibBuilder.loadTexts: dsFacilityCurrent15minTable.setStatus('current')
dsFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 169, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: dsFacilityCurrent15minEntry.setStatus('current')
dsFacilityCurrent15minDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 169, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsFacilityCurrent15minDS.setStatus('current')
dsFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 169, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsFacilityCurrent15minElapsedTime.setStatus('current')
endOfDsFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 170), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDsFacilityCurrent15minTable.setStatus('current')
dsFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 171), )
if mibBuilder.loadTexts: dsFacilityCurrent1dayTable.setStatus('current')
dsFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 171, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: dsFacilityCurrent1dayEntry.setStatus('current')
dsFacilityCurrent1dayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 171, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsFacilityCurrent1dayDS.setStatus('current')
dsFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 171, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsFacilityCurrent1dayElapsedTime.setStatus('current')
endOfDsFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 172), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDsFacilityCurrent1dayTable.setStatus('current')
dsFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 173), )
if mibBuilder.loadTexts: dsFacilityHistorical15minTable.setStatus('current')
dsFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 173, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "dsFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: dsFacilityHistorical15minEntry.setStatus('current')
dsFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 173, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: dsFacilityHistorical15minNumber.setStatus('current')
dsFacilityHistorical15minDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 173, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsFacilityHistorical15minDS.setStatus('current')
dsFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 173, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsFacilityHistorical15minValidFlag.setStatus('current')
dsFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 173, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsFacilityHistorical15minTimeStamp.setStatus('current')
endOfDsFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 174), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDsFacilityHistorical15minTable.setStatus('current')
dsFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 175), )
if mibBuilder.loadTexts: dsFacilityHistorical1dayTable.setStatus('current')
dsFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 175, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "dsFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: dsFacilityHistorical1dayEntry.setStatus('current')
dsFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 175, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: dsFacilityHistorical1dayNumber.setStatus('current')
dsFacilityHistorical1dayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 175, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsFacilityHistorical1dayDS.setStatus('current')
dsFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 175, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsFacilityHistorical1dayValidFlag.setStatus('current')
dsFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 175, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsFacilityHistorical1dayTimeStamp.setStatus('current')
endOfDsFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 176), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDsFacilityHistorical1dayTable.setStatus('current')
muxFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 177), )
if mibBuilder.loadTexts: muxFacilityCurrent15minTable.setStatus('current')
muxFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 177, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: muxFacilityCurrent15minEntry.setStatus('current')
muxFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 177, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityCurrent15minES.setStatus('current')
muxFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 177, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityCurrent15minSES.setStatus('current')
muxFacilityCurrent15minCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 177, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityCurrent15minCrc.setStatus('current')
muxFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 177, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityCurrent15minElapsedTime.setStatus('current')
endOfMuxFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 178), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMuxFacilityCurrent15minTable.setStatus('current')
muxFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 179), )
if mibBuilder.loadTexts: muxFacilityCurrent1dayTable.setStatus('current')
muxFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 179, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: muxFacilityCurrent1dayEntry.setStatus('current')
muxFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 179, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityCurrent1dayES.setStatus('current')
muxFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 179, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityCurrent1daySES.setStatus('current')
muxFacilityCurrent1dayCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 179, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityCurrent1dayCrc.setStatus('current')
muxFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 179, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityCurrent1dayElapsedTime.setStatus('current')
endOfMuxFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 180), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMuxFacilityCurrent1dayTable.setStatus('current')
muxFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 181), )
if mibBuilder.loadTexts: muxFacilityHistorical15minTable.setStatus('current')
muxFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 181, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "muxFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: muxFacilityHistorical15minEntry.setStatus('current')
muxFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 181, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: muxFacilityHistorical15minNumber.setStatus('current')
muxFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 181, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityHistorical15minES.setStatus('current')
muxFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 181, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityHistorical15minSES.setStatus('current')
muxFacilityHistorical15minCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 181, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityHistorical15minCrc.setStatus('current')
muxFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 181, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityHistorical15minValidFlag.setStatus('current')
muxFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 181, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityHistorical15minTimeStamp.setStatus('current')
endOfMuxFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 182), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMuxFacilityHistorical15minTable.setStatus('current')
muxFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 183), )
if mibBuilder.loadTexts: muxFacilityHistorical1dayTable.setStatus('current')
muxFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 183, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "muxFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: muxFacilityHistorical1dayEntry.setStatus('current')
muxFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 183, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: muxFacilityHistorical1dayNumber.setStatus('current')
muxFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 183, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityHistorical1dayES.setStatus('current')
muxFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 183, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityHistorical1daySES.setStatus('current')
muxFacilityHistorical1dayCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 183, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityHistorical1dayCrc.setStatus('current')
muxFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 183, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityHistorical1dayValidFlag.setStatus('current')
muxFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 183, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: muxFacilityHistorical1dayTimeStamp.setStatus('current')
endOfMuxFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 184), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMuxFacilityHistorical1dayTable.setStatus('current')
frTrmt1FacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 185), )
if mibBuilder.loadTexts: frTrmt1FacilityCurrent15minTable.setStatus('current')
frTrmt1FacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 185, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frTrmt1FacilityCurrent15minEntry.setStatus('current')
frTrmt1FacilityCurrent15minGoodFramesx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 185, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityCurrent15minGoodFramesx.setStatus('current')
frTrmt1FacilityCurrent15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 185, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityCurrent15minPauseFrames.setStatus('current')
frTrmt1FacilityCurrent15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 185, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityCurrent15minBytes.setStatus('current')
frTrmt1FacilityCurrent15minCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 185, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityCurrent15minCrcFramesEgress.setStatus('current')
frTrmt1FacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 185, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityCurrent15minElapsedTime.setStatus('current')
endOfFrTrmt1FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 186), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrTrmt1FacilityCurrent15minTable.setStatus('current')
frTrmt1FacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 187), )
if mibBuilder.loadTexts: frTrmt1FacilityCurrent1dayTable.setStatus('current')
frTrmt1FacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 187, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frTrmt1FacilityCurrent1dayEntry.setStatus('current')
frTrmt1FacilityCurrent1dayGoodFramesx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 187, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityCurrent1dayGoodFramesx.setStatus('current')
frTrmt1FacilityCurrent1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 187, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityCurrent1dayPauseFrames.setStatus('current')
frTrmt1FacilityCurrent1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 187, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityCurrent1dayBytes.setStatus('current')
frTrmt1FacilityCurrent1dayCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 187, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityCurrent1dayCrcFramesEgress.setStatus('current')
frTrmt1FacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 187, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityCurrent1dayElapsedTime.setStatus('current')
endOfFrTrmt1FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 188), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrTrmt1FacilityCurrent1dayTable.setStatus('current')
frTrmt1FacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 189), )
if mibBuilder.loadTexts: frTrmt1FacilityHistorical15minTable.setStatus('current')
frTrmt1FacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 189, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frTrmt1FacilityHistorical15minNumber"))
if mibBuilder.loadTexts: frTrmt1FacilityHistorical15minEntry.setStatus('current')
frTrmt1FacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 189, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: frTrmt1FacilityHistorical15minNumber.setStatus('current')
frTrmt1FacilityHistorical15minGoodFramesx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 189, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical15minGoodFramesx.setStatus('current')
frTrmt1FacilityHistorical15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 189, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical15minPauseFrames.setStatus('current')
frTrmt1FacilityHistorical15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 189, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical15minBytes.setStatus('current')
frTrmt1FacilityHistorical15minCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 189, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical15minCrcFramesEgress.setStatus('current')
frTrmt1FacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 189, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical15minValidFlag.setStatus('current')
frTrmt1FacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 189, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical15minTimeStamp.setStatus('current')
endOfFrTrmt1FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 190), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrTrmt1FacilityHistorical15minTable.setStatus('current')
frTrmt1FacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 191), )
if mibBuilder.loadTexts: frTrmt1FacilityHistorical1dayTable.setStatus('current')
frTrmt1FacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 191, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frTrmt1FacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: frTrmt1FacilityHistorical1dayEntry.setStatus('current')
frTrmt1FacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 191, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: frTrmt1FacilityHistorical1dayNumber.setStatus('current')
frTrmt1FacilityHistorical1dayGoodFramesx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 191, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical1dayGoodFramesx.setStatus('current')
frTrmt1FacilityHistorical1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 191, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical1dayPauseFrames.setStatus('current')
frTrmt1FacilityHistorical1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 191, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical1dayBytes.setStatus('current')
frTrmt1FacilityHistorical1dayCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 191, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical1dayCrcFramesEgress.setStatus('current')
frTrmt1FacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 191, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical1dayValidFlag.setStatus('current')
frTrmt1FacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 191, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt1FacilityHistorical1dayTimeStamp.setStatus('current')
endOfFrTrmt1FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 192), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrTrmt1FacilityHistorical1dayTable.setStatus('current')
sarLinkTrmtFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 193), )
if mibBuilder.loadTexts: sarLinkTrmtFacilityCurrent15minTable.setStatus('current')
sarLinkTrmtFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 193, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: sarLinkTrmtFacilityCurrent15minEntry.setStatus('current')
sarLinkTrmtFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 193, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityCurrent15minES.setStatus('current')
sarLinkTrmtFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 193, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityCurrent15minSES.setStatus('current')
sarLinkTrmtFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 193, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityCurrent15minElapsedTime.setStatus('current')
endOfSarLinkTrmt1FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 194), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSarLinkTrmt1FacilityCurrent15minTable.setStatus('current')
sarLinkTrmtFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 195), )
if mibBuilder.loadTexts: sarLinkTrmtFacilityCurrent1dayTable.setStatus('current')
sarLinkTrmtFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 195, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: sarLinkTrmtFacilityCurrent1dayEntry.setStatus('current')
sarLinkTrmtFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 195, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityCurrent1dayES.setStatus('current')
sarLinkTrmtFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 195, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityCurrent1daySES.setStatus('current')
sarLinkTrmtFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 195, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityCurrent1dayElapsedTime.setStatus('current')
endOfSarLinkTrmt1FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 196), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSarLinkTrmt1FacilityCurrent1dayTable.setStatus('current')
sarLinkTrmtFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 197), )
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical15minTable.setStatus('current')
sarLinkTrmtFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 197, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "sarLinkTrmtFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical15minEntry.setStatus('current')
sarLinkTrmtFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 197, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical15minNumber.setStatus('current')
sarLinkTrmtFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 197, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical15minES.setStatus('current')
sarLinkTrmtFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 197, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical15minSES.setStatus('current')
sarLinkTrmtFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 197, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical15minValidFlag.setStatus('current')
sarLinkTrmtFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 197, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical15minTimeStamp.setStatus('current')
endOfSarLinkTrmt1FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 198), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSarLinkTrmt1FacilityHistorical15minTable.setStatus('current')
sarLinkTrmtFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 199), )
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical1dayTable.setStatus('current')
sarLinkTrmtFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 199, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "sarLinkTrmtFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical1dayEntry.setStatus('current')
sarLinkTrmtFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 199, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical1dayNumber.setStatus('current')
sarLinkTrmtFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 199, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical1dayES.setStatus('current')
sarLinkTrmtFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 199, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical1daySES.setStatus('current')
sarLinkTrmtFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 199, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical1dayValidFlag.setStatus('current')
sarLinkTrmtFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 199, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkTrmtFacilityHistorical1dayTimeStamp.setStatus('current')
endOfSarLinkTrmt1FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 200), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSarLinkTrmt1FacilityHistorical1dayTable.setStatus('current')
sarLinkRcvFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 201), )
if mibBuilder.loadTexts: sarLinkRcvFacilityCurrent15minTable.setStatus('current')
sarLinkRcvFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 201, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: sarLinkRcvFacilityCurrent15minEntry.setStatus('current')
sarLinkRcvFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 201, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityCurrent15minES.setStatus('current')
sarLinkRcvFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 201, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityCurrent15minSES.setStatus('current')
sarLinkRcvFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 201, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityCurrent15minElapsedTime.setStatus('current')
endOfSarLinkRcvFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSarLinkRcvFacilityCurrent15minTable.setStatus('current')
sarLinkRcvFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 203), )
if mibBuilder.loadTexts: sarLinkRcvFacilityCurrent1dayTable.setStatus('current')
sarLinkRcvFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 203, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: sarLinkRcvFacilityCurrent1dayEntry.setStatus('current')
sarLinkRcvFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 203, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityCurrent1dayES.setStatus('current')
sarLinkRcvFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 203, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityCurrent1daySES.setStatus('current')
sarLinkRcvFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 203, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityCurrent1dayElapsedTime.setStatus('current')
endOfSarLinkRcvFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSarLinkRcvFacilityCurrent1dayTable.setStatus('current')
sarLinkRcvFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 205), )
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical15minTable.setStatus('current')
sarLinkRcvFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 205, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "sarLinkRcvFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical15minEntry.setStatus('current')
sarLinkRcvFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 205, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical15minNumber.setStatus('current')
sarLinkRcvFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 205, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical15minES.setStatus('current')
sarLinkRcvFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 205, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical15minSES.setStatus('current')
sarLinkRcvFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 205, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical15minValidFlag.setStatus('current')
sarLinkRcvFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 205, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical15minTimeStamp.setStatus('current')
endOfSarLinkRcvFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 206), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSarLinkRcvFacilityHistorical15minTable.setStatus('current')
sarLinkRcvFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 207), )
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical1dayTable.setStatus('current')
sarLinkRcvFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 207, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "sarLinkRcvFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical1dayEntry.setStatus('current')
sarLinkRcvFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 207, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical1dayNumber.setStatus('current')
sarLinkRcvFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 207, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical1dayES.setStatus('current')
sarLinkRcvFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 207, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical1daySES.setStatus('current')
sarLinkRcvFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 207, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical1dayValidFlag.setStatus('current')
sarLinkRcvFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 207, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sarLinkRcvFacilityHistorical1dayTimeStamp.setStatus('current')
endOfSarLinkRcvFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 208), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSarLinkRcvFacilityHistorical1dayTable.setStatus('current')
frTrmt2FacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 209), )
if mibBuilder.loadTexts: frTrmt2FacilityCurrent15minTable.setStatus('current')
frTrmt2FacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 209, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frTrmt2FacilityCurrent15minEntry.setStatus('current')
frTrmt2FacilityCurrent15minGoodFramesx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 209, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent15minGoodFramesx.setStatus('current')
frTrmt2FacilityCurrent15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 209, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent15minPauseFrames.setStatus('current')
frTrmt2FacilityCurrent15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 209, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent15minBytes.setStatus('current')
frTrmt2FacilityCurrent15minCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 209, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent15minCrcFramesEgress.setStatus('current')
frTrmt2FacilityCurrent15minDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 209, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent15minDiscardedFrames.setStatus('current')
frTrmt2FacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 209, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent15minElapsedTime.setStatus('current')
endOfFrTrmt2FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 210), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrTrmt2FacilityCurrent15minTable.setStatus('current')
frTrmt2FacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 211), )
if mibBuilder.loadTexts: frTrmt2FacilityCurrent1dayTable.setStatus('current')
frTrmt2FacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 211, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frTrmt2FacilityCurrent1dayEntry.setStatus('current')
frTrmt2FacilityCurrent1dayGoodFramesx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 211, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent1dayGoodFramesx.setStatus('current')
frTrmt2FacilityCurrent1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 211, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent1dayPauseFrames.setStatus('current')
frTrmt2FacilityCurrent1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 211, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent1dayBytes.setStatus('current')
frTrmt2FacilityCurrent1dayCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 211, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent1dayCrcFramesEgress.setStatus('current')
frTrmt2FacilityCurrent1dayDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 211, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent1dayDiscardedFrames.setStatus('current')
frTrmt2FacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 211, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityCurrent1dayElapsedTime.setStatus('current')
endOfFrTrmt2FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 212), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrTrmt2FacilityCurrent1dayTable.setStatus('current')
frTrmt2FacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 213), )
if mibBuilder.loadTexts: frTrmt2FacilityHistorical15minTable.setStatus('current')
frTrmt2FacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 213, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frTrmt2FacilityHistorical15minNumber"))
if mibBuilder.loadTexts: frTrmt2FacilityHistorical15minEntry.setStatus('current')
frTrmt2FacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 213, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: frTrmt2FacilityHistorical15minNumber.setStatus('current')
frTrmt2FacilityHistorical15minGoodFramesx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 213, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical15minGoodFramesx.setStatus('current')
frTrmt2FacilityHistorical15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 213, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical15minPauseFrames.setStatus('current')
frTrmt2FacilityHistorical15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 213, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical15minBytes.setStatus('current')
frTrmt2FacilityHistorical15minCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 213, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical15minCrcFramesEgress.setStatus('current')
frTrmt2FacilityHistorical15minDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 213, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical15minDiscardedFrames.setStatus('current')
frTrmt2FacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 213, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical15minValidFlag.setStatus('current')
frTrmt2FacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 213, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical15minTimeStamp.setStatus('current')
endOfFrTrmt2FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 214), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrTrmt2FacilityHistorical15minTable.setStatus('current')
frTrmt2FacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 215), )
if mibBuilder.loadTexts: frTrmt2FacilityHistorical1dayTable.setStatus('current')
frTrmt2FacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 215, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frTrmt2FacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: frTrmt2FacilityHistorical1dayEntry.setStatus('current')
frTrmt2FacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 215, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: frTrmt2FacilityHistorical1dayNumber.setStatus('current')
frTrmt2FacilityHistorical1dayGoodFramesx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 215, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical1dayGoodFramesx.setStatus('current')
frTrmt2FacilityHistorical1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 215, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical1dayPauseFrames.setStatus('current')
frTrmt2FacilityHistorical1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 215, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical1dayBytes.setStatus('current')
frTrmt2FacilityHistorical1dayCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 215, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical1dayCrcFramesEgress.setStatus('current')
frTrmt2FacilityHistorical1dayDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 215, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical1dayDiscardedFrames.setStatus('current')
frTrmt2FacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 215, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical1dayValidFlag.setStatus('current')
frTrmt2FacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 215, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frTrmt2FacilityHistorical1dayTimeStamp.setStatus('current')
endOfFrTrmt2FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 216), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrTrmt2FacilityHistorical1dayTable.setStatus('current')
frRcv4FacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 217), )
if mibBuilder.loadTexts: frRcv4FacilityCurrent15minTable.setStatus('current')
frRcv4FacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 217, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frRcv4FacilityCurrent15minEntry.setStatus('current')
frRcv4FacilityCurrent15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 217, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityCurrent15minGoodFrames.setStatus('current')
frRcv4FacilityCurrent15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 217, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityCurrent15minCrcFrames.setStatus('current')
frRcv4FacilityCurrent15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 217, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityCurrent15minBytes.setStatus('current')
frRcv4FacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 217, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityCurrent15minElapsedTime.setStatus('current')
endOfFrRcv4FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 218), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv4FacilityCurrent15minTable.setStatus('current')
frRcv4FacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 219), )
if mibBuilder.loadTexts: frRcv4FacilityCurrent1dayTable.setStatus('current')
frRcv4FacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 219, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: frRcv4FacilityCurrent1dayEntry.setStatus('current')
frRcv4FacilityCurrent1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 219, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityCurrent1dayGoodFrames.setStatus('current')
frRcv4FacilityCurrent1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 219, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityCurrent1dayCrcFrames.setStatus('current')
frRcv4FacilityCurrent1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 219, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityCurrent1dayBytes.setStatus('current')
frRcv4FacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 219, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityCurrent1dayElapsedTime.setStatus('current')
endOfFrRcv4FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 220), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv4FacilityCurrent1dayTable.setStatus('current')
frRcv4FacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 221), )
if mibBuilder.loadTexts: frRcv4FacilityHistorical15minTable.setStatus('current')
frRcv4FacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 221, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv4FacilityHistorical15minNumber"))
if mibBuilder.loadTexts: frRcv4FacilityHistorical15minEntry.setStatus('current')
frRcv4FacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 221, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: frRcv4FacilityHistorical15minNumber.setStatus('current')
frRcv4FacilityHistorical15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 221, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityHistorical15minGoodFrames.setStatus('current')
frRcv4FacilityHistorical15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 221, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityHistorical15minCrcFrames.setStatus('current')
frRcv4FacilityHistorical15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 221, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityHistorical15minBytes.setStatus('current')
frRcv4FacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 221, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityHistorical15minValidFlag.setStatus('current')
frRcv4FacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 221, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityHistorical15minTimeStamp.setStatus('current')
endOfFrRcv4FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 222), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv4FacilityHistorical15minTable.setStatus('current')
frRcv4FacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 223), )
if mibBuilder.loadTexts: frRcv4FacilityHistorical1dayTable.setStatus('current')
frRcv4FacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 223, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv4FacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: frRcv4FacilityHistorical1dayEntry.setStatus('current')
frRcv4FacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 223, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: frRcv4FacilityHistorical1dayNumber.setStatus('current')
frRcv4FacilityHistorical1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 223, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityHistorical1dayGoodFrames.setStatus('current')
frRcv4FacilityHistorical1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 223, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityHistorical1dayCrcFrames.setStatus('current')
frRcv4FacilityHistorical1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 223, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityHistorical1dayBytes.setStatus('current')
frRcv4FacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 223, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityHistorical1dayValidFlag.setStatus('current')
frRcv4FacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 223, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv4FacilityHistorical1dayTimeStamp.setStatus('current')
endOfFrRcv4FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 224), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv4FacilityHistorical1dayTable.setStatus('current')
byteTrmtFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 225), )
if mibBuilder.loadTexts: byteTrmtFacilityCurrent15minTable.setStatus('current')
byteTrmtFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 225, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: byteTrmtFacilityCurrent15minEntry.setStatus('current')
byteTrmtFacilityCurrent15minFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 225, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityCurrent15minFramesTrmt.setStatus('current')
byteTrmtFacilityCurrent15minBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 225, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityCurrent15minBytesTrmt.setStatus('current')
byteTrmtFacilityCurrent15minCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 225, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityCurrent15minCrcFramesEgress.setStatus('current')
byteTrmtFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 225, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityCurrent15minElapsedTime.setStatus('current')
endOfByteTrmtFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 226), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfByteTrmtFacilityCurrent15minTable.setStatus('current')
byteTrmtFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 227), )
if mibBuilder.loadTexts: byteTrmtFacilityCurrent1dayTable.setStatus('current')
byteTrmtFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 227, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: byteTrmtFacilityCurrent1dayEntry.setStatus('current')
byteTrmtFacilityCurrent1dayFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 227, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityCurrent1dayFramesTrmt.setStatus('current')
byteTrmtFacilityCurrent1dayBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 227, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityCurrent1dayBytesTrmt.setStatus('current')
byteTrmtFacilityCurrent1dayCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 227, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityCurrent1dayCrcFramesEgress.setStatus('current')
byteTrmtFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 227, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityCurrent1dayElapsedTime.setStatus('current')
endOfByteTrmtFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 228), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfByteTrmtFacilityCurrent1dayTable.setStatus('current')
byteTrmtFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 229), )
if mibBuilder.loadTexts: byteTrmtFacilityHistorical15minTable.setStatus('current')
byteTrmtFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 229, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "byteTrmtFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: byteTrmtFacilityHistorical15minEntry.setStatus('current')
byteTrmtFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 229, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: byteTrmtFacilityHistorical15minNumber.setStatus('current')
byteTrmtFacilityHistorical15minFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 229, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityHistorical15minFramesTrmt.setStatus('current')
byteTrmtFacilityHistorical15minBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 229, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityHistorical15minBytesTrmt.setStatus('current')
byteTrmtFacilityHistorical15minCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 229, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityHistorical15minCrcFramesEgress.setStatus('current')
byteTrmtFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 229, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityHistorical15minValidFlag.setStatus('current')
byteTrmtFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 229, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityHistorical15minTimeStamp.setStatus('current')
endOfByteTrmtFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 230), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfByteTrmtFacilityHistorical15minTable.setStatus('current')
byteTrmtFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 231), )
if mibBuilder.loadTexts: byteTrmtFacilityHistorical1dayTable.setStatus('current')
byteTrmtFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 231, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "byteTrmtFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: byteTrmtFacilityHistorical1dayEntry.setStatus('current')
byteTrmtFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 231, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: byteTrmtFacilityHistorical1dayNumber.setStatus('current')
byteTrmtFacilityHistorical1dayFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 231, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityHistorical1dayFramesTrmt.setStatus('current')
byteTrmtFacilityHistorical1dayBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 231, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityHistorical1dayBytesTrmt.setStatus('current')
byteTrmtFacilityHistorical1dayCrcFramesEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 231, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityHistorical1dayCrcFramesEgress.setStatus('current')
byteTrmtFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 231, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityHistorical1dayValidFlag.setStatus('current')
byteTrmtFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 231, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byteTrmtFacilityHistorical1dayTimeStamp.setStatus('current')
endOfByteTrmtFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 232), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfByteTrmtFacilityHistorical1dayTable.setStatus('current')
utlRxFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 233), )
if mibBuilder.loadTexts: utlRxFacilityCurrent15minTable.setStatus('current')
utlRxFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 233, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: utlRxFacilityCurrent15minEntry.setStatus('current')
utlRxFacilityCurrent15minUtlHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 233, 1, 1), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityCurrent15minUtlHigh.setStatus('current')
utlRxFacilityCurrent15minUtlLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 233, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityCurrent15minUtlLow.setStatus('current')
utlRxFacilityCurrent15minUtlMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 233, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityCurrent15minUtlMean.setStatus('current')
utlRxFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 233, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityCurrent15minElapsedTime.setStatus('current')
endOfUtlRxFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 234), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfUtlRxFacilityCurrent15minTable.setStatus('current')
utlRxFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 235), )
if mibBuilder.loadTexts: utlRxFacilityCurrent1dayTable.setStatus('current')
utlRxFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 235, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: utlRxFacilityCurrent1dayEntry.setStatus('current')
utlRxFacilityCurrent1dayUtlHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 235, 1, 1), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityCurrent1dayUtlHigh.setStatus('current')
utlRxFacilityCurrent1dayUtlLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 235, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityCurrent1dayUtlLow.setStatus('current')
utlRxFacilityCurrent1dayUtlMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 235, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityCurrent1dayUtlMean.setStatus('current')
utlRxFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 235, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityCurrent1dayElapsedTime.setStatus('current')
endOfUtlRxFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 236), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfUtlRxFacilityCurrent1dayTable.setStatus('current')
utlRxFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 237), )
if mibBuilder.loadTexts: utlRxFacilityHistorical15minTable.setStatus('current')
utlRxFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 237, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "utlRxFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: utlRxFacilityHistorical15minEntry.setStatus('current')
utlRxFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 237, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: utlRxFacilityHistorical15minNumber.setStatus('current')
utlRxFacilityHistorical15minUtlHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 237, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityHistorical15minUtlHigh.setStatus('current')
utlRxFacilityHistorical15minUtlLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 237, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityHistorical15minUtlLow.setStatus('current')
utlRxFacilityHistorical15minUtlMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 237, 1, 4), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityHistorical15minUtlMean.setStatus('current')
utlRxFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 237, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityHistorical15minValidFlag.setStatus('current')
utlRxFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 237, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityHistorical15minTimeStamp.setStatus('current')
endOfUtlRxFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 238), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfUtlRxFacilityHistorical15minTable.setStatus('current')
utlRxFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 239), )
if mibBuilder.loadTexts: utlRxFacilityHistorical1dayTable.setStatus('current')
utlRxFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 239, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "utlRxFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: utlRxFacilityHistorical1dayEntry.setStatus('current')
utlRxFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 239, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: utlRxFacilityHistorical1dayNumber.setStatus('current')
utlRxFacilityHistorical1dayUtlHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 239, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityHistorical1dayUtlHigh.setStatus('current')
utlRxFacilityHistorical1dayUtlLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 239, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityHistorical1dayUtlLow.setStatus('current')
utlRxFacilityHistorical1dayUtlMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 239, 1, 4), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityHistorical1dayUtlMean.setStatus('current')
utlRxFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 239, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityHistorical1dayValidFlag.setStatus('current')
utlRxFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 239, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlRxFacilityHistorical1dayTimeStamp.setStatus('current')
endOfUtlRxFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 240), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfUtlRxFacilityHistorical1dayTable.setStatus('current')
utlTxFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 241), )
if mibBuilder.loadTexts: utlTxFacilityCurrent15minTable.setStatus('current')
utlTxFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 241, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: utlTxFacilityCurrent15minEntry.setStatus('current')
utlTxFacilityCurrent15minUtlHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 241, 1, 1), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityCurrent15minUtlHigh.setStatus('current')
utlTxFacilityCurrent15minUtlLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 241, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityCurrent15minUtlLow.setStatus('current')
utlTxFacilityCurrent15minUtlMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 241, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityCurrent15minUtlMean.setStatus('current')
utlTxFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 241, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityCurrent15minElapsedTime.setStatus('current')
endOfUtlTxFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 242), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfUtlTxFacilityCurrent15minTable.setStatus('current')
utlTxFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 243), )
if mibBuilder.loadTexts: utlTxFacilityCurrent1dayTable.setStatus('current')
utlTxFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 243, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: utlTxFacilityCurrent1dayEntry.setStatus('current')
utlTxFacilityCurrent1dayUtlHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 243, 1, 1), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityCurrent1dayUtlHigh.setStatus('current')
utlTxFacilityCurrent1dayUtlLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 243, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityCurrent1dayUtlLow.setStatus('current')
utlTxFacilityCurrent1dayUtlMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 243, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityCurrent1dayUtlMean.setStatus('current')
utlTxFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 243, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityCurrent1dayElapsedTime.setStatus('current')
endOfUtlTxFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 244), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfUtlTxFacilityCurrent1dayTable.setStatus('current')
utlTxFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 245), )
if mibBuilder.loadTexts: utlTxFacilityHistorical15minTable.setStatus('current')
utlTxFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 245, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "utlTxFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: utlTxFacilityHistorical15minEntry.setStatus('current')
utlTxFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 245, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: utlTxFacilityHistorical15minNumber.setStatus('current')
utlTxFacilityHistorical15minUtlHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 245, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityHistorical15minUtlHigh.setStatus('current')
utlTxFacilityHistorical15minUtlLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 245, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityHistorical15minUtlLow.setStatus('current')
utlTxFacilityHistorical15minUtlMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 245, 1, 4), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityHistorical15minUtlMean.setStatus('current')
utlTxFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 245, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityHistorical15minValidFlag.setStatus('current')
utlTxFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 245, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityHistorical15minTimeStamp.setStatus('current')
endOfUtlTxFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 246), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfUtlTxFacilityHistorical15minTable.setStatus('current')
utlTxFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 247), )
if mibBuilder.loadTexts: utlTxFacilityHistorical1dayTable.setStatus('current')
utlTxFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 247, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "utlTxFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: utlTxFacilityHistorical1dayEntry.setStatus('current')
utlTxFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 247, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: utlTxFacilityHistorical1dayNumber.setStatus('current')
utlTxFacilityHistorical1dayUtlHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 247, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityHistorical1dayUtlHigh.setStatus('current')
utlTxFacilityHistorical1dayUtlLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 247, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityHistorical1dayUtlLow.setStatus('current')
utlTxFacilityHistorical1dayUtlMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 247, 1, 4), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityHistorical1dayUtlMean.setStatus('current')
utlTxFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 247, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityHistorical1dayValidFlag.setStatus('current')
utlTxFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 247, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: utlTxFacilityHistorical1dayTimeStamp.setStatus('current')
endOfUtlTxFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 248), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfUtlTxFacilityHistorical1dayTable.setStatus('current')
pcsRxFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 249), )
if mibBuilder.loadTexts: pcsRxFacilityCurrent15minTable.setStatus('current')
pcsRxFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 249, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcsRxFacilityCurrent15minEntry.setStatus('current')
pcsRxFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 249, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityCurrent15minES.setStatus('current')
pcsRxFacilityCurrent15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 249, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityCurrent15minCV.setStatus('current')
pcsRxFacilityCurrent15minBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 249, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityCurrent15minBBE.setStatus('current')
pcsRxFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 249, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityCurrent15minElapsedTime.setStatus('current')
endOfPcsRxFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 250), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcsRxFacilityCurrent15minTable.setStatus('current')
pcsRxFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 251), )
if mibBuilder.loadTexts: pcsRxFacilityCurrent1dayTable.setStatus('current')
pcsRxFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 251, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcsRxFacilityCurrent1dayEntry.setStatus('current')
pcsRxFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 251, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityCurrent1dayES.setStatus('current')
pcsRxFacilityCurrent1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 251, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityCurrent1dayCV.setStatus('current')
pcsRxFacilityCurrent1dayBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 251, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityCurrent1dayBBE.setStatus('current')
pcsRxFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 251, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityCurrent1dayElapsedTime.setStatus('current')
endOfPcsRxFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 252), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcsRxFacilityCurrent1dayTable.setStatus('current')
pcsRxFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 253), )
if mibBuilder.loadTexts: pcsRxFacilityHistorical15minTable.setStatus('current')
pcsRxFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 253, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcsRxFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: pcsRxFacilityHistorical15minEntry.setStatus('current')
pcsRxFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 253, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: pcsRxFacilityHistorical15minNumber.setStatus('current')
pcsRxFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 253, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityHistorical15minES.setStatus('current')
pcsRxFacilityHistorical15minCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 253, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityHistorical15minCV.setStatus('current')
pcsRxFacilityHistorical15minBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 253, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityHistorical15minBBE.setStatus('current')
pcsRxFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 253, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityHistorical15minValidFlag.setStatus('current')
pcsRxFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 253, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityHistorical15minTimeStamp.setStatus('current')
endOfPcsRxFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 254), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcsRxFacilityHistorical15minTable.setStatus('current')
pcsRxFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 255), )
if mibBuilder.loadTexts: pcsRxFacilityHistorical1dayTable.setStatus('current')
pcsRxFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 255, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcsRxFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: pcsRxFacilityHistorical1dayEntry.setStatus('current')
pcsRxFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 255, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: pcsRxFacilityHistorical1dayNumber.setStatus('current')
pcsRxFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 255, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityHistorical1dayES.setStatus('current')
pcsRxFacilityHistorical1dayCV = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 255, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityHistorical1dayCV.setStatus('current')
pcsRxFacilityHistorical1dayBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 255, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityHistorical1dayBBE.setStatus('current')
pcsRxFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 255, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityHistorical1dayValidFlag.setStatus('current')
pcsRxFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 255, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsRxFacilityHistorical1dayTimeStamp.setStatus('current')
endOfPcsRxFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 256), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcsRxFacilityHistorical1dayTable.setStatus('current')
pcsTxFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 257), )
if mibBuilder.loadTexts: pcsTxFacilityCurrent15minTable.setStatus('current')
pcsTxFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 257, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcsTxFacilityCurrent15minEntry.setStatus('current')
pcsTxFacilityCurrent15minESTX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 257, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityCurrent15minESTX.setStatus('current')
pcsTxFacilityCurrent15minCVTX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 257, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityCurrent15minCVTX.setStatus('current')
pcsTxFacilityCurrent15minBBETX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 257, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityCurrent15minBBETX.setStatus('current')
pcsTxFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 257, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityCurrent15minElapsedTime.setStatus('current')
endOfPcsTxFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 258), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcsTxFacilityCurrent15minTable.setStatus('current')
pcsTxFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 259), )
if mibBuilder.loadTexts: pcsTxFacilityCurrent1dayTable.setStatus('current')
pcsTxFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 259, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: pcsTxFacilityCurrent1dayEntry.setStatus('current')
pcsTxFacilityCurrent1dayESTX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 259, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityCurrent1dayESTX.setStatus('current')
pcsTxFacilityCurrent1dayCVTX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 259, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityCurrent1dayCVTX.setStatus('current')
pcsTxFacilityCurrent1dayBBETX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 259, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityCurrent1dayBBETX.setStatus('current')
pcsTxFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 259, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityCurrent1dayElapsedTime.setStatus('current')
endOfPcsTxFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 260), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcsTxFacilityCurrent1dayTable.setStatus('current')
pcsTxFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 261), )
if mibBuilder.loadTexts: pcsTxFacilityHistorical15minTable.setStatus('current')
pcsTxFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 261, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcsTxFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: pcsTxFacilityHistorical15minEntry.setStatus('current')
pcsTxFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 261, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: pcsTxFacilityHistorical15minNumber.setStatus('current')
pcsTxFacilityHistorical15minESTX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 261, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityHistorical15minESTX.setStatus('current')
pcsTxFacilityHistorical15minCVTX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 261, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityHistorical15minCVTX.setStatus('current')
pcsTxFacilityHistorical15minBBETX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 261, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityHistorical15minBBETX.setStatus('current')
pcsTxFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 261, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityHistorical15minValidFlag.setStatus('current')
pcsTxFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 261, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityHistorical15minTimeStamp.setStatus('current')
endOfPcsTxFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 262), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcsTxFacilityHistorical15minTable.setStatus('current')
pcsTxFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 263), )
if mibBuilder.loadTexts: pcsTxFacilityHistorical1dayTable.setStatus('current')
pcsTxFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 263, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "pcsTxFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: pcsTxFacilityHistorical1dayEntry.setStatus('current')
pcsTxFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 263, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: pcsTxFacilityHistorical1dayNumber.setStatus('current')
pcsTxFacilityHistorical1dayESTX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 263, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityHistorical1dayESTX.setStatus('current')
pcsTxFacilityHistorical1dayCVTX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 263, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityHistorical1dayCVTX.setStatus('current')
pcsTxFacilityHistorical1dayBBETX = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 263, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityHistorical1dayBBETX.setStatus('current')
pcsTxFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 263, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityHistorical1dayValidFlag.setStatus('current')
pcsTxFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 263, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcsTxFacilityHistorical1dayTimeStamp.setStatus('current')
endOfPcsTxFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 264), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPcsTxFacilityHistorical1dayTable.setStatus('current')
fec2FacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 265), )
if mibBuilder.loadTexts: fec2FacilityCurrent15minTable.setStatus('current')
fec2FacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 265, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: fec2FacilityCurrent15minEntry.setStatus('current')
fec2FacilityCurrent15minCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 265, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityCurrent15minCE.setStatus('current')
fec2FacilityCurrent15minUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 265, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityCurrent15minUBE.setStatus('current')
fec2FacilityCurrent15minBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 265, 1, 3), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityCurrent15minBERCE.setStatus('current')
fec2FacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 265, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityCurrent15minElapsedTime.setStatus('current')
endOfFec2FacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 266), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFec2FacilityCurrent15minTable.setStatus('current')
fec2FacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 267), )
if mibBuilder.loadTexts: fec2FacilityCurrent1dayTable.setStatus('current')
fec2FacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 267, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: fec2FacilityCurrent1dayEntry.setStatus('current')
fec2FacilityCurrent1dayCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 267, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityCurrent1dayCE.setStatus('current')
fec2FacilityCurrent1dayUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 267, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityCurrent1dayUBE.setStatus('current')
fec2FacilityCurrent1dayBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 267, 1, 3), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityCurrent1dayBERCE.setStatus('current')
fec2FacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 267, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityCurrent1dayElapsedTime.setStatus('current')
endOfFec2FacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 268), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFec2FacilityCurrent1dayTable.setStatus('current')
fec2FacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 269), )
if mibBuilder.loadTexts: fec2FacilityHistorical15minTable.setStatus('current')
fec2FacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 269, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "fec2FacilityHistorical15minNumber"))
if mibBuilder.loadTexts: fec2FacilityHistorical15minEntry.setStatus('current')
fec2FacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 269, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: fec2FacilityHistorical15minNumber.setStatus('current')
fec2FacilityHistorical15minCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 269, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityHistorical15minCE.setStatus('current')
fec2FacilityHistorical15minUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 269, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityHistorical15minUBE.setStatus('current')
fec2FacilityHistorical15minBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 269, 1, 4), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityHistorical15minBERCE.setStatus('current')
fec2FacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 269, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityHistorical15minValidFlag.setStatus('current')
fec2FacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 269, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityHistorical15minTimeStamp.setStatus('current')
endOfFec2FacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 270), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFec2FacilityHistorical15minTable.setStatus('current')
fec2FacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 271), )
if mibBuilder.loadTexts: fec2FacilityHistorical1dayTable.setStatus('current')
fec2FacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 271, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "fec2FacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: fec2FacilityHistorical1dayEntry.setStatus('current')
fec2FacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 271, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: fec2FacilityHistorical1dayNumber.setStatus('current')
fec2FacilityHistorical1dayCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 271, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityHistorical1dayCE.setStatus('current')
fec2FacilityHistorical1dayUBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 271, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityHistorical1dayUBE.setStatus('current')
fec2FacilityHistorical1dayBERCE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 271, 1, 4), Counter64String()).setUnits('1.0E-18').setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityHistorical1dayBERCE.setStatus('current')
fec2FacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 271, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityHistorical1dayValidFlag.setStatus('current')
fec2FacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 271, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fec2FacilityHistorical1dayTimeStamp.setStatus('current')
endOfFec2FacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 272), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFec2FacilityHistorical1dayTable.setStatus('current')
lldpFrameRxFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 273), )
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent15minTable.setStatus('current')
lldpFrameRxFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 273, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent15minEntry.setStatus('current')
lldpFrameRxFacilityCurrent15minLLDPFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 273, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent15minLLDPFramesRx.setStatus('current')
lldpFrameRxFacilityCurrent15minLLDPFrameRxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 273, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent15minLLDPFrameRxDiscards.setStatus('current')
lldpFrameRxFacilityCurrent15minFrameRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 273, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent15minFrameRxErrors.setStatus('current')
lldpFrameRxFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 273, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent15minElapsedTime.setStatus('current')
endOfLldpFrameRxFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 274), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameRxFacilityCurrent15minTable.setStatus('current')
lldpFrameRxFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 275), )
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent1dayTable.setStatus('current')
lldpFrameRxFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 275, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent1dayEntry.setStatus('current')
lldpFrameRxFacilityCurrent1dayLLDPFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 275, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent1dayLLDPFramesRx.setStatus('current')
lldpFrameRxFacilityCurrent1dayLLDPFrameRxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 275, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent1dayLLDPFrameRxDiscards.setStatus('current')
lldpFrameRxFacilityCurrent1dayFrameRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 275, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent1dayFrameRxErrors.setStatus('current')
lldpFrameRxFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 275, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityCurrent1dayElapsedTime.setStatus('current')
endOfLldpFrameRxFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 276), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameRxFacilityCurrent1dayTable.setStatus('current')
lldpFrameRxFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 277), )
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical15minTable.setStatus('current')
lldpFrameRxFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 277, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpFrameRxFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical15minEntry.setStatus('current')
lldpFrameRxFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 277, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical15minNumber.setStatus('current')
lldpFrameRxFacilityHistorical15minLLDPFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 277, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical15minLLDPFramesRx.setStatus('current')
lldpFrameRxFacilityHistorical15minLLDPFrameRxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 277, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical15minLLDPFrameRxDiscards.setStatus('current')
lldpFrameRxFacilityHistorical15minFrameRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 277, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical15minFrameRxErrors.setStatus('current')
lldpFrameRxFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 277, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical15minValidFlag.setStatus('current')
lldpFrameRxFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 277, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical15minTimeStamp.setStatus('current')
endOfLldpFrameRxFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 278), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameRxFacilityHistorical15minTable.setStatus('current')
lldpFrameRxFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 279), )
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical1dayTable.setStatus('current')
lldpFrameRxFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 279, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpFrameRxFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical1dayEntry.setStatus('current')
lldpFrameRxFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 279, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical1dayNumber.setStatus('current')
lldpFrameRxFacilityHistorical1dayLLDPFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 279, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical1dayLLDPFramesRx.setStatus('current')
lldpFrameRxFacilityHistorical1dayLLDPFrameRxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 279, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical1dayLLDPFrameRxDiscards.setStatus('current')
lldpFrameRxFacilityHistorical1dayFrameRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 279, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical1dayFrameRxErrors.setStatus('current')
lldpFrameRxFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 279, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical1dayValidFlag.setStatus('current')
lldpFrameRxFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 279, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameRxFacilityHistorical1dayTimeStamp.setStatus('current')
endOfLldpFrameRxFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 280), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameRxFacilityHistorical1dayTable.setStatus('current')
lldpFrameTxFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 281), )
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent15minTable.setStatus('current')
lldpFrameTxFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 281, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent15minEntry.setStatus('current')
lldpFrameTxFacilityCurrent15minLLDPFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 281, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent15minLLDPFramesTx.setStatus('current')
lldpFrameTxFacilityCurrent15minLLDPFrameTxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 281, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent15minLLDPFrameTxDiscards.setStatus('current')
lldpFrameTxFacilityCurrent15minFrameTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 281, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent15minFrameTxErrors.setStatus('current')
lldpFrameTxFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 281, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent15minElapsedTime.setStatus('current')
endOfLldpFrameTxFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 282), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameTxFacilityCurrent15minTable.setStatus('current')
lldpFrameTxFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 283), )
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent1dayTable.setStatus('current')
lldpFrameTxFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 283, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent1dayEntry.setStatus('current')
lldpFrameTxFacilityCurrent1dayLLDPFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 283, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent1dayLLDPFramesTx.setStatus('current')
lldpFrameTxFacilityCurrent1dayLLDPFrameTxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 283, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent1dayLLDPFrameTxDiscards.setStatus('current')
lldpFrameTxFacilityCurrent1dayFrameTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 283, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent1dayFrameTxErrors.setStatus('current')
lldpFrameTxFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 283, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityCurrent1dayElapsedTime.setStatus('current')
endOfLldpFrameTxFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 284), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameTxFacilityCurrent1dayTable.setStatus('current')
lldpFrameTxFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 285), )
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical15minTable.setStatus('current')
lldpFrameTxFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 285, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpFrameTxFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical15minEntry.setStatus('current')
lldpFrameTxFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 285, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical15minNumber.setStatus('current')
lldpFrameTxFacilityHistorical15minLLDPFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 285, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical15minLLDPFramesTx.setStatus('current')
lldpFrameTxFacilityHistorical15minLLDPFrameTxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 285, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical15minLLDPFrameTxDiscards.setStatus('current')
lldpFrameTxFacilityHistorical15minFrameTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 285, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical15minFrameTxErrors.setStatus('current')
lldpFrameTxFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 285, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical15minValidFlag.setStatus('current')
lldpFrameTxFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 285, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical15minTimeStamp.setStatus('current')
endOfLldpFrameTxFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 286), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameTxFacilityHistorical15minTable.setStatus('current')
lldpFrameTxFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 287), )
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical1dayTable.setStatus('current')
lldpFrameTxFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 287, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpFrameTxFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical1dayEntry.setStatus('current')
lldpFrameTxFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 287, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical1dayNumber.setStatus('current')
lldpFrameTxFacilityHistorical1dayLLDPFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 287, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical1dayLLDPFramesTx.setStatus('current')
lldpFrameTxFacilityHistorical1dayLLDPFrameTxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 287, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical1dayLLDPFrameTxDiscards.setStatus('current')
lldpFrameTxFacilityHistorical1dayFrameTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 287, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical1dayFrameTxErrors.setStatus('current')
lldpFrameTxFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 287, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical1dayValidFlag.setStatus('current')
lldpFrameTxFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 287, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameTxFacilityHistorical1dayTimeStamp.setStatus('current')
endOfLldpFrameTxFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 288), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameTxFacilityHistorical1dayTable.setStatus('current')
lldpTLVRxFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 289), )
if mibBuilder.loadTexts: lldpTLVRxFacilityCurrent15minTable.setStatus('current')
lldpTLVRxFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 289, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpTLVRxFacilityCurrent15minEntry.setStatus('current')
lldpTLVRxFacilityCurrent15minTLVRxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 289, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityCurrent15minTLVRxDiscards.setStatus('current')
lldpTLVRxFacilityCurrent15minTLVRxUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 289, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityCurrent15minTLVRxUnknown.setStatus('current')
lldpTLVRxFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 289, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityCurrent15minElapsedTime.setStatus('current')
endOfLldpTLVRxFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 290), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVRxFacilityCurrent15minTable.setStatus('current')
lldpTLVRxFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 291), )
if mibBuilder.loadTexts: lldpTLVRxFacilityCurrent1dayTable.setStatus('current')
lldpTLVRxFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 291, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpTLVRxFacilityCurrent1dayEntry.setStatus('current')
lldpTLVRxFacilityCurrent1dayTLVRxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 291, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityCurrent1dayTLVRxDiscards.setStatus('current')
lldpTLVRxFacilityCurrent1dayTLVRxUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 291, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityCurrent1dayTLVRxUnknown.setStatus('current')
lldpTLVRxFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 291, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityCurrent1dayElapsedTime.setStatus('current')
endOfLldpTLVRxFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 292), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVRxFacilityCurrent1dayTable.setStatus('current')
lldpTLVRxFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 293), )
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical15minTable.setStatus('current')
lldpTLVRxFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 293, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpTLVRxFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical15minEntry.setStatus('current')
lldpTLVRxFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 293, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical15minNumber.setStatus('current')
lldpTLVRxFacilityHistorical15minTLVRxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 293, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical15minTLVRxDiscards.setStatus('current')
lldpTLVRxFacilityHistorical15minTLVRxUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 293, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical15minTLVRxUnknown.setStatus('current')
lldpTLVRxFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 293, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical15minValidFlag.setStatus('current')
lldpTLVRxFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 293, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical15minTimeStamp.setStatus('current')
endOfLldpTLVRxFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 294), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVRxFacilityHistorical15minTable.setStatus('current')
lldpTLVRxFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 295), )
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical1dayTable.setStatus('current')
lldpTLVRxFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 295, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpTLVRxFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical1dayEntry.setStatus('current')
lldpTLVRxFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 295, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical1dayNumber.setStatus('current')
lldpTLVRxFacilityHistorical1dayTLVRxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 295, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical1dayTLVRxDiscards.setStatus('current')
lldpTLVRxFacilityHistorical1dayTLVRxUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 295, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical1dayTLVRxUnknown.setStatus('current')
lldpTLVRxFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 295, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical1dayValidFlag.setStatus('current')
lldpTLVRxFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 295, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVRxFacilityHistorical1dayTimeStamp.setStatus('current')
endOfLldpTLVRxFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 296), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVRxFacilityHistorical1dayTable.setStatus('current')
lldpTLVTxFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 297), )
if mibBuilder.loadTexts: lldpTLVTxFacilityCurrent15minTable.setStatus('current')
lldpTLVTxFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 297, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpTLVTxFacilityCurrent15minEntry.setStatus('current')
lldpTLVTxFacilityCurrent15minTLVTxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 297, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityCurrent15minTLVTxDiscards.setStatus('current')
lldpTLVTxFacilityCurrent15minTLVTxUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 297, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityCurrent15minTLVTxUnknown.setStatus('current')
lldpTLVTxFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 297, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityCurrent15minElapsedTime.setStatus('current')
endOfLldpTLVTxFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 298), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVTxFacilityCurrent15minTable.setStatus('current')
lldpTLVTxFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 299), )
if mibBuilder.loadTexts: lldpTLVTxFacilityCurrent1dayTable.setStatus('current')
lldpTLVTxFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 299, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpTLVTxFacilityCurrent1dayEntry.setStatus('current')
lldpTLVTxFacilityCurrent1dayTLVTxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 299, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityCurrent1dayTLVTxDiscards.setStatus('current')
lldpTLVTxFacilityCurrent1dayTLVTxUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 299, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityCurrent1dayTLVTxUnknown.setStatus('current')
lldpTLVTxFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 299, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityCurrent1dayElapsedTime.setStatus('current')
endOfLldpTLVTxFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 300), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVTxFacilityCurrent1dayTable.setStatus('current')
lldpTLVTxFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 301), )
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical15minTable.setStatus('current')
lldpTLVTxFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 301, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpTLVTxFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical15minEntry.setStatus('current')
lldpTLVTxFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 301, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical15minNumber.setStatus('current')
lldpTLVTxFacilityHistorical15minTLVTxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 301, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical15minTLVTxDiscards.setStatus('current')
lldpTLVTxFacilityHistorical15minTLVTxUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 301, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical15minTLVTxUnknown.setStatus('current')
lldpTLVTxFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 301, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical15minValidFlag.setStatus('current')
lldpTLVTxFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 301, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical15minTimeStamp.setStatus('current')
endOfLldpTLVTxFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 302), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVTxFacilityHistorical15minTable.setStatus('current')
lldpTLVTxFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 303), )
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical1dayTable.setStatus('current')
lldpTLVTxFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 303, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpTLVTxFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical1dayEntry.setStatus('current')
lldpTLVTxFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 303, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical1dayNumber.setStatus('current')
lldpTLVTxFacilityHistorical1dayTLVTxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 303, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical1dayTLVTxDiscards.setStatus('current')
lldpTLVTxFacilityHistorical1dayTLVTxUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 303, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical1dayTLVTxUnknown.setStatus('current')
lldpTLVTxFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 303, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical1dayValidFlag.setStatus('current')
lldpTLVTxFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 303, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVTxFacilityHistorical1dayTimeStamp.setStatus('current')
endOfLldpTLVTxFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 304), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVTxFacilityHistorical1dayTable.setStatus('current')
lldpTLVFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 305), )
if mibBuilder.loadTexts: lldpTLVFacilityCurrent15minTable.setStatus('current')
lldpTLVFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 305, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpTLVFacilityCurrent15minEntry.setStatus('current')
lldpTLVFacilityCurrent15minTLVDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 305, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityCurrent15minTLVDiscards.setStatus('current')
lldpTLVFacilityCurrent15minTLVUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 305, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityCurrent15minTLVUnknown.setStatus('current')
lldpTLVFacilityCurrent15minAgeOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 305, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityCurrent15minAgeOuts.setStatus('current')
lldpTLVFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 305, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityCurrent15minElapsedTime.setStatus('current')
endOfLldpTLVFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 306), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVFacilityCurrent15minTable.setStatus('current')
lldpTLVFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 307), )
if mibBuilder.loadTexts: lldpTLVFacilityCurrent1dayTable.setStatus('current')
lldpTLVFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 307, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpTLVFacilityCurrent1dayEntry.setStatus('current')
lldpTLVFacilityCurrent1dayTLVDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 307, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityCurrent1dayTLVDiscards.setStatus('current')
lldpTLVFacilityCurrent1dayTLVUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 307, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityCurrent1dayTLVUnknown.setStatus('current')
lldpTLVFacilityCurrent1dayAgeOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 307, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityCurrent1dayAgeOuts.setStatus('current')
lldpTLVFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 307, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityCurrent1dayElapsedTime.setStatus('current')
endOfLldpTLVFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 308), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVFacilityCurrent1dayTable.setStatus('current')
lldpTLVFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 309), )
if mibBuilder.loadTexts: lldpTLVFacilityHistorical15minTable.setStatus('current')
lldpTLVFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 309, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpTLVFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: lldpTLVFacilityHistorical15minEntry.setStatus('current')
lldpTLVFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 309, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: lldpTLVFacilityHistorical15minNumber.setStatus('current')
lldpTLVFacilityHistorical15minTLVDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 309, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityHistorical15minTLVDiscards.setStatus('current')
lldpTLVFacilityHistorical15minTLVUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 309, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityHistorical15minTLVUnknown.setStatus('current')
lldpTLVFacilityHistorical15minAgeOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 309, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityHistorical15minAgeOuts.setStatus('current')
lldpTLVFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 309, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityHistorical15minValidFlag.setStatus('current')
lldpTLVFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 309, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityHistorical15minTimeStamp.setStatus('current')
endOfLldpTLVFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 310), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVFacilityHistorical15minTable.setStatus('current')
lldpTLVFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 311), )
if mibBuilder.loadTexts: lldpTLVFacilityHistorical1dayTable.setStatus('current')
lldpTLVFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 311, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpTLVFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: lldpTLVFacilityHistorical1dayEntry.setStatus('current')
lldpTLVFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 311, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: lldpTLVFacilityHistorical1dayNumber.setStatus('current')
lldpTLVFacilityHistorical1dayTLVDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 311, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityHistorical1dayTLVDiscards.setStatus('current')
lldpTLVFacilityHistorical1dayTLVUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 311, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityHistorical1dayTLVUnknown.setStatus('current')
lldpTLVFacilityHistorical1dayAgeOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 311, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityHistorical1dayAgeOuts.setStatus('current')
lldpTLVFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 311, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityHistorical1dayValidFlag.setStatus('current')
lldpTLVFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 311, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpTLVFacilityHistorical1dayTimeStamp.setStatus('current')
endOfLldpTLVFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 312), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpTLVFacilityHistorical1dayTable.setStatus('current')
lldpFrameFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 313), )
if mibBuilder.loadTexts: lldpFrameFacilityCurrent15minTable.setStatus('current')
lldpFrameFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 313, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpFrameFacilityCurrent15minEntry.setStatus('current')
lldpFrameFacilityCurrent15minLLDPFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 313, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityCurrent15minLLDPFrames.setStatus('current')
lldpFrameFacilityCurrent15minLLDPFrameDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 313, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityCurrent15minLLDPFrameDiscards.setStatus('current')
lldpFrameFacilityCurrent15minFrameTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 313, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityCurrent15minFrameTxErrors.setStatus('current')
lldpFrameFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 313, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityCurrent15minElapsedTime.setStatus('current')
endOfLldpFrameFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 314), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameFacilityCurrent15minTable.setStatus('current')
lldpFrameFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 315), )
if mibBuilder.loadTexts: lldpFrameFacilityCurrent1dayTable.setStatus('current')
lldpFrameFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 315, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: lldpFrameFacilityCurrent1dayEntry.setStatus('current')
lldpFrameFacilityCurrent1dayLLDPFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 315, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityCurrent1dayLLDPFrames.setStatus('current')
lldpFrameFacilityCurrent1dayLLDPFrameDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 315, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityCurrent1dayLLDPFrameDiscards.setStatus('current')
lldpFrameFacilityCurrent1dayFrameTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 315, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityCurrent1dayFrameTxErrors.setStatus('current')
lldpFrameFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 315, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityCurrent1dayElapsedTime.setStatus('current')
endOfLldpFrameFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 316), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameFacilityCurrent1dayTable.setStatus('current')
lldpFrameFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 317), )
if mibBuilder.loadTexts: lldpFrameFacilityHistorical15minTable.setStatus('current')
lldpFrameFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 317, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpFrameFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: lldpFrameFacilityHistorical15minEntry.setStatus('current')
lldpFrameFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 317, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: lldpFrameFacilityHistorical15minNumber.setStatus('current')
lldpFrameFacilityHistorical15minLLDPFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 317, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityHistorical15minLLDPFrames.setStatus('current')
lldpFrameFacilityHistorical15minLLDPFrameDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 317, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityHistorical15minLLDPFrameDiscards.setStatus('current')
lldpFrameFacilityHistorical15minFrameTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 317, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityHistorical15minFrameTxErrors.setStatus('current')
lldpFrameFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 317, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityHistorical15minValidFlag.setStatus('current')
lldpFrameFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 317, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityHistorical15minTimeStamp.setStatus('current')
endOfLldpFrameFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 318), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameFacilityHistorical15minTable.setStatus('current')
lldpFrameFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 319), )
if mibBuilder.loadTexts: lldpFrameFacilityHistorical1dayTable.setStatus('current')
lldpFrameFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 319, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "lldpFrameFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: lldpFrameFacilityHistorical1dayEntry.setStatus('current')
lldpFrameFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 319, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: lldpFrameFacilityHistorical1dayNumber.setStatus('current')
lldpFrameFacilityHistorical1dayLLDPFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 319, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityHistorical1dayLLDPFrames.setStatus('current')
lldpFrameFacilityHistorical1dayLLDPFrameDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 319, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityHistorical1dayLLDPFrameDiscards.setStatus('current')
lldpFrameFacilityHistorical1dayFrameTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 319, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityHistorical1dayFrameTxErrors.setStatus('current')
lldpFrameFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 319, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityHistorical1dayValidFlag.setStatus('current')
lldpFrameFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 319, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpFrameFacilityHistorical1dayTimeStamp.setStatus('current')
endOfLldpFrameFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 320), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLldpFrameFacilityHistorical1dayTable.setStatus('current')
rsFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 321), )
if mibBuilder.loadTexts: rsFacilityCurrent15minTable.setStatus('current')
rsFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 321, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: rsFacilityCurrent15minEntry.setStatus('current')
rsFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 321, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent15minES.setStatus('current')
rsFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 321, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent15minSES.setStatus('current')
rsFacilityCurrent15minSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 321, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent15minSEFS.setStatus('current')
rsFacilityCurrent15minOOFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 321, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent15minOOFS.setStatus('current')
rsFacilityCurrent15minBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 321, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent15minBBE.setStatus('current')
rsFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 321, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent15minElapsedTime.setStatus('current')
endOfRsFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 322), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfRsFacilityCurrent15minTable.setStatus('current')
rsFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 323), )
if mibBuilder.loadTexts: rsFacilityCurrent1dayTable.setStatus('current')
rsFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 323, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: rsFacilityCurrent1dayEntry.setStatus('current')
rsFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 323, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent1dayES.setStatus('current')
rsFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 323, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent1daySES.setStatus('current')
rsFacilityCurrent1daySEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 323, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent1daySEFS.setStatus('current')
rsFacilityCurrent1dayOOFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 323, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent1dayOOFS.setStatus('current')
rsFacilityCurrent1dayBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 323, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent1dayBBE.setStatus('current')
rsFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 323, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityCurrent1dayElapsedTime.setStatus('current')
endOfRsFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 324), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfRsFacilityCurrent1dayTable.setStatus('current')
rsFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 325), )
if mibBuilder.loadTexts: rsFacilityHistorical15minTable.setStatus('current')
rsFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 325, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "rsFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: rsFacilityHistorical15minEntry.setStatus('current')
rsFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 325, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: rsFacilityHistorical15minNumber.setStatus('current')
rsFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 325, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical15minES.setStatus('current')
rsFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 325, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical15minSES.setStatus('current')
rsFacilityHistorical15minSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 325, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical15minSEFS.setStatus('current')
rsFacilityHistorical15minOOFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 325, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical15minOOFS.setStatus('current')
rsFacilityHistorical15minBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 325, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical15minBBE.setStatus('current')
rsFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 325, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical15minValidFlag.setStatus('current')
rsFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 325, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical15minTimeStamp.setStatus('current')
endOfRsFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 326), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfRsFacilityHistorical15minTable.setStatus('current')
rsFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 327), )
if mibBuilder.loadTexts: rsFacilityHistorical1dayTable.setStatus('current')
rsFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 327, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "rsFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: rsFacilityHistorical1dayEntry.setStatus('current')
rsFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 327, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: rsFacilityHistorical1dayNumber.setStatus('current')
rsFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 327, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical1dayES.setStatus('current')
rsFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 327, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical1daySES.setStatus('current')
rsFacilityHistorical1daySEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 327, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical1daySEFS.setStatus('current')
rsFacilityHistorical1dayOOFS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 327, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical1dayOOFS.setStatus('current')
rsFacilityHistorical1dayBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 327, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical1dayBBE.setStatus('current')
rsFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 327, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical1dayValidFlag.setStatus('current')
rsFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 327, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsFacilityHistorical1dayTimeStamp.setStatus('current')
endOfRsFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 328), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfRsFacilityHistorical1dayTable.setStatus('current')
msFacilityCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 329), )
if mibBuilder.loadTexts: msFacilityCurrent15minTable.setStatus('current')
msFacilityCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 329, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: msFacilityCurrent15minEntry.setStatus('current')
msFacilityCurrent15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 329, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityCurrent15minES.setStatus('current')
msFacilityCurrent15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 329, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityCurrent15minSES.setStatus('current')
msFacilityCurrent15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 329, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityCurrent15minUAS.setStatus('current')
msFacilityCurrent15minBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 329, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityCurrent15minBBE.setStatus('current')
msFacilityCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 329, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityCurrent15minElapsedTime.setStatus('current')
endOfMsFacilityCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 330), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMsFacilityCurrent15minTable.setStatus('current')
msFacilityCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 331), )
if mibBuilder.loadTexts: msFacilityCurrent1dayTable.setStatus('current')
msFacilityCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 331, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: msFacilityCurrent1dayEntry.setStatus('current')
msFacilityCurrent1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 331, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityCurrent1dayES.setStatus('current')
msFacilityCurrent1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 331, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityCurrent1daySES.setStatus('current')
msFacilityCurrent1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 331, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityCurrent1dayUAS.setStatus('current')
msFacilityCurrent1dayBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 331, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityCurrent1dayBBE.setStatus('current')
msFacilityCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 331, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityCurrent1dayElapsedTime.setStatus('current')
endOfMsFacilityCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 332), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMsFacilityCurrent1dayTable.setStatus('current')
msFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 333), )
if mibBuilder.loadTexts: msFacilityHistorical15minTable.setStatus('current')
msFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 333, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "msFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: msFacilityHistorical15minEntry.setStatus('current')
msFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 333, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: msFacilityHistorical15minNumber.setStatus('current')
msFacilityHistorical15minES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 333, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical15minES.setStatus('current')
msFacilityHistorical15minSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 333, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical15minSES.setStatus('current')
msFacilityHistorical15minUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 333, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical15minUAS.setStatus('current')
msFacilityHistorical15minBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 333, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical15minBBE.setStatus('current')
msFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 333, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical15minValidFlag.setStatus('current')
msFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 333, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical15minTimeStamp.setStatus('current')
endOfMsFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 334), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMsFacilityHistorical15minTable.setStatus('current')
msFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 335), )
if mibBuilder.loadTexts: msFacilityHistorical1dayTable.setStatus('current')
msFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 335, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"), (0, "ADVA-FSPR7-PM-MIB", "msFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: msFacilityHistorical1dayEntry.setStatus('current')
msFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 335, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: msFacilityHistorical1dayNumber.setStatus('current')
msFacilityHistorical1dayES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 335, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical1dayES.setStatus('current')
msFacilityHistorical1daySES = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 335, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical1daySES.setStatus('current')
msFacilityHistorical1dayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 335, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical1dayUAS.setStatus('current')
msFacilityHistorical1dayBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 335, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical1dayBBE.setStatus('current')
msFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 335, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical1dayValidFlag.setStatus('current')
msFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 335, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msFacilityHistorical1dayTimeStamp.setStatus('current')
endOfMsFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 336), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMsFacilityHistorical1dayTable.setStatus('current')
endOfPmFacilityDataRecord = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 2, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmFacilityDataRecord.setStatus('current')
facilityDataInstValueTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 3, 1), )
if mibBuilder.loadTexts: facilityDataInstValueTable.setStatus('current')
facilityDataInstValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 3, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: facilityDataInstValueEntry.setStatus('current')
facilityDataInstValueUtilizationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 3, 1, 1, 1), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityDataInstValueUtilizationRx.setStatus('current')
facilityDataInstValueUtilizationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 3, 1, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityDataInstValueUtilizationTx.setStatus('current')
endOfFacilityDataInstValueTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFacilityDataInstValueTable.setStatus('current')
endOfPmFacilityDataValue = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 1, 3, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmFacilityDataValue.setStatus('current')
facilityPhysInstValueTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1), )
if mibBuilder.loadTexts: facilityPhysInstValueTable.setStatus('current')
facilityPhysInstValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: facilityPhysInstValueEntry.setStatus('current')
facilityPhysInstValueOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 1), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueOutputPower.setStatus('current')
facilityPhysInstValueInputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueInputPower.setStatus('current')
facilityPhysInstValueLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 3), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueLaserTemp.setStatus('current')
facilityPhysInstValueLaserBiasCurrentLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 4), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueLaserBiasCurrentLevel.setStatus('current')
facilityPhysInstValuePrbsMaxBER = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 5), Counter64String()).setUnits('1.0E-15').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValuePrbsMaxBER.setStatus('current')
facilityPhysInstValueAttenuationOfVoa = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 6), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueAttenuationOfVoa.setStatus('current')
facilityPhysInstValueLocalOscTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 7), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueLocalOscTemp.setStatus('current')
facilityPhysInstValuePrbsElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 8), Unsigned32()).setUnits('s').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValuePrbsElapsedTime.setStatus('current')
facilityPhysInstValueLocalOscBiasLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 9), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueLocalOscBiasLevel.setStatus('current')
facilityPhysInstValuePrbsErrorFreeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 10), Unsigned32()).setUnits('s').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValuePrbsErrorFreeTime.setStatus('current')
facilityPhysInstValuePrbsAvgBER = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 11), Counter64String()).setUnits('1.0E-15').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValuePrbsAvgBER.setStatus('current')
facilityPhysInstValueLogicalLanesSkew = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 12), Integer32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueLogicalLanesSkew.setStatus('current')
facilityPhysInstValueRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000000))).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueRoundTripDelay.setStatus('current')
facilityPhysInstValueSignalToNoiseRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 14), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueSignalToNoiseRatio.setStatus('current')
facilityPhysInstValueCarrierFreqOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 15), Integer32()).setUnits('0.001 GHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueCarrierFreqOffset.setStatus('current')
facilityPhysInstValueLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 300000))).setUnits('0.1 us').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueLatency.setStatus('current')
facilityPhysInstValueDifferentialGroupDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 17), Integer32()).setUnits('ps').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueDifferentialGroupDelay.setStatus('current')
facilityPhysInstValueLaserBiasCurrentNormalized = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 18), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueLaserBiasCurrentNormalized.setStatus('current')
facilityPhysInstValueChromaticDispersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 19), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueChromaticDispersion.setStatus('current')
facilityPhysInstValueChromaticDispComp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 20), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueChromaticDispComp.setStatus('current')
facilityPhysInstValueCalculatedTotalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 21), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueCalculatedTotalPower.setStatus('current')
facilityPhysInstValueCalculatedTotalPowerTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 22), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueCalculatedTotalPowerTx.setStatus('current')
facilityPhysInstValueQualityFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 23), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueQualityFactor.setStatus('current')
facilityPhysInstValueOutputPowerRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 24), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueOutputPowerRaw.setStatus('current')
facilityPhysInstValueInputPowerRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 25), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueInputPowerRaw.setStatus('current')
facilityPhysInstValueDelayFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 26), Unsigned32()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueDelayFrames.setStatus('current')
facilityPhysInstValueDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 1, 1, 27), Unsigned32()).setUnits('0.1 us').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysInstValueDelayTime.setStatus('current')
endOfFacilityPhysInstValueTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFacilityPhysInstValueTable.setStatus('current')
endOfPmFacilityPhysValue = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 1, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmFacilityPhysValue.setStatus('current')
facilityPhysThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1), )
if mibBuilder.loadTexts: facilityPhysThresholdTable.setStatus('current')
facilityPhysThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityFacilityShelfNo"), (0, "ADVA-FSPR7-MIB", "entityFacilitySlotNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityPortNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityExtNo"), (0, "ADVA-FSPR7-MIB", "entityFacilityClassName"))
if mibBuilder.loadTexts: facilityPhysThresholdEntry.setStatus('current')
facilityPhysThresholdOpticalInputPwrLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-450, 260))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdOpticalInputPwrLow.setStatus('current')
facilityPhysThresholdOpticalInputPwrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-450, 270))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdOpticalInputPwrHigh.setStatus('current')
facilityPhysThresholdConfigOpticalOutputPwrLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-500, 300))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdConfigOpticalOutputPwrLow.setStatus('current')
facilityPhysThresholdConfigOpticalOutputPwrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-500, 300))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdConfigOpticalOutputPwrHigh.setStatus('current')
facilityPhysThresholdOpticalOutputPwrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 5), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysThresholdOpticalOutputPwrHigh.setStatus('current')
facilityPhysThresholdOpticalOutputPwrLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 6), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysThresholdOpticalOutputPwrLow.setStatus('current')
facilityPhysThresholdLaserTempHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 7), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysThresholdLaserTempHighThres.setStatus('current')
facilityPhysThresholdLaserTempLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 8), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysThresholdLaserTempLowThres.setStatus('current')
facilityPhysThresholdRoundTripDelayLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000000))).setUnits('ns').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdRoundTripDelayLowThres.setStatus('current')
facilityPhysThresholdRoundTripDelayHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30000000))).setUnits('ns').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdRoundTripDelayHighThres.setStatus('current')
facilityPhysThresholdLatencyLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300000))).setUnits('0.1 us').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdLatencyLowThres.setStatus('current')
facilityPhysThresholdLatencyHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300000))).setUnits('0.1 us').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdLatencyHighThres.setStatus('current')
facilityPhysThresholdChromaticDispersionHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100000, 100000))).setUnits('ps/nm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdChromaticDispersionHigh.setStatus('current')
facilityPhysThresholdChromaticDispersionLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100000, 100000))).setUnits('ps/nm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdChromaticDispersionLow.setStatus('current')
facilityPhysThresholdCarrierFreqOffsetLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32000, 32000))).setUnits('0.001 GHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdCarrierFreqOffsetLow.setStatus('current')
facilityPhysThresholdCarrierFreqOffsetHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32000, 32000))).setUnits('0.001 GHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdCarrierFreqOffsetHigh.setStatus('current')
facilityPhysThresholdDispersionCompensationLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50000, 50000))).setUnits('ps/nm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdDispersionCompensationLowThres.setStatus('current')
facilityPhysThresholdDispersionCompensationHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50000, 50000))).setUnits('ps/nm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdDispersionCompensationHighThres.setStatus('current')
facilityPhysThresholdDifferentialGroupDelayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('ps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdDifferentialGroupDelayHigh.setStatus('current')
facilityPhysThresholdLogicalLanesSkewHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('ns').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdLogicalLanesSkewHigh.setStatus('current')
facilityPhysThresholdLaserBiasCurrentNormalized = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 21), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysThresholdLaserBiasCurrentNormalized.setStatus('current')
facilityPhysThresholdLocalOscTempLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 22), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysThresholdLocalOscTempLowThres.setStatus('current')
facilityPhysThresholdLocalOscTempHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 23), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: facilityPhysThresholdLocalOscTempHighThres.setStatus('current')
facilityPhysThresholdSignalToNoiseRatioLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(70, 240))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdSignalToNoiseRatioLow.setStatus('current')
facilityPhysThresholdQualityFactorLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: facilityPhysThresholdQualityFactorLowThres.setStatus('current')
endOfFacilityPhysThresholdTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFacilityPhysThresholdTable.setStatus('current')
endOfPmFacilityPhysThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 2, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmFacilityPhysThreshold.setStatus('current')
optFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 1), )
if mibBuilder.loadTexts: optFacilityHistorical15minTable.setStatus('current')
optFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "optFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: optFacilityHistorical15minEntry.setStatus('current')
optFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: optFacilityHistorical15minNumber.setStatus('current')
optFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 1, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical15minLow.setStatus('current')
optFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 1, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical15minMean.setStatus('current')
optFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 1, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical15minHigh.setStatus('current')
optFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical15minValidFlag.setStatus('current')
optFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical15minTimeStamp.setStatus('current')
endOfOptFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOptFacilityHistorical15minTable.setStatus('current')
optFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 3), )
if mibBuilder.loadTexts: optFacilityHistorical1dayTable.setStatus('current')
optFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 3, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "optFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: optFacilityHistorical1dayEntry.setStatus('current')
optFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: optFacilityHistorical1dayNumber.setStatus('current')
optFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 3, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical1dayLow.setStatus('current')
optFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 3, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical1dayMean.setStatus('current')
optFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 3, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical1dayHigh.setStatus('current')
optFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical1dayValidFlag.setStatus('current')
optFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 3, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical1dayTimeStamp.setStatus('current')
endOfOptFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOptFacilityHistorical1dayTable.setStatus('current')
optFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 5), )
if mibBuilder.loadTexts: optFacilityHistorical1weekTable.setStatus('current')
optFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 5, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "optFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: optFacilityHistorical1weekEntry.setStatus('current')
optFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: optFacilityHistorical1weekNumber.setStatus('current')
optFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 5, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical1weekLow.setStatus('current')
optFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 5, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical1weekMean.setStatus('current')
optFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 5, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical1weekHigh.setStatus('current')
optFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 5, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical1weekValidFlag.setStatus('current')
optFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 5, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optFacilityHistorical1weekTimeStamp.setStatus('current')
endOfOptFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOptFacilityHistorical1weekTable.setStatus('current')
oprFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 7), )
if mibBuilder.loadTexts: oprFacilityHistorical15minTable.setStatus('current')
oprFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 7, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "oprFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: oprFacilityHistorical15minEntry.setStatus('current')
oprFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: oprFacilityHistorical15minNumber.setStatus('current')
oprFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 7, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical15minLow.setStatus('current')
oprFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 7, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical15minMean.setStatus('current')
oprFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 7, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical15minHigh.setStatus('current')
oprFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 7, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical15minValidFlag.setStatus('current')
oprFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 7, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical15minTimeStamp.setStatus('current')
endOfOprFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOprFacilityHistorical15minTable.setStatus('current')
oprFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 9), )
if mibBuilder.loadTexts: oprFacilityHistorical1dayTable.setStatus('current')
oprFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 9, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "oprFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: oprFacilityHistorical1dayEntry.setStatus('current')
oprFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: oprFacilityHistorical1dayNumber.setStatus('current')
oprFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 9, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical1dayLow.setStatus('current')
oprFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 9, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical1dayMean.setStatus('current')
oprFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 9, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical1dayHigh.setStatus('current')
oprFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 9, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical1dayValidFlag.setStatus('current')
oprFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 9, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical1dayTimeStamp.setStatus('current')
endOfOprFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOprFacilityHistorical1dayTable.setStatus('current')
oprFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 11), )
if mibBuilder.loadTexts: oprFacilityHistorical1weekTable.setStatus('current')
oprFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 11, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "oprFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: oprFacilityHistorical1weekEntry.setStatus('current')
oprFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: oprFacilityHistorical1weekNumber.setStatus('current')
oprFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 11, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical1weekLow.setStatus('current')
oprFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 11, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical1weekMean.setStatus('current')
oprFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 11, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical1weekHigh.setStatus('current')
oprFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 11, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical1weekValidFlag.setStatus('current')
oprFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 11, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprFacilityHistorical1weekTimeStamp.setStatus('current')
endOfOprFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOprFacilityHistorical1weekTable.setStatus('current')
lbcnFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 13), )
if mibBuilder.loadTexts: lbcnFacilityHistorical15minTable.setStatus('current')
lbcnFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 13, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "lbcnFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: lbcnFacilityHistorical15minEntry.setStatus('current')
lbcnFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: lbcnFacilityHistorical15minNumber.setStatus('current')
lbcnFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 13, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical15minLow.setStatus('current')
lbcnFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 13, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical15minMean.setStatus('current')
lbcnFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 13, 1, 4), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical15minHigh.setStatus('current')
lbcnFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 13, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical15minValidFlag.setStatus('current')
lbcnFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 13, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical15minTimeStamp.setStatus('current')
endOfLbcnFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLbcnFacilityHistorical15minTable.setStatus('current')
lbcnFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 15), )
if mibBuilder.loadTexts: lbcnFacilityHistorical1dayTable.setStatus('current')
lbcnFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 15, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "lbcnFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: lbcnFacilityHistorical1dayEntry.setStatus('current')
lbcnFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: lbcnFacilityHistorical1dayNumber.setStatus('current')
lbcnFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 15, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical1dayLow.setStatus('current')
lbcnFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 15, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical1dayMean.setStatus('current')
lbcnFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 15, 1, 4), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical1dayHigh.setStatus('current')
lbcnFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 15, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical1dayValidFlag.setStatus('current')
lbcnFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 15, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical1dayTimeStamp.setStatus('current')
endOfLbcnFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLbcnFacilityHistorical1dayTable.setStatus('current')
lbcnFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 17), )
if mibBuilder.loadTexts: lbcnFacilityHistorical1weekTable.setStatus('current')
lbcnFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 17, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "lbcnFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: lbcnFacilityHistorical1weekEntry.setStatus('current')
lbcnFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: lbcnFacilityHistorical1weekNumber.setStatus('current')
lbcnFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 17, 1, 2), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical1weekLow.setStatus('current')
lbcnFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 17, 1, 3), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical1weekMean.setStatus('current')
lbcnFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 17, 1, 4), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical1weekHigh.setStatus('current')
lbcnFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 17, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical1weekValidFlag.setStatus('current')
lbcnFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 17, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbcnFacilityHistorical1weekTimeStamp.setStatus('current')
endOfLbcnFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLbcnFacilityHistorical1weekTable.setStatus('current')
rndTrpDlyFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 19), )
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical15minTable.setStatus('current')
rndTrpDlyFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 19, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "rndTrpDlyFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical15minEntry.setStatus('current')
rndTrpDlyFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical15minNumber.setStatus('current')
rndTrpDlyFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 19, 1, 2), Unsigned32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical15minLow.setStatus('current')
rndTrpDlyFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 19, 1, 3), Unsigned32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical15minMean.setStatus('current')
rndTrpDlyFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 19, 1, 4), Unsigned32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical15minHigh.setStatus('current')
rndTrpDlyFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 19, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical15minValidFlag.setStatus('current')
rndTrpDlyFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 19, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical15minTimeStamp.setStatus('current')
endOfRndTrpDlyFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfRndTrpDlyFacilityHistorical15minTable.setStatus('current')
rndTrpDlyFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 21), )
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1dayTable.setStatus('current')
rndTrpDlyFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 21, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "rndTrpDlyFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1dayEntry.setStatus('current')
rndTrpDlyFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1dayNumber.setStatus('current')
rndTrpDlyFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 21, 1, 2), Unsigned32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1dayLow.setStatus('current')
rndTrpDlyFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 21, 1, 3), Unsigned32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1dayMean.setStatus('current')
rndTrpDlyFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 21, 1, 4), Unsigned32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1dayHigh.setStatus('current')
rndTrpDlyFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 21, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1dayValidFlag.setStatus('current')
rndTrpDlyFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 21, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1dayTimeStamp.setStatus('current')
endOfRndTrpDlyFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfRndTrpDlyFacilityHistorical1dayTable.setStatus('current')
rndTrpDlyFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 23), )
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1weekTable.setStatus('current')
rndTrpDlyFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 23, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "rndTrpDlyFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1weekEntry.setStatus('current')
rndTrpDlyFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1weekNumber.setStatus('current')
rndTrpDlyFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 23, 1, 2), Unsigned32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1weekLow.setStatus('current')
rndTrpDlyFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 23, 1, 3), Unsigned32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1weekMean.setStatus('current')
rndTrpDlyFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 23, 1, 4), Unsigned32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1weekHigh.setStatus('current')
rndTrpDlyFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 23, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1weekValidFlag.setStatus('current')
rndTrpDlyFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 23, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rndTrpDlyFacilityHistorical1weekTimeStamp.setStatus('current')
endOfRndTrpDlyFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfRndTrpDlyFacilityHistorical1weekTable.setStatus('current')
skewFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 25), )
if mibBuilder.loadTexts: skewFacilityHistorical15minTable.setStatus('current')
skewFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 25, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "skewFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: skewFacilityHistorical15minEntry.setStatus('current')
skewFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: skewFacilityHistorical15minNumber.setStatus('current')
skewFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 25, 1, 2), Integer32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical15minLow.setStatus('current')
skewFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 25, 1, 3), Integer32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical15minMean.setStatus('current')
skewFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 25, 1, 4), Integer32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical15minHigh.setStatus('current')
skewFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 25, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical15minValidFlag.setStatus('current')
skewFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 25, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical15minTimeStamp.setStatus('current')
endOfSkewFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSkewFacilityHistorical15minTable.setStatus('current')
skewFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 27), )
if mibBuilder.loadTexts: skewFacilityHistorical1dayTable.setStatus('current')
skewFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 27, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "skewFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: skewFacilityHistorical1dayEntry.setStatus('current')
skewFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: skewFacilityHistorical1dayNumber.setStatus('current')
skewFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 27, 1, 2), Integer32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical1dayLow.setStatus('current')
skewFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 27, 1, 3), Integer32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical1dayMean.setStatus('current')
skewFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 27, 1, 4), Integer32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical1dayHigh.setStatus('current')
skewFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 27, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical1dayValidFlag.setStatus('current')
skewFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 27, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical1dayTimeStamp.setStatus('current')
endOfSkewFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSkewFacilityHistorical1dayTable.setStatus('current')
skewFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 29), )
if mibBuilder.loadTexts: skewFacilityHistorical1weekTable.setStatus('current')
skewFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 29, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "skewFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: skewFacilityHistorical1weekEntry.setStatus('current')
skewFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: skewFacilityHistorical1weekNumber.setStatus('current')
skewFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 29, 1, 2), Integer32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical1weekLow.setStatus('current')
skewFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 29, 1, 3), Integer32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical1weekMean.setStatus('current')
skewFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 29, 1, 4), Integer32()).setUnits('ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical1weekHigh.setStatus('current')
skewFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 29, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical1weekValidFlag.setStatus('current')
skewFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 29, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: skewFacilityHistorical1weekTimeStamp.setStatus('current')
endOfSkewFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSkewFacilityHistorical1weekTable.setStatus('current')
snrFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 31), )
if mibBuilder.loadTexts: snrFacilityHistorical15minTable.setStatus('current')
snrFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 31, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "snrFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: snrFacilityHistorical15minEntry.setStatus('current')
snrFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: snrFacilityHistorical15minNumber.setStatus('current')
snrFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 31, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical15minLow.setStatus('current')
snrFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 31, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical15minMean.setStatus('current')
snrFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 31, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical15minHigh.setStatus('current')
snrFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 31, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical15minValidFlag.setStatus('current')
snrFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 31, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical15minTimeStamp.setStatus('current')
endOfSnrFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSnrFacilityHistorical15minTable.setStatus('current')
snrFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 33), )
if mibBuilder.loadTexts: snrFacilityHistorical1dayTable.setStatus('current')
snrFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 33, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "snrFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: snrFacilityHistorical1dayEntry.setStatus('current')
snrFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 33, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: snrFacilityHistorical1dayNumber.setStatus('current')
snrFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 33, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical1dayLow.setStatus('current')
snrFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 33, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical1dayMean.setStatus('current')
snrFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 33, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical1dayHigh.setStatus('current')
snrFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 33, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical1dayValidFlag.setStatus('current')
snrFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 33, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical1dayTimeStamp.setStatus('current')
endOfSnrFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSnrFacilityHistorical1dayTable.setStatus('current')
snrFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 35), )
if mibBuilder.loadTexts: snrFacilityHistorical1weekTable.setStatus('current')
snrFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 35, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "snrFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: snrFacilityHistorical1weekEntry.setStatus('current')
snrFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 35, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: snrFacilityHistorical1weekNumber.setStatus('current')
snrFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 35, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical1weekLow.setStatus('current')
snrFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 35, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical1weekMean.setStatus('current')
snrFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 35, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical1weekHigh.setStatus('current')
snrFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 35, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical1weekValidFlag.setStatus('current')
snrFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 35, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snrFacilityHistorical1weekTimeStamp.setStatus('current')
endOfSnrFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfSnrFacilityHistorical1weekTable.setStatus('current')
cfotFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 37), )
if mibBuilder.loadTexts: cfotFacilityHistorical15minTable.setStatus('current')
cfotFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 37, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "cfotFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: cfotFacilityHistorical15minEntry.setStatus('current')
cfotFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 37, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: cfotFacilityHistorical15minNumber.setStatus('current')
cfotFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 37, 1, 2), Integer32()).setUnits('0.001 GHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical15minLow.setStatus('current')
cfotFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 37, 1, 3), Integer32()).setUnits('0.001 GHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical15minMean.setStatus('current')
cfotFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 37, 1, 4), Integer32()).setUnits('0.001 GHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical15minHigh.setStatus('current')
cfotFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 37, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical15minValidFlag.setStatus('current')
cfotFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 37, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical15minTimeStamp.setStatus('current')
endOfCfotFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfCfotFacilityHistorical15minTable.setStatus('current')
cfotFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 39), )
if mibBuilder.loadTexts: cfotFacilityHistorical1dayTable.setStatus('current')
cfotFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 39, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "cfotFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: cfotFacilityHistorical1dayEntry.setStatus('current')
cfotFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 39, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: cfotFacilityHistorical1dayNumber.setStatus('current')
cfotFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 39, 1, 2), Integer32()).setUnits('0.001 GHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical1dayLow.setStatus('current')
cfotFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 39, 1, 3), Integer32()).setUnits('0.001 GHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical1dayMean.setStatus('current')
cfotFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 39, 1, 4), Integer32()).setUnits('0.001 GHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical1dayHigh.setStatus('current')
cfotFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 39, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical1dayValidFlag.setStatus('current')
cfotFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 39, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical1dayTimeStamp.setStatus('current')
endOfCfotFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfCfotFacilityHistorical1dayTable.setStatus('current')
cfotFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 41), )
if mibBuilder.loadTexts: cfotFacilityHistorical1weekTable.setStatus('current')
cfotFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 41, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "cfotFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: cfotFacilityHistorical1weekEntry.setStatus('current')
cfotFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 41, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: cfotFacilityHistorical1weekNumber.setStatus('current')
cfotFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 41, 1, 2), Integer32()).setUnits('0.001 GHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical1weekLow.setStatus('current')
cfotFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 41, 1, 3), Integer32()).setUnits('0.001 GHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical1weekMean.setStatus('current')
cfotFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 41, 1, 4), Integer32()).setUnits('0.001 GHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical1weekHigh.setStatus('current')
cfotFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 41, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical1weekValidFlag.setStatus('current')
cfotFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 41, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfotFacilityHistorical1weekTimeStamp.setStatus('current')
endOfCfotFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfCfotFacilityHistorical1weekTable.setStatus('current')
dgdFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 43), )
if mibBuilder.loadTexts: dgdFacilityHistorical15minTable.setStatus('current')
dgdFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 43, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "dgdFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: dgdFacilityHistorical15minEntry.setStatus('current')
dgdFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 43, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: dgdFacilityHistorical15minNumber.setStatus('current')
dgdFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 43, 1, 2), Integer32()).setUnits('ps').setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical15minLow.setStatus('current')
dgdFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 43, 1, 3), Integer32()).setUnits('ps').setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical15minMean.setStatus('current')
dgdFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 43, 1, 4), Integer32()).setUnits('ps').setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical15minHigh.setStatus('current')
dgdFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 43, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical15minValidFlag.setStatus('current')
dgdFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 43, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical15minTimeStamp.setStatus('current')
endOfDgdFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDgdFacilityHistorical15minTable.setStatus('current')
dgdFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 45), )
if mibBuilder.loadTexts: dgdFacilityHistorical1dayTable.setStatus('current')
dgdFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 45, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "dgdFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: dgdFacilityHistorical1dayEntry.setStatus('current')
dgdFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 45, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: dgdFacilityHistorical1dayNumber.setStatus('current')
dgdFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 45, 1, 2), Integer32()).setUnits('ps').setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical1dayLow.setStatus('current')
dgdFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 45, 1, 3), Integer32()).setUnits('ps').setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical1dayMean.setStatus('current')
dgdFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 45, 1, 4), Integer32()).setUnits('ps').setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical1dayHigh.setStatus('current')
dgdFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 45, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical1dayValidFlag.setStatus('current')
dgdFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 45, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical1dayTimeStamp.setStatus('current')
endOfDgdFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDgdFacilityHistorical1dayTable.setStatus('current')
dgdFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 47), )
if mibBuilder.loadTexts: dgdFacilityHistorical1weekTable.setStatus('current')
dgdFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 47, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "dgdFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: dgdFacilityHistorical1weekEntry.setStatus('current')
dgdFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 47, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: dgdFacilityHistorical1weekNumber.setStatus('current')
dgdFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 47, 1, 2), Integer32()).setUnits('ps').setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical1weekLow.setStatus('current')
dgdFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 47, 1, 3), Integer32()).setUnits('ps').setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical1weekMean.setStatus('current')
dgdFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 47, 1, 4), Integer32()).setUnits('ps').setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical1weekHigh.setStatus('current')
dgdFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 47, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical1weekValidFlag.setStatus('current')
dgdFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 47, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dgdFacilityHistorical1weekTimeStamp.setStatus('current')
endOfDgdFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDgdFacilityHistorical1weekTable.setStatus('current')
cdFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 49), )
if mibBuilder.loadTexts: cdFacilityHistorical15minTable.setStatus('current')
cdFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 49, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "cdFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: cdFacilityHistorical15minEntry.setStatus('current')
cdFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 49, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: cdFacilityHistorical15minNumber.setStatus('current')
cdFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 49, 1, 2), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical15minLow.setStatus('current')
cdFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 49, 1, 3), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical15minMean.setStatus('current')
cdFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 49, 1, 4), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical15minHigh.setStatus('current')
cdFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 49, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical15minValidFlag.setStatus('current')
cdFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 49, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical15minTimeStamp.setStatus('current')
endOfCdFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfCdFacilityHistorical15minTable.setStatus('current')
cdFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 51), )
if mibBuilder.loadTexts: cdFacilityHistorical1dayTable.setStatus('current')
cdFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 51, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "cdFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: cdFacilityHistorical1dayEntry.setStatus('current')
cdFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 51, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: cdFacilityHistorical1dayNumber.setStatus('current')
cdFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 51, 1, 2), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical1dayLow.setStatus('current')
cdFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 51, 1, 3), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical1dayMean.setStatus('current')
cdFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 51, 1, 4), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical1dayHigh.setStatus('current')
cdFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 51, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical1dayValidFlag.setStatus('current')
cdFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 51, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical1dayTimeStamp.setStatus('current')
endOfCdFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfCdFacilityHistorical1dayTable.setStatus('current')
cdFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 53), )
if mibBuilder.loadTexts: cdFacilityHistorical1weekTable.setStatus('current')
cdFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 53, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "cdFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: cdFacilityHistorical1weekEntry.setStatus('current')
cdFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 53, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: cdFacilityHistorical1weekNumber.setStatus('current')
cdFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 53, 1, 2), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical1weekLow.setStatus('current')
cdFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 53, 1, 3), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical1weekMean.setStatus('current')
cdFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 53, 1, 4), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical1weekHigh.setStatus('current')
cdFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 53, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical1weekValidFlag.setStatus('current')
cdFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 53, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdFacilityHistorical1weekTimeStamp.setStatus('current')
endOfCdFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfCdFacilityHistorical1weekTable.setStatus('current')
latencyFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 55), )
if mibBuilder.loadTexts: latencyFacilityHistorical15minTable.setStatus('current')
latencyFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 55, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "latencyFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: latencyFacilityHistorical15minEntry.setStatus('current')
latencyFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 55, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: latencyFacilityHistorical15minNumber.setStatus('current')
latencyFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 55, 1, 2), Unsigned32()).setUnits('0.1 us').setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical15minLow.setStatus('current')
latencyFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 55, 1, 3), Unsigned32()).setUnits('0.1 us').setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical15minMean.setStatus('current')
latencyFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 55, 1, 4), Unsigned32()).setUnits('0.1 us').setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical15minHigh.setStatus('current')
latencyFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 55, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical15minValidFlag.setStatus('current')
latencyFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 55, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical15minTimeStamp.setStatus('current')
endOfLatencyFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLatencyFacilityHistorical15minTable.setStatus('current')
latencyFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 57), )
if mibBuilder.loadTexts: latencyFacilityHistorical1dayTable.setStatus('current')
latencyFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 57, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "latencyFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: latencyFacilityHistorical1dayEntry.setStatus('current')
latencyFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 57, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: latencyFacilityHistorical1dayNumber.setStatus('current')
latencyFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 57, 1, 2), Unsigned32()).setUnits('0.1 us').setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical1dayLow.setStatus('current')
latencyFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 57, 1, 3), Unsigned32()).setUnits('0.1 us').setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical1dayMean.setStatus('current')
latencyFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 57, 1, 4), Unsigned32()).setUnits('0.1 us').setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical1dayHigh.setStatus('current')
latencyFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 57, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical1dayValidFlag.setStatus('current')
latencyFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 57, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical1dayTimeStamp.setStatus('current')
endOfLatencyFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLatencyFacilityHistorical1dayTable.setStatus('current')
latencyFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 59), )
if mibBuilder.loadTexts: latencyFacilityHistorical1weekTable.setStatus('current')
latencyFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 59, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "latencyFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: latencyFacilityHistorical1weekEntry.setStatus('current')
latencyFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 59, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: latencyFacilityHistorical1weekNumber.setStatus('current')
latencyFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 59, 1, 2), Unsigned32()).setUnits('0.1 us').setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical1weekLow.setStatus('current')
latencyFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 59, 1, 3), Unsigned32()).setUnits('0.1 us').setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical1weekMean.setStatus('current')
latencyFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 59, 1, 4), Unsigned32()).setUnits('0.1 us').setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical1weekHigh.setStatus('current')
latencyFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 59, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical1weekValidFlag.setStatus('current')
latencyFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 59, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latencyFacilityHistorical1weekTimeStamp.setStatus('current')
endOfLatencyFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfLatencyFacilityHistorical1weekTable.setStatus('current')
cdcFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 61), )
if mibBuilder.loadTexts: cdcFacilityHistorical15minTable.setStatus('current')
cdcFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 61, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "cdcFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: cdcFacilityHistorical15minEntry.setStatus('current')
cdcFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 61, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: cdcFacilityHistorical15minNumber.setStatus('current')
cdcFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 61, 1, 2), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical15minLow.setStatus('current')
cdcFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 61, 1, 3), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical15minMean.setStatus('current')
cdcFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 61, 1, 4), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical15minHigh.setStatus('current')
cdcFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 61, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical15minValidFlag.setStatus('current')
cdcFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 61, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical15minTimeStamp.setStatus('current')
endOfCdcFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfCdcFacilityHistorical15minTable.setStatus('current')
cdcFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 63), )
if mibBuilder.loadTexts: cdcFacilityHistorical1dayTable.setStatus('current')
cdcFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 63, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "cdcFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: cdcFacilityHistorical1dayEntry.setStatus('current')
cdcFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 63, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: cdcFacilityHistorical1dayNumber.setStatus('current')
cdcFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 63, 1, 2), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical1dayLow.setStatus('current')
cdcFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 63, 1, 3), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical1dayMean.setStatus('current')
cdcFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 63, 1, 4), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical1dayHigh.setStatus('current')
cdcFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 63, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical1dayValidFlag.setStatus('current')
cdcFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 63, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical1dayTimeStamp.setStatus('current')
endOfCdcFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfCdcFacilityHistorical1dayTable.setStatus('current')
cdcFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 65), )
if mibBuilder.loadTexts: cdcFacilityHistorical1weekTable.setStatus('current')
cdcFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 65, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "cdcFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: cdcFacilityHistorical1weekEntry.setStatus('current')
cdcFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 65, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: cdcFacilityHistorical1weekNumber.setStatus('current')
cdcFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 65, 1, 2), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical1weekLow.setStatus('current')
cdcFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 65, 1, 3), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical1weekMean.setStatus('current')
cdcFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 65, 1, 4), Integer32()).setUnits('ps/nm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical1weekHigh.setStatus('current')
cdcFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 65, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical1weekValidFlag.setStatus('current')
cdcFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 65, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdcFacilityHistorical1weekTimeStamp.setStatus('current')
endOfCdcFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfCdcFacilityHistorical1weekTable.setStatus('current')
qfactFacilityHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 67), )
if mibBuilder.loadTexts: qfactFacilityHistorical15minTable.setStatus('current')
qfactFacilityHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 67, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "qfactFacilityHistorical15minNumber"))
if mibBuilder.loadTexts: qfactFacilityHistorical15minEntry.setStatus('current')
qfactFacilityHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 67, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: qfactFacilityHistorical15minNumber.setStatus('current')
qfactFacilityHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 67, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical15minLow.setStatus('current')
qfactFacilityHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 67, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical15minMean.setStatus('current')
qfactFacilityHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 67, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical15minHigh.setStatus('current')
qfactFacilityHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 67, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical15minValidFlag.setStatus('current')
qfactFacilityHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 67, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical15minTimeStamp.setStatus('current')
endOfQfactFacilityHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfQfactFacilityHistorical15minTable.setStatus('current')
qfactFacilityHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 69), )
if mibBuilder.loadTexts: qfactFacilityHistorical1dayTable.setStatus('current')
qfactFacilityHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 69, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "qfactFacilityHistorical1dayNumber"))
if mibBuilder.loadTexts: qfactFacilityHistorical1dayEntry.setStatus('current')
qfactFacilityHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 69, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: qfactFacilityHistorical1dayNumber.setStatus('current')
qfactFacilityHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 69, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical1dayLow.setStatus('current')
qfactFacilityHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 69, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical1dayMean.setStatus('current')
qfactFacilityHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 69, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical1dayHigh.setStatus('current')
qfactFacilityHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 69, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical1dayValidFlag.setStatus('current')
qfactFacilityHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 69, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical1dayTimeStamp.setStatus('current')
endOfQfactFacilityHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfQfactFacilityHistorical1dayTable.setStatus('current')
qfactFacilityHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 71), )
if mibBuilder.loadTexts: qfactFacilityHistorical1weekTable.setStatus('current')
qfactFacilityHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 71, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityDcnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityDcnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityDcnPortNo"), (0, "ADVA-FSPR7-MIB", "entityDcnExtNo"), (0, "ADVA-FSPR7-MIB", "entityDcnClassName"), (0, "ADVA-FSPR7-PM-MIB", "qfactFacilityHistorical1weekNumber"))
if mibBuilder.loadTexts: qfactFacilityHistorical1weekEntry.setStatus('current')
qfactFacilityHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 71, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: qfactFacilityHistorical1weekNumber.setStatus('current')
qfactFacilityHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 71, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical1weekLow.setStatus('current')
qfactFacilityHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 71, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical1weekMean.setStatus('current')
qfactFacilityHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 71, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical1weekHigh.setStatus('current')
qfactFacilityHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 71, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical1weekValidFlag.setStatus('current')
qfactFacilityHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 71, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qfactFacilityHistorical1weekTimeStamp.setStatus('current')
endOfQfactFacilityHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfQfactFacilityHistorical1weekTable.setStatus('current')
endOfPmFacilityPhysRecord = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 7, 2, 3, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmFacilityPhysRecord.setStatus('current')
terminPointPhysInstValueTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 2, 1, 1), )
if mibBuilder.loadTexts: terminPointPhysInstValueTable.setStatus('current')
terminPointPhysInstValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 2, 1, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo1"), (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo2"), (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo3"), (0, "ADVA-FSPR7-MIB", "entityTerminPointIndexNo4"), (0, "ADVA-FSPR7-MIB", "entityTerminPointClassName"))
if mibBuilder.loadTexts: terminPointPhysInstValueEntry.setStatus('current')
terminPointPhysInstValueFiberConnAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 2, 1, 1, 1, 1), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: terminPointPhysInstValueFiberConnAttenuation.setStatus('current')
terminPointPhysInstValueInputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 2, 1, 1, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: terminPointPhysInstValueInputPower.setStatus('current')
terminPointPhysInstValueOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 2, 1, 1, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: terminPointPhysInstValueOutputPower.setStatus('current')
endOfTerminPointPhysInstValueTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfTerminPointPhysInstValueTable.setStatus('current')
endOfPmTerminPointPhysical = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 10, 2, 1, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmTerminPointPhysical.setStatus('current')
dsOptMuxCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 1), )
if mibBuilder.loadTexts: dsOptMuxCurrent15minTable.setStatus('current')
dsOptMuxCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"))
if mibBuilder.loadTexts: dsOptMuxCurrent15minEntry.setStatus('current')
dsOptMuxCurrent15minDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsOptMuxCurrent15minDS.setStatus('current')
dsOptMuxCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsOptMuxCurrent15minElapsedTime.setStatus('current')
endOfDsOptMuxCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDsOptMuxCurrent15minTable.setStatus('current')
dsOptMuxCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 3), )
if mibBuilder.loadTexts: dsOptMuxCurrent1dayTable.setStatus('current')
dsOptMuxCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 3, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"))
if mibBuilder.loadTexts: dsOptMuxCurrent1dayEntry.setStatus('current')
dsOptMuxCurrent1dayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsOptMuxCurrent1dayDS.setStatus('current')
dsOptMuxCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsOptMuxCurrent1dayElapsedTime.setStatus('current')
endOfDsOptMuxCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDsOptMuxCurrent1dayTable.setStatus('current')
dsOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 5), )
if mibBuilder.loadTexts: dsOptMuxHistorical15minTable.setStatus('current')
dsOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 5, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "dsOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: dsOptMuxHistorical15minEntry.setStatus('current')
dsOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: dsOptMuxHistorical15minNumber.setStatus('current')
dsOptMuxHistorical15minDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsOptMuxHistorical15minDS.setStatus('current')
dsOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsOptMuxHistorical15minValidFlag.setStatus('current')
dsOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 5, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsOptMuxHistorical15minTimeStamp.setStatus('current')
endOfDsOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDsOptMuxHistorical15minTable.setStatus('current')
dsOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 7), )
if mibBuilder.loadTexts: dsOptMuxHistorical1dayTable.setStatus('current')
dsOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 7, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "dsOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: dsOptMuxHistorical1dayEntry.setStatus('current')
dsOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: dsOptMuxHistorical1dayNumber.setStatus('current')
dsOptMuxHistorical1dayDS = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 7, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsOptMuxHistorical1dayDS.setStatus('current')
dsOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 7, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsOptMuxHistorical1dayValidFlag.setStatus('current')
dsOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 7, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfDsOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfDsOptMuxHistorical1dayTable.setStatus('current')
endOfPmOptMuxDataRecord = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 1, 2, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmOptMuxDataRecord.setStatus('current')
optMuxPhysInstValueTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1), )
if mibBuilder.loadTexts: optMuxPhysInstValueTable.setStatus('current')
optMuxPhysInstValueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"))
if mibBuilder.loadTexts: optMuxPhysInstValueEntry.setStatus('current')
optMuxPhysInstValueRemainingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 1), Unsigned32()).setUnits('min').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueRemainingTime.setStatus('current')
optMuxPhysInstValueLaserBiasCurrentLevelAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 2), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueLaserBiasCurrentLevelAverage.setStatus('current')
optMuxPhysInstValueAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueAttenuation.setStatus('current')
optMuxPhysInstValueLaserBiasCurrentLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 4), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueLaserBiasCurrentLevel.setStatus('current')
optMuxPhysInstValueOscPowerReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 5), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueOscPowerReceived.setStatus('current')
optMuxPhysInstValuePumpLaser1Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 6), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValuePumpLaser1Temp.setStatus('current')
optMuxPhysInstValuePumpLaser2Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 7), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValuePumpLaser2Temp.setStatus('current')
optMuxPhysInstValueAttenuationOfVoa = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 8), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueAttenuationOfVoa.setStatus('current')
optMuxPhysInstValueVariableGain = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 9), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueVariableGain.setStatus('current')
optMuxPhysInstValuePumpLaser3Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 10), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValuePumpLaser3Temp.setStatus('current')
optMuxPhysInstValueLaserTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 11), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueLaserTemp.setStatus('current')
optMuxPhysInstValueOutputPowerEsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 12), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueOutputPowerEsmt.setStatus('current')
optMuxPhysInstValuePumpLaserBiasCurrent1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 13), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValuePumpLaserBiasCurrent1.setStatus('current')
optMuxPhysInstValuePumpLaserBiasCurrent2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 14), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValuePumpLaserBiasCurrent2.setStatus('current')
optMuxPhysInstValuePumpLaserBiasCurrent3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 15), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValuePumpLaserBiasCurrent3.setStatus('current')
optMuxPhysInstValueOperatingHours = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 16), Unsigned32()).setUnits('0.1 h').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueOperatingHours.setStatus('current')
optMuxPhysInstValueSubTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 17), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueSubTemp.setStatus('current')
optMuxPhysInstValuePumpLaser4Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 18), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValuePumpLaser4Temp.setStatus('current')
optMuxPhysInstValueTotalGainMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 19), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueTotalGainMeasurement.setStatus('current')
optMuxPhysInstValueCurrentEdfaOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 20), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueCurrentEdfaOpt.setStatus('current')
optMuxPhysInstValuePumpLaserBiasCurrent4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 21), Unsigned32()).setUnits('0.001 A').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValuePumpLaserBiasCurrent4.setStatus('current')
optMuxPhysInstValueRxLineAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 22), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueRxLineAttenuation.setStatus('current')
optMuxPhysInstValueOscGain = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 23), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueOscGain.setStatus('current')
optMuxPhysInstValueBackreflectionPowerReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 24), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueBackreflectionPowerReceived.setStatus('current')
optMuxPhysInstValueRamanEstSignalGain = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 25), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueRamanEstSignalGain.setStatus('current')
optMuxPhysInstValueOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 26), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueOutputPower.setStatus('current')
optMuxPhysInstValueInputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 27), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueInputPower.setStatus('current')
optMuxPhysInstValueTxLineAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 28), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueTxLineAttenuation.setStatus('current')
optMuxPhysInstValueRamanPumpPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 29), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueRamanPumpPower.setStatus('current')
optMuxPhysInstValueOscOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 30), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueOscOutputPower.setStatus('current')
optMuxPhysInstValueBackreflectionTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 31), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueBackreflectionTx.setStatus('current')
optMuxPhysInstValuePowerPerChannelTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 32), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValuePowerPerChannelTx.setStatus('current')
optMuxPhysInstValueAddChanAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 33), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueAddChanAvg.setStatus('current')
optMuxPhysInstValueOcmTxLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 34), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueOcmTxLoss.setStatus('current')
optMuxPhysInstValueOcmRxLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 35), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueOcmRxLoss.setStatus('current')
optMuxPhysInstValueEffectiveGainNtoR = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 36), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueEffectiveGainNtoR.setStatus('current')
optMuxPhysInstValueEffectiveGainNtoC = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 37), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueEffectiveGainNtoC.setStatus('current')
optMuxPhysInstValueMidStageAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 38), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueMidStageAttenuation.setStatus('current')
optMuxPhysInstValueEffectiveGainRtoN = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 39), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueEffectiveGainRtoN.setStatus('current')
optMuxPhysInstValueEffectiveGainCtoN = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 40), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueEffectiveGainCtoN.setStatus('current')
optMuxPhysInstValueOutputPowerRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 41), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueOutputPowerRaw.setStatus('current')
optMuxPhysInstValueInputPowerRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 1, 1, 42), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysInstValueInputPowerRaw.setStatus('current')
endOfOptMuxPhysInstValueTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOptMuxPhysInstValueTable.setStatus('current')
endOfPmOptMuxPhysValue = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 1, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmOptMuxPhysValue.setStatus('current')
optMuxPhysThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1), )
if mibBuilder.loadTexts: optMuxPhysThresholdTable.setStatus('current')
optMuxPhysThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"))
if mibBuilder.loadTexts: optMuxPhysThresholdEntry.setStatus('current')
optMuxPhysThresholdRamanPumpPwrHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 1), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdRamanPumpPwrHighThres.setStatus('current')
optMuxPhysThresholdRamanPumpPwrLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdRamanPumpPwrLowThres.setStatus('current')
optMuxPhysThresholdPumpLaser1TempHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 3), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdPumpLaser1TempHighThres.setStatus('current')
optMuxPhysThresholdPumpLaser1TempLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 4), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdPumpLaser1TempLowThres.setStatus('current')
optMuxPhysThresholdPumpLaser2TempHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 5), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdPumpLaser2TempHighThres.setStatus('current')
optMuxPhysThresholdPumpLaser2TempLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 6), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdPumpLaser2TempLowThres.setStatus('current')
optMuxPhysThresholdPumpLaser3TempHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 7), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdPumpLaser3TempHighThres.setStatus('current')
optMuxPhysThresholdPumpLaser3TempLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 8), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdPumpLaser3TempLowThres.setStatus('current')
optMuxPhysThresholdPumpLaser4TempHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 9), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdPumpLaser4TempHighThres.setStatus('current')
optMuxPhysThresholdPumpLaser4TempLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 10), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdPumpLaser4TempLowThres.setStatus('current')
optMuxPhysThresholdUpperSubTempThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 11), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdUpperSubTempThres.setStatus('current')
optMuxPhysThresholdbrtxHighConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-300, -180))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdbrtxHighConfig.setStatus('current')
optMuxPhysThresholdBrPwrReceivedHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-300, -180))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdBrPwrReceivedHighThres.setStatus('current')
optMuxPhysThresholdOpticalInputPwrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-450, 270))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdOpticalInputPwrHigh.setStatus('current')
optMuxPhysThresholdOpticalInputPwrLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-450, 260))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdOpticalInputPwrLow.setStatus('current')
optMuxPhysThresholdAprHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 16), Unsigned32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdAprHighThreshold.setStatus('current')
optMuxPhysThresholdConfigurableOpticalOutputPwrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-500, 300))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdConfigurableOpticalOutputPwrHigh.setStatus('current')
optMuxPhysThresholdConfigurableOpticalOutputPwrLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-500, 300))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdConfigurableOpticalOutputPwrLow.setStatus('current')
optMuxPhysThresholdOpticalOutputPwrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 19), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdOpticalOutputPwrHigh.setStatus('current')
optMuxPhysThresholdOpticalOutputPwrLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 20), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdOpticalOutputPwrLow.setStatus('current')
optMuxPhysThresholdLaserTempHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 21), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdLaserTempHighThres.setStatus('current')
optMuxPhysThresholdLaserTempLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 22), Integer32()).setUnits('0.1 degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: optMuxPhysThresholdLaserTempLowThres.setStatus('current')
optMuxPhysThresholdOscPwrRcvHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-470, -50))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdOscPwrRcvHighThres.setStatus('current')
optMuxPhysThresholdOscPwrRcvLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-470, -50))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdOscPwrRcvLowThres.setStatus('current')
optMuxPhysThresholdAttTxHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 25), Integer32()).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdAttTxHigh.setStatus('current')
optMuxPhysThresholdAttTxLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 26), Integer32()).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdAttTxLow.setStatus('current')
optMuxPhysThresholdAttRxHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 27), Integer32()).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdAttRxHigh.setStatus('current')
optMuxPhysThresholdAttRxLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 1, 1, 28), Integer32()).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: optMuxPhysThresholdAttRxLow.setStatus('current')
endOfOptMuxPhysThresholdTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOptMuxPhysThresholdTable.setStatus('current')
endOfPmOptMuxPhysThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 2, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmOptMuxPhysThreshold.setStatus('current')
brTxOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 1), )
if mibBuilder.loadTexts: brTxOptMuxHistorical15minTable.setStatus('current')
brTxOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "brTxOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: brTxOptMuxHistorical15minEntry.setStatus('current')
brTxOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: brTxOptMuxHistorical15minNumber.setStatus('current')
brTxOptMuxHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 1, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical15minLow.setStatus('current')
brTxOptMuxHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 1, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical15minMean.setStatus('current')
brTxOptMuxHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 1, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical15minHigh.setStatus('current')
brTxOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical15minValidFlag.setStatus('current')
brTxOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical15minTimeStamp.setStatus('current')
endOfBrTxOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfBrTxOptMuxHistorical15minTable.setStatus('current')
brTxOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 3), )
if mibBuilder.loadTexts: brTxOptMuxHistorical1dayTable.setStatus('current')
brTxOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 3, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "brTxOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: brTxOptMuxHistorical1dayEntry.setStatus('current')
brTxOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: brTxOptMuxHistorical1dayNumber.setStatus('current')
brTxOptMuxHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 3, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical1dayLow.setStatus('current')
brTxOptMuxHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 3, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical1dayMean.setStatus('current')
brTxOptMuxHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 3, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical1dayHigh.setStatus('current')
brTxOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical1dayValidFlag.setStatus('current')
brTxOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 3, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfBrTxOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfBrTxOptMuxHistorical1dayTable.setStatus('current')
brTxOptMuxHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 5), )
if mibBuilder.loadTexts: brTxOptMuxHistorical1weekTable.setStatus('current')
brTxOptMuxHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 5, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "brTxOptMuxHistorical1weekNumber"))
if mibBuilder.loadTexts: brTxOptMuxHistorical1weekEntry.setStatus('current')
brTxOptMuxHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: brTxOptMuxHistorical1weekNumber.setStatus('current')
brTxOptMuxHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 5, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical1weekLow.setStatus('current')
brTxOptMuxHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 5, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical1weekMean.setStatus('current')
brTxOptMuxHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 5, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical1weekHigh.setStatus('current')
brTxOptMuxHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 5, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical1weekValidFlag.setStatus('current')
brTxOptMuxHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 5, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brTxOptMuxHistorical1weekTimeStamp.setStatus('current')
endOfBrTxOptMuxHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfBrTxOptMuxHistorical1weekTable.setStatus('current')
oscGainOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 7), )
if mibBuilder.loadTexts: oscGainOptMuxHistorical15minTable.setStatus('current')
oscGainOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 7, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oscGainOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: oscGainOptMuxHistorical15minEntry.setStatus('current')
oscGainOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: oscGainOptMuxHistorical15minNumber.setStatus('current')
oscGainOptMuxHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 7, 1, 2), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical15minLow.setStatus('current')
oscGainOptMuxHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 7, 1, 3), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical15minMean.setStatus('current')
oscGainOptMuxHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 7, 1, 4), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical15minHigh.setStatus('current')
oscGainOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 7, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical15minValidFlag.setStatus('current')
oscGainOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 7, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical15minTimeStamp.setStatus('current')
endOfOscGainOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOscGainOptMuxHistorical15minTable.setStatus('current')
oscGainOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 9), )
if mibBuilder.loadTexts: oscGainOptMuxHistorical1dayTable.setStatus('current')
oscGainOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 9, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oscGainOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: oscGainOptMuxHistorical1dayEntry.setStatus('current')
oscGainOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: oscGainOptMuxHistorical1dayNumber.setStatus('current')
oscGainOptMuxHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 9, 1, 2), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical1dayLow.setStatus('current')
oscGainOptMuxHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 9, 1, 3), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical1dayMean.setStatus('current')
oscGainOptMuxHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 9, 1, 4), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical1dayHigh.setStatus('current')
oscGainOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 9, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical1dayValidFlag.setStatus('current')
oscGainOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 9, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfOscGainOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOscGainOptMuxHistorical1dayTable.setStatus('current')
oscGainOptMuxHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 11), )
if mibBuilder.loadTexts: oscGainOptMuxHistorical1weekTable.setStatus('current')
oscGainOptMuxHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 11, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oscGainOptMuxHistorical1weekNumber"))
if mibBuilder.loadTexts: oscGainOptMuxHistorical1weekEntry.setStatus('current')
oscGainOptMuxHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: oscGainOptMuxHistorical1weekNumber.setStatus('current')
oscGainOptMuxHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 11, 1, 2), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical1weekLow.setStatus('current')
oscGainOptMuxHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 11, 1, 3), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical1weekMean.setStatus('current')
oscGainOptMuxHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 11, 1, 4), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical1weekHigh.setStatus('current')
oscGainOptMuxHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 11, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical1weekValidFlag.setStatus('current')
oscGainOptMuxHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 11, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscGainOptMuxHistorical1weekTimeStamp.setStatus('current')
endOfOscGainOptMuxHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOscGainOptMuxHistorical1weekTable.setStatus('current')
atRcvOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 13), )
if mibBuilder.loadTexts: atRcvOptMuxHistorical15minTable.setStatus('current')
atRcvOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 13, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "atRcvOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: atRcvOptMuxHistorical15minEntry.setStatus('current')
atRcvOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: atRcvOptMuxHistorical15minNumber.setStatus('current')
atRcvOptMuxHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 13, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical15minLow.setStatus('current')
atRcvOptMuxHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 13, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical15minMean.setStatus('current')
atRcvOptMuxHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 13, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical15minHigh.setStatus('current')
atRcvOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 13, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical15minValidFlag.setStatus('current')
atRcvOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 13, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical15minTimeStamp.setStatus('current')
endOfAtRcvOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAtRcvOptMuxHistorical15minTable.setStatus('current')
atRcvOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 15), )
if mibBuilder.loadTexts: atRcvOptMuxHistorical1dayTable.setStatus('current')
atRcvOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 15, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "atRcvOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: atRcvOptMuxHistorical1dayEntry.setStatus('current')
atRcvOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: atRcvOptMuxHistorical1dayNumber.setStatus('current')
atRcvOptMuxHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 15, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical1dayLow.setStatus('current')
atRcvOptMuxHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 15, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical1dayMean.setStatus('current')
atRcvOptMuxHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 15, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical1dayHigh.setStatus('current')
atRcvOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 15, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical1dayValidFlag.setStatus('current')
atRcvOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 15, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfAtRcvOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAtRcvOptMuxHistorical1dayTable.setStatus('current')
atRcvOptMuxHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 17), )
if mibBuilder.loadTexts: atRcvOptMuxHistorical1weekTable.setStatus('current')
atRcvOptMuxHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 17, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "atRcvOptMuxHistorical1weekNumber"))
if mibBuilder.loadTexts: atRcvOptMuxHistorical1weekEntry.setStatus('current')
atRcvOptMuxHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: atRcvOptMuxHistorical1weekNumber.setStatus('current')
atRcvOptMuxHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 17, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical1weekLow.setStatus('current')
atRcvOptMuxHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 17, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical1weekMean.setStatus('current')
atRcvOptMuxHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 17, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical1weekHigh.setStatus('current')
atRcvOptMuxHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 17, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical1weekValidFlag.setStatus('current')
atRcvOptMuxHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 17, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atRcvOptMuxHistorical1weekTimeStamp.setStatus('current')
endOfAtRcvOptMuxHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAtRcvOptMuxHistorical1weekTable.setStatus('current')
brOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 19), )
if mibBuilder.loadTexts: brOptMuxHistorical15minTable.setStatus('current')
brOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 19, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "brOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: brOptMuxHistorical15minEntry.setStatus('current')
brOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: brOptMuxHistorical15minNumber.setStatus('current')
brOptMuxHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 19, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical15minLow.setStatus('current')
brOptMuxHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 19, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical15minMean.setStatus('current')
brOptMuxHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 19, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical15minHigh.setStatus('current')
brOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 19, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical15minValidFlag.setStatus('current')
brOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 19, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical15minTimeStamp.setStatus('current')
endOfBrOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfBrOptMuxHistorical15minTable.setStatus('current')
brOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 21), )
if mibBuilder.loadTexts: brOptMuxHistorical1dayTable.setStatus('current')
brOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 21, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "brOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: brOptMuxHistorical1dayEntry.setStatus('current')
brOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: brOptMuxHistorical1dayNumber.setStatus('current')
brOptMuxHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 21, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical1dayLow.setStatus('current')
brOptMuxHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 21, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical1dayMean.setStatus('current')
brOptMuxHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 21, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical1dayHigh.setStatus('current')
brOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 21, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical1dayValidFlag.setStatus('current')
brOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 21, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfBrOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfBrOptMuxHistorical1dayTable.setStatus('current')
brOptMuxHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 23), )
if mibBuilder.loadTexts: brOptMuxHistorical1weekTable.setStatus('current')
brOptMuxHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 23, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "brOptMuxHistorical1weekNumber"))
if mibBuilder.loadTexts: brOptMuxHistorical1weekEntry.setStatus('current')
brOptMuxHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: brOptMuxHistorical1weekNumber.setStatus('current')
brOptMuxHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 23, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical1weekLow.setStatus('current')
brOptMuxHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 23, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical1weekMean.setStatus('current')
brOptMuxHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 23, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical1weekHigh.setStatus('current')
brOptMuxHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 23, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical1weekValidFlag.setStatus('current')
brOptMuxHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 23, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brOptMuxHistorical1weekTimeStamp.setStatus('current')
endOfBrOptMuxHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfBrOptMuxHistorical1weekTable.setStatus('current')
estSigGainOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 25), )
if mibBuilder.loadTexts: estSigGainOptMuxHistorical15minTable.setStatus('current')
estSigGainOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 25, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "estSigGainOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: estSigGainOptMuxHistorical15minEntry.setStatus('current')
estSigGainOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: estSigGainOptMuxHistorical15minNumber.setStatus('current')
estSigGainOptMuxHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 25, 1, 2), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical15minLow.setStatus('current')
estSigGainOptMuxHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 25, 1, 3), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical15minMean.setStatus('current')
estSigGainOptMuxHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 25, 1, 4), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical15minHigh.setStatus('current')
estSigGainOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 25, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical15minValidFlag.setStatus('current')
estSigGainOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 25, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical15minTimeStamp.setStatus('current')
endOfEstSigGainOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfEstSigGainOptMuxHistorical15minTable.setStatus('current')
estSigGainOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 27), )
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1dayTable.setStatus('current')
estSigGainOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 27, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "estSigGainOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1dayEntry.setStatus('current')
estSigGainOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1dayNumber.setStatus('current')
estSigGainOptMuxHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 27, 1, 2), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1dayLow.setStatus('current')
estSigGainOptMuxHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 27, 1, 3), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1dayMean.setStatus('current')
estSigGainOptMuxHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 27, 1, 4), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1dayHigh.setStatus('current')
estSigGainOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 27, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1dayValidFlag.setStatus('current')
estSigGainOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 27, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfEstSigGainOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfEstSigGainOptMuxHistorical1dayTable.setStatus('current')
estSigGainOptMuxHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 29), )
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1weekTable.setStatus('current')
estSigGainOptMuxHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 29, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "estSigGainOptMuxHistorical1weekNumber"))
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1weekEntry.setStatus('current')
estSigGainOptMuxHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1weekNumber.setStatus('current')
estSigGainOptMuxHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 29, 1, 2), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1weekLow.setStatus('current')
estSigGainOptMuxHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 29, 1, 3), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1weekMean.setStatus('current')
estSigGainOptMuxHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 29, 1, 4), Unsigned32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1weekHigh.setStatus('current')
estSigGainOptMuxHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 29, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1weekValidFlag.setStatus('current')
estSigGainOptMuxHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 29, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: estSigGainOptMuxHistorical1weekTimeStamp.setStatus('current')
endOfEstSigGainOptMuxHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfEstSigGainOptMuxHistorical1weekTable.setStatus('current')
attrmtOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 31), )
if mibBuilder.loadTexts: attrmtOptMuxHistorical15minTable.setStatus('current')
attrmtOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 31, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "attrmtOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: attrmtOptMuxHistorical15minEntry.setStatus('current')
attrmtOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: attrmtOptMuxHistorical15minNumber.setStatus('current')
attrmtOptMuxHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 31, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical15minLow.setStatus('current')
attrmtOptMuxHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 31, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical15minHigh.setStatus('current')
attrmtOptMuxHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 31, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical15minMean.setStatus('current')
attrmtOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 31, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical15minValidFlag.setStatus('current')
attrmtOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 31, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical15minTimeStamp.setStatus('current')
endOfAttrmtOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAttrmtOptMuxHistorical15minTable.setStatus('current')
attrmtOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 33), )
if mibBuilder.loadTexts: attrmtOptMuxHistorical1dayTable.setStatus('current')
attrmtOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 33, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "attrmtOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: attrmtOptMuxHistorical1dayEntry.setStatus('current')
attrmtOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 33, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: attrmtOptMuxHistorical1dayNumber.setStatus('current')
attrmtOptMuxHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 33, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical1dayLow.setStatus('current')
attrmtOptMuxHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 33, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical1dayHigh.setStatus('current')
attrmtOptMuxHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 33, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical1dayMean.setStatus('current')
attrmtOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 33, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical1dayValidFlag.setStatus('current')
attrmtOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 33, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfAttrmtOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAttrmtOptMuxHistorical1dayTable.setStatus('current')
attrmtOptMuxHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 35), )
if mibBuilder.loadTexts: attrmtOptMuxHistorical1weekTable.setStatus('current')
attrmtOptMuxHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 35, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "attrmtOptMuxHistorical1weekNumber"))
if mibBuilder.loadTexts: attrmtOptMuxHistorical1weekEntry.setStatus('current')
attrmtOptMuxHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 35, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: attrmtOptMuxHistorical1weekNumber.setStatus('current')
attrmtOptMuxHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 35, 1, 2), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical1weekLow.setStatus('current')
attrmtOptMuxHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 35, 1, 3), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical1weekHigh.setStatus('current')
attrmtOptMuxHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 35, 1, 4), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical1weekMean.setStatus('current')
attrmtOptMuxHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 35, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical1weekValidFlag.setStatus('current')
attrmtOptMuxHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 35, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attrmtOptMuxHistorical1weekTimeStamp.setStatus('current')
endOfAttrmtOptMuxHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfAttrmtOptMuxHistorical1weekTable.setStatus('current')
pumpPwrOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 37), )
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical15minTable.setStatus('current')
pumpPwrOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 37, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "pumpPwrOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical15minEntry.setStatus('current')
pumpPwrOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 37, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical15minNumber.setStatus('current')
pumpPwrOptMuxHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 37, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical15minLow.setStatus('current')
pumpPwrOptMuxHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 37, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical15minMean.setStatus('current')
pumpPwrOptMuxHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 37, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical15minHigh.setStatus('current')
pumpPwrOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 37, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical15minValidFlag.setStatus('current')
pumpPwrOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 37, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical15minTimeStamp.setStatus('current')
endOfPumpPwrOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPumpPwrOptMuxHistorical15minTable.setStatus('current')
pumpPwrOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 39), )
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1dayTable.setStatus('current')
pumpPwrOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 39, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "pumpPwrOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1dayEntry.setStatus('current')
pumpPwrOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 39, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1dayNumber.setStatus('current')
pumpPwrOptMuxHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 39, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1dayLow.setStatus('current')
pumpPwrOptMuxHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 39, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1dayMean.setStatus('current')
pumpPwrOptMuxHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 39, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1dayHigh.setStatus('current')
pumpPwrOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 39, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1dayValidFlag.setStatus('current')
pumpPwrOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 39, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfPumpPwrOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPumpPwrOptMuxHistorical1dayTable.setStatus('current')
pumpPwrOptMuxHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 41), )
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1weekTable.setStatus('current')
pumpPwrOptMuxHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 41, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "pumpPwrOptMuxHistorical1weekNumber"))
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1weekEntry.setStatus('current')
pumpPwrOptMuxHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 41, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1weekNumber.setStatus('current')
pumpPwrOptMuxHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 41, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1weekLow.setStatus('current')
pumpPwrOptMuxHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 41, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1weekMean.setStatus('current')
pumpPwrOptMuxHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 41, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1weekHigh.setStatus('current')
pumpPwrOptMuxHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 41, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1weekValidFlag.setStatus('current')
pumpPwrOptMuxHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 41, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pumpPwrOptMuxHistorical1weekTimeStamp.setStatus('current')
endOfPumpPwrOptMuxHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPumpPwrOptMuxHistorical1weekTable.setStatus('current')
oscOptOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 43), )
if mibBuilder.loadTexts: oscOptOptMuxHistorical15minTable.setStatus('current')
oscOptOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 43, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oscOptOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: oscOptOptMuxHistorical15minEntry.setStatus('current')
oscOptOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 43, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: oscOptOptMuxHistorical15minNumber.setStatus('current')
oscOptOptMuxHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 43, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical15minLow.setStatus('current')
oscOptOptMuxHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 43, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical15minMean.setStatus('current')
oscOptOptMuxHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 43, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical15minHigh.setStatus('current')
oscOptOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 43, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical15minValidFlag.setStatus('current')
oscOptOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 43, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical15minTimeStamp.setStatus('current')
endOfOscOptOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOscOptOptMuxHistorical15minTable.setStatus('current')
oscOptOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 45), )
if mibBuilder.loadTexts: oscOptOptMuxHistorical1dayTable.setStatus('current')
oscOptOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 45, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oscOptOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: oscOptOptMuxHistorical1dayEntry.setStatus('current')
oscOptOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 45, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: oscOptOptMuxHistorical1dayNumber.setStatus('current')
oscOptOptMuxHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 45, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical1dayLow.setStatus('current')
oscOptOptMuxHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 45, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical1dayMean.setStatus('current')
oscOptOptMuxHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 45, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical1dayHigh.setStatus('current')
oscOptOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 45, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical1dayValidFlag.setStatus('current')
oscOptOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 45, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfOscOptOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOscOptOptMuxHistorical1dayTable.setStatus('current')
oscOptOptMuxHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 47), )
if mibBuilder.loadTexts: oscOptOptMuxHistorical1weekTable.setStatus('current')
oscOptOptMuxHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 47, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oscOptOptMuxHistorical1weekNumber"))
if mibBuilder.loadTexts: oscOptOptMuxHistorical1weekEntry.setStatus('current')
oscOptOptMuxHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 47, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: oscOptOptMuxHistorical1weekNumber.setStatus('current')
oscOptOptMuxHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 47, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical1weekLow.setStatus('current')
oscOptOptMuxHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 47, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical1weekMean.setStatus('current')
oscOptOptMuxHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 47, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical1weekHigh.setStatus('current')
oscOptOptMuxHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 47, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical1weekValidFlag.setStatus('current')
oscOptOptMuxHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 47, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscOptOptMuxHistorical1weekTimeStamp.setStatus('current')
endOfOscOptOptMuxHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOscOptOptMuxHistorical1weekTable.setStatus('current')
oscPwrOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 49), )
if mibBuilder.loadTexts: oscPwrOptMuxHistorical15minTable.setStatus('current')
oscPwrOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 49, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oscPwrOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: oscPwrOptMuxHistorical15minEntry.setStatus('current')
oscPwrOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 49, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: oscPwrOptMuxHistorical15minNumber.setStatus('current')
oscPwrOptMuxHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 49, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical15minLow.setStatus('current')
oscPwrOptMuxHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 49, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical15minMean.setStatus('current')
oscPwrOptMuxHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 49, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical15minHigh.setStatus('current')
oscPwrOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 49, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical15minValidFlag.setStatus('current')
oscPwrOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 49, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical15minTimeStamp.setStatus('current')
endOfOscPwrOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOscPwrOptMuxHistorical15minTable.setStatus('current')
oscPwrOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 51), )
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1dayTable.setStatus('current')
oscPwrOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 51, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oscPwrOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1dayEntry.setStatus('current')
oscPwrOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 51, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1dayNumber.setStatus('current')
oscPwrOptMuxHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 51, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1dayLow.setStatus('current')
oscPwrOptMuxHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 51, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1dayMean.setStatus('current')
oscPwrOptMuxHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 51, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1dayHigh.setStatus('current')
oscPwrOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 51, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1dayValidFlag.setStatus('current')
oscPwrOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 51, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfOscPwrOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOscPwrOptMuxHistorical1dayTable.setStatus('current')
oscPwrOptMuxHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 53), )
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1weekTable.setStatus('current')
oscPwrOptMuxHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 53, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oscPwrOptMuxHistorical1weekNumber"))
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1weekEntry.setStatus('current')
oscPwrOptMuxHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 53, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1weekNumber.setStatus('current')
oscPwrOptMuxHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 53, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1weekLow.setStatus('current')
oscPwrOptMuxHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 53, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1weekMean.setStatus('current')
oscPwrOptMuxHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 53, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1weekHigh.setStatus('current')
oscPwrOptMuxHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 53, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1weekValidFlag.setStatus('current')
oscPwrOptMuxHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 53, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oscPwrOptMuxHistorical1weekTimeStamp.setStatus('current')
endOfOscPwrOptMuxHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOscPwrOptMuxHistorical1weekTable.setStatus('current')
optOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 55), )
if mibBuilder.loadTexts: optOptMuxHistorical15minTable.setStatus('current')
optOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 55, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "optOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: optOptMuxHistorical15minEntry.setStatus('current')
optOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 55, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: optOptMuxHistorical15minNumber.setStatus('current')
optOptMuxHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 55, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical15minLow.setStatus('current')
optOptMuxHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 55, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical15minMean.setStatus('current')
optOptMuxHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 55, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical15minHigh.setStatus('current')
optOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 55, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical15minValidFlag.setStatus('current')
optOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 55, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical15minTimeStamp.setStatus('current')
endOfOptOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOptOptMuxHistorical15minTable.setStatus('current')
optOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 57), )
if mibBuilder.loadTexts: optOptMuxHistorical1dayTable.setStatus('current')
optOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 57, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "optOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: optOptMuxHistorical1dayEntry.setStatus('current')
optOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 57, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: optOptMuxHistorical1dayNumber.setStatus('current')
optOptMuxHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 57, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical1dayLow.setStatus('current')
optOptMuxHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 57, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical1dayMean.setStatus('current')
optOptMuxHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 57, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical1dayHigh.setStatus('current')
optOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 57, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical1dayValidFlag.setStatus('current')
optOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 57, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfOptOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOptOptMuxHistorical1dayTable.setStatus('current')
optOptMuxHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 59), )
if mibBuilder.loadTexts: optOptMuxHistorical1weekTable.setStatus('current')
optOptMuxHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 59, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "optOptMuxHistorical1weekNumber"))
if mibBuilder.loadTexts: optOptMuxHistorical1weekEntry.setStatus('current')
optOptMuxHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 59, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: optOptMuxHistorical1weekNumber.setStatus('current')
optOptMuxHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 59, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical1weekLow.setStatus('current')
optOptMuxHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 59, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical1weekMean.setStatus('current')
optOptMuxHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 59, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical1weekHigh.setStatus('current')
optOptMuxHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 59, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical1weekValidFlag.setStatus('current')
optOptMuxHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 59, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optOptMuxHistorical1weekTimeStamp.setStatus('current')
endOfOptOptMuxHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOptOptMuxHistorical1weekTable.setStatus('current')
oprOptMuxHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 61), )
if mibBuilder.loadTexts: oprOptMuxHistorical15minTable.setStatus('current')
oprOptMuxHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 61, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oprOptMuxHistorical15minNumber"))
if mibBuilder.loadTexts: oprOptMuxHistorical15minEntry.setStatus('current')
oprOptMuxHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 61, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: oprOptMuxHistorical15minNumber.setStatus('current')
oprOptMuxHistorical15minLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 61, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical15minLow.setStatus('current')
oprOptMuxHistorical15minMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 61, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical15minMean.setStatus('current')
oprOptMuxHistorical15minHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 61, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical15minHigh.setStatus('current')
oprOptMuxHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 61, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical15minValidFlag.setStatus('current')
oprOptMuxHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 61, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical15minTimeStamp.setStatus('current')
endOfOprOptMuxHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOprOptMuxHistorical15minTable.setStatus('current')
oprOptMuxHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 63), )
if mibBuilder.loadTexts: oprOptMuxHistorical1dayTable.setStatus('current')
oprOptMuxHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 63, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oprOptMuxHistorical1dayNumber"))
if mibBuilder.loadTexts: oprOptMuxHistorical1dayEntry.setStatus('current')
oprOptMuxHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 63, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: oprOptMuxHistorical1dayNumber.setStatus('current')
oprOptMuxHistorical1dayLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 63, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical1dayLow.setStatus('current')
oprOptMuxHistorical1dayMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 63, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical1dayMean.setStatus('current')
oprOptMuxHistorical1dayHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 63, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical1dayHigh.setStatus('current')
oprOptMuxHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 63, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical1dayValidFlag.setStatus('current')
oprOptMuxHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 63, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical1dayTimeStamp.setStatus('current')
endOfOprOptMuxHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOprOptMuxHistorical1dayTable.setStatus('current')
oprOptMuxHistorical1weekTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 65), )
if mibBuilder.loadTexts: oprOptMuxHistorical1weekTable.setStatus('current')
oprOptMuxHistorical1weekEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 65, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityOpticalMuxShelfNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxSlotNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxPortNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxExtNo"), (0, "ADVA-FSPR7-MIB", "entityOpticalMuxClassName"), (0, "ADVA-FSPR7-PM-MIB", "oprOptMuxHistorical1weekNumber"))
if mibBuilder.loadTexts: oprOptMuxHistorical1weekEntry.setStatus('current')
oprOptMuxHistorical1weekNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 65, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: oprOptMuxHistorical1weekNumber.setStatus('current')
oprOptMuxHistorical1weekLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 65, 1, 2), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical1weekLow.setStatus('current')
oprOptMuxHistorical1weekMean = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 65, 1, 3), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical1weekMean.setStatus('current')
oprOptMuxHistorical1weekHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 65, 1, 4), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical1weekHigh.setStatus('current')
oprOptMuxHistorical1weekValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 65, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical1weekValidFlag.setStatus('current')
oprOptMuxHistorical1weekTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 65, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oprOptMuxHistorical1weekTimeStamp.setStatus('current')
endOfOprOptMuxHistorical1weekTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfOprOptMuxHistorical1weekTable.setStatus('current')
endOfPmOptMuxPhysRecord = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 17, 2, 3, 10000), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfPmOptMuxPhysRecord.setStatus('current')
frRcv2ShelfConnectionCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 1), )
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent15minTable.setStatus('current')
frRcv2ShelfConnectionCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 1, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent15minEntry.setStatus('current')
frRcv2ShelfConnectionCurrent15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 1, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent15minGoodFrames.setStatus('current')
frRcv2ShelfConnectionCurrent15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 1, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent15minPauseFrames.setStatus('current')
frRcv2ShelfConnectionCurrent15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 1, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent15minCrcFrames.setStatus('current')
frRcv2ShelfConnectionCurrent15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 1, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent15minBytes.setStatus('current')
frRcv2ShelfConnectionCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent15minElapsedTime.setStatus('current')
endOfFrRcv2ShelfConnectionCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2ShelfConnectionCurrent15minTable.setStatus('current')
frRcv2ShelfConnectionCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 3), )
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent1dayTable.setStatus('current')
frRcv2ShelfConnectionCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 3, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent1dayEntry.setStatus('current')
frRcv2ShelfConnectionCurrent1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 3, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent1dayGoodFrames.setStatus('current')
frRcv2ShelfConnectionCurrent1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 3, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent1dayPauseFrames.setStatus('current')
frRcv2ShelfConnectionCurrent1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 3, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent1dayCrcFrames.setStatus('current')
frRcv2ShelfConnectionCurrent1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 3, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent1dayBytes.setStatus('current')
frRcv2ShelfConnectionCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionCurrent1dayElapsedTime.setStatus('current')
endOfFrRcv2ShelfConnectionCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2ShelfConnectionCurrent1dayTable.setStatus('current')
frRcv2ShelfConnectionHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 5), )
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical15minTable.setStatus('current')
frRcv2ShelfConnectionHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 5, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv2ShelfConnectionHistorical15minNumber"))
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical15minEntry.setStatus('current')
frRcv2ShelfConnectionHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical15minNumber.setStatus('current')
frRcv2ShelfConnectionHistorical15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 5, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical15minGoodFrames.setStatus('current')
frRcv2ShelfConnectionHistorical15minPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 5, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical15minPauseFrames.setStatus('current')
frRcv2ShelfConnectionHistorical15minCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 5, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical15minCrcFrames.setStatus('current')
frRcv2ShelfConnectionHistorical15minBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 5, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical15minBytes.setStatus('current')
frRcv2ShelfConnectionHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical15minValidFlag.setStatus('current')
frRcv2ShelfConnectionHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 5, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical15minTimeStamp.setStatus('current')
endOfFrRcv2ShelfConnectionHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2ShelfConnectionHistorical15minTable.setStatus('current')
frRcv2ShelfConnectionHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 7), )
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical1dayTable.setStatus('current')
frRcv2ShelfConnectionHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 7, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "frRcv2ShelfConnectionHistorical1dayNumber"))
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical1dayEntry.setStatus('current')
frRcv2ShelfConnectionHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical1dayNumber.setStatus('current')
frRcv2ShelfConnectionHistorical1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 7, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical1dayGoodFrames.setStatus('current')
frRcv2ShelfConnectionHistorical1dayPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 7, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical1dayPauseFrames.setStatus('current')
frRcv2ShelfConnectionHistorical1dayCrcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 7, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical1dayCrcFrames.setStatus('current')
frRcv2ShelfConnectionHistorical1dayBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 7, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical1dayBytes.setStatus('current')
frRcv2ShelfConnectionHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 7, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical1dayValidFlag.setStatus('current')
frRcv2ShelfConnectionHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 7, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frRcv2ShelfConnectionHistorical1dayTimeStamp.setStatus('current')
endOfFrRcv2ShelfConnectionHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfFrRcv2ShelfConnectionHistorical1dayTable.setStatus('current')
macRxShelfConnectionCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 9), )
if mibBuilder.loadTexts: macRxShelfConnectionCurrent15minTable.setStatus('current')
macRxShelfConnectionCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 9, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macRxShelfConnectionCurrent15minEntry.setStatus('current')
macRxShelfConnectionCurrent15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 9, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionCurrent15minGoodFrames.setStatus('current')
macRxShelfConnectionCurrent15minOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 9, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionCurrent15minOctRcv.setStatus('current')
macRxShelfConnectionCurrent15minBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 9, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionCurrent15minBroadcastFramesRcv.setStatus('current')
macRxShelfConnectionCurrent15minMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 9, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionCurrent15minMulticastFramesRcv.setStatus('current')
macRxShelfConnectionCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionCurrent15minElapsedTime.setStatus('current')
endOfMacRxShelfConnectionCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacRxShelfConnectionCurrent15minTable.setStatus('current')
macRxShelfConnectionCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 11), )
if mibBuilder.loadTexts: macRxShelfConnectionCurrent1dayTable.setStatus('current')
macRxShelfConnectionCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 11, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macRxShelfConnectionCurrent1dayEntry.setStatus('current')
macRxShelfConnectionCurrent1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 11, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionCurrent1dayGoodFrames.setStatus('current')
macRxShelfConnectionCurrent1dayOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 11, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionCurrent1dayOctRcv.setStatus('current')
macRxShelfConnectionCurrent1dayBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 11, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionCurrent1dayBroadcastFramesRcv.setStatus('current')
macRxShelfConnectionCurrent1dayMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 11, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionCurrent1dayMulticastFramesRcv.setStatus('current')
macRxShelfConnectionCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionCurrent1dayElapsedTime.setStatus('current')
endOfMacRxShelfConnectionCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacRxShelfConnectionCurrent1dayTable.setStatus('current')
macRxShelfConnectionHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 13), )
if mibBuilder.loadTexts: macRxShelfConnectionHistorical15minTable.setStatus('current')
macRxShelfConnectionHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 13, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macRxShelfConnectionHistorical15minNumber"))
if mibBuilder.loadTexts: macRxShelfConnectionHistorical15minEntry.setStatus('current')
macRxShelfConnectionHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: macRxShelfConnectionHistorical15minNumber.setStatus('current')
macRxShelfConnectionHistorical15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 13, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical15minGoodFrames.setStatus('current')
macRxShelfConnectionHistorical15minOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 13, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical15minOctRcv.setStatus('current')
macRxShelfConnectionHistorical15minBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 13, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical15minBroadcastFramesRcv.setStatus('current')
macRxShelfConnectionHistorical15minMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 13, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical15minMulticastFramesRcv.setStatus('current')
macRxShelfConnectionHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 13, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical15minValidFlag.setStatus('current')
macRxShelfConnectionHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 13, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical15minTimeStamp.setStatus('current')
endOfMacRxShelfConnectionHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacRxShelfConnectionHistorical15minTable.setStatus('current')
macRxShelfConnectionHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 15), )
if mibBuilder.loadTexts: macRxShelfConnectionHistorical1dayTable.setStatus('current')
macRxShelfConnectionHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 15, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macRxShelfConnectionHistorical1dayNumber"))
if mibBuilder.loadTexts: macRxShelfConnectionHistorical1dayEntry.setStatus('current')
macRxShelfConnectionHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: macRxShelfConnectionHistorical1dayNumber.setStatus('current')
macRxShelfConnectionHistorical1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 15, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical1dayGoodFrames.setStatus('current')
macRxShelfConnectionHistorical1dayOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 15, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical1dayOctRcv.setStatus('current')
macRxShelfConnectionHistorical1dayBroadcastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 15, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical1dayBroadcastFramesRcv.setStatus('current')
macRxShelfConnectionHistorical1dayMulticastFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 15, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical1dayMulticastFramesRcv.setStatus('current')
macRxShelfConnectionHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 15, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical1dayValidFlag.setStatus('current')
macRxShelfConnectionHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 15, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macRxShelfConnectionHistorical1dayTimeStamp.setStatus('current')
endOfMacRxShelfConnectionHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacRxShelfConnectionHistorical1dayTable.setStatus('current')
macTxShelfConnectionCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 17), )
if mibBuilder.loadTexts: macTxShelfConnectionCurrent15minTable.setStatus('current')
macTxShelfConnectionCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 17, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macTxShelfConnectionCurrent15minEntry.setStatus('current')
macTxShelfConnectionCurrent15minFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 17, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent15minFramesTrmt.setStatus('current')
macTxShelfConnectionCurrent15minBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 17, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent15minBytesTrmt.setStatus('current')
macTxShelfConnectionCurrent15minBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 17, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent15minBroadcastFramesTrmt.setStatus('current')
macTxShelfConnectionCurrent15minMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 17, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent15minMulticastFramesTrmt.setStatus('current')
macTxShelfConnectionCurrent15minDiscardedFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 17, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent15minDiscardedFramesTrmt.setStatus('current')
macTxShelfConnectionCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent15minElapsedTime.setStatus('current')
endOfMacTxShelfConnectionCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacTxShelfConnectionCurrent15minTable.setStatus('current')
macTxShelfConnectionCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 19), )
if mibBuilder.loadTexts: macTxShelfConnectionCurrent1dayTable.setStatus('current')
macTxShelfConnectionCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 19, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macTxShelfConnectionCurrent1dayEntry.setStatus('current')
macTxShelfConnectionCurrent1dayFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 19, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent1dayFramesTrmt.setStatus('current')
macTxShelfConnectionCurrent1dayBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 19, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent1dayBytesTrmt.setStatus('current')
macTxShelfConnectionCurrent1dayBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 19, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent1dayBroadcastFramesTrmt.setStatus('current')
macTxShelfConnectionCurrent1dayMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 19, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent1dayMulticastFramesTrmt.setStatus('current')
macTxShelfConnectionCurrent1dayDiscardedFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 19, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent1dayDiscardedFramesTrmt.setStatus('current')
macTxShelfConnectionCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionCurrent1dayElapsedTime.setStatus('current')
endOfMacTxShelfConnectionCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacTxShelfConnectionCurrent1dayTable.setStatus('current')
macTxShelfConnectionHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 21), )
if mibBuilder.loadTexts: macTxShelfConnectionHistorical15minTable.setStatus('current')
macTxShelfConnectionHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 21, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macTxShelfConnectionHistorical15minNumber"))
if mibBuilder.loadTexts: macTxShelfConnectionHistorical15minEntry.setStatus('current')
macTxShelfConnectionHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: macTxShelfConnectionHistorical15minNumber.setStatus('current')
macTxShelfConnectionHistorical15minFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 21, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical15minFramesTrmt.setStatus('current')
macTxShelfConnectionHistorical15minBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 21, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical15minBytesTrmt.setStatus('current')
macTxShelfConnectionHistorical15minBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 21, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical15minBroadcastFramesTrmt.setStatus('current')
macTxShelfConnectionHistorical15minMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 21, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical15minMulticastFramesTrmt.setStatus('current')
macTxShelfConnectionHistorical15minDiscardedFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 21, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical15minDiscardedFramesTrmt.setStatus('current')
macTxShelfConnectionHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 21, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical15minValidFlag.setStatus('current')
macTxShelfConnectionHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 21, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical15minTimeStamp.setStatus('current')
endOfMacTxShelfConnectionHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacTxShelfConnectionHistorical15minTable.setStatus('current')
macTxShelfConnectionHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 23), )
if mibBuilder.loadTexts: macTxShelfConnectionHistorical1dayTable.setStatus('current')
macTxShelfConnectionHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 23, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macTxShelfConnectionHistorical1dayNumber"))
if mibBuilder.loadTexts: macTxShelfConnectionHistorical1dayEntry.setStatus('current')
macTxShelfConnectionHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: macTxShelfConnectionHistorical1dayNumber.setStatus('current')
macTxShelfConnectionHistorical1dayFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 23, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical1dayFramesTrmt.setStatus('current')
macTxShelfConnectionHistorical1dayBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 23, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical1dayBytesTrmt.setStatus('current')
macTxShelfConnectionHistorical1dayBroadcastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 23, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical1dayBroadcastFramesTrmt.setStatus('current')
macTxShelfConnectionHistorical1dayMulticastFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 23, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical1dayMulticastFramesTrmt.setStatus('current')
macTxShelfConnectionHistorical1dayDiscardedFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 23, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical1dayDiscardedFramesTrmt.setStatus('current')
macTxShelfConnectionHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 23, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical1dayValidFlag.setStatus('current')
macTxShelfConnectionHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 23, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macTxShelfConnectionHistorical1dayTimeStamp.setStatus('current')
endOfMacTxShelfConnectionHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacTxShelfConnectionHistorical1dayTable.setStatus('current')
macSzRxShelfConnectionCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 25), )
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent15minTable.setStatus('current')
macSzRxShelfConnectionCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 25, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent15minEntry.setStatus('current')
macSzRxShelfConnectionCurrent15minBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 25, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent15minBytesFrames64Rcv.setStatus('current')
macSzRxShelfConnectionCurrent15minBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 25, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent15minBytesFrames65Rcv.setStatus('current')
macSzRxShelfConnectionCurrent15minBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 25, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent15minBytesFrames128Rcv.setStatus('current')
macSzRxShelfConnectionCurrent15minBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 25, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent15minBytesFrames256Rcv.setStatus('current')
macSzRxShelfConnectionCurrent15minBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 25, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent15minBytesFrames512Rcv.setStatus('current')
macSzRxShelfConnectionCurrent15minBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 25, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent15minBytesFrames1024Rcv.setStatus('current')
macSzRxShelfConnectionCurrent15minBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 25, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent15minBytesFrames1519Rcv.setStatus('current')
macSzRxShelfConnectionCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 25, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent15minElapsedTime.setStatus('current')
endOfMacSzRxShelfConnectionCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacSzRxShelfConnectionCurrent15minTable.setStatus('current')
macSzRxShelfConnectionCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 27), )
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent1dayTable.setStatus('current')
macSzRxShelfConnectionCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 27, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent1dayEntry.setStatus('current')
macSzRxShelfConnectionCurrent1dayBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 27, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent1dayBytesFrames64Rcv.setStatus('current')
macSzRxShelfConnectionCurrent1dayBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 27, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent1dayBytesFrames65Rcv.setStatus('current')
macSzRxShelfConnectionCurrent1dayBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 27, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent1dayBytesFrames128Rcv.setStatus('current')
macSzRxShelfConnectionCurrent1dayBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 27, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent1dayBytesFrames256Rcv.setStatus('current')
macSzRxShelfConnectionCurrent1dayBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 27, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent1dayBytesFrames512Rcv.setStatus('current')
macSzRxShelfConnectionCurrent1dayBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 27, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent1dayBytesFrames1024Rcv.setStatus('current')
macSzRxShelfConnectionCurrent1dayBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 27, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent1dayBytesFrames1519Rcv.setStatus('current')
macSzRxShelfConnectionCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 27, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionCurrent1dayElapsedTime.setStatus('current')
endOfMacSzRxShelfConnectionCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacSzRxShelfConnectionCurrent1dayTable.setStatus('current')
macSzRxShelfConnectionHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29), )
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minTable.setStatus('current')
macSzRxShelfConnectionHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macSzRxShelfConnectionHistorical15minNumber"))
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minEntry.setStatus('current')
macSzRxShelfConnectionHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minNumber.setStatus('current')
macSzRxShelfConnectionHistorical15minBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minBytesFrames64Rcv.setStatus('current')
macSzRxShelfConnectionHistorical15minBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minBytesFrames65Rcv.setStatus('current')
macSzRxShelfConnectionHistorical15minBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minBytesFrames128Rcv.setStatus('current')
macSzRxShelfConnectionHistorical15minBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minBytesFrames256Rcv.setStatus('current')
macSzRxShelfConnectionHistorical15minBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minBytesFrames512Rcv.setStatus('current')
macSzRxShelfConnectionHistorical15minBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minBytesFrames1024Rcv.setStatus('current')
macSzRxShelfConnectionHistorical15minBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minBytesFrames1519Rcv.setStatus('current')
macSzRxShelfConnectionHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minValidFlag.setStatus('current')
macSzRxShelfConnectionHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 29, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical15minTimeStamp.setStatus('current')
endOfMacSzRxShelfConnectionHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacSzRxShelfConnectionHistorical15minTable.setStatus('current')
macSzRxShelfConnectionHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31), )
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayTable.setStatus('current')
macSzRxShelfConnectionHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macSzRxShelfConnectionHistorical1dayNumber"))
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayEntry.setStatus('current')
macSzRxShelfConnectionHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayNumber.setStatus('current')
macSzRxShelfConnectionHistorical1dayBytesFrames64Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayBytesFrames64Rcv.setStatus('current')
macSzRxShelfConnectionHistorical1dayBytesFrames65Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayBytesFrames65Rcv.setStatus('current')
macSzRxShelfConnectionHistorical1dayBytesFrames128Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayBytesFrames128Rcv.setStatus('current')
macSzRxShelfConnectionHistorical1dayBytesFrames256Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31, 1, 5), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayBytesFrames256Rcv.setStatus('current')
macSzRxShelfConnectionHistorical1dayBytesFrames512Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31, 1, 6), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayBytesFrames512Rcv.setStatus('current')
macSzRxShelfConnectionHistorical1dayBytesFrames1024Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31, 1, 7), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayBytesFrames1024Rcv.setStatus('current')
macSzRxShelfConnectionHistorical1dayBytesFrames1519Rcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31, 1, 8), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayBytesFrames1519Rcv.setStatus('current')
macSzRxShelfConnectionHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayValidFlag.setStatus('current')
macSzRxShelfConnectionHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 31, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macSzRxShelfConnectionHistorical1dayTimeStamp.setStatus('current')
endOfMacSzRxShelfConnectionHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacSzRxShelfConnectionHistorical1dayTable.setStatus('current')
macErrRxShelfConnectionCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 33), )
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent15minTable.setStatus('current')
macErrRxShelfConnectionCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 33, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent15minEntry.setStatus('current')
macErrRxShelfConnectionCurrent15minCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 33, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent15minCrcErrorsRcv.setStatus('current')
macErrRxShelfConnectionCurrent15minOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 33, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent15minOversizedFramesRcv.setStatus('current')
macErrRxShelfConnectionCurrent15minUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 33, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent15minUndersizedFramesRcv.setStatus('current')
macErrRxShelfConnectionCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 33, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent15minElapsedTime.setStatus('current')
endOfMacErrRxShelfConnectionCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacErrRxShelfConnectionCurrent15minTable.setStatus('current')
macErrRxShelfConnectionCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 35), )
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent1dayTable.setStatus('current')
macErrRxShelfConnectionCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 35, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent1dayEntry.setStatus('current')
macErrRxShelfConnectionCurrent1dayCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 35, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent1dayCrcErrorsRcv.setStatus('current')
macErrRxShelfConnectionCurrent1dayOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 35, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent1dayOversizedFramesRcv.setStatus('current')
macErrRxShelfConnectionCurrent1dayUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 35, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent1dayUndersizedFramesRcv.setStatus('current')
macErrRxShelfConnectionCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 35, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionCurrent1dayElapsedTime.setStatus('current')
endOfMacErrRxShelfConnectionCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacErrRxShelfConnectionCurrent1dayTable.setStatus('current')
macErrRxShelfConnectionHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 37), )
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical15minTable.setStatus('current')
macErrRxShelfConnectionHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 37, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macErrRxShelfConnectionHistorical15minNumber"))
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical15minEntry.setStatus('current')
macErrRxShelfConnectionHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 37, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical15minNumber.setStatus('current')
macErrRxShelfConnectionHistorical15minCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 37, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical15minCrcErrorsRcv.setStatus('current')
macErrRxShelfConnectionHistorical15minOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 37, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical15minOversizedFramesRcv.setStatus('current')
macErrRxShelfConnectionHistorical15minUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 37, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical15minUndersizedFramesRcv.setStatus('current')
macErrRxShelfConnectionHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 37, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical15minValidFlag.setStatus('current')
macErrRxShelfConnectionHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 37, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical15minTimeStamp.setStatus('current')
endOfMacErrRxShelfConnectionHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacErrRxShelfConnectionHistorical15minTable.setStatus('current')
macErrRxShelfConnectionHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 39), )
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical1dayTable.setStatus('current')
macErrRxShelfConnectionHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 39, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macErrRxShelfConnectionHistorical1dayNumber"))
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical1dayEntry.setStatus('current')
macErrRxShelfConnectionHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 39, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical1dayNumber.setStatus('current')
macErrRxShelfConnectionHistorical1dayCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 39, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical1dayCrcErrorsRcv.setStatus('current')
macErrRxShelfConnectionHistorical1dayOversizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 39, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical1dayOversizedFramesRcv.setStatus('current')
macErrRxShelfConnectionHistorical1dayUndersizedFramesRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 39, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical1dayUndersizedFramesRcv.setStatus('current')
macErrRxShelfConnectionHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 39, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical1dayValidFlag.setStatus('current')
macErrRxShelfConnectionHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 39, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macErrRxShelfConnectionHistorical1dayTimeStamp.setStatus('current')
endOfMacErrRxShelfConnectionHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacErrRxShelfConnectionHistorical1dayTable.setStatus('current')
macIcRxShelfConnectionCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 41), )
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent15minTable.setStatus('current')
macIcRxShelfConnectionCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 41, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent15minEntry.setStatus('current')
macIcRxShelfConnectionCurrent15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 41, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent15minGoodFrames.setStatus('current')
macIcRxShelfConnectionCurrent15minOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 41, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent15minOctRcv.setStatus('current')
macIcRxShelfConnectionCurrent15minCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 41, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent15minCrcErrorsRcv.setStatus('current')
macIcRxShelfConnectionCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 41, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent15minElapsedTime.setStatus('current')
endOfMacIcRxShelfConnectionCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacIcRxShelfConnectionCurrent15minTable.setStatus('current')
macIcRxShelfConnectionCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 43), )
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent1dayTable.setStatus('current')
macIcRxShelfConnectionCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 43, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent1dayEntry.setStatus('current')
macIcRxShelfConnectionCurrent1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 43, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent1dayGoodFrames.setStatus('current')
macIcRxShelfConnectionCurrent1dayOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 43, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent1dayOctRcv.setStatus('current')
macIcRxShelfConnectionCurrent1dayCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 43, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent1dayCrcErrorsRcv.setStatus('current')
macIcRxShelfConnectionCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 43, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionCurrent1dayElapsedTime.setStatus('current')
endOfMacIcRxShelfConnectionCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacIcRxShelfConnectionCurrent1dayTable.setStatus('current')
macIcRxShelfConnectionHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 45), )
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical15minTable.setStatus('current')
macIcRxShelfConnectionHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 45, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macIcRxShelfConnectionHistorical15minNumber"))
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical15minEntry.setStatus('current')
macIcRxShelfConnectionHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 45, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical15minNumber.setStatus('current')
macIcRxShelfConnectionHistorical15minGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 45, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical15minGoodFrames.setStatus('current')
macIcRxShelfConnectionHistorical15minOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 45, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical15minOctRcv.setStatus('current')
macIcRxShelfConnectionHistorical15minCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 45, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical15minCrcErrorsRcv.setStatus('current')
macIcRxShelfConnectionHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 45, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical15minValidFlag.setStatus('current')
macIcRxShelfConnectionHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 45, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical15minTimeStamp.setStatus('current')
endOfMacIcRxShelfConnectionHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacIcRxShelfConnectionHistorical15minTable.setStatus('current')
macIcRxShelfConnectionHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 47), )
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical1dayTable.setStatus('current')
macIcRxShelfConnectionHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 47, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macIcRxShelfConnectionHistorical1dayNumber"))
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical1dayEntry.setStatus('current')
macIcRxShelfConnectionHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 47, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical1dayNumber.setStatus('current')
macIcRxShelfConnectionHistorical1dayGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 47, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical1dayGoodFrames.setStatus('current')
macIcRxShelfConnectionHistorical1dayOctRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 47, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical1dayOctRcv.setStatus('current')
macIcRxShelfConnectionHistorical1dayCrcErrorsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 47, 1, 4), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical1dayCrcErrorsRcv.setStatus('current')
macIcRxShelfConnectionHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 47, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical1dayValidFlag.setStatus('current')
macIcRxShelfConnectionHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 47, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcRxShelfConnectionHistorical1dayTimeStamp.setStatus('current')
endOfMacIcRxShelfConnectionHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacIcRxShelfConnectionHistorical1dayTable.setStatus('current')
macIcTxShelfConnectionCurrent15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 49), )
if mibBuilder.loadTexts: macIcTxShelfConnectionCurrent15minTable.setStatus('current')
macIcTxShelfConnectionCurrent15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 49, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macIcTxShelfConnectionCurrent15minEntry.setStatus('current')
macIcTxShelfConnectionCurrent15minBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 49, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionCurrent15minBytesTrmt.setStatus('current')
macIcTxShelfConnectionCurrent15minFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 49, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionCurrent15minFramesTrmt.setStatus('current')
macIcTxShelfConnectionCurrent15minElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 49, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionCurrent15minElapsedTime.setStatus('current')
endOfMacIcTxShelfConnectionCurrent15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacIcTxShelfConnectionCurrent15minTable.setStatus('current')
macIcTxShelfConnectionCurrent1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 51), )
if mibBuilder.loadTexts: macIcTxShelfConnectionCurrent1dayTable.setStatus('current')
macIcTxShelfConnectionCurrent1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 51, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"))
if mibBuilder.loadTexts: macIcTxShelfConnectionCurrent1dayEntry.setStatus('current')
macIcTxShelfConnectionCurrent1dayBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 51, 1, 1), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionCurrent1dayBytesTrmt.setStatus('current')
macIcTxShelfConnectionCurrent1dayFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 51, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionCurrent1dayFramesTrmt.setStatus('current')
macIcTxShelfConnectionCurrent1dayElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 51, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionCurrent1dayElapsedTime.setStatus('current')
endOfMacIcTxShelfConnectionCurrent1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacIcTxShelfConnectionCurrent1dayTable.setStatus('current')
macIcTxShelfConnectionHistorical15minTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 53), )
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical15minTable.setStatus('current')
macIcTxShelfConnectionHistorical15minEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 53, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macIcTxShelfConnectionHistorical15minNumber"))
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical15minEntry.setStatus('current')
macIcTxShelfConnectionHistorical15minNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 53, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical15minNumber.setStatus('current')
macIcTxShelfConnectionHistorical15minBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 53, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical15minBytesTrmt.setStatus('current')
macIcTxShelfConnectionHistorical15minFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 53, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical15minFramesTrmt.setStatus('current')
macIcTxShelfConnectionHistorical15minValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 53, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical15minValidFlag.setStatus('current')
macIcTxShelfConnectionHistorical15minTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 53, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical15minTimeStamp.setStatus('current')
endOfMacIcTxShelfConnectionHistorical15minTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacIcTxShelfConnectionHistorical15minTable.setStatus('current')
macIcTxShelfConnectionHistorical1dayTable = MibTable((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 55), )
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical1dayTable.setStatus('current')
macIcTxShelfConnectionHistorical1dayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 55, 1), ).setIndexNames((0, "ADVA-FSPR7-MIB", "entityShelfConnShelfNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnSlotNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnPortNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnExtNo"), (0, "ADVA-FSPR7-MIB", "entityShelfConnClassName"), (0, "ADVA-FSPR7-PM-MIB", "macIcTxShelfConnectionHistorical1dayNumber"))
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical1dayEntry.setStatus('current')
macIcTxShelfConnectionHistorical1dayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 55, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)))
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical1dayNumber.setStatus('current')
macIcTxShelfConnectionHistorical1dayBytesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 55, 1, 2), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical1dayBytesTrmt.setStatus('current')
macIcTxShelfConnectionHistorical1dayFramesTrmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 55, 1, 3), Counter64String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical1dayFramesTrmt.setStatus('current')
macIcTxShelfConnectionHistorical1dayValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 55, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical1dayValidFlag.setStatus('current')
macIcTxShelfConnectionHistorical1dayTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 55, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macIcTxShelfConnectionHistorical1dayTimeStamp.setStatus('current')
endOfMacIcTxShelfConnectionHistorical1dayTable = MibScalar((1, 3, 6, 1, 4, 1, 2544, 1, 11, 11, 18, 1, 2, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: endOfMacIcTxShelfConnectionHistorical1dayTable.setStatus('current')
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", facilityDataThresholdUASTcmaHT1day=facilityDataThresholdUASTcmaHT1day, lbcnFacilityHistorical15minEntry=lbcnFacilityHistorical15minEntry, oscGainOptMuxHistorical1dayTable=oscGainOptMuxHistorical1dayTable, otuFacilityCurrent15minTable=otuFacilityCurrent15minTable, endOfLbcnDcnHistorical1weekTable=endOfLbcnDcnHistorical1weekTable, discsBlockFacilityCurrent1dayTable=discsBlockFacilityCurrent1dayTable, pcsTxFacilityCurrent1dayBBETX=pcsTxFacilityCurrent1dayBBETX, endOfMacErrRxDcnCurrent1dayTable=endOfMacErrRxDcnCurrent1dayTable, gfpfrFacilityHistorical1dayNumber=gfpfrFacilityHistorical1dayNumber, optMuxPhysInstValueVariableGain=optMuxPhysInstValueVariableGain, endOfTcmCFacilityHistorical1dayTable=endOfTcmCFacilityHistorical1dayTable, facilityDataThresholdCVPcsHT1day=facilityDataThresholdCVPcsHT1day, tcmAFacilityHistorical1daySES=tcmAFacilityHistorical1daySES, frRcv2FacilityCurrent1dayElapsedTime=frRcv2FacilityCurrent1dayElapsedTime, endOfSkewFacilityHistorical1dayTable=endOfSkewFacilityHistorical1dayTable, l2PortTxFacilityHistorical15minBytesFrames1024Trmt=l2PortTxFacilityHistorical15minBytesFrames1024Trmt, l2PortRxFacilityCurrent1dayFramesRcv=l2PortRxFacilityCurrent1dayFramesRcv, attrmtOptMuxHistorical1dayNumber=attrmtOptMuxHistorical1dayNumber, frRcv3FacilityHistorical1dayEntry=frRcv3FacilityHistorical1dayEntry, l2PortTxFacilityCurrent1dayFramesTrmt=l2PortTxFacilityCurrent1dayFramesTrmt, facilityDataThresholdSEFSSHT15min=facilityDataThresholdSEFSSHT15min, rndTrpDlyFacilityHistorical1dayTimeStamp=rndTrpDlyFacilityHistorical1dayTimeStamp, endOfOduFacilityHistorical15minTable=endOfOduFacilityHistorical15minTable, skewFacilityHistorical15minTimeStamp=skewFacilityHistorical15minTimeStamp, fecFacilityCurrent1dayUBE=fecFacilityCurrent1dayUBE, atRcvOptMuxHistorical1dayLow=atRcvOptMuxHistorical1dayLow, utlTxFacilityCurrent1dayTable=utlTxFacilityCurrent1dayTable, oscGainOptMuxHistorical1weekNumber=oscGainOptMuxHistorical1weekNumber, sarLinkRcvFacilityHistorical15minTimeStamp=sarLinkRcvFacilityHistorical15minTimeStamp, ampEqptHistorical1weekTimeStamp=ampEqptHistorical1weekTimeStamp, utlRxFacilityHistorical1dayUtlHigh=utlRxFacilityHistorical1dayUtlHigh, macRxDcnCurrent1dayBroadcastFramesRcv=macRxDcnCurrent1dayBroadcastFramesRcv, frRcv3FacilityHistorical15minValidFlag=frRcv3FacilityHistorical15minValidFlag, frRcv3FacilityCurrent1dayPauseFrames=frRcv3FacilityCurrent1dayPauseFrames, facilityDataInstValueTable=facilityDataInstValueTable, otuFecFacilityHistorical15minTimeStamp=otuFecFacilityHistorical15minTimeStamp, pumpPwrOptMuxHistorical1dayMean=pumpPwrOptMuxHistorical1dayMean, tcmCFacilityCurrent15minUAS=tcmCFacilityCurrent15minUAS, snrFacilityHistorical1dayValidFlag=snrFacilityHistorical1dayValidFlag, rsFacilityHistorical1dayNumber=rsFacilityHistorical1dayNumber, endOfMacRxShelfConnectionHistorical1dayTable=endOfMacRxShelfConnectionHistorical1dayTable, attrmtOptMuxHistorical1dayTimeStamp=attrmtOptMuxHistorical1dayTimeStamp, facilityDataThresholdUASLHT15min=facilityDataThresholdUASLHT15min, atrcvDcnHistorical15minTimeStamp=atrcvDcnHistorical15minTimeStamp, cdcFacilityHistorical1dayHigh=cdcFacilityHistorical1dayHigh, frRcv1FacilityCurrent15minBytes=frRcv1FacilityCurrent15minBytes, eqptPhysInstValueSubTemp=eqptPhysInstValueSubTemp, lbcnDcnHistorical1dayMean=lbcnDcnHistorical1dayMean, frRcv2ShelfConnectionCurrent1dayTable=frRcv2ShelfConnectionCurrent1dayTable, macTxDcnCurrent15minDiscardedFramesTrmt=macTxDcnCurrent15minDiscardedFramesTrmt, pcsRxFacilityHistorical15minEntry=pcsRxFacilityHistorical15minEntry, utlTxFacilityCurrent15minUtlMean=utlTxFacilityCurrent15minUtlMean, lldpFrameRxFacilityCurrent1dayLLDPFramesRx=lldpFrameRxFacilityCurrent1dayLLDPFramesRx, oscOptOptMuxHistorical1dayValidFlag=oscOptOptMuxHistorical1dayValidFlag, otuFacilityCurrent15minElapsedTime=otuFacilityCurrent15minElapsedTime, macTxDcnHistorical1dayNumber=macTxDcnHistorical1dayNumber, gfpfrFacilityHistorical15minTHecDiscardedFrames=gfpfrFacilityHistorical15minTHecDiscardedFrames, macRxShelfConnectionHistorical15minOctRcv=macRxShelfConnectionHistorical15minOctRcv, muxFacilityHistorical1daySES=muxFacilityHistorical1daySES, macRxShelfConnectionCurrent1dayEntry=macRxShelfConnectionCurrent1dayEntry, macTxShelfConnectionCurrent1dayBytesTrmt=macTxShelfConnectionCurrent1dayBytesTrmt, endOfMacSzRxDcnCurrent1dayTable=endOfMacSzRxDcnCurrent1dayTable, endOfLldpTLVRxFacilityCurrent1dayTable=endOfLldpTLVRxFacilityCurrent1dayTable, endOfMsFacilityHistorical15minTable=endOfMsFacilityHistorical15minTable, macRxDcnHistorical15minMulticastFramesRcv=macRxDcnHistorical15minMulticastFramesRcv, endOfOtuFacilityHistorical15minTable=endOfOtuFacilityHistorical15minTable, dgdFacilityHistorical1dayTimeStamp=dgdFacilityHistorical1dayTimeStamp, oprOptMuxHistorical15minTimeStamp=oprOptMuxHistorical15minTimeStamp, macTxDcnCurrent15minBytesTrmt=macTxDcnCurrent15minBytesTrmt, macErrRxDcnHistorical1dayTable=macErrRxDcnHistorical1dayTable, endOfTcmCFacilityHistorical15minTable=endOfTcmCFacilityHistorical15minTable, lldpTLVFacilityHistorical15minTLVDiscards=lldpTLVFacilityHistorical15minTLVDiscards, facilityPhysInstValueInputPowerRaw=facilityPhysInstValueInputPowerRaw, attrmtOptMuxHistorical1dayEntry=attrmtOptMuxHistorical1dayEntry, optMuxPhysInstValueAttenuation=optMuxPhysInstValueAttenuation, lldpTLVFacilityHistorical15minTable=lldpTLVFacilityHistorical15minTable, l2PortRxFacilityHistorical1dayBytesFrames64Rcv=l2PortRxFacilityHistorical1dayBytesFrames64Rcv, cdcFacilityHistorical1weekEntry=cdcFacilityHistorical1weekEntry, eqptPhysInstValueWattUp=eqptPhysInstValueWattUp, pmShelfConnectionDataRecord=pmShelfConnectionDataRecord, macSzRxShelfConnectionHistorical15minBytesFrames256Rcv=macSzRxShelfConnectionHistorical15minBytesFrames256Rcv, optOptMuxHistorical1weekValidFlag=optOptMuxHistorical1weekValidFlag, otuFacilityCurrent15minBbe=otuFacilityCurrent15minBbe, lldpFrameFacilityCurrent15minEntry=lldpFrameFacilityCurrent15minEntry, frRcv2FacilityHistorical15minCrcFrames=frRcv2FacilityHistorical15minCrcFrames, oscGainOptMuxHistorical1dayTimeStamp=oscGainOptMuxHistorical1dayTimeStamp, pcs2FacilityCurrent15minTable=pcs2FacilityCurrent15minTable, facilityDataThresholdESTcmcHT1day=facilityDataThresholdESTcmcHT1day, frTrmt2FacilityHistorical15minDiscardedFrames=frTrmt2FacilityHistorical15minDiscardedFrames, l2PortTxFacilityHistorical15minMulticastFramesTrmt=l2PortTxFacilityHistorical15minMulticastFramesTrmt, byteTrmtFacilityCurrent1dayCrcFramesEgress=byteTrmtFacilityCurrent1dayCrcFramesEgress, optFacilityHistorical15minMean=optFacilityHistorical15minMean, macErrRxDcnCurrent1dayTable=macErrRxDcnCurrent1dayTable, macTxShelfConnectionHistorical1dayMulticastFramesTrmt=macTxShelfConnectionHistorical1dayMulticastFramesTrmt, facilityPhysInstValueLogicalLanesSkew=facilityPhysInstValueLogicalLanesSkew, cfotFacilityHistorical15minEntry=cfotFacilityHistorical15minEntry, dcnPhysInstValueAttRmt=dcnPhysInstValueAttRmt, frRcv2ShelfConnectionCurrent15minGoodFrames=frRcv2ShelfConnectionCurrent15minGoodFrames, muxFacilityCurrent15minSES=muxFacilityCurrent15minSES, muxFacilityHistorical1dayTimeStamp=muxFacilityHistorical1dayTimeStamp, cfotFacilityHistorical1weekTable=cfotFacilityHistorical1weekTable, macErrRxShelfConnectionHistorical1dayTable=macErrRxShelfConnectionHistorical1dayTable, sFacilityCurrent1dayEntry=sFacilityCurrent1dayEntry, macErrRxShelfConnectionCurrent15minElapsedTime=macErrRxShelfConnectionCurrent15minElapsedTime, pcsRxFacilityHistorical1dayNumber=pcsRxFacilityHistorical1dayNumber, brTxOptMuxHistorical15minEntry=brTxOptMuxHistorical15minEntry, facilityDataThresholdBERCEFecHT1day=facilityDataThresholdBERCEFecHT1day, frRcv2ShelfConnectionCurrent15minTable=frRcv2ShelfConnectionCurrent15minTable, lldpFrameFacilityHistorical1dayNumber=lldpFrameFacilityHistorical1dayNumber, sFacilityHistorical1dayValidFlag=sFacilityHistorical1dayValidFlag, macIcRxShelfConnectionHistorical1dayEntry=macIcRxShelfConnectionHistorical1dayEntry, endOfOduFacilityCurrent1dayTable=endOfOduFacilityCurrent1dayTable, checfrFacilityHistorical1dayNumber=checfrFacilityHistorical1dayNumber, tcmBFacilityHistorical1dayEntry=tcmBFacilityHistorical1dayEntry, l2PortTxFacilityCurrent15minFramesTrmt=l2PortTxFacilityCurrent15minFramesTrmt, frRcv4FacilityCurrent1dayElapsedTime=frRcv4FacilityCurrent1dayElapsedTime, frRcv2FacilityHistorical15minTable=frRcv2FacilityHistorical15minTable, dsFacilityHistorical1dayTable=dsFacilityHistorical1dayTable, optMuxPhysInstValueCurrentEdfaOpt=optMuxPhysInstValueCurrentEdfaOpt, tcmCFacilityHistorical15minUAS=tcmCFacilityHistorical15minUAS, frRcv2DcnCurrent15minPauseFrames=frRcv2DcnCurrent15minPauseFrames, otuFecFacilityCurrent15minEntry=otuFecFacilityCurrent15minEntry, brOptMuxHistorical1dayLow=brOptMuxHistorical1dayLow, facilityDataInstValueEntry=facilityDataInstValueEntry, frRcv3FacilityHistorical1dayOversizedFramesRcv=frRcv3FacilityHistorical1dayOversizedFramesRcv, pcsRxFacilityCurrent15minES=pcsRxFacilityCurrent15minES, lbcnDcnHistorical15minLow=lbcnDcnHistorical15minLow, byteTrmtFacilityCurrent15minEntry=byteTrmtFacilityCurrent15minEntry, sFacilityCurrent1dayES=sFacilityCurrent1dayES, fec2FacilityCurrent15minCE=fec2FacilityCurrent15minCE, macIcRxShelfConnectionHistorical15minNumber=macIcRxShelfConnectionHistorical15minNumber, lldpTLVFacilityHistorical1dayValidFlag=lldpTLVFacilityHistorical1dayValidFlag, oprDcnHistorical1weekValidFlag=oprDcnHistorical1weekValidFlag, l2PortTxFacilityHistorical1dayBytesFrames65Trmt=l2PortTxFacilityHistorical1dayBytesFrames65Trmt, pcs3FacilityHistorical15minCVDE=pcs3FacilityHistorical15minCVDE, macErrRxDcnHistorical1dayValidFlag=macErrRxDcnHistorical1dayValidFlag, otuFacilityCurrent1dayUAS=otuFacilityCurrent1dayUAS, pcs1FacilityCurrent15minES=pcs1FacilityCurrent15minES, dcnPhysInstValueOpt=dcnPhysInstValueOpt, tcmBFacilityHistorical15minUAS=tcmBFacilityHistorical15minUAS, pcs1FacilityCurrent1dayES=pcs1FacilityCurrent1dayES, pmEqptPhysRecord=pmEqptPhysRecord, l2PortRxFacilityCurrent15minBytesFrames128Rcv=l2PortRxFacilityCurrent15minBytesFrames128Rcv, optDcnHistorical15minTable=optDcnHistorical15minTable, frRcv3FacilityCurrent15minEntry=frRcv3FacilityCurrent15minEntry, lldpTLVTxFacilityHistorical1dayTable=lldpTLVTxFacilityHistorical1dayTable, optOptMuxHistorical1dayMean=optOptMuxHistorical1dayMean, ampInEqptHistorical1dayHigh=ampInEqptHistorical1dayHigh, endOfFecFacilityCurrent1dayTable=endOfFecFacilityCurrent1dayTable, facilityDataThresholdTable=facilityDataThresholdTable, pcs3FacilityHistorical15minNumber=pcs3FacilityHistorical15minNumber, facilityPhysInstValueRoundTripDelay=facilityPhysInstValueRoundTripDelay, facilityPhysThresholdConfigOpticalOutputPwrHigh=facilityPhysThresholdConfigOpticalOutputPwrHigh, fecFacilityCurrent15minCE=fecFacilityCurrent15minCE, utlTxFacilityCurrent1dayEntry=utlTxFacilityCurrent1dayEntry, lldpFrameFacilityCurrent15minLLDPFrames=lldpFrameFacilityCurrent15minLLDPFrames, pmOptMux=pmOptMux, tcmBFacilityHistorical15minNumber=tcmBFacilityHistorical15minNumber, cdFacilityHistorical15minLow=cdFacilityHistorical15minLow, lldpTLVTxFacilityHistorical1dayNumber=lldpTLVTxFacilityHistorical1dayNumber, endOfMacTxDcnHistorical15minTable=endOfMacTxDcnHistorical15minTable, cfotFacilityHistorical1weekMean=cfotFacilityHistorical1weekMean, optMuxPhysInstValuePumpLaser3Temp=optMuxPhysInstValuePumpLaser3Temp, facilityDataThresholdSEFSSHT1day=facilityDataThresholdSEFSSHT1day, utlRxFacilityCurrent1dayElapsedTime=utlRxFacilityCurrent1dayElapsedTime, frRcv3FacilityHistorical15minUndersizedFramesRcv=frRcv3FacilityHistorical15minUndersizedFramesRcv, optMuxPhysInstValueEffectiveGainNtoC=optMuxPhysInstValueEffectiveGainNtoC, rndTrpDlyFacilityHistorical15minMean=rndTrpDlyFacilityHistorical15minMean, brOptMuxHistorical1weekNumber=brOptMuxHistorical1weekNumber, frRcv2DcnHistorical1dayTable=frRcv2DcnHistorical1dayTable, frRcv1FacilityCurrent1dayGoodFrames=frRcv1FacilityCurrent1dayGoodFrames, lFacilityHistorical1dayUAS=lFacilityHistorical1dayUAS, oscOptOptMuxHistorical15minHigh=oscOptOptMuxHistorical15minHigh, macTxDcnCurrent1dayTable=macTxDcnCurrent1dayTable, eqptPhysInstValueEntry=eqptPhysInstValueEntry, macErrRxDcnHistorical15minEntry=macErrRxDcnHistorical15minEntry, macTxDcnCurrent15minBroadcastFramesTrmt=macTxDcnCurrent15minBroadcastFramesTrmt, endOfMuxFacilityHistorical1dayTable=endOfMuxFacilityHistorical1dayTable, optDcnHistorical1dayTable=optDcnHistorical1dayTable, tcmAFacilityHistorical1dayNumber=tcmAFacilityHistorical1dayNumber, checfrFacilityCurrent1dayEntry=checfrFacilityCurrent1dayEntry, voltInpEqptHistorical1dayNumber=voltInpEqptHistorical1dayNumber, utlRxFacilityHistorical15minUtlLow=utlRxFacilityHistorical15minUtlLow, eqptPhysThresholdTempHigh=eqptPhysThresholdTempHigh, endOfFrTrmt2FacilityHistorical1dayTable=endOfFrTrmt2FacilityHistorical1dayTable, brOptMuxHistorical15minLow=brOptMuxHistorical15minLow, frRcv2ShelfConnectionHistorical1dayTable=frRcv2ShelfConnectionHistorical1dayTable, checfrFacilityHistorical1dayTable=checfrFacilityHistorical1dayTable, attrmtOptMuxHistorical1weekTable=attrmtOptMuxHistorical1weekTable, dsFacilityCurrent1dayEntry=dsFacilityCurrent1dayEntry, macSzRxDcnCurrent15minBytesFrames65Rcv=macSzRxDcnCurrent15minBytesFrames65Rcv, frTrmt1FacilityHistorical15minBytes=frTrmt1FacilityHistorical15minBytes, endOfPcsRxFacilityCurrent1dayTable=endOfPcsRxFacilityCurrent1dayTable, l2PortTxFacilityHistorical1dayMulticastFramesTrmt=l2PortTxFacilityHistorical1dayMulticastFramesTrmt, byteTrmtFacilityHistorical1dayFramesTrmt=byteTrmtFacilityHistorical1dayFramesTrmt, frTrmt2FacilityHistorical1dayGoodFramesx=frTrmt2FacilityHistorical1dayGoodFramesx, oprFacilityHistorical15minHigh=oprFacilityHistorical15minHigh, eqptPhysInstValueMaxOutProt=eqptPhysInstValueMaxOutProt, macIcTxShelfConnectionHistorical15minBytesTrmt=macIcTxShelfConnectionHistorical15minBytesTrmt, atRcvOptMuxHistorical1weekValidFlag=atRcvOptMuxHistorical1weekValidFlag, skewFacilityHistorical1weekEntry=skewFacilityHistorical1weekEntry, facilityPhysInstValueLatency=facilityPhysInstValueLatency, oduFacilityHistorical15minSES=oduFacilityHistorical15minSES, oduFacilityHistorical1dayES=oduFacilityHistorical1dayES, macSzRxShelfConnectionCurrent1dayBytesFrames1519Rcv=macSzRxShelfConnectionCurrent1dayBytesFrames1519Rcv, endOfLldpTLVTxFacilityHistorical15minTable=endOfLldpTLVTxFacilityHistorical15minTable, snrFacilityHistorical15minMean=snrFacilityHistorical15minMean, endOfOprFacilityHistorical1dayTable=endOfOprFacilityHistorical1dayTable, frTrmt1FacilityHistorical1dayBytes=frTrmt1FacilityHistorical1dayBytes, macTxShelfConnectionCurrent1dayElapsedTime=macTxShelfConnectionCurrent1dayElapsedTime, fecFacilityHistorical15minNumber=fecFacilityHistorical15minNumber, latencyFacilityHistorical1weekEntry=latencyFacilityHistorical1weekEntry, endOfDsOptMuxHistorical1dayTable=endOfDsOptMuxHistorical1dayTable, sarLinkRcvFacilityCurrent15minES=sarLinkRcvFacilityCurrent15minES, dsFacilityCurrent15minTable=dsFacilityCurrent15minTable, pmFacilityDataValue=pmFacilityDataValue, atrcvDcnHistorical15minValidFlag=atrcvDcnHistorical15minValidFlag, endOfOprOptMuxHistorical1weekTable=endOfOprOptMuxHistorical1weekTable, optMuxPhysInstValuePumpLaser4Temp=optMuxPhysInstValuePumpLaser4Temp, endOfSFacilityCurrent15minTable=endOfSFacilityCurrent15minTable, lldpTLVTxFacilityCurrent1dayEntry=lldpTLVTxFacilityCurrent1dayEntry, endOfTcmAFacilityHistorical15minTable=endOfTcmAFacilityHistorical15minTable, pmOptMuxPhysRecord=pmOptMuxPhysRecord, tcmCFacilityCurrent15minSES=tcmCFacilityCurrent15minSES, l2PortRxFacilityCurrent15minCrcErrorsRcv=l2PortRxFacilityCurrent15minCrcErrorsRcv, cdcFacilityHistorical1dayLow=cdcFacilityHistorical1dayLow, lldpTLVTxFacilityHistorical15minNumber=lldpTLVTxFacilityHistorical15minNumber, endOfMacSzRxDcnHistorical15minTable=endOfMacSzRxDcnHistorical15minTable, oprFacilityHistorical1weekHigh=oprFacilityHistorical1weekHigh, oscOptOptMuxHistorical1dayNumber=oscOptOptMuxHistorical1dayNumber, l2PortTxFacilityHistorical15minTable=l2PortTxFacilityHistorical15minTable, facilityDataThresholdBBEOtuHT15min=facilityDataThresholdBBEOtuHT15min, fecFacilityHistorical1dayCE=fecFacilityHistorical1dayCE, facilityPhysThresholdLogicalLanesSkewHigh=facilityPhysThresholdLogicalLanesSkewHigh, optOptMuxHistorical1weekNumber=optOptMuxHistorical1weekNumber, lldpFrameTxFacilityHistorical1dayEntry=lldpFrameTxFacilityHistorical1dayEntry, macErrRxShelfConnectionHistorical15minNumber=macErrRxShelfConnectionHistorical15minNumber, rsFacilityHistorical1dayOOFS=rsFacilityHistorical1dayOOFS, tcmBFacilityHistorical15minTable=tcmBFacilityHistorical15minTable, pcs4FacilityHistorical1dayTable=pcs4FacilityHistorical1dayTable, ampEqptHistorical1weekHigh=ampEqptHistorical1weekHigh, atrcvDcnHistorical1weekValidFlag=atrcvDcnHistorical1weekValidFlag, pcs1FacilityCurrent1daySE=pcs1FacilityCurrent1daySE, sarLinkTrmtFacilityHistorical15minValidFlag=sarLinkTrmtFacilityHistorical15minValidFlag, fecFacilityHistorical15minTable=fecFacilityHistorical15minTable, macSzRxShelfConnectionCurrent15minEntry=macSzRxShelfConnectionCurrent15minEntry, frRcv1FacilityHistorical15minEntry=frRcv1FacilityHistorical15minEntry, endOfDiscsBlockFacilityCurrent15minTable=endOfDiscsBlockFacilityCurrent15minTable, muxFacilityHistorical15minNumber=muxFacilityHistorical15minNumber, lFacilityCurrent1dayES=lFacilityCurrent1dayES, frRcv2ShelfConnectionCurrent15minPauseFrames=frRcv2ShelfConnectionCurrent15minPauseFrames, l2PortTxFacilityCurrent1dayBytesFrames1024Trmt=l2PortTxFacilityCurrent1dayBytesFrames1024Trmt, macSzRxDcnHistorical1dayNumber=macSzRxDcnHistorical1dayNumber, snrFacilityHistorical1weekMean=snrFacilityHistorical1weekMean)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", macErrRxShelfConnectionCurrent1dayUndersizedFramesRcv=macErrRxShelfConnectionCurrent1dayUndersizedFramesRcv, pmDcnPhysRecord=pmDcnPhysRecord, discsBlockFacilityHistorical1dayEntry=discsBlockFacilityHistorical1dayEntry, oscGainOptMuxHistorical15minValidFlag=oscGainOptMuxHistorical15minValidFlag, pmFacility=pmFacility, macRxDcnHistorical1dayGoodFrames=macRxDcnHistorical1dayGoodFrames, msFacilityCurrent1dayElapsedTime=msFacilityCurrent1dayElapsedTime, frRcv2ShelfConnectionHistorical1dayPauseFrames=frRcv2ShelfConnectionHistorical1dayPauseFrames, lldpTLVTxFacilityHistorical15minTimeStamp=lldpTLVTxFacilityHistorical15minTimeStamp, optMuxPhysInstValuePumpLaserBiasCurrent2=optMuxPhysInstValuePumpLaserBiasCurrent2, pumpPwrOptMuxHistorical15minLow=pumpPwrOptMuxHistorical15minLow, fec2FacilityHistorical15minBERCE=fec2FacilityHistorical15minBERCE, pcs4FacilityCurrent15minEntry=pcs4FacilityCurrent15minEntry, checfrFacilityCurrent1dayElapsedTime=checfrFacilityCurrent1dayElapsedTime, pcsTxFacilityCurrent15minCVTX=pcsTxFacilityCurrent15minCVTX, frTrmt1FacilityHistorical15minCrcFramesEgress=frTrmt1FacilityHistorical15minCrcFramesEgress, optMuxPhysInstValueOperatingHours=optMuxPhysInstValueOperatingHours, dcnPhysThresholdAttRcvHigh=dcnPhysThresholdAttRcvHigh, otuFacilityHistorical15minEntry=otuFacilityHistorical15minEntry, lldpTLVFacilityCurrent1dayTLVUnknown=lldpTLVFacilityCurrent1dayTLVUnknown, oprFacilityHistorical1dayEntry=oprFacilityHistorical1dayEntry, macTxShelfConnectionHistorical15minBytesTrmt=macTxShelfConnectionHistorical15minBytesTrmt, dsFacilityHistorical1dayValidFlag=dsFacilityHistorical1dayValidFlag, l2PortTxFacilityHistorical1dayTable=l2PortTxFacilityHistorical1dayTable, lldpTLVTxFacilityCurrent1dayTable=lldpTLVTxFacilityCurrent1dayTable, endOfAttrmtOptMuxHistorical1dayTable=endOfAttrmtOptMuxHistorical1dayTable, lldpFrameRxFacilityCurrent15minLLDPFramesRx=lldpFrameRxFacilityCurrent15minLLDPFramesRx, lldpFrameRxFacilityHistorical1dayFrameRxErrors=lldpFrameRxFacilityHistorical1dayFrameRxErrors, rndTrpDlyFacilityHistorical1dayValidFlag=rndTrpDlyFacilityHistorical1dayValidFlag, l2PortRxFacilityHistorical15minUndersizedFramesRcv=l2PortRxFacilityHistorical15minUndersizedFramesRcv, frRcv3FacilityHistorical1dayValidFlag=frRcv3FacilityHistorical1dayValidFlag, frTrmt1FacilityHistorical15minValidFlag=frTrmt1FacilityHistorical15minValidFlag, lbcnDcnHistorical1weekTimeStamp=lbcnDcnHistorical1weekTimeStamp, byteTrmtFacilityHistorical15minNumber=byteTrmtFacilityHistorical15minNumber, oscOptOptMuxHistorical1dayTimeStamp=oscOptOptMuxHistorical1dayTimeStamp, frRcv3FacilityHistorical15minOversizedFramesRcv=frRcv3FacilityHistorical15minOversizedFramesRcv, facilityPhysInstValueLaserTemp=facilityPhysInstValueLaserTemp, dgdFacilityHistorical1weekEntry=dgdFacilityHistorical1weekEntry, rndTrpDlyFacilityHistorical1weekNumber=rndTrpDlyFacilityHistorical1weekNumber, qfactFacilityHistorical1dayTimeStamp=qfactFacilityHistorical1dayTimeStamp, macSzRxShelfConnectionHistorical15minBytesFrames64Rcv=macSzRxShelfConnectionHistorical15minBytesFrames64Rcv, pcsTxFacilityHistorical1dayValidFlag=pcsTxFacilityHistorical1dayValidFlag, fecFacilityHistorical15minEntry=fecFacilityHistorical15minEntry, endOfOprOptMuxHistorical1dayTable=endOfOprOptMuxHistorical1dayTable, macRxShelfConnectionCurrent1dayMulticastFramesRcv=macRxShelfConnectionCurrent1dayMulticastFramesRcv, oscOptOptMuxHistorical1dayEntry=oscOptOptMuxHistorical1dayEntry, endOfMacIcRxShelfConnectionHistorical15minTable=endOfMacIcRxShelfConnectionHistorical15minTable, macRxDcnCurrent15minTable=macRxDcnCurrent15minTable, pcs4FacilityCurrent1dayES=pcs4FacilityCurrent1dayES, optOptMuxHistorical15minEntry=optOptMuxHistorical15minEntry, lbcnFacilityHistorical15minNumber=lbcnFacilityHistorical15minNumber, frRcv2ShelfConnectionCurrent1dayGoodFrames=frRcv2ShelfConnectionCurrent1dayGoodFrames, cdFacilityHistorical15minEntry=cdFacilityHistorical15minEntry, tcmCFacilityHistorical1dayUAS=tcmCFacilityHistorical1dayUAS, endOfPmOptMuxPhysValue=endOfPmOptMuxPhysValue, fecFacilityHistorical15minUBE=fecFacilityHistorical15minUBE, macSzRxDcnHistorical1dayBytesFrames512Rcv=macSzRxDcnHistorical1dayBytesFrames512Rcv, dcnPhysThresholdOptHigh=dcnPhysThresholdOptHigh, rsFacilityCurrent1dayBBE=rsFacilityCurrent1dayBBE, tcmCFacilityCurrent1dayUAS=tcmCFacilityCurrent1dayUAS, oscPwrOptMuxHistorical15minMean=oscPwrOptMuxHistorical15minMean, endOfAtrcvDcnHistorical1weekTable=endOfAtrcvDcnHistorical1weekTable, oduFacilityHistorical1dayBbe=oduFacilityHistorical1dayBbe, checfrFacilityCurrent15minElapsedTime=checfrFacilityCurrent15minElapsedTime, facilityPhysInstValueDelayTime=facilityPhysInstValueDelayTime, checfrFacilityHistorical1dayTypeHecCorrectedFrames=checfrFacilityHistorical1dayTypeHecCorrectedFrames, qfactFacilityHistorical15minEntry=qfactFacilityHistorical15minEntry, dsOptMuxHistorical1dayEntry=dsOptMuxHistorical1dayEntry, fec2FacilityCurrent15minEntry=fec2FacilityCurrent15minEntry, macTxDcnCurrent15minTable=macTxDcnCurrent15minTable, macTxShelfConnectionHistorical1dayTimeStamp=macTxShelfConnectionHistorical1dayTimeStamp, pcs4FacilityCurrent15minES=pcs4FacilityCurrent15minES, otuFacilityHistorical1dayTable=otuFacilityHistorical1dayTable, pcs3FacilityHistorical1dayCVDE=pcs3FacilityHistorical1dayCVDE, dgdFacilityHistorical15minTimeStamp=dgdFacilityHistorical15minTimeStamp, frRcv4FacilityHistorical15minGoodFrames=frRcv4FacilityHistorical15minGoodFrames, skewFacilityHistorical1dayTimeStamp=skewFacilityHistorical1dayTimeStamp, oscOptOptMuxHistorical15minTimeStamp=oscOptOptMuxHistorical15minTimeStamp, lbcnDcnHistorical15minHigh=lbcnDcnHistorical15minHigh, frRcv3FacilityHistorical1dayMulticastFramesRcv=frRcv3FacilityHistorical1dayMulticastFramesRcv, frRcv3FacilityHistorical15minBytes=frRcv3FacilityHistorical15minBytes, optMuxPhysInstValueLaserBiasCurrentLevel=optMuxPhysInstValueLaserBiasCurrentLevel, lFacilityHistorical1dayCV=lFacilityHistorical1dayCV, byteTrmtFacilityHistorical15minCrcFramesEgress=byteTrmtFacilityHistorical15minCrcFramesEgress, rndTrpDlyFacilityHistorical15minValidFlag=rndTrpDlyFacilityHistorical15minValidFlag, skewFacilityHistorical1dayEntry=skewFacilityHistorical1dayEntry, pcs2FacilityHistorical1dayCV=pcs2FacilityHistorical1dayCV, lFacilityHistorical15minEntry=lFacilityHistorical15minEntry, frRcv2ShelfConnectionHistorical15minGoodFrames=frRcv2ShelfConnectionHistorical15minGoodFrames, ampEqptHistorical1weekTable=ampEqptHistorical1weekTable, frRcv2DcnHistorical15minGoodFrames=frRcv2DcnHistorical15minGoodFrames, endOfGfpfrFacilityCurrent15minTable=endOfGfpfrFacilityCurrent15minTable, tcmAFacilityHistorical15minTimeStamp=tcmAFacilityHistorical15minTimeStamp, endOfLldpTLVFacilityHistorical1dayTable=endOfLldpTLVFacilityHistorical1dayTable, endOfOscGainOptMuxHistorical15minTable=endOfOscGainOptMuxHistorical15minTable, macTxShelfConnectionCurrent15minBroadcastFramesTrmt=macTxShelfConnectionCurrent15minBroadcastFramesTrmt, frRcv3FacilityCurrent15minControlFrameRcv=frRcv3FacilityCurrent15minControlFrameRcv, frRcv3FacilityCurrent1dayBytesFrames128Rcv=frRcv3FacilityCurrent1dayBytesFrames128Rcv, attrmtOptMuxHistorical1dayTable=attrmtOptMuxHistorical1dayTable, pmDcnPhysThreshold=pmDcnPhysThreshold, oduFacilityHistorical1dayEntry=oduFacilityHistorical1dayEntry, tcmCFacilityCurrent1dayBbe=tcmCFacilityCurrent1dayBbe, gfpfrFacilityHistorical15minValidFlag=gfpfrFacilityHistorical15minValidFlag, macErrRxDcnHistorical1dayOversizedFramesRcv=macErrRxDcnHistorical1dayOversizedFramesRcv, discsBlockFacilityHistorical1dayDiscardedSuperblocks=discsBlockFacilityHistorical1dayDiscardedSuperblocks, endOfL2PortRxFacilityCurrent15minTable=endOfL2PortRxFacilityCurrent15minTable, optMuxPhysInstValuePumpLaserBiasCurrent1=optMuxPhysInstValuePumpLaserBiasCurrent1, macRxDcnCurrent1dayTable=macRxDcnCurrent1dayTable, attrmtOptMuxHistorical15minEntry=attrmtOptMuxHistorical15minEntry, pcs1FacilityHistorical15minTimeStamp=pcs1FacilityHistorical15minTimeStamp, macIcTxShelfConnectionCurrent15minEntry=macIcTxShelfConnectionCurrent15minEntry, otuFecFacilityCurrent1dayES=otuFecFacilityCurrent1dayES, pcs1FacilityHistorical1dayValidFlag=pcs1FacilityHistorical1dayValidFlag, rsFacilityHistorical15minTable=rsFacilityHistorical15minTable, endOfFrRcv2DcnHistorical15minTable=endOfFrRcv2DcnHistorical15minTable, cfotFacilityHistorical15minNumber=cfotFacilityHistorical15minNumber, estSigGainOptMuxHistorical1dayTable=estSigGainOptMuxHistorical1dayTable, frRcv3FacilityHistorical15minControlFrameRcv=frRcv3FacilityHistorical15minControlFrameRcv, estSigGainOptMuxHistorical15minNumber=estSigGainOptMuxHistorical15minNumber, utlRxFacilityHistorical15minEntry=utlRxFacilityHistorical15minEntry, lldpTLVTxFacilityHistorical1dayTLVTxUnknown=lldpTLVTxFacilityHistorical1dayTLVTxUnknown, optDcnHistorical1weekEntry=optDcnHistorical1weekEntry, facilityDataThresholdESTcmaHT15min=facilityDataThresholdESTcmaHT15min, frTrmt2FacilityHistorical1dayValidFlag=frTrmt2FacilityHistorical1dayValidFlag, lbcnDcnHistorical15minValidFlag=lbcnDcnHistorical15minValidFlag, pcs4FacilityHistorical15minES=pcs4FacilityHistorical15minES, oprDcnHistorical1weekMean=oprDcnHistorical1weekMean, macTxDcnHistorical15minMulticastFramesTrmt=macTxDcnHistorical15minMulticastFramesTrmt, muxFacilityCurrent15minElapsedTime=muxFacilityCurrent15minElapsedTime, msFacilityHistorical1dayES=msFacilityHistorical1dayES, facilityDataThresholdESFecHT1day=facilityDataThresholdESFecHT1day, optMuxPhysThresholdAttRxLow=optMuxPhysThresholdAttRxLow, frTrmt2FacilityHistorical15minValidFlag=frTrmt2FacilityHistorical15minValidFlag, facilityDataThresholdBBETcmcHT15min=facilityDataThresholdBBETcmcHT15min, l2PortTxFacilityHistorical15minBytesFrames256Trmt=l2PortTxFacilityHistorical15minBytesFrames256Trmt, cdcFacilityHistorical15minTimeStamp=cdcFacilityHistorical15minTimeStamp, lldpFrameRxFacilityHistorical1dayEntry=lldpFrameRxFacilityHistorical1dayEntry, endOfMacSzRxDcnCurrent15minTable=endOfMacSzRxDcnCurrent15minTable, optMuxPhysInstValueEffectiveGainCtoN=optMuxPhysInstValueEffectiveGainCtoN, cfotFacilityHistorical15minLow=cfotFacilityHistorical15minLow, otuFacilityHistorical15minES=otuFacilityHistorical15minES, pcs2FacilityHistorical1dayEntry=pcs2FacilityHistorical1dayEntry, eqptPhysThresholdTable=eqptPhysThresholdTable, endOfChecfrFacilityCurrent15minTable=endOfChecfrFacilityCurrent15minTable, pcs2FacilityHistorical1dayES=pcs2FacilityHistorical1dayES, macErrRxShelfConnectionHistorical1dayUndersizedFramesRcv=macErrRxShelfConnectionHistorical1dayUndersizedFramesRcv, macTxShelfConnectionCurrent1dayMulticastFramesTrmt=macTxShelfConnectionCurrent1dayMulticastFramesTrmt, dcnPhysThresholdAttRcvLow=dcnPhysThresholdAttRcvLow, l2PortRxFacilityCurrent15minUndersizedFramesRcv=l2PortRxFacilityCurrent15minUndersizedFramesRcv, macRxDcnCurrent15minOctRcv=macRxDcnCurrent15minOctRcv, estSigGainOptMuxHistorical15minValidFlag=estSigGainOptMuxHistorical15minValidFlag, endOfMacRxShelfConnectionHistorical15minTable=endOfMacRxShelfConnectionHistorical15minTable, facilityDataThresholdEntry=facilityDataThresholdEntry, pcs1FacilityCurrent15minCV=pcs1FacilityCurrent15minCV, endOfPmFacilityDataRecord=endOfPmFacilityDataRecord, macErrRxDcnCurrent1dayCrcErrorsRcv=macErrRxDcnCurrent1dayCrcErrorsRcv, brOptMuxHistorical15minValidFlag=brOptMuxHistorical15minValidFlag, l2PortRxFacilityHistorical1dayBytesRcv=l2PortRxFacilityHistorical1dayBytesRcv, voltInpEqptHistorical1dayEntry=voltInpEqptHistorical1dayEntry, tcmAFacilityCurrent1dayES=tcmAFacilityCurrent1dayES, optMuxPhysThresholdPumpLaser4TempLowThres=optMuxPhysThresholdPumpLaser4TempLowThres, msFacilityCurrent15minBBE=msFacilityCurrent15minBBE, macRxShelfConnectionCurrent15minBroadcastFramesRcv=macRxShelfConnectionCurrent15minBroadcastFramesRcv, macTxShelfConnectionCurrent15minFramesTrmt=macTxShelfConnectionCurrent15minFramesTrmt, l2PortRxFacilityHistorical1dayCrcErrorsRcv=l2PortRxFacilityHistorical1dayCrcErrorsRcv, endOfFrRcv2FacilityCurrent15minTable=endOfFrRcv2FacilityCurrent15minTable, macRxDcnHistorical15minGoodFrames=macRxDcnHistorical15minGoodFrames, lldpFrameFacilityHistorical1dayTable=lldpFrameFacilityHistorical1dayTable, sarLinkRcvFacilityCurrent1dayEntry=sarLinkRcvFacilityCurrent1dayEntry, muxFacilityHistorical15minEntry=muxFacilityHistorical15minEntry, otuFecFacilityHistorical15minTable=otuFecFacilityHistorical15minTable, endOfOtuFecFacilityCurrent15minTable=endOfOtuFecFacilityCurrent15minTable, otuFecFacilityHistorical15minES=otuFecFacilityHistorical15minES, skewFacilityHistorical15minLow=skewFacilityHistorical15minLow, optFacilityHistorical15minLow=optFacilityHistorical15minLow, rsFacilityCurrent1dayOOFS=rsFacilityCurrent1dayOOFS, endOfDsFacilityCurrent1dayTable=endOfDsFacilityCurrent1dayTable, byteTrmtFacilityCurrent15minTable=byteTrmtFacilityCurrent15minTable, endOfEstSigGainOptMuxHistorical15minTable=endOfEstSigGainOptMuxHistorical15minTable, lbcnDcnHistorical15minTable=lbcnDcnHistorical15minTable, frRcv3FacilityHistorical15minBytesFrames1519Rcv=frRcv3FacilityHistorical15minBytesFrames1519Rcv, dsFacilityCurrent1dayDS=dsFacilityCurrent1dayDS, optOptMuxHistorical15minValidFlag=optOptMuxHistorical15minValidFlag, sarLinkTrmtFacilityCurrent1daySES=sarLinkTrmtFacilityCurrent1daySES, lbcnDcnHistorical1dayEntry=lbcnDcnHistorical1dayEntry, estSigGainOptMuxHistorical15minLow=estSigGainOptMuxHistorical15minLow, rsFacilityHistorical1daySEFS=rsFacilityHistorical1daySEFS, discsBlockFacilityHistorical1dayTable=discsBlockFacilityHistorical1dayTable, facilityPhysThresholdSignalToNoiseRatioLow=facilityPhysThresholdSignalToNoiseRatioLow, latencyFacilityHistorical15minEntry=latencyFacilityHistorical15minEntry, endOfFrRcv2ShelfConnectionCurrent15minTable=endOfFrRcv2ShelfConnectionCurrent15minTable, utlRxFacilityHistorical1dayEntry=utlRxFacilityHistorical1dayEntry, lldpFrameFacilityHistorical15minFrameTxErrors=lldpFrameFacilityHistorical15minFrameTxErrors, tcmBFacilityHistorical1dayValidFlag=tcmBFacilityHistorical1dayValidFlag, snrFacilityHistorical15minLow=snrFacilityHistorical15minLow, gfpfrFacilityHistorical15minCHecDiscardedFrames=gfpfrFacilityHistorical15minCHecDiscardedFrames, pcsTxFacilityHistorical1dayCVTX=pcsTxFacilityHistorical1dayCVTX, cdcFacilityHistorical1weekTable=cdcFacilityHistorical1weekTable, pcs2FacilityHistorical1dayDE=pcs2FacilityHistorical1dayDE, muxFacilityHistorical15minES=muxFacilityHistorical15minES, lldpTLVTxFacilityCurrent15minElapsedTime=lldpTLVTxFacilityCurrent15minElapsedTime, oscGainOptMuxHistorical15minHigh=oscGainOptMuxHistorical15minHigh, brTxOptMuxHistorical15minTimeStamp=brTxOptMuxHistorical15minTimeStamp, lbcnDcnHistorical15minEntry=lbcnDcnHistorical15minEntry, brTxOptMuxHistorical15minNumber=brTxOptMuxHistorical15minNumber, pcs4FacilityHistorical1dayEntry=pcs4FacilityHistorical1dayEntry, checfrFacilityHistorical1dayTypeHecDiscardedFrames=checfrFacilityHistorical1dayTypeHecDiscardedFrames, endOfSnrFacilityHistorical1weekTable=endOfSnrFacilityHistorical1weekTable, macIcRxShelfConnectionHistorical15minGoodFrames=macIcRxShelfConnectionHistorical15minGoodFrames, cdFacilityHistorical1dayTimeStamp=cdFacilityHistorical1dayTimeStamp, endOfOtuFacilityHistorical1dayTable=endOfOtuFacilityHistorical1dayTable, utlTxFacilityCurrent15minTable=utlTxFacilityCurrent15minTable, macSzRxDcnCurrent1dayBytesFrames256Rcv=macSzRxDcnCurrent1dayBytesFrames256Rcv, endOfLFacilityCurrent15minTable=endOfLFacilityCurrent15minTable, endOfOptOptMuxHistorical15minTable=endOfOptOptMuxHistorical15minTable, oduFacilityCurrent1dayUAS=oduFacilityCurrent1dayUAS, gfpfrFacilityHistorical1dayTimeStamp=gfpfrFacilityHistorical1dayTimeStamp, optFacilityHistorical1dayNumber=optFacilityHistorical1dayNumber, oscPwrOptMuxHistorical1dayLow=oscPwrOptMuxHistorical1dayLow, lldpTLVRxFacilityCurrent15minTLVRxUnknown=lldpTLVRxFacilityCurrent15minTLVRxUnknown, atrcvDcnHistorical15minNumber=atrcvDcnHistorical15minNumber, tcmCFacilityHistorical15minTable=tcmCFacilityHistorical15minTable, macSzRxShelfConnectionHistorical15minBytesFrames65Rcv=macSzRxShelfConnectionHistorical15minBytesFrames65Rcv, lldpFrameFacilityCurrent15minLLDPFrameDiscards=lldpFrameFacilityCurrent15minLLDPFrameDiscards, frRcv4FacilityCurrent1dayCrcFrames=frRcv4FacilityCurrent1dayCrcFrames, pumpPwrOptMuxHistorical15minValidFlag=pumpPwrOptMuxHistorical15minValidFlag, oscOptOptMuxHistorical1dayMean=oscOptOptMuxHistorical1dayMean, latencyFacilityHistorical15minNumber=latencyFacilityHistorical15minNumber, brOptMuxHistorical1weekTimeStamp=brOptMuxHistorical1weekTimeStamp, endOfPmFacilityPhysThreshold=endOfPmFacilityPhysThreshold, voltInpEqptHistorical1dayMean=voltInpEqptHistorical1dayMean, pcs3FacilityHistorical1dayEntry=pcs3FacilityHistorical1dayEntry, optMuxPhysThresholdPumpLaser2TempHighThres=optMuxPhysThresholdPumpLaser2TempHighThres, oscPwrOptMuxHistorical1weekNumber=oscPwrOptMuxHistorical1weekNumber, frRcv2FacilityHistorical1dayValidFlag=frRcv2FacilityHistorical1dayValidFlag, cdFacilityHistorical15minMean=cdFacilityHistorical15minMean, oprOptMuxHistorical1weekValidFlag=oprOptMuxHistorical1weekValidFlag, facilityPhysInstValueCalculatedTotalPower=facilityPhysInstValueCalculatedTotalPower, cdcFacilityHistorical1weekLow=cdcFacilityHistorical1weekLow, frTrmt2FacilityHistorical15minTimeStamp=frTrmt2FacilityHistorical15minTimeStamp, voltInpEqptHistorical15minTimeStamp=voltInpEqptHistorical15minTimeStamp, dcnPhysInstValueAtRcv=dcnPhysInstValueAtRcv, pcs2FacilityCurrent1dayES=pcs2FacilityCurrent1dayES, endOfLldpTLVTxFacilityHistorical1dayTable=endOfLldpTLVTxFacilityHistorical1dayTable, rndTrpDlyFacilityHistorical15minLow=rndTrpDlyFacilityHistorical15minLow, sarLinkRcvFacilityHistorical1dayTimeStamp=sarLinkRcvFacilityHistorical1dayTimeStamp, utlTxFacilityCurrent15minEntry=utlTxFacilityCurrent15minEntry, lldpTLVRxFacilityHistorical1dayNumber=lldpTLVRxFacilityHistorical1dayNumber, gfpfrFacilityHistorical15minGoodFrames=gfpfrFacilityHistorical15minGoodFrames, sFacilityHistorical15minValidFlag=sFacilityHistorical15minValidFlag, optMuxPhysInstValueOscOutputPower=optMuxPhysInstValueOscOutputPower, endOfPmEqptPhysRecord=endOfPmEqptPhysRecord, voltInpEqptHistorical15minLow=voltInpEqptHistorical15minLow, macSzRxDcnHistorical15minValidFlag=macSzRxDcnHistorical15minValidFlag)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", frTrmt2FacilityCurrent1dayGoodFramesx=frTrmt2FacilityCurrent1dayGoodFramesx, fec2FacilityHistorical1dayCE=fec2FacilityHistorical1dayCE, attrmtOptMuxHistorical1weekNumber=attrmtOptMuxHistorical1weekNumber, frRcv3FacilityHistorical15minBytesFrames64Rcv=frRcv3FacilityHistorical15minBytesFrames64Rcv, rsFacilityCurrent15minEntry=rsFacilityCurrent15minEntry, attrmtOptMuxHistorical1weekMean=attrmtOptMuxHistorical1weekMean, macRxDcnHistorical15minValidFlag=macRxDcnHistorical15minValidFlag, macIcRxShelfConnectionHistorical1dayTable=macIcRxShelfConnectionHistorical1dayTable, checfrFacilityCurrent15minCoreHecCorrectedFrames=checfrFacilityCurrent15minCoreHecCorrectedFrames, endOfAtrcvDcnHistorical1dayTable=endOfAtrcvDcnHistorical1dayTable, attrmtOptMuxHistorical1weekHigh=attrmtOptMuxHistorical1weekHigh, oduFacilityHistorical15minEntry=oduFacilityHistorical15minEntry, macErrRxShelfConnectionCurrent15minTable=macErrRxShelfConnectionCurrent15minTable, endOfUtlTxFacilityCurrent1dayTable=endOfUtlTxFacilityCurrent1dayTable, fecFacilityHistorical15minTimeStamp=fecFacilityHistorical15minTimeStamp, endOfFrRcv3FacilityHistorical1dayTable=endOfFrRcv3FacilityHistorical1dayTable, endOfMacRxDcnHistorical1dayTable=endOfMacRxDcnHistorical1dayTable, l2PortTxFacilityHistorical15minNumber=l2PortTxFacilityHistorical15minNumber, macSzRxShelfConnectionHistorical1dayEntry=macSzRxShelfConnectionHistorical1dayEntry, facilityDataThresholdSESTcmcHT15min=facilityDataThresholdSESTcmcHT15min, sarLinkTrmtFacilityHistorical15minTable=sarLinkTrmtFacilityHistorical15minTable, estSigGainOptMuxHistorical1dayLow=estSigGainOptMuxHistorical1dayLow, lbcnFacilityHistorical15minMean=lbcnFacilityHistorical15minMean, tcmAFacilityHistorical15minBbe=tcmAFacilityHistorical15minBbe, atRcvOptMuxHistorical15minValidFlag=atRcvOptMuxHistorical15minValidFlag, macTxDcnHistorical15minBroadcastFramesTrmt=macTxDcnHistorical15minBroadcastFramesTrmt, pmTerminPointPhysValue=pmTerminPointPhysValue, facilityDataInstValueUtilizationTx=facilityDataInstValueUtilizationTx, dsFacilityHistorical15minNumber=dsFacilityHistorical15minNumber, discsBlockFacilityCurrent1dayDiscardedSuperblocks=discsBlockFacilityCurrent1dayDiscardedSuperblocks, sarLinkRcvFacilityCurrent1dayES=sarLinkRcvFacilityCurrent1dayES, facilityPhysInstValueTable=facilityPhysInstValueTable, cdcFacilityHistorical1weekNumber=cdcFacilityHistorical1weekNumber, pmDcnDataRecord=pmDcnDataRecord, sarLinkRcvFacilityCurrent15minTable=sarLinkRcvFacilityCurrent15minTable, skewFacilityHistorical1dayHigh=skewFacilityHistorical1dayHigh, macRxDcnHistorical1dayTimeStamp=macRxDcnHistorical1dayTimeStamp, lbcnFacilityHistorical15minTimeStamp=lbcnFacilityHistorical15minTimeStamp, skewFacilityHistorical1weekLow=skewFacilityHistorical1weekLow, frRcv2DcnHistorical1dayTimeStamp=frRcv2DcnHistorical1dayTimeStamp, l2PortRxFacilityHistorical15minBytesFrames128Rcv=l2PortRxFacilityHistorical15minBytesFrames128Rcv, pcs3FacilityHistorical1dayNumber=pcs3FacilityHistorical1dayNumber, fec2FacilityHistorical15minEntry=fec2FacilityHistorical15minEntry, dgdFacilityHistorical1weekHigh=dgdFacilityHistorical1weekHigh, lFacilityCurrent15minElapsedTime=lFacilityCurrent15minElapsedTime, tcmAFacilityHistorical15minEntry=tcmAFacilityHistorical15minEntry, frRcv4FacilityCurrent15minGoodFrames=frRcv4FacilityCurrent15minGoodFrames, checfrFacilityHistorical1dayCoreHecCorrectedFrames=checfrFacilityHistorical1dayCoreHecCorrectedFrames, frRcv3FacilityCurrent1dayOversizedFramesRcv=frRcv3FacilityCurrent1dayOversizedFramesRcv, oscPwrOptMuxHistorical1weekTable=oscPwrOptMuxHistorical1weekTable, muxFacilityCurrent1dayES=muxFacilityCurrent1dayES, pcsTxFacilityCurrent1dayElapsedTime=pcsTxFacilityCurrent1dayElapsedTime, skewFacilityHistorical15minEntry=skewFacilityHistorical15minEntry, l2PortRxFacilityHistorical15minBytesFrames65Rcv=l2PortRxFacilityHistorical15minBytesFrames65Rcv, otuFacilityHistorical15minUAS=otuFacilityHistorical15minUAS, skewFacilityHistorical1dayLow=skewFacilityHistorical1dayLow, macSzRxDcnCurrent1dayBytesFrames1024Rcv=macSzRxDcnCurrent1dayBytesFrames1024Rcv, voltInpEqptHistorical15minMean=voltInpEqptHistorical15minMean, macSzRxDcnHistorical1dayBytesFrames65Rcv=macSzRxDcnHistorical1dayBytesFrames65Rcv, l2PortRxFacilityHistorical15minCrcErrorsRcv=l2PortRxFacilityHistorical15minCrcErrorsRcv, atrcvDcnHistorical1dayLow=atrcvDcnHistorical1dayLow, macIcRxShelfConnectionHistorical15minOctRcv=macIcRxShelfConnectionHistorical15minOctRcv, optDcnHistorical1dayTimeStamp=optDcnHistorical1dayTimeStamp, byteTrmtFacilityHistorical1dayEntry=byteTrmtFacilityHistorical1dayEntry, discsBlockFacilityHistorical15minDiscardedSuperblocks=discsBlockFacilityHistorical15minDiscardedSuperblocks, endOfFec2FacilityCurrent1dayTable=endOfFec2FacilityCurrent1dayTable, frRcv3FacilityCurrent15minBytesFrames65Rcv=frRcv3FacilityCurrent15minBytesFrames65Rcv, latencyFacilityHistorical15minTable=latencyFacilityHistorical15minTable, fec2FacilityHistorical1dayBERCE=fec2FacilityHistorical1dayBERCE, macSzRxDcnHistorical15minBytesFrames64Rcv=macSzRxDcnHistorical15minBytesFrames64Rcv, tcmAFacilityCurrent15minSES=tcmAFacilityCurrent15minSES, lFacilityCurrent15minSES=lFacilityCurrent15minSES, frTrmt2FacilityCurrent1dayTable=frTrmt2FacilityCurrent1dayTable, lldpTLVTxFacilityCurrent1dayTLVTxDiscards=lldpTLVTxFacilityCurrent1dayTLVTxDiscards, oscPwrOptMuxHistorical1weekHigh=oscPwrOptMuxHistorical1weekHigh, utlTxFacilityHistorical1dayUtlLow=utlTxFacilityHistorical1dayUtlLow, l2PortTxFacilityHistorical15minBytesFrames64Trmt=l2PortTxFacilityHistorical15minBytesFrames64Trmt, dgdFacilityHistorical1dayLow=dgdFacilityHistorical1dayLow, pcsTxFacilityCurrent1dayEntry=pcsTxFacilityCurrent1dayEntry, pmFacilityDataRecord=pmFacilityDataRecord, endOfFacilityDataThresholdTable=endOfFacilityDataThresholdTable, atrcvDcnHistorical1dayNumber=atrcvDcnHistorical1dayNumber, endOfPcs2FacilityCurrent1dayTable=endOfPcs2FacilityCurrent1dayTable, optMuxPhysInstValueOutputPower=optMuxPhysInstValueOutputPower, lFacilityCurrent15minTable=lFacilityCurrent15minTable, ampInEqptHistorical1weekMean=ampInEqptHistorical1weekMean, facilityDataThresholdUASTcmcHT1day=facilityDataThresholdUASTcmcHT1day, pumpPwrOptMuxHistorical15minMean=pumpPwrOptMuxHistorical15minMean, latencyFacilityHistorical1dayEntry=latencyFacilityHistorical1dayEntry, pcsRxFacilityHistorical15minValidFlag=pcsRxFacilityHistorical15minValidFlag, macSzRxDcnCurrent1dayTable=macSzRxDcnCurrent1dayTable, lldpFrameFacilityCurrent1dayLLDPFrames=lldpFrameFacilityCurrent1dayLLDPFrames, endOfLbcnFacilityHistorical1weekTable=endOfLbcnFacilityHistorical1weekTable, cdcFacilityHistorical1dayTimeStamp=cdcFacilityHistorical1dayTimeStamp, tcmAFacilityCurrent1dayElapsedTime=tcmAFacilityCurrent1dayElapsedTime, ampEqptHistorical1dayMean=ampEqptHistorical1dayMean, tcmAFacilityCurrent15minUAS=tcmAFacilityCurrent15minUAS, oscPwrOptMuxHistorical1weekEntry=oscPwrOptMuxHistorical1weekEntry, macRxShelfConnectionCurrent15minOctRcv=macRxShelfConnectionCurrent15minOctRcv, l2PortRxFacilityCurrent1dayInterPackJunkBytesFramesRcv=l2PortRxFacilityCurrent1dayInterPackJunkBytesFramesRcv, oscOptOptMuxHistorical15minTable=oscOptOptMuxHistorical15minTable, oduFacilityHistorical15minUAS=oduFacilityHistorical15minUAS, pcs2FacilityCurrent1dayDE=pcs2FacilityCurrent1dayDE, endOfByteTrmtFacilityCurrent1dayTable=endOfByteTrmtFacilityCurrent1dayTable, endOfMacIcRxShelfConnectionCurrent15minTable=endOfMacIcRxShelfConnectionCurrent15minTable, lbcnDcnHistorical15minMean=lbcnDcnHistorical15minMean, sarLinkRcvFacilityCurrent1daySES=sarLinkRcvFacilityCurrent1daySES, latencyFacilityHistorical15minTimeStamp=latencyFacilityHistorical15minTimeStamp, optMuxPhysInstValueEffectiveGainRtoN=optMuxPhysInstValueEffectiveGainRtoN, frTrmt2FacilityCurrent1dayPauseFrames=frTrmt2FacilityCurrent1dayPauseFrames, atRcvOptMuxHistorical1weekTable=atRcvOptMuxHistorical1weekTable, byteTrmtFacilityCurrent1dayElapsedTime=byteTrmtFacilityCurrent1dayElapsedTime, oprOptMuxHistorical1weekNumber=oprOptMuxHistorical1weekNumber, endOfGfpfrFacilityCurrent1dayTable=endOfGfpfrFacilityCurrent1dayTable, endOfDcnPhysThresholdTable=endOfDcnPhysThresholdTable, cfotFacilityHistorical1dayMean=cfotFacilityHistorical1dayMean, frRcv2ShelfConnectionHistorical1dayEntry=frRcv2ShelfConnectionHistorical1dayEntry, l2PortRxFacilityCurrent15minTable=l2PortRxFacilityCurrent15minTable, rsFacilityHistorical15minES=rsFacilityHistorical15minES, facilityPhysThresholdChromaticDispersionHigh=facilityPhysThresholdChromaticDispersionHigh, oprFacilityHistorical1weekValidFlag=oprFacilityHistorical1weekValidFlag, tcmAFacilityHistorical1dayTable=tcmAFacilityHistorical1dayTable, endOfDsOptMuxCurrent1dayTable=endOfDsOptMuxCurrent1dayTable, l2PortRxFacilityHistorical15minNumber=l2PortRxFacilityHistorical15minNumber, pcsTxFacilityHistorical1dayEntry=pcsTxFacilityHistorical1dayEntry, pmOptMuxPhysThreshold=pmOptMuxPhysThreshold, brTxOptMuxHistorical1weekEntry=brTxOptMuxHistorical1weekEntry, macIcTxShelfConnectionHistorical1dayEntry=macIcTxShelfConnectionHistorical1dayEntry, optMuxPhysThresholdConfigurableOpticalOutputPwrLow=optMuxPhysThresholdConfigurableOpticalOutputPwrLow, macSzRxShelfConnectionCurrent1dayElapsedTime=macSzRxShelfConnectionCurrent1dayElapsedTime, optDcnHistorical1dayMean=optDcnHistorical1dayMean, frRcv1FacilityHistorical1dayTimeStamp=frRcv1FacilityHistorical1dayTimeStamp, optMuxPhysInstValueMidStageAttenuation=optMuxPhysInstValueMidStageAttenuation, facilityDataThresholdBBESHT15min=facilityDataThresholdBBESHT15min, tcmCFacilityCurrent15minTable=tcmCFacilityCurrent15minTable, l2PortTxFacilityHistorical1dayPauseFramesTrmt=l2PortTxFacilityHistorical1dayPauseFramesTrmt, endOfLldpTLVRxFacilityCurrent15minTable=endOfLldpTLVRxFacilityCurrent15minTable, frTrmt1FacilityHistorical15minEntry=frTrmt1FacilityHistorical15minEntry, cdcFacilityHistorical1dayEntry=cdcFacilityHistorical1dayEntry, sFacilityCurrent1dayCV=sFacilityCurrent1dayCV, byteTrmtFacilityHistorical1dayBytesTrmt=byteTrmtFacilityHistorical1dayBytesTrmt, endOfOscOptOptMuxHistorical1dayTable=endOfOscOptOptMuxHistorical1dayTable, facilityPhysInstValueQualityFactor=facilityPhysInstValueQualityFactor, pmTerminPointPhysThreshold=pmTerminPointPhysThreshold, facilityDataThresholdSESFecHT1day=facilityDataThresholdSESFecHT1day, endOfSFacilityHistorical1dayTable=endOfSFacilityHistorical1dayTable, frRcv4FacilityHistorical1dayEntry=frRcv4FacilityHistorical1dayEntry, l2PortRxFacilityHistorical15minBytesFrames1519Rcv=l2PortRxFacilityHistorical15minBytesFrames1519Rcv, optDcnHistorical15minValidFlag=optDcnHistorical15minValidFlag, frTrmt1FacilityHistorical15minGoodFramesx=frTrmt1FacilityHistorical15minGoodFramesx, byteTrmtFacilityHistorical1dayValidFlag=byteTrmtFacilityHistorical1dayValidFlag, checfrFacilityCurrent1dayTable=checfrFacilityCurrent1dayTable, endOfMacTxShelfConnectionHistorical1dayTable=endOfMacTxShelfConnectionHistorical1dayTable, frRcv3FacilityHistorical1dayTable=frRcv3FacilityHistorical1dayTable, attrmtOptMuxHistorical15minMean=attrmtOptMuxHistorical15minMean, l2PortRxFacilityHistorical15minPauseFramesRcv=l2PortRxFacilityHistorical15minPauseFramesRcv, facilityDataThresholdSESTcmaHT15min=facilityDataThresholdSESTcmaHT15min, cdcFacilityHistorical15minValidFlag=cdcFacilityHistorical15minValidFlag, frRcv2ShelfConnectionHistorical15minBytes=frRcv2ShelfConnectionHistorical15minBytes, frRcv2DcnCurrent1dayGoodFrames=frRcv2DcnCurrent1dayGoodFrames, latencyFacilityHistorical1dayTimeStamp=latencyFacilityHistorical1dayTimeStamp, fecFacilityHistorical1dayNumber=fecFacilityHistorical1dayNumber, frRcv3FacilityCurrent15minBytesFrames256Rcv=frRcv3FacilityCurrent15minBytesFrames256Rcv, macRxShelfConnectionHistorical1dayMulticastFramesRcv=macRxShelfConnectionHistorical1dayMulticastFramesRcv, facilityPhysThresholdLaserTempLowThres=facilityPhysThresholdLaserTempLowThres, facilityDataThresholdSESSHT1day=facilityDataThresholdSESSHT1day, pcsRxFacilityHistorical1dayES=pcsRxFacilityHistorical1dayES, macTxDcnCurrent15minFramesTrmt=macTxDcnCurrent15minFramesTrmt, endOfSkewFacilityHistorical15minTable=endOfSkewFacilityHistorical15minTable, latencyFacilityHistorical15minHigh=latencyFacilityHistorical15minHigh, optDcnHistorical1weekHigh=optDcnHistorical1weekHigh, rsFacilityCurrent15minElapsedTime=rsFacilityCurrent15minElapsedTime, optDcnHistorical1weekLow=optDcnHistorical1weekLow, lldpTLVTxFacilityCurrent1dayTLVTxUnknown=lldpTLVTxFacilityCurrent1dayTLVTxUnknown, macRxShelfConnectionCurrent15minGoodFrames=macRxShelfConnectionCurrent15minGoodFrames, msFacilityHistorical1dayTable=msFacilityHistorical1dayTable, cfotFacilityHistorical1weekHigh=cfotFacilityHistorical1weekHigh, frTrmt1FacilityCurrent1dayTable=frTrmt1FacilityCurrent1dayTable, facilityPhysThresholdTable=facilityPhysThresholdTable, macRxShelfConnectionHistorical1dayTimeStamp=macRxShelfConnectionHistorical1dayTimeStamp, endOfMsFacilityCurrent1dayTable=endOfMsFacilityCurrent1dayTable, endOfL2ProtTxFacilityCurrent15minTable=endOfL2ProtTxFacilityCurrent15minTable, byteTrmtFacilityHistorical15minValidFlag=byteTrmtFacilityHistorical15minValidFlag, optMuxPhysThresholdBrPwrReceivedHighThres=optMuxPhysThresholdBrPwrReceivedHighThres, lldpTLVFacilityHistorical15minTimeStamp=lldpTLVFacilityHistorical15minTimeStamp, facilityDataThresholdUASTcmcHT15min=facilityDataThresholdUASTcmcHT15min, l2PortRxFacilityCurrent1dayBytesFrames128Rcv=l2PortRxFacilityCurrent1dayBytesFrames128Rcv, macRxDcnHistorical1dayBroadcastFramesRcv=macRxDcnHistorical1dayBroadcastFramesRcv, endOfL2PortRxFacilityHistorical15minTable=endOfL2PortRxFacilityHistorical15minTable, frRcv3FacilityCurrent1dayTable=frRcv3FacilityCurrent1dayTable, frRcv2ShelfConnectionCurrent1dayElapsedTime=frRcv2ShelfConnectionCurrent1dayElapsedTime, optDcnHistorical1dayEntry=optDcnHistorical1dayEntry, tcmAFacilityCurrent1daySES=tcmAFacilityCurrent1daySES, macTxShelfConnectionCurrent1dayEntry=macTxShelfConnectionCurrent1dayEntry, pcs2FacilityHistorical15minTable=pcs2FacilityHistorical15minTable, frRcv3FacilityHistorical1dayBroadcastFramesRcv=frRcv3FacilityHistorical1dayBroadcastFramesRcv, frRcv3FacilityCurrent1dayControlFrameRcv=frRcv3FacilityCurrent1dayControlFrameRcv, macErrRxDcnHistorical15minCrcErrorsRcv=macErrRxDcnHistorical15minCrcErrorsRcv, endOfLldpFrameFacilityCurrent1dayTable=endOfLldpFrameFacilityCurrent1dayTable, oscGainOptMuxHistorical1dayEntry=oscGainOptMuxHistorical1dayEntry, frRcv2ShelfConnectionHistorical15minPauseFrames=frRcv2ShelfConnectionHistorical15minPauseFrames, snrFacilityHistorical1weekEntry=snrFacilityHistorical1weekEntry, sFacilityCurrent15minCV=sFacilityCurrent15minCV, attrmtOptMuxHistorical15minTable=attrmtOptMuxHistorical15minTable, frRcv3FacilityCurrent15minElapsedTime=frRcv3FacilityCurrent15minElapsedTime, snrFacilityHistorical1weekTable=snrFacilityHistorical1weekTable, snrFacilityHistorical1weekLow=snrFacilityHistorical1weekLow, oprOptMuxHistorical1dayTable=oprOptMuxHistorical1dayTable, endOfCdFacilityHistorical1dayTable=endOfCdFacilityHistorical1dayTable, endOfPmOptMuxDataRecord=endOfPmOptMuxDataRecord, l2PortTxFacilityHistorical15minTimeStamp=l2PortTxFacilityHistorical15minTimeStamp, endOfMacIcTxShelfConnectionCurrent1dayTable=endOfMacIcTxShelfConnectionCurrent1dayTable, terminPointPhysInstValueTable=terminPointPhysInstValueTable, ampInEqptHistorical1weekTimeStamp=ampInEqptHistorical1weekTimeStamp, byteTrmtFacilityCurrent15minFramesTrmt=byteTrmtFacilityCurrent15minFramesTrmt, oprDcnHistorical15minValidFlag=oprDcnHistorical15minValidFlag, tcmCFacilityCurrent15minEntry=tcmCFacilityCurrent15minEntry, l2PortRxFacilityHistorical1dayMulticastFramesRcv=l2PortRxFacilityHistorical1dayMulticastFramesRcv, utlRxFacilityHistorical1dayValidFlag=utlRxFacilityHistorical1dayValidFlag, cdFacilityHistorical1weekTimeStamp=cdFacilityHistorical1weekTimeStamp, otuFacilityCurrent1dayEntry=otuFacilityCurrent1dayEntry, frRcv1FacilityHistorical15minBytes=frRcv1FacilityHistorical15minBytes, pcs1FacilityCurrent1dayCV=pcs1FacilityCurrent1dayCV, macIcRxShelfConnectionCurrent15minElapsedTime=macIcRxShelfConnectionCurrent15minElapsedTime, pcs2FacilityHistorical15minNumber=pcs2FacilityHistorical15minNumber, endOfFec2FacilityHistorical15minTable=endOfFec2FacilityHistorical15minTable, lldpTLVFacilityHistorical1dayTLVDiscards=lldpTLVFacilityHistorical1dayTLVDiscards, optFacilityHistorical1weekLow=optFacilityHistorical1weekLow, oprDcnHistorical1weekTable=oprDcnHistorical1weekTable, dcnPhysThresholdOprLow=dcnPhysThresholdOprLow, brTxOptMuxHistorical1weekTable=brTxOptMuxHistorical1weekTable, lldpTLVTxFacilityCurrent15minTLVTxUnknown=lldpTLVTxFacilityCurrent15minTLVTxUnknown, l2PortRxFacilityCurrent15minBytesFrames512Rcv=l2PortRxFacilityCurrent15minBytesFrames512Rcv, pcs4FacilityHistorical1dayCV=pcs4FacilityHistorical1dayCV, endOfPcs4FacilityCurrent1dayTable=endOfPcs4FacilityCurrent1dayTable, tcmCFacilityCurrent1daySES=tcmCFacilityCurrent1daySES, lbcnFacilityHistorical1weekValidFlag=lbcnFacilityHistorical1weekValidFlag, endOfLatencyFacilityHistorical1weekTable=endOfLatencyFacilityHistorical1weekTable, pcsTxFacilityHistorical1dayTable=pcsTxFacilityHistorical1dayTable, oprFacilityHistorical1weekNumber=oprFacilityHistorical1weekNumber, frRcv3FacilityHistorical1dayPauseFrames=frRcv3FacilityHistorical1dayPauseFrames, dgdFacilityHistorical1weekTable=dgdFacilityHistorical1weekTable, tcmBFacilityCurrent1dayElapsedTime=tcmBFacilityCurrent1dayElapsedTime, utlRxFacilityCurrent15minUtlLow=utlRxFacilityCurrent15minUtlLow, lldpFrameFacilityHistorical15minLLDPFrameDiscards=lldpFrameFacilityHistorical15minLLDPFrameDiscards, endOfOtuFacilityCurrent1dayTable=endOfOtuFacilityCurrent1dayTable, rndTrpDlyFacilityHistorical1weekValidFlag=rndTrpDlyFacilityHistorical1weekValidFlag, frRcv3FacilityCurrent15minBroadcastFramesRcv=frRcv3FacilityCurrent15minBroadcastFramesRcv, macRxDcnHistorical1dayTable=macRxDcnHistorical1dayTable, frTrmt2FacilityCurrent15minGoodFramesx=frTrmt2FacilityCurrent15minGoodFramesx, skewFacilityHistorical1weekHigh=skewFacilityHistorical1weekHigh, macSzRxDcnHistorical1dayValidFlag=macSzRxDcnHistorical1dayValidFlag, dcnPhysThresholdOptLow=dcnPhysThresholdOptLow, macSzRxShelfConnectionHistorical15minEntry=macSzRxShelfConnectionHistorical15minEntry)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", facilityDataThresholdBBELHT1day=facilityDataThresholdBBELHT1day, frRcv2DcnCurrent1dayBytes=frRcv2DcnCurrent1dayBytes, endOfTcmAFacilityCurrent1dayTable=endOfTcmAFacilityCurrent1dayTable, frRcv1FacilityCurrent1dayTable=frRcv1FacilityCurrent1dayTable, fec2FacilityHistorical1dayNumber=fec2FacilityHistorical1dayNumber, skewFacilityHistorical1weekTimeStamp=skewFacilityHistorical1weekTimeStamp, endOfLbcnFacilityHistorical15minTable=endOfLbcnFacilityHistorical15minTable, pmEqptData=pmEqptData, sFacilityHistorical1dayTable=sFacilityHistorical1dayTable, endOfUtlRxFacilityCurrent1dayTable=endOfUtlRxFacilityCurrent1dayTable, optOptMuxHistorical1weekMean=optOptMuxHistorical1weekMean, macIcTxShelfConnectionHistorical15minFramesTrmt=macIcTxShelfConnectionHistorical15minFramesTrmt, otuFecFacilityHistorical15minUBE=otuFecFacilityHistorical15minUBE, sarLinkRcvFacilityHistorical15minES=sarLinkRcvFacilityHistorical15minES, pcs4FacilityCurrent1dayTable=pcs4FacilityCurrent1dayTable, atRcvOptMuxHistorical15minTable=atRcvOptMuxHistorical15minTable, muxFacilityHistorical15minSES=muxFacilityHistorical15minSES, optMuxPhysThresholdPumpLaser2TempLowThres=optMuxPhysThresholdPumpLaser2TempLowThres, endOfLldpTLVTxFacilityCurrent1dayTable=endOfLldpTLVTxFacilityCurrent1dayTable, frRcv3FacilityCurrent1dayBytesFrames1519Rcv=frRcv3FacilityCurrent1dayBytesFrames1519Rcv, eqptPhysThresholdLaserTempHighThres=eqptPhysThresholdLaserTempHighThres, optMuxPhysThresholdOpticalOutputPwrHigh=optMuxPhysThresholdOpticalOutputPwrHigh, dsFacilityCurrent1dayElapsedTime=dsFacilityCurrent1dayElapsedTime, frRcv2FacilityHistorical1dayCrcFrames=frRcv2FacilityHistorical1dayCrcFrames, skewFacilityHistorical1dayTable=skewFacilityHistorical1dayTable, pumpPwrOptMuxHistorical15minTimeStamp=pumpPwrOptMuxHistorical15minTimeStamp, estSigGainOptMuxHistorical15minMean=estSigGainOptMuxHistorical15minMean, frRcv4FacilityHistorical15minTimeStamp=frRcv4FacilityHistorical15minTimeStamp, frRcv2ShelfConnectionHistorical1dayGoodFrames=frRcv2ShelfConnectionHistorical1dayGoodFrames, sarLinkRcvFacilityHistorical1dayValidFlag=sarLinkRcvFacilityHistorical1dayValidFlag, tcmCFacilityHistorical1dayTable=tcmCFacilityHistorical1dayTable, dsOptMuxCurrent15minDS=dsOptMuxCurrent15minDS, endOfBrTxOptMuxHistorical15minTable=endOfBrTxOptMuxHistorical15minTable, l2PortTxFacilityCurrent1dayBytesFrames1519Trmt=l2PortTxFacilityCurrent1dayBytesFrames1519Trmt, lldpFrameRxFacilityHistorical1dayLLDPFramesRx=lldpFrameRxFacilityHistorical1dayLLDPFramesRx, dsOptMuxHistorical1dayNumber=dsOptMuxHistorical1dayNumber, facilityDataThresholdESOduHT15min=facilityDataThresholdESOduHT15min, macTxShelfConnectionCurrent15minTable=macTxShelfConnectionCurrent15minTable, endOfLldpTLVRxFacilityHistorical15minTable=endOfLldpTLVRxFacilityHistorical15minTable, tcmBFacilityHistorical15minBbe=tcmBFacilityHistorical15minBbe, dsFacilityHistorical15minEntry=dsFacilityHistorical15minEntry, endOfFrRcv4FacilityHistorical15minTable=endOfFrRcv4FacilityHistorical15minTable, macSzRxDcnHistorical15minTable=macSzRxDcnHistorical15minTable, l2PortRxFacilityHistorical1dayFramesRcv=l2PortRxFacilityHistorical1dayFramesRcv, dgdFacilityHistorical1dayEntry=dgdFacilityHistorical1dayEntry, rsFacilityHistorical1dayBBE=rsFacilityHistorical1dayBBE, macSzRxShelfConnectionCurrent15minBytesFrames1519Rcv=macSzRxShelfConnectionCurrent15minBytesFrames1519Rcv, oprOptMuxHistorical15minHigh=oprOptMuxHistorical15minHigh, sarLinkTrmtFacilityHistorical15minTimeStamp=sarLinkTrmtFacilityHistorical15minTimeStamp, cdcFacilityHistorical15minMean=cdcFacilityHistorical15minMean, endOfDsOptMuxHistorical15minTable=endOfDsOptMuxHistorical15minTable, frRcv3FacilityCurrent15minJabberFrameRcv=frRcv3FacilityCurrent15minJabberFrameRcv, facilityDataThresholdCEFecHT15min=facilityDataThresholdCEFecHT15min, lFacilityHistorical15minTable=lFacilityHistorical15minTable, brOptMuxHistorical15minTimeStamp=brOptMuxHistorical15minTimeStamp, lbcnDcnHistorical1weekNumber=lbcnDcnHistorical1weekNumber, l2PortTxFacilityHistorical15minBytesFrames128Trmt=l2PortTxFacilityHistorical15minBytesFrames128Trmt, macErrRxShelfConnectionHistorical15minTimeStamp=macErrRxShelfConnectionHistorical15minTimeStamp, attrmtOptMuxHistorical1dayMean=attrmtOptMuxHistorical1dayMean, ampInEqptHistorical1weekValidFlag=ampInEqptHistorical1weekValidFlag, macIcTxShelfConnectionCurrent15minTable=macIcTxShelfConnectionCurrent15minTable, tcmBFacilityCurrent15minSES=tcmBFacilityCurrent15minSES, frRcv1FacilityHistorical1dayPauseFrames=frRcv1FacilityHistorical1dayPauseFrames, macErrRxShelfConnectionCurrent1dayTable=macErrRxShelfConnectionCurrent1dayTable, utlRxFacilityHistorical15minUtlMean=utlRxFacilityHistorical15minUtlMean, gfpfrFacilityHistorical15minNumber=gfpfrFacilityHistorical15minNumber, macRxDcnCurrent1dayElapsedTime=macRxDcnCurrent1dayElapsedTime, otuFecFacilityHistorical15minEntry=otuFecFacilityHistorical15minEntry, pcs3FacilityHistorical1dayES=pcs3FacilityHistorical1dayES, pcs3FacilityHistorical15minEntry=pcs3FacilityHistorical15minEntry, optFacilityHistorical1dayLow=optFacilityHistorical1dayLow, macIcTxShelfConnectionCurrent15minElapsedTime=macIcTxShelfConnectionCurrent15minElapsedTime, endOfOprDcnHistorical1weekTable=endOfOprDcnHistorical1weekTable, lldpFrameTxFacilityHistorical1dayTable=lldpFrameTxFacilityHistorical1dayTable, eqptPhysThresholdAmpHigh=eqptPhysThresholdAmpHigh, lldpTLVRxFacilityHistorical15minEntry=lldpTLVRxFacilityHistorical15minEntry, pcsRxFacilityCurrent1dayES=pcsRxFacilityCurrent1dayES, frTrmt2FacilityHistorical1dayBytes=frTrmt2FacilityHistorical1dayBytes, macSzRxDcnCurrent15minBytesFrames512Rcv=macSzRxDcnCurrent15minBytesFrames512Rcv, optDcnHistorical15minTimeStamp=optDcnHistorical15minTimeStamp, macRxDcnHistorical1dayValidFlag=macRxDcnHistorical1dayValidFlag, facilityPhysThresholdOpticalInputPwrHigh=facilityPhysThresholdOpticalInputPwrHigh, macErrRxShelfConnectionHistorical1dayValidFlag=macErrRxShelfConnectionHistorical1dayValidFlag, skewFacilityHistorical15minNumber=skewFacilityHistorical15minNumber, macRxDcnHistorical15minTimeStamp=macRxDcnHistorical15minTimeStamp, frRcv2FacilityCurrent1dayEntry=frRcv2FacilityCurrent1dayEntry, endOfPcs4FacilityHistorical1dayTable=endOfPcs4FacilityHistorical1dayTable, frRcv2FacilityHistorical15minGoodFrames=frRcv2FacilityHistorical15minGoodFrames, frTrmt1FacilityCurrent15minBytes=frTrmt1FacilityCurrent15minBytes, macIcRxShelfConnectionHistorical1dayTimeStamp=macIcRxShelfConnectionHistorical1dayTimeStamp, macTxShelfConnectionHistorical1dayNumber=macTxShelfConnectionHistorical1dayNumber, fecFacilityHistorical1dayUBE=fecFacilityHistorical1dayUBE, msFacilityCurrent1dayEntry=msFacilityCurrent1dayEntry, ampInEqptHistorical15minNumber=ampInEqptHistorical15minNumber, endOfUtlTxFacilityHistorical15minTable=endOfUtlTxFacilityHistorical15minTable, macIcRxShelfConnectionHistorical1dayValidFlag=macIcRxShelfConnectionHistorical1dayValidFlag, oscOptOptMuxHistorical15minValidFlag=oscOptOptMuxHistorical15minValidFlag, brOptMuxHistorical15minHigh=brOptMuxHistorical15minHigh, ampEqptHistorical1dayTable=ampEqptHistorical1dayTable, pumpPwrOptMuxHistorical1weekHigh=pumpPwrOptMuxHistorical1weekHigh, eqptPhysInstValueTempExt=eqptPhysInstValueTempExt, facilityDataThresholdDEPcsHT15min=facilityDataThresholdDEPcsHT15min, oprOptMuxHistorical1weekMean=oprOptMuxHistorical1weekMean, cfotFacilityHistorical1weekValidFlag=cfotFacilityHistorical1weekValidFlag, sFacilityHistorical15minCV=sFacilityHistorical15minCV, utlTxFacilityHistorical15minUtlLow=utlTxFacilityHistorical15minUtlLow, lldpTLVTxFacilityHistorical1dayValidFlag=lldpTLVTxFacilityHistorical1dayValidFlag, facilityPhysInstValueDelayFrames=facilityPhysInstValueDelayFrames, pcs4FacilityCurrent1dayEntry=pcs4FacilityCurrent1dayEntry, lbcnDcnHistorical1dayTable=lbcnDcnHistorical1dayTable, optMuxPhysThresholdRamanPumpPwrHighThres=optMuxPhysThresholdRamanPumpPwrHighThres, brOptMuxHistorical1weekLow=brOptMuxHistorical1weekLow, l2PortTxFacilityHistorical15minFramesTrmt=l2PortTxFacilityHistorical15minFramesTrmt, frRcv4FacilityCurrent1dayEntry=frRcv4FacilityCurrent1dayEntry, lldpTLVFacilityCurrent15minTable=lldpTLVFacilityCurrent15minTable, sarLinkRcvFacilityHistorical1dayES=sarLinkRcvFacilityHistorical1dayES, endOfFrTrmt1FacilityHistorical15minTable=endOfFrTrmt1FacilityHistorical15minTable, lldpFrameTxFacilityCurrent15minLLDPFrameTxDiscards=lldpFrameTxFacilityCurrent15minLLDPFrameTxDiscards, dsFacilityHistorical15minTable=dsFacilityHistorical15minTable, cdFacilityHistorical1weekNumber=cdFacilityHistorical1weekNumber, rndTrpDlyFacilityHistorical15minTable=rndTrpDlyFacilityHistorical15minTable, macErrRxDcnHistorical15minTable=macErrRxDcnHistorical15minTable, pcs4FacilityHistorical1dayValidFlag=pcs4FacilityHistorical1dayValidFlag, msFacilityHistorical15minBBE=msFacilityHistorical15minBBE, facilityDataThresholdCEFecHT1day=facilityDataThresholdCEFecHT1day, lbcnFacilityHistorical15minTable=lbcnFacilityHistorical15minTable, optFacilityHistorical15minNumber=optFacilityHistorical15minNumber, sarLinkTrmtFacilityCurrent1dayTable=sarLinkTrmtFacilityCurrent1dayTable, otuFecFacilityHistorical1dayEntry=otuFecFacilityHistorical1dayEntry, attrmtOptMuxHistorical15minHigh=attrmtOptMuxHistorical15minHigh, optOptMuxHistorical1weekTimeStamp=optOptMuxHistorical1weekTimeStamp, macRxShelfConnectionHistorical15minEntry=macRxShelfConnectionHistorical15minEntry, lFacilityCurrent15minCV=lFacilityCurrent15minCV, utlRxFacilityCurrent1dayUtlLow=utlRxFacilityCurrent1dayUtlLow, oprDcnHistorical1dayTable=oprDcnHistorical1dayTable, lFacilityHistorical1dayNumber=lFacilityHistorical1dayNumber, endOfAttrmtOptMuxHistorical15minTable=endOfAttrmtOptMuxHistorical15minTable, dsOptMuxCurrent1dayDS=dsOptMuxCurrent1dayDS, oscGainOptMuxHistorical1dayValidFlag=oscGainOptMuxHistorical1dayValidFlag, fecFacilityHistorical15minSES=fecFacilityHistorical15minSES, endOfL2PortRxFacilityHistorical1dayTable=endOfL2PortRxFacilityHistorical1dayTable, macIcRxShelfConnectionCurrent15minTable=macIcRxShelfConnectionCurrent15minTable, frRcv3FacilityCurrent15minMulticastFramesRcv=frRcv3FacilityCurrent15minMulticastFramesRcv, macIcRxShelfConnectionHistorical1dayOctRcv=macIcRxShelfConnectionHistorical1dayOctRcv, lldpFrameRxFacilityHistorical15minTimeStamp=lldpFrameRxFacilityHistorical15minTimeStamp, oscGainOptMuxHistorical1weekTimeStamp=oscGainOptMuxHistorical1weekTimeStamp, macRxShelfConnectionHistorical15minTimeStamp=macRxShelfConnectionHistorical15minTimeStamp, facilityPhysInstValueOutputPower=facilityPhysInstValueOutputPower, optMuxPhysThresholdPumpLaser1TempLowThres=optMuxPhysThresholdPumpLaser1TempLowThres, endOfOduFacilityHistorical1dayTable=endOfOduFacilityHistorical1dayTable, frRcv1FacilityHistorical1dayValidFlag=frRcv1FacilityHistorical1dayValidFlag, frRcv2FacilityHistorical15minValidFlag=frRcv2FacilityHistorical15minValidFlag, macSzRxDcnCurrent1dayBytesFrames64Rcv=macSzRxDcnCurrent1dayBytesFrames64Rcv, tcmAFacilityCurrent1dayUAS=tcmAFacilityCurrent1dayUAS, oscOptOptMuxHistorical1weekTimeStamp=oscOptOptMuxHistorical1weekTimeStamp, endOfMacErrRxShelfConnectionCurrent1dayTable=endOfMacErrRxShelfConnectionCurrent1dayTable, l2PortTxFacilityCurrent15minPauseFramesTrmt=l2PortTxFacilityCurrent15minPauseFramesTrmt, fecFacilityCurrent1daySES=fecFacilityCurrent1daySES, oprFacilityHistorical1weekEntry=oprFacilityHistorical1weekEntry, optOptMuxHistorical1dayTimeStamp=optOptMuxHistorical1dayTimeStamp, dsFacilityCurrent15minEntry=dsFacilityCurrent15minEntry, ampInEqptHistorical1dayValidFlag=ampInEqptHistorical1dayValidFlag, lldpTLVRxFacilityHistorical15minTable=lldpTLVRxFacilityHistorical15minTable, pumpPwrOptMuxHistorical15minEntry=pumpPwrOptMuxHistorical15minEntry, facilityPhysThresholdLaserBiasCurrentNormalized=facilityPhysThresholdLaserBiasCurrentNormalized, attrmtOptMuxHistorical15minLow=attrmtOptMuxHistorical15minLow, lldpFrameRxFacilityHistorical1dayValidFlag=lldpFrameRxFacilityHistorical1dayValidFlag, endOfCdFacilityHistorical15minTable=endOfCdFacilityHistorical15minTable, frRcv2ShelfConnectionCurrent1dayPauseFrames=frRcv2ShelfConnectionCurrent1dayPauseFrames, endOfPcsRxFacilityCurrent15minTable=endOfPcsRxFacilityCurrent15minTable, optMuxPhysThresholdAttRxHigh=optMuxPhysThresholdAttRxHigh, pcs4FacilityHistorical15minValidFlag=pcs4FacilityHistorical15minValidFlag, frRcv3FacilityHistorical1dayControlFrameRcv=frRcv3FacilityHistorical1dayControlFrameRcv, msFacilityHistorical1dayUAS=msFacilityHistorical1dayUAS, rndTrpDlyFacilityHistorical15minNumber=rndTrpDlyFacilityHistorical15minNumber, macSzRxDcnHistorical1dayTimeStamp=macSzRxDcnHistorical1dayTimeStamp, fecFacilityHistorical1dayTimeStamp=fecFacilityHistorical1dayTimeStamp, pcs2FacilityHistorical15minES=pcs2FacilityHistorical15minES, facilityPhysInstValueLaserBiasCurrentLevel=facilityPhysInstValueLaserBiasCurrentLevel, facilityDataThresholdBBEOtuHT1day=facilityDataThresholdBBEOtuHT1day, estSigGainOptMuxHistorical1weekTimeStamp=estSigGainOptMuxHistorical1weekTimeStamp, macTxDcnHistorical15minNumber=macTxDcnHistorical15minNumber, cdFacilityHistorical15minTable=cdFacilityHistorical15minTable, endOfSarLinkRcvFacilityCurrent1dayTable=endOfSarLinkRcvFacilityCurrent1dayTable, endOfAmpEqptHistorical1weekTable=endOfAmpEqptHistorical1weekTable, facilityPhysThresholdOpticalOutputPwrHigh=facilityPhysThresholdOpticalOutputPwrHigh, lFacilityCurrent15minUAS=lFacilityCurrent15minUAS, macTxDcnCurrent1dayElapsedTime=macTxDcnCurrent1dayElapsedTime, optMuxPhysInstValueRamanEstSignalGain=optMuxPhysInstValueRamanEstSignalGain, pcsTxFacilityCurrent1dayTable=pcsTxFacilityCurrent1dayTable, pcsTxFacilityHistorical1dayTimeStamp=pcsTxFacilityHistorical1dayTimeStamp, cfotFacilityHistorical1weekEntry=cfotFacilityHistorical1weekEntry, lldpFrameTxFacilityCurrent15minFrameTxErrors=lldpFrameTxFacilityCurrent15minFrameTxErrors, oscOptOptMuxHistorical1weekMean=oscOptOptMuxHistorical1weekMean, pcs1FacilityHistorical15minEntry=pcs1FacilityHistorical15minEntry, frRcv3FacilityHistorical15minJabberFrameRcv=frRcv3FacilityHistorical15minJabberFrameRcv, l2PortRxFacilityCurrent1dayEntry=l2PortRxFacilityCurrent1dayEntry, utlRxFacilityHistorical15minTimeStamp=utlRxFacilityHistorical15minTimeStamp, lldpFrameFacilityCurrent15minTable=lldpFrameFacilityCurrent15minTable, macSzRxShelfConnectionHistorical1dayTable=macSzRxShelfConnectionHistorical1dayTable, lldpFrameTxFacilityCurrent1dayLLDPFramesTx=lldpFrameTxFacilityCurrent1dayLLDPFramesTx, frTrmt2FacilityCurrent1dayBytes=frTrmt2FacilityCurrent1dayBytes, muxFacilityHistorical1dayTable=muxFacilityHistorical1dayTable, frRcv1FacilityHistorical1dayDiscardedFrames=frRcv1FacilityHistorical1dayDiscardedFrames, endOfLbcnDcnHistorical15minTable=endOfLbcnDcnHistorical15minTable, tcmAFacilityHistorical1dayBbe=tcmAFacilityHistorical1dayBbe, endOfLldpFrameTxFacilityHistorical15minTable=endOfLldpFrameTxFacilityHistorical15minTable, pmTerminPoint=pmTerminPoint, lldpTLVRxFacilityHistorical15minTLVRxUnknown=lldpTLVRxFacilityHistorical15minTLVRxUnknown, cdFacilityHistorical1dayLow=cdFacilityHistorical1dayLow, estSigGainOptMuxHistorical15minHigh=estSigGainOptMuxHistorical15minHigh, otuFecFacilityHistorical1dayValidFlag=otuFecFacilityHistorical1dayValidFlag, endOfL2PortRxFacilityCurrent1dayTable=endOfL2PortRxFacilityCurrent1dayTable, endOfFrRcv2FacilityHistorical1dayTable=endOfFrRcv2FacilityHistorical1dayTable, lbcnFacilityHistorical15minLow=lbcnFacilityHistorical15minLow, endOfMacRxDcnHistorical15minTable=endOfMacRxDcnHistorical15minTable, frRcv3FacilityCurrent1dayEntry=frRcv3FacilityCurrent1dayEntry, cdcFacilityHistorical15minNumber=cdcFacilityHistorical15minNumber, dgdFacilityHistorical15minHigh=dgdFacilityHistorical15minHigh, oprFacilityHistorical15minValidFlag=oprFacilityHistorical15minValidFlag, endOfMacTxShelfConnectionCurrent15minTable=endOfMacTxShelfConnectionCurrent15minTable, frRcv3FacilityHistorical15minBytesFrames128Rcv=frRcv3FacilityHistorical15minBytesFrames128Rcv, cdFacilityHistorical15minHigh=cdFacilityHistorical15minHigh, endOfLldpTLVRxFacilityHistorical1dayTable=endOfLldpTLVRxFacilityHistorical1dayTable, frRcv2FacilityHistorical1dayNumber=frRcv2FacilityHistorical1dayNumber, l2PortRxFacilityHistorical15minOversizedFramesRcv=l2PortRxFacilityHistorical15minOversizedFramesRcv, macSzRxShelfConnectionHistorical1dayBytesFrames64Rcv=macSzRxShelfConnectionHistorical1dayBytesFrames64Rcv, atrcvDcnHistorical15minTable=atrcvDcnHistorical15minTable, endOfByteTrmtFacilityHistorical15minTable=endOfByteTrmtFacilityHistorical15minTable, pcsRxFacilityHistorical1dayBBE=pcsRxFacilityHistorical1dayBBE, lldpFrameRxFacilityCurrent15minEntry=lldpFrameRxFacilityCurrent15minEntry, endOfOtuFecFacilityCurrent1dayTable=endOfOtuFecFacilityCurrent1dayTable, checfrFacilityHistorical15minTypeHecCorrectedFrames=checfrFacilityHistorical15minTypeHecCorrectedFrames, brOptMuxHistorical1dayEntry=brOptMuxHistorical1dayEntry, l2PortTxFacilityCurrent15minMulticastFramesTrmt=l2PortTxFacilityCurrent15minMulticastFramesTrmt, endOfDgdFacilityHistorical1weekTable=endOfDgdFacilityHistorical1weekTable, ampInEqptHistorical1dayTimeStamp=ampInEqptHistorical1dayTimeStamp, qfactFacilityHistorical15minHigh=qfactFacilityHistorical15minHigh, optMuxPhysInstValueLaserBiasCurrentLevelAverage=optMuxPhysInstValueLaserBiasCurrentLevelAverage, skewFacilityHistorical1weekMean=skewFacilityHistorical1weekMean, lldpFrameFacilityHistorical1dayLLDPFrames=lldpFrameFacilityHistorical1dayLLDPFrames, oduFacilityCurrent15minES=oduFacilityCurrent15minES, otuFacilityCurrent15minEntry=otuFacilityCurrent15minEntry, rsFacilityCurrent15minES=rsFacilityCurrent15minES, otuFacilityCurrent1daySES=otuFacilityCurrent1daySES, macSzRxDcnCurrent1dayEntry=macSzRxDcnCurrent1dayEntry, snrFacilityHistorical15minHigh=snrFacilityHistorical15minHigh, endOfEstSigGainOptMuxHistorical1dayTable=endOfEstSigGainOptMuxHistorical1dayTable, qfactFacilityHistorical1dayValidFlag=qfactFacilityHistorical1dayValidFlag, macSzRxShelfConnectionHistorical15minValidFlag=macSzRxShelfConnectionHistorical15minValidFlag, endOfPmFacilityDataThreshold=endOfPmFacilityDataThreshold, optMuxPhysThresholdTable=optMuxPhysThresholdTable, l2PortTxFacilityHistorical1dayBytesFrames512Trmt=l2PortTxFacilityHistorical1dayBytesFrames512Trmt, lldpTLVRxFacilityHistorical15minValidFlag=lldpTLVRxFacilityHistorical15minValidFlag)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", msFacilityHistorical15minTimeStamp=msFacilityHistorical15minTimeStamp, estSigGainOptMuxHistorical1dayHigh=estSigGainOptMuxHistorical1dayHigh, rsFacilityHistorical15minNumber=rsFacilityHistorical15minNumber, macIcTxShelfConnectionCurrent15minBytesTrmt=macIcTxShelfConnectionCurrent15minBytesTrmt, macTxShelfConnectionCurrent15minEntry=macTxShelfConnectionCurrent15minEntry, facilityDataThresholdOOFSSHT1day=facilityDataThresholdOOFSSHT1day, l2PortRxFacilityHistorical15minMulticastFramesRcv=l2PortRxFacilityHistorical15minMulticastFramesRcv, dsFacilityCurrent1dayTable=dsFacilityCurrent1dayTable, frTrmt1FacilityHistorical1dayGoodFramesx=frTrmt1FacilityHistorical1dayGoodFramesx, pcsTxFacilityCurrent15minTable=pcsTxFacilityCurrent15minTable, macIcRxShelfConnectionHistorical15minCrcErrorsRcv=macIcRxShelfConnectionHistorical15minCrcErrorsRcv, optOptMuxHistorical1weekHigh=optOptMuxHistorical1weekHigh, frRcv3FacilityHistorical15minBytesFrames1024Rcv=frRcv3FacilityHistorical15minBytesFrames1024Rcv, optMuxPhysThresholdPumpLaser3TempHighThres=optMuxPhysThresholdPumpLaser3TempHighThres, macSzRxDcnCurrent15minEntry=macSzRxDcnCurrent15minEntry, snrFacilityHistorical1dayTimeStamp=snrFacilityHistorical1dayTimeStamp, voltInpEqptHistorical1dayLow=voltInpEqptHistorical1dayLow, checfrFacilityCurrent1dayCoreHecCorrectedFrames=checfrFacilityCurrent1dayCoreHecCorrectedFrames, lbcnDcnHistorical1weekTable=lbcnDcnHistorical1weekTable, tcmBFacilityCurrent15minTable=tcmBFacilityCurrent15minTable, facilityPhysInstValuePrbsErrorFreeTime=facilityPhysInstValuePrbsErrorFreeTime, ampInEqptHistorical15minTimeStamp=ampInEqptHistorical15minTimeStamp, pcs3FacilityHistorical1dayValidFlag=pcs3FacilityHistorical1dayValidFlag, dsOptMuxCurrent1dayElapsedTime=dsOptMuxCurrent1dayElapsedTime, muxFacilityCurrent1dayCrc=muxFacilityCurrent1dayCrc, otuFecFacilityHistorical15minBERCE=otuFecFacilityHistorical15minBERCE, endOfFrRcv4FacilityCurrent1dayTable=endOfFrRcv4FacilityCurrent1dayTable, utlTxFacilityHistorical1dayTimeStamp=utlTxFacilityHistorical1dayTimeStamp, macIcRxShelfConnectionHistorical15minTable=macIcRxShelfConnectionHistorical15minTable, lbcnDcnHistorical15minTimeStamp=lbcnDcnHistorical15minTimeStamp, ampInEqptHistorical1dayNumber=ampInEqptHistorical1dayNumber, optMuxPhysInstValuePowerPerChannelTx=optMuxPhysInstValuePowerPerChannelTx, macSzRxShelfConnectionHistorical1dayTimeStamp=macSzRxShelfConnectionHistorical1dayTimeStamp, lldpTLVFacilityHistorical1dayTimeStamp=lldpTLVFacilityHistorical1dayTimeStamp, macErrRxShelfConnectionCurrent15minUndersizedFramesRcv=macErrRxShelfConnectionCurrent15minUndersizedFramesRcv, snrFacilityHistorical1weekValidFlag=snrFacilityHistorical1weekValidFlag, brOptMuxHistorical1dayTable=brOptMuxHistorical1dayTable, latencyFacilityHistorical1dayMean=latencyFacilityHistorical1dayMean, macIcTxShelfConnectionHistorical1dayTable=macIcTxShelfConnectionHistorical1dayTable, endOfCdcFacilityHistorical1weekTable=endOfCdcFacilityHistorical1weekTable, pumpPwrOptMuxHistorical1weekTable=pumpPwrOptMuxHistorical1weekTable, lldpTLVTxFacilityHistorical15minTable=lldpTLVTxFacilityHistorical15minTable, endOfMuxFacilityCurrent1dayTable=endOfMuxFacilityCurrent1dayTable, gfpfrFacilityCurrent1dayEntry=gfpfrFacilityCurrent1dayEntry, frRcv2ShelfConnectionCurrent1dayEntry=frRcv2ShelfConnectionCurrent1dayEntry, oscGainOptMuxHistorical1dayMean=oscGainOptMuxHistorical1dayMean, pcs1FacilityCurrent1dayElapsedTime=pcs1FacilityCurrent1dayElapsedTime, l2PortRxFacilityHistorical15minTimeStamp=l2PortRxFacilityHistorical15minTimeStamp, attrmtOptMuxHistorical15minTimeStamp=attrmtOptMuxHistorical15minTimeStamp, macTxDcnHistorical15minTimeStamp=macTxDcnHistorical15minTimeStamp, voltInpEqptHistorical1weekTimeStamp=voltInpEqptHistorical1weekTimeStamp, sarLinkTrmtFacilityCurrent15minTable=sarLinkTrmtFacilityCurrent15minTable, rsFacilityCurrent15minBBE=rsFacilityCurrent15minBBE, frRcv3FacilityCurrent1dayBytesFrames512Rcv=frRcv3FacilityCurrent1dayBytesFrames512Rcv, tcmAFacilityCurrent15minElapsedTime=tcmAFacilityCurrent15minElapsedTime, pcsRxFacilityCurrent1dayElapsedTime=pcsRxFacilityCurrent1dayElapsedTime, snrFacilityHistorical1dayNumber=snrFacilityHistorical1dayNumber, facilityDataThresholdDEPcsHT1day=facilityDataThresholdDEPcsHT1day, frRcv3FacilityHistorical15minEntry=frRcv3FacilityHistorical15minEntry, macSzRxDcnCurrent1dayBytesFrames128Rcv=macSzRxDcnCurrent1dayBytesFrames128Rcv, frRcv2ShelfConnectionHistorical1dayTimeStamp=frRcv2ShelfConnectionHistorical1dayTimeStamp, atrcvDcnHistorical1dayMean=atrcvDcnHistorical1dayMean, frRcv3FacilityCurrent15minBytesFrames128Rcv=frRcv3FacilityCurrent15minBytesFrames128Rcv, utlRxFacilityCurrent1dayTable=utlRxFacilityCurrent1dayTable, pcsRxFacilityHistorical1dayEntry=pcsRxFacilityHistorical1dayEntry, sarLinkRcvFacilityCurrent1dayTable=sarLinkRcvFacilityCurrent1dayTable, brTxOptMuxHistorical1dayTable=brTxOptMuxHistorical1dayTable, pmFacilityPhysThreshold=pmFacilityPhysThreshold, pcs4FacilityHistorical1dayES=pcs4FacilityHistorical1dayES, lbcnFacilityHistorical1dayTable=lbcnFacilityHistorical1dayTable, frTrmt2FacilityHistorical15minGoodFramesx=frTrmt2FacilityHistorical15minGoodFramesx, pmShelfConnection=pmShelfConnection, dgdFacilityHistorical1dayMean=dgdFacilityHistorical1dayMean, atRcvOptMuxHistorical15minTimeStamp=atRcvOptMuxHistorical15minTimeStamp, dsOptMuxHistorical15minEntry=dsOptMuxHistorical15minEntry, macIcRxShelfConnectionHistorical1dayGoodFrames=macIcRxShelfConnectionHistorical1dayGoodFrames, terminPointPhysInstValueInputPower=terminPointPhysInstValueInputPower, pcs2FacilityHistorical1dayValidFlag=pcs2FacilityHistorical1dayValidFlag, dsOptMuxHistorical1dayDS=dsOptMuxHistorical1dayDS, lldpFrameFacilityHistorical15minNumber=lldpFrameFacilityHistorical15minNumber, dgdFacilityHistorical1dayTable=dgdFacilityHistorical1dayTable, otuFecFacilityCurrent15minCE=otuFecFacilityCurrent15minCE, frTrmt2FacilityCurrent1dayCrcFramesEgress=frTrmt2FacilityCurrent1dayCrcFramesEgress, rndTrpDlyFacilityHistorical15minEntry=rndTrpDlyFacilityHistorical15minEntry, lFacilityHistorical15minES=lFacilityHistorical15minES, msFacilityHistorical15minSES=msFacilityHistorical15minSES, frRcv2ShelfConnectionHistorical15minValidFlag=frRcv2ShelfConnectionHistorical15minValidFlag, facilityPhysInstValueChromaticDispersion=facilityPhysInstValueChromaticDispersion, pcs4FacilityCurrent1dayCV=pcs4FacilityCurrent1dayCV, endOfSarLinkRcvFacilityHistorical15minTable=endOfSarLinkRcvFacilityHistorical15minTable, l2PortTxFacilityHistorical1dayValidFlag=l2PortTxFacilityHistorical1dayValidFlag, tcmCFacilityHistorical15minNumber=tcmCFacilityHistorical15minNumber, otuFecFacilityCurrent1dayTable=otuFecFacilityCurrent1dayTable, l2PortTxFacilityHistorical1dayBytesTrmt=l2PortTxFacilityHistorical1dayBytesTrmt, utlTxFacilityCurrent1dayElapsedTime=utlTxFacilityCurrent1dayElapsedTime, macSzRxShelfConnectionHistorical15minBytesFrames1519Rcv=macSzRxShelfConnectionHistorical15minBytesFrames1519Rcv, frTrmt1FacilityHistorical1dayPauseFrames=frTrmt1FacilityHistorical1dayPauseFrames, gfpfrFacilityCurrent1dayTHecDiscardedFrames=gfpfrFacilityCurrent1dayTHecDiscardedFrames, facilityPhysThresholdLocalOscTempHighThres=facilityPhysThresholdLocalOscTempHighThres, otuFacilityHistorical1dayUAS=otuFacilityHistorical1dayUAS, otuFecFacilityHistorical1dayBERCE=otuFecFacilityHistorical1dayBERCE, tcmCFacilityHistorical1dayValidFlag=tcmCFacilityHistorical1dayValidFlag, endOfPmFacilityDataValue=endOfPmFacilityDataValue, pcs2FacilityCurrent1dayCV=pcs2FacilityCurrent1dayCV, fec2FacilityHistorical1dayEntry=fec2FacilityHistorical1dayEntry, dsOptMuxHistorical15minValidFlag=dsOptMuxHistorical15minValidFlag, l2PortRxFacilityCurrent15minBytesRcv=l2PortRxFacilityCurrent15minBytesRcv, macSzRxDcnCurrent15minBytesFrames1024Rcv=macSzRxDcnCurrent15minBytesFrames1024Rcv, macSzRxShelfConnectionCurrent15minBytesFrames128Rcv=macSzRxShelfConnectionCurrent15minBytesFrames128Rcv, cfotFacilityHistorical1weekNumber=cfotFacilityHistorical1weekNumber, brTxOptMuxHistorical1weekTimeStamp=brTxOptMuxHistorical1weekTimeStamp, tcmCFacilityCurrent15minBbe=tcmCFacilityCurrent15minBbe, l2PortTxFacilityCurrent15minElapsedTime=l2PortTxFacilityCurrent15minElapsedTime, macRxDcnHistorical15minOctRcv=macRxDcnHistorical15minOctRcv, l2PortRxFacilityHistorical15minBytesFrames64Rcv=l2PortRxFacilityHistorical15minBytesFrames64Rcv, gfpfrFacilityHistorical15minEntry=gfpfrFacilityHistorical15minEntry, macTxDcnHistorical15minTable=macTxDcnHistorical15minTable, facilityDataThresholdSEPcsHT15min=facilityDataThresholdSEPcsHT15min, rsFacilityCurrent15minTable=rsFacilityCurrent15minTable, lldpFrameRxFacilityHistorical15minTable=lldpFrameRxFacilityHistorical15minTable, frRcv2FacilityCurrent15minGoodFrames=frRcv2FacilityCurrent15minGoodFrames, endOfDgdFacilityHistorical15minTable=endOfDgdFacilityHistorical15minTable, facilityDataThresholdUBEFecHT15min=facilityDataThresholdUBEFecHT15min, frRcv2DcnHistorical15minValidFlag=frRcv2DcnHistorical15minValidFlag, pmqpteDataRecord=pmqpteDataRecord, sarLinkTrmtFacilityCurrent1dayES=sarLinkTrmtFacilityCurrent1dayES, macRxShelfConnectionHistorical1dayGoodFrames=macRxShelfConnectionHistorical1dayGoodFrames, byteTrmtFacilityCurrent15minCrcFramesEgress=byteTrmtFacilityCurrent15minCrcFramesEgress, pumpPwrOptMuxHistorical1dayNumber=pumpPwrOptMuxHistorical1dayNumber, macErrRxDcnCurrent15minUndersizedFramesRcv=macErrRxDcnCurrent15minUndersizedFramesRcv, facilityDataThresholdSESLHT1day=facilityDataThresholdSESLHT1day, utlRxFacilityCurrent15minUtlMean=utlRxFacilityCurrent15minUtlMean, pcs1FacilityHistorical15minTable=pcs1FacilityHistorical15minTable, endOfPmEqptPhysThreshold=endOfPmEqptPhysThreshold, sFacilityHistorical1dayEntry=sFacilityHistorical1dayEntry, facilityDataThresholdCVSHT1day=facilityDataThresholdCVSHT1day, endOfFrRcv1FacilityCurrent15minTable=endOfFrRcv1FacilityCurrent15minTable, l2PortTxFacilityCurrent15minBytesFrames1024Trmt=l2PortTxFacilityCurrent15minBytesFrames1024Trmt, optDcnHistorical1dayHigh=optDcnHistorical1dayHigh, checfrFacilityCurrent15minTable=checfrFacilityCurrent15minTable, oprOptMuxHistorical15minValidFlag=oprOptMuxHistorical15minValidFlag, l2PortRxFacilityHistorical15minValidFlag=l2PortRxFacilityHistorical15minValidFlag, frRcv3FacilityCurrent15minBytesFrames1024Rcv=frRcv3FacilityCurrent15minBytesFrames1024Rcv, pumpPwrOptMuxHistorical15minNumber=pumpPwrOptMuxHistorical15minNumber, macTxShelfConnectionHistorical1dayBroadcastFramesTrmt=macTxShelfConnectionHistorical1dayBroadcastFramesTrmt, endOfDcnPhysInstValueTable=endOfDcnPhysInstValueTable, rndTrpDlyFacilityHistorical1dayHigh=rndTrpDlyFacilityHistorical1dayHigh, macErrRxDcnHistorical1dayCrcErrorsRcv=macErrRxDcnHistorical1dayCrcErrorsRcv, macTxDcnHistorical1dayTable=macTxDcnHistorical1dayTable, oduFacilityHistorical1dayNumber=oduFacilityHistorical1dayNumber, tcmBFacilityHistorical1dayTable=tcmBFacilityHistorical1dayTable, sFacilityHistorical15minSEFS=sFacilityHistorical15minSEFS, frRcv4FacilityHistorical1dayCrcFrames=frRcv4FacilityHistorical1dayCrcFrames, endOfLldpTLVFacilityCurrent15minTable=endOfLldpTLVFacilityCurrent15minTable, oprFacilityHistorical15minMean=oprFacilityHistorical15minMean, l2PortRxFacilityCurrent15minBytesFrames1519Rcv=l2PortRxFacilityCurrent15minBytesFrames1519Rcv, lFacilityHistorical1dayTable=lFacilityHistorical1dayTable, lldpFrameTxFacilityCurrent1dayLLDPFrameTxDiscards=lldpFrameTxFacilityCurrent1dayLLDPFrameTxDiscards, utlTxFacilityHistorical1dayNumber=utlTxFacilityHistorical1dayNumber, muxFacilityHistorical15minTimeStamp=muxFacilityHistorical15minTimeStamp, macRxDcnCurrent15minGoodFrames=macRxDcnCurrent15minGoodFrames, facilityPhysThresholdCarrierFreqOffsetHigh=facilityPhysThresholdCarrierFreqOffsetHigh, checfrFacilityHistorical1dayEntry=checfrFacilityHistorical1dayEntry, endOfPcs2FacilityCurrent15minTable=endOfPcs2FacilityCurrent15minTable, oprDcnHistorical1dayNumber=oprDcnHistorical1dayNumber, utlRxFacilityHistorical1dayTable=utlRxFacilityHistorical1dayTable, qfactFacilityHistorical1weekTimeStamp=qfactFacilityHistorical1weekTimeStamp, macRxShelfConnectionCurrent1dayOctRcv=macRxShelfConnectionCurrent1dayOctRcv, l2PortTxFacilityCurrent1dayPauseFramesTrmt=l2PortTxFacilityCurrent1dayPauseFramesTrmt, endOfDiscsBlockFacilityHistorical15minTable=endOfDiscsBlockFacilityHistorical15minTable, fecFacilityHistorical15minBERCE=fecFacilityHistorical15minBERCE, optMuxPhysThresholdEntry=optMuxPhysThresholdEntry, cdcFacilityHistorical15minHigh=cdcFacilityHistorical15minHigh, optFacilityHistorical15minEntry=optFacilityHistorical15minEntry, dgdFacilityHistorical1dayHigh=dgdFacilityHistorical1dayHigh, fecFacilityCurrent15minBERCE=fecFacilityCurrent15minBERCE, endOfDsOptMuxCurrent15minTable=endOfDsOptMuxCurrent15minTable, fecFacilityCurrent1dayCE=fecFacilityCurrent1dayCE, macIcTxShelfConnectionHistorical15minTimeStamp=macIcTxShelfConnectionHistorical15minTimeStamp, snrFacilityHistorical15minNumber=snrFacilityHistorical15minNumber, rndTrpDlyFacilityHistorical1dayMean=rndTrpDlyFacilityHistorical1dayMean, optOptMuxHistorical15minMean=optOptMuxHistorical15minMean, utlRxFacilityHistorical1dayTimeStamp=utlRxFacilityHistorical1dayTimeStamp, macTxDcnHistorical1dayBroadcastFramesTrmt=macTxDcnHistorical1dayBroadcastFramesTrmt, oprFacilityHistorical1weekTable=oprFacilityHistorical1weekTable, macSzRxShelfConnectionCurrent15minBytesFrames256Rcv=macSzRxShelfConnectionCurrent15minBytesFrames256Rcv, latencyFacilityHistorical15minLow=latencyFacilityHistorical15minLow, checfrFacilityHistorical15minCoreHecCorrectedFrames=checfrFacilityHistorical15minCoreHecCorrectedFrames, eqptPhysThresholdTempLow=eqptPhysThresholdTempLow, macTxShelfConnectionCurrent1dayFramesTrmt=macTxShelfConnectionCurrent1dayFramesTrmt, lldpTLVTxFacilityHistorical15minTLVTxDiscards=lldpTLVTxFacilityHistorical15minTLVTxDiscards, frTrmt2FacilityCurrent15minPauseFrames=frTrmt2FacilityCurrent15minPauseFrames, facilityDataThresholdUASOtuHT1day=facilityDataThresholdUASOtuHT1day, pcs2FacilityHistorical15minValidFlag=pcs2FacilityHistorical15minValidFlag, atRcvOptMuxHistorical15minHigh=atRcvOptMuxHistorical15minHigh, facilityDataThresholdESLHT1day=facilityDataThresholdESLHT1day, tcmAFacilityCurrent1dayEntry=tcmAFacilityCurrent1dayEntry, msFacilityCurrent1dayES=msFacilityCurrent1dayES, pcs1FacilityHistorical1dayES=pcs1FacilityHistorical1dayES, otuFacilityCurrent15minES=otuFacilityCurrent15minES, optFacilityHistorical1weekValidFlag=optFacilityHistorical1weekValidFlag, otuFacilityHistorical15minTable=otuFacilityHistorical15minTable, snrFacilityHistorical1weekTimeStamp=snrFacilityHistorical1weekTimeStamp, l2PortTxFacilityCurrent15minBytesFrames64Trmt=l2PortTxFacilityCurrent15minBytesFrames64Trmt, tcmBFacilityCurrent15minElapsedTime=tcmBFacilityCurrent15minElapsedTime, endOfUtlTxFacilityHistorical1dayTable=endOfUtlTxFacilityHistorical1dayTable, dgdFacilityHistorical15minLow=dgdFacilityHistorical15minLow, endOfPcsTxFacilityHistorical15minTable=endOfPcsTxFacilityHistorical15minTable, ampEqptHistorical1dayHigh=ampEqptHistorical1dayHigh, pcs3FacilityCurrent15minTable=pcs3FacilityCurrent15minTable, sarLinkTrmtFacilityHistorical1daySES=sarLinkTrmtFacilityHistorical1daySES, lldpFrameTxFacilityCurrent1dayTable=lldpFrameTxFacilityCurrent1dayTable, optMuxPhysInstValueOcmTxLoss=optMuxPhysInstValueOcmTxLoss, frRcv1FacilityCurrent1dayElapsedTime=frRcv1FacilityCurrent1dayElapsedTime, endOfOtuFacilityCurrent15minTable=endOfOtuFacilityCurrent15minTable, facilityPhysThresholdCarrierFreqOffsetLow=facilityPhysThresholdCarrierFreqOffsetLow, optMuxPhysInstValueAttenuationOfVoa=optMuxPhysInstValueAttenuationOfVoa, eqptPhysInstValueAmpere=eqptPhysInstValueAmpere, qfactFacilityHistorical15minMean=qfactFacilityHistorical15minMean, lldpTLVFacilityHistorical15minValidFlag=lldpTLVFacilityHistorical15minValidFlag, otuFecFacilityHistorical1daySES=otuFecFacilityHistorical1daySES, endOfMacIcTxShelfConnectionHistorical1dayTable=endOfMacIcTxShelfConnectionHistorical1dayTable, facilityDataThresholdESTcmbHT15min=facilityDataThresholdESTcmbHT15min, facilityDataThresholdUASLHT1day=facilityDataThresholdUASLHT1day, facilityDataThresholdUASOduHT1day=facilityDataThresholdUASOduHT1day, facilityDataThresholdBBEOduHT1day=facilityDataThresholdBBEOduHT1day, l2PortTxFacilityCurrent1dayEntry=l2PortTxFacilityCurrent1dayEntry, frRcv2DcnHistorical15minEntry=frRcv2DcnHistorical15minEntry, frRcv1FacilityHistorical15minValidFlag=frRcv1FacilityHistorical15minValidFlag, voltInpEqptHistorical1dayValidFlag=voltInpEqptHistorical1dayValidFlag, endOfMacIcRxShelfConnectionHistorical1dayTable=endOfMacIcRxShelfConnectionHistorical1dayTable, l2PortTxFacilityCurrent15minBroadcastFramesTrmt=l2PortTxFacilityCurrent15minBroadcastFramesTrmt, oprDcnHistorical1dayHigh=oprDcnHistorical1dayHigh, endOfChecfrFacilityHistorical15minTable=endOfChecfrFacilityHistorical15minTable, l2PortTxFacilityHistorical1dayBytesFrames128Trmt=l2PortTxFacilityHistorical1dayBytesFrames128Trmt, endOfLbcnDcnHistorical1dayTable=endOfLbcnDcnHistorical1dayTable, macIcTxShelfConnectionCurrent1dayBytesTrmt=macIcTxShelfConnectionCurrent1dayBytesTrmt, lldpTLVRxFacilityCurrent15minTLVRxDiscards=lldpTLVRxFacilityCurrent15minTLVRxDiscards, lbcnDcnHistorical1dayLow=lbcnDcnHistorical1dayLow, macTxDcnHistorical15minValidFlag=macTxDcnHistorical15minValidFlag, endOfCfotFacilityHistorical15minTable=endOfCfotFacilityHistorical15minTable, pmDcn=pmDcn, frRcv3FacilityHistorical1dayBytesFrames65Rcv=frRcv3FacilityHistorical1dayBytesFrames65Rcv, dsFacilityHistorical1dayTimeStamp=dsFacilityHistorical1dayTimeStamp, macRxShelfConnectionCurrent1dayGoodFrames=macRxShelfConnectionCurrent1dayGoodFrames, qfactFacilityHistorical1weekNumber=qfactFacilityHistorical1weekNumber, fec2FacilityCurrent15minBERCE=fec2FacilityCurrent15minBERCE, endOfMacTxDcnCurrent1dayTable=endOfMacTxDcnCurrent1dayTable, endOfVoltInpEqptHistorical1weekTable=endOfVoltInpEqptHistorical1weekTable, endOfMacErrRxDcnHistorical15minTable=endOfMacErrRxDcnHistorical15minTable, macRxShelfConnectionCurrent15minEntry=macRxShelfConnectionCurrent15minEntry, qfactFacilityHistorical1dayLow=qfactFacilityHistorical1dayLow, utlTxFacilityHistorical15minUtlHigh=utlTxFacilityHistorical15minUtlHigh, otuFacilityCurrent1dayBbe=otuFacilityCurrent1dayBbe)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", lldpTLVRxFacilityHistorical1dayEntry=lldpTLVRxFacilityHistorical1dayEntry, pcs3FacilityCurrent15minES=pcs3FacilityCurrent15minES, latencyFacilityHistorical1dayTable=latencyFacilityHistorical1dayTable, frTrmt1FacilityHistorical1dayEntry=frTrmt1FacilityHistorical1dayEntry, ampEqptHistorical15minLow=ampEqptHistorical15minLow, gfpfrFacilityCurrent15minGoodFrames=gfpfrFacilityCurrent15minGoodFrames, optMuxPhysInstValueTotalGainMeasurement=optMuxPhysInstValueTotalGainMeasurement, frRcv3FacilityHistorical1dayGoodFrames=frRcv3FacilityHistorical1dayGoodFrames, oscGainOptMuxHistorical15minEntry=oscGainOptMuxHistorical15minEntry, lldpFrameFacilityHistorical1dayTimeStamp=lldpFrameFacilityHistorical1dayTimeStamp, oscPwrOptMuxHistorical1dayHigh=oscPwrOptMuxHistorical1dayHigh, l2PortTxFacilityCurrent1dayBytesTrmt=l2PortTxFacilityCurrent1dayBytesTrmt, optOptMuxHistorical15minTable=optOptMuxHistorical15minTable, terminPointPhysInstValueEntry=terminPointPhysInstValueEntry, optMuxPhysInstValuePumpLaserBiasCurrent4=optMuxPhysInstValuePumpLaserBiasCurrent4, oprFacilityHistorical1dayNumber=oprFacilityHistorical1dayNumber, rndTrpDlyFacilityHistorical1weekEntry=rndTrpDlyFacilityHistorical1weekEntry, frRcv2DcnHistorical15minBytes=frRcv2DcnHistorical15minBytes, pcsRxFacilityCurrent1dayTable=pcsRxFacilityCurrent1dayTable, oprFacilityHistorical1dayMean=oprFacilityHistorical1dayMean, endOfMacTxDcnHistorical1dayTable=endOfMacTxDcnHistorical1dayTable, macSzRxDcnHistorical15minEntry=macSzRxDcnHistorical15minEntry, endOfFecFacilityHistorical1dayTable=endOfFecFacilityHistorical1dayTable, facilityDataThresholdCVDEPcsHT15min=facilityDataThresholdCVDEPcsHT15min, otuFacilityHistorical1dayES=otuFacilityHistorical1dayES, lbcnFacilityHistorical1weekLow=lbcnFacilityHistorical1weekLow, dsOptMuxCurrent1dayEntry=dsOptMuxCurrent1dayEntry, pcsRxFacilityHistorical1dayTable=pcsRxFacilityHistorical1dayTable, endOfOprFacilityHistorical1weekTable=endOfOprFacilityHistorical1weekTable, lldpFrameRxFacilityCurrent1dayFrameRxErrors=lldpFrameRxFacilityCurrent1dayFrameRxErrors, macTxShelfConnectionHistorical1dayTable=macTxShelfConnectionHistorical1dayTable, brOptMuxHistorical1weekMean=brOptMuxHistorical1weekMean, frRcv2FacilityHistorical1dayTimeStamp=frRcv2FacilityHistorical1dayTimeStamp, l2PortRxFacilityHistorical1dayBytesFrames65Rcv=l2PortRxFacilityHistorical1dayBytesFrames65Rcv, tcmCFacilityHistorical1dayTimeStamp=tcmCFacilityHistorical1dayTimeStamp, facilityDataThresholdESOtuHT1day=facilityDataThresholdESOtuHT1day, lFacilityCurrent1daySES=lFacilityCurrent1daySES, cfotFacilityHistorical1dayLow=cfotFacilityHistorical1dayLow, pcsTxFacilityHistorical15minEntry=pcsTxFacilityHistorical15minEntry, attrmtOptMuxHistorical1dayValidFlag=attrmtOptMuxHistorical1dayValidFlag, oduFacilityCurrent1daySES=oduFacilityCurrent1daySES, lldpTLVRxFacilityCurrent1dayElapsedTime=lldpTLVRxFacilityCurrent1dayElapsedTime, skewFacilityHistorical15minMean=skewFacilityHistorical15minMean, endOfVoltInpEqptHistorical15minTable=endOfVoltInpEqptHistorical15minTable, eqptPhysInstValuePwrConsumption=eqptPhysInstValuePwrConsumption, checfrFacilityHistorical1dayTimeStamp=checfrFacilityHistorical1dayTimeStamp, oprDcnHistorical1dayValidFlag=oprDcnHistorical1dayValidFlag, macSzRxShelfConnectionHistorical1dayBytesFrames1519Rcv=macSzRxShelfConnectionHistorical1dayBytesFrames1519Rcv, frTrmt2FacilityCurrent15minDiscardedFrames=frTrmt2FacilityCurrent15minDiscardedFrames, macIcTxShelfConnectionHistorical1dayValidFlag=macIcTxShelfConnectionHistorical1dayValidFlag, rndTrpDlyFacilityHistorical1weekLow=rndTrpDlyFacilityHistorical1weekLow, oduFacilityCurrent1dayBbe=oduFacilityCurrent1dayBbe, cfotFacilityHistorical15minTable=cfotFacilityHistorical15minTable, frTrmt2FacilityCurrent1dayEntry=frTrmt2FacilityCurrent1dayEntry, fec2FacilityHistorical15minNumber=fec2FacilityHistorical15minNumber, tcmCFacilityHistorical15minBbe=tcmCFacilityHistorical15minBbe, macRxDcnHistorical15minTable=macRxDcnHistorical15minTable, pmTerminPointPhysRecord=pmTerminPointPhysRecord, lldpTLVTxFacilityHistorical1dayTimeStamp=lldpTLVTxFacilityHistorical1dayTimeStamp, lbcnFacilityHistorical1dayNumber=lbcnFacilityHistorical1dayNumber, voltInpEqptHistorical1weekHigh=voltInpEqptHistorical1weekHigh, macTxDcnCurrent1dayBytesTrmt=macTxDcnCurrent1dayBytesTrmt, pcs4FacilityCurrent15minCV=pcs4FacilityCurrent15minCV, optMuxPhysInstValueRamanPumpPower=optMuxPhysInstValueRamanPumpPower, macIcRxShelfConnectionCurrent1dayGoodFrames=macIcRxShelfConnectionCurrent1dayGoodFrames, lldpFrameFacilityCurrent1dayEntry=lldpFrameFacilityCurrent1dayEntry, pcs3FacilityCurrent1dayEntry=pcs3FacilityCurrent1dayEntry, l2PortTxFacilityHistorical1dayBytesFrames256Trmt=l2PortTxFacilityHistorical1dayBytesFrames256Trmt, checfrFacilityHistorical15minTypeHecDiscardedFrames=checfrFacilityHistorical15minTypeHecDiscardedFrames, macErrRxShelfConnectionHistorical15minTable=macErrRxShelfConnectionHistorical15minTable, otuFacilityCurrent1dayElapsedTime=otuFacilityCurrent1dayElapsedTime, oduFacilityCurrent15minElapsedTime=oduFacilityCurrent15minElapsedTime, estSigGainOptMuxHistorical1weekValidFlag=estSigGainOptMuxHistorical1weekValidFlag, macTxShelfConnectionHistorical15minValidFlag=macTxShelfConnectionHistorical15minValidFlag, endOfByteTrmtFacilityCurrent15minTable=endOfByteTrmtFacilityCurrent15minTable, macRxShelfConnectionHistorical1dayOctRcv=macRxShelfConnectionHistorical1dayOctRcv, otuFacilityHistorical15minNumber=otuFacilityHistorical15minNumber, macSzRxDcnHistorical1dayBytesFrames1519Rcv=macSzRxDcnHistorical1dayBytesFrames1519Rcv, frTrmt2FacilityCurrent15minCrcFramesEgress=frTrmt2FacilityCurrent15minCrcFramesEgress, oscGainOptMuxHistorical15minMean=oscGainOptMuxHistorical15minMean, rsFacilityHistorical1dayValidFlag=rsFacilityHistorical1dayValidFlag, latencyFacilityHistorical1dayHigh=latencyFacilityHistorical1dayHigh, sFacilityCurrent1daySES=sFacilityCurrent1daySES, oduFacilityHistorical15minES=oduFacilityHistorical15minES, sFacilityHistorical15minES=sFacilityHistorical15minES, optOptMuxHistorical15minTimeStamp=optOptMuxHistorical15minTimeStamp, utlTxFacilityCurrent15minUtlLow=utlTxFacilityCurrent15minUtlLow, l2PortRxFacilityCurrent15minBytesFrames65Rcv=l2PortRxFacilityCurrent15minBytesFrames65Rcv, oprFacilityHistorical1dayHigh=oprFacilityHistorical1dayHigh, optDcnHistorical1dayNumber=optDcnHistorical1dayNumber, frRcv2ShelfConnectionHistorical15minNumber=frRcv2ShelfConnectionHistorical15minNumber, frRcv3FacilityCurrent15minCrcFrames=frRcv3FacilityCurrent15minCrcFrames, otuFacilityCurrent1dayES=otuFacilityCurrent1dayES, sarLinkTrmtFacilityHistorical15minSES=sarLinkTrmtFacilityHistorical15minSES, rsFacilityCurrent1daySES=rsFacilityCurrent1daySES, dsOptMuxHistorical15minTimeStamp=dsOptMuxHistorical15minTimeStamp, optMuxPhysInstValueAddChanAvg=optMuxPhysInstValueAddChanAvg, facilityDataThresholdSESOtuHT1day=facilityDataThresholdSESOtuHT1day, dcnPhysInstValueOpr=dcnPhysInstValueOpr, frRcv1FacilityCurrent15minDiscardedFrames=frRcv1FacilityCurrent15minDiscardedFrames, muxFacilityCurrent1dayElapsedTime=muxFacilityCurrent1dayElapsedTime, lldpTLVRxFacilityHistorical1dayTimeStamp=lldpTLVRxFacilityHistorical1dayTimeStamp, macErrRxShelfConnectionHistorical1dayCrcErrorsRcv=macErrRxShelfConnectionHistorical1dayCrcErrorsRcv, optMuxPhysInstValueOcmRxLoss=optMuxPhysInstValueOcmRxLoss, optOptMuxHistorical1dayTable=optOptMuxHistorical1dayTable, pcs2FacilityHistorical15minDE=pcs2FacilityHistorical15minDE, pcs3FacilityCurrent1dayElapsedTime=pcs3FacilityCurrent1dayElapsedTime, qfactFacilityHistorical1weekEntry=qfactFacilityHistorical1weekEntry, byteTrmtFacilityCurrent1dayBytesTrmt=byteTrmtFacilityCurrent1dayBytesTrmt, endOfEqptPhysInstValueTable=endOfEqptPhysInstValueTable, atRcvOptMuxHistorical1weekTimeStamp=atRcvOptMuxHistorical1weekTimeStamp, macRxShelfConnectionHistorical1dayEntry=macRxShelfConnectionHistorical1dayEntry, facilityDataThresholdBBETcmcHT1day=facilityDataThresholdBBETcmcHT1day, attrmtOptMuxHistorical1dayLow=attrmtOptMuxHistorical1dayLow, frRcv2ShelfConnectionHistorical1dayNumber=frRcv2ShelfConnectionHistorical1dayNumber, utlTxFacilityHistorical15minUtlMean=utlTxFacilityHistorical15minUtlMean, cdFacilityHistorical1dayNumber=cdFacilityHistorical1dayNumber, lldpTLVRxFacilityCurrent1dayTLVRxDiscards=lldpTLVRxFacilityCurrent1dayTLVRxDiscards, lbcnDcnHistorical1dayHigh=lbcnDcnHistorical1dayHigh, sarLinkTrmtFacilityCurrent15minES=sarLinkTrmtFacilityCurrent15minES, frRcv4FacilityCurrent1dayGoodFrames=frRcv4FacilityCurrent1dayGoodFrames, voltInpEqptHistorical1dayTable=voltInpEqptHistorical1dayTable, oduFacilityCurrent1dayTable=oduFacilityCurrent1dayTable, macSzRxShelfConnectionHistorical15minTable=macSzRxShelfConnectionHistorical15minTable, l2PortRxFacilityCurrent1dayUndersizedFramesRcv=l2PortRxFacilityCurrent1dayUndersizedFramesRcv, macRxDcnHistorical1dayNumber=macRxDcnHistorical1dayNumber, l2PortRxFacilityCurrent15minEntry=l2PortRxFacilityCurrent15minEntry, frTrmt1FacilityHistorical15minPauseFrames=frTrmt1FacilityHistorical15minPauseFrames, oscGainOptMuxHistorical1weekEntry=oscGainOptMuxHistorical1weekEntry, endOfRsFacilityCurrent1dayTable=endOfRsFacilityCurrent1dayTable, lldpFrameTxFacilityHistorical1dayFrameTxErrors=lldpFrameTxFacilityHistorical1dayFrameTxErrors, tcmBFacilityCurrent1dayBbe=tcmBFacilityCurrent1dayBbe, endOfPcsTxFacilityCurrent15minTable=endOfPcsTxFacilityCurrent15minTable, oprOptMuxHistorical1weekTimeStamp=oprOptMuxHistorical1weekTimeStamp, macSzRxShelfConnectionHistorical15minNumber=macSzRxShelfConnectionHistorical15minNumber, facilityPhysThresholdLatencyLowThres=facilityPhysThresholdLatencyLowThres, lldpFrameRxFacilityCurrent1dayElapsedTime=lldpFrameRxFacilityCurrent1dayElapsedTime, cfotFacilityHistorical1dayValidFlag=cfotFacilityHistorical1dayValidFlag, lldpTLVFacilityCurrent1dayAgeOuts=lldpTLVFacilityCurrent1dayAgeOuts, terminPointPhysInstValueOutputPower=terminPointPhysInstValueOutputPower, macRxShelfConnectionHistorical1dayNumber=macRxShelfConnectionHistorical1dayNumber, frRcv1FacilityCurrent1dayDiscardedFrames=frRcv1FacilityCurrent1dayDiscardedFrames, frRcv2DcnCurrent1dayPauseFrames=frRcv2DcnCurrent1dayPauseFrames, macIcRxShelfConnectionCurrent1dayElapsedTime=macIcRxShelfConnectionCurrent1dayElapsedTime, frRcv3FacilityCurrent15minGoodFrames=frRcv3FacilityCurrent15minGoodFrames, dgdFacilityHistorical15minMean=dgdFacilityHistorical15minMean, endOfPumpPwrOptMuxHistorical1dayTable=endOfPumpPwrOptMuxHistorical1dayTable, ampInEqptHistorical15minTable=ampInEqptHistorical15minTable, sFacilityCurrent15minElapsedTime=sFacilityCurrent15minElapsedTime, rndTrpDlyFacilityHistorical1weekTimeStamp=rndTrpDlyFacilityHistorical1weekTimeStamp, gfpfrFacilityHistorical1dayEntry=gfpfrFacilityHistorical1dayEntry, facilityDataThresholdESPcsHT1day=facilityDataThresholdESPcsHT1day, optMuxPhysInstValueTable=optMuxPhysInstValueTable, frRcv2ShelfConnectionCurrent15minEntry=frRcv2ShelfConnectionCurrent15minEntry, optDcnHistorical1weekTimeStamp=optDcnHistorical1weekTimeStamp, rsFacilityHistorical1dayEntry=rsFacilityHistorical1dayEntry, l2PortTxFacilityCurrent1dayTable=l2PortTxFacilityCurrent1dayTable, lldpTLVFacilityHistorical1dayNumber=lldpTLVFacilityHistorical1dayNumber, optMuxPhysThresholdOscPwrRcvLowThres=optMuxPhysThresholdOscPwrRcvLowThres, oscOptOptMuxHistorical1weekValidFlag=oscOptOptMuxHistorical1weekValidFlag, macSzRxShelfConnectionHistorical15minBytesFrames1024Rcv=macSzRxShelfConnectionHistorical15minBytesFrames1024Rcv, macIcTxShelfConnectionCurrent15minFramesTrmt=macIcTxShelfConnectionCurrent15minFramesTrmt, l2PortRxFacilityCurrent15minInterPackJunkBytesFramesRcv=l2PortRxFacilityCurrent15minInterPackJunkBytesFramesRcv, latencyFacilityHistorical1weekTable=latencyFacilityHistorical1weekTable, latencyFacilityHistorical1weekHigh=latencyFacilityHistorical1weekHigh, voltInpEqptHistorical15minValidFlag=voltInpEqptHistorical15minValidFlag, utlTxFacilityHistorical1dayUtlHigh=utlTxFacilityHistorical1dayUtlHigh, frRcv4FacilityHistorical15minBytes=frRcv4FacilityHistorical15minBytes, l2PortRxFacilityCurrent15minOversizedFramesRcv=l2PortRxFacilityCurrent15minOversizedFramesRcv, endOfFec2FacilityHistorical1dayTable=endOfFec2FacilityHistorical1dayTable, frRcv3FacilityCurrent15minTable=frRcv3FacilityCurrent15minTable, oprFacilityHistorical1dayTimeStamp=oprFacilityHistorical1dayTimeStamp, optMuxPhysThresholdOpticalInputPwrHigh=optMuxPhysThresholdOpticalInputPwrHigh, endOfLatencyFacilityHistorical1dayTable=endOfLatencyFacilityHistorical1dayTable, l2PortTxFacilityHistorical1dayBytesFrames1519Trmt=l2PortTxFacilityHistorical1dayBytesFrames1519Trmt, lldpFrameRxFacilityHistorical15minNumber=lldpFrameRxFacilityHistorical15minNumber, rsFacilityHistorical15minEntry=rsFacilityHistorical15minEntry, brOptMuxHistorical1weekHigh=brOptMuxHistorical1weekHigh, frRcv2FacilityHistorical15minPauseFrames=frRcv2FacilityHistorical15minPauseFrames, utlRxFacilityCurrent15minElapsedTime=utlRxFacilityCurrent15minElapsedTime, frRcv2FacilityHistorical1dayPauseFrames=frRcv2FacilityHistorical1dayPauseFrames, atrcvDcnHistorical1dayTimeStamp=atrcvDcnHistorical1dayTimeStamp, pcsRxFacilityCurrent15minCV=pcsRxFacilityCurrent15minCV, frRcv3FacilityHistorical15minNumber=frRcv3FacilityHistorical15minNumber, optOptMuxHistorical1dayHigh=optOptMuxHistorical1dayHigh, oduFacilityHistorical1dayTable=oduFacilityHistorical1dayTable, macErrRxShelfConnectionHistorical1dayEntry=macErrRxShelfConnectionHistorical1dayEntry, frTrmt1FacilityCurrent1dayCrcFramesEgress=frTrmt1FacilityCurrent1dayCrcFramesEgress, utlTxFacilityHistorical15minValidFlag=utlTxFacilityHistorical15minValidFlag, lbcnDcnHistorical1weekValidFlag=lbcnDcnHistorical1weekValidFlag, otuFacilityHistorical15minTimeStamp=otuFacilityHistorical15minTimeStamp, macSzRxShelfConnectionCurrent1dayBytesFrames64Rcv=macSzRxShelfConnectionCurrent1dayBytesFrames64Rcv, macTxDcnCurrent1dayEntry=macTxDcnCurrent1dayEntry, frRcv4FacilityCurrent15minBytes=frRcv4FacilityCurrent15minBytes, muxFacilityHistorical1dayES=muxFacilityHistorical1dayES, oprDcnHistorical15minEntry=oprDcnHistorical15minEntry, endOfOscPwrOptMuxHistorical15minTable=endOfOscPwrOptMuxHistorical15minTable, tcmCFacilityHistorical15minES=tcmCFacilityHistorical15minES, muxFacilityCurrent15minCrc=muxFacilityCurrent15minCrc, frTrmt1FacilityHistorical1dayNumber=frTrmt1FacilityHistorical1dayNumber, macErrRxShelfConnectionCurrent15minOversizedFramesRcv=macErrRxShelfConnectionCurrent15minOversizedFramesRcv, voltInpEqptHistorical15minHigh=voltInpEqptHistorical15minHigh, tcmBFacilityCurrent1dayEntry=tcmBFacilityCurrent1dayEntry, endOfSarLinkRcvFacilityCurrent15minTable=endOfSarLinkRcvFacilityCurrent15minTable, macRxShelfConnectionHistorical1dayBroadcastFramesRcv=macRxShelfConnectionHistorical1dayBroadcastFramesRcv, frRcv2ShelfConnectionHistorical1dayBytes=frRcv2ShelfConnectionHistorical1dayBytes, fecFacilityCurrent15minElapsedTime=fecFacilityCurrent15minElapsedTime, endOfPcsTxFacilityCurrent1dayTable=endOfPcsTxFacilityCurrent1dayTable, lldpFrameTxFacilityHistorical1dayTimeStamp=lldpFrameTxFacilityHistorical1dayTimeStamp, byteTrmtFacilityHistorical1dayTimeStamp=byteTrmtFacilityHistorical1dayTimeStamp, otuFecFacilityCurrent15minBERCE=otuFecFacilityCurrent15minBERCE, oprFacilityHistorical15minLow=oprFacilityHistorical15minLow, ampInEqptHistorical1dayMean=ampInEqptHistorical1dayMean, fec2FacilityCurrent15minTable=fec2FacilityCurrent15minTable, cdcFacilityHistorical1weekValidFlag=cdcFacilityHistorical1weekValidFlag, macSzRxShelfConnectionHistorical15minBytesFrames512Rcv=macSzRxShelfConnectionHistorical15minBytesFrames512Rcv, lFacilityCurrent1dayCV=lFacilityCurrent1dayCV, macIcRxShelfConnectionHistorical1dayCrcErrorsRcv=macIcRxShelfConnectionHistorical1dayCrcErrorsRcv, qfactFacilityHistorical15minTable=qfactFacilityHistorical15minTable, macTxShelfConnectionHistorical1dayBytesTrmt=macTxShelfConnectionHistorical1dayBytesTrmt, brOptMuxHistorical15minEntry=brOptMuxHistorical15minEntry, l2PortRxFacilityCurrent15minFramesRcv=l2PortRxFacilityCurrent15minFramesRcv, macTxDcnHistorical1dayMulticastFramesTrmt=macTxDcnHistorical1dayMulticastFramesTrmt, frRcv2DcnCurrent15minTable=frRcv2DcnCurrent15minTable, endOfSFacilityCurrent1dayTable=endOfSFacilityCurrent1dayTable, frRcv3FacilityHistorical1dayNumber=frRcv3FacilityHistorical1dayNumber, sFacilityCurrent1daySEFS=sFacilityCurrent1daySEFS, latencyFacilityHistorical1weekNumber=latencyFacilityHistorical1weekNumber, frTrmt2FacilityCurrent15minBytes=frTrmt2FacilityCurrent15minBytes, macSzRxShelfConnectionCurrent15minBytesFrames512Rcv=macSzRxShelfConnectionCurrent15minBytesFrames512Rcv, pcsTxFacilityHistorical15minTable=pcsTxFacilityHistorical15minTable, macTxShelfConnectionHistorical15minMulticastFramesTrmt=macTxShelfConnectionHistorical15minMulticastFramesTrmt, pmFacilityPhysical=pmFacilityPhysical, l2PortTxFacilityCurrent15minBytesFrames512Trmt=l2PortTxFacilityCurrent15minBytesFrames512Trmt, frRcv1FacilityCurrent15minGoodFrames=frRcv1FacilityCurrent15minGoodFrames, utlRxFacilityHistorical1dayNumber=utlRxFacilityHistorical1dayNumber, endOfFrTrmt2FacilityCurrent15minTable=endOfFrTrmt2FacilityCurrent15minTable, frRcv3FacilityCurrent1dayBytes=frRcv3FacilityCurrent1dayBytes, frTrmt1FacilityHistorical1dayCrcFramesEgress=frTrmt1FacilityHistorical1dayCrcFramesEgress, fecFacilityHistorical1dayEntry=fecFacilityHistorical1dayEntry, oduFacilityHistorical15minTimeStamp=oduFacilityHistorical15minTimeStamp, lldpTLVTxFacilityHistorical15minTLVTxUnknown=lldpTLVTxFacilityHistorical15minTLVTxUnknown, frRcv3FacilityHistorical15minBytesFrames512Rcv=frRcv3FacilityHistorical15minBytesFrames512Rcv, sarLinkRcvFacilityHistorical1daySES=sarLinkRcvFacilityHistorical1daySES, rndTrpDlyFacilityHistorical15minTimeStamp=rndTrpDlyFacilityHistorical15minTimeStamp, l2PortTxFacilityHistorical1dayBytesFrames1024Trmt=l2PortTxFacilityHistorical1dayBytesFrames1024Trmt, frRcv2DcnCurrent1dayTable=frRcv2DcnCurrent1dayTable, macRxDcnCurrent15minMulticastFramesRcv=macRxDcnCurrent15minMulticastFramesRcv, endOfRsFacilityCurrent15minTable=endOfRsFacilityCurrent15minTable, endOfVoltInpEqptHistorical1dayTable=endOfVoltInpEqptHistorical1dayTable, facilityDataThresholdSESSHT15min=facilityDataThresholdSESSHT15min, cdcFacilityHistorical1dayMean=cdcFacilityHistorical1dayMean, frRcv2FacilityHistorical15minNumber=frRcv2FacilityHistorical15minNumber, pcs4FacilityHistorical1dayBBE=pcs4FacilityHistorical1dayBBE)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", frRcv3FacilityCurrent15minUndersizedFramesRcv=frRcv3FacilityCurrent15minUndersizedFramesRcv, tcmBFacilityHistorical1dayES=tcmBFacilityHistorical1dayES, optMuxPhysInstValuePumpLaser2Temp=optMuxPhysInstValuePumpLaser2Temp, lFacilityCurrent1dayTable=lFacilityCurrent1dayTable, l2PortTxFacilityCurrent1dayMulticastFramesTrmt=l2PortTxFacilityCurrent1dayMulticastFramesTrmt, msFacilityHistorical15minTable=msFacilityHistorical15minTable, lldpTLVRxFacilityCurrent1dayEntry=lldpTLVRxFacilityCurrent1dayEntry, frRcv3FacilityCurrent1dayBytesFrames65Rcv=frRcv3FacilityCurrent1dayBytesFrames65Rcv, pcsTxFacilityHistorical15minESTX=pcsTxFacilityHistorical15minESTX, optMuxPhysInstValuePumpLaserBiasCurrent3=optMuxPhysInstValuePumpLaserBiasCurrent3, ampEqptHistorical1weekEntry=ampEqptHistorical1weekEntry, frRcv4FacilityHistorical15minNumber=frRcv4FacilityHistorical15minNumber, atrcvDcnHistorical1dayValidFlag=atrcvDcnHistorical1dayValidFlag, optOptMuxHistorical15minHigh=optOptMuxHistorical15minHigh, lldpFrameRxFacilityCurrent15minFrameRxErrors=lldpFrameRxFacilityCurrent15minFrameRxErrors, endOfPcs3FacilityCurrent15minTable=endOfPcs3FacilityCurrent15minTable, dcnPhysThresholdOprHigh=dcnPhysThresholdOprHigh, ampInEqptHistorical15minLow=ampInEqptHistorical15minLow, endOfLldpTLVFacilityCurrent1dayTable=endOfLldpTLVFacilityCurrent1dayTable, macErrRxShelfConnectionCurrent15minCrcErrorsRcv=macErrRxShelfConnectionCurrent15minCrcErrorsRcv, frRcv3FacilityCurrent15minBytes=frRcv3FacilityCurrent15minBytes, ampInEqptHistorical1weekHigh=ampInEqptHistorical1weekHigh, fecFacilityHistorical15minValidFlag=fecFacilityHistorical15minValidFlag, ampEqptHistorical1weekMean=ampEqptHistorical1weekMean, utlTxFacilityCurrent1dayUtlHigh=utlTxFacilityCurrent1dayUtlHigh, tcmCFacilityHistorical15minSES=tcmCFacilityHistorical15minSES, pcsTxFacilityHistorical15minValidFlag=pcsTxFacilityHistorical15minValidFlag, rsFacilityHistorical1daySES=rsFacilityHistorical1daySES, cfotFacilityHistorical1dayEntry=cfotFacilityHistorical1dayEntry, pumpPwrOptMuxHistorical1dayValidFlag=pumpPwrOptMuxHistorical1dayValidFlag, sarLinkRcvFacilityCurrent15minElapsedTime=sarLinkRcvFacilityCurrent15minElapsedTime, oprDcnHistorical1weekNumber=oprDcnHistorical1weekNumber, macErrRxDcnHistorical15minUndersizedFramesRcv=macErrRxDcnHistorical15minUndersizedFramesRcv, qfactFacilityHistorical15minNumber=qfactFacilityHistorical15minNumber, checfrFacilityCurrent15minTypeHecCorrectedFrames=checfrFacilityCurrent15minTypeHecCorrectedFrames, pcs4FacilityCurrent15minTable=pcs4FacilityCurrent15minTable, lFacilityHistorical1daySES=lFacilityHistorical1daySES, oscPwrOptMuxHistorical1dayTable=oscPwrOptMuxHistorical1dayTable, endOfPmDcnPhysRecord=endOfPmDcnPhysRecord, frRcv4FacilityCurrent1dayBytes=frRcv4FacilityCurrent1dayBytes, gfpfrFacilityCurrent1dayCHecDiscardedFrames=gfpfrFacilityCurrent1dayCHecDiscardedFrames, frRcv2ShelfConnectionCurrent15minCrcFrames=frRcv2ShelfConnectionCurrent15minCrcFrames, frRcv3FacilityHistorical1dayBytesFrames512Rcv=frRcv3FacilityHistorical1dayBytesFrames512Rcv, endOfPmEqptPhysValue=endOfPmEqptPhysValue, checfrFacilityCurrent15minTypeHecDiscardedFrames=checfrFacilityCurrent15minTypeHecDiscardedFrames, endOfAmpEqptHistorical15minTable=endOfAmpEqptHistorical15minTable, otuFacilityCurrent15minUAS=otuFacilityCurrent15minUAS, msFacilityCurrent15minES=msFacilityCurrent15minES, ampInEqptHistorical1weekNumber=ampInEqptHistorical1weekNumber, frRcv1FacilityCurrent1dayEntry=frRcv1FacilityCurrent1dayEntry, endOfAtRcvOptMuxHistorical1weekTable=endOfAtRcvOptMuxHistorical1weekTable, fecFacilityHistorical1daySES=fecFacilityHistorical1daySES, sarLinkTrmtFacilityHistorical1dayNumber=sarLinkTrmtFacilityHistorical1dayNumber, pcs4FacilityHistorical1dayTimeStamp=pcs4FacilityHistorical1dayTimeStamp, oprFacilityHistorical15minTable=oprFacilityHistorical15minTable, frRcv2FacilityCurrent15minPauseFrames=frRcv2FacilityCurrent15minPauseFrames, ampEqptHistorical1dayEntry=ampEqptHistorical1dayEntry, endOfPcsRxFacilityHistorical1dayTable=endOfPcsRxFacilityHistorical1dayTable, fecFacilityHistorical1dayTable=fecFacilityHistorical1dayTable, cdcFacilityHistorical1weekMean=cdcFacilityHistorical1weekMean, frRcv2DcnCurrent15minCrcFrames=frRcv2DcnCurrent15minCrcFrames, endOfFrRcv2DcnCurrent15minTable=endOfFrRcv2DcnCurrent15minTable, macTxDcnHistorical1dayEntry=macTxDcnHistorical1dayEntry, macErrRxDcnHistorical1dayNumber=macErrRxDcnHistorical1dayNumber, qfactFacilityHistorical1weekTable=qfactFacilityHistorical1weekTable, macRxDcnCurrent15minElapsedTime=macRxDcnCurrent15minElapsedTime, atRcvOptMuxHistorical1dayEntry=atRcvOptMuxHistorical1dayEntry, snrFacilityHistorical15minEntry=snrFacilityHistorical15minEntry, macSzRxDcnHistorical15minBytesFrames65Rcv=macSzRxDcnHistorical15minBytesFrames65Rcv, rsFacilityHistorical15minValidFlag=rsFacilityHistorical15minValidFlag, frRcv2ShelfConnectionHistorical1dayValidFlag=frRcv2ShelfConnectionHistorical1dayValidFlag, utlRxFacilityHistorical15minTable=utlRxFacilityHistorical15minTable, endOfLldpFrameFacilityCurrent15minTable=endOfLldpFrameFacilityCurrent15minTable, muxFacilityHistorical1dayNumber=muxFacilityHistorical1dayNumber, macTxDcnCurrent1dayBroadcastFramesTrmt=macTxDcnCurrent1dayBroadcastFramesTrmt, macErrRxShelfConnectionCurrent15minEntry=macErrRxShelfConnectionCurrent15minEntry, dsOptMuxCurrent15minTable=dsOptMuxCurrent15minTable, sarLinkRcvFacilityCurrent15minEntry=sarLinkRcvFacilityCurrent15minEntry, facilityDataThresholdSESTcmaHT1day=facilityDataThresholdSESTcmaHT1day, endOfOscOptOptMuxHistorical1weekTable=endOfOscOptOptMuxHistorical1weekTable, pcs4FacilityHistorical15minBBE=pcs4FacilityHistorical15minBBE, rsFacilityHistorical1dayTable=rsFacilityHistorical1dayTable, voltInpEqptHistorical15minNumber=voltInpEqptHistorical15minNumber, optDcnHistorical1dayValidFlag=optDcnHistorical1dayValidFlag, oscPwrOptMuxHistorical15minTable=oscPwrOptMuxHistorical15minTable, oscPwrOptMuxHistorical1dayMean=oscPwrOptMuxHistorical1dayMean, endOfPcs2FacilityHistorical1dayTable=endOfPcs2FacilityHistorical1dayTable, atrcvDcnHistorical1weekHigh=atrcvDcnHistorical1weekHigh, facilityDataThresholdESLHT15min=facilityDataThresholdESLHT15min, dgdFacilityHistorical1weekValidFlag=dgdFacilityHistorical1weekValidFlag, l2PortTxFacilityCurrent1dayBytesFrames256Trmt=l2PortTxFacilityCurrent1dayBytesFrames256Trmt, frRcv4FacilityHistorical15minTable=frRcv4FacilityHistorical15minTable, sFacilityCurrent1dayTable=sFacilityCurrent1dayTable, endOfOscGainOptMuxHistorical1dayTable=endOfOscGainOptMuxHistorical1dayTable, ampInEqptHistorical15minMean=ampInEqptHistorical15minMean, tcmBFacilityHistorical1dayTimeStamp=tcmBFacilityHistorical1dayTimeStamp, dgdFacilityHistorical15minTable=dgdFacilityHistorical15minTable, macIcRxShelfConnectionHistorical15minTimeStamp=macIcRxShelfConnectionHistorical15minTimeStamp, frRcv2ShelfConnectionHistorical15minCrcFrames=frRcv2ShelfConnectionHistorical15minCrcFrames, l2PortTxFacilityCurrent1dayBytesFrames65Trmt=l2PortTxFacilityCurrent1dayBytesFrames65Trmt, frRcv3FacilityHistorical15minGoodFrames=frRcv3FacilityHistorical15minGoodFrames, macTxDcnCurrent15minEntry=macTxDcnCurrent15minEntry, tcmAFacilityHistorical15minES=tcmAFacilityHistorical15minES, fecFacilityHistorical15minCE=fecFacilityHistorical15minCE, checfrFacilityCurrent1dayTypeHecDiscardedFrames=checfrFacilityCurrent1dayTypeHecDiscardedFrames, facilityDataThresholdCRCFrRcvHT15min=facilityDataThresholdCRCFrRcvHT15min, pcs2FacilityCurrent15minEntry=pcs2FacilityCurrent15minEntry, oprFacilityHistorical1weekLow=oprFacilityHistorical1weekLow, oscPwrOptMuxHistorical15minNumber=oscPwrOptMuxHistorical15minNumber, tcmAFacilityHistorical1dayES=tcmAFacilityHistorical1dayES, frRcv3FacilityCurrent1dayCrcFrames=frRcv3FacilityCurrent1dayCrcFrames, endOfOduFacilityCurrent15minTable=endOfOduFacilityCurrent15minTable, endOfPmDcnPhysValue=endOfPmDcnPhysValue, macIcTxShelfConnectionHistorical1dayTimeStamp=macIcTxShelfConnectionHistorical1dayTimeStamp, pcs3FacilityCurrent15minElapsedTime=pcs3FacilityCurrent15minElapsedTime, facilityDataThresholdSESTcmbHT15min=facilityDataThresholdSESTcmbHT15min, rsFacilityCurrent15minSEFS=rsFacilityCurrent15minSEFS, macRxDcnHistorical15minEntry=macRxDcnHistorical15minEntry, discsBlockFacilityHistorical15minNumber=discsBlockFacilityHistorical15minNumber, tcmAFacilityHistorical1dayUAS=tcmAFacilityHistorical1dayUAS, lldpTLVFacilityCurrent15minEntry=lldpTLVFacilityCurrent15minEntry, endOfLatencyFacilityHistorical15minTable=endOfLatencyFacilityHistorical15minTable, macTxShelfConnectionHistorical15minBroadcastFramesTrmt=macTxShelfConnectionHistorical15minBroadcastFramesTrmt, l2PortTxFacilityHistorical1dayBroadcastFramesTrmt=l2PortTxFacilityHistorical1dayBroadcastFramesTrmt, lldpTLVRxFacilityCurrent1dayTable=lldpTLVRxFacilityCurrent1dayTable, lbcnFacilityHistorical1dayHigh=lbcnFacilityHistorical1dayHigh, discsBlockFacilityHistorical1dayNumber=discsBlockFacilityHistorical1dayNumber, brOptMuxHistorical1dayTimeStamp=brOptMuxHistorical1dayTimeStamp, tcmAFacilityCurrent15minES=tcmAFacilityCurrent15minES, otuFacilityCurrent1dayTable=otuFacilityCurrent1dayTable, ampInEqptHistorical1weekEntry=ampInEqptHistorical1weekEntry, checfrFacilityHistorical15minTable=checfrFacilityHistorical15minTable, macTxShelfConnectionCurrent15minMulticastFramesTrmt=macTxShelfConnectionCurrent15minMulticastFramesTrmt, macSzRxShelfConnectionCurrent1dayEntry=macSzRxShelfConnectionCurrent1dayEntry, optMuxPhysThresholdPumpLaser3TempLowThres=optMuxPhysThresholdPumpLaser3TempLowThres, l2PortTxFacilityHistorical1dayEntry=l2PortTxFacilityHistorical1dayEntry, pcsTxFacilityCurrent15minBBETX=pcsTxFacilityCurrent15minBBETX, frRcv2DcnCurrent15minGoodFrames=frRcv2DcnCurrent15minGoodFrames, l2PortRxFacilityHistorical1dayUndersizedFramesRcv=l2PortRxFacilityHistorical1dayUndersizedFramesRcv, eqptPhysInstValuePwrUse=eqptPhysInstValuePwrUse, oduFacilityHistorical1dayValidFlag=oduFacilityHistorical1dayValidFlag, sarLinkRcvFacilityHistorical1dayEntry=sarLinkRcvFacilityHistorical1dayEntry, otuFacilityHistorical1dayTimeStamp=otuFacilityHistorical1dayTimeStamp, dgdFacilityHistorical15minNumber=dgdFacilityHistorical15minNumber, pcsTxFacilityHistorical1dayNumber=pcsTxFacilityHistorical1dayNumber, l2PortTxFacilityHistorical15minBytesTrmt=l2PortTxFacilityHistorical15minBytesTrmt, fecFacilityCurrent15minUBE=fecFacilityCurrent15minUBE, l2PortRxFacilityCurrent1dayMulticastFramesRcv=l2PortRxFacilityCurrent1dayMulticastFramesRcv, macSzRxShelfConnectionHistorical1dayBytesFrames256Rcv=macSzRxShelfConnectionHistorical1dayBytesFrames256Rcv, oduFacilityCurrent1dayElapsedTime=oduFacilityCurrent1dayElapsedTime, fecFacilityCurrent15minTable=fecFacilityCurrent15minTable, sarLinkRcvFacilityHistorical15minEntry=sarLinkRcvFacilityHistorical15minEntry, tcmBFacilityHistorical1dayUAS=tcmBFacilityHistorical1dayUAS, facilityDataThresholdBBETcmbHT1day=facilityDataThresholdBBETcmbHT1day, endOfGfpfrFacilityHistorical1dayTable=endOfGfpfrFacilityHistorical1dayTable, rsFacilityCurrent15minOOFS=rsFacilityCurrent15minOOFS, facilityDataThresholdESOtuHT15min=facilityDataThresholdESOtuHT15min, tcmAFacilityCurrent15minBbe=tcmAFacilityCurrent15minBbe, macErrRxDcnCurrent1dayEntry=macErrRxDcnCurrent1dayEntry, oprDcnHistorical1dayMean=oprDcnHistorical1dayMean, gfpfrFacilityCurrent1dayGoodFrames=gfpfrFacilityCurrent1dayGoodFrames, atrcvDcnHistorical1weekLow=atrcvDcnHistorical1weekLow, oduFacilityHistorical1daySES=oduFacilityHistorical1daySES, optDcnHistorical15minNumber=optDcnHistorical15minNumber, frRcv3FacilityHistorical1dayUndersizedFramesRcv=frRcv3FacilityHistorical1dayUndersizedFramesRcv, voltInpEqptHistorical1weekLow=voltInpEqptHistorical1weekLow, frTrmt2FacilityHistorical15minBytes=frTrmt2FacilityHistorical15minBytes, optMuxPhysThresholdPumpLaser1TempHighThres=optMuxPhysThresholdPumpLaser1TempHighThres, byteTrmtFacilityHistorical1dayTable=byteTrmtFacilityHistorical1dayTable, checfrFacilityHistorical15minTimeStamp=checfrFacilityHistorical15minTimeStamp, brTxOptMuxHistorical15minLow=brTxOptMuxHistorical15minLow, tcmBFacilityHistorical15minValidFlag=tcmBFacilityHistorical15minValidFlag, frTrmt2FacilityHistorical1dayEntry=frTrmt2FacilityHistorical1dayEntry, atRcvOptMuxHistorical1weekNumber=atRcvOptMuxHistorical1weekNumber, endOfMacRxShelfConnectionCurrent15minTable=endOfMacRxShelfConnectionCurrent15minTable, pcsRxFacilityHistorical1dayCV=pcsRxFacilityHistorical1dayCV, frRcv1FacilityHistorical15minCrcFrames=frRcv1FacilityHistorical15minCrcFrames, PYSNMP_MODULE_ID=advaFspR7Pm, ampInEqptHistorical15minValidFlag=ampInEqptHistorical15minValidFlag, endOfCdcFacilityHistorical15minTable=endOfCdcFacilityHistorical15minTable, optMuxPhysInstValueOscGain=optMuxPhysInstValueOscGain, oscOptOptMuxHistorical1weekTable=oscOptOptMuxHistorical1weekTable, lldpTLVFacilityHistorical15minAgeOuts=lldpTLVFacilityHistorical15minAgeOuts, rndTrpDlyFacilityHistorical1dayNumber=rndTrpDlyFacilityHistorical1dayNumber, macSzRxDcnHistorical1dayBytesFrames64Rcv=macSzRxDcnHistorical1dayBytesFrames64Rcv, tcmBFacilityHistorical15minEntry=tcmBFacilityHistorical15minEntry, endOfPcs4FacilityHistorical15minTable=endOfPcs4FacilityHistorical15minTable, lldpTLVFacilityCurrent15minTLVDiscards=lldpTLVFacilityCurrent15minTLVDiscards, oscGainOptMuxHistorical15minTimeStamp=oscGainOptMuxHistorical15minTimeStamp, discsBlockFacilityCurrent15minEntry=discsBlockFacilityCurrent15minEntry, pcsRxFacilityCurrent15minEntry=pcsRxFacilityCurrent15minEntry, endOfEqptPhysThresholdTable=endOfEqptPhysThresholdTable, sarLinkTrmtFacilityHistorical1dayEntry=sarLinkTrmtFacilityHistorical1dayEntry, skewFacilityHistorical1weekNumber=skewFacilityHistorical1weekNumber, pcsRxFacilityHistorical15minTimeStamp=pcsRxFacilityHistorical15minTimeStamp, facilityPhysThresholdConfigOpticalOutputPwrLow=facilityPhysThresholdConfigOpticalOutputPwrLow, tcmBFacilityCurrent15minUAS=tcmBFacilityCurrent15minUAS, rsFacilityCurrent1dayEntry=rsFacilityCurrent1dayEntry, endOfMacIcRxShelfConnectionCurrent1dayTable=endOfMacIcRxShelfConnectionCurrent1dayTable, muxFacilityHistorical15minValidFlag=muxFacilityHistorical15minValidFlag, l2PortRxFacilityHistorical1dayBroadcastFramesRcv=l2PortRxFacilityHistorical1dayBroadcastFramesRcv, frRcv1FacilityCurrent15minTable=frRcv1FacilityCurrent15minTable, msFacilityCurrent1dayUAS=msFacilityCurrent1dayUAS, pcs3FacilityCurrent1dayES=pcs3FacilityCurrent1dayES, byteTrmtFacilityHistorical1dayNumber=byteTrmtFacilityHistorical1dayNumber, oprFacilityHistorical1weekMean=oprFacilityHistorical1weekMean, gfpfrFacilityCurrent1dayElapsedTime=gfpfrFacilityCurrent1dayElapsedTime, discsBlockFacilityHistorical1dayTimeStamp=discsBlockFacilityHistorical1dayTimeStamp, endOfFrRcv1FacilityHistorical15minTable=endOfFrRcv1FacilityHistorical15minTable, frTrmt2FacilityHistorical15minNumber=frTrmt2FacilityHistorical15minNumber, lbcnFacilityHistorical1dayValidFlag=lbcnFacilityHistorical1dayValidFlag, macTxShelfConnectionCurrent1dayDiscardedFramesTrmt=macTxShelfConnectionCurrent1dayDiscardedFramesTrmt, facilityPhysThresholdChromaticDispersionLow=facilityPhysThresholdChromaticDispersionLow, endOfAtRcvOptMuxHistorical15minTable=endOfAtRcvOptMuxHistorical15minTable, macErrRxShelfConnectionHistorical1dayOversizedFramesRcv=macErrRxShelfConnectionHistorical1dayOversizedFramesRcv, endOfOprDcnHistorical1dayTable=endOfOprDcnHistorical1dayTable, skewFacilityHistorical1dayMean=skewFacilityHistorical1dayMean, cdFacilityHistorical15minTimeStamp=cdFacilityHistorical15minTimeStamp, frRcv2DcnCurrent1dayCrcFrames=frRcv2DcnCurrent1dayCrcFrames, pcsTxFacilityCurrent15minElapsedTime=pcsTxFacilityCurrent15minElapsedTime, macRxShelfConnectionCurrent1dayElapsedTime=macRxShelfConnectionCurrent1dayElapsedTime, endOfFrRcv2FacilityHistorical15minTable=endOfFrRcv2FacilityHistorical15minTable, tcmAFacilityCurrent15minTable=tcmAFacilityCurrent15minTable, macSzRxDcnHistorical1dayEntry=macSzRxDcnHistorical1dayEntry, oprOptMuxHistorical1dayValidFlag=oprOptMuxHistorical1dayValidFlag, pmTerminPointDataRecord=pmTerminPointDataRecord, macTxShelfConnectionHistorical1dayEntry=macTxShelfConnectionHistorical1dayEntry, endOfPcs1FacilityHistorical15minTable=endOfPcs1FacilityHistorical15minTable, frRcv3FacilityHistorical15minBytesFrames65Rcv=frRcv3FacilityHistorical15minBytesFrames65Rcv, utlTxFacilityHistorical15minNumber=utlTxFacilityHistorical15minNumber, lldpTLVFacilityHistorical1dayEntry=lldpTLVFacilityHistorical1dayEntry, macRxShelfConnectionHistorical15minNumber=macRxShelfConnectionHistorical15minNumber, voltInpEqptHistorical15minEntry=voltInpEqptHistorical15minEntry, pcs1FacilityHistorical1dayNumber=pcs1FacilityHistorical1dayNumber, fec2FacilityCurrent1dayElapsedTime=fec2FacilityCurrent1dayElapsedTime, oscGainOptMuxHistorical1weekMean=oscGainOptMuxHistorical1weekMean, ampEqptHistorical15minEntry=ampEqptHistorical15minEntry, macTxDcnHistorical1dayDiscardedFramesTrmt=macTxDcnHistorical1dayDiscardedFramesTrmt, frRcv1FacilityHistorical15minGoodFrames=frRcv1FacilityHistorical15minGoodFrames, pcs1FacilityCurrent1dayEntry=pcs1FacilityCurrent1dayEntry, lbcnFacilityHistorical1weekTimeStamp=lbcnFacilityHistorical1weekTimeStamp, macSzRxDcnHistorical1dayBytesFrames128Rcv=macSzRxDcnHistorical1dayBytesFrames128Rcv, macTxShelfConnectionHistorical15minEntry=macTxShelfConnectionHistorical15minEntry, optMuxPhysThresholdAttTxLow=optMuxPhysThresholdAttTxLow, lldpFrameTxFacilityHistorical15minLLDPFramesTx=lldpFrameTxFacilityHistorical15minLLDPFramesTx, l2PortRxFacilityHistorical15minBroadcastFramesRcv=l2PortRxFacilityHistorical15minBroadcastFramesRcv, macIcTxShelfConnectionCurrent1dayFramesTrmt=macIcTxShelfConnectionCurrent1dayFramesTrmt, msFacilityCurrent1daySES=msFacilityCurrent1daySES, endOfTcmCFacilityCurrent1dayTable=endOfTcmCFacilityCurrent1dayTable, endOfFrRcv2ShelfConnectionHistorical1dayTable=endOfFrRcv2ShelfConnectionHistorical1dayTable, endOfQfactFacilityHistorical15minTable=endOfQfactFacilityHistorical15minTable, pcs2FacilityHistorical15minEntry=pcs2FacilityHistorical15minEntry, l2PortRxFacilityHistorical15minTable=l2PortRxFacilityHistorical15minTable, facilityDataThresholdSEPcsHT1day=facilityDataThresholdSEPcsHT1day)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", optMuxPhysInstValueOutputPowerEsmt=optMuxPhysInstValueOutputPowerEsmt, optFacilityHistorical1weekEntry=optFacilityHistorical1weekEntry, cfotFacilityHistorical1weekTimeStamp=cfotFacilityHistorical1weekTimeStamp, msFacilityCurrent15minElapsedTime=msFacilityCurrent15minElapsedTime, endOfFrRcv3FacilityCurrent15minTable=endOfFrRcv3FacilityCurrent15minTable, lldpFrameFacilityCurrent15minElapsedTime=lldpFrameFacilityCurrent15minElapsedTime, attrmtOptMuxHistorical15minNumber=attrmtOptMuxHistorical15minNumber, optMuxPhysThresholdbrtxHighConfig=optMuxPhysThresholdbrtxHighConfig, oprOptMuxHistorical1dayTimeStamp=oprOptMuxHistorical1dayTimeStamp, frRcv4FacilityHistorical1dayValidFlag=frRcv4FacilityHistorical1dayValidFlag, facilityDataThresholdUBEFecHT1day=facilityDataThresholdUBEFecHT1day, sFacilityHistorical15minTable=sFacilityHistorical15minTable, lldpTLVTxFacilityCurrent15minTLVTxDiscards=lldpTLVTxFacilityCurrent15minTLVTxDiscards, eqptPhysThresholdPwrConsumptionHigh=eqptPhysThresholdPwrConsumptionHigh, pcsTxFacilityHistorical15minCVTX=pcsTxFacilityHistorical15minCVTX, macTxDcnCurrent15minMulticastFramesTrmt=macTxDcnCurrent15minMulticastFramesTrmt, frRcv3FacilityHistorical15minBroadcastFramesRcv=frRcv3FacilityHistorical15minBroadcastFramesRcv, optFacilityHistorical15minTimeStamp=optFacilityHistorical15minTimeStamp, dsOptMuxHistorical15minNumber=dsOptMuxHistorical15minNumber, endOfSnrFacilityHistorical15minTable=endOfSnrFacilityHistorical15minTable, macSzRxDcnCurrent1dayBytesFrames512Rcv=macSzRxDcnCurrent1dayBytesFrames512Rcv, ampEqptHistorical1weekNumber=ampEqptHistorical1weekNumber, facilityDataThresholdESPcsHT15min=facilityDataThresholdESPcsHT15min, frTrmt1FacilityCurrent1dayPauseFrames=frTrmt1FacilityCurrent1dayPauseFrames, utlTxFacilityHistorical1dayEntry=utlTxFacilityHistorical1dayEntry, dcnPhysInstValueEntry=dcnPhysInstValueEntry, rsFacilityHistorical1dayTimeStamp=rsFacilityHistorical1dayTimeStamp, pmTerminPointPhysical=pmTerminPointPhysical, eqptPhysThresholdLaserTempLowThres=eqptPhysThresholdLaserTempLowThres, macSzRxDcnHistorical1dayBytesFrames1024Rcv=macSzRxDcnHistorical1dayBytesFrames1024Rcv, frTrmt2FacilityCurrent1dayElapsedTime=frTrmt2FacilityCurrent1dayElapsedTime, endOfUtlRxFacilityHistorical15minTable=endOfUtlRxFacilityHistorical15minTable, tcmBFacilityHistorical1dayBbe=tcmBFacilityHistorical1dayBbe, frRcv1FacilityCurrent1dayBytes=frRcv1FacilityCurrent1dayBytes, sarLinkRcvFacilityHistorical15minNumber=sarLinkRcvFacilityHistorical15minNumber, dcnPhysInstValueFiberLength=dcnPhysInstValueFiberLength, pcs4FacilityHistorical15minTimeStamp=pcs4FacilityHistorical15minTimeStamp, frTrmt1FacilityCurrent15minGoodFramesx=frTrmt1FacilityCurrent15minGoodFramesx, rsFacilityCurrent1daySEFS=rsFacilityCurrent1daySEFS, dsOptMuxHistorical15minTable=dsOptMuxHistorical15minTable, fec2FacilityCurrent1dayBERCE=fec2FacilityCurrent1dayBERCE, oprOptMuxHistorical1dayMean=oprOptMuxHistorical1dayMean, skewFacilityHistorical15minValidFlag=skewFacilityHistorical15minValidFlag, endOfLFacilityHistorical1dayTable=endOfLFacilityHistorical1dayTable, skewFacilityHistorical1weekValidFlag=skewFacilityHistorical1weekValidFlag, optMuxPhysInstValueOscPowerReceived=optMuxPhysInstValueOscPowerReceived, discsBlockFacilityCurrent15minDiscardedSuperblocks=discsBlockFacilityCurrent15minDiscardedSuperblocks, oscGainOptMuxHistorical15minLow=oscGainOptMuxHistorical15minLow, eqptPhysInstValuePsuVoltInp=eqptPhysInstValuePsuVoltInp, l2PortRxFacilityHistorical1dayOversizedFramesRcv=l2PortRxFacilityHistorical1dayOversizedFramesRcv, estSigGainOptMuxHistorical1dayTimeStamp=estSigGainOptMuxHistorical1dayTimeStamp, frRcv3FacilityHistorical1dayBytes=frRcv3FacilityHistorical1dayBytes, eqptPhysInstValueWattOut=eqptPhysInstValueWattOut, snrFacilityHistorical1weekNumber=snrFacilityHistorical1weekNumber, utlTxFacilityHistorical1dayTable=utlTxFacilityHistorical1dayTable, pcsRxFacilityHistorical15minBBE=pcsRxFacilityHistorical15minBBE, brOptMuxHistorical1weekTable=brOptMuxHistorical1weekTable, eqptPhysInstValueMaxOutThres=eqptPhysInstValueMaxOutThres, oprDcnHistorical15minTable=oprDcnHistorical15minTable, otuFecFacilityHistorical1dayNumber=otuFecFacilityHistorical1dayNumber, discsBlockFacilityHistorical15minValidFlag=discsBlockFacilityHistorical15minValidFlag, endOfOptDcnHistorical1dayTable=endOfOptDcnHistorical1dayTable, frRcv2FacilityCurrent1dayTable=frRcv2FacilityCurrent1dayTable, endOfLldpTLVFacilityHistorical15minTable=endOfLldpTLVFacilityHistorical15minTable, endOfQfactFacilityHistorical1dayTable=endOfQfactFacilityHistorical1dayTable, endOfSarLinkRcvFacilityHistorical1dayTable=endOfSarLinkRcvFacilityHistorical1dayTable, qfactFacilityHistorical1weekHigh=qfactFacilityHistorical1weekHigh, lldpTLVRxFacilityCurrent15minTable=lldpTLVRxFacilityCurrent15minTable, oprDcnHistorical15minTimeStamp=oprDcnHistorical15minTimeStamp, optDcnHistorical1weekTable=optDcnHistorical1weekTable, endOfMacRxDcnCurrent1dayTable=endOfMacRxDcnCurrent1dayTable, endOfBrOptMuxHistorical1weekTable=endOfBrOptMuxHistorical1weekTable, macIcTxShelfConnectionHistorical15minEntry=macIcTxShelfConnectionHistorical15minEntry, endOfLldpFrameRxFacilityHistorical15minTable=endOfLldpFrameRxFacilityHistorical15minTable, macRxDcnCurrent1dayEntry=macRxDcnCurrent1dayEntry, tcmAFacilityHistorical1dayTimeStamp=tcmAFacilityHistorical1dayTimeStamp, sFacilityCurrent15minTable=sFacilityCurrent15minTable, atrcvDcnHistorical1weekTimeStamp=atrcvDcnHistorical1weekTimeStamp, frRcv3FacilityHistorical15minPauseFrames=frRcv3FacilityHistorical15minPauseFrames, macTxDcnHistorical15minBytesTrmt=macTxDcnHistorical15minBytesTrmt, endOfFrRcv2DcnCurrent1dayTable=endOfFrRcv2DcnCurrent1dayTable, frRcv3FacilityCurrent1dayBytesFrames1024Rcv=frRcv3FacilityCurrent1dayBytesFrames1024Rcv, sarLinkTrmtFacilityCurrent15minElapsedTime=sarLinkTrmtFacilityCurrent15minElapsedTime, endOfUtlRxFacilityCurrent15minTable=endOfUtlRxFacilityCurrent15minTable, lldpTLVRxFacilityHistorical1dayTLVRxDiscards=lldpTLVRxFacilityHistorical1dayTLVRxDiscards, qfactFacilityHistorical1dayHigh=qfactFacilityHistorical1dayHigh, pcs2FacilityHistorical15minCV=pcs2FacilityHistorical15minCV, l2PortTxFacilityCurrent15minEntry=l2PortTxFacilityCurrent15minEntry, l2PortRxFacilityCurrent1dayCrcErrorsRcv=l2PortRxFacilityCurrent1dayCrcErrorsRcv, frRcv2DcnHistorical15minNumber=frRcv2DcnHistorical15minNumber, endOfPmFacilityPhysRecord=endOfPmFacilityPhysRecord, frRcv1FacilityHistorical15minTable=frRcv1FacilityHistorical15minTable, tcmCFacilityHistorical1dayNumber=tcmCFacilityHistorical1dayNumber, dgdFacilityHistorical15minValidFlag=dgdFacilityHistorical15minValidFlag, eqptPhysInstValueFanSpeed=eqptPhysInstValueFanSpeed, cdcFacilityHistorical1dayValidFlag=cdcFacilityHistorical1dayValidFlag, oprDcnHistorical1dayTimeStamp=oprDcnHistorical1dayTimeStamp, byteTrmtFacilityHistorical1dayCrcFramesEgress=byteTrmtFacilityHistorical1dayCrcFramesEgress, fecFacilityCurrent15minSES=fecFacilityCurrent15minSES, macIcTxShelfConnectionHistorical1dayNumber=macIcTxShelfConnectionHistorical1dayNumber, dcnPhysInstValuelbcn=dcnPhysInstValuelbcn, sFacilityCurrent15minSES=sFacilityCurrent15minSES, atRcvOptMuxHistorical1dayTimeStamp=atRcvOptMuxHistorical1dayTimeStamp, estSigGainOptMuxHistorical15minTable=estSigGainOptMuxHistorical15minTable, otuFecFacilityCurrent1daySES=otuFecFacilityCurrent1daySES, macIcRxShelfConnectionCurrent1dayTable=macIcRxShelfConnectionCurrent1dayTable, macRxDcnHistorical1dayEntry=macRxDcnHistorical1dayEntry, pcsTxFacilityHistorical15minBBETX=pcsTxFacilityHistorical15minBBETX, dcnPhysThresholdTable=dcnPhysThresholdTable, fecFacilityHistorical1dayValidFlag=fecFacilityHistorical1dayValidFlag, optDcnHistorical1weekNumber=optDcnHistorical1weekNumber, sarLinkRcvFacilityCurrent15minSES=sarLinkRcvFacilityCurrent15minSES, optFacilityHistorical1dayTable=optFacilityHistorical1dayTable, frTrmt2FacilityCurrent1dayDiscardedFrames=frTrmt2FacilityCurrent1dayDiscardedFrames, oscOptOptMuxHistorical1dayLow=oscOptOptMuxHistorical1dayLow, endOfFrTrmt1FacilityHistorical1dayTable=endOfFrTrmt1FacilityHistorical1dayTable, dgdFacilityHistorical1weekMean=dgdFacilityHistorical1weekMean, gfpfrFacilityCurrent15minEntry=gfpfrFacilityCurrent15minEntry, sFacilityHistorical15minEntry=sFacilityHistorical15minEntry, rsFacilityCurrent1dayES=rsFacilityCurrent1dayES, optFacilityHistorical1weekNumber=optFacilityHistorical1weekNumber, attrmtOptMuxHistorical15minValidFlag=attrmtOptMuxHistorical15minValidFlag, otuFecFacilityHistorical15minSES=otuFecFacilityHistorical15minSES, sarLinkTrmtFacilityCurrent15minSES=sarLinkTrmtFacilityCurrent15minSES, endOfOptFacilityHistorical1weekTable=endOfOptFacilityHistorical1weekTable, atrcvDcnHistorical1dayEntry=atrcvDcnHistorical1dayEntry, latencyFacilityHistorical1weekLow=latencyFacilityHistorical1weekLow, optMuxPhysInstValueBackreflectionTx=optMuxPhysInstValueBackreflectionTx, gfpfrFacilityHistorical1dayGoodFrames=gfpfrFacilityHistorical1dayGoodFrames, lldpTLVFacilityHistorical15minNumber=lldpTLVFacilityHistorical15minNumber, sarLinkTrmtFacilityHistorical15minNumber=sarLinkTrmtFacilityHistorical15minNumber, frTrmt1FacilityHistorical1dayTable=frTrmt1FacilityHistorical1dayTable, frRcv2ShelfConnectionCurrent1dayCrcFrames=frRcv2ShelfConnectionCurrent1dayCrcFrames, endOfSarLinkTrmt1FacilityHistorical15minTable=endOfSarLinkTrmt1FacilityHistorical15minTable, optMuxPhysThresholdPumpLaser4TempHighThres=optMuxPhysThresholdPumpLaser4TempHighThres, l2PortRxFacilityCurrent15minPauseFramesRcv=l2PortRxFacilityCurrent15minPauseFramesRcv, l2PortRxFacilityHistorical15minFramesRcv=l2PortRxFacilityHistorical15minFramesRcv, discsBlockFacilityCurrent15minElapsedTime=discsBlockFacilityCurrent15minElapsedTime, l2PortRxFacilityCurrent15minBytesFrames64Rcv=l2PortRxFacilityCurrent15minBytesFrames64Rcv, utlTxFacilityCurrent15minElapsedTime=utlTxFacilityCurrent15minElapsedTime, lldpFrameTxFacilityCurrent15minEntry=lldpFrameTxFacilityCurrent15minEntry, macErrRxShelfConnectionHistorical1dayNumber=macErrRxShelfConnectionHistorical1dayNumber, pmOptMuxPhysical=pmOptMuxPhysical, optOptMuxHistorical1weekLow=optOptMuxHistorical1weekLow, l2PortRxFacilityCurrent1dayBytesFrames256Rcv=l2PortRxFacilityCurrent1dayBytesFrames256Rcv, atRcvOptMuxHistorical15minMean=atRcvOptMuxHistorical15minMean, sarLinkTrmtFacilityCurrent15minEntry=sarLinkTrmtFacilityCurrent15minEntry, frTrmt1FacilityCurrent15minCrcFramesEgress=frTrmt1FacilityCurrent15minCrcFramesEgress, oduFacilityHistorical15minValidFlag=oduFacilityHistorical15minValidFlag, fec2FacilityHistorical15minValidFlag=fec2FacilityHistorical15minValidFlag, estSigGainOptMuxHistorical1weekLow=estSigGainOptMuxHistorical1weekLow, oscPwrOptMuxHistorical1dayEntry=oscPwrOptMuxHistorical1dayEntry, lldpTLVRxFacilityHistorical15minNumber=lldpTLVRxFacilityHistorical15minNumber, oduFacilityCurrent15minEntry=oduFacilityCurrent15minEntry, endOfAttrmtOptMuxHistorical1weekTable=endOfAttrmtOptMuxHistorical1weekTable, oprOptMuxHistorical1dayHigh=oprOptMuxHistorical1dayHigh, frRcv3FacilityCurrent1dayJabberFrameRcv=frRcv3FacilityCurrent1dayJabberFrameRcv, frTrmt1FacilityHistorical15minTimeStamp=frTrmt1FacilityHistorical15minTimeStamp, qfactFacilityHistorical1dayNumber=qfactFacilityHistorical1dayNumber, muxFacilityCurrent1dayTable=muxFacilityCurrent1dayTable, endOfOptOptMuxHistorical1weekTable=endOfOptOptMuxHistorical1weekTable, oscPwrOptMuxHistorical1weekLow=oscPwrOptMuxHistorical1weekLow, macTxDcnHistorical15minFramesTrmt=macTxDcnHistorical15minFramesTrmt, dsOptMuxCurrent15minEntry=dsOptMuxCurrent15minEntry, cfotFacilityHistorical1dayNumber=cfotFacilityHistorical1dayNumber, rsFacilityHistorical15minSES=rsFacilityHistorical15minSES, estSigGainOptMuxHistorical1dayNumber=estSigGainOptMuxHistorical1dayNumber, frRcv2DcnCurrent1dayElapsedTime=frRcv2DcnCurrent1dayElapsedTime, rndTrpDlyFacilityHistorical1weekHigh=rndTrpDlyFacilityHistorical1weekHigh, skewFacilityHistorical1weekTable=skewFacilityHistorical1weekTable, pcs3FacilityCurrent15minCVDE=pcs3FacilityCurrent15minCVDE, macIcRxShelfConnectionCurrent1dayOctRcv=macIcRxShelfConnectionCurrent1dayOctRcv, macSzRxShelfConnectionHistorical1dayBytesFrames128Rcv=macSzRxShelfConnectionHistorical1dayBytesFrames128Rcv, macTxShelfConnectionHistorical15minTable=macTxShelfConnectionHistorical15minTable, macErrRxDcnCurrent15minOversizedFramesRcv=macErrRxDcnCurrent15minOversizedFramesRcv, atrcvDcnHistorical15minMean=atrcvDcnHistorical15minMean, facilityPhysThresholdDispersionCompensationHighThres=facilityPhysThresholdDispersionCompensationHighThres, msFacilityHistorical15minValidFlag=msFacilityHistorical15minValidFlag, lbcnFacilityHistorical1weekMean=lbcnFacilityHistorical1weekMean, cdFacilityHistorical1weekHigh=cdFacilityHistorical1weekHigh, facilityDataThresholdESFecHT15min=facilityDataThresholdESFecHT15min, qfactFacilityHistorical1weekMean=qfactFacilityHistorical1weekMean, brTxOptMuxHistorical1dayEntry=brTxOptMuxHistorical1dayEntry, endOfPumpPwrOptMuxHistorical1weekTable=endOfPumpPwrOptMuxHistorical1weekTable, l2PortRxFacilityHistorical1dayInterPackJunkBytesFramesRcv=l2PortRxFacilityHistorical1dayInterPackJunkBytesFramesRcv, dcnPhysInstValueTable=dcnPhysInstValueTable, oscGainOptMuxHistorical1weekLow=oscGainOptMuxHistorical1weekLow, oscOptOptMuxHistorical15minEntry=oscOptOptMuxHistorical15minEntry, gfpfrFacilityCurrent15minElapsedTime=gfpfrFacilityCurrent15minElapsedTime, lldpTLVTxFacilityHistorical1dayTLVTxDiscards=lldpTLVTxFacilityHistorical1dayTLVTxDiscards, endOfFrRcv4FacilityCurrent15minTable=endOfFrRcv4FacilityCurrent15minTable, facilityDataThresholdUASOduHT15min=facilityDataThresholdUASOduHT15min, lldpTLVRxFacilityHistorical15minTLVRxDiscards=lldpTLVRxFacilityHistorical15minTLVRxDiscards, lldpFrameFacilityCurrent1dayFrameTxErrors=lldpFrameFacilityCurrent1dayFrameTxErrors, fec2FacilityHistorical1dayValidFlag=fec2FacilityHistorical1dayValidFlag, byteTrmtFacilityHistorical15minTimeStamp=byteTrmtFacilityHistorical15minTimeStamp, endOfFrRcv1FacilityCurrent1dayTable=endOfFrRcv1FacilityCurrent1dayTable, brTxOptMuxHistorical1dayHigh=brTxOptMuxHistorical1dayHigh, endOfBrOptMuxHistorical1dayTable=endOfBrOptMuxHistorical1dayTable, atRcvOptMuxHistorical15minLow=atRcvOptMuxHistorical15minLow, frRcv2DcnHistorical15minTable=frRcv2DcnHistorical15minTable, discsBlockFacilityHistorical15minEntry=discsBlockFacilityHistorical15minEntry, endOfOptFacilityHistorical15minTable=endOfOptFacilityHistorical15minTable, oprFacilityHistorical15minNumber=oprFacilityHistorical15minNumber, brOptMuxHistorical1weekEntry=brOptMuxHistorical1weekEntry, oscPwrOptMuxHistorical15minEntry=oscPwrOptMuxHistorical15minEntry, oprOptMuxHistorical15minMean=oprOptMuxHistorical15minMean, endOfOptDcnHistorical1weekTable=endOfOptDcnHistorical1weekTable, lldpTLVRxFacilityCurrent15minElapsedTime=lldpTLVRxFacilityCurrent15minElapsedTime, endOfLldpFrameTxFacilityCurrent15minTable=endOfLldpFrameTxFacilityCurrent15minTable, pmEqptPhysThreshold=pmEqptPhysThreshold, macErrRxDcnHistorical15minOversizedFramesRcv=macErrRxDcnHistorical15minOversizedFramesRcv, oprOptMuxHistorical1dayLow=oprOptMuxHistorical1dayLow, rndTrpDlyFacilityHistorical15minHigh=rndTrpDlyFacilityHistorical15minHigh, macRxShelfConnectionCurrent15minMulticastFramesRcv=macRxShelfConnectionCurrent15minMulticastFramesRcv, l2PortRxFacilityCurrent1dayBytesRcv=l2PortRxFacilityCurrent1dayBytesRcv, byteTrmtFacilityHistorical15minEntry=byteTrmtFacilityHistorical15minEntry, lldpFrameFacilityHistorical1dayValidFlag=lldpFrameFacilityHistorical1dayValidFlag, lldpTLVFacilityCurrent1dayEntry=lldpTLVFacilityCurrent1dayEntry, endOfPcs3FacilityHistorical15minTable=endOfPcs3FacilityHistorical15minTable, sFacilityHistorical1dayTimeStamp=sFacilityHistorical1dayTimeStamp, brTxOptMuxHistorical15minTable=brTxOptMuxHistorical15minTable, macErrRxShelfConnectionHistorical15minEntry=macErrRxShelfConnectionHistorical15minEntry, pumpPwrOptMuxHistorical1dayLow=pumpPwrOptMuxHistorical1dayLow, fecFacilityCurrent1dayTable=fecFacilityCurrent1dayTable, endOfL2PortTxFacilityCurrent1dayTable=endOfL2PortTxFacilityCurrent1dayTable, pcs1FacilityCurrent15minEntry=pcs1FacilityCurrent15minEntry, endOfTcmBFacilityHistorical15minTable=endOfTcmBFacilityHistorical15minTable, byteTrmtFacilityCurrent1dayTable=byteTrmtFacilityCurrent1dayTable, otuFacilityCurrent15minSES=otuFacilityCurrent15minSES, endOfTerminPointPhysInstValueTable=endOfTerminPointPhysInstValueTable, atRcvOptMuxHistorical1weekEntry=atRcvOptMuxHistorical1weekEntry, macSzRxDcnHistorical15minBytesFrames256Rcv=macSzRxDcnHistorical15minBytesFrames256Rcv, frRcv3FacilityHistorical15minTable=frRcv3FacilityHistorical15minTable, tcmCFacilityHistorical15minTimeStamp=tcmCFacilityHistorical15minTimeStamp, lldpFrameFacilityCurrent1dayElapsedTime=lldpFrameFacilityCurrent1dayElapsedTime, fecFacilityHistorical1dayBERCE=fecFacilityHistorical1dayBERCE, l2PortRxFacilityHistorical15minInterPackJunkBytesFramesRcv=l2PortRxFacilityHistorical15minInterPackJunkBytesFramesRcv, macTxDcnHistorical15minEntry=macTxDcnHistorical15minEntry, utlTxFacilityHistorical1dayValidFlag=utlTxFacilityHistorical1dayValidFlag, rsFacilityCurrent15minSES=rsFacilityCurrent15minSES, attrmtOptMuxHistorical1dayHigh=attrmtOptMuxHistorical1dayHigh, oduFacilityCurrent15minSES=oduFacilityCurrent15minSES, oprFacilityHistorical15minTimeStamp=oprFacilityHistorical15minTimeStamp, cdFacilityHistorical1weekMean=cdFacilityHistorical1weekMean, sFacilityHistorical1daySEFS=sFacilityHistorical1daySEFS, frRcv4FacilityCurrent1dayTable=frRcv4FacilityCurrent1dayTable, tcmAFacilityHistorical1dayEntry=tcmAFacilityHistorical1dayEntry, sarLinkRcvFacilityHistorical1dayNumber=sarLinkRcvFacilityHistorical1dayNumber, lldpFrameTxFacilityHistorical15minLLDPFrameTxDiscards=lldpFrameTxFacilityHistorical15minLLDPFrameTxDiscards, ampEqptHistorical1dayNumber=ampEqptHistorical1dayNumber, msFacilityHistorical15minEntry=msFacilityHistorical15minEntry, sarLinkRcvFacilityHistorical15minSES=sarLinkRcvFacilityHistorical15minSES, lldpFrameRxFacilityCurrent15minElapsedTime=lldpFrameRxFacilityCurrent15minElapsedTime)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", lldpFrameTxFacilityCurrent15minLLDPFramesTx=lldpFrameTxFacilityCurrent15minLLDPFramesTx, lldpTLVTxFacilityCurrent15minEntry=lldpTLVTxFacilityCurrent15minEntry, lbcnFacilityHistorical1dayMean=lbcnFacilityHistorical1dayMean, otuFacilityHistorical1dayValidFlag=otuFacilityHistorical1dayValidFlag, brTxOptMuxHistorical15minHigh=brTxOptMuxHistorical15minHigh, frRcv2DcnHistorical1dayEntry=frRcv2DcnHistorical1dayEntry, endOfChecfrFacilityCurrent1dayTable=endOfChecfrFacilityCurrent1dayTable, tcmBFacilityCurrent15minBbe=tcmBFacilityCurrent15minBbe, frRcv3FacilityHistorical1dayTimeStamp=frRcv3FacilityHistorical1dayTimeStamp, pmTerminPointData=pmTerminPointData, pcs3FacilityHistorical15minTimeStamp=pcs3FacilityHistorical15minTimeStamp, macSzRxShelfConnectionCurrent1dayBytesFrames65Rcv=macSzRxShelfConnectionCurrent1dayBytesFrames65Rcv, optFacilityHistorical1dayTimeStamp=optFacilityHistorical1dayTimeStamp, dsFacilityCurrent15minElapsedTime=dsFacilityCurrent15minElapsedTime, facilityPhysThresholdDispersionCompensationLowThres=facilityPhysThresholdDispersionCompensationLowThres, brTxOptMuxHistorical1weekValidFlag=brTxOptMuxHistorical1weekValidFlag, otuFecFacilityCurrent1dayBERCE=otuFecFacilityCurrent1dayBERCE, l2PortRxFacilityCurrent1dayBytesFrames1024Rcv=l2PortRxFacilityCurrent1dayBytesFrames1024Rcv, fecFacilityCurrent1dayBERCE=fecFacilityCurrent1dayBERCE, otuFecFacilityCurrent1dayElapsedTime=otuFecFacilityCurrent1dayElapsedTime, pcsRxFacilityHistorical15minNumber=pcsRxFacilityHistorical15minNumber, fec2FacilityCurrent1dayTable=fec2FacilityCurrent1dayTable, frRcv2DcnHistorical1dayGoodFrames=frRcv2DcnHistorical1dayGoodFrames, gfpfrFacilityCurrent15minTable=gfpfrFacilityCurrent15minTable, oprDcnHistorical15minHigh=oprDcnHistorical15minHigh, l2PortRxFacilityCurrent1dayBytesFrames1519Rcv=l2PortRxFacilityCurrent1dayBytesFrames1519Rcv, fec2FacilityCurrent1dayEntry=fec2FacilityCurrent1dayEntry, otuFecFacilityCurrent15minUBE=otuFecFacilityCurrent15minUBE, pumpPwrOptMuxHistorical1dayEntry=pumpPwrOptMuxHistorical1dayEntry, lldpFrameTxFacilityHistorical1dayLLDPFramesTx=lldpFrameTxFacilityHistorical1dayLLDPFramesTx, l2PortRxFacilityHistorical1dayBytesFrames256Rcv=l2PortRxFacilityHistorical1dayBytesFrames256Rcv, sarLinkTrmtFacilityCurrent1dayElapsedTime=sarLinkTrmtFacilityCurrent1dayElapsedTime, frRcv4FacilityHistorical1dayTimeStamp=frRcv4FacilityHistorical1dayTimeStamp, optMuxPhysThresholdAttTxHigh=optMuxPhysThresholdAttTxHigh, muxFacilityCurrent15minEntry=muxFacilityCurrent15minEntry, oprOptMuxHistorical1weekEntry=oprOptMuxHistorical1weekEntry, tcmAFacilityHistorical15minSES=tcmAFacilityHistorical15minSES, lbcnDcnHistorical1weekEntry=lbcnDcnHistorical1weekEntry, frTrmt1FacilityHistorical1dayValidFlag=frTrmt1FacilityHistorical1dayValidFlag, lldpFrameTxFacilityHistorical15minEntry=lldpFrameTxFacilityHistorical15minEntry, endOfOptDcnHistorical15minTable=endOfOptDcnHistorical15minTable, frRcv2FacilityCurrent15minElapsedTime=frRcv2FacilityCurrent15minElapsedTime, macIcRxShelfConnectionCurrent15minGoodFrames=macIcRxShelfConnectionCurrent15minGoodFrames, frTrmt2FacilityHistorical15minCrcFramesEgress=frTrmt2FacilityHistorical15minCrcFramesEgress, tcmBFacilityHistorical1daySES=tcmBFacilityHistorical1daySES, endOfLldpTLVTxFacilityCurrent15minTable=endOfLldpTLVTxFacilityCurrent15minTable, oduFacilityHistorical15minBbe=oduFacilityHistorical15minBbe, macTxDcnHistorical15minDiscardedFramesTrmt=macTxDcnHistorical15minDiscardedFramesTrmt, pumpPwrOptMuxHistorical15minTable=pumpPwrOptMuxHistorical15minTable, rndTrpDlyFacilityHistorical1weekTable=rndTrpDlyFacilityHistorical1weekTable, rsFacilityCurrent1dayTable=rsFacilityCurrent1dayTable, lFacilityHistorical15minValidFlag=lFacilityHistorical15minValidFlag, pcs1FacilityHistorical1dayCV=pcs1FacilityHistorical1dayCV, cfotFacilityHistorical1dayHigh=cfotFacilityHistorical1dayHigh, macRxShelfConnectionHistorical15minBroadcastFramesRcv=macRxShelfConnectionHistorical15minBroadcastFramesRcv, pcs2FacilityCurrent15minES=pcs2FacilityCurrent15minES, optOptMuxHistorical1dayNumber=optOptMuxHistorical1dayNumber, facilityDataThresholdBBETcmaHT1day=facilityDataThresholdBBETcmaHT1day, utlTxFacilityCurrent1dayUtlMean=utlTxFacilityCurrent1dayUtlMean, lldpFrameTxFacilityHistorical1dayLLDPFrameTxDiscards=lldpFrameTxFacilityHistorical1dayLLDPFrameTxDiscards, optFacilityHistorical1dayValidFlag=optFacilityHistorical1dayValidFlag, oprFacilityHistorical1weekTimeStamp=oprFacilityHistorical1weekTimeStamp, macSzRxShelfConnectionCurrent1dayBytesFrames256Rcv=macSzRxShelfConnectionCurrent1dayBytesFrames256Rcv, optFacilityHistorical1weekTable=optFacilityHistorical1weekTable, endOfPmDcnPhysThreshold=endOfPmDcnPhysThreshold, lldpFrameFacilityHistorical1dayLLDPFrameDiscards=lldpFrameFacilityHistorical1dayLLDPFrameDiscards, cdFacilityHistorical15minNumber=cdFacilityHistorical15minNumber, estSigGainOptMuxHistorical1dayMean=estSigGainOptMuxHistorical1dayMean, pcs3FacilityHistorical15minES=pcs3FacilityHistorical15minES, endOfTcmAFacilityHistorical1dayTable=endOfTcmAFacilityHistorical1dayTable, ampInEqptHistorical1dayEntry=ampInEqptHistorical1dayEntry, endOfLldpFrameTxFacilityCurrent1dayTable=endOfLldpFrameTxFacilityCurrent1dayTable, ampInEqptHistorical1dayTable=ampInEqptHistorical1dayTable, pcsRxFacilityCurrent15minBBE=pcsRxFacilityCurrent15minBBE, latencyFacilityHistorical1dayNumber=latencyFacilityHistorical1dayNumber, msFacilityHistorical1dayTimeStamp=msFacilityHistorical1dayTimeStamp, pcsTxFacilityHistorical15minTimeStamp=pcsTxFacilityHistorical15minTimeStamp, macSzRxShelfConnectionCurrent15minBytesFrames1024Rcv=macSzRxShelfConnectionCurrent15minBytesFrames1024Rcv, gfpfrFacilityHistorical1dayCHecDiscardedFrames=gfpfrFacilityHistorical1dayCHecDiscardedFrames, endOfSarLinkTrmt1FacilityHistorical1dayTable=endOfSarLinkTrmt1FacilityHistorical1dayTable, optOptMuxHistorical1weekTable=optOptMuxHistorical1weekTable, optMuxPhysInstValueEntry=optMuxPhysInstValueEntry, estSigGainOptMuxHistorical1weekTable=estSigGainOptMuxHistorical1weekTable, lldpFrameFacilityCurrent1dayLLDPFrameDiscards=lldpFrameFacilityCurrent1dayLLDPFrameDiscards, msFacilityCurrent15minEntry=msFacilityCurrent15minEntry, optMuxPhysInstValueTxLineAttenuation=optMuxPhysInstValueTxLineAttenuation, endOfAtRcvOptMuxHistorical1dayTable=endOfAtRcvOptMuxHistorical1dayTable, cfotFacilityHistorical1weekLow=cfotFacilityHistorical1weekLow, qfactFacilityHistorical1weekValidFlag=qfactFacilityHistorical1weekValidFlag, endOfSkewFacilityHistorical1weekTable=endOfSkewFacilityHistorical1weekTable, dsOptMuxCurrent15minElapsedTime=dsOptMuxCurrent15minElapsedTime, macIcRxShelfConnectionCurrent15minCrcErrorsRcv=macIcRxShelfConnectionCurrent15minCrcErrorsRcv, pcs2FacilityHistorical1dayTimeStamp=pcs2FacilityHistorical1dayTimeStamp, optDcnHistorical15minEntry=optDcnHistorical15minEntry, oprDcnHistorical1weekLow=oprDcnHistorical1weekLow, atrcvDcnHistorical15minEntry=atrcvDcnHistorical15minEntry, skewFacilityHistorical1dayValidFlag=skewFacilityHistorical1dayValidFlag, sFacilityCurrent15minSEFS=sFacilityCurrent15minSEFS, discsBlockFacilityCurrent1dayElapsedTime=discsBlockFacilityCurrent1dayElapsedTime, utlRxFacilityCurrent1dayUtlHigh=utlRxFacilityCurrent1dayUtlHigh, endOfLldpFrameRxFacilityCurrent15minTable=endOfLldpFrameRxFacilityCurrent15minTable, snrFacilityHistorical1weekHigh=snrFacilityHistorical1weekHigh, attrmtOptMuxHistorical1weekTimeStamp=attrmtOptMuxHistorical1weekTimeStamp, endOfFrRcv4FacilityHistorical1dayTable=endOfFrRcv4FacilityHistorical1dayTable, facilityPhysThresholdOpticalInputPwrLow=facilityPhysThresholdOpticalInputPwrLow, utlTxFacilityHistorical15minEntry=utlTxFacilityHistorical15minEntry, cdcFacilityHistorical15minTable=cdcFacilityHistorical15minTable, endOfMacSzRxShelfConnectionHistorical15minTable=endOfMacSzRxShelfConnectionHistorical15minTable, fec2FacilityHistorical1dayUBE=fec2FacilityHistorical1dayUBE, frRcv1FacilityCurrent1dayCrcFrames=frRcv1FacilityCurrent1dayCrcFrames, frRcv4FacilityCurrent15minCrcFrames=frRcv4FacilityCurrent15minCrcFrames, endOfOprOptMuxHistorical15minTable=endOfOprOptMuxHistorical15minTable, lldpFrameFacilityHistorical15minLLDPFrames=lldpFrameFacilityHistorical15minLLDPFrames, lbcnDcnHistorical1dayTimeStamp=lbcnDcnHistorical1dayTimeStamp, macRxDcnCurrent1dayMulticastFramesRcv=macRxDcnCurrent1dayMulticastFramesRcv, fecFacilityCurrent1dayElapsedTime=fecFacilityCurrent1dayElapsedTime, lldpTLVFacilityCurrent15minElapsedTime=lldpTLVFacilityCurrent15minElapsedTime, l2PortRxFacilityCurrent1dayElapsedTime=l2PortRxFacilityCurrent1dayElapsedTime, eqptPhysThresholdOutputPwrHigh=eqptPhysThresholdOutputPwrHigh, lbcnFacilityHistorical1dayLow=lbcnFacilityHistorical1dayLow, brOptMuxHistorical15minNumber=brOptMuxHistorical15minNumber, oduFacilityCurrent1dayEntry=oduFacilityCurrent1dayEntry, attrmtOptMuxHistorical1weekEntry=attrmtOptMuxHistorical1weekEntry, tcmCFacilityCurrent1dayEntry=tcmCFacilityCurrent1dayEntry, lldpFrameFacilityCurrent1dayTable=lldpFrameFacilityCurrent1dayTable, optMuxPhysInstValueRxLineAttenuation=optMuxPhysInstValueRxLineAttenuation, optMuxPhysInstValueBackreflectionPowerReceived=optMuxPhysInstValueBackreflectionPowerReceived, oscPwrOptMuxHistorical1weekMean=oscPwrOptMuxHistorical1weekMean, lldpFrameTxFacilityHistorical15minFrameTxErrors=lldpFrameTxFacilityHistorical15minFrameTxErrors, frTrmt1FacilityCurrent15minEntry=frTrmt1FacilityCurrent15minEntry, endOfOprDcnHistorical15minTable=endOfOprDcnHistorical15minTable, l2PortRxFacilityHistorical1dayPauseFramesRcv=l2PortRxFacilityHistorical1dayPauseFramesRcv, estSigGainOptMuxHistorical1dayValidFlag=estSigGainOptMuxHistorical1dayValidFlag, snrFacilityHistorical15minTimeStamp=snrFacilityHistorical15minTimeStamp, otuFecFacilityHistorical15minNumber=otuFecFacilityHistorical15minNumber, fec2FacilityCurrent1dayCE=fec2FacilityCurrent1dayCE, endOfSarLinkTrmt1FacilityCurrent15minTable=endOfSarLinkTrmt1FacilityCurrent15minTable, frTrmt2FacilityCurrent15minTable=frTrmt2FacilityCurrent15minTable, oprDcnHistorical15minNumber=oprDcnHistorical15minNumber, frTrmt2FacilityCurrent15minElapsedTime=frTrmt2FacilityCurrent15minElapsedTime, pcsRxFacilityHistorical15minES=pcsRxFacilityHistorical15minES, endOfFrRcv3FacilityHistorical15minTable=endOfFrRcv3FacilityHistorical15minTable, macIcTxShelfConnectionCurrent1dayEntry=macIcTxShelfConnectionCurrent1dayEntry, ampEqptHistorical15minTable=ampEqptHistorical15minTable, lldpFrameTxFacilityCurrent1dayEntry=lldpFrameTxFacilityCurrent1dayEntry, frRcv2DcnHistorical1dayValidFlag=frRcv2DcnHistorical1dayValidFlag, oprOptMuxHistorical1dayNumber=oprOptMuxHistorical1dayNumber, lldpFrameTxFacilityHistorical15minTimeStamp=lldpFrameTxFacilityHistorical15minTimeStamp, facilityPhysThresholdRoundTripDelayHighThres=facilityPhysThresholdRoundTripDelayHighThres, oduFacilityCurrent1dayES=oduFacilityCurrent1dayES, rndTrpDlyFacilityHistorical1dayTable=rndTrpDlyFacilityHistorical1dayTable, l2PortRxFacilityHistorical1dayBytesFrames1519Rcv=l2PortRxFacilityHistorical1dayBytesFrames1519Rcv, byteTrmtFacilityHistorical15minTable=byteTrmtFacilityHistorical15minTable, endOfCdFacilityHistorical1weekTable=endOfCdFacilityHistorical1weekTable, pumpPwrOptMuxHistorical1weekEntry=pumpPwrOptMuxHistorical1weekEntry, macIcTxShelfConnectionHistorical15minValidFlag=macIcTxShelfConnectionHistorical15minValidFlag, endOfMacTxDcnCurrent15minTable=endOfMacTxDcnCurrent15minTable, oprOptMuxHistorical1weekHigh=oprOptMuxHistorical1weekHigh, macIcRxShelfConnectionHistorical15minValidFlag=macIcRxShelfConnectionHistorical15minValidFlag, checfrFacilityHistorical15minEntry=checfrFacilityHistorical15minEntry, cdcFacilityHistorical1weekTimeStamp=cdcFacilityHistorical1weekTimeStamp, lFacilityCurrent1dayUAS=lFacilityCurrent1dayUAS, macSzRxDcnCurrent1dayBytesFrames1519Rcv=macSzRxDcnCurrent1dayBytesFrames1519Rcv, lbcnDcnHistorical1dayNumber=lbcnDcnHistorical1dayNumber, skewFacilityHistorical15minHigh=skewFacilityHistorical15minHigh, frRcv2FacilityHistorical15minBytes=frRcv2FacilityHistorical15minBytes, l2PortTxFacilityCurrent15minBytesFrames256Trmt=l2PortTxFacilityCurrent15minBytesFrames256Trmt, l2PortRxFacilityHistorical1dayBytesFrames128Rcv=l2PortRxFacilityHistorical1dayBytesFrames128Rcv, facilityDataThresholdCVLHT1day=facilityDataThresholdCVLHT1day, lldpFrameRxFacilityCurrent1dayTable=lldpFrameRxFacilityCurrent1dayTable, facilityDataThresholdBBETcmbHT15min=facilityDataThresholdBBETcmbHT15min, pcs4FacilityHistorical15minEntry=pcs4FacilityHistorical15minEntry, frTrmt2FacilityHistorical15minTable=frTrmt2FacilityHistorical15minTable, sarLinkRcvFacilityHistorical15minTable=sarLinkRcvFacilityHistorical15minTable, facilityPhysThresholdDifferentialGroupDelayHigh=facilityPhysThresholdDifferentialGroupDelayHigh, utlTxFacilityCurrent1dayUtlLow=utlTxFacilityCurrent1dayUtlLow, facilityDataThresholdCRCFrRcvHT1day=facilityDataThresholdCRCFrRcvHT1day, macRxShelfConnectionCurrent1dayTable=macRxShelfConnectionCurrent1dayTable, latencyFacilityHistorical1weekTimeStamp=latencyFacilityHistorical1weekTimeStamp, rndTrpDlyFacilityHistorical1weekMean=rndTrpDlyFacilityHistorical1weekMean, macSzRxShelfConnectionCurrent15minTable=macSzRxShelfConnectionCurrent15minTable, optMuxPhysInstValueRemainingTime=optMuxPhysInstValueRemainingTime, utlRxFacilityCurrent1dayEntry=utlRxFacilityCurrent1dayEntry, otuFecFacilityCurrent15minES=otuFecFacilityCurrent15minES, utlRxFacilityHistorical15minUtlHigh=utlRxFacilityHistorical15minUtlHigh, frRcv4FacilityHistorical1dayTable=frRcv4FacilityHistorical1dayTable, optMuxPhysThresholdUpperSubTempThres=optMuxPhysThresholdUpperSubTempThres, frRcv2DcnHistorical1dayCrcFrames=frRcv2DcnHistorical1dayCrcFrames, cdFacilityHistorical1weekLow=cdFacilityHistorical1weekLow, sFacilityCurrent15minES=sFacilityCurrent15minES, brOptMuxHistorical1dayHigh=brOptMuxHistorical1dayHigh, facilityPhysInstValueCarrierFreqOffset=facilityPhysInstValueCarrierFreqOffset, macSzRxDcnHistorical15minTimeStamp=macSzRxDcnHistorical15minTimeStamp, lldpTLVRxFacilityCurrent15minEntry=lldpTLVRxFacilityCurrent15minEntry, pmEqpt=pmEqpt, lbcnFacilityHistorical1weekTable=lbcnFacilityHistorical1weekTable, lFacilityHistorical15minNumber=lFacilityHistorical15minNumber, l2PortTxFacilityHistorical1dayTimeStamp=l2PortTxFacilityHistorical1dayTimeStamp, muxFacilityHistorical1dayValidFlag=muxFacilityHistorical1dayValidFlag, endOfTcmBFacilityCurrent1dayTable=endOfTcmBFacilityCurrent1dayTable, pcsRxFacilityCurrent1dayEntry=pcsRxFacilityCurrent1dayEntry, frRcv2DcnHistorical15minCrcFrames=frRcv2DcnHistorical15minCrcFrames, macErrRxShelfConnectionHistorical15minUndersizedFramesRcv=macErrRxShelfConnectionHistorical15minUndersizedFramesRcv, endOfDiscsBlockFacilityCurrent1dayTable=endOfDiscsBlockFacilityCurrent1dayTable, endOfPmOptMuxPhysThreshold=endOfPmOptMuxPhysThreshold, endOfFrRcv2ShelfConnectionHistorical15minTable=endOfFrRcv2ShelfConnectionHistorical15minTable, cdFacilityHistorical1weekTable=cdFacilityHistorical1weekTable, pcs2FacilityHistorical15minTimeStamp=pcs2FacilityHistorical15minTimeStamp, macSzRxShelfConnectionCurrent15minBytesFrames65Rcv=macSzRxShelfConnectionCurrent15minBytesFrames65Rcv, ampInEqptHistorical1dayLow=ampInEqptHistorical1dayLow, lbcnFacilityHistorical15minValidFlag=lbcnFacilityHistorical15minValidFlag, brOptMuxHistorical1dayNumber=brOptMuxHistorical1dayNumber, dsFacilityHistorical15minDS=dsFacilityHistorical15minDS, macRxShelfConnectionHistorical15minGoodFrames=macRxShelfConnectionHistorical15minGoodFrames, ampEqptHistorical1weekLow=ampEqptHistorical1weekLow, facilityDataThresholdUASTcmbHT15min=facilityDataThresholdUASTcmbHT15min, lbcnDcnHistorical1dayValidFlag=lbcnDcnHistorical1dayValidFlag, lldpTLVFacilityCurrent1dayTLVDiscards=lldpTLVFacilityCurrent1dayTLVDiscards, oprDcnHistorical1weekTimeStamp=oprDcnHistorical1weekTimeStamp, checfrFacilityHistorical1dayValidFlag=checfrFacilityHistorical1dayValidFlag, otuFacilityHistorical1daySES=otuFacilityHistorical1daySES, pcs2FacilityCurrent15minCV=pcs2FacilityCurrent15minCV, macRxShelfConnectionHistorical15minTable=macRxShelfConnectionHistorical15minTable, macSzRxDcnHistorical15minBytesFrames128Rcv=macSzRxDcnHistorical15minBytesFrames128Rcv, tcmBFacilityHistorical1dayNumber=tcmBFacilityHistorical1dayNumber, lFacilityHistorical1dayES=lFacilityHistorical1dayES, oscGainOptMuxHistorical1dayNumber=oscGainOptMuxHistorical1dayNumber, frRcv2FacilityHistorical15minEntry=frRcv2FacilityHistorical15minEntry, oscPwrOptMuxHistorical1dayTimeStamp=oscPwrOptMuxHistorical1dayTimeStamp, ampEqptHistorical1dayValidFlag=ampEqptHistorical1dayValidFlag, macErrRxShelfConnectionHistorical15minValidFlag=macErrRxShelfConnectionHistorical15minValidFlag, otuFecFacilityCurrent1dayCE=otuFecFacilityCurrent1dayCE, macSzRxDcnHistorical1dayBytesFrames256Rcv=macSzRxDcnHistorical1dayBytesFrames256Rcv, frRcv1FacilityCurrent15minPauseFrames=frRcv1FacilityCurrent15minPauseFrames, macSzRxShelfConnectionCurrent1dayBytesFrames1024Rcv=macSzRxShelfConnectionCurrent1dayBytesFrames1024Rcv, estSigGainOptMuxHistorical1weekNumber=estSigGainOptMuxHistorical1weekNumber, l2PortRxFacilityHistorical15minBytesFrames256Rcv=l2PortRxFacilityHistorical15minBytesFrames256Rcv, facilityPhysInstValueCalculatedTotalPowerTx=facilityPhysInstValueCalculatedTotalPowerTx, endOfFrTrmt2FacilityHistorical15minTable=endOfFrTrmt2FacilityHistorical15minTable, gfpfrFacilityHistorical1dayTable=gfpfrFacilityHistorical1dayTable, lbcnDcnHistorical1weekHigh=lbcnDcnHistorical1weekHigh, l2PortTxFacilityCurrent15minBytesTrmt=l2PortTxFacilityCurrent15minBytesTrmt, l2PortTxFacilityCurrent15minBytesFrames128Trmt=l2PortTxFacilityCurrent15minBytesFrames128Trmt, l2PortRxFacilityHistorical15minBytesRcv=l2PortRxFacilityHistorical15minBytesRcv, frRcv3FacilityHistorical1dayBytesFrames256Rcv=frRcv3FacilityHistorical1dayBytesFrames256Rcv, lldpFrameRxFacilityCurrent1dayEntry=lldpFrameRxFacilityCurrent1dayEntry, endOfLldpFrameFacilityHistorical15minTable=endOfLldpFrameFacilityHistorical15minTable, pcs1FacilityHistorical1dayEntry=pcs1FacilityHistorical1dayEntry, brTxOptMuxHistorical1dayTimeStamp=brTxOptMuxHistorical1dayTimeStamp, voltInpEqptHistorical1dayHigh=voltInpEqptHistorical1dayHigh, lldpTLVTxFacilityHistorical15minEntry=lldpTLVTxFacilityHistorical15minEntry, snrFacilityHistorical15minValidFlag=snrFacilityHistorical15minValidFlag, l2PortTxFacilityCurrent1dayBytesFrames128Trmt=l2PortTxFacilityCurrent1dayBytesFrames128Trmt, fec2FacilityHistorical1dayTable=fec2FacilityHistorical1dayTable)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", l2PortTxFacilityHistorical15minPauseFramesTrmt=l2PortTxFacilityHistorical15minPauseFramesTrmt, endOfUtlRxFacilityHistorical1dayTable=endOfUtlRxFacilityHistorical1dayTable, endOfMsFacilityCurrent15minTable=endOfMsFacilityCurrent15minTable, byteTrmtFacilityHistorical15minBytesTrmt=byteTrmtFacilityHistorical15minBytesTrmt, macSzRxDcnCurrent15minElapsedTime=macSzRxDcnCurrent15minElapsedTime, endOfMacSzRxShelfConnectionCurrent1dayTable=endOfMacSzRxShelfConnectionCurrent1dayTable, endOfFecFacilityHistorical15minTable=endOfFecFacilityHistorical15minTable, sFacilityHistorical15minSES=sFacilityHistorical15minSES, frRcv3FacilityHistorical1dayCrcFrames=frRcv3FacilityHistorical1dayCrcFrames, frRcv3FacilityCurrent1dayGoodFrames=frRcv3FacilityCurrent1dayGoodFrames, pcsTxFacilityCurrent15minEntry=pcsTxFacilityCurrent15minEntry, cdcFacilityHistorical1weekHigh=cdcFacilityHistorical1weekHigh, endOfAmpInEqptHistorical1dayTable=endOfAmpInEqptHistorical1dayTable, l2PortRxFacilityCurrent15minBroadcastFramesRcv=l2PortRxFacilityCurrent15minBroadcastFramesRcv, macTxShelfConnectionCurrent15minBytesTrmt=macTxShelfConnectionCurrent15minBytesTrmt, sFacilityHistorical1dayES=sFacilityHistorical1dayES, oscGainOptMuxHistorical15minTable=oscGainOptMuxHistorical15minTable, l2PortRxFacilityCurrent1dayBytesFrames65Rcv=l2PortRxFacilityCurrent1dayBytesFrames65Rcv, frRcv2DcnHistorical1dayBytes=frRcv2DcnHistorical1dayBytes, macErrRxShelfConnectionCurrent1dayElapsedTime=macErrRxShelfConnectionCurrent1dayElapsedTime, frTrmt1FacilityCurrent1dayBytes=frTrmt1FacilityCurrent1dayBytes, pcsRxFacilityCurrent15minElapsedTime=pcsRxFacilityCurrent15minElapsedTime, frRcv2ShelfConnectionHistorical15minTimeStamp=frRcv2ShelfConnectionHistorical15minTimeStamp, facilityPhysInstValueAttenuationOfVoa=facilityPhysInstValueAttenuationOfVoa, oprOptMuxHistorical15minEntry=oprOptMuxHistorical15minEntry, endOfTcmAFacilityCurrent15minTable=endOfTcmAFacilityCurrent15minTable, macIcTxShelfConnectionCurrent1dayElapsedTime=macIcTxShelfConnectionCurrent1dayElapsedTime, oscGainOptMuxHistorical1weekHigh=oscGainOptMuxHistorical1weekHigh, tcmBFacilityHistorical15minSES=tcmBFacilityHistorical15minSES, endOfFrRcv2FacilityCurrent1dayTable=endOfFrRcv2FacilityCurrent1dayTable, facilityPhysInstValueLocalOscBiasLevel=facilityPhysInstValueLocalOscBiasLevel, macSzRxDcnHistorical1dayTable=macSzRxDcnHistorical1dayTable, frTrmt2FacilityHistorical1dayDiscardedFrames=frTrmt2FacilityHistorical1dayDiscardedFrames, oprOptMuxHistorical1dayEntry=oprOptMuxHistorical1dayEntry, macSzRxShelfConnectionCurrent1dayTable=macSzRxShelfConnectionCurrent1dayTable, discsBlockFacilityHistorical15minTable=discsBlockFacilityHistorical15minTable, endOfMacErrRxDcnCurrent15minTable=endOfMacErrRxDcnCurrent15minTable, optMuxPhysInstValueOutputPowerRaw=optMuxPhysInstValueOutputPowerRaw, macErrRxDcnCurrent15minCrcErrorsRcv=macErrRxDcnCurrent15minCrcErrorsRcv, frRcv3FacilityCurrent15minPauseFrames=frRcv3FacilityCurrent15minPauseFrames, facilityPhysThresholdOpticalOutputPwrLow=facilityPhysThresholdOpticalOutputPwrLow, l2PortTxFacilityHistorical1dayBytesFrames64Trmt=l2PortTxFacilityHistorical1dayBytesFrames64Trmt, endOfLldpFrameRxFacilityHistorical1dayTable=endOfLldpFrameRxFacilityHistorical1dayTable, oduFacilityHistorical1dayUAS=oduFacilityHistorical1dayUAS, facilityPhysThresholdQualityFactorLowThres=facilityPhysThresholdQualityFactorLowThres, sFacilityHistorical1dayCV=sFacilityHistorical1dayCV, l2PortTxFacilityCurrent15minTable=l2PortTxFacilityCurrent15minTable, facilityPhysThresholdLatencyHighThres=facilityPhysThresholdLatencyHighThres, lldpFrameTxFacilityHistorical15minNumber=lldpFrameTxFacilityHistorical15minNumber, frTrmt1FacilityHistorical15minTable=frTrmt1FacilityHistorical15minTable, voltInpEqptHistorical1weekTable=voltInpEqptHistorical1weekTable, l2PortRxFacilityHistorical1dayEntry=l2PortRxFacilityHistorical1dayEntry, macRxShelfConnectionCurrent1dayBroadcastFramesRcv=macRxShelfConnectionCurrent1dayBroadcastFramesRcv, endOfTcmBFacilityCurrent15minTable=endOfTcmBFacilityCurrent15minTable, lldpFrameFacilityHistorical1dayFrameTxErrors=lldpFrameFacilityHistorical1dayFrameTxErrors, macSzRxShelfConnectionCurrent1dayBytesFrames512Rcv=macSzRxShelfConnectionCurrent1dayBytesFrames512Rcv, lldpTLVFacilityHistorical15minTLVUnknown=lldpTLVFacilityHistorical15minTLVUnknown, pcs4FacilityHistorical15minNumber=pcs4FacilityHistorical15minNumber, endOfOptMuxPhysInstValueTable=endOfOptMuxPhysInstValueTable, macIcRxShelfConnectionHistorical1dayNumber=macIcRxShelfConnectionHistorical1dayNumber, optDcnHistorical15minLow=optDcnHistorical15minLow, pumpPwrOptMuxHistorical1dayTable=pumpPwrOptMuxHistorical1dayTable, pcs2FacilityHistorical1dayNumber=pcs2FacilityHistorical1dayNumber, optDcnHistorical15minMean=optDcnHistorical15minMean, snrFacilityHistorical15minTable=snrFacilityHistorical15minTable, l2PortRxFacilityHistorical15minBytesFrames1024Rcv=l2PortRxFacilityHistorical15minBytesFrames1024Rcv, frRcv4FacilityHistorical15minEntry=frRcv4FacilityHistorical15minEntry, lldpFrameFacilityHistorical15minValidFlag=lldpFrameFacilityHistorical15minValidFlag, pcsRxFacilityCurrent1dayCV=pcsRxFacilityCurrent1dayCV, brOptMuxHistorical1dayMean=brOptMuxHistorical1dayMean, facilityDataThresholdSESOduHT1day=facilityDataThresholdSESOduHT1day, sFacilityHistorical1daySES=sFacilityHistorical1daySES, eqptPhysInstValueLaserTemp=eqptPhysInstValueLaserTemp, oscGainOptMuxHistorical1dayLow=oscGainOptMuxHistorical1dayLow, facilityDataThresholdBBEOduHT15min=facilityDataThresholdBBEOduHT15min, sFacilityHistorical1dayNumber=sFacilityHistorical1dayNumber, l2PortRxFacilityCurrent1dayBytesFrames64Rcv=l2PortRxFacilityCurrent1dayBytesFrames64Rcv, oscGainOptMuxHistorical15minNumber=oscGainOptMuxHistorical15minNumber, endOfDsFacilityCurrent15minTable=endOfDsFacilityCurrent15minTable, discsBlockFacilityHistorical15minTimeStamp=discsBlockFacilityHistorical15minTimeStamp, endOfMacRxShelfConnectionCurrent1dayTable=endOfMacRxShelfConnectionCurrent1dayTable, endOfOptFacilityHistorical1dayTable=endOfOptFacilityHistorical1dayTable, frRcv2FacilityHistorical15minTimeStamp=frRcv2FacilityHistorical15minTimeStamp, endOfPcs3FacilityCurrent1dayTable=endOfPcs3FacilityCurrent1dayTable, l2PortRxFacilityCurrent15minBytesFrames1024Rcv=l2PortRxFacilityCurrent15minBytesFrames1024Rcv, lldpTLVRxFacilityHistorical1dayTLVRxUnknown=lldpTLVRxFacilityHistorical1dayTLVRxUnknown, cfotFacilityHistorical15minHigh=cfotFacilityHistorical15minHigh, pcs4FacilityCurrent1dayElapsedTime=pcs4FacilityCurrent1dayElapsedTime, l2PortRxFacilityHistorical1dayTimeStamp=l2PortRxFacilityHistorical1dayTimeStamp, facilityPhysInstValueInputPower=facilityPhysInstValueInputPower, dcnPhysInstValuelbcl=dcnPhysInstValuelbcl, brTxOptMuxHistorical1dayLow=brTxOptMuxHistorical1dayLow, pmFacilityPhysValue=pmFacilityPhysValue, pmDcnDataThreshold=pmDcnDataThreshold, endOfAmpInEqptHistorical15minTable=endOfAmpInEqptHistorical15minTable, pumpPwrOptMuxHistorical1weekLow=pumpPwrOptMuxHistorical1weekLow, facilityDataThresholdBBETcmaHT15min=facilityDataThresholdBBETcmaHT15min, cdcFacilityHistorical1dayTable=cdcFacilityHistorical1dayTable, macTxDcnHistorical1dayValidFlag=macTxDcnHistorical1dayValidFlag, endOfSFacilityHistorical15minTable=endOfSFacilityHistorical15minTable, pcsTxFacilityHistorical1dayESTX=pcsTxFacilityHistorical1dayESTX, estSigGainOptMuxHistorical1weekMean=estSigGainOptMuxHistorical1weekMean, ampEqptHistorical15minHigh=ampEqptHistorical15minHigh, lFacilityCurrent1dayElapsedTime=lFacilityCurrent1dayElapsedTime, macRxDcnHistorical15minNumber=macRxDcnHistorical15minNumber, macRxDcnHistorical1dayMulticastFramesRcv=macRxDcnHistorical1dayMulticastFramesRcv, l2PortRxFacilityCurrent1dayBroadcastFramesRcv=l2PortRxFacilityCurrent1dayBroadcastFramesRcv, pcs1FacilityCurrent15minElapsedTime=pcs1FacilityCurrent15minElapsedTime, otuFecFacilityCurrent1dayEntry=otuFecFacilityCurrent1dayEntry, optMuxPhysThresholdOpticalInputPwrLow=optMuxPhysThresholdOpticalInputPwrLow, lldpFrameFacilityHistorical15minEntry=lldpFrameFacilityHistorical15minEntry, pcs1FacilityCurrent15minSE=pcs1FacilityCurrent15minSE, frRcv3FacilityCurrent1dayBytesFrames64Rcv=frRcv3FacilityCurrent1dayBytesFrames64Rcv, otuFacilityHistorical15minValidFlag=otuFacilityHistorical15minValidFlag, macRxShelfConnectionHistorical1dayValidFlag=macRxShelfConnectionHistorical1dayValidFlag, endOfTcmCFacilityCurrent15minTable=endOfTcmCFacilityCurrent15minTable, optDcnHistorical15minHigh=optDcnHistorical15minHigh, tcmAFacilityCurrent15minEntry=tcmAFacilityCurrent15minEntry, frRcv1FacilityCurrent15minCrcFrames=frRcv1FacilityCurrent15minCrcFrames, facilityDataThresholdCRCFrEgrsHT1day=facilityDataThresholdCRCFrEgrsHT1day, pmOptMuxDataRecord=pmOptMuxDataRecord, ampEqptHistorical15minMean=ampEqptHistorical15minMean, atRcvOptMuxHistorical1dayMean=atRcvOptMuxHistorical1dayMean, pcsRxFacilityHistorical15minCV=pcsRxFacilityHistorical15minCV, tcmCFacilityCurrent15minElapsedTime=tcmCFacilityCurrent15minElapsedTime, utlRxFacilityHistorical1dayUtlLow=utlRxFacilityHistorical1dayUtlLow, fec2FacilityHistorical1dayTimeStamp=fec2FacilityHistorical1dayTimeStamp, eqptPhysInstValuePsuAmpere=eqptPhysInstValuePsuAmpere, atRcvOptMuxHistorical1weekMean=atRcvOptMuxHistorical1weekMean, estSigGainOptMuxHistorical15minTimeStamp=estSigGainOptMuxHistorical15minTimeStamp, frRcv2ShelfConnectionCurrent15minBytes=frRcv2ShelfConnectionCurrent15minBytes, endOfFrRcv2ShelfConnectionCurrent1dayTable=endOfFrRcv2ShelfConnectionCurrent1dayTable, l2PortRxFacilityHistorical1dayBytesFrames1024Rcv=l2PortRxFacilityHistorical1dayBytesFrames1024Rcv, oscGainOptMuxHistorical1dayHigh=oscGainOptMuxHistorical1dayHigh, tcmBFacilityHistorical15minES=tcmBFacilityHistorical15minES, atrcvDcnHistorical1dayTable=atrcvDcnHistorical1dayTable, frRcv4FacilityCurrent15minEntry=frRcv4FacilityCurrent15minEntry, endOfTcmBFacilityHistorical1dayTable=endOfTcmBFacilityHistorical1dayTable, endOfOtuFecFacilityHistorical1dayTable=endOfOtuFecFacilityHistorical1dayTable, facilityPhysInstValueLaserBiasCurrentNormalized=facilityPhysInstValueLaserBiasCurrentNormalized, lldpTLVRxFacilityHistorical15minTimeStamp=lldpTLVRxFacilityHistorical15minTimeStamp, tcmBFacilityCurrent1dayES=tcmBFacilityCurrent1dayES, brOptMuxHistorical15minTable=brOptMuxHistorical15minTable, frRcv2ShelfConnectionHistorical1dayCrcFrames=frRcv2ShelfConnectionHistorical1dayCrcFrames, pmDcnPhysical=pmDcnPhysical, frRcv3FacilityCurrent1dayMulticastFramesRcv=frRcv3FacilityCurrent1dayMulticastFramesRcv, endOfMacErrRxShelfConnectionHistorical15minTable=endOfMacErrRxShelfConnectionHistorical15minTable, lldpTLVFacilityCurrent1dayElapsedTime=lldpTLVFacilityCurrent1dayElapsedTime, dsOptMuxHistorical15minDS=dsOptMuxHistorical15minDS, frRcv2ShelfConnectionHistorical15minTable=frRcv2ShelfConnectionHistorical15minTable, fec2FacilityHistorical15minUBE=fec2FacilityHistorical15minUBE, tcmCFacilityHistorical15minValidFlag=tcmCFacilityHistorical15minValidFlag, rsFacilityHistorical15minSEFS=rsFacilityHistorical15minSEFS, frRcv2DcnCurrent15minElapsedTime=frRcv2DcnCurrent15minElapsedTime, msFacilityHistorical1daySES=msFacilityHistorical1daySES, optMuxPhysInstValueSubTemp=optMuxPhysInstValueSubTemp, macSzRxShelfConnectionHistorical1dayBytesFrames512Rcv=macSzRxShelfConnectionHistorical1dayBytesFrames512Rcv, msFacilityHistorical1dayValidFlag=msFacilityHistorical1dayValidFlag, l2PortRxFacilityCurrent15minMulticastFramesRcv=l2PortRxFacilityCurrent15minMulticastFramesRcv, frRcv1FacilityHistorical1dayGoodFrames=frRcv1FacilityHistorical1dayGoodFrames, oprOptMuxHistorical15minNumber=oprOptMuxHistorical15minNumber, endOfRsFacilityHistorical15minTable=endOfRsFacilityHistorical15minTable, pcs1FacilityHistorical15minCV=pcs1FacilityHistorical15minCV, frRcv2FacilityCurrent1dayGoodFrames=frRcv2FacilityCurrent1dayGoodFrames, endOfMacSzRxDcnHistorical1dayTable=endOfMacSzRxDcnHistorical1dayTable, checfrFacilityHistorical15minNumber=checfrFacilityHistorical15minNumber, tcmAFacilityHistorical15minNumber=tcmAFacilityHistorical15minNumber, pcs2FacilityCurrent15minDE=pcs2FacilityCurrent15minDE, oscOptOptMuxHistorical15minMean=oscOptOptMuxHistorical15minMean, pcsTxFacilityCurrent1dayCVTX=pcsTxFacilityCurrent1dayCVTX, cdFacilityHistorical1weekValidFlag=cdFacilityHistorical1weekValidFlag, macSzRxDcnCurrent15minBytesFrames1519Rcv=macSzRxDcnCurrent15minBytesFrames1519Rcv, frRcv2ShelfConnectionHistorical15minEntry=frRcv2ShelfConnectionHistorical15minEntry, macSzRxShelfConnectionHistorical15minTimeStamp=macSzRxShelfConnectionHistorical15minTimeStamp, frTrmt2FacilityHistorical1dayNumber=frTrmt2FacilityHistorical1dayNumber, pcs3FacilityHistorical15minValidFlag=pcs3FacilityHistorical15minValidFlag, macTxDcnCurrent1dayDiscardedFramesTrmt=macTxDcnCurrent1dayDiscardedFramesTrmt, frTrmt2FacilityHistorical1dayTimeStamp=frTrmt2FacilityHistorical1dayTimeStamp, qfactFacilityHistorical1dayMean=qfactFacilityHistorical1dayMean, frRcv4FacilityHistorical1dayGoodFrames=frRcv4FacilityHistorical1dayGoodFrames, lldpTLVFacilityHistorical1dayTable=lldpTLVFacilityHistorical1dayTable, l2PortTxFacilityCurrent1dayBytesFrames512Trmt=l2PortTxFacilityCurrent1dayBytesFrames512Trmt, lldpFrameRxFacilityHistorical15minFrameRxErrors=lldpFrameRxFacilityHistorical15minFrameRxErrors, lldpFrameRxFacilityHistorical15minLLDPFramesRx=lldpFrameRxFacilityHistorical15minLLDPFramesRx, macTxDcnCurrent1dayFramesTrmt=macTxDcnCurrent1dayFramesTrmt, macTxShelfConnectionHistorical1dayFramesTrmt=macTxShelfConnectionHistorical1dayFramesTrmt, endOfMacTxShelfConnectionHistorical15minTable=endOfMacTxShelfConnectionHistorical15minTable, macSzRxDcnCurrent15minBytesFrames256Rcv=macSzRxDcnCurrent15minBytesFrames256Rcv, macTxDcnCurrent1dayMulticastFramesTrmt=macTxDcnCurrent1dayMulticastFramesTrmt, ampEqptHistorical1dayTimeStamp=ampEqptHistorical1dayTimeStamp, facilityDataThresholdCVLHT15min=facilityDataThresholdCVLHT15min, pcs2FacilityCurrent15minElapsedTime=pcs2FacilityCurrent15minElapsedTime, sarLinkRcvFacilityHistorical15minValidFlag=sarLinkRcvFacilityHistorical15minValidFlag, atRcvOptMuxHistorical1dayNumber=atRcvOptMuxHistorical1dayNumber, voltInpEqptHistorical15minTable=voltInpEqptHistorical15minTable, endOfFrRcv1FacilityHistorical1dayTable=endOfFrRcv1FacilityHistorical1dayTable, lFacilityHistorical15minSES=lFacilityHistorical15minSES, pcsTxFacilityHistorical15minNumber=pcsTxFacilityHistorical15minNumber, gfpfrFacilityCurrent15minCHecDiscardedFrames=gfpfrFacilityCurrent15minCHecDiscardedFrames, facilityPhysInstValueOutputPowerRaw=facilityPhysInstValueOutputPowerRaw, endOfRndTrpDlyFacilityHistorical1dayTable=endOfRndTrpDlyFacilityHistorical1dayTable, endOfBrTxOptMuxHistorical1dayTable=endOfBrTxOptMuxHistorical1dayTable, pmFacilityDataThreshold=pmFacilityDataThreshold, frTrmt1FacilityCurrent1dayGoodFramesx=frTrmt1FacilityCurrent1dayGoodFramesx, pcsTxFacilityCurrent15minESTX=pcsTxFacilityCurrent15minESTX, advaFspR7Pm=advaFspR7Pm, msFacilityHistorical1dayBBE=msFacilityHistorical1dayBBE, macErrRxShelfConnectionCurrent1dayCrcErrorsRcv=macErrRxShelfConnectionCurrent1dayCrcErrorsRcv, checfrFacilityCurrent15minEntry=checfrFacilityCurrent15minEntry, oduFacilityCurrent15minBbe=oduFacilityCurrent15minBbe, optMuxPhysThresholdLaserTempHighThres=optMuxPhysThresholdLaserTempHighThres, optMuxPhysThresholdAprHighThreshold=optMuxPhysThresholdAprHighThreshold, macTxShelfConnectionHistorical15minFramesTrmt=macTxShelfConnectionHistorical15minFramesTrmt, l2PortTxFacilityHistorical1dayFramesTrmt=l2PortTxFacilityHistorical1dayFramesTrmt, facilityDataThresholdCRCFrEgrsHT15min=facilityDataThresholdCRCFrEgrsHT15min, frRcv2DcnCurrent1dayEntry=frRcv2DcnCurrent1dayEntry, lldpFrameTxFacilityHistorical1dayNumber=lldpFrameTxFacilityHistorical1dayNumber, tcmBFacilityCurrent15minES=tcmBFacilityCurrent15minES, estSigGainOptMuxHistorical1weekEntry=estSigGainOptMuxHistorical1weekEntry, macErrRxDcnHistorical15minValidFlag=macErrRxDcnHistorical15minValidFlag, endOfRsFacilityHistorical1dayTable=endOfRsFacilityHistorical1dayTable, frRcv1FacilityHistorical1dayCrcFrames=frRcv1FacilityHistorical1dayCrcFrames, eqptPhysThresholdEntry=eqptPhysThresholdEntry, tcmCFacilityCurrent1dayTable=tcmCFacilityCurrent1dayTable, endOfFrTrmt1FacilityCurrent1dayTable=endOfFrTrmt1FacilityCurrent1dayTable, facilityPhysInstValuePrbsMaxBER=facilityPhysInstValuePrbsMaxBER, l2PortRxFacilityHistorical15minEntry=l2PortRxFacilityHistorical15minEntry, endOfAmpInEqptHistorical1weekTable=endOfAmpInEqptHistorical1weekTable, dsFacilityHistorical15minTimeStamp=dsFacilityHistorical15minTimeStamp, optDcnHistorical1weekMean=optDcnHistorical1weekMean, facilityDataInstValueUtilizationRx=facilityDataInstValueUtilizationRx, facilityDataThresholdUASTcmbHT1day=facilityDataThresholdUASTcmbHT1day, oscGainOptMuxHistorical1weekValidFlag=oscGainOptMuxHistorical1weekValidFlag, sFacilityHistorical15minNumber=sFacilityHistorical15minNumber, facilityDataThresholdSESTcmcHT1day=facilityDataThresholdSESTcmcHT1day, dgdFacilityHistorical1dayNumber=dgdFacilityHistorical1dayNumber, lldpTLVRxFacilityHistorical1dayTable=lldpTLVRxFacilityHistorical1dayTable, pmEqptPhysValue=pmEqptPhysValue, oprFacilityHistorical15minEntry=oprFacilityHistorical15minEntry, optMuxPhysInstValueInputPower=optMuxPhysInstValueInputPower, brTxOptMuxHistorical1weekNumber=brTxOptMuxHistorical1weekNumber, msFacilityCurrent1dayTable=msFacilityCurrent1dayTable, frRcv2FacilityCurrent1dayBytes=frRcv2FacilityCurrent1dayBytes, dgdFacilityHistorical1dayValidFlag=dgdFacilityHistorical1dayValidFlag, l2PortRxFacilityCurrent1dayPauseFramesRcv=l2PortRxFacilityCurrent1dayPauseFramesRcv, tcmBFacilityCurrent1dayUAS=tcmBFacilityCurrent1dayUAS, oprDcnHistorical15minLow=oprDcnHistorical15minLow, fecFacilityCurrent1dayEntry=fecFacilityCurrent1dayEntry, frRcv2FacilityHistorical1dayTable=frRcv2FacilityHistorical1dayTable, lbcnDcnHistorical1weekLow=lbcnDcnHistorical1weekLow, pcs3FacilityCurrent1dayTable=pcs3FacilityCurrent1dayTable, voltInpEqptHistorical1weekNumber=voltInpEqptHistorical1weekNumber, lldpFrameTxFacilityCurrent15minElapsedTime=lldpFrameTxFacilityCurrent15minElapsedTime, endOfOscGainOptMuxHistorical1weekTable=endOfOscGainOptMuxHistorical1weekTable)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", pumpPwrOptMuxHistorical15minHigh=pumpPwrOptMuxHistorical15minHigh, macTxShelfConnectionHistorical15minDiscardedFramesTrmt=macTxShelfConnectionHistorical15minDiscardedFramesTrmt, frRcv2DcnCurrent15minEntry=frRcv2DcnCurrent15minEntry, qfactFacilityHistorical15minTimeStamp=qfactFacilityHistorical15minTimeStamp, pcs4FacilityHistorical1dayNumber=pcs4FacilityHistorical1dayNumber, endOfLFacilityHistorical15minTable=endOfLFacilityHistorical15minTable, frRcv3FacilityCurrent1dayFragmentFramesRcv=frRcv3FacilityCurrent1dayFragmentFramesRcv, sarLinkTrmtFacilityHistorical15minES=sarLinkTrmtFacilityHistorical15minES, endOfOscOptOptMuxHistorical15minTable=endOfOscOptOptMuxHistorical15minTable, frRcv3FacilityHistorical15minMulticastFramesRcv=frRcv3FacilityHistorical15minMulticastFramesRcv, optOptMuxHistorical1weekEntry=optOptMuxHistorical1weekEntry, brTxOptMuxHistorical1dayValidFlag=brTxOptMuxHistorical1dayValidFlag, atrcvDcnHistorical1dayHigh=atrcvDcnHistorical1dayHigh, endOfPmTerminPointPhysical=endOfPmTerminPointPhysical, macErrRxDcnHistorical15minTimeStamp=macErrRxDcnHistorical15minTimeStamp, dsOptMuxHistorical1dayTimeStamp=dsOptMuxHistorical1dayTimeStamp, atRcvOptMuxHistorical15minNumber=atRcvOptMuxHistorical15minNumber, cdFacilityHistorical1dayEntry=cdFacilityHistorical1dayEntry, endOfGfpfrFacilityHistorical15minTable=endOfGfpfrFacilityHistorical15minTable, macErrRxDcnHistorical1dayEntry=macErrRxDcnHistorical1dayEntry, voltInpEqptHistorical1weekMean=voltInpEqptHistorical1weekMean, oprFacilityHistorical1dayTable=oprFacilityHistorical1dayTable, macSzRxShelfConnectionHistorical1dayValidFlag=macSzRxShelfConnectionHistorical1dayValidFlag, oscPwrOptMuxHistorical15minValidFlag=oscPwrOptMuxHistorical15minValidFlag, endOfMacIcTxShelfConnectionCurrent15minTable=endOfMacIcTxShelfConnectionCurrent15minTable, pcs1FacilityHistorical15minES=pcs1FacilityHistorical15minES, endOfPcs1FacilityHistorical1dayTable=endOfPcs1FacilityHistorical1dayTable, tcmCFacilityHistorical15minEntry=tcmCFacilityHistorical15minEntry, lldpFrameTxFacilityHistorical15minTable=lldpFrameTxFacilityHistorical15minTable, dsFacilityHistorical1dayNumber=dsFacilityHistorical1dayNumber, dgdFacilityHistorical1weekNumber=dgdFacilityHistorical1weekNumber, frRcv3FacilityHistorical1dayBytesFrames1519Rcv=frRcv3FacilityHistorical1dayBytesFrames1519Rcv, pcs4FacilityCurrent15minElapsedTime=pcs4FacilityCurrent15minElapsedTime, endOfMacErrRxDcnHistorical1dayTable=endOfMacErrRxDcnHistorical1dayTable, pcsRxFacilityHistorical1dayTimeStamp=pcsRxFacilityHistorical1dayTimeStamp, l2PortTxFacilityHistorical15minBytesFrames512Trmt=l2PortTxFacilityHistorical15minBytesFrames512Trmt, frRcv1FacilityHistorical15minTimeStamp=frRcv1FacilityHistorical15minTimeStamp, qfactFacilityHistorical1dayEntry=qfactFacilityHistorical1dayEntry, ampInEqptHistorical15minEntry=ampInEqptHistorical15minEntry, oscOptOptMuxHistorical15minNumber=oscOptOptMuxHistorical15minNumber, oscPwrOptMuxHistorical1dayNumber=oscPwrOptMuxHistorical1dayNumber, otuFecFacilityHistorical15minValidFlag=otuFecFacilityHistorical15minValidFlag, macTxShelfConnectionHistorical1dayValidFlag=macTxShelfConnectionHistorical1dayValidFlag, oscPwrOptMuxHistorical1weekValidFlag=oscPwrOptMuxHistorical1weekValidFlag, qfactFacilityHistorical1weekLow=qfactFacilityHistorical1weekLow, facilityPhysThresholdEntry=facilityPhysThresholdEntry, facilityDataThresholdBBEPcsHT1day=facilityDataThresholdBBEPcsHT1day, muxFacilityCurrent15minES=muxFacilityCurrent15minES, msFacilityCurrent15minTable=msFacilityCurrent15minTable, utlRxFacilityHistorical15minNumber=utlRxFacilityHistorical15minNumber, byteTrmtFacilityHistorical15minFramesTrmt=byteTrmtFacilityHistorical15minFramesTrmt, pcs2FacilityCurrent1dayEntry=pcs2FacilityCurrent1dayEntry, l2PortTxFacilityCurrent15minBytesFrames1519Trmt=l2PortTxFacilityCurrent15minBytesFrames1519Trmt, endOfPcsTxFacilityHistorical1dayTable=endOfPcsTxFacilityHistorical1dayTable, cdFacilityHistorical1dayMean=cdFacilityHistorical1dayMean, oscOptOptMuxHistorical1dayTable=oscOptOptMuxHistorical1dayTable, macTxShelfConnectionHistorical15minTimeStamp=macTxShelfConnectionHistorical15minTimeStamp, msFacilityCurrent1dayBBE=msFacilityCurrent1dayBBE, lldpFrameRxFacilityHistorical1dayTable=lldpFrameRxFacilityHistorical1dayTable, macErrRxDcnHistorical15minNumber=macErrRxDcnHistorical15minNumber, macIcRxShelfConnectionCurrent15minEntry=macIcRxShelfConnectionCurrent15minEntry, tcmAFacilityHistorical15minTable=tcmAFacilityHistorical15minTable, l2PortRxFacilityHistorical15minBytesFrames512Rcv=l2PortRxFacilityHistorical15minBytesFrames512Rcv, pcs3FacilityHistorical15minTable=pcs3FacilityHistorical15minTable, pumpPwrOptMuxHistorical1weekNumber=pumpPwrOptMuxHistorical1weekNumber, byteTrmtFacilityCurrent1dayFramesTrmt=byteTrmtFacilityCurrent1dayFramesTrmt, macTxShelfConnectionCurrent1dayTable=macTxShelfConnectionCurrent1dayTable, macRxDcnHistorical1dayOctRcv=macRxDcnHistorical1dayOctRcv, endOfLFacilityCurrent1dayTable=endOfLFacilityCurrent1dayTable, l2PortRxFacilityHistorical1dayBytesFrames512Rcv=l2PortRxFacilityHistorical1dayBytesFrames512Rcv, lldpFrameTxFacilityCurrent1dayFrameTxErrors=lldpFrameTxFacilityCurrent1dayFrameTxErrors, rsFacilityCurrent1dayElapsedTime=rsFacilityCurrent1dayElapsedTime, fecFacilityCurrent15minEntry=fecFacilityCurrent15minEntry, macRxDcnCurrent1dayGoodFrames=macRxDcnCurrent1dayGoodFrames, endOfChecfrFacilityHistorical1dayTable=endOfChecfrFacilityHistorical1dayTable, l2PortTxFacilityCurrent15minBytesFrames65Trmt=l2PortTxFacilityCurrent15minBytesFrames65Trmt, macRxShelfConnectionHistorical1dayTable=macRxShelfConnectionHistorical1dayTable, pcs3FacilityCurrent1dayCVDE=pcs3FacilityCurrent1dayCVDE, atRcvOptMuxHistorical1dayHigh=atRcvOptMuxHistorical1dayHigh, dsFacilityHistorical15minValidFlag=dsFacilityHistorical15minValidFlag, oprDcnHistorical15minMean=oprDcnHistorical15minMean, frRcv3FacilityCurrent15minBytesFrames512Rcv=frRcv3FacilityCurrent15minBytesFrames512Rcv, macRxShelfConnectionCurrent15minElapsedTime=macRxShelfConnectionCurrent15minElapsedTime, cdFacilityHistorical1dayValidFlag=cdFacilityHistorical1dayValidFlag, atRcvOptMuxHistorical1dayValidFlag=atRcvOptMuxHistorical1dayValidFlag, tcmCFacilityCurrent1dayElapsedTime=tcmCFacilityCurrent1dayElapsedTime, endOfLbcnFacilityHistorical1dayTable=endOfLbcnFacilityHistorical1dayTable, otuFecFacilityCurrent15minTable=otuFecFacilityCurrent15minTable, l2PortTxFacilityCurrent1dayElapsedTime=l2PortTxFacilityCurrent1dayElapsedTime, endOfFrRcv2DcnHistorical1dayTable=endOfFrRcv2DcnHistorical1dayTable, frRcv3FacilityCurrent1dayBroadcastFramesRcv=frRcv3FacilityCurrent1dayBroadcastFramesRcv, sarLinkRcvFacilityHistorical1dayTable=sarLinkRcvFacilityHistorical1dayTable, utlRxFacilityCurrent1dayUtlMean=utlRxFacilityCurrent1dayUtlMean, frRcv1FacilityHistorical15minDiscardedFrames=frRcv1FacilityHistorical15minDiscardedFrames, brOptMuxHistorical15minMean=brOptMuxHistorical15minMean, estSigGainOptMuxHistorical15minEntry=estSigGainOptMuxHistorical15minEntry, discsBlockFacilityCurrent15minTable=discsBlockFacilityCurrent15minTable, lbcnFacilityHistorical15minHigh=lbcnFacilityHistorical15minHigh, otuFecFacilityCurrent15minElapsedTime=otuFecFacilityCurrent15minElapsedTime, pcs1FacilityHistorical15minNumber=pcs1FacilityHistorical15minNumber, lldpFrameTxFacilityHistorical15minValidFlag=lldpFrameTxFacilityHistorical15minValidFlag, endOfMuxFacilityCurrent15minTable=endOfMuxFacilityCurrent15minTable, sarLinkRcvFacilityCurrent1dayElapsedTime=sarLinkRcvFacilityCurrent1dayElapsedTime, fec2FacilityHistorical15minTimeStamp=fec2FacilityHistorical15minTimeStamp, endOfDgdFacilityHistorical1dayTable=endOfDgdFacilityHistorical1dayTable, sarLinkTrmtFacilityHistorical1dayTable=sarLinkTrmtFacilityHistorical1dayTable, utlRxFacilityCurrent15minEntry=utlRxFacilityCurrent15minEntry, oscPwrOptMuxHistorical15minHigh=oscPwrOptMuxHistorical15minHigh, pmFacilityPhysRecord=pmFacilityPhysRecord, macErrRxShelfConnectionHistorical1dayTimeStamp=macErrRxShelfConnectionHistorical1dayTimeStamp, endOfBrTxOptMuxHistorical1weekTable=endOfBrTxOptMuxHistorical1weekTable, pcs3FacilityHistorical1dayTimeStamp=pcs3FacilityHistorical1dayTimeStamp, frRcv3FacilityHistorical15minBytesFrames256Rcv=frRcv3FacilityHistorical15minBytesFrames256Rcv, msFacilityHistorical15minUAS=msFacilityHistorical15minUAS, pmTerminPointDataThreshold=pmTerminPointDataThreshold, macIcTxShelfConnectionCurrent1dayTable=macIcTxShelfConnectionCurrent1dayTable, otuFacilityHistorical1dayEntry=otuFacilityHistorical1dayEntry, l2PortRxFacilityCurrent15minElapsedTime=l2PortRxFacilityCurrent15minElapsedTime, frRcv3FacilityCurrent1dayElapsedTime=frRcv3FacilityCurrent1dayElapsedTime, otuFacilityHistorical1dayNumber=otuFacilityHistorical1dayNumber, tcmAFacilityHistorical15minValidFlag=tcmAFacilityHistorical15minValidFlag, pcs2FacilityCurrent1dayElapsedTime=pcs2FacilityCurrent1dayElapsedTime, eqptPhysInstValueOutputPwr=eqptPhysInstValueOutputPwr, pcs1FacilityHistorical1daySE=pcs1FacilityHistorical1daySE, latencyFacilityHistorical15minMean=latencyFacilityHistorical15minMean, brOptMuxHistorical1dayValidFlag=brOptMuxHistorical1dayValidFlag, oscOptOptMuxHistorical1weekHigh=oscOptOptMuxHistorical1weekHigh, utlRxFacilityCurrent15minUtlHigh=utlRxFacilityCurrent15minUtlHigh, frRcv2DcnHistorical15minTimeStamp=frRcv2DcnHistorical15minTimeStamp, frRcv1FacilityHistorical15minPauseFrames=frRcv1FacilityHistorical15minPauseFrames, lbcnFacilityHistorical1dayTimeStamp=lbcnFacilityHistorical1dayTimeStamp, endOfPcs4FacilityCurrent15minTable=endOfPcs4FacilityCurrent15minTable, frRcv2FacilityHistorical1dayGoodFrames=frRcv2FacilityHistorical1dayGoodFrames, frRcv2FacilityCurrent1dayCrcFrames=frRcv2FacilityCurrent1dayCrcFrames, dgdFacilityHistorical15minEntry=dgdFacilityHistorical15minEntry, frRcv2ShelfConnectionCurrent1dayBytes=frRcv2ShelfConnectionCurrent1dayBytes, facilityDataThresholdESTcmcHT15min=facilityDataThresholdESTcmcHT15min, frRcv3FacilityHistorical15minCrcFrames=frRcv3FacilityHistorical15minCrcFrames, gfpfrFacilityHistorical15minTable=gfpfrFacilityHistorical15minTable, rsFacilityHistorical15minOOFS=rsFacilityHistorical15minOOFS, pumpPwrOptMuxHistorical1dayTimeStamp=pumpPwrOptMuxHistorical1dayTimeStamp, endOfOprFacilityHistorical15minTable=endOfOprFacilityHistorical15minTable, pcs1FacilityHistorical15minValidFlag=pcs1FacilityHistorical15minValidFlag, l2PortTxFacilityCurrent1dayBytesFrames64Trmt=l2PortTxFacilityCurrent1dayBytesFrames64Trmt, frRcv2FacilityHistorical1dayBytes=frRcv2FacilityHistorical1dayBytes, frTrmt2FacilityHistorical1dayTable=frTrmt2FacilityHistorical1dayTable, cfotFacilityHistorical15minMean=cfotFacilityHistorical15minMean, ampInEqptHistorical1weekTable=ampInEqptHistorical1weekTable, cfotFacilityHistorical1dayTable=cfotFacilityHistorical1dayTable, frRcv2FacilityCurrent15minEntry=frRcv2FacilityCurrent15minEntry, cdFacilityHistorical15minValidFlag=cdFacilityHistorical15minValidFlag, endOfMacErrRxShelfConnectionHistorical1dayTable=endOfMacErrRxShelfConnectionHistorical1dayTable, dsOptMuxCurrent1dayTable=dsOptMuxCurrent1dayTable, lldpFrameFacilityHistorical1dayEntry=lldpFrameFacilityHistorical1dayEntry, atrcvDcnHistorical1weekMean=atrcvDcnHistorical1weekMean, endOfMuxFacilityHistorical15minTable=endOfMuxFacilityHistorical15minTable, pcs3FacilityHistorical1dayTable=pcs3FacilityHistorical1dayTable, muxFacilityHistorical1dayEntry=muxFacilityHistorical1dayEntry, l2PortRxFacilityCurrent1dayTable=l2PortRxFacilityCurrent1dayTable, endOfFacilityDataInstValueTable=endOfFacilityDataInstValueTable, snrFacilityHistorical1dayTable=snrFacilityHistorical1dayTable, lFacilityHistorical15minTimeStamp=lFacilityHistorical15minTimeStamp, macTxShelfConnectionCurrent15minDiscardedFramesTrmt=macTxShelfConnectionCurrent15minDiscardedFramesTrmt, tcmBFacilityCurrent1daySES=tcmBFacilityCurrent1daySES, muxFacilityHistorical15minTable=muxFacilityHistorical15minTable, l2PortTxFacilityHistorical15minValidFlag=l2PortTxFacilityHistorical15minValidFlag, facilityDataThresholdESTcmaHT1day=facilityDataThresholdESTcmaHT1day, macErrRxShelfConnectionHistorical15minOversizedFramesRcv=macErrRxShelfConnectionHistorical15minOversizedFramesRcv, oprDcnHistorical1weekHigh=oprDcnHistorical1weekHigh, checfrFacilityHistorical15minValidFlag=checfrFacilityHistorical15minValidFlag, atRcvOptMuxHistorical1weekHigh=atRcvOptMuxHistorical1weekHigh, facilityPhysThresholdRoundTripDelayLowThres=facilityPhysThresholdRoundTripDelayLowThres, facilityPhysThresholdLocalOscTempLowThres=facilityPhysThresholdLocalOscTempLowThres, macSzRxDcnHistorical15minBytesFrames512Rcv=macSzRxDcnHistorical15minBytesFrames512Rcv, utlTxFacilityHistorical1dayUtlMean=utlTxFacilityHistorical1dayUtlMean, l2PortRxFacilityCurrent1dayBytesFrames512Rcv=l2PortRxFacilityCurrent1dayBytesFrames512Rcv, fec2FacilityCurrent1dayUBE=fec2FacilityCurrent1dayUBE, discsBlockFacilityHistorical1dayValidFlag=discsBlockFacilityHistorical1dayValidFlag, brTxOptMuxHistorical1weekMean=brTxOptMuxHistorical1weekMean, optMuxPhysInstValueLaserTemp=optMuxPhysInstValueLaserTemp, brTxOptMuxHistorical15minValidFlag=brTxOptMuxHistorical15minValidFlag, sarLinkTrmtFacilityCurrent1dayEntry=sarLinkTrmtFacilityCurrent1dayEntry, frRcv3FacilityHistorical15minFragmentFramesRcv=frRcv3FacilityHistorical15minFragmentFramesRcv, facilityDataThresholdCVDEPcsHT1day=facilityDataThresholdCVDEPcsHT1day, oscPwrOptMuxHistorical15minTimeStamp=oscPwrOptMuxHistorical15minTimeStamp, otuFacilityHistorical15minBbe=otuFacilityHistorical15minBbe, optFacilityHistorical1weekHigh=optFacilityHistorical1weekHigh, endOfFacilityPhysThresholdTable=endOfFacilityPhysThresholdTable, tcmBFacilityCurrent15minEntry=tcmBFacilityCurrent15minEntry, pcs4FacilityHistorical15minTable=pcs4FacilityHistorical15minTable, frRcv3FacilityHistorical1dayJabberFrameRcv=frRcv3FacilityHistorical1dayJabberFrameRcv, endOfOtuFecFacilityHistorical15minTable=endOfOtuFecFacilityHistorical15minTable, macSzRxDcnHistorical15minBytesFrames1519Rcv=macSzRxDcnHistorical15minBytesFrames1519Rcv, pcs4FacilityCurrent15minBBE=pcs4FacilityCurrent15minBBE, snrFacilityHistorical1dayLow=snrFacilityHistorical1dayLow, frRcv4FacilityCurrent15minElapsedTime=frRcv4FacilityCurrent15minElapsedTime, endOfMacSzRxShelfConnectionHistorical1dayTable=endOfMacSzRxShelfConnectionHistorical1dayTable, frRcv2ShelfConnectionCurrent15minElapsedTime=frRcv2ShelfConnectionCurrent15minElapsedTime, otuFecFacilityHistorical1dayTimeStamp=otuFecFacilityHistorical1dayTimeStamp, lldpFrameFacilityCurrent15minFrameTxErrors=lldpFrameFacilityCurrent15minFrameTxErrors, lFacilityCurrent1dayEntry=lFacilityCurrent1dayEntry, macRxShelfConnectionHistorical15minValidFlag=macRxShelfConnectionHistorical15minValidFlag, macSzRxShelfConnectionHistorical1dayBytesFrames1024Rcv=macSzRxShelfConnectionHistorical1dayBytesFrames1024Rcv, facilityDataThresholdSESOduHT15min=facilityDataThresholdSESOduHT15min, frRcv4FacilityHistorical15minValidFlag=frRcv4FacilityHistorical15minValidFlag, frRcv3FacilityCurrent15minBytesFrames1519Rcv=frRcv3FacilityCurrent15minBytesFrames1519Rcv, macTxShelfConnectionHistorical15minNumber=macTxShelfConnectionHistorical15minNumber, l2PortTxFacilityHistorical1dayNumber=l2PortTxFacilityHistorical1dayNumber, lldpFrameRxFacilityHistorical15minLLDPFrameRxDiscards=lldpFrameRxFacilityHistorical15minLLDPFrameRxDiscards, fec2FacilityHistorical15minTable=fec2FacilityHistorical15minTable, macSzRxDcnHistorical15minBytesFrames1024Rcv=macSzRxDcnHistorical15minBytesFrames1024Rcv, macErrRxShelfConnectionCurrent1dayOversizedFramesRcv=macErrRxShelfConnectionCurrent1dayOversizedFramesRcv, endOfSarLinkTrmt1FacilityCurrent1dayTable=endOfSarLinkTrmt1FacilityCurrent1dayTable, macErrRxDcnCurrent15minEntry=macErrRxDcnCurrent15minEntry, optFacilityHistorical1dayMean=optFacilityHistorical1dayMean, facilityDataThresholdSESOtuHT15min=facilityDataThresholdSESOtuHT15min, facilityDataThresholdOOFSSHT15min=facilityDataThresholdOOFSSHT15min, msFacilityHistorical15minES=msFacilityHistorical15minES, snrFacilityHistorical1dayMean=snrFacilityHistorical1dayMean, optMuxPhysThresholdRamanPumpPwrLowThres=optMuxPhysThresholdRamanPumpPwrLowThres, cdcFacilityHistorical1dayNumber=cdcFacilityHistorical1dayNumber, endOfLldpFrameFacilityHistorical1dayTable=endOfLldpFrameFacilityHistorical1dayTable, utlTxFacilityHistorical15minTable=utlTxFacilityHistorical15minTable, facilityDataThresholdESOduHT1day=facilityDataThresholdESOduHT1day, qfactFacilityHistorical1dayTable=qfactFacilityHistorical1dayTable, facilityDataThresholdESSHT15min=facilityDataThresholdESSHT15min, endOfAmpEqptHistorical1dayTable=endOfAmpEqptHistorical1dayTable, optFacilityHistorical1dayEntry=optFacilityHistorical1dayEntry, macTxDcnHistorical1dayTimeStamp=macTxDcnHistorical1dayTimeStamp, frTrmt2FacilityHistorical1dayCrcFramesEgress=frTrmt2FacilityHistorical1dayCrcFramesEgress, endOfMacIcTxShelfConnectionHistorical15minTable=endOfMacIcTxShelfConnectionHistorical15minTable, macSzRxShelfConnectionHistorical1dayNumber=macSzRxShelfConnectionHistorical1dayNumber, pcsTxFacilityCurrent1dayESTX=pcsTxFacilityCurrent1dayESTX, lldpTLVFacilityHistorical15minEntry=lldpTLVFacilityHistorical15minEntry, macSzRxShelfConnectionHistorical1dayBytesFrames65Rcv=macSzRxShelfConnectionHistorical1dayBytesFrames65Rcv, msFacilityHistorical1dayEntry=msFacilityHistorical1dayEntry, cdcFacilityHistorical15minLow=cdcFacilityHistorical15minLow, facilityDataThresholdSESFecHT15min=facilityDataThresholdSESFecHT15min, lFacilityCurrent15minEntry=lFacilityCurrent15minEntry, frRcv1FacilityCurrent15minElapsedTime=frRcv1FacilityCurrent15minElapsedTime, voltInpEqptHistorical1weekEntry=voltInpEqptHistorical1weekEntry, oscPwrOptMuxHistorical1dayValidFlag=oscPwrOptMuxHistorical1dayValidFlag, endOfPcsRxFacilityHistorical15minTable=endOfPcsRxFacilityHistorical15minTable, facilityDataThresholdSESLHT15min=facilityDataThresholdSESLHT15min, msFacilityHistorical15minNumber=msFacilityHistorical15minNumber, macErrRxDcnCurrent15minElapsedTime=macErrRxDcnCurrent15minElapsedTime, endOfPcs3FacilityHistorical1dayTable=endOfPcs3FacilityHistorical1dayTable, utlTxFacilityCurrent15minUtlHigh=utlTxFacilityCurrent15minUtlHigh, endOfBrOptMuxHistorical15minTable=endOfBrOptMuxHistorical15minTable, optOptMuxHistorical15minLow=optOptMuxHistorical15minLow, pcs1FacilityHistorical1dayTimeStamp=pcs1FacilityHistorical1dayTimeStamp, byteTrmtFacilityCurrent15minBytesTrmt=byteTrmtFacilityCurrent15minBytesTrmt, endOfFecFacilityCurrent15minTable=endOfFecFacilityCurrent15minTable, oprFacilityHistorical1dayValidFlag=oprFacilityHistorical1dayValidFlag)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", pcsRxFacilityHistorical1dayValidFlag=pcsRxFacilityHistorical1dayValidFlag, macErrRxDcnCurrent15minTable=macErrRxDcnCurrent15minTable, optMuxPhysInstValueInputPowerRaw=optMuxPhysInstValueInputPowerRaw, endOfCdcFacilityHistorical1dayTable=endOfCdcFacilityHistorical1dayTable, lbcnFacilityHistorical1weekNumber=lbcnFacilityHistorical1weekNumber, macRxShelfConnectionHistorical15minMulticastFramesRcv=macRxShelfConnectionHistorical15minMulticastFramesRcv, facilityDataThresholdCVPcsHT15min=facilityDataThresholdCVPcsHT15min, oprDcnHistorical1dayLow=oprDcnHistorical1dayLow, l2PortRxFacilityCurrent15minBytesFrames256Rcv=l2PortRxFacilityCurrent15minBytesFrames256Rcv, macSzRxDcnCurrent15minBytesFrames64Rcv=macSzRxDcnCurrent15minBytesFrames64Rcv, oscOptOptMuxHistorical15minLow=oscOptOptMuxHistorical15minLow, macTxDcnHistorical1dayFramesTrmt=macTxDcnHistorical1dayFramesTrmt, optMuxPhysThresholdOpticalOutputPwrLow=optMuxPhysThresholdOpticalOutputPwrLow, endOfOptMuxPhysThresholdTable=endOfOptMuxPhysThresholdTable, frRcv2DcnHistorical1dayPauseFrames=frRcv2DcnHistorical1dayPauseFrames, facilityDataThresholdUASOtuHT15min=facilityDataThresholdUASOtuHT15min, pmEqptDataThreshold=pmEqptDataThreshold, endOfSnrFacilityHistorical1dayTable=endOfSnrFacilityHistorical1dayTable, facilityDataThresholdBBEPcsHT15min=facilityDataThresholdBBEPcsHT15min, tcmCFacilityHistorical1dayBbe=tcmCFacilityHistorical1dayBbe, optFacilityHistorical15minTable=optFacilityHistorical15minTable, snrFacilityHistorical1dayHigh=snrFacilityHistorical1dayHigh, endOfRndTrpDlyFacilityHistorical1weekTable=endOfRndTrpDlyFacilityHistorical1weekTable, dsOptMuxHistorical1dayValidFlag=dsOptMuxHistorical1dayValidFlag, macSzRxShelfConnectionCurrent1dayBytesFrames128Rcv=macSzRxShelfConnectionCurrent1dayBytesFrames128Rcv, macErrRxShelfConnectionHistorical15minCrcErrorsRcv=macErrRxShelfConnectionHistorical15minCrcErrorsRcv, oduFacilityHistorical1dayTimeStamp=oduFacilityHistorical1dayTimeStamp, tcmAFacilityCurrent1dayTable=tcmAFacilityCurrent1dayTable, endOfOptOptMuxHistorical1dayTable=endOfOptOptMuxHistorical1dayTable, optOptMuxHistorical1dayEntry=optOptMuxHistorical1dayEntry, fec2FacilityCurrent15minElapsedTime=fec2FacilityCurrent15minElapsedTime, lldpTLVTxFacilityHistorical15minValidFlag=lldpTLVTxFacilityHistorical15minValidFlag, frTrmt1FacilityCurrent15minElapsedTime=frTrmt1FacilityCurrent15minElapsedTime, dgdFacilityHistorical1weekTimeStamp=dgdFacilityHistorical1weekTimeStamp, frTrmt1FacilityCurrent15minPauseFrames=frTrmt1FacilityCurrent15minPauseFrames, brOptMuxHistorical1weekValidFlag=brOptMuxHistorical1weekValidFlag, macSzRxShelfConnectionCurrent15minElapsedTime=macSzRxShelfConnectionCurrent15minElapsedTime, facilityPhysInstValueChromaticDispComp=facilityPhysInstValueChromaticDispComp, endOfDsFacilityHistorical15minTable=endOfDsFacilityHistorical15minTable, lldpFrameTxFacilityCurrent15minTable=lldpFrameTxFacilityCurrent15minTable, macSzRxDcnCurrent1dayBytesFrames65Rcv=macSzRxDcnCurrent1dayBytesFrames65Rcv, facilityPhysInstValueEntry=facilityPhysInstValueEntry, macTxShelfConnectionCurrent15minElapsedTime=macTxShelfConnectionCurrent15minElapsedTime, macRxDcnCurrent15minBroadcastFramesRcv=macRxDcnCurrent15minBroadcastFramesRcv, lbcnFacilityHistorical1weekHigh=lbcnFacilityHistorical1weekHigh, terminPointPhysInstValueFiberConnAttenuation=terminPointPhysInstValueFiberConnAttenuation, lldpFrameRxFacilityCurrent15minLLDPFrameRxDiscards=lldpFrameRxFacilityCurrent15minLLDPFrameRxDiscards, frTrmt2FacilityHistorical15minPauseFrames=frTrmt2FacilityHistorical15minPauseFrames, facilityDataThresholdBERCEFecHT15min=facilityDataThresholdBERCEFecHT15min, macErrRxDcnHistorical1dayUndersizedFramesRcv=macErrRxDcnHistorical1dayUndersizedFramesRcv, otuFecFacilityHistorical1dayES=otuFecFacilityHistorical1dayES, frRcv2FacilityCurrent15minTable=frRcv2FacilityCurrent15minTable, frTrmt2FacilityHistorical1dayPauseFrames=frTrmt2FacilityHistorical1dayPauseFrames, endOfPmOptMuxPhysRecord=endOfPmOptMuxPhysRecord, brTxOptMuxHistorical1weekLow=brTxOptMuxHistorical1weekLow, macErrRxDcnCurrent1dayOversizedFramesRcv=macErrRxDcnCurrent1dayOversizedFramesRcv, l2PortTxFacilityHistorical15minBytesFrames1519Trmt=l2PortTxFacilityHistorical15minBytesFrames1519Trmt, ampInEqptHistorical1weekLow=ampInEqptHistorical1weekLow, frRcv1FacilityCurrent15minEntry=frRcv1FacilityCurrent15minEntry, otuFecFacilityHistorical1dayCE=otuFecFacilityHistorical1dayCE, frRcv2FacilityCurrent15minBytes=frRcv2FacilityCurrent15minBytes, frRcv2FacilityCurrent1dayPauseFrames=frRcv2FacilityCurrent1dayPauseFrames, pcs1FacilityCurrent15minTable=pcs1FacilityCurrent15minTable, tcmCFacilityHistorical1dayES=tcmCFacilityHistorical1dayES, endOfPcs2FacilityHistorical15minTable=endOfPcs2FacilityHistorical15minTable, lldpFrameRxFacilityHistorical15minValidFlag=lldpFrameRxFacilityHistorical15minValidFlag, ampInEqptHistorical15minHigh=ampInEqptHistorical15minHigh, pcsRxFacilityHistorical15minTable=pcsRxFacilityHistorical15minTable, endOfOscPwrOptMuxHistorical1dayTable=endOfOscPwrOptMuxHistorical1dayTable, frRcv3FacilityCurrent15minBytesFrames64Rcv=frRcv3FacilityCurrent15minBytesFrames64Rcv, facilityDataThresholdSESTcmbHT1day=facilityDataThresholdSESTcmbHT1day, frRcv3FacilityCurrent1dayBytesFrames256Rcv=frRcv3FacilityCurrent1dayBytesFrames256Rcv, macTxShelfConnectionHistorical1dayDiscardedFramesTrmt=macTxShelfConnectionHistorical1dayDiscardedFramesTrmt, endOfFec2FacilityCurrent15minTable=endOfFec2FacilityCurrent15minTable, latencyFacilityHistorical1dayValidFlag=latencyFacilityHistorical1dayValidFlag, oscOptOptMuxHistorical1weekEntry=oscOptOptMuxHistorical1weekEntry, frRcv2FacilityCurrent15minCrcFrames=frRcv2FacilityCurrent15minCrcFrames, pmEqptPhysical=pmEqptPhysical, pmDcnData=pmDcnData, facilityPhysInstValueLocalOscTemp=facilityPhysInstValueLocalOscTemp, l2PortRxFacilityHistorical1dayValidFlag=l2PortRxFacilityHistorical1dayValidFlag, l2PortTxFacilityHistorical15minBroadcastFramesTrmt=l2PortTxFacilityHistorical15minBroadcastFramesTrmt, pcs4FacilityHistorical15minCV=pcs4FacilityHistorical15minCV, byteTrmtFacilityCurrent1dayEntry=byteTrmtFacilityCurrent1dayEntry, pcs2FacilityHistorical1dayTable=pcs2FacilityHistorical1dayTable, tcmAFacilityCurrent1dayBbe=tcmAFacilityCurrent1dayBbe, msFacilityHistorical1dayNumber=msFacilityHistorical1dayNumber, muxFacilityCurrent1daySES=muxFacilityCurrent1daySES, lldpTLVFacilityHistorical1dayAgeOuts=lldpTLVFacilityHistorical1dayAgeOuts, brTxOptMuxHistorical1weekHigh=brTxOptMuxHistorical1weekHigh, facilityDataThresholdBBESHT1day=facilityDataThresholdBBESHT1day, optMuxPhysThresholdConfigurableOpticalOutputPwrHigh=optMuxPhysThresholdConfigurableOpticalOutputPwrHigh, pumpPwrOptMuxHistorical1dayHigh=pumpPwrOptMuxHistorical1dayHigh, otuFecFacilityCurrent15minSES=otuFecFacilityCurrent15minSES, pcs4FacilityCurrent1dayBBE=pcs4FacilityCurrent1dayBBE, sarLinkTrmtFacilityHistorical15minEntry=sarLinkTrmtFacilityHistorical15minEntry, brTxOptMuxHistorical15minMean=brTxOptMuxHistorical15minMean, facilityDataThresholdCVSHT15min=facilityDataThresholdCVSHT15min, endOfCfotFacilityHistorical1dayTable=endOfCfotFacilityHistorical1dayTable, macErrRxShelfConnectionCurrent1dayEntry=macErrRxShelfConnectionCurrent1dayEntry, eqptPhysInstValueTable=eqptPhysInstValueTable, frRcv2DcnHistorical15minPauseFrames=frRcv2DcnHistorical15minPauseFrames, facilityDataThresholdBBELHT15min=facilityDataThresholdBBELHT15min, frRcv1FacilityHistorical1dayNumber=frRcv1FacilityHistorical1dayNumber, sarLinkTrmtFacilityHistorical1dayES=sarLinkTrmtFacilityHistorical1dayES, tcmCFacilityHistorical1daySES=tcmCFacilityHistorical1daySES, dsFacilityHistorical1dayDS=dsFacilityHistorical1dayDS, facilityPhysInstValueDifferentialGroupDelay=facilityPhysInstValueDifferentialGroupDelay, latencyFacilityHistorical15minValidFlag=latencyFacilityHistorical15minValidFlag, eqptPhysInstValueTemp=eqptPhysInstValueTemp, macSzRxDcnCurrent15minTable=macSzRxDcnCurrent15minTable, tcmCFacilityCurrent1dayES=tcmCFacilityCurrent1dayES, facilityDataThresholdESTcmbHT1day=facilityDataThresholdESTcmbHT1day, tcmBFacilityCurrent1dayTable=tcmBFacilityCurrent1dayTable, endOfPcs1FacilityCurrent1dayTable=endOfPcs1FacilityCurrent1dayTable, l2PortRxFacilityCurrent1dayOversizedFramesRcv=l2PortRxFacilityCurrent1dayOversizedFramesRcv, lldpTLVRxFacilityCurrent1dayTLVRxUnknown=lldpTLVRxFacilityCurrent1dayTLVRxUnknown, endOfFacilityPhysInstValueTable=endOfFacilityPhysInstValueTable, cdcFacilityHistorical15minEntry=cdcFacilityHistorical15minEntry, atRcvOptMuxHistorical1dayTable=atRcvOptMuxHistorical1dayTable, tcmBFacilityHistorical15minTimeStamp=tcmBFacilityHistorical15minTimeStamp, macTxDcnCurrent15minElapsedTime=macTxDcnCurrent15minElapsedTime, endOfQfactFacilityHistorical1weekTable=endOfQfactFacilityHistorical1weekTable, lldpTLVFacilityCurrent1dayTable=lldpTLVFacilityCurrent1dayTable, frRcv2DcnCurrent15minBytes=frRcv2DcnCurrent15minBytes, macIcTxShelfConnectionHistorical1dayFramesTrmt=macIcTxShelfConnectionHistorical1dayFramesTrmt, optMuxPhysThresholdLaserTempLowThres=optMuxPhysThresholdLaserTempLowThres, facilityDataThresholdESSHT1day=facilityDataThresholdESSHT1day, macIcTxShelfConnectionHistorical15minNumber=macIcTxShelfConnectionHistorical15minNumber, frRcv3FacilityHistorical15minTimeStamp=frRcv3FacilityHistorical15minTimeStamp, pmOptMuxDataThreshold=pmOptMuxDataThreshold, endOfDiscsBlockFacilityHistorical1dayTable=endOfDiscsBlockFacilityHistorical1dayTable, frTrmt1FacilityHistorical15minNumber=frTrmt1FacilityHistorical15minNumber, tcmCFacilityCurrent15minES=tcmCFacilityCurrent15minES, lldpTLVFacilityCurrent15minTLVUnknown=lldpTLVFacilityCurrent15minTLVUnknown, macSzRxShelfConnectionCurrent15minBytesFrames64Rcv=macSzRxShelfConnectionCurrent15minBytesFrames64Rcv, optFacilityHistorical15minHigh=optFacilityHistorical15minHigh, latencyFacilityHistorical1dayLow=latencyFacilityHistorical1dayLow, frRcv3FacilityHistorical1dayBytesFrames64Rcv=frRcv3FacilityHistorical1dayBytesFrames64Rcv, frRcv4FacilityHistorical1dayNumber=frRcv4FacilityHistorical1dayNumber, otuFecFacilityHistorical1dayUBE=otuFecFacilityHistorical1dayUBE, frRcv1FacilityHistorical1dayBytes=frRcv1FacilityHistorical1dayBytes, endOfLldpFrameTxFacilityHistorical1dayTable=endOfLldpFrameTxFacilityHistorical1dayTable, pcs2FacilityCurrent1dayTable=pcs2FacilityCurrent1dayTable, byteTrmtFacilityCurrent15minElapsedTime=byteTrmtFacilityCurrent15minElapsedTime, ampEqptHistorical1weekValidFlag=ampEqptHistorical1weekValidFlag, frRcv3FacilityHistorical1dayFragmentFramesRcv=frRcv3FacilityHistorical1dayFragmentFramesRcv, oprOptMuxHistorical15minTable=oprOptMuxHistorical15minTable, lldpFrameFacilityHistorical15minTimeStamp=lldpFrameFacilityHistorical15minTimeStamp, macRxDcnHistorical15minBroadcastFramesRcv=macRxDcnHistorical15minBroadcastFramesRcv, endOfByteTrmtFacilityHistorical1dayTable=endOfByteTrmtFacilityHistorical1dayTable, rndTrpDlyFacilityHistorical1dayLow=rndTrpDlyFacilityHistorical1dayLow, cfotFacilityHistorical15minValidFlag=cfotFacilityHistorical15minValidFlag, frTrmt2FacilityCurrent15minEntry=frTrmt2FacilityCurrent15minEntry, discsBlockFacilityCurrent1dayEntry=discsBlockFacilityCurrent1dayEntry, lbcnFacilityHistorical1weekEntry=lbcnFacilityHistorical1weekEntry, pcs1FacilityHistorical15minSE=pcs1FacilityHistorical15minSE, macErrRxDcnCurrent1dayUndersizedFramesRcv=macErrRxDcnCurrent1dayUndersizedFramesRcv, frTrmt1FacilityCurrent1dayEntry=frTrmt1FacilityCurrent1dayEntry, lbcnFacilityHistorical1dayEntry=lbcnFacilityHistorical1dayEntry, oduFacilityHistorical15minTable=oduFacilityHistorical15minTable, lldpFrameTxFacilityHistorical1dayValidFlag=lldpFrameTxFacilityHistorical1dayValidFlag, atrcvDcnHistorical1weekNumber=atrcvDcnHistorical1weekNumber, pcsRxFacilityCurrent15minTable=pcsRxFacilityCurrent15minTable, oprFacilityHistorical1dayLow=oprFacilityHistorical1dayLow, attrmtOptMuxHistorical1weekValidFlag=attrmtOptMuxHistorical1weekValidFlag, pmOptMuxData=pmOptMuxData, facilityDataThresholdUASTcmaHT15min=facilityDataThresholdUASTcmaHT15min, cfotFacilityHistorical15minTimeStamp=cfotFacilityHistorical15minTimeStamp, gfpfrFacilityHistorical1dayTHecDiscardedFrames=gfpfrFacilityHistorical1dayTHecDiscardedFrames, atRcvOptMuxHistorical15minEntry=atRcvOptMuxHistorical15minEntry, endOfMacTxShelfConnectionCurrent1dayTable=endOfMacTxShelfConnectionCurrent1dayTable, ampEqptHistorical1dayLow=ampEqptHistorical1dayLow, tcmCFacilityHistorical1dayEntry=tcmCFacilityHistorical1dayEntry, macTxShelfConnectionCurrent1dayBroadcastFramesTrmt=macTxShelfConnectionCurrent1dayBroadcastFramesTrmt, muxFacilityHistorical15minCrc=muxFacilityHistorical15minCrc, utlRxFacilityHistorical1dayUtlMean=utlRxFacilityHistorical1dayUtlMean, fec2FacilityCurrent15minUBE=fec2FacilityCurrent15minUBE, pumpPwrOptMuxHistorical1weekTimeStamp=pumpPwrOptMuxHistorical1weekTimeStamp, cfotFacilityHistorical1dayTimeStamp=cfotFacilityHistorical1dayTimeStamp, endOfUtlTxFacilityCurrent15minTable=endOfUtlTxFacilityCurrent15minTable, lldpFrameRxFacilityHistorical1dayLLDPFrameRxDiscards=lldpFrameRxFacilityHistorical1dayLLDPFrameRxDiscards, endOfMsFacilityHistorical1dayTable=endOfMsFacilityHistorical1dayTable, macErrRxDcnCurrent1dayElapsedTime=macErrRxDcnCurrent1dayElapsedTime, muxFacilityHistorical1dayCrc=muxFacilityHistorical1dayCrc, oscGainOptMuxHistorical1weekTable=oscGainOptMuxHistorical1weekTable, sarLinkTrmtFacilityHistorical1dayValidFlag=sarLinkTrmtFacilityHistorical1dayValidFlag, pumpPwrOptMuxHistorical1weekValidFlag=pumpPwrOptMuxHistorical1weekValidFlag, otuFecFacilityHistorical1dayTable=otuFecFacilityHistorical1dayTable, oprDcnHistorical1dayEntry=oprDcnHistorical1dayEntry, facilityPhysInstValuePrbsElapsedTime=facilityPhysInstValuePrbsElapsedTime, l2PortRxFacilityHistorical1dayTable=l2PortRxFacilityHistorical1dayTable, oscPwrOptMuxHistorical15minLow=oscPwrOptMuxHistorical15minLow, optFacilityHistorical1weekTimeStamp=optFacilityHistorical1weekTimeStamp, brTxOptMuxHistorical1dayMean=brTxOptMuxHistorical1dayMean, tcmAFacilityHistorical1dayValidFlag=tcmAFacilityHistorical1dayValidFlag, lFacilityHistorical15minCV=lFacilityHistorical15minCV, ampEqptHistorical15minNumber=ampEqptHistorical15minNumber, l2PortRxFacilityHistorical1dayNumber=l2PortRxFacilityHistorical1dayNumber, macSzRxDcnCurrent15minBytesFrames128Rcv=macSzRxDcnCurrent15minBytesFrames128Rcv, endOfLldpFrameRxFacilityCurrent1dayTable=endOfLldpFrameRxFacilityCurrent1dayTable, l2PortTxFacilityCurrent1dayBroadcastFramesTrmt=l2PortTxFacilityCurrent1dayBroadcastFramesTrmt, macRxDcnCurrent15minEntry=macRxDcnCurrent15minEntry, frTrmt1FacilityCurrent15minTable=frTrmt1FacilityCurrent15minTable, atrcvDcnHistorical1weekTable=atrcvDcnHistorical1weekTable, dsOptMuxHistorical1dayTable=dsOptMuxHistorical1dayTable, lldpFrameRxFacilityHistorical15minEntry=lldpFrameRxFacilityHistorical15minEntry, endOfOscPwrOptMuxHistorical1weekTable=endOfOscPwrOptMuxHistorical1weekTable, dsFacilityHistorical1dayEntry=dsFacilityHistorical1dayEntry, atrcvDcnHistorical1weekEntry=atrcvDcnHistorical1weekEntry, frTrmt1FacilityHistorical1dayTimeStamp=frTrmt1FacilityHistorical1dayTimeStamp, macIcRxShelfConnectionCurrent1dayCrcErrorsRcv=macIcRxShelfConnectionCurrent1dayCrcErrorsRcv, endOfPcs1FacilityCurrent15minTable=endOfPcs1FacilityCurrent15minTable, lFacilityHistorical1dayTimeStamp=lFacilityHistorical1dayTimeStamp, macIcTxShelfConnectionHistorical1dayBytesTrmt=macIcTxShelfConnectionHistorical1dayBytesTrmt, endOfFrTrmt2FacilityCurrent1dayTable=endOfFrTrmt2FacilityCurrent1dayTable, l2PortTxFacilityHistorical15minEntry=l2PortTxFacilityHistorical15minEntry, oduFacilityCurrent15minUAS=oduFacilityCurrent15minUAS, latencyFacilityHistorical1weekMean=latencyFacilityHistorical1weekMean, pcs1FacilityCurrent1dayTable=pcs1FacilityCurrent1dayTable, endOfMacSzRxShelfConnectionCurrent15minTable=endOfMacSzRxShelfConnectionCurrent15minTable, gfpfrFacilityCurrent1dayTable=gfpfrFacilityCurrent1dayTable, qfactFacilityHistorical15minLow=qfactFacilityHistorical15minLow, pmShelfConnectionData=pmShelfConnectionData, endOfFrTrmt1FacilityCurrent15minTable=endOfFrTrmt1FacilityCurrent15minTable, dgdFacilityHistorical1weekLow=dgdFacilityHistorical1weekLow, pcsTxFacilityHistorical1dayBBETX=pcsTxFacilityHistorical1dayBBETX, optMuxPhysInstValueEffectiveGainNtoR=optMuxPhysInstValueEffectiveGainNtoR, frRcv2DcnHistorical1dayNumber=frRcv2DcnHistorical1dayNumber, utlTxFacilityHistorical15minTimeStamp=utlTxFacilityHistorical15minTimeStamp, cdFacilityHistorical1dayTable=cdFacilityHistorical1dayTable, dsFacilityCurrent15minDS=dsFacilityCurrent15minDS, rsFacilityHistorical15minTimeStamp=rsFacilityHistorical15minTimeStamp, muxFacilityCurrent15minTable=muxFacilityCurrent15minTable, gfpfrFacilityHistorical15minTimeStamp=gfpfrFacilityHistorical15minTimeStamp, optMuxPhysInstValuePumpLaser1Temp=optMuxPhysInstValuePumpLaser1Temp, attrmtOptMuxHistorical1weekLow=attrmtOptMuxHistorical1weekLow, endOfL2PortTxFacilityHistorical15minTable=endOfL2PortTxFacilityHistorical15minTable, lldpTLVFacilityCurrent15minAgeOuts=lldpTLVFacilityCurrent15minAgeOuts, checfrFacilityCurrent1dayTypeHecCorrectedFrames=checfrFacilityCurrent1dayTypeHecCorrectedFrames, lFacilityCurrent15minES=lFacilityCurrent15minES, pumpPwrOptMuxHistorical1weekMean=pumpPwrOptMuxHistorical1weekMean, rsFacilityHistorical1dayES=rsFacilityHistorical1dayES, macIcTxShelfConnectionHistorical15minTable=macIcTxShelfConnectionHistorical15minTable, endOfMacErrRxShelfConnectionCurrent15minTable=endOfMacErrRxShelfConnectionCurrent15minTable, otuFecFacilityHistorical15minCE=otuFecFacilityHistorical15minCE, lldpFrameRxFacilityHistorical1dayNumber=lldpFrameRxFacilityHistorical1dayNumber, ampEqptHistorical15minValidFlag=ampEqptHistorical15minValidFlag, macRxShelfConnectionCurrent15minTable=macRxShelfConnectionCurrent15minTable, macErrRxDcnHistorical1dayTimeStamp=macErrRxDcnHistorical1dayTimeStamp, muxFacilityCurrent1dayEntry=muxFacilityCurrent1dayEntry, lldpTLVFacilityHistorical1dayTLVUnknown=lldpTLVFacilityHistorical1dayTLVUnknown, oprDcnHistorical1weekEntry=oprDcnHistorical1weekEntry, snrFacilityHistorical1dayEntry=snrFacilityHistorical1dayEntry)
mibBuilder.exportSymbols("ADVA-FSPR7-PM-MIB", atrcvDcnHistorical15minLow=atrcvDcnHistorical15minLow, macIcRxShelfConnectionCurrent1dayEntry=macIcRxShelfConnectionCurrent1dayEntry, lldpTLVTxFacilityCurrent15minTable=lldpTLVTxFacilityCurrent15minTable, ampEqptHistorical15minTimeStamp=ampEqptHistorical15minTimeStamp, oduFacilityHistorical15minNumber=oduFacilityHistorical15minNumber, sFacilityHistorical15minTimeStamp=sFacilityHistorical15minTimeStamp, optFacilityHistorical1weekMean=optFacilityHistorical1weekMean, lldpFrameRxFacilityHistorical1dayTimeStamp=lldpFrameRxFacilityHistorical1dayTimeStamp, frRcv3FacilityCurrent15minOversizedFramesRcv=frRcv3FacilityCurrent15minOversizedFramesRcv, optDcnHistorical1weekValidFlag=optDcnHistorical1weekValidFlag, lFacilityHistorical1dayValidFlag=lFacilityHistorical1dayValidFlag, macRxDcnCurrent1dayOctRcv=macRxDcnCurrent1dayOctRcv, lbcnDcnHistorical1weekMean=lbcnDcnHistorical1weekMean, rndTrpDlyFacilityHistorical1dayEntry=rndTrpDlyFacilityHistorical1dayEntry, lldpTLVTxFacilityCurrent1dayElapsedTime=lldpTLVTxFacilityCurrent1dayElapsedTime, cdFacilityHistorical1weekEntry=cdFacilityHistorical1weekEntry, macTxDcnHistorical1dayBytesTrmt=macTxDcnHistorical1dayBytesTrmt, estSigGainOptMuxHistorical1dayEntry=estSigGainOptMuxHistorical1dayEntry, endOfEstSigGainOptMuxHistorical1weekTable=endOfEstSigGainOptMuxHistorical1weekTable, optOptMuxHistorical15minNumber=optOptMuxHistorical15minNumber, optOptMuxHistorical1dayValidFlag=optOptMuxHistorical1dayValidFlag, lFacilityHistorical15minUAS=lFacilityHistorical15minUAS, endOfPumpPwrOptMuxHistorical15minTable=endOfPumpPwrOptMuxHistorical15minTable, frRcv1FacilityHistorical1dayEntry=frRcv1FacilityHistorical1dayEntry, frTrmt2FacilityHistorical15minEntry=frTrmt2FacilityHistorical15minEntry, frRcv4FacilityCurrent15minTable=frRcv4FacilityCurrent15minTable, lldpFrameRxFacilityCurrent1dayLLDPFrameRxDiscards=lldpFrameRxFacilityCurrent1dayLLDPFrameRxDiscards, oscOptOptMuxHistorical1dayHigh=oscOptOptMuxHistorical1dayHigh, endOfRndTrpDlyFacilityHistorical15minTable=endOfRndTrpDlyFacilityHistorical15minTable, qfactFacilityHistorical15minValidFlag=qfactFacilityHistorical15minValidFlag, lldpTLVRxFacilityHistorical1dayValidFlag=lldpTLVRxFacilityHistorical1dayValidFlag, frTrmt1FacilityCurrent1dayElapsedTime=frTrmt1FacilityCurrent1dayElapsedTime, frRcv4FacilityHistorical1dayBytes=frRcv4FacilityHistorical1dayBytes, atRcvOptMuxHistorical1weekLow=atRcvOptMuxHistorical1weekLow, endOfAtrcvDcnHistorical15minTable=endOfAtrcvDcnHistorical15minTable, utlRxFacilityHistorical15minValidFlag=utlRxFacilityHistorical15minValidFlag, dcnPhysThresholdEntry=dcnPhysThresholdEntry, endOfDsFacilityHistorical1dayTable=endOfDsFacilityHistorical1dayTable, sarLinkTrmtFacilityHistorical1dayTimeStamp=sarLinkTrmtFacilityHistorical1dayTimeStamp, optMuxPhysThresholdOscPwrRcvHighThres=optMuxPhysThresholdOscPwrRcvHighThres, voltInpEqptHistorical1weekValidFlag=voltInpEqptHistorical1weekValidFlag, utlRxFacilityCurrent15minTable=utlRxFacilityCurrent15minTable, macSzRxDcnCurrent1dayElapsedTime=macSzRxDcnCurrent1dayElapsedTime, msFacilityCurrent15minSES=msFacilityCurrent15minSES, optFacilityHistorical15minValidFlag=optFacilityHistorical15minValidFlag, frRcv1FacilityHistorical15minNumber=frRcv1FacilityHistorical15minNumber, gfpfrFacilityCurrent15minTHecDiscardedFrames=gfpfrFacilityCurrent15minTHecDiscardedFrames, l2PortTxFacilityHistorical15minBytesFrames65Trmt=l2PortTxFacilityHistorical15minBytesFrames65Trmt, brTxOptMuxHistorical1dayNumber=brTxOptMuxHistorical1dayNumber, gfpfrFacilityHistorical1dayValidFlag=gfpfrFacilityHistorical1dayValidFlag, optFacilityHistorical1dayHigh=optFacilityHistorical1dayHigh, frRcv3FacilityHistorical1dayBytesFrames128Rcv=frRcv3FacilityHistorical1dayBytesFrames128Rcv, frRcv1FacilityCurrent1dayPauseFrames=frRcv1FacilityCurrent1dayPauseFrames, skewFacilityHistorical1dayNumber=skewFacilityHistorical1dayNumber, frRcv2FacilityHistorical1dayEntry=frRcv2FacilityHistorical1dayEntry, macIcRxShelfConnectionHistorical15minEntry=macIcRxShelfConnectionHistorical15minEntry, msFacilityCurrent15minUAS=msFacilityCurrent15minUAS, macIcRxShelfConnectionCurrent15minOctRcv=macIcRxShelfConnectionCurrent15minOctRcv, oscPwrOptMuxHistorical1weekTimeStamp=oscPwrOptMuxHistorical1weekTimeStamp, otuFacilityHistorical1dayBbe=otuFacilityHistorical1dayBbe, frRcv4FacilityHistorical15minCrcFrames=frRcv4FacilityHistorical15minCrcFrames, lldpFrameTxFacilityCurrent1dayElapsedTime=lldpFrameTxFacilityCurrent1dayElapsedTime, sFacilityCurrent15minEntry=sFacilityCurrent15minEntry, endOfMacRxDcnCurrent15minTable=endOfMacRxDcnCurrent15minTable, macSzRxDcnHistorical15minNumber=macSzRxDcnHistorical15minNumber, frRcv3FacilityCurrent15minFragmentFramesRcv=frRcv3FacilityCurrent15minFragmentFramesRcv, lldpFrameFacilityHistorical15minTable=lldpFrameFacilityHistorical15minTable, oprOptMuxHistorical1weekTable=oprOptMuxHistorical1weekTable, pmFacilityData=pmFacilityData, lFacilityHistorical1dayEntry=lFacilityHistorical1dayEntry, atrcvDcnHistorical15minHigh=atrcvDcnHistorical15minHigh, frRcv3FacilityHistorical1dayBytesFrames1024Rcv=frRcv3FacilityHistorical1dayBytesFrames1024Rcv, pmOptMuxPhysValue=pmOptMuxPhysValue, lldpFrameRxFacilityCurrent15minTable=lldpFrameRxFacilityCurrent15minTable, cdFacilityHistorical1dayHigh=cdFacilityHistorical1dayHigh, optOptMuxHistorical1dayLow=optOptMuxHistorical1dayLow, oprOptMuxHistorical15minLow=oprOptMuxHistorical15minLow, oscOptOptMuxHistorical1weekNumber=oscOptOptMuxHistorical1weekNumber, facilityPhysThresholdLaserTempHighThres=facilityPhysThresholdLaserTempHighThres, oduFacilityCurrent15minTable=oduFacilityCurrent15minTable, sFacilityCurrent1dayElapsedTime=sFacilityCurrent1dayElapsedTime, endOfL2PortTxFacilityHistorical1dayTable=endOfL2PortTxFacilityHistorical1dayTable, rsFacilityHistorical15minBBE=rsFacilityHistorical15minBBE, estSigGainOptMuxHistorical1weekHigh=estSigGainOptMuxHistorical1weekHigh, pmDcnPhysValue=pmDcnPhysValue, lldpTLVTxFacilityHistorical1dayEntry=lldpTLVTxFacilityHistorical1dayEntry, endOfCfotFacilityHistorical1weekTable=endOfCfotFacilityHistorical1weekTable, oprOptMuxHistorical1weekLow=oprOptMuxHistorical1weekLow, pcsRxFacilityCurrent1dayBBE=pcsRxFacilityCurrent1dayBBE, facilityPhysInstValueSignalToNoiseRatio=facilityPhysInstValueSignalToNoiseRatio, pcs3FacilityCurrent15minEntry=pcs3FacilityCurrent15minEntry, frRcv3FacilityCurrent1dayUndersizedFramesRcv=frRcv3FacilityCurrent1dayUndersizedFramesRcv, latencyFacilityHistorical1weekValidFlag=latencyFacilityHistorical1weekValidFlag, otuFecFacilityCurrent1dayUBE=otuFecFacilityCurrent1dayUBE, voltInpEqptHistorical1dayTimeStamp=voltInpEqptHistorical1dayTimeStamp, facilityPhysInstValuePrbsAvgBER=facilityPhysInstValuePrbsAvgBER, endOfFrRcv3FacilityCurrent1dayTable=endOfFrRcv3FacilityCurrent1dayTable, lbcnDcnHistorical15minNumber=lbcnDcnHistorical15minNumber, skewFacilityHistorical15minTable=skewFacilityHistorical15minTable, macSzRxShelfConnectionHistorical15minBytesFrames128Rcv=macSzRxShelfConnectionHistorical15minBytesFrames128Rcv, fec2FacilityHistorical15minCE=fec2FacilityHistorical15minCE, otuFacilityHistorical15minSES=otuFacilityHistorical15minSES, endOfPmFacilityPhysValue=endOfPmFacilityPhysValue, frRcv1FacilityHistorical1dayTable=frRcv1FacilityHistorical1dayTable, oscOptOptMuxHistorical1weekLow=oscOptOptMuxHistorical1weekLow, tcmAFacilityHistorical15minUAS=tcmAFacilityHistorical15minUAS, eqptPhysThresholdSubTempHigh=eqptPhysThresholdSubTempHigh, optDcnHistorical1dayLow=optDcnHistorical1dayLow, pcs1FacilityHistorical1dayTable=pcs1FacilityHistorical1dayTable)
